self()->hasDataSnippets(:
--------------------
self()->generateDebugCounterBump(:
--------------------
self()->isTargetSnippetOrOutOfLine(:
--------------------
self()->canBeAffectedByStoreTagStalls(:
--------------------
self()->generateDebugCounterBump(:
--------------------
self()->removeUnavailableRegisters(:
--------------------
self()->needsNormalizationBeforeShifts(:
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/p/codegen/J9CodeGenerator.cpp:       self()->needsNormalizationBeforeShifts() &&
--------------------
self()->nodeMayCauseException(:
--------------------
self()->codegenSupportsLoadlessBNDCheck(:
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/z/codegen/J9CodeGenerator.cpp:   if (self()->codegenSupportsLoadlessBNDCheck() &&
--------------------
self()->branchesAreExpensive(:
--------------------
self()->emitTargetAddressSnippets(:
--------------------
self()->allowGlobalRegisterAcrossBranch(:
--------------------
self()->supportsInliningOfIsInstance(:
--------------------
self()->supportsHighWordFacility(:
--------------------
self()->isRotateAndMask(:
--------------------
self()->getSupportsTenuredObjectAlignment(:
--------------------
self()->arrayInitMinimumNumberOfBytes(:
--------------------
self()->isPreservedRegister(:
--------------------
self()->canFoldLargeOffsetInAddressing(:
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/codegen/J9CodeGenerator.cpp:        (self()->canFoldLargeOffsetInAddressing() || (TR::Compiler->vm.heapBaseAddress() == 0)) &&
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/codegen/J9CodeGenerator.cpp:            (self()->canFoldLargeOffsetInAddressing() || parent->getSecondChild()->getOpCode().isLoadConst()))) &&
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/codegen/J9CodeGenerator.cpp:            if (!self()->canFoldLargeOffsetInAddressing())
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/codegen/J9CodeGenerator.cpp:               !self()->canFoldLargeOffsetInAddressing() &&
--------------------
self()->getInternalPtrMapBit(:
--------------------
self()->prepareForGRA(:
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/codegen/J9CodeGenerator.cpp:   if (!self()->prepareForGRA())
--------------------
self()->isAddressScaleIndexSupported(:
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/codegen/J9CodeGenerator.cpp:        self()->isAddressScaleIndexSupported((1 << TR::Compiler->om.compressedReferenceShiftOffset())))))
--------------------
self()->constLoadNeedsLiteralFromPool(:
--------------------
self()->opCodeIsNoOpOnThisPlatform(:
--------------------
self()->arithmeticNeedsLiteralFromPool(:
--------------------
self()->shouldValueBeInACommonedNode(:
--------------------
self()->getMaximumNumberOfFPRsAllowedAcrossEdge(:
--------------------
self()->arrayTranslateTableRequiresAlignment(:
--------------------
self()->isObjectOfSizeWorthAligning(:
--------------------
self()->supports32bitAiadd(:
--------------------
self()->getMaximumNumbersOfAssignableVRs(:
--------------------
self()->mulDecompositionCostIsJustified(:
--------------------
self()->getRegisterMapInfoBitsMask(:
--------------------
self()->supportsLengthMinusOneForMemoryOpts(:
--------------------
self()->supportsDebugCounters(:
--------------------
self()->excludeInvariantsFromGRAEnabled(:
--------------------
self()->apply32BitLabelTableRelocation(:
--------------------
self()->getSizeOfCombinedBuffer(:
--------------------
self()->splitBlockEntry(:
--------------------
self()->getMaximumNumberOfGPRsAllowedAcrossEdge(:
--------------------
self()->isBranchInstruction(:
--------------------
self()->apply24BitLabelRelativeRelocation(:
--------------------
self()->getSupportsNewObjectAlignment(:
--------------------
self()->generateDebugCounterBump(:
--------------------
self()->apply32BitLabelRelativeRelocation(:
--------------------
self()->computeRegisterSaveDescription(:
--------------------
self()->startInternalControlFlow(:
--------------------
self()->updateSnippetMapWithRSD(:
--------------------
self()->prepareRegistersForAssignment(:
--------------------
self()->getMinByteForLongCompareNarrower(:
--------------------
self()->setNextAvailableBlockIndex(:
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/codegen/J9CodeGenerator.cpp:   self()->setNextAvailableBlockIndex(self()->comp()->getFlowGraph()->getNextNodeNumber() + 1);
--------------------
self()->estimateBinaryLength(:
--------------------
self()->IsInMemoryType(:
--------------------
self()->setOnDemandLiteralPoolRun(:
--------------------
self()->codegenMulDecomposition(:
--------------------
self()->getSupportsOpCodeForAutoSIMD(:
--------------------
self()->hasTargetAddressSnippets(:
--------------------
self()->getMaximumNumbersOfAssignableGPRs(:
--------------------
self()->getPreferredLoopUnrollFactor(:
--------------------
self()->endInternalControlFlow(:
--------------------
self()->apply16BitLabelRelativeRelocation(:
--------------------
self()->isInternalControlFlowReg(:
--------------------
self()->setVMThreadRequired(:
--------------------
self()->generateNop(:
--------------------
self()->arrayTranslateMinimumNumberOfElements(:
--------------------
self()->setUnavailableRegistersUsage(:
--------------------
self()->isLabelInstruction(:
--------------------
self()->getNextAvailableBlockIndex(:
--------------------
self()->dumpTargetAddressSnippets(:
--------------------
self()->considerTypeForGRA(:
--------------------
self()->isAlignmentInstruction(:
--------------------
self()->apply12BitLabelRelativeRelocation(:
--------------------
self()->getGlobalFPRsPreservedAcrossCalls(:
--------------------
self()->isReturnInstruction(:
--------------------
self()->canNullChkBeImplicit(:
--------------------
self()->isLiteralPoolOnDemandOn(:
--------------------
self()->supportsDirectIntegralLoadStoresFromLiteralPool(:
--------------------
self()->splitEdge(:
--------------------
self()->supportsDirectJNICallsForAOT(:
--------------------
self()->canTransformUnsafeCopyToArrayCopy(:
--------------------
self()->CodeGenerator(:
--------------------
self()->supportsSinglePrecisionSQRT(:
--------------------
self()->usesImplicit64BitGPRs(:
--------------------
self()->setEstimatedLocationsForDataSnippetLabels(:
--------------------
self()->setCurrentBlockIndex(:
/home/sam/2openj9-virtualization-searchForMethods/runtime/compiler/codegen/J9CodeGenerator.cpp:         self()->setCurrentBlockIndex(block->getNumber());
--------------------
self()->supportsPassThroughCopyToNewVirtualRegister(:
--------------------
self()->arrayTranslateAndTestMinimumNumberOfIterations(:
--------------------
self()->bitwiseOpNeedsLiteralFromPool(:
--------------------
self()->ilOpCodeIsSupported(:
--------------------
self()->materializesLargeConstants(:
--------------------
self()->internalPointerSupportImplemented(:
--------------------
self()->getMaximumNumberOfGPRsAllowedAcrossEdge(:
--------------------
self()->doRegisterAssignment(:
--------------------
self()->getGlobalHPRFromGPR(:
--------------------
self()->getCurrentBlockIndex(:
--------------------
self()->isGlobalRegisterAvailable(:
--------------------
self()->supportsTrapsInTMRegion(:
--------------------
self()->supportsFusedMultiplyAdd(:
--------------------
self()->lowerTreesWalk(:
--------------------
self()->bndsChkNeedsLiteralFromPool(:
--------------------
self()->getMaximumNumberOfVRFsAllowedAcrossEdge(:
--------------------
self()->enableLiteralPoolRegisterForGRA(:
--------------------
self()->setEstimatedLocationsForTargetAddressSnippetLabels(:
--------------------
self()->doBinaryEncoding(:
--------------------
self()->doPeephole(:
--------------------
self()->getGlobalGPRFromHPR(:
--------------------
self()->supportsComplexAddressing(:
--------------------
self()->getGlobalRegisterNumber(:
--------------------
self()->getSupportsEncodeUtf16BigWithSurrogateTest(:
--------------------
self()->getVMThreadGlobalRegisterNumber(:
--------------------
self()->buildRegisterMapForInstruction(:
--------------------
self()->supportsLongRegAllocation(:
--------------------
self()->considerTypeForGRA(:
--------------------
self()->considerTypeForGRA(:
--------------------
self()->getSupportsEncodeUtf16LittleWithSurrogateTest(:
--------------------
self()->getGlobalGPRsPreservedAcrossCalls(:
--------------------
self()->apply64BitLoadLabelRelativeRelocation(:
--------------------
self()->isSnippetMatched(:
--------------------
self()->apply32BitLoadLabelRelativeRelocation(:
--------------------
self()->supportsAtomicAdd(:
--------------------
self()->dumpDataSnippets(:
--------------------
self()->supportsOnDemandLiteralPool(:
--------------------
self()->codegenSupportsUnsignedIntegerDivide(:
--------------------
self()->isOutOfLineHotPath(:
--------------------
