hasDataSnippets()
generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,class TR_ScratchRegisterManager &)
isTargetSnippetOrOutOfLine(TR::Instruction *,TR::Instruction **,TR::Instruction **)
canBeAffectedByStoreTagStalls()
generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,TR::RegisterDependencyConditions *)
removeUnavailableRegisters(class TR_RegisterCandidate *,TR::Block **,class TR_BitVector &)
needsNormalizationBeforeShifts()
nodeMayCauseException(TR::Node *)
codegenSupportsLoadlessBNDCheck()
branchesAreExpensive()
emitTargetAddressSnippets()
allowGlobalRegisterAcrossBranch(class TR_RegisterCandidate *,TR::Node *)
supportsInliningOfIsInstance()
supportsHighWordFacility()
isRotateAndMask(TR::Node *)
getSupportsTenuredObjectAlignment()
arrayInitMinimumNumberOfBytes()
isPreservedRegister(int32_t)
canFoldLargeOffsetInAddressing()
getInternalPtrMapBit()
prepareForGRA()
isAddressScaleIndexSupported(int32_t)
constLoadNeedsLiteralFromPool(TR::Node *)
opCodeIsNoOpOnThisPlatform(TR::ILOpCode &)
arithmeticNeedsLiteralFromPool(TR::Node *)
shouldValueBeInACommonedNode(int64_t)
getMaximumNumberOfFPRsAllowedAcrossEdge(TR::Node *)
arrayTranslateTableRequiresAlignment(_Bool,_Bool)
isObjectOfSizeWorthAligning(uint32_t)
supports32bitAiadd()
getMaximumNumbersOfAssignableVRs()
mulDecompositionCostIsJustified(int,char [],char [],int64_t)
getRegisterMapInfoBitsMask()
supportsLengthMinusOneForMemoryOpts()
supportsDebugCounters(TR::DebugCounterInjectionPoint)
excludeInvariantsFromGRAEnabled()
apply32BitLabelTableRelocation(int32_t *,TR::LabelSymbol *)
getSizeOfCombinedBuffer()
splitBlockEntry(TR::Instruction *)
getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Block *)
isBranchInstruction(TR::Instruction *)
apply24BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *)
getSupportsNewObjectAlignment()
generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,class TR_ScratchRegisterManager &)
apply32BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *)
computeRegisterSaveDescription(class TR_BitVector *,_Bool)
startInternalControlFlow(TR::Instruction *)
updateSnippetMapWithRSD(TR::Instruction *,int32_t)
prepareRegistersForAssignment()
getMinByteForLongCompareNarrower()
setNextAvailableBlockIndex(int32_t)
estimateBinaryLength(TR::MemoryReference *)
IsInMemoryType(TR::DataType)
setOnDemandLiteralPoolRun(_Bool)
codegenMulDecomposition(int64_t)
getSupportsOpCodeForAutoSIMD(TR::ILOpCode,TR::DataType)
hasTargetAddressSnippets()
getMaximumNumbersOfAssignableGPRs()
getPreferredLoopUnrollFactor()
endInternalControlFlow(TR::Instruction *)
apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,int8_t,_Bool)
isInternalControlFlowReg(TR::Register *)
setVMThreadRequired(_Bool)
generateNop(TR::Node *,TR::Instruction *,enum TR_NOPKind)
arrayTranslateMinimumNumberOfElements(_Bool,_Bool)
setUnavailableRegistersUsage(TR_Array<class TR_BitVector> &,TR_Array<class TR_BitVector> &)
isLabelInstruction(TR::Instruction *)
getNextAvailableBlockIndex()
dumpTargetAddressSnippets(TR::FILE *)
considerTypeForGRA(TR::SymbolReference *)
isAlignmentInstruction(TR::Instruction *)
apply12BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,_Bool)
getGlobalFPRsPreservedAcrossCalls()
isReturnInstruction(TR::Instruction *)
canNullChkBeImplicit(TR::Node *)
isLiteralPoolOnDemandOn()
supportsDirectIntegralLoadStoresFromLiteralPool()
splitEdge(TR::Instruction *,_Bool,_Bool,TR::Instruction *,TR::list<TR::Instruction *> *,_Bool)
supportsDirectJNICallsForAOT()
canTransformUnsafeCopyToArrayCopy()
CodeGenerator()
supportsSinglePrecisionSQRT()
usesImplicit64BitGPRs(TR::Node *)
setEstimatedLocationsForDataSnippetLabels(int32_t)
setCurrentBlockIndex(int32_t)
supportsPassThroughCopyToNewVirtualRegister()
arrayTranslateAndTestMinimumNumberOfIterations()
bitwiseOpNeedsLiteralFromPool(TR::Node *,TR::Node *)
ilOpCodeIsSupported(TR::ILOpCodes)
materializesLargeConstants()
internalPointerSupportImplemented()
getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Node *)
doRegisterAssignment(enum TR_RegisterKinds)
getGlobalHPRFromGPR(TR_GlobalRegisterNumber)
getCurrentBlockIndex()
isGlobalRegisterAvailable(TR_GlobalRegisterNumber,TR::DataType)
supportsTrapsInTMRegion()
supportsFusedMultiplyAdd()
lowerTreesWalk(TR::Node *,TR::TreeTop *,vcount_t)
bndsChkNeedsLiteralFromPool(TR::Node *)
getMaximumNumberOfVRFsAllowedAcrossEdge(TR::Node *)
enableLiteralPoolRegisterForGRA()
setEstimatedLocationsForTargetAddressSnippetLabels(int32_t)
doBinaryEncoding()
doPeephole()
getGlobalGPRFromHPR(TR_GlobalRegisterNumber)
supportsComplexAddressing()
getGlobalRegisterNumber(uint32_t)
getSupportsEncodeUtf16BigWithSurrogateTest()
getVMThreadGlobalRegisterNumber()
buildRegisterMapForInstruction(class TR_GCStackMap *)
supportsLongRegAllocation()
considerTypeForGRA(TR::DataType)
considerTypeForGRA(TR::Node *)
getSupportsEncodeUtf16LittleWithSurrogateTest()
getGlobalGPRsPreservedAcrossCalls()
apply64BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *)
isSnippetMatched(TR::Snippet *,int32_t,TR::SymbolReference *)
apply32BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t)
supportsAtomicAdd()
dumpDataSnippets(TR::FILE *)
supportsOnDemandLiteralPool()
codegenSupportsUnsignedIntegerDivide()
isOutOfLineHotPath()