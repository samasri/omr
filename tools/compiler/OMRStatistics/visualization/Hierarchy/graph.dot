digraph {
	node [shape=box];
	rankdir=BT;
	edge[arrowhead="onormal"];
	"CS2::ABitVector::iterator" -> "CS2::ABitVector::Cursor"
	"CS2::Timer" -> "CS2::BSDTimer"
	"TR::GlobalSingletonAllocator" -> "CS2::stat_allocator"
	"CS2::stat_allocator" -> "TRPersistentMemoryAllocator"
	"TR::AutomaticSymbol" -> "OMR::AutomaticSymbol"
	"OMR::AutomaticSymbol" -> "TR::RegisterMappedSymbol"
	"TR::RegisterMappedSymbol" -> "OMR::RegisterMappedSymbol"
	"OMR::RegisterMappedSymbol" -> "TR::Symbol"
	"TR::Symbol" -> "OMR::Symbol"
	"TR::Block" -> "OMR::Block"
	"OMR::Block" -> "TR::CFGNode"
	"TR::CFGNode" -> "TR_Link1"
	"TR::LabelSymbol" -> "OMR::LabelSymbol"
	"OMR::LabelSymbol" -> "TR::Symbol"
	"TR::ResolvedMethodSymbol" -> "OMR::ResolvedMethodSymbol"
	"OMR::ResolvedMethodSymbol" -> "TR::MethodSymbol"
	"TR::MethodSymbol" -> "OMR::MethodSymbol"
	"OMR::MethodSymbol" -> "TR::Symbol"
	"TR::StaticSymbol" -> "OMR::StaticSymbol"
	"OMR::StaticSymbol" -> "TR::Symbol"
	"TR::Machine" -> "OMR::X86::AMD64::Machine"
	"OMR::X86::AMD64::Machine" -> "OMR::X86::Machine"
	"OMR::X86::Machine" -> "OMR::Machine"
	"TR_X86FPStackRegister" -> "TR::RealRegister"
	"TR::RealRegister" -> "OMR::X86::AMD64::RealRegister"
	"OMR::X86::AMD64::RealRegister" -> "OMR::X86::RealRegister"
	"OMR::X86::RealRegister" -> "OMR::RealRegister"
	"OMR::RealRegister" -> "TR::Register"
	"TR::Register" -> "OMR::X86::Register"
	"OMR::X86::Register" -> "OMR::Register"
	"TR::TreeEvaluator" -> "OMR::X86::AMD64::TreeEvaluator"
	"OMR::X86::AMD64::TreeEvaluator" -> "OMR::X86::TreeEvaluator"
	"OMR::X86::TreeEvaluator" -> "OMR::TreeEvaluator"
	"TR::CPU" -> "OMR::X86::CPU"
	"OMR::X86::CPU" -> "OMR::CPU"
	"TR::DebugEnv" -> "OMR::X86::DebugEnv"
	"OMR::X86::DebugEnv" -> "OMR::DebugEnv"
	"TR::Instruction" -> "OMR::X86::Instruction"
	"OMR::X86::Instruction" -> "OMR::Instruction"
	"TR::Snippet" -> "OMR::X86::Snippet"
	"OMR::X86::Snippet" -> "OMR::Snippet"
	"TR::AliasBuilder" -> "OMR::AliasBuilder"
	"TR::ArithEnv" -> "OMR::ArithEnv"
	"TR::BlockChecklist" -> "TR::Checklist"
	"TR::CFG" -> "OMR::CFG"
	"TR::CFGEdge" -> "TR_Link"
	"TR_Link" -> "TR_Link0"
	"TR::ClassEnv" -> "OMR::ClassEnv"
	"TR::CodeGenPhase" -> "OMR::CodeGenPhase"
	"TR::CodeGenerator" -> "TestCompiler::CodeGenerator"
	"TestCompiler::CodeGenerator" -> "OMR::X86::AMD64::CodeGenerator"
	"OMR::X86::AMD64::CodeGenerator" -> "OMR::X86::CodeGenerator"
	"OMR::X86::CodeGenerator" -> "OMR::CodeGenerator"
	"TR::Compilation" -> "OMR::Compilation"
	"TR::CompilerEnv" -> "OMR::CompilerEnv"
	"TR::DataType" -> "OMR::DataType"
	"TR::DebugCounter" -> "TR::DebugCounterBase"
	"TR::DebugCounterAggregation" -> "TR::DebugCounterBase"
	"TR::Environment" -> "OMR::Environment"
	"TR::GCRegisterMap" -> "OMR::GCRegisterMap"
	"TR::GCStackAtlas" -> "OMR::GCStackAtlas"
	"TR::IL" -> "OMR::IL"
	"TR::ILOpCode" -> "OMR::ILOpCode"
	"TR::IO" -> "OMR::IO"
	"TR::KnownObjectTable" -> "OMR::KnownObjectTable"
	"TR::Monitor" -> "OMR::Monitor"
	"TR::Node" -> "OMR::Node"
	"TR::NodeChecklist" -> "TR::Checklist"
	"TR::ObjectModel" -> "TestCompiler::ObjectModel"
	"TestCompiler::ObjectModel" -> "OMR::ObjectModel"
	"TR::Optimizer" -> "OMR::Optimizer"
	"TR::Options" -> "OMR::Options"
	"TR::PersistentInfo" -> "OMR::PersistentInfo"
	"TR::Region::Instance" -> "TR::Region::Destructable"
	"TR_X86FPStackIterator" -> "TR::RegisterIterator"
	"TR::RegisterIterator" -> "OMR::X86::RegisterIterator"
	"TR::ResolvedMethod" -> "TestCompiler::ResolvedMethod"
	"TestCompiler::ResolvedMethod" -> "TestCompiler::ResolvedMethodBase"
	"TestCompiler::ResolvedMethodBase" -> "TR_ResolvedMethod"
	"TestCompiler::ResolvedMethod" -> "TestCompiler::Method"
	"TestCompiler::Method" -> "TR_Method"
	"TR::SnippetGCMap" -> "OMR::SnippetGCMap"
	"TR::StackMemoryRegion" -> "TR::Region"
	"TR::SymbolReference" -> "OMR::SymbolReference"
	"TR::SymbolReferenceTable" -> "OMR::SymbolReferenceTable"
	"TR::TreeTop" -> "OMR::TreeTop"
	"TR::VMEnv" -> "OMR::VMEnv"
	"TR::VMMethodEnv" -> "OMR::VMMethodEnv"
	"TR_BitContainerIterator" -> "TR_BitVectorIterator"
	"TR_BitVectorCursor" -> "TR_BitVectorIterator"
	"TR_ClassExtendCheck" -> "TR_Link"
	"TR_ClassLoadCheck" -> "TR_Link"
	"TR_FrontEnd" -> "TR_Uncopyable"
	"TR_HashTabDouble" -> "TR_HashTab"
	"TR_HashTabFloat" -> "TR_HashTab"
	"TR_HashTabInt" -> "TR_HashTab"
	"TR_HashTabLong" -> "TR_HashTab"
	"TR_HashTabString" -> "TR_HashTab"
	"TR_HeapMemory" -> "TR_MemoryAllocationType"
	"TR_Memory" -> "TR_MemoryBase"
	"TR_NodeKillAliasSetInterface" -> "TR_NodeAliasSetInterface"
	"TR_NodeAliasSetInterface" -> "TR_AliasSetInterface"
	"TR_NodeUseAliasSetInterface" -> "TR_NodeAliasSetInterface"
	"TR_PersistentMemory" -> "TR_MemoryBase"
	"TR_PostDominators" -> "TR_Dominators"
	"TR_PredecessorIterator" -> "TR_CFGIterator"
	"TR_StackMemory" -> "TR_MemoryAllocationType"
	"TR_SuccessorIterator" -> "TR_CFGIterator"
	"TR_UseDefAliasSetInterface" -> "TR_SymAliasSetInterface"
	"TR_SymAliasSetInterface" -> "TR_AliasSetInterface"
	"TR_SymRefIterator" -> "TR_BitVectorIterator"
	"TR_UseOnlyAliasSetInterface" -> "TR_SymAliasSetInterface"
	"TR_X86OpCode::Estimator" -> "TR_X86OpCode::BufferBase"
	"TR_X86OpCode::Writer" -> "TR_X86OpCode::BufferBase"
	"TR_X86ScratchRegisterManager" -> "TR_ScratchRegisterManager"
	"TR::ParameterSymbol" -> "OMR::ParameterSymbol"
	"OMR::ParameterSymbol" -> "TR::RegisterMappedSymbol"
	"TR::Recompilation" -> "OMR::Recompilation"
	"TR::Optimization" -> "OMR::Optimization"
	"OMR::Optimization" -> "TR_HasRandomGenerator"
	"TR::AllBlockIterator" -> "TR::BlockIterator"
	"TR::PostorderNodeOccurrenceIterator" -> "TR::NodeOccurrenceIterator"
	"TR::NodeOccurrenceIterator" -> "TR::NodeIterator"
	"TR::NodeIterator" -> "TR::TreeTopIteratorImpl"
	"TR::OptimizationManager" -> "OMR::OptimizationManager"
	"TR::PostorderNodeIterator" -> "TR::NodeIterator"
	"TR::PreorderNodeIterator" -> "TR::NodeIterator"
	"TR::PreorderNodeOccurrenceIterator" -> "TR::NodeOccurrenceIterator"
	"TR::ReversePostorderSnapshotBlockIterator" -> "TR::BlockIterator"
	"TR::TreeTopIterator" -> "TR::TreeTopIteratorImpl"
	"TR::TreeTopOrderExtendedBlockIterator" -> "TR::BlockIterator"
	"TR_InterferenceGraph" -> "TR_IGBase"
	"TR::MonitorTable" -> "OMR::MonitorTable"
	"RandomExercizer" -> "TR_HasRandomGenerator"
	"TR_AnythingPattern" -> "TR_Pattern"
	"TR_ChildPattern" -> "TR_Pattern"
	"TR_CommutativePattern" -> "TR_ChildrenPattern"
	"TR_ChildrenPattern" -> "TR_Pattern"
	"TR_ChoicePattern" -> "TR_Pattern"
	"TR_IConstPattern" -> "TR_OpCodePattern"
	"TR_OpCodePattern" -> "TR_Pattern"
	"TR_LConstPattern" -> "TR_OpCodePattern"
	"TR_NoRegisterPattern" -> "TR_Pattern"
	"TR_UnifyPattern" -> "TR_Pattern"
	"TR::VPArrayInfo" -> "TR::VPConstraint"
	"TR::VPClass" -> "TR::VPConstraint"
	"TR::VPNonNullObject" -> "TR::VPClassPresence"
	"TR::VPClassPresence" -> "TR::VPConstraint"
	"TR::VPConstString" -> "TR::VPFixedClass"
	"TR::VPFixedClass" -> "TR::VPResolvedClass"
	"TR::VPResolvedClass" -> "TR::VPClassType"
	"TR::VPClassType" -> "TR::VPConstraint"
	"TR::VPEqual" -> "TR::VPRelation"
	"TR::VPRelation" -> "TR::VPConstraint"
	"TR::VPGreaterThanOrEqual" -> "TR::VPRelation"
	"TR::VPIntConst" -> "TR::VPIntConstraint"
	"TR::VPIntConstraint" -> "TR::VPConstraint"
	"TR::VPIntRange" -> "TR::VPIntConstraint"
	"TR::VPKnownObject" -> "TR::VPFixedClass"
	"TR::VPLessThanOrEqual" -> "TR::VPRelation"
	"TR::VPLongConst" -> "TR::VPLongConstraint"
	"TR::VPLongConstraint" -> "TR::VPConstraint"
	"TR::VPLongRange" -> "TR::VPLongConstraint"
	"TR::VPMergedConstraints" -> "TR::VPConstraint"
	"TR::VPNotEqual" -> "TR::VPRelation"
	"TR::VPNullObject" -> "TR::VPClassPresence"
	"TR::VPObjectLocation" -> "TR::VPConstraint"
	"TR::VPPreexistentObject" -> "TR::VPConstraint"
	"TR::VPShortConst" -> "TR::VPShortConstraint"
	"TR::VPShortConstraint" -> "TR::VPConstraint"
	"TR::VPShortRange" -> "TR::VPShortConstraint"
	"TR::VPSync" -> "TR::VPConstraint"
	"TR::VPUnreachablePath" -> "TR::VPConstraint"
	"TR::VPUnresolvedClass" -> "TR::VPClassType"
	"TR_BlockStructure" -> "TR_Structure"
	"TR_InductionVariable" -> "TR_Link"
	"TR_RegionStructure" -> "TR_Structure"
	"TR_StructureSubGraphNode" -> "TR::CFGNode"
	"TR::CompileIlGenRequest" -> "TR::IlGenRequest"
	"TR::IlGenRequest" -> "OMR::IlGenRequest"
	"TR::IlGeneratorMethodDetails" -> "TestCompiler::IlGeneratorMethodDetails"
	"TestCompiler::IlGeneratorMethodDetails" -> "OMR::IlGeneratorMethodDetails"
	"TR::PartialInliningIlGenRequest" -> "TR::InliningIlGenRequest"
	"TR::InliningIlGenRequest" -> "TR::IlGenRequest"
	"TR_Inliner" -> "TR::Optimization"
	"OMR_InlinerPolicy" -> "TR::OptimizationPolicy"
	"OMR_InlinerPolicy" -> "OMR_InlinerHelper"
	"OMR_InlinerUtil" -> "TR::OptimizationUtil"
	"OMR_InlinerUtil" -> "OMR_InlinerHelper"
	"TR::TransformUtil" -> "OMR::TransformUtil"
	"TR_DirectCallSite" -> "TR_CallSite"
	"TR_CallSite" -> "TR_Link"
	"TR_CallStack" -> "TR_Link"
	"TR_InlineCall" -> "TR_DumbInliner"
	"TR_DumbInliner" -> "TR_InlinerBase"
	"TR_InlinerBase" -> "TR_HasRandomGenerator"
	"TR_FunctionPointerCallSite" -> "TR_IndirectCallSite"
	"TR_IndirectCallSite" -> "TR_CallSite"
	"TR_InlinerTracer" -> "TR_LogTracer"
	"TR_RegisterCandidate" -> "TR_Link"
	"TR_TrivialInliner" -> "TR::Optimization"
	"TR::Linkage" -> "OMR::X86::Linkage"
	"OMR::X86::Linkage" -> "OMR::Linkage"
	"TR_LoadExtensions" -> "TR::Optimization"
	"TR::RegisterPair" -> "OMR::RegisterPair"
	"OMR::RegisterPair" -> "TR::Register"
	"TR_HashValueNumberInfo" -> "TR_ValueNumberInfo"
	"OMR::SystemSegmentProvider" -> "TR::SegmentAllocator"
	"TR::SegmentAllocator" -> "TR::SegmentProvider"
	"TR_LinuxCallStackIterator" -> "TR_CallStackIterator"
	"__cxxabiv1::__pointer_to_member_type_info" -> "__cxxabiv1::__pbase_type_info"
	"__cxxabiv1::__pointer_type_info" -> "__cxxabiv1::__pbase_type_info"
	"__cxxabiv1::__si_class_type_info" -> "__cxxabiv1::__class_type_info"
	"__cxxabiv1::__vmi_class_type_info" -> "__cxxabiv1::__class_type_info"
	"TR_AsyncCheckInsertion" -> "TR::Optimization"
	"TR_GlobalAnticipatability" -> "TR_BackwardIntersectionBitVectorAnalysis"
	"TR_BackwardIntersectionBitVectorAnalysis" -> "TR_BackwardIntersectionDFSetAnalysis"
	"TR_BackwardIntersectionDFSetAnalysis" -> "TR_BackwardDFSetAnalysis"
	"TR_BackwardDFSetAnalysis" -> "TR_BasicDFSetAnalysis"
	"TR_BasicDFSetAnalysis" -> "TR_DataFlowAnalysis"
	"TR_Liveness" -> "TR_BackwardUnionBitVectorAnalysis"
	"TR_BackwardUnionBitVectorAnalysis" -> "TR_BackwardUnionDFSetAnalysis"
	"TR_BackwardUnionDFSetAnalysis" -> "TR_BackwardDFSetAnalysis"
	"TR_BackwardUnionSingleBitContainerAnalysis" -> "TR_BackwardUnionDFSetAnalysis"
	"TR_Delayedness" -> "TR_IntersectionBitVectorAnalysis"
	"TR_IntersectionBitVectorAnalysis" -> "TR_IntersectionDFSetAnalysis"
	"TR_IntersectionDFSetAnalysis" -> "TR_ForwardDFSetAnalysis"
	"TR_ForwardDFSetAnalysis" -> "TR_BasicDFSetAnalysis"
	"TR_Earliestness" -> "TR_UnionBitVectorAnalysis"
	"TR_UnionBitVectorAnalysis" -> "TR_UnionDFSetAnalysis"
	"TR_UnionDFSetAnalysis" -> "TR_ForwardDFSetAnalysis"
	"TR_FlowSensitiveEscapeAnalysis" -> "TR_IntersectionBitVectorAnalysis"
	"TR_Isolatedness" -> "TR_BackwardIntersectionBitVectorAnalysis"
	"TR_Latestness" -> "TR_BackwardIntersectionBitVectorAnalysis"
	"TR_LiveOnAllPaths" -> "TR_BackwardIntersectionBitVectorAnalysis"
	"TR_LocalAnticipatability" -> "TR_LocalAnalysis"
	"TR_LocalTransparency" -> "TR_LocalAnalysis"
	"TR_OSRLiveVariableInformation" -> "TR_LiveVariableInformation"
	"TR_ReachingDefinitions" -> "TR_UnionBitVectorAnalysis"
	"TR_RegisterAnticipatability" -> "TR_BackwardIntersectionBitVectorAnalysis"
	"TR_RegisterAvailability" -> "TR_IntersectionBitVectorAnalysis"
	"TR_UnionSingleBitContainerAnalysis" -> "TR_UnionDFSetAnalysis"
	"TR_CatchBlockRemover" -> "TR::Optimization"
	"TR_CFGSimplifier" -> "TR::Optimization"
	"TR_CompactLocals" -> "TR::Optimization"
	"TR_CopyPropagation" -> "TR::Optimization"
	"TR_DeadStoreElimination" -> "TR_IsolatedStoreElimination"
	"TR_IsolatedStoreElimination" -> "TR::Optimization"
	"TR::DeadTreesElimination" -> "TR::Optimization"
	"TR_ExpressionsSimplification" -> "TR::Optimization"
	"TR_FieldPrivatizer" -> "TR_LoopTransformer"
	"TR_LoopTransformer" -> "TR::Optimization"
	"TR_RedundantInductionVarElimination" -> "TR_LoopCanonicalizer"
	"TR_LoopCanonicalizer" -> "TR_LoopTransformer"
	"TR_LoopInverter" -> "TR_LoopTransformer"
	"TR_InductionVariableAnalysis" -> "TR::Optimization"
	"TR_DerivedInductionVariable" -> "TR_BasicInductionVariable"
	"TR_GeneralLoopUnroller" -> "TR_LoopTransformer"
	"TR_IVTypeTransformer" -> "TR_LoopTransformer"
	"TR_LoopStrider" -> "TR_LoopTransformer"
	"TR_PrimaryInductionVariable" -> "TR_BasicInductionVariable"
	"TR_GlobalRegisterAllocator" -> "TR::Optimization"
	"TR_LiveRangeSplitter" -> "TR::Optimization"
	"multipleJumpSuccessorIterator" -> "SuccessorIterator"
	"switchSuccessorIterator" -> "SuccessorIterator"
	"TR_LocalLiveRangeReduction" -> "TR::Optimization"
	"TR_LocalReordering" -> "TR::Optimization"
	"TR_Arraycmp" -> "TR_ArrayLoop"
	"TR_Arraycopy" -> "TR_ArrayLoop"
	"TR_Arrayset" -> "TR_ArrayLoop"
	"TR_Arraytranslate" -> "TR_ArrayLoop"
	"TR_ArraytranslateAndTest" -> "TR_ArrayLoop"
	"TR_ByteToCharArraycopy" -> "TR_ArrayLoop"
	"TR_CharToByteArraycopy" -> "TR_ArrayLoop"
	"TR_LRAddressTree" -> "TR_AddressTree"
	"TR_LoopReducer" -> "TR_LoopTransformer"
	"TR_RangeTranslateTable" -> "TR_TranslateTable"
	"TR_SetTranslateTable" -> "TR_TranslateTable"
	"TR_LoopReplicator" -> "TR_LoopTransformer"
	"TR_LoopSpecializer" -> "TR_LoopVersioner"
	"TR_LoopVersioner" -> "TR_LoopTransformer"
	"TR::LocalCSE" -> "OMR::LocalCSE"
	"OMR::LocalCSE" -> "TR::Optimization"
	"TR::LocalDeadStoreElimination" -> "TR::Optimization"
	"TR_ArraysetStoreElimination" -> "TR::Optimization"
	"TR_CleanseTrees" -> "TR_BlockManipulator"
	"TR_BlockManipulator" -> "TR::Optimization"
	"TR_BlockShuffling" -> "TR_BlockOrderingOptimization"
	"TR_BlockOrderingOptimization" -> "TR::Optimization"
	"TR_BlockSplitter" -> "TR::Optimization"
	"TR_BlockSplitter::TR_BinaryHeap" -> "TR_Array"
	"TR_CheckcastAndProfiledGuardCoalescer" -> "TR::Optimization"
	"TR_ColdBlockOutlining" -> "TR_ColdBlockMarker"
	"TR_ColdBlockMarker" -> "TR_BlockManipulator"
	"TR_CompactNullChecks" -> "TR::Optimization"
	"TR_EliminateRedundantGotos" -> "TR::Optimization"
	"TR_ExtendBasicBlocks" -> "TR_BlockManipulator"
	"TR_HoistBlocks" -> "TR::Optimization"
	"TR_InvariantArgumentPreexistence" -> "TR::Optimization"
	"TR_LongRegAllocation" -> "TR_Rematerialization"
	"TR_Rematerialization" -> "TR::Optimization"
	"TR_OrderBlocks" -> "TR_BlockOrderingOptimization"
	"TR_PeepHoleBasicBlocks" -> "TR_BlockManipulator"
	"TR_ProfiledNodeVersioning" -> "TR::Optimization"
	"TR_SimplifyAnds" -> "TR::Optimization"
	"TR_TrivialBlockExtension" -> "TR::Optimization"
	"TR_TrivialDeadTreeRemoval" -> "TR::Optimization"
	"TR::Simplifier" -> "OMR::Simplifier"
	"OMR::Simplifier" -> "TR::Optimization"
	"TR_OrderedBlockList" -> "List"
	"List" -> "ListBase"
	"TR::RecognizedCallTransformer" -> "OMR::RecognizedCallTransformer"
	"OMR::RecognizedCallTransformer" -> "TR::Optimization"
	"OMR::ValuePropagation::ValueConstraint" -> "TR_HedgeNode"
	"OMR::ValuePropagation::ValueConstraintHandler" -> "TR_HedgeTreeHandler"
	"TR::ArraycopyTransformation" -> "TR::Optimization"
	"TR::GlobalValuePropagation" -> "TR::ValuePropagation"
	"TR::ValuePropagation" -> "OMR::ValuePropagation"
	"OMR::ValuePropagation" -> "TR::Optimization"
	"TR::LocalValuePropagation" -> "TR::ValuePropagation"
	"TR::RegDepCopyRemoval" -> "TR::Optimization"
	"TR_ExceptionCheckMotion" -> "TR_DataFlowAnalysis"
	"TR_GeneralSinkStores" -> "TR_SinkStores"
	"TR_SinkStores" -> "TR::Optimization"
	"TR_IndexExprManipulator" -> "TR::Optimization"
	"TR_InnerPreexistence" -> "TR::Optimization"
	"TR_OSRDefAnalysis" -> "TR::Optimization"
	"TR_OSRDefInfo" -> "TR_UseDefInfo"
	"TR_OSRExceptionEdgeRemoval" -> "TR::Optimization"
	"TR_OSRLiveRangeAnalysis" -> "TR::Optimization"
	"TR_PartialRedundancy" -> "TR::Optimization"
	"TR_PrefetchInsertion" -> "TR_LoopTransformer"
	"TR_RedundantAsyncCheckRemoval" -> "TR::Optimization"
	"TR_RedundantExpressionAdjustment" -> "TR_IntersectionBitVectorAnalysis"
	"TR_ShrinkWrap" -> "TR::Optimization"
	"TR_StripMiner" -> "TR_LoopTransformer"
	"TR_TrivialSinkStores" -> "TR_SinkStores"
	"TR_VirtualGuardHeadMerger" -> "TR::Optimization"
	"TR_VirtualGuardTailSplitter" -> "TR::Optimization"
	"TR_CanReachGivenBlocks" -> "TR_BackwardReachability"
	"TR_BackwardReachability" -> "TR_ReachabilityAnalysis"
	"TR_CanBeReachedFromCatchBlock" -> "TR_ForwardReachability"
	"TR_ForwardReachability" -> "TR_ReachabilityAnalysis"
	"TR_CanBeReachedWithoutExceptionEdges" -> "TR_ForwardReachabilityWithoutExceptionEdges"
	"TR_ForwardReachabilityWithoutExceptionEdges" -> "TR_ReachabilityAnalysis"
	"TR_CanReachNonColdBlocks" -> "TR_BackwardReachability"
	"TR_StatsHisto" -> "TR_Stats"
	"TR_StatsInterval" -> "TR_Stats"
	"TR::AheadOfTimeCompile" -> "OMR::AheadOfTimeCompile"
	"TR::BeforeBinaryEncodingExternalRelocation" -> "TR::ExternalRelocation"
	"TR::ExternalRelocation" -> "TR::Relocation"
	"TR::ExternalOrderedPair32BitRelocation" -> "TR::ExternalRelocation"
	"TR::InstructionAbsoluteRelocation" -> "TR::Relocation"
	"TR::IteratedExternalRelocation" -> "TR_Link"
	"TR::LabelAbsoluteRelocation" -> "TR::LabelRelocation"
	"TR::LabelRelocation" -> "TR::Relocation"
	"TR::LabelRelative12BitRelocation" -> "TR::LabelRelocation"
	"TR::LabelRelative16BitRelocation" -> "TR::LabelRelocation"
	"TR::LabelRelative24BitRelocation" -> "TR::LabelRelocation"
	"TR::LabelRelative32BitRelocation" -> "TR::LabelRelocation"
	"TR::LabelRelative8BitRelocation" -> "TR::LabelRelocation"
	"TR::LabelTable32BitRelocation" -> "TR::LabelRelocation"
	"TR::LoadLabelRelative16BitRelocation" -> "TR::Relocation"
	"TR::LoadLabelRelative32BitRelocation" -> "TR::Relocation"
	"TR::LoadLabelRelative64BitRelocation" -> "TR::LabelRelocation"
	"TR::RegisterDependencyConditions" -> "OMR::X86::RegisterDependencyConditions"
	"OMR::X86::RegisterDependencyConditions" -> "OMR::RegisterDependencyConditions"
	"TR::RegisterDependency" -> "OMR::X86::RegisterDependencyExt"
	"OMR::X86::RegisterDependencyExt" -> "OMR::RegisterDependencyExt"
	"TR::UnresolvedDataSnippet" -> "OMR::UnresolvedDataSnippet"
	"OMR::UnresolvedDataSnippet" -> "TR::Snippet"
	"TR::MemoryReference" -> "OMR::X86::AMD64::MemoryReference"
	"OMR::X86::AMD64::MemoryReference" -> "OMR::X86::MemoryReference"
	"OMR::X86::MemoryReference" -> "OMR::MemoryReference"
	"TR::IA32ConstantDataSnippet" -> "TR::IA32DataSnippet"
	"TR::IA32DataSnippet" -> "TR::Snippet"
	"TR_X86ComputeCC" -> "TR::TreeEvaluator"
	"TR::AMD64Imm64SymInstruction" -> "TR::AMD64Imm64Instruction"
	"TR::AMD64Imm64Instruction" -> "TR::Instruction"
	"TR::AMD64RegImm64SymInstruction" -> "TR::AMD64RegImm64Instruction"
	"TR::AMD64RegImm64Instruction" -> "TR::X86RegInstruction"
	"TR::X86RegInstruction" -> "TR::Instruction"
	"TR::X86AlignmentInstruction" -> "TR::Instruction"
	"TR::X86PatchableCodeAlignmentInstruction" -> "TR::X86BoundaryAvoidanceInstruction"
	"TR::X86BoundaryAvoidanceInstruction" -> "TR::Instruction"
	"TR::X86CallMemInstruction" -> "TR::X86MemInstruction"
	"TR::X86MemInstruction" -> "TR::Instruction"
	"TR::X86FPArithmeticRegRegInstruction" -> "TR::X86FPRegRegInstruction"
	"TR::X86FPRegRegInstruction" -> "TR::X86RegRegInstruction"
	"TR::X86RegRegInstruction" -> "TR::X86RegInstruction"
	"TR::X86FPCompareEvalInstruction" -> "TR::Instruction"
	"TR::X86FPCompareRegRegInstruction" -> "TR::X86FPRegRegInstruction"
	"TR::X86FPMemRegInstruction" -> "TR::X86MemRegInstruction"
	"TR::X86MemRegInstruction" -> "TR::X86MemInstruction"
	"TR::X86FPRegInstruction" -> "TR::X86RegInstruction"
	"TR::X86FPRegMemInstruction" -> "TR::X86RegMemInstruction"
	"TR::X86RegMemInstruction" -> "TR::X86RegInstruction"
	"TR::X86FPRemainderRegRegInstruction" -> "TR::X86FPST0ST1RegRegInstruction"
	"TR::X86FPST0ST1RegRegInstruction" -> "TR::X86FPRegRegInstruction"
	"TR::X86FPST0STiRegRegInstruction" -> "TR::X86FPRegRegInstruction"
	"TR::X86FPSTiST0RegRegInstruction" -> "TR::X86FPRegRegInstruction"
	"TR::X86FenceInstruction" -> "TR::Instruction"
	"TR::X86ImmSnippetInstruction" -> "TR::X86ImmInstruction"
	"TR::X86ImmInstruction" -> "TR::Instruction"
	"TR::X86ImmSymInstruction" -> "TR::X86ImmInstruction"
	"TR::X86LabelInstruction" -> "TR::Instruction"
	"TR::X86MemImmSymInstruction" -> "TR::X86MemImmInstruction"
	"TR::X86MemImmInstruction" -> "TR::X86MemInstruction"
	"TR::X86MemRegImmInstruction" -> "TR::X86MemRegInstruction"
	"TR::X86MemRegRegInstruction" -> "TR::X86MemRegInstruction"
	"TR::X86MemTableInstruction" -> "TR::X86MemInstruction"
	"TR::X86PaddingSnippetInstruction" -> "TR::X86PaddingInstruction"
	"TR::X86PaddingInstruction" -> "TR::Instruction"
	"TR::X86RegImmSymInstruction" -> "TR::X86RegImmInstruction"
	"TR::X86RegImmInstruction" -> "TR::X86RegInstruction"
	"TR::X86RegMemImmInstruction" -> "TR::X86RegMemInstruction"
	"TR::X86RegRegImmInstruction" -> "TR::X86RegRegInstruction"
	"TR::X86RegRegRegInstruction" -> "TR::X86RegRegInstruction"
	"TR::X86VFPCallCleanupInstruction" -> "TR::Instruction"
	"TR::X86VFPDedicateInstruction" -> "TR::X86RegMemInstruction"
	"TR::X86VFPReleaseInstruction" -> "TR::Instruction"
	"TR::X86VFPRestoreInstruction" -> "TR::Instruction"
	"TR::X86VFPSaveInstruction" -> "TR::Instruction"
	"TR_X86BinaryCommutativeAnalyser" -> "TR_Analyser"
	"TR::X86DivideCheckSnippet" -> "TR::X86RestartSnippet"
	"TR::X86RestartSnippet" -> "TR::Snippet"
	"TR_X86SubtractAnalyser" -> "TR_Analyser"
	"TR_X86CompareAnalyser" -> "TR_Analyser"
	"TR_IA32XMMCompareAnalyser" -> "TR_X86FPCompareAnalyser"
	"TR::X86FPConvertToIntSnippet" -> "TR::X86FPConversionSnippet"
	"TR::X86FPConversionSnippet" -> "TR::X86RestartSnippet"
	"TR::X86FPConvertToLongSnippet" -> "TR::X86FPConversionSnippet"
	"TR::X86CheckAsyncMessagesSnippet" -> "TR::X86HelperCallSnippet"
	"TR::X86HelperCallSnippet" -> "TR::X86RestartSnippet"
	"TR::X86SystemLinkage" -> "TR::Linkage"
	"TR::AMD64ABILinkage" -> "TR::AMD64SystemLinkage"
	"TR::AMD64SystemLinkage" -> "TR::X86SystemLinkage"
	"TR::AMD64Win64FastCallLinkage" -> "TR::AMD64SystemLinkage"
	"TR::IlType" -> "OMR::IlType"
	"TR::IlValue" -> "OMR::IlValue"
	"TestCompiler::AbsDiffIfThenElseMethod" -> "TR::MethodBuilder"
	"TR::MethodBuilder" -> "TestCompiler::MethodBuilder"
	"TestCompiler::MethodBuilder" -> "OMR::MethodBuilder"
	"OMR::MethodBuilder" -> "TR::IlBuilder"
	"TR::IlBuilder" -> "TestCompiler::IlBuilder"
	"TestCompiler::IlBuilder" -> "OMR::IlBuilder"
	"OMR::IlBuilder" -> "TR::IlInjector"
	"TR::IlInjector" -> "TestCompiler::IlInjector"
	"TestCompiler::IlInjector" -> "OMR::IlInjector"
	"OMR::IlInjector" -> "TR_IlGenerator"
	"TR::TypeDictionary" -> "OMR::TypeDictionary"
	"TestCompiler::BasicForLoopDownMethod" -> "TR::MethodBuilder"
	"TestCompiler::BasicForLoopUpMethod" -> "TR::MethodBuilder"
	"TestCompiler::IndirectStoreIlInjector" -> "TestCompiler::BinaryOpIlInjector"
	"TestCompiler::BinaryOpIlInjector" -> "TestCompiler::OpIlInjector"
	"TestCompiler::OpIlInjector" -> "TR::IlInjector"
	"TestCompiler::BuilderTest" -> "TestCompiler::TestDriver"
	"TestCompiler::CallIlInjector" -> "TestCompiler::UnaryOpIlInjector"
	"TestCompiler::UnaryOpIlInjector" -> "TestCompiler::OpIlInjector"
	"TestCompiler::ChildlessUnaryOpIlInjector" -> "TestCompiler::UnaryOpIlInjector"
	"TestCompiler::CmpBranchOpIlInjector" -> "TestCompiler::OpIlInjector"
	"TestCompiler::DoWhileFibonnaciMethod" -> "TR::MethodBuilder"
	"TestCompiler::DoWhileIfThenElseMethod" -> "TR::MethodBuilder"
	"TestCompiler::DoWhileWithBreakAndContinueMethod" -> "TR::MethodBuilder"
	"TestCompiler::DoWhileWithBreakMethod" -> "TR::MethodBuilder"
	"TestCompiler::DoWhileWithContinueMethod" -> "TR::MethodBuilder"
	"TestCompiler::ForLoopBreakAndContinueMethod" -> "TR::MethodBuilder"
	"TestCompiler::ForLoopBreakMethod" -> "TR::MethodBuilder"
	"TestCompiler::ForLoopContinueMethod" -> "TR::MethodBuilder"
	"TestCompiler::ForLoopUPIfThenElseMethod" -> "TR::MethodBuilder"
	"TestCompiler::IfThenElseLoopMethod" -> "TR::MethodBuilder"
	"TestCompiler::IndirectLoadIlInjector" -> "TestCompiler::UnaryOpIlInjector"
	"TestCompiler::IterativeFibonnaciMethod" -> "TR::MethodBuilder"
	"TestCompiler::MaxIfThenMethod" -> "TR::MethodBuilder"
	"TestCompiler::OpCodesTest" -> "TestCompiler::TestDriver"
	"TestCompiler::RecursiveFibonnaciMethod" -> "TR::MethodBuilder"
	"TestCompiler::ShootoutNestedLoopMethod" -> "TR::MethodBuilder"
	"TestCompiler::StoreOpIlInjector" -> "TestCompiler::OpIlInjector"
	"TestCompiler::TernaryOpIlInjector" -> "TestCompiler::OpIlInjector"
	"TestCompiler::WhileDoFibonnaciMethod" -> "TR::MethodBuilder"
	"TestCompiler::WhileDoIfThenElseMethod" -> "TR::MethodBuilder"
	"TestCompiler::WhileDoWithBreakAndContinueMethod" -> "TR::MethodBuilder"
	"TestCompiler::WhileDoWithBreakMethod" -> "TR::MethodBuilder"
	"TestCompiler::WhileDoWithContinueMethod" -> "TR::MethodBuilder"
	"TestCompiler::BarIlInjector" -> "TR::IlInjector"
	"TestCompiler::FooBarTest" -> "TestCompiler::TestDriver"
	"TestCompiler::FooIlInjector" -> "TR::IlInjector"
	"TestCompiler::OptionSetTest" -> "TestCompiler::LimitFileTest"
	"TestCompiler::PPCOpCodesTest" -> "TestCompiler::OpCodesTest"
	"TestCompiler::Qux2IlInjector" -> "TR::IlInjector"
	"TestCompiler::Qux2Test" -> "TestCompiler::TestDriver"
	"TestCompiler::SimplifierFoldAndTest" -> "TestCompiler::OptTestDriver"
	"TestCompiler::OptTestDriver" -> "TestCompiler::TestDriver"
	"TestCompiler::SimplifierFoldAndIlInjector" -> "TR::IlInjector"
	"TestCompiler::SimplifierFoldAndIlVerifier" -> "TR::IlVerifier"
	"TestCompiler::SimplifierFoldAndInfo" -> "TestCompiler::MethodInfo"
	"TestCompiler::S390OpCodesTest" -> "TestCompiler::OpCodesTest"
	"TR::AllIlVerifier" -> "TR::IlVerifier"
	"TR::NoCodegenVerifier" -> "TR::IlVerifier"
	"TestCompiler::X86OpCodesTest" -> "TestCompiler::OpCodesTest"
	"TR::CodeCache" -> "OMR::CodeCache"
	"OMR::CodeCache" -> "OMR::CodeCacheBase"
	"OMR::CodeCache::CacheCriticalSection" -> "OMR::CriticalSection"
	"OMR::CodeCacheManager::CacheListCriticalSection" -> "OMR::CriticalSection"
	"OMR::CodeCacheManager::RepositoryMonitorCriticalSection" -> "OMR::CriticalSection"
	"TR::CodeCacheConfig" -> "OMR::CodeCacheConfig"
	"TR::CodeCacheManager" -> "TestCompiler::CodeCacheManager"
	"TestCompiler::CodeCacheManager" -> "OMR::CodeCacheManager"
	"TR::FrontEnd" -> "TestCompiler::FrontEnd"
	"TestCompiler::FrontEnd" -> "TR::FEBase"
	"TR::FEBase" -> "TR::FECommon"
	"TR::FECommon" -> "TR_FrontEnd"
	"TestCompiler::JitConfig" -> "TR::JitConfig"
	"TR::DefaultCompilationStrategy" -> "TR::CompilationStrategy"
	"TR::DebugSegmentProvider" -> "TR::SegmentAllocator"
	"TR::BytecodeBuilder" -> "OMR::BytecodeBuilder"
	"OMR::BytecodeBuilder" -> "TR::IlBuilder"
	"OMR::PointerType" -> "TR::IlType"
	"OMR::PrimitiveType" -> "TR::IlType"
	"OMR::StructType" -> "TR::IlType"
	"OMR::UnionType" -> "TR::IlType"
	"TR::CodeCacheMemorySegment" -> "OMR::CodeCacheMemorySegment"
	"TR::ELFRelocationResolver" -> "OMR::X86::AMD64::ELFRelocationResolver"
	"OMR::X86::AMD64::ELFRelocationResolver" -> "OMR::ELFRelocationResolver"
	"TR::Machine" -> "OMR::X86::I386::Machine"
	"OMR::X86::I386::Machine" -> "OMR::X86::Machine"
	"TR::RealRegister" -> "OMR::X86::I386::RealRegister"
	"OMR::X86::I386::RealRegister" -> "OMR::X86::RealRegister"
	"TR::TreeEvaluator" -> "OMR::X86::I386::TreeEvaluator"
	"OMR::X86::I386::TreeEvaluator" -> "OMR::X86::TreeEvaluator"
	"TestCompiler::CodeGenerator" -> "OMR::X86::I386::CodeGenerator"
	"OMR::X86::I386::CodeGenerator" -> "OMR::X86::CodeGenerator"
	"TR::MemoryReference" -> "OMR::X86::MemoryReference"
	"TR::IA32SystemLinkage" -> "TR::X86SystemLinkage"
	"JITILBuilderTest_ControlFlowTest_Test" -> "testing::Test"
	"JITILBuilderTest_NestedControlFlowLoopTest_Test" -> "testing::Test"
	"JITTest_BuilderTest_Test" -> "testing::Test"
	"testing::EmptyTestEventListener" -> "testing::TestEventListener"
	"testing::TestWithParam" -> "testing::Test"
	"testing::internal::DefaultDeathTestFactory" -> "testing::internal::DeathTestFactory"
	"testing::internal::HasNewFatalFailureHelper" -> "testing::TestPartResultReporterInterface"
	"testing::internal::Mutex" -> "testing::internal::MutexBase"
	"testing::internal::ParameterizedTestCaseInfo" -> "testing::internal::ParameterizedTestCaseInfoBase"
	"testing::internal::ParameterizedTestFactory" -> "testing::internal::TestFactoryBase"
	"testing::internal::TestFactoryImpl" -> "testing::internal::TestFactoryBase"
	"testing::internal::ThreadLocal::DefaultValueHolderFactory" -> "testing::internal::ThreadLocal::ValueHolderFactory"
	"testing::internal::ThreadLocal::InstanceValueHolderFactory" -> "testing::internal::ThreadLocal::ValueHolderFactory"
	"testing::internal::ThreadLocal::ValueHolder" -> "testing::internal::ThreadLocalValueHolderBase"
	"testing::internal::ThreadWithParam" -> "testing::internal::ThreadWithParamBase"
	"JITTest_FooBarTest_Test" -> "testing::Test"
	"TestCompiler::LimitFileTest_CheckVLogTest_Test" -> "TestCompiler::LimitFileTest"
	"TestCompiler::LimitFileTest" -> "testing::Test"
	"TestCompiler::LimitFileTest_CreateVLogTest_Test" -> "TestCompiler::LimitFileTest"
	"TestCompiler::LimitFileTest_UseLimitFileBoundTest_Test" -> "TestCompiler::LimitFileTest"
	"TestCompiler::LimitFileTest_UseLimitFileRangeTest_Test" -> "TestCompiler::LimitFileTest"
	"TestCompiler::LimitFileTest_UseLimitFileTest_Test" -> "TestCompiler::LimitFileTest"
	"TestCompiler::OMRTestEnv" -> "testing::Environment"
	"TestCompiler::LogFileTest_CreateTFLogTest_Test" -> "TestCompiler::LogFileTest"
	"TestCompiler::LogFileTest" -> "testing::Test"
	"TestCompiler::LogFileTest_EmptyTFLogTest_Test" -> "TestCompiler::LogFileTest"
	"TestCompiler::LogFileTest_KeywordsLogTest_Test" -> "TestCompiler::LogFileTest"
	"TestCompiler::OptionSetTest_UseOptionSets_Test" -> "TestCompiler::OptionSetTest"
	"TestCompiler::OptionSetTest_WithDefault_Test" -> "TestCompiler::OptionSetTest"
	"JITCrossPlatformsOpCodesTest_AddressTest_Test" -> "testing::Test"
	"JITCrossPlatformsOpCodesTest_BitwiseTest_Test" -> "testing::Test"
	"JITCrossPlatformsOpCodesTest_CompareTest_Test" -> "testing::Test"
	"JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test" -> "testing::Test"
	"JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test" -> "testing::Test"
	"JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test" -> "testing::Test"
	"JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test" -> "testing::Test"
	"JITCrossPlatformsOpCodesTest_TernaryTest_Test" -> "testing::Test"
	"JITCrossPlatformsOpCodesTest_UnaryTest_Test" -> "testing::Test"
	"JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test" -> "testing::Test"
	"JITQuxTest_QuxTest2_Test" -> "testing::Test"
	"TestCompiler::SimplifierFoldAndTest_SimplifierFoldAndTest_Test" -> "TestCompiler::SimplifierFoldAndTest"
	"TestCompiler::OptTestDriver" -> "testing::Test"
	"JITX86OpCodesTest_BitwiseTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_CompareTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test" -> "testing::Test"
	"JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test" -> "testing::Test"
	"JITX86OpCodesTest_DISABLED_X86UnaryTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_DirectCallTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_FloatArithmeticTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_IntegerArithmeticTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_MemoryOperationTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_TernaryTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_UnaryTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_UnsupportedOpCodesTest_Test" -> "testing::Test"
	"JITX86OpCodesTest_X86AddressTest_Test" -> "testing::Test"
	"TR::ELFRelocationResolver" -> "OMR::ELFRelocationResolver"
	"TR::CPU" -> "OMR::Power::CPU"
	"OMR::Power::CPU" -> "OMR::CPU"
	"TR::DebugEnv" -> "OMR::Power::DebugEnv"
	"OMR::Power::DebugEnv" -> "OMR::DebugEnv"
	"TR::InstOpCode" -> "OMR::Power::InstOpCode"
	"OMR::Power::InstOpCode" -> "OMR::InstOpCode"
	"TR::Instruction" -> "OMR::Power::Instruction"
	"OMR::Power::Instruction" -> "OMR::Instruction"
	"TR::Machine" -> "OMR::Power::Machine"
	"OMR::Power::Machine" -> "OMR::Machine"
	"TR::MemoryReference" -> "OMR::Power::MemoryReference"
	"OMR::Power::MemoryReference" -> "OMR::MemoryReference"
	"TR::RealRegister" -> "OMR::Power::RealRegister"
	"OMR::Power::RealRegister" -> "OMR::RealRegister"
	"TR::Register" -> "OMR::Power::Register"
	"OMR::Power::Register" -> "OMR::Register"
	"TR::Snippet" -> "OMR::Power::Snippet"
	"OMR::Power::Snippet" -> "OMR::Snippet"
	"TR::TreeEvaluator" -> "OMR::Power::TreeEvaluator"
	"OMR::Power::TreeEvaluator" -> "OMR::TreeEvaluator"
	"TestCompiler::CodeGenerator" -> "OMR::Power::CodeGenerator"
	"OMR::Power::CodeGenerator" -> "OMR::CodeGenerator"
	"TR_PPCOutOfLineCodeSection" -> "TR_OutOfLineCodeSection"
	"TR_PPCScratchRegisterManager" -> "TR_ScratchRegisterManager"
	"TR::Linkage" -> "OMR::Power::Linkage"
	"OMR::Power::Linkage" -> "OMR::Linkage"
	"TR::RegisterDependencyConditions" -> "OMR::Power::RegisterDependencyConditions"
	"OMR::Power::RegisterDependencyConditions" -> "OMR::RegisterDependencyConditions"
	"TR::RegisterDependency" -> "OMR::Power::RegisterDependencyExt"
	"OMR::Power::RegisterDependencyExt" -> "OMR::RegisterDependencyExt"
	"TR::RegisterIterator" -> "OMR::Power::RegisterIterator"
	"TR::AheadOfTimeCompile" -> "OMR::Power::AheadOfTimeCompile"
	"OMR::Power::AheadOfTimeCompile" -> "OMR::AheadOfTimeCompile"
	"TR::PPCPairedLabelAbsoluteRelocation" -> "TR::LabelRelocation"
	"TR::PPCPairedRelocation" -> "TR::PPCRelocation"
	"TR::PPCAdminInstruction" -> "TR::Instruction"
	"TR_PPCComputeCC" -> "TR::TreeEvaluator"
	"TR::PPCAlignedLabelInstruction" -> "TR::PPCLabelInstruction"
	"TR::PPCLabelInstruction" -> "TR::Instruction"
	"TR::PPCDepConditionalBranchInstruction" -> "TR::PPCConditionalBranchInstruction"
	"TR::PPCConditionalBranchInstruction" -> "TR::PPCLabelInstruction"
	"TR::PPCControlFlowInstruction" -> "TR::Instruction"
	"TR::PPCDepImmInstruction" -> "TR::PPCDepInstruction"
	"TR::PPCDepInstruction" -> "TR::Instruction"
	"TR::PPCDepImmSymInstruction" -> "TR::PPCDepInstruction"
	"TR::PPCDepLabelInstruction" -> "TR::PPCLabelInstruction"
	"TR::PPCImm2Instruction" -> "TR::PPCImmInstruction"
	"TR::PPCImmInstruction" -> "TR::Instruction"
	"TR::PPCMemSrc1Instruction" -> "TR::PPCMemInstruction"
	"TR::PPCMemInstruction" -> "TR::Instruction"
	"TR::PPCSrc1Instruction" -> "TR::PPCImmInstruction"
	"TR::PPCSrc2Instruction" -> "TR::Instruction"
	"TR::PPCTrg1ImmInstruction" -> "TR::PPCTrg1Instruction"
	"TR::PPCTrg1Instruction" -> "TR::Instruction"
	"TR::PPCTrg1MemInstruction" -> "TR::PPCTrg1Instruction"
	"TR::PPCTrg1Src1Imm2Instruction" -> "TR::PPCTrg1Src1ImmInstruction"
	"TR::PPCTrg1Src1ImmInstruction" -> "TR::PPCTrg1Src1Instruction"
	"TR::PPCTrg1Src1Instruction" -> "TR::PPCTrg1Instruction"
	"TR::PPCTrg1Src2ImmInstruction" -> "TR::PPCTrg1Src2Instruction"
	"TR::PPCTrg1Src2Instruction" -> "TR::PPCTrg1Src1Instruction"
	"TR::PPCTrg1Src3Instruction" -> "TR::PPCTrg1Src2Instruction"
	"TR::PPCArrayCopyCallSnippet" -> "TR::PPCHelperCallSnippet"
	"TR::PPCHelperCallSnippet" -> "TR::Snippet"
	"TR_PPCTableOfConstants" -> "OMR::TableOfConstants"
	"TR::PPCSystemLinkage" -> "TR::Linkage"
	"TR::ConstantDataSnippet" -> "OMR::ConstantDataSnippet"
	"TR_PPCCRBackingStore" -> "TR_BackingStore"
	"JITPPCOpCodesTest_BitwiseTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_CompareTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_DISABLED_PPCLEBitwiseTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_DISABLED_PPCLECompareTests_Test" -> "testing::Test"
	"JITPPCOpCodesTest_DISABLED_PPCLEConvertTests_Test" -> "testing::Test"
	"JITPPCOpCodesTest_DISABLED_PPCLEDirectCallTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_DISABLED_PPCLEFloatArithmeticTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_DISABLED_PPCLEIntegerArithmeticTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_DISABLED_PPCLEMemoryOperationTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_DISABLED_PPCLETernaryTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_DISABLED_PPCLEUnaryTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_MemoryOperationTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_PPCAddressTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_TernaryTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_UnaryTest_Test" -> "testing::Test"
	"JITPPCOpCodesTest_UnsupportedOpCodesTest_Test" -> "testing::Test"
	"TR::CodeCacheConfig" -> "OMR::Power::CodeCacheConfig"
	"OMR::Power::CodeCacheConfig" -> "OMR::CodeCacheConfig"
	"TR::RealRegister" -> "OMR::Z::RealRegister"
	"OMR::Z::RealRegister" -> "OMR::RealRegister"
	"TR::Register" -> "OMR::Z::Register"
	"OMR::Z::Register" -> "OMR::Register"
	"TR::CPU" -> "OMR::Z::CPU"
	"OMR::Z::CPU" -> "OMR::CPU"
	"TR::CodeGenPhase" -> "OMR::Z::CodeGenPhase"
	"OMR::Z::CodeGenPhase" -> "OMR::CodeGenPhase"
	"TR::DebugEnv" -> "OMR::Z::DebugEnv"
	"OMR::Z::DebugEnv" -> "OMR::DebugEnv"
	"TR::InstOpCode" -> "OMR::Z::InstOpCode"
	"OMR::Z::InstOpCode" -> "OMR::InstOpCode"
	"TR::Instruction" -> "OMR::Z::Instruction"
	"OMR::Z::Instruction" -> "OMR::Instruction"
	"TR::Machine" -> "OMR::Z::Machine"
	"OMR::Z::Machine" -> "OMR::Machine"
	"TR::Snippet" -> "OMR::Z::Snippet"
	"OMR::Z::Snippet" -> "OMR::Snippet"
	"TR::TreeEvaluator" -> "OMR::Z::TreeEvaluator"
	"OMR::Z::TreeEvaluator" -> "OMR::TreeEvaluator"
	"TR::CodeGenerator" -> "TestCompiler::Z::CodeGenerator"
	"TestCompiler::Z::CodeGenerator" -> "TestCompiler::CodeGenerator"
	"TestCompiler::CodeGenerator" -> "OMR::Z::CodeGenerator"
	"OMR::Z::CodeGenerator" -> "OMR::CodeGenerator"
	"TR_S390OutOfLineCodeSection" -> "TR_OutOfLineCodeSection"
	"TR_S390ScratchRegisterManager" -> "TR_ScratchRegisterManager"
	"TR::Linkage" -> "OMR::Z::Linkage"
	"OMR::Z::Linkage" -> "OMR::Linkage"
	"TR::MemoryReference" -> "OMR::Z::MemoryReference"
	"OMR::Z::MemoryReference" -> "OMR::MemoryReference"
	"TR::RegisterDependencyConditions" -> "OMR::Z::RegisterDependencyConditions"
	"OMR::Z::RegisterDependencyConditions" -> "OMR::RegisterDependencyConditions"
	"TR::RegisterDependency" -> "OMR::Z::RegisterDependencyExt"
	"TR::S390ConstantInstructionSnippet" -> "TR::S390ConstantDataSnippet"
	"TR::S390ConstantDataSnippet" -> "TR::Snippet"
	"TR::S390EyeCatcherDataSnippet" -> "TR::S390ConstantDataSnippet"
	"TR::S390InterfaceCallDataSnippet" -> "TR::S390ConstantDataSnippet"
	"TR::S390JNICallDataSnippet" -> "TR::S390ConstantDataSnippet"
	"TR::S390LabelTableSnippet" -> "TR::S390ConstantDataSnippet"
	"TR::S390LookupSwitchSnippet" -> "TR::S390TargetAddressSnippet"
	"TR::S390TargetAddressSnippet" -> "TR::Snippet"
	"TR::S390WritableDataSnippet" -> "TR::S390ConstantDataSnippet"
	"TR::RegisterPair" -> "OMR::Z::RegisterPair"
	"OMR::Z::RegisterPair" -> "OMR::RegisterPair"
	"TR::RegisterIterator" -> "OMR::Z::RegisterIterator"
	"TR::S390AnnotationInstruction" -> "TR::Instruction"
	"TR_S390ComputeCC" -> "TR::TreeEvaluator"
	"TR::S390BranchInstruction" -> "TR::S390LabeledInstruction"
	"TR::S390LabeledInstruction" -> "TR::Instruction"
	"TR::S390BranchOnCountInstruction" -> "TR::S390LabeledInstruction"
	"TR::S390BranchOnIndexInstruction" -> "TR::S390LabeledInstruction"
	"TR::S390DebugCounterBumpInstruction" -> "TR::S390PseudoInstruction"
	"TR::S390PseudoInstruction" -> "TR::Instruction"
	"TR::S390EInstruction" -> "TR::Instruction"
	"TR::S390IEInstruction" -> "TR::Instruction"
	"TR::S390IInstruction" -> "TR::Instruction"
	"TR::S390Imm2Instruction" -> "TR::Instruction"
	"TR::S390ImmSnippetInstruction" -> "TR::S390ImmInstruction"
	"TR::S390ImmInstruction" -> "TR::Instruction"
	"TR::S390ImmSymInstruction" -> "TR::S390ImmInstruction"
	"TR::S390LabelInstruction" -> "TR::S390LabeledInstruction"
	"TR::S390MIIInstruction" -> "TR::Instruction"
	"TR::S390SS1WithImplicitGPRsInstruction" -> "TR::S390SS1Instruction"
	"TR::S390SS1Instruction" -> "TR::S390MemMemInstruction"
	"TR::S390MemMemInstruction" -> "TR::S390MemInstruction"
	"TR::S390MemInstruction" -> "TR::Instruction"
	"TR::S390NOPInstruction" -> "TR::Instruction"
	"TR::S390OpCodeOnlyInstruction" -> "TR::Instruction"
	"TR::S390RIEInstruction" -> "TR::S390RegInstruction"
	"TR::S390RegInstruction" -> "TR::Instruction"
	"TR::S390RISInstruction" -> "TR::S390RIInstruction"
	"TR::S390RIInstruction" -> "TR::S390RegInstruction"
	"TR::S390RILInstruction" -> "TR::Instruction"
	"TR::S390RREInstruction" -> "TR::S390RRInstruction"
	"TR::S390RRInstruction" -> "TR::S390RegInstruction"
	"TR::S390RRFInstruction" -> "TR::S390RRInstruction"
	"TR::S390RRRInstruction" -> "TR::S390RRInstruction"
	"TR::S390RRSInstruction" -> "TR::S390RRInstruction"
	"TR::S390RSWithImplicitPairStoresInstruction" -> "TR::S390RSInstruction"
	"TR::S390RSInstruction" -> "TR::S390RegInstruction"
	"TR::S390RSLInstruction" -> "TR::S390MemInstruction"
	"TR::S390RSLbInstruction" -> "TR::S390RegInstruction"
	"TR::S390RSYInstruction" -> "TR::S390RSInstruction"
	"TR::S390RXEInstruction" -> "TR::S390RXInstruction"
	"TR::S390RXInstruction" -> "TR::S390RegInstruction"
	"TR::S390RXFInstruction" -> "TR::S390RRInstruction"
	"TR::S390RXYInstruction" -> "TR::S390RXInstruction"
	"TR::S390RXYbInstruction" -> "TR::S390MemInstruction"
	"TR::S390SIYInstruction" -> "TR::S390SIInstruction"
	"TR::S390SIInstruction" -> "TR::S390MemInstruction"
	"TR::S390SILInstruction" -> "TR::S390MemInstruction"
	"TR::S390SInstruction" -> "TR::S390MemInstruction"
	"TR::S390SMIInstruction" -> "TR::Instruction"
	"TR::S390SS2Instruction" -> "TR::S390SS1Instruction"
	"TR::S390SS5WithImplicitGPRsInstruction" -> "TR::S390SS4Instruction"
	"TR::S390SS4Instruction" -> "TR::S390SS1Instruction"
	"TR::S390SSEInstruction" -> "TR::S390MemMemInstruction"
	"TR::S390SSFInstruction" -> "TR::S390RXInstruction"
	"TR::S390TranslateInstruction" -> "TR::Instruction"
	"TR::S390VRIaInstruction" -> "TR::S390VRIInstruction"
	"TR::S390VRIInstruction" -> "TR::S390VInstruction"
	"TR::S390VInstruction" -> "TR::S390RegInstruction"
	"TR::S390VRIbInstruction" -> "TR::S390VRIInstruction"
	"TR::S390VRIcInstruction" -> "TR::S390VRIInstruction"
	"TR::S390VRIdInstruction" -> "TR::S390VRIInstruction"
	"TR::S390VRIeInstruction" -> "TR::S390VRIInstruction"
	"TR::S390VRIfInstruction" -> "TR::S390VRIInstruction"
	"TR::S390VRIgInstruction" -> "TR::S390VRIInstruction"
	"TR::S390VRIhInstruction" -> "TR::S390VRIInstruction"
	"TR::S390VRIiInstruction" -> "TR::S390VRIInstruction"
	"TR::S390VRRaInstruction" -> "TR::S390VRRInstruction"
	"TR::S390VRRInstruction" -> "TR::S390VInstruction"
	"TR::S390VRRbInstruction" -> "TR::S390VRRInstruction"
	"TR::S390VRRcInstruction" -> "TR::S390VRRInstruction"
	"TR::S390VRRdInstruction" -> "TR::S390VRRInstruction"
	"TR::S390VRReInstruction" -> "TR::S390VRRInstruction"
	"TR::S390VRRfInstruction" -> "TR::S390VRRInstruction"
	"TR::S390VRRgInstruction" -> "TR::S390VRRInstruction"
	"TR::S390VRRhInstruction" -> "TR::S390VRRInstruction"
	"TR::S390VRRiInstruction" -> "TR::S390VRRInstruction"
	"TR::S390VRSInstruction" -> "TR::S390VInstruction"
	"TR::S390VRSaInstruction" -> "TR::S390VStorageInstruction"
	"TR::S390VStorageInstruction" -> "TR::S390VInstruction"
	"TR::S390VRSbInstruction" -> "TR::S390VStorageInstruction"
	"TR::S390VRScInstruction" -> "TR::S390VStorageInstruction"
	"TR::S390VRSdInstruction" -> "TR::S390VStorageInstruction"
	"TR::S390VRVInstruction" -> "TR::S390VStorageInstruction"
	"TR::S390VRXInstruction" -> "TR::S390VStorageInstruction"
	"TR::S390VSIInstruction" -> "TR::S390VStorageInstruction"
	"TR_S390BinaryAnalyser" -> "TR_Analyser"
	"TR_S390BinaryCommutativeAnalyser" -> "TR_Analyser"
	"TR::S390CallSnippet" -> "TR::Snippet"
	"TR_S390CompareAnalyser" -> "TR_Analyser"
	"TR::S390HelperCallSnippet" -> "TR::Snippet"
	"BitOpMemConstLenMacroOp" -> "MemToMemConstLenMacroOp"
	"MemToMemConstLenMacroOp" -> "MemToMemMacroOp"
	"BitOpMemVarLenMacroOp" -> "MemToMemVarLenMacroOp"
	"MemToMemVarLenMacroOp" -> "MemToMemMacroOp"
	"MemClearConstLenMacroOp" -> "MemToMemConstLenMacroOp"
	"MemClearVarLenMacroOp" -> "MemToMemVarLenMacroOp"
	"MemCmpConstLenSignMacroOp" -> "MemCmpConstLenMacroOp"
	"MemCmpConstLenMacroOp" -> "MemToMemConstLenMacroOp"
	"MemCmpVarLenSignMacroOp" -> "MemCmpVarLenMacroOp"
	"MemCmpVarLenMacroOp" -> "MemToMemVarLenMacroOp"
	"MemCpyAtomicMacroOp" -> "MemToMemTypedVarLenMacroOp"
	"MemToMemTypedVarLenMacroOp" -> "MemToMemTypedMacroOp"
	"MemCpyConstLenMacroOp" -> "MemToMemConstLenMacroOp"
	"MemCpyVarLenMacroOp" -> "MemToMemVarLenMacroOp"
	"MemCpyVarLenTypedMacroOp" -> "MemToMemTypedVarLenMacroOp"
	"MemInitConstLenMacroOp" -> "MemToMemConstLenMacroOp"
	"MemInitVarLenMacroOp" -> "MemToMemVarLenMacroOp"
	"MemInitVarLenTypedMacroOp" -> "MemToMemTypedVarLenMacroOp"
	"TR::S390zLinuxSystemLinkage" -> "TR::SystemLinkage"
	"TR::SystemLinkage" -> "TR::S390SystemLinkage"
	"TR::S390SystemLinkage" -> "TR::Linkage"
	"TR::S390zOSSystemLinkage" -> "TR::Z::ZOSBaseSystemLinkage"
	"TR::Z::ZOSBaseSystemLinkage" -> "TR::SystemLinkage"
	"TR::S390RestoreGPR7Snippet" -> "TR::Snippet"
	"JITS390OpCodesTest_BitwiseTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_CompareTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_DISABLED_S390BitwiseTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_DISABLED_S390CompareTests_Test" -> "testing::Test"
	"JITS390OpCodesTest_DISABLED_S390ConvertToAddressTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_DISABLED_S390DirectCallTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_DISABLED_S390IntegerArithmeticTests_Test" -> "testing::Test"
	"JITS390OpCodesTest_DISABLED_S390MemoryOperationTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_DISABLED_S390TernaryTests_Test" -> "testing::Test"
	"JITS390OpCodesTest_DISABLED_S390UnaryTests_Test" -> "testing::Test"
	"JITS390OpCodesTest_DirectCallTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_FloatArithmeticTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_IntegerArithmeticTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_MemoryOperationTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_S390AddressTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_TernaryTest_Test" -> "testing::Test"
	"JITS390OpCodesTest_UnaryTest_Test" -> "testing::Test"
}