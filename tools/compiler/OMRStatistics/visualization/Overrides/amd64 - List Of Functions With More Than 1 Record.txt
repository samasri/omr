getKind()-->86

self()-->13

asBlock()-->2

isStatic()-->2

getName()-->12

~Machine()-->3

Register(enum TR_RegisterKinds)-->2

Register(uint32_t)-->2

Register(enum TR_RegisterKinds,uint16_t)-->2

block()-->2

getRegister()-->2

unblock()-->2

~RealRegister()-->3

~Register()-->2

CPU()-->2

~CPU()-->2

DebugEnv()-->2

~DebugEnv()-->2

assignRegisters(enum TR_RegisterKinds)-->26

defsRegister(TR::Register *)-->6

estimateBinaryLength(int32_t)-->23

generateBinaryEncoding()-->7

isPatchBarrier()-->2

refsRegister(TR::Register *)-->8

usesRegister(TR::Register *)-->8

~Instruction()-->2

Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,_Bool)-->2

Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *)-->2

~Snippet()-->2

jitPersistentAlloc(size_t)-->37

jitPersistentFree(void *)-->37

operator delete(void *,size_t)-->37

operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType)-->37

operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType)-->37

operator delete(void *,class TR_Memory *,enum TR_AllocationKind)-->37

operator delete(void *,TR::Region &)-->37

operator delete[](void *,TR::Region &)-->37

operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType)-->37

operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType)-->37

operator delete[](void *,class TR_Memory *,enum TR_AllocationKind)-->37

operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType)-->37

operator new(size_t,class TR_PersistentMemory *)-->37

operator new(size_t,TR_ArenaAllocator *)-->37

operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType)-->37

operator new(size_t,class TR_Memory *,enum TR_AllocationKind)-->37

operator new(size_t,TR::Internal::PersistentNewType)-->37

operator new(size_t,TR::Region &)-->37

operator new[](size_t,class TR_PersistentMemory *)-->37

operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType)-->37

operator new[](size_t,TR::Internal::PersistentNewType)-->37

operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType)-->37

operator new[](size_t,TR::Region &)-->37

operator new[](size_t,class TR_Memory *,enum TR_AllocationKind)-->37

CodeGenerator()-->4

internalPointerSupportImplemented()-->2

~CodeGenerator()-->4

accumulate()-->2

getBumpCountAddress()-->2

getBumpCountSymRef(TR::Compilation *)-->2

ObjectModel()-->2

~ObjectModel()-->2

Optimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool,const struct OptimizationStrategy *,uint16_t)-->2

classNameChars()-->2

classNameLength()-->2

isConstructor()-->2

nameChars()-->2

nameLength()-->2

signatureChars()-->2

signatureLength()-->3

calculateHash(const void *)-->5

isEqual(const void *,const void *)-->4

currentNode()-->2

logCurrentLocation()-->2

operator++()-->4

stepForward()-->5

thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *)-->10

getArrayInfo()-->2

intersect1(TR::VPConstraint *,OMR::ValuePropagation *)-->20

merge1(TR::VPConstraint *,OMR::ValuePropagation *)-->15

name()-->24

print(TR::Compilation *,TR::FILE *)-->24

getClass()-->2

getClassPresence()-->2

getClassSignature(int32_t &)-->4

getClassType()-->2

getConstString()-->2

getKnownObject()-->2

getObjectLocation()-->2

getPreexistence()-->2

isClassObject()-->3

isConstString()-->2

isFixedClass()-->2

isHeapObject()-->2

isJ9ClassObject()-->3

isJavaLangClassObject()-->4

isNonNullObject()-->2

isNullObject()-->2

isPreexistentObject()-->2

isStackObject()-->2

mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *)-->7

mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *)-->9

getArrayClass(OMR::ValuePropagation *)-->3

hasMoreThanFixedClassInfo()-->2

isPrimitiveArray(TR::Compilation *)-->2

isReferenceArray(TR::Compilation *)-->2

getComplement(OMR::ValuePropagation *)-->4

mustBeGreaterThan()-->2

mustBeGreaterThanOrEqual()-->2

mustBeLessThan()-->2

mustBeLessThanOrEqual()-->2

mustBeNotEqual()-->4

print(TR::Compilation *,TR::FILE *,int32_t)-->4

propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *)-->4

propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *)-->4

add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *)-->3

canOverflow()-->3

getHigh()-->6

getHighInt()-->2

getLowInt()-->2

getPrecision()-->9

mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *)-->4

mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *)-->4

setCanOverflow(enum TR_YesNoMaybe)-->3

subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *)-->3

getHighLong()-->2

getLowLong()-->2

getHighShort()-->2

getLowShort()-->2

addExternalEdge(class TR_Structure *,int32_t,_Bool)-->2

changeContinueLoopsToNestedLoops(class TR_RegionStructure *)-->2

checkStructure(class TR_BitVector *)-->2

clearAnalysisInfo()-->2

cloneStructure(TR::Block **,class TR_StructureSubGraphNode **,List *,List *)-->2

cloneStructureEdges(TR::Block **)-->2

collectCFGEdgesTo(int32_t,List *)-->2

collectExitBlocks(List *,List *)-->2

doDataFlowAnalysis(class TR_DataFlowAnalysis *,_Bool)-->2

getBlocks(List *)-->2

getBlocks(List *,vcount_t)-->2

getEntryBlock()-->2

hoistInvariantsOutOfNestedLoops(class TR_LocalTransparency *,class TR_BitVector **,_Bool,class TR_BlockStructure *,class TR_RegionStructure *,int32_t)-->2

isExpressionTransparentIn(int32_t,class TR_LocalTransparency *)-->2

markStructuresWithImproperRegions()-->2

removeEdge(class TR_Structure *,class TR_Structure *)-->2

removeExternalEdgeTo(class TR_Structure *,int32_t)-->2

renumber(int32_t)-->2

renumberRecursively(int32_t,int32_t)-->2

replacePart(class TR_Structure *,class TR_Structure *)-->2

resetAnalysisInfo()-->2

resetAnalyzedStatus()-->2

resetVisitCounts(vcount_t)-->2

getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *)-->3

print(class TR_FrontEnd *,TR::FILE *,const char *)-->3

IlGeneratorMethodDetails()-->2

~IlGeneratorMethodDetails()-->2

optDetailString()-->69

perform()-->70

get(uint32_t)-->2

print(TR::Compilation *)-->2

set(uint32_t)-->2

createEpilogue(TR::Instruction *)-->2

createPrologue(TR::Instruction *)-->2

~Linkage()-->2

allocationLimit()-->2

bytesAllocated()-->2

regionBytesAllocated()-->2

release(TR::MemorySegment &)-->2

request(size_t)-->2

setAllocationLimit(size_t)-->2

systemBytesAllocated()-->2

__pointer_catch(const class __cxxabiv1::__pbase_type_info *,void **,unsigned int)-->2

__do_dyncast(ptrdiff_t,enum __cxxabiv1::__class_type_info::__sub_kind,const class __cxxabiv1::__class_type_info *,const void *,const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__dyncast_result &)-->2

__do_find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *)-->2

__do_upcast(const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__upcast_result &__restrict)-->2

shouldPerform()-->4

analyzeBlockStructure(class TR_BlockStructure *,_Bool)-->6

analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *)-->6

analyzeRegionStructure(class TR_RegionStructure *,_Bool)-->5

analyzeTreeTopsInBlockStructure(class TR_BlockStructure *)-->11

canGenAndKillForStructure(class TR_Structure *)-->5

compose(Container *,Container *)-->6

getNumberOfBits()-->14

initializeCurrentGenKillSetInfo()-->10

initializeDFSetAnalysis()-->5

initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *)-->5

initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *)-->5

initializeInfo(Container *)-->6

initializeOutSetInfo()-->5

inverseCompose(Container *,Container *)-->6

inverseInitializeInfo(Container *)-->6

postInitializationProcessing()-->11

initializeGenAndKillSetInfo()-->6

supportsGenAndKillSets()-->7

initialize()-->3

initializeInSetInfo()-->5

analyzeBlockZeroStructure(class TR_BlockStructure *)-->4

supportsGenAndKillSetsForStructures()-->2

compose(class TR_BitVector *,class TR_BitVector *)-->3

create(TR::OptimizationManager *)-->5

performOnBlock(TR::Block *)-->15

prePerformOnBlocks()-->10

detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t)-->4

examineTreeForInductionVariableUse(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t,TR::SymbolReference **)-->2

getExitValue()-->2

getIterationCount()-->2

isStoreInRequiredForm(int32_t,class TR_Structure *)-->2

getFirstSuccessor()-->2

getNextSuccessor()-->2

postPerformOnBlocks()-->7

sinkStorePlacement(class TR_MovableStore *,_Bool)-->2

storeIsSinkingCandidate(TR::Block *,TR::Node *,int32_t,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t &,vcount_t &)-->2

isOrigin(TR::Block *)-->4

propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *)-->3

report(FILE *)-->2

apply(TR::CodeGenerator *)-->13

isAOTRelocation()-->4

RegisterDependencyConditions()-->2

emitSnippetBody()-->5

getLength(int32_t)-->6

MemoryReference(TR::Register *,TR::SymbolReference *,TR::Register *,uint8_t,TR::CodeGenerator *)-->2

MemoryReference(TR::Register *,TR::Register *,uint8_t,TR::CodeGenerator *)-->2

MemoryReference(TR::LabelSymbol *,TR::CodeGenerator *)-->2

MemoryReference(TR::CodeGenerator *)-->2

MemoryReference(TR::IA32DataSnippet *,TR::CodeGenerator *)-->2

MemoryReference(TR::Register *,TR::Register *,uint8_t,intptrj_t,TR::CodeGenerator *)-->2

MemoryReference(TR::Register *,intptrj_t,TR::CodeGenerator *)-->2

~MemoryReference()-->3

addMetaDataForCodeAddress(uint8_t *)-->6

description()-->46

generateOperand(uint8_t *)-->28

getBinaryLengthLowerBound()-->14

enlarge(int32_t,int32_t,_Bool)-->6

getNumOperandReferencedGPRegisters()-->12

rexBits()-->5

adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *)-->8

getMemoryReference()-->2

getSnippetForGC()-->5

needsLockPrefix()-->2

getNumOperandReferencedFPRegisters()-->4

getSourceRegister()-->2

getSourceRightRegister()-->2

genFPConversion(uint8_t *)-->2

buildDirectDispatch(TR::Node *,_Bool)-->2

buildIndirectDispatch(TR::Node *)-->2

CodeCacheManager(class TR_FrontEnd *)-->2

~CodeCacheManager()-->2

IlInjector(TR::TypeDictionary *)-->2

IlInjector(TR::IlInjector *)-->2

currentByteCodeIndex()-->2

initialize(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *)-->2

injectIL()-->16

~IlInjector()-->2

IlBuilder(TR::IlBuilder *)-->2

asMethodBuilder()-->2

isMethodBuilder()-->2

~IlBuilder()-->2

compileTestMethods()-->5

invokeTests()-->5

TestBody()-->39

buildIL()-->23

connectTrees()-->2

countBlocks()-->2

~MethodBuilder()-->2

CreateTest()-->2

UnsupportedOpCodesTests()-->2

compileAddressTestMethods()-->3

compileCompareTestMethods()-->3

compileMemoryOperationTestMethods()-->3

compileTernaryTestMethods()-->3

compileUnaryTestMethods()-->3

invokeAddressTests()-->3

invokeBitwiseTests()-->3

invokeCompareTests()-->3

invokeMemoryOperationTests()-->3

invokeTernaryTests()-->3

invokeUnaryTests()-->3

verify(TR::ResolvedMethodSymbol *)-->3

compileIntegerArithmeticTestMethods()-->2

invokeIntegerArithmeticTests()-->2

getPrimitiveType()-->4

getSize()-->4