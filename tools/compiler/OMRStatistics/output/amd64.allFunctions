(Arch: AMD64): Compiling ../../../../compiler/compile/OSRData.cpp
FunctionName; FunctionSignature; Namespace; ClassName; isImplicit; isVirtual
Cursor;Cursor(const ABitVector<Allocator> &);CS2::ABitVector;Cursor;0;0
Cursor;Cursor(const class CS2::ABitVector::Cursor &);CS2::ABitVector;Cursor;0;0
SetToFirstOne;SetToFirstOne();CS2::ABitVector;Cursor;0;0
SetToFirstZero;SetToFirstZero();CS2::ABitVector;Cursor;0;0
SetToNextOne;SetToNextOne();CS2::ABitVector;Cursor;0;0
SetToNextOneAfter;SetToNextOneAfter(uint32_t);CS2::ABitVector;Cursor;0;0
SetToNextZero;SetToNextZero();CS2::ABitVector;Cursor;0;0
Valid;Valid();CS2::ABitVector;Cursor;0;0
iterator;iterator(const ABitVector<Allocator> &,BitIndex);CS2::ABitVector;iterator;0;0
operator unsigned int;operator unsigned int();CS2::ABitVector;Cursor;0;0
operator unsigned int;operator unsigned int();CS2::ABitVector;iterator;0;0
operator!=;operator!=(const class CS2::ABitVector::iterator &);CS2::ABitVector;iterator;0;0
operator*;operator*();CS2::ABitVector;iterator;0;0
operator++;operator++();CS2::ABitVector;iterator;0;0
operator=;operator=(const class CS2::ABitVector::Cursor &);CS2::ABitVector;Cursor;0;0
operator==;operator==(const class CS2::ABitVector::iterator &);CS2::ABitVector;iterator;0;0
Name;Name(_Bool);CS2;Timer;0;0
Read;Read();CS2;BSDTimer;0;0
Read;Read();CS2;Timer;0;0
Reset;Reset();CS2;BSDTimer;0;0
Reset;Reset();CS2;Timer;0;0
Start;Start();CS2;BSDTimer;0;0
Start;Start();CS2;Timer;0;0
Stop;Stop();CS2;BSDTimer;0;0
Stop;Stop();CS2;Timer;0;0
UnitsText;UnitsText(_Bool);CS2;Timer;0;0
sprintfMetric;sprintfMetric(char *,Metric,Metric,_Bool,_Bool);CS2;Timer;0;0
GlobalSingletonAllocator;GlobalSingletonAllocator(class TR::GlobalSingletonAllocator &&);TR;GlobalSingletonAllocator;1;0
GlobalSingletonAllocator;GlobalSingletonAllocator(const GlobalBaseAllocator &);TR;GlobalSingletonAllocator;0;0
TRPersistentMemoryAllocator;TRPersistentMemoryAllocator(class TR_Memory *);;TRPersistentMemoryAllocator;0;0
TRPersistentMemoryAllocator;TRPersistentMemoryAllocator(const class TRPersistentMemoryAllocator &);;TRPersistentMemoryAllocator;0;0
TRPersistentMemoryAllocator;TRPersistentMemoryAllocator(class TR_PersistentMemory *);;TRPersistentMemoryAllocator;0;0
allocate;allocate(size_t,const char *,int);;TRPersistentMemoryAllocator;0;0
allocate;allocate(size_t,const char *);CS2;stat_allocator;0;0
createInstance;createInstance();TR;GlobalSingletonAllocator;0;0
deallocate;deallocate(void *,size_t,const char *,int);;TRPersistentMemoryAllocator;0;0
deallocate;deallocate(void *,size_t,const char *);CS2;stat_allocator;0;0
instance;instance();TR;GlobalSingletonAllocator;0;0
operator=;operator=(const class TRPersistentMemoryAllocator &);;TRPersistentMemoryAllocator;1;0
operator=;operator=(class TR::GlobalSingletonAllocator &&);TR;GlobalSingletonAllocator;1;0
reallocate;reallocate(size_t,void *,size_t,const char *,int);;TRPersistentMemoryAllocator;0;0
reallocate;reallocate(size_t,void *,size_t,const char *);CS2;stat_allocator;0;0
stat_allocator<base_allocator>;stat_allocator<base_allocator>(const base_allocator &,_Bool);CS2;stat_allocator;0;0
~GlobalSingletonAllocator;~GlobalSingletonAllocator();TR;GlobalSingletonAllocator;1;0
~TRPersistentMemoryAllocator;~TRPersistentMemoryAllocator();;TRPersistentMemoryAllocator;1;0
~stat_allocator<base_allocator>;~stat_allocator<base_allocator>();CS2;stat_allocator;0;0
AutomaticSymbol;AutomaticSymbol(class OMR::AutomaticSymbol &&);OMR;AutomaticSymbol;1;0
AutomaticSymbol;AutomaticSymbol(const class OMR::AutomaticSymbol &);OMR;AutomaticSymbol;1;0
AutomaticSymbol;AutomaticSymbol(TR::DataType,uint32_t,const char *);OMR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol(TR::DataType,uint32_t,const char *);TR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol();OMR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol(TR::DataType);OMR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol(TR::DataType);TR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol(TR::DataType,uint32_t);OMR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol(TR::DataType,uint32_t);TR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol(int32_t);TR;AutomaticSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(TR::DataType,uint32_t);OMR;RegisterMappedSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(TR::DataType,uint32_t);TR;RegisterMappedSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(const class OMR::RegisterMappedSymbol &);OMR;RegisterMappedSymbol;1;0
RegisterMappedSymbol;RegisterMappedSymbol(int32_t);OMR;RegisterMappedSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(int32_t);TR;RegisterMappedSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(TR::DataType);OMR;RegisterMappedSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(TR::DataType);TR;RegisterMappedSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(class OMR::RegisterMappedSymbol &&);OMR;RegisterMappedSymbol;1;0
RegisterMappedSymbol;RegisterMappedSymbol(class TR::RegisterMappedSymbol &&);TR;RegisterMappedSymbol;1;0
RegisterMappedSymbol;RegisterMappedSymbol(const class TR::RegisterMappedSymbol &);TR;RegisterMappedSymbol;1;0
Symbol;Symbol(TR::DataType);OMR;Symbol;0;0
Symbol;Symbol(TR::DataType);TR;Symbol;0;0
Symbol;Symbol();OMR;Symbol;0;0
Symbol;Symbol();TR;Symbol;0;0
Symbol;Symbol(TR::DataType,uint32_t);OMR;Symbol;0;0
Symbol;Symbol(TR::DataType,uint32_t);TR;Symbol;0;0
Symbol;Symbol(const class OMR::Symbol &);OMR;Symbol;1;0
Symbol;Symbol(const class TR::Symbol &);TR;Symbol;1;0
Symbol;Symbol(class TR::Symbol &&);TR;Symbol;1;0
addressIsCPIndexOfStatic;addressIsCPIndexOfStatic();OMR;Symbol;0;0
behaveLikeNonTemp;behaveLikeNonTemp();OMR;Symbol;0;0
castToAutoMarkerSymbol;castToAutoMarkerSymbol();OMR;Symbol;0;0
castToAutoSymbol;castToAutoSymbol();OMR;Symbol;0;0
castToCallSiteTableEntrySymbol;castToCallSiteTableEntrySymbol();OMR;Symbol;0;0
castToInternalPointerAutoSymbol;castToInternalPointerAutoSymbol();OMR;Symbol;0;0
castToJittedMethodSymbol;castToJittedMethodSymbol();OMR;Symbol;0;0
castToLabelSymbol;castToLabelSymbol();OMR;Symbol;0;0
castToLocalObjectSymbol;castToLocalObjectSymbol();OMR;Symbol;0;0
castToMethodMetaDataSymbol;castToMethodMetaDataSymbol();OMR;Symbol;0;0
castToMethodSymbol;castToMethodSymbol();OMR;Symbol;0;0
castToMethodTypeTableEntrySymbol;castToMethodTypeTableEntrySymbol();OMR;Symbol;0;0
castToNamedStaticSymbol;castToNamedStaticSymbol();OMR;Symbol;0;0
castToParmSymbol;castToParmSymbol();OMR;Symbol;0;0
castToRegisterMappedSymbol;castToRegisterMappedSymbol();OMR;Symbol;0;0
castToResolvedMethodSymbol;castToResolvedMethodSymbol();OMR;Symbol;0;0
castToShadowSymbol;castToShadowSymbol();OMR;Symbol;0;0
castToStaticSymbol;castToStaticSymbol();OMR;Symbol;0;0
castToVariableSizeSymbol;castToVariableSizeSymbol();OMR;Symbol;0;0
convertSigCharToType;convertSigCharToType(char);OMR;Symbol;0;0
convertTypeToNumberOfSlots;convertTypeToNumberOfSlots(TR::DataType);OMR;Symbol;0;0
convertTypeToSize;convertTypeToSize(TR::DataType);OMR;Symbol;0;0
decReferenceCount;decReferenceCount();OMR;AutomaticSymbol;0;0
dontEliminateStores;dontEliminateStores(TR::Compilation *,_Bool);OMR;Symbol;0;0
getActiveSize;getActiveSize();OMR;AutomaticSymbol;0;0
getArrayType;getArrayType();OMR;AutomaticSymbol;0;0
getAutoSymbol;getAutoSymbol();OMR;Symbol;0;0
getCallSiteTableEntrySymbol;getCallSiteTableEntrySymbol();OMR;Symbol;0;0
getClassSymbolReference;getClassSymbolReference();OMR;AutomaticSymbol;0;0
getDataType;getDataType();OMR;Symbol;0;0
getFlags;getFlags();OMR;Symbol;0;0
getFlags2;getFlags2();OMR;Symbol;0;0
getGCMapIndex;getGCMapIndex();OMR;RegisterMappedSymbol;0;0
getInternalPointerAutoSymbol;getInternalPointerAutoSymbol();OMR;Symbol;0;0
getJittedMethodSymbol;getJittedMethodSymbol();OMR;Symbol;0;0
getKind;getKind();OMR;Symbol;0;0
getKind;getKind();OMR;AutomaticSymbol;0;0
getLabelSymbol;getLabelSymbol();OMR;Symbol;0;0
getLiveLocalIndex;getLiveLocalIndex();OMR;RegisterMappedSymbol;0;0
getLocalIndex;getLocalIndex();OMR;Symbol;0;0
getLocalObjectSymbol;getLocalObjectSymbol();OMR;Symbol;0;0
getMethodMetaDataSymbol;getMethodMetaDataSymbol();OMR;Symbol;0;0
getMethodMetaDataType;getMethodMetaDataType();OMR;RegisterMappedSymbol;0;0
getMethodSymbol;getMethodSymbol();OMR;Symbol;0;0
getMethodTypeTableEntrySymbol;getMethodTypeTableEntrySymbol();OMR;Symbol;0;0
getName;getName();OMR;Symbol;0;0
getNamedShadowSymbol;getNamedShadowSymbol();OMR;Symbol;0;0
getNodeToFreeAfter;getNodeToFreeAfter();OMR;AutomaticSymbol;0;0
getNumberOfSlots;getNumberOfSlots();OMR;Symbol;0;0
getOffset;getOffset();OMR;Symbol;0;0
getOffset;getOffset();OMR;RegisterMappedSymbol;0;0
getParmSymbol;getParmSymbol();OMR;Symbol;0;0
getPinningArrayPointer;getPinningArrayPointer();OMR;AutomaticSymbol;0;0
getRecognizedStaticSymbol;getRecognizedStaticSymbol();OMR;Symbol;0;0
getReferenceCount;getReferenceCount();OMR;AutomaticSymbol;0;0
getReferenceSlots;getReferenceSlots();OMR;AutomaticSymbol;0;0
getRegisterMappedSymbol;getRegisterMappedSymbol();OMR;Symbol;0;0
getResolvedMethodSymbol;getResolvedMethodSymbol();OMR;Symbol;0;0
getRestrictedRegisterNumber;getRestrictedRegisterNumber();OMR;Symbol;0;0
getRoundedSize;getRoundedSize();OMR;Symbol;0;0
getShadowSymbol;getShadowSymbol();OMR;Symbol;0;0
getSize;getSize();OMR;Symbol;0;0
getStaticSymbol;getStaticSymbol();OMR;Symbol;0;0
getType;getType();OMR;Symbol;0;0
getVariableSizeSymbol;getVariableSizeSymbol();OMR;Symbol;0;0
holdsMonitoredObject;holdsMonitoredObject();OMR;Symbol;0;0
incReferenceCount;incReferenceCount();OMR;AutomaticSymbol;0;0
init;init();OMR;AutomaticSymbol;0;0
isAddressOfClassObject;isAddressOfClassObject();OMR;Symbol;0;0
isAddressTaken;isAddressTaken();OMR;AutomaticSymbol;0;0
isArrayShadowSymbol;isArrayShadowSymbol();OMR;Symbol;0;0
isArrayletShadowSymbol;isArrayletShadowSymbol();OMR;Symbol;0;0
isAuto;isAuto();OMR;Symbol;0;0
isAutoAddressTaken;isAutoAddressTaken();OMR;Symbol;0;0
isAutoField;isAutoField();OMR;Symbol;0;0
isAutoMarkerSymbol;isAutoMarkerSymbol();OMR;Symbol;0;0
isAutoOrParm;isAutoOrParm();OMR;Symbol;0;0
isCallSiteTableEntry;isCallSiteTableEntry();OMR;Symbol;0;0
isClassObject;isClassObject();OMR;Symbol;0;0
isCollectedReference;isCollectedReference();OMR;Symbol;0;0
isCompiledMethod;isCompiledMethod();OMR;Symbol;0;0
isConst;isConst();OMR;Symbol;0;0
isConstMethodHandle;isConstMethodHandle();OMR;Symbol;0;0
isConstMethodType;isConstMethodType();OMR;Symbol;0;0
isConstObjectRef;isConstObjectRef();OMR;Symbol;0;0
isConstString;isConstString();OMR;Symbol;0;0
isCountForRecompile;isCountForRecompile();OMR;Symbol;0;0
isEndInternalControlFlow;isEndInternalControlFlow();OMR;Symbol;0;0
isEndOfColdInstructionStream;isEndOfColdInstructionStream();OMR;Symbol;0;0
isFinal;isFinal();OMR;Symbol;0;0
isFixedObjectRef;isFixedObjectRef();OMR;Symbol;0;0
isGCRPatchPoint;isGCRPatchPoint();OMR;Symbol;0;0
isGlobalFragmentShadowSymbol;isGlobalFragmentShadowSymbol();OMR;Symbol;0;0
isGlobalLabel;isGlobalLabel();OMR;Symbol;0;0
isHasAddrTaken;isHasAddrTaken();OMR;Symbol;0;0
isImmutableField;isImmutableField();OMR;Symbol;0;0
isInGlobalRegister;isInGlobalRegister();OMR;Symbol;0;0
isInitializedReference;isInitializedReference();OMR;Symbol;0;0
isInternalControlFlowMerge;isInternalControlFlowMerge();OMR;Symbol;0;0
isInternalPointer;isInternalPointer();OMR;Symbol;0;0
isInternalPointerAuto;isInternalPointerAuto();OMR;Symbol;0;0
isJittedMethod;isJittedMethod();OMR;Symbol;0;0
isLabel;isLabel();OMR;Symbol;0;0
isLiveLocalIndexUninitialized;isLiveLocalIndexUninitialized();OMR;RegisterMappedSymbol;0;0
isLocalObject;isLocalObject();OMR;Symbol;0;0
isMemoryTypeShadowSymbol;isMemoryTypeShadowSymbol();OMR;Symbol;0;0
isMethod;isMethod();OMR;Symbol;0;0
isMethodMetaData;isMethodMetaData();OMR;Symbol;0;0
isMethodTypeTableEntry;isMethodTypeTableEntry();OMR;Symbol;0;0
isNamed;isNamed();OMR;Symbol;0;0
isNamedShadowSymbol;isNamedShadowSymbol();OMR;Symbol;0;0
isNonLinear;isNonLinear();OMR;Symbol;0;0
isNotCollected;isNotCollected();OMR;Symbol;0;0
isNotDataAddress;isNotDataAddress();OMR;Symbol;0;0
isOrdered;isOrdered();OMR;Symbol;0;0
isParm;isParm();OMR;Symbol;0;0
isParmField;isParmField();OMR;Symbol;0;0
isParmHasToBeOnStack;isParmHasToBeOnStack();OMR;Symbol;0;0
isPendingPush;isPendingPush();OMR;Symbol;0;0
isPinningArrayPointer;isPinningArrayPointer();OMR;Symbol;0;0
isPrivate;isPrivate();OMR;Symbol;0;0
isPythonConstantShadowSymbol;isPythonConstantShadowSymbol();OMR;Symbol;0;0
isPythonLocalVariableShadowSymbol;isPythonLocalVariableShadowSymbol();OMR;Symbol;0;0
isPythonNameShadowSymbol;isPythonNameShadowSymbol();OMR;Symbol;0;0
isRecognizedShadow;isRecognizedShadow();OMR;Symbol;0;0
isRecognizedStatic;isRecognizedStatic();OMR;Symbol;0;0
isRecompilationCounter;isRecompilationCounter();OMR;Symbol;0;0
isReferenced;isReferenced();OMR;Symbol;0;0
isReferenced;isReferenced();OMR;AutomaticSymbol;0;0
isReferencedParameter;isReferencedParameter();OMR;Symbol;0;0
isRegisterMappedSymbol;isRegisterMappedSymbol();OMR;Symbol;0;0
isRegularShadow;isRegularShadow();OMR;Symbol;0;0
isReinstatedReceiver;isReinstatedReceiver();OMR;Symbol;0;0
isRelativeLabel;isRelativeLabel();OMR;Symbol;0;0
isResolvedMethod;isResolvedMethod();OMR;Symbol;0;0
isShadow;isShadow();OMR;Symbol;0;0
isSingleUse;isSingleUse();OMR;AutomaticSymbol;0;0
isSlotSharedByRefAndNonRef;isSlotSharedByRefAndNonRef();OMR;Symbol;0;0
isSpillTempAuto;isSpillTempAuto();OMR;Symbol;0;0
isSpillTempLoaded;isSpillTempLoaded();OMR;Symbol;0;0
isStartInternalControlFlow;isStartInternalControlFlow();OMR;Symbol;0;0
isStartOfColdInstructionStream;isStartOfColdInstructionStream();OMR;Symbol;0;0
isStartPC;isStartPC();OMR;Symbol;0;0
isStatic;isStatic();OMR;Symbol;0;0
isStaticField;isStaticField();OMR;Symbol;0;0
isSyncVolatile;isSyncVolatile();OMR;Symbol;0;0
isThisTempForObjectCtor;isThisTempForObjectCtor();OMR;Symbol;0;0
isUnsafeShadowSymbol;isUnsafeShadowSymbol();OMR;Symbol;0;0
isVariableSizeSymbol;isVariableSizeSymbol();OMR;Symbol;0;0
isVolatile;isVolatile();OMR;Symbol;0;0
isWeakSymbol;isWeakSymbol();OMR;Symbol;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Symbol;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Symbol;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Symbol;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Symbol;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Symbol;0;0
operator delete;operator delete(void *,size_t);OMR;Symbol;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Symbol;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Symbol;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Symbol;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Symbol;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Symbol;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Symbol;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Symbol;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Symbol;0;0
operator new;operator new(size_t,TR::Region &);OMR;Symbol;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Symbol;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Symbol;0;0
operator=;operator=(const class OMR::Symbol &);OMR;Symbol;1;0
operator=;operator=(const class TR::Symbol &);TR;Symbol;1;0
operator=;operator=(class TR::Symbol &&);TR;Symbol;1;0
operator=;operator=(class OMR::RegisterMappedSymbol &&);OMR;RegisterMappedSymbol;1;0
operator=;operator=(const class OMR::RegisterMappedSymbol &);OMR;RegisterMappedSymbol;1;0
operator=;operator=(class TR::RegisterMappedSymbol &&);TR;RegisterMappedSymbol;1;0
operator=;operator=(const class TR::RegisterMappedSymbol &);TR;RegisterMappedSymbol;1;0
operator=;operator=(const class OMR::AutomaticSymbol &);OMR;AutomaticSymbol;1;0
operator=;operator=(class OMR::AutomaticSymbol &&);OMR;AutomaticSymbol;1;0
operator=;operator=(class TR::AutomaticSymbol &&);TR;AutomaticSymbol;1;0
operator=;operator=(const class TR::AutomaticSymbol &);TR;AutomaticSymbol;1;0
resetReferencedParameter;resetReferencedParameter();OMR;Symbol;0;0
resetVolatile;resetVolatile();OMR;Symbol;0;0
self;self();OMR;Symbol;0;0
self;self();OMR;RegisterMappedSymbol;0;0
self;self();OMR;AutomaticSymbol;0;0
setActiveSize;setActiveSize(uint32_t);OMR;AutomaticSymbol;0;0
setAddressIsCPIndexOfStatic;setAddressIsCPIndexOfStatic(_Bool);OMR;Symbol;0;0
setAddressOfClassObject;setAddressOfClassObject();OMR;Symbol;0;0
setArrayShadowSymbol;setArrayShadowSymbol();OMR;Symbol;0;0
setArrayletShadowSymbol;setArrayletShadowSymbol();OMR;Symbol;0;0
setAutoAddressTaken;setAutoAddressTaken();OMR;Symbol;0;0
setAutoMarkerSymbol;setAutoMarkerSymbol();OMR;Symbol;0;0
setBehaveLikeNonTemp;setBehaveLikeNonTemp();OMR;Symbol;0;0
setCallSiteTableEntry;setCallSiteTableEntry();OMR;Symbol;0;0
setClassObject;setClassObject();OMR;Symbol;0;0
setClassSymbolReference;setClassSymbolReference(TR::SymbolReference *);OMR;AutomaticSymbol;0;0
setCompiledMethod;setCompiledMethod();OMR;Symbol;0;0
setConst;setConst();OMR;Symbol;0;0
setConstMethodHandle;setConstMethodHandle();OMR;Symbol;0;0
setConstMethodType;setConstMethodType();OMR;Symbol;0;0
setConstString;setConstString();OMR;Symbol;0;0
setCountForRecompile;setCountForRecompile();OMR;Symbol;0;0
setDataType;setDataType(TR::DataType);OMR;Symbol;0;0
setEndInternalControlFlow;setEndInternalControlFlow();OMR;Symbol;0;0
setEndOfColdInstructionStream;setEndOfColdInstructionStream();OMR;Symbol;0;0
setFinal;setFinal();OMR;Symbol;0;0
setFlagValue;setFlagValue(uint32_t,_Bool);OMR;Symbol;0;0
setGCMapIndex;setGCMapIndex(int32_t);OMR;RegisterMappedSymbol;0;0
setGCRPatchPoint;setGCRPatchPoint();OMR;Symbol;0;0
setGlobalFragmentShadowSymbol;setGlobalFragmentShadowSymbol();OMR;Symbol;0;0
setGlobalLabel;setGlobalLabel();OMR;Symbol;0;0
setHasAddrTaken;setHasAddrTaken();OMR;Symbol;0;0
setHoldsMonitoredObject;setHoldsMonitoredObject();OMR;Symbol;0;0
setImmutableField;setImmutableField();OMR;Symbol;0;0
setInitializedReference;setInitializedReference();OMR;Symbol;0;0
setInternalControlFlowMerge;setInternalControlFlowMerge();OMR;Symbol;0;0
setInternalPointer;setInternalPointer();OMR;Symbol;0;0
setIsAddressTaken;setIsAddressTaken(_Bool);OMR;AutomaticSymbol;0;0
setIsInGlobalRegister;setIsInGlobalRegister(_Bool);OMR;Symbol;0;0
setIsLabel;setIsLabel();OMR;Symbol;0;0
setIsPendingPush;setIsPendingPush();OMR;Symbol;0;0
setIsReferenced;setIsReferenced(_Bool);OMR;AutomaticSymbol;0;0
setIsSingleUse;setIsSingleUse(_Bool);OMR;AutomaticSymbol;0;0
setLiveLocalIndex;setLiveLocalIndex(uint16_t,class TR_FrontEnd *);OMR;RegisterMappedSymbol;0;0
setLiveLocalIndexUninitialized;setLiveLocalIndexUninitialized();OMR;RegisterMappedSymbol;0;0
setLocalIndex;setLocalIndex(uint16_t);OMR;Symbol;0;0
setLocalObject;setLocalObject();OMR;Symbol;0;0
setMemoryTypeShadowSymbol;setMemoryTypeShadowSymbol();OMR;Symbol;0;0
setMethodMetaDataType;setMethodMetaDataType(enum TR_MethodMetaDataType);OMR;RegisterMappedSymbol;0;0
setMethodTypeTableEntry;setMethodTypeTableEntry();OMR;Symbol;0;0
setName;setName(const char *);OMR;Symbol;0;0
setNamedShadowSymbol;setNamedShadowSymbol();OMR;Symbol;0;0
setNodeToFreeAfter;setNodeToFreeAfter(TR::Node *);OMR;AutomaticSymbol;0;0
setNonLinear;setNonLinear();OMR;Symbol;0;0
setNotCollected;setNotCollected();OMR;Symbol;0;0
setNotDataAddress;setNotDataAddress();OMR;Symbol;0;0
setOffset;setOffset(int32_t);OMR;RegisterMappedSymbol;0;0
setOrdered;setOrdered();OMR;Symbol;0;0
setParmHasToBeOnStack;setParmHasToBeOnStack();OMR;Symbol;0;0
setPinningArrayPointer;setPinningArrayPointer();OMR;Symbol;0;0
setPinningArrayPointer;setPinningArrayPointer(TR::AutomaticSymbol *);OMR;AutomaticSymbol;0;0
setPrivate;setPrivate();OMR;Symbol;0;0
setPythonConstantShadowSymbol;setPythonConstantShadowSymbol();OMR;Symbol;0;0
setPythonLocalVariableShadowSymbol;setPythonLocalVariableShadowSymbol();OMR;Symbol;0;0
setPythonNameShadowSymbol;setPythonNameShadowSymbol();OMR;Symbol;0;0
setRecompilationCounter;setRecompilationCounter();OMR;Symbol;0;0
setReferenceCount;setReferenceCount(rcount_t);OMR;AutomaticSymbol;0;0
setReferenceSlots;setReferenceSlots(int32_t *);OMR;AutomaticSymbol;0;0
setReferencedParameter;setReferencedParameter();OMR;Symbol;0;0
setReinstatedReceiver;setReinstatedReceiver();OMR;Symbol;0;0
setRelativeLabel;setRelativeLabel();OMR;Symbol;0;0
setSize;setSize(size_t);OMR;Symbol;0;0
setSlotSharedByRefAndNonRef;setSlotSharedByRefAndNonRef(_Bool);OMR;Symbol;0;0
setSpillTempAuto;setSpillTempAuto();OMR;Symbol;0;0
setSpillTempLoaded;setSpillTempLoaded();OMR;Symbol;0;0
setStartInternalControlFlow;setStartInternalControlFlow();OMR;Symbol;0;0
setStartOfColdInstructionStream;setStartOfColdInstructionStream();OMR;Symbol;0;0
setStartPC;setStartPC();OMR;Symbol;0;0
setThisTempForObjectCtor;setThisTempForObjectCtor();OMR;Symbol;0;0
setUninitializedReference;setUninitializedReference();OMR;Symbol;0;0
setUnsafeShadowSymbol;setUnsafeShadowSymbol();OMR;Symbol;0;0
setVariableSizeSymbol;setVariableSizeSymbol();OMR;Symbol;0;0
setVolatile;setVolatile();OMR;Symbol;0;0
~AutomaticSymbol;~AutomaticSymbol();OMR;AutomaticSymbol;1;1
~AutomaticSymbol;~AutomaticSymbol();TR;AutomaticSymbol;1;1
~RegisterMappedSymbol;~RegisterMappedSymbol();OMR;RegisterMappedSymbol;1;1
~RegisterMappedSymbol;~RegisterMappedSymbol();TR;RegisterMappedSymbol;1;1
~Symbol;~Symbol();OMR;Symbol;0;1
~Symbol;~Symbol();TR;Symbol;0;1
Block;Block(class TR_Memory *);OMR;Block;0;0
Block;Block(class TR_Memory *);TR;Block;0;0
Block;Block(TR::TreeTop *,TR::TreeTop *,class TR_Memory *);OMR;Block;0;0
Block;Block(TR::TreeTop *,TR::TreeTop *,class TR_Memory *);TR;Block;0;0
Block;Block(TR::Block &,TR::TreeTop *,TR::TreeTop *);OMR;Block;0;0
Block;Block(const class OMR::Block &);OMR;Block;1;0
Block;Block(class TR::Block &&);TR;Block;1;0
Block;Block(class TR::Block &,TR::TreeTop *,TR::TreeTop *);TR;Block;0;0
CFGNode;CFGNode(const class TR::CFGNode &);TR;CFGNode;1;0
CFGNode;CFGNode(class TR_Memory *);TR;CFGNode;0;0
CFGNode;CFGNode(int32_t,class TR_Memory *);TR;CFGNode;0;0
CFGNode;CFGNode(int32_t,TR::Region &);TR;CFGNode;0;0
CFGNode;CFGNode(TR::Region &);TR;CFGNode;0;0
CFGNode;CFGNode(class TR::CFGNode &&);TR;CFGNode;1;0
TR_Link1<T>;TR_Link1<T>(T *);;TR_Link1;0;0
addExceptionPredecessor;addExceptionPredecessor(class TR::CFGEdge *);TR;CFGNode;0;0
addExceptionPredecessor;addExceptionPredecessor(class TR::CFGEdge *,enum TR_AllocationKind);TR;CFGNode;0;0
addExceptionRangeForSnippet;addExceptionRangeForSnippet(uint32_t,uint32_t);OMR;Block;0;0
addExceptionSuccessor;addExceptionSuccessor(class TR::CFGEdge *);TR;CFGNode;0;0
addExceptionSuccessor;addExceptionSuccessor(class TR::CFGEdge *,enum TR_AllocationKind);TR;CFGNode;0;0
addPredecessor;addPredecessor(class TR::CFGEdge *,enum TR_AllocationKind);TR;CFGNode;0;0
addPredecessor;addPredecessor(class TR::CFGEdge *);TR;CFGNode;0;0
addSuccessor;addSuccessor(class TR::CFGEdge *);TR;CFGNode;0;0
addSuccessor;addSuccessor(class TR::CFGEdge *,enum TR_AllocationKind);TR;CFGNode;0;0
append;append(TR::TreeTop *);OMR;Block;0;0
asBlock;asBlock();TR;CFGNode;0;1
asBlock;asBlock();OMR;Block;0;1
asStructureSubGraphNode;asStructureSubGraphNode();TR;CFGNode;0;1
branchesBackwards;branchesBackwards();OMR;Block;0;0
breakFallThrough;breakFallThrough(TR::Compilation *,TR::Block *,TR::Block *);OMR;Block;0;0
canCatchExceptions;canCatchExceptions(uint32_t);OMR;Block;0;0
canFallThroughToNextBlock;canFallThroughToNextBlock();OMR;Block;0;0
changeBranchDestination;changeBranchDestination(TR::TreeTop *,TR::CFG *);OMR;Block;0;0
clearGlobalRegisters;clearGlobalRegisters();OMR;Block;0;0
collectReferencedAutoSymRefsIn;collectReferencedAutoSymRefsIn(TR::Compilation *,TR::Node *,class TR_BitVector *,vcount_t);OMR;Block;0;0
collectReferencedAutoSymRefsIn;collectReferencedAutoSymRefsIn(TR::Compilation *,class TR_BitVector *,vcount_t);OMR;Block;0;0
containsCall;containsCall();OMR;Block;0;0
createConditionalBlocksBeforeTree;createConditionalBlocksBeforeTree(TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::CFG *,_Bool,_Bool);OMR;Block;0;0
createConditionalSideExitBeforeTree;createConditionalSideExitBeforeTree(TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::CFG *,_Bool);OMR;Block;0;0
createEmptyBlock;createEmptyBlock(TR::Compilation *,int32_t,TR::Block *);OMR;Block;0;0
createEmptyBlock;createEmptyBlock(TR::Node *,TR::Compilation *,int32_t,TR::Block *);OMR;Block;0;0
denormalizeFrequency;denormalizeFrequency(int32_t);TR;CFGNode;0;0
denormalizedFrequency;denormalizedFrequency(int32_t,int32_t);TR;CFGNode;0;0
doNotProfile;doNotProfile();OMR;Block;0;0
doesNotNeedLabelAtStart;doesNotNeedLabelAtStart();OMR;Block;0;0
endsInBranch;endsInBranch();OMR;Block;0;0
endsInGoto;endsInGoto();OMR;Block;0;0
ensureCatchBlockExtensionExists;ensureCatchBlockExtensionExists(TR::Compilation *);OMR;Block;0;0
findFirstReference;findFirstReference(TR::Symbol *,vcount_t);OMR;Block;0;0
findVirtualGuardBlock;findVirtualGuardBlock(TR::CFG *);OMR;Block;0;0
firstBlockInLoop;firstBlockInLoop();OMR;Block;0;0
fromBlockGetter;fromBlockGetter(class TR::CFGEdge *);TR;CFGNode;0;0
getBackwardTraversalIndex;getBackwardTraversalIndex();TR;CFGNode;0;0
getBlockBCIndex;getBlockBCIndex();OMR;Block;0;0
getBlockSize;getBlockSize();OMR;Block;0;0
getByteCodeInfo;getByteCodeInfo();OMR;Block;0;0
getCatchBlockExtension;getCatchBlockExtension();OMR;Block;0;0
getCatchType;getCatchType();OMR;Block;0;0
getCommonParentStructureIfExists;getCommonParentStructureIfExists(TR::Block *,TR::CFG *);OMR;Block;0;0
getDebugCounters;getDebugCounters();OMR;Block;0;0
getEdge;getEdge(class TR::CFGNode *);TR;CFGNode;0;0
getEntry;getEntry();OMR;Block;0;0
getExceptingTree;getExceptingTree();OMR;Block;0;0
getExceptionClass;getExceptionClass();OMR;Block;0;0
getExceptionClassNameChars;getExceptionClassNameChars();OMR;Block;0;0
getExceptionClassNameLength;getExceptionClassNameLength();OMR;Block;0;0
getExceptionPredecessorEdge;getExceptionPredecessorEdge(class TR::CFGNode *);TR;CFGNode;0;0
getExceptionPredecessors;getExceptionPredecessors();TR;CFGNode;0;0
getExceptionSuccessorEdge;getExceptionSuccessorEdge(class TR::CFGNode *);TR;CFGNode;0;0
getExceptionSuccessors;getExceptionSuccessors();TR;CFGNode;0;0
getExit;getExit();OMR;Block;0;0
getFallThroughEdgeInEBB;getFallThroughEdgeInEBB();OMR;Block;0;0
getFirstInstruction;getFirstInstruction();OMR;Block;0;0
getFirstRealTreeTop;getFirstRealTreeTop();OMR;Block;0;0
getFirstSnippetBoundaries;getFirstSnippetBoundaries();OMR;Block;0;0
getForwardTraversalIndex;getForwardTraversalIndex();TR;CFGNode;0;0
getFrequency;getFrequency();TR;CFGNode;0;0
getGlobalNormalizedFrequency;getGlobalNormalizedFrequency(TR::CFG *);OMR;Block;0;0
getGlobalRegisters;getGlobalRegisters(TR::Compilation *);OMR;Block;0;0
getHandlerIndex;getHandlerIndex();OMR;Block;0;0
getInlineDepth;getInlineDepth();OMR;Block;0;0
getInstructionBoundaries;getInstructionBoundaries();OMR;Block;0;0
getJ9EstimateCodeSizeMethod;getJ9EstimateCodeSizeMethod();OMR;Block;0;0
getLastInstruction;getLastInstruction();OMR;Block;0;0
getLastNonControlFlowTreeTop;getLastNonControlFlowTreeTop();OMR;Block;0;0
getLastRealTreeTop;getLastRealTreeTop();OMR;Block;0;0
getLiveLocals;getLiveLocals();OMR;Block;0;0
getMaxColdFrequency;getMaxColdFrequency(TR::Block *,TR::Block *);OMR;Block;0;0
getMinColdFrequency;getMinColdFrequency(TR::Block *,TR::Block *);OMR;Block;0;0
getName;getName(class TR_Debug *);OMR;Block;0;1
getNestingDepth;getNestingDepth();OMR;Block;0;0
getNext;getNext();;TR_Link1;0;0
getNextBlock;getNextBlock();OMR;Block;0;0
getNextExtendedBlock;getNextExtendedBlock();OMR;Block;0;0
getNormalizedFrequency;getNormalizedFrequency(TR::CFG *);OMR;Block;0;0
getNumber;getNumber();TR;CFGNode;0;0
getNumberOfRealTreeTops;getNumberOfRealTreeTops();OMR;Block;0;0
getOwningMethod;getOwningMethod();OMR;Block;0;0
getParentStructureIfExists;getParentStructureIfExists(TR::CFG *);OMR;Block;0;0
getPartialFlags;getPartialFlags();OMR;Block;0;0
getPredecessorEdge;getPredecessorEdge(class TR::CFGNode *);TR;CFGNode;0;0
getPredecessors;getPredecessors();TR;CFGNode;0;0
getPrevBlock;getPrevBlock();OMR;Block;0;0
getRegisterSaveDescriptionBits;getRegisterSaveDescriptionBits();OMR;Block;0;0
getScaledSpecializedFrequency;getScaledSpecializedFrequency(int32_t);OMR;Block;0;0
getStructureOf;getStructureOf();OMR;Block;0;0
getSuccessorEdge;getSuccessorEdge(class TR::CFGNode *);TR;CFGNode;0;0
getSuccessors;getSuccessors();TR;CFGNode;0;0
getUnrollFactor;getUnrollFactor();OMR;Block;0;0
getVisitCount;getVisitCount();TR;CFGNode;0;0
hasBeenVisited;hasBeenVisited();OMR;Block;0;0
hasCallToSuperCold;hasCallToSuperCold();OMR;Block;0;0
hasCalls;hasCalls();OMR;Block;0;0
hasExceptionPredecessor;hasExceptionPredecessor(class TR::CFGNode *);TR;CFGNode;0;0
hasExceptionPredecessors;hasExceptionPredecessors();OMR;Block;0;0
hasExceptionSuccessor;hasExceptionSuccessor(class TR::CFGNode *);TR;CFGNode;0;0
hasExceptionSuccessors;hasExceptionSuccessors();OMR;Block;0;0
hasPredecessor;hasPredecessor(class TR::CFGNode *);TR;CFGNode;0;0
hasSuccessor;hasSuccessor(class TR::CFGNode *);TR;CFGNode;0;0
incVisitCount;incVisitCount();TR;CFGNode;0;0
inheritBlockInfo;inheritBlockInfo(TR::Block *,_Bool);OMR;Block;0;0
insertBlockAsFallThrough;insertBlockAsFallThrough(TR::Compilation *,TR::Block *,TR::Block *);OMR;Block;0;0
isAdded;isAdded();OMR;Block;0;0
isCatchBlock;isCatchBlock();OMR;Block;0;0
isCold;isCold();OMR;Block;0;0
isCreatedAtCodeGen;isCreatedAtCodeGen();OMR;Block;0;0
isCreatedByVersioning;isCreatedByVersioning();OMR;Block;0;0
isDifficultBlock;isDifficultBlock();OMR;Block;0;0
isEmptyBlock;isEmptyBlock();OMR;Block;0;0
isEndBlock;isEndBlock();OMR;Block;0;0
isEntryOfShortRunningLoop;isEntryOfShortRunningLoop();OMR;Block;0;0
isExtensionOfPreviousBlock;isExtensionOfPreviousBlock();OMR;Block;0;0
isGotoBlock;isGotoBlock(TR::Compilation *,_Bool);OMR;Block;0;0
isLoopInvariantBlock;isLoopInvariantBlock();OMR;Block;0;0
isOSRCatchBlock;isOSRCatchBlock();OMR;Block;0;0
isOSRCodeBlock;isOSRCodeBlock();OMR;Block;0;0
isOSRInduceBlock;isOSRInduceBlock();OMR;Block;0;0
isPRECandidate;isPRECandidate();OMR;Block;0;0
isPartialInlineBlock;isPartialInlineBlock();OMR;Block;0;0
isRestartBlock;isRestartBlock();OMR;Block;0;0
isSpecialized;isSpecialized();OMR;Block;0;0
isSuperCold;isSuperCold();OMR;Block;0;0
isSynchronizedHandler;isSynchronizedHandler();OMR;Block;0;0
isTargetOfJumpWhoseTargetCanBeChanged;isTargetOfJumpWhoseTargetCanBeChanged(TR::Compilation *);OMR;Block;0;0
isUnreachable;isUnreachable();TR;CFGNode;0;0
isUnsanitizeable;isUnsanitizeable();OMR;Block;0;0
isValid;isValid();;TR_Link1;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TR;CFGNode;0;0
jitPersistentFree;jitPersistentFree(void *);TR;CFGNode;0;0
movePredecessors;movePredecessors(class TR::CFGNode *);TR;CFGNode;0;0
moveSuccessors;moveSuccessors(class TR::CFGNode *);TR;CFGNode;0;0
nodeIsRemoved;nodeIsRemoved();TR;CFGNode;0;0
normalizeFrequency;normalizeFrequency(int32_t,int32_t);TR;CFGNode;0;0
normalizeFrequency;normalizeFrequency(int32_t);TR;CFGNode;0;0
normalizedFrequency;normalizedFrequency(int32_t,int32_t);TR;CFGNode;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGNode;0;0
operator delete;operator delete(void *,TR::Region &);TR;CFGNode;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TR;CFGNode;0;0
operator delete;operator delete(void *,size_t);TR;CFGNode;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGNode;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGNode;0;0
operator delete[];operator delete[](void *,TR::Region &);TR;CFGNode;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGNode;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TR;CFGNode;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TR;CFGNode;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGNode;0;0
operator new;operator new(size_t,TR::Region &);TR;CFGNode;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TR;CFGNode;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TR;CFGNode;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TR;CFGNode;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGNode;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TR;CFGNode;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGNode;0;0
operator new[];operator new[](size_t,TR::Region &);TR;CFGNode;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TR;CFGNode;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGNode;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TR;CFGNode;0;0
operator=;operator=(class TR::CFGNode &&);TR;CFGNode;1;0
operator=;operator=(const class TR::CFGNode &);TR;CFGNode;1;0
operator=;operator=(const class OMR::Block &);OMR;Block;1;0
operator=;operator=(class TR::Block &&);TR;Block;1;0
operator=;operator=(const class TR::Block &);TR;Block;1;0
prepend;prepend(TR::TreeTop *);OMR;Block;0;0
redirectFlowToNewDestination;redirectFlowToNewDestination(TR::Compilation *,TR::CFGEdge *,TR::Block *,_Bool);OMR;Block;0;0
removeBranch;removeBranch(TR::Compilation *);OMR;Block;0;0
removeExceptionPredecessor;removeExceptionPredecessor(class TR::CFGEdge *);TR;CFGNode;0;0
removeExceptionSuccessor;removeExceptionSuccessor(class TR::CFGEdge *);TR;CFGNode;0;0
removeFromCFG;removeFromCFG(TR::Compilation *);TR;CFGNode;0;1
removeFromCFG;removeFromCFG(TR::Compilation *);OMR;Block;0;1
removeNode;removeNode();TR;CFGNode;0;0
removePredecessor;removePredecessor(class TR::CFGEdge *);TR;CFGNode;0;0
removeSuccessor;removeSuccessor(class TR::CFGEdge *);TR;CFGNode;0;0
self;self();OMR;Block;0;0
setAsLoopInvariantBlock;setAsLoopInvariantBlock(_Bool);OMR;Block;0;0
setBackwardTraversalIndex;setBackwardTraversalIndex(int32_t);TR;CFGNode;0;0
setBlockBCIndex;setBlockBCIndex(int32_t);OMR;Block;0;0
setBlockSize;setBlockSize(int32_t);OMR;Block;0;0
setBranchesBackwards;setBranchesBackwards();OMR;Block;0;0
setByteCodeIndex;setByteCodeIndex(int32_t,TR::Compilation *);OMR;Block;0;0
setCatchBlockExtension;setCatchBlockExtension(class OMR::Block::TR_CatchBlockExtension *);OMR;Block;0;0
setContainsCall;setContainsCall(_Bool);OMR;Block;0;0
setCreatedByVersioning;setCreatedByVersioning(_Bool);OMR;Block;0;0
setDebugCounters;setDebugCounters(TR::DebugCounterAggregation *);OMR;Block;0;0
setDoNotProfile;setDoNotProfile();OMR;Block;0;0
setEntry;setEntry(TR::TreeTop *);OMR;Block;0;0
setExceptionClassName;setExceptionClassName(char *,int32_t,TR::Compilation *);OMR;Block;0;0
setExit;setExit(TR::TreeTop *);OMR;Block;0;0
setFirstBlockInLoop;setFirstBlockInLoop();OMR;Block;0;0
setFirstInstruction;setFirstInstruction(TR::Instruction *);OMR;Block;0;0
setForwardTraversalIndex;setForwardTraversalIndex(int32_t);TR;CFGNode;0;0
setFrequency;setFrequency(int32_t);TR;CFGNode;0;0
setHandlerInfo;setHandlerInfo(uint32_t,uint8_t,uint16_t,class TR_ResolvedMethod *,TR::Compilation *);OMR;Block;0;0
setHandlerInfoWithOutBCInfo;setHandlerInfoWithOutBCInfo(uint32_t,uint8_t,uint16_t,class TR_ResolvedMethod *,TR::Compilation *);OMR;Block;0;0
setHasBeenVisited;setHasBeenVisited(_Bool);OMR;Block;0;0
setHasCallToSuperCold;setHasCallToSuperCold(_Bool);OMR;Block;0;0
setHasCalls;setHasCalls(_Bool);OMR;Block;0;0
setInstructionBoundaries;setInstructionBoundaries(uint32_t,uint32_t);OMR;Block;0;0
setIsAdded;setIsAdded();OMR;Block;0;0
setIsCold;setIsCold(_Bool);OMR;Block;0;0
setIsCreatedAtCodeGen;setIsCreatedAtCodeGen(_Bool);OMR;Block;0;0
setIsDifficultBlock;setIsDifficultBlock(_Bool);OMR;Block;0;0
setIsEndBlock;setIsEndBlock(_Bool);OMR;Block;0;0
setIsEntryOfShortRunningLoop;setIsEntryOfShortRunningLoop();OMR;Block;0;0
setIsExtensionOfPreviousBlock;setIsExtensionOfPreviousBlock(_Bool);OMR;Block;0;0
setIsOSRCatchBlock;setIsOSRCatchBlock();OMR;Block;0;0
setIsOSRCodeBlock;setIsOSRCodeBlock();OMR;Block;0;0
setIsOSRInduceBlock;setIsOSRInduceBlock();OMR;Block;0;0
setIsPRECandidate;setIsPRECandidate(_Bool);OMR;Block;0;0
setIsSpecialized;setIsSpecialized(_Bool);OMR;Block;0;0
setIsSuperCold;setIsSuperCold(_Bool);OMR;Block;0;0
setIsSynchronizedHandler;setIsSynchronizedHandler();OMR;Block;0;0
setIsUnsanitizeable;setIsUnsanitizeable(_Bool);OMR;Block;0;0
setJ9EstimateCodeSizeMethod;setJ9EstimateCodeSizeMethod(class TR_ResolvedMethod *);OMR;Block;0;0
setLastInstruction;setLastInstruction(TR::Instruction *);OMR;Block;0;0
setLiveLocals;setLiveLocals(class TR_BitVector *);OMR;Block;0;0
setNext;setNext(T *);;TR_Link1;0;0
setNumber;setNumber(int32_t);TR;CFGNode;0;0
setPartialInlineBlock;setPartialInlineBlock(_Bool);OMR;Block;0;0
setRegisterSaveDescriptionBits;setRegisterSaveDescriptionBits(class TR_BitVector *);OMR;Block;0;0
setRestartBlock;setRestartBlock(_Bool);OMR;Block;0;0
setSpecializedDesyncCatchBlock;setSpecializedDesyncCatchBlock();OMR;Block;0;0
setStructureOf;setStructureOf(class TR_BlockStructure *);OMR;Block;0;0
setUnrollFactor;setUnrollFactor(int);OMR;Block;0;0
setValid;setValid(_Bool);;TR_Link1;0;0
setVisitCount;setVisitCount(vcount_t);TR;CFGNode;0;0
setWasHeaderOfCanonicalizedLoop;setWasHeaderOfCanonicalizedLoop(_Bool);OMR;Block;0;0
specializedDesyncCatchBlock;specializedDesyncCatchBlock();OMR;Block;0;0
split;split(TR::TreeTop *,TR::CFG *,_Bool,_Bool,TR::ResolvedMethodSymbol *);OMR;Block;0;0
splitBlockAndAddConditional;splitBlockAndAddConditional(TR::TreeTop *,TR::TreeTop *,TR::CFG *,_Bool);OMR;Block;0;0
splitEdge;splitEdge(TR::Block *,TR::Block *,TR::Compilation *,TR::TreeTop **,_Bool);OMR;Block;0;0
splitWithGivenMethodSymbol;splitWithGivenMethodSymbol(TR::ResolvedMethodSymbol *,TR::TreeTop *,TR::CFG *,_Bool,_Bool);OMR;Block;0;0
startOfExtendedBlock;startOfExtendedBlock();OMR;Block;0;0
takeGlRegDeps;takeGlRegDeps(TR::Compilation *,TR::Node *);OMR;Block;0;0
toBlockGetter;toBlockGetter(class TR::CFGEdge *);TR;CFGNode;0;0
uncommonNodesBetweenBlocks;uncommonNodesBetweenBlocks(TR::Compilation *,TR::Block *,TR::ResolvedMethodSymbol *);OMR;Block;0;0
verifyOSRInduceBlock;verifyOSRInduceBlock(TR::Compilation *);OMR;Block;0;0
wasHeaderOfCanonicalizedLoop;wasHeaderOfCanonicalizedLoop();OMR;Block;0;0
~Block;~Block();OMR;Block;0;0
~Block;~Block();TR;Block;0;0
~CFGNode;~CFGNode();TR;CFGNode;1;0
LabelSymbol;LabelSymbol(const class OMR::LabelSymbol &);OMR;LabelSymbol;1;0
LabelSymbol;LabelSymbol(class OMR::LabelSymbol &&);OMR;LabelSymbol;1;0
LabelSymbol;LabelSymbol();OMR;LabelSymbol;0;0
LabelSymbol;LabelSymbol();TR;LabelSymbol;0;0
LabelSymbol;LabelSymbol(TR::CodeGenerator *,TR::Block *);OMR;LabelSymbol;0;0
LabelSymbol;LabelSymbol(TR::CodeGenerator *,TR::Block *);TR;LabelSymbol;0;0
LabelSymbol;LabelSymbol(TR::CodeGenerator *);OMR;LabelSymbol;0;0
LabelSymbol;LabelSymbol(TR::CodeGenerator *);TR;LabelSymbol;0;0
getCodeLocation;getCodeLocation();OMR;LabelSymbol;0;0
getDistance;getDistance();OMR;LabelSymbol;0;0
getEstimatedCodeLocation;getEstimatedCodeLocation();OMR;LabelSymbol;0;0
getInstruction;getInstruction();OMR;LabelSymbol;0;0
getName;getName(class TR_Debug *);OMR;LabelSymbol;0;0
getSnippet;getSnippet();OMR;LabelSymbol;0;0
isTargeted;isTargeted();OMR;LabelSymbol;0;0
makeRelativeLabelSymbol;makeRelativeLabelSymbol(intptr_t);OMR;LabelSymbol;0;0
operator=;operator=(const class OMR::LabelSymbol &);OMR;LabelSymbol;1;0
operator=;operator=(class OMR::LabelSymbol &&);OMR;LabelSymbol;1;0
operator=;operator=(class TR::LabelSymbol &&);TR;LabelSymbol;1;0
operator=;operator=(const class TR::LabelSymbol &);TR;LabelSymbol;1;0
self;self();OMR;LabelSymbol;0;0
setCodeLocation;setCodeLocation(uint8_t *);OMR;LabelSymbol;0;0
setDirectlyTargeted;setDirectlyTargeted();OMR;LabelSymbol;0;0
setEstimatedCodeLocation;setEstimatedCodeLocation(int32_t);OMR;LabelSymbol;0;0
setInstruction;setInstruction(TR::Instruction *);OMR;LabelSymbol;0;0
setSnippet;setSnippet(TR::Snippet *);OMR;LabelSymbol;0;0
~LabelSymbol;~LabelSymbol();OMR;LabelSymbol;1;1
~LabelSymbol;~LabelSymbol();TR;LabelSymbol;1;1
MethodSymbol;MethodSymbol(class OMR::MethodSymbol &&);OMR;MethodSymbol;1;0
MethodSymbol;MethodSymbol(enum TR_LinkageConventions,class TR_Method *);OMR;MethodSymbol;0;0
MethodSymbol;MethodSymbol(enum TR_LinkageConventions,class TR_Method *);TR;MethodSymbol;0;0
MethodSymbol;MethodSymbol(const class OMR::MethodSymbol &);OMR;MethodSymbol;1;0
MethodSymbol;MethodSymbol(const class TR::MethodSymbol &);TR;MethodSymbol;1;0
MethodSymbol;MethodSymbol(class TR::MethodSymbol &&);TR;MethodSymbol;1;0
ResolvedMethodSymbol;ResolvedMethodSymbol(const class OMR::ResolvedMethodSymbol &);OMR;ResolvedMethodSymbol;1;0
ResolvedMethodSymbol;ResolvedMethodSymbol(class TR_ResolvedMethod *,TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
ResolvedMethodSymbol;ResolvedMethodSymbol(class TR_ResolvedMethod *,TR::Compilation *);TR;ResolvedMethodSymbol;0;0
ResolvedMethodSymbol;ResolvedMethodSymbol(class OMR::ResolvedMethodSymbol &&);OMR;ResolvedMethodSymbol;1;0
addAutomatic;addAutomatic(TR::AutomaticSymbol *);OMR;ResolvedMethodSymbol;0;0
addMethodMetaDataSymbol;addMethodMetaDataSymbol(TR::RegisterMappedSymbol *);OMR;ResolvedMethodSymbol;0;0
addOSRPoint;addOSRPoint(class TR_OSRPoint *);OMR;ResolvedMethodSymbol;0;0
addProfilingOffsetInfo;addProfilingOffsetInfo(int32_t,int32_t);OMR;ResolvedMethodSymbol;0;0
addTrivialDeadTreeBlock;addTrivialDeadTreeBlock(TR::Block *);OMR;ResolvedMethodSymbol;0;0
addVariableSizeSymbol;addVariableSizeSymbol(TR::AutomaticSymbol *);OMR;ResolvedMethodSymbol;0;0
canDirectNativeCall;canDirectNativeCall();OMR;ResolvedMethodSymbol;0;0
canInjectInduceOSR;canInjectInduceOSR(TR::Node *);OMR;ResolvedMethodSymbol;0;0
canReplaceWithHWInstr;canReplaceWithHWInstr();OMR;ResolvedMethodSymbol;0;0
cannotAttemptOSRAt;cannotAttemptOSRAt(TR_ByteCodeInfo &,TR::Block *,TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
cannotAttemptOSRDuring;cannotAttemptOSRDuring(int32_t,TR::Compilation *,_Bool);OMR;ResolvedMethodSymbol;0;0
catchBlocksHaveRealPredecessors;catchBlocksHaveRealPredecessors(TR::CFG *,TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
cleanupUnreachableOSRBlocks;cleanupUnreachableOSRBlocks(int32_t,TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
clearProfilingOffsetInfo;clearProfilingOffsetInfo();OMR;ResolvedMethodSymbol;0;0
comp;comp();OMR;ResolvedMethodSymbol;0;0
containsOnlySinglePrecision;containsOnlySinglePrecision();OMR;ResolvedMethodSymbol;0;0
detectInternalCycles;detectInternalCycles(TR::CFG *,TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
doJSR292PerfTweaks;doJSR292PerfTweaks();OMR;ResolvedMethodSymbol;0;0
dumpProfilingOffsetInfo;dumpProfilingOffsetInfo(TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
findOSRPoint;findOSRPoint(TR_ByteCodeInfo &);OMR;ResolvedMethodSymbol;0;0
firstArgumentIsReceiver;firstArgumentIsReceiver();OMR;MethodSymbol;0;0
genAndAttachOSRCodeBlocks;genAndAttachOSRCodeBlocks(int32_t);OMR;ResolvedMethodSymbol;0;0
genIL;genIL(class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *,TR::IlGenRequest &);OMR;ResolvedMethodSymbol;0;0
genInduceOSRCall;genInduceOSRCall(TR::TreeTop *,int32_t,class TR_OSRMethodData *,int32_t,_Bool,_Bool,TR::CFG *);OMR;ResolvedMethodSymbol;0;0
genInduceOSRCall;genInduceOSRCall(TR::TreeTop *,int32_t,int32_t,_Bool,_Bool,TR::CFG *);OMR;ResolvedMethodSymbol;0;0
genInduceOSRCallAndCleanUpFollowingTreesImmediately;genInduceOSRCallAndCleanUpFollowingTreesImmediately(TR::TreeTop *,TR_ByteCodeInfo,_Bool,TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
genInduceOSRCallNode;genInduceOSRCallNode(TR::TreeTop *,int32_t,_Bool,_Bool,TR::CFG *);OMR;ResolvedMethodSymbol;0;0
genOSRHelperCall;genOSRHelperCall(int32_t,TR::SymbolReferenceTable *,TR::CFG *);OMR;ResolvedMethodSymbol;0;0
genPartialIL;genPartialIL(class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *,_Bool,class TR_InlineBlocks *);OMR;ResolvedMethodSymbol;0;0
generateAccurateNodeCount;generateAccurateNodeCount();OMR;ResolvedMethodSymbol;0;0
getArrayCopyTempSlot;getArrayCopyTempSlot(class TR_FrontEnd *);OMR;ResolvedMethodSymbol;0;0
getAutoSymRefs;getAutoSymRefs();OMR;ResolvedMethodSymbol;0;0
getAutoSymRefs;getAutoSymRefs(int32_t);OMR;ResolvedMethodSymbol;0;0
getAutomaticList;getAutomaticList();OMR;ResolvedMethodSymbol;0;0
getFirstJitTempIndex;getFirstJitTempIndex();OMR;ResolvedMethodSymbol;0;0
getFirstTreeTop;getFirstTreeTop();OMR;ResolvedMethodSymbol;0;0
getFlowGraph;getFlowGraph();OMR;ResolvedMethodSymbol;0;0
getLastTreeTop;getLastTreeTop(TR::Block *);OMR;ResolvedMethodSymbol;0;0
getLinkageConvention;getLinkageConvention();OMR;MethodSymbol;0;0
getLocalMappingCursor;getLocalMappingCursor();OMR;ResolvedMethodSymbol;0;0
getLogicalParameterList;getLogicalParameterList(TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
getMandatoryRecognizedMethod;getMandatoryRecognizedMethod();OMR;MethodSymbol;0;0
getMethod;getMethod();OMR;MethodSymbol;0;0
getMethodAddress;getMethodAddress();OMR;MethodSymbol;0;0
getMethodKind;getMethodKind();OMR;MethodSymbol;0;0
getMethodMetaDataList;getMethodMetaDataList();OMR;ResolvedMethodSymbol;0;0
getNumOSRPoints;getNumOSRPoints();OMR;ResolvedMethodSymbol;0;0
getNumPPSlots;getNumPPSlots();OMR;ResolvedMethodSymbol;0;0
getNumParameterSlots;getNumParameterSlots();OMR;ResolvedMethodSymbol;0;0
getNumberOfBackEdges;getNumberOfBackEdges();OMR;ResolvedMethodSymbol;0;0
getOSRByteCodeInfo;getOSRByteCodeInfo(TR::Node *);OMR;ResolvedMethodSymbol;0;0
getOSRPoints;getOSRPoints();OMR;ResolvedMethodSymbol;0;0
getOSRTransitionTreeTop;getOSRTransitionTreeTop(TR::TreeTop *);OMR;ResolvedMethodSymbol;0;0
getObjectTempSlots;getObjectTempSlots();OMR;ResolvedMethodSymbol;0;0
getParameterList;getParameterList();OMR;ResolvedMethodSymbol;0;0
getParmSymRef;getParmSymRef(int32_t);OMR;ResolvedMethodSymbol;0;0
getPendingPushSymRefs;getPendingPushSymRefs(int32_t);OMR;ResolvedMethodSymbol;0;0
getPendingPushSymRefs;getPendingPushSymRefs();OMR;ResolvedMethodSymbol;0;0
getProfilerFrequency;getProfilerFrequency(int32_t);OMR;ResolvedMethodSymbol;0;0
getProfilingByteCodeIndex;getProfilingByteCodeIndex(int32_t);OMR;ResolvedMethodSymbol;0;0
getProloguePushSlots;getProloguePushSlots();OMR;ResolvedMethodSymbol;0;0
getPythonConstsSymbolRef;getPythonConstsSymbolRef();OMR;ResolvedMethodSymbol;0;0
getRecognizedMethod;getRecognizedMethod();OMR;MethodSymbol;0;0
getResolvedMethod;getResolvedMethod();OMR;ResolvedMethodSymbol;0;0
getResolvedMethodIndex;getResolvedMethodIndex();OMR;ResolvedMethodSymbol;0;0
getScalarTempSlots;getScalarTempSlots();OMR;ResolvedMethodSymbol;0;0
getSyncObjectTemp;getSyncObjectTemp();OMR;ResolvedMethodSymbol;0;0
getSyncObjectTempIndex;getSyncObjectTempIndex();OMR;ResolvedMethodSymbol;0;0
getTempIndex;getTempIndex();OMR;ResolvedMethodSymbol;0;0
getThisTempForObjectCtor;getThisTempForObjectCtor();OMR;ResolvedMethodSymbol;0;0
getThisTempForObjectCtorIndex;getThisTempForObjectCtorIndex();OMR;ResolvedMethodSymbol;0;0
getTrivialDeadTreeBlocksList;getTrivialDeadTreeBlocksList();OMR;ResolvedMethodSymbol;0;0
getVariableSizeSymbolList;getVariableSizeSymbolList();OMR;ResolvedMethodSymbol;0;0
hasBranches;hasBranches();OMR;ResolvedMethodSymbol;0;0
hasCheckCasts;hasCheckCasts();OMR;ResolvedMethodSymbol;0;0
hasCheckcastsOrInstanceOfs;hasCheckcastsOrInstanceOfs();OMR;ResolvedMethodSymbol;0;0
hasDememoizationOpportunities;hasDememoizationOpportunities();OMR;ResolvedMethodSymbol;0;0
hasEscapeAnalysisOpportunities;hasEscapeAnalysisOpportunities();OMR;ResolvedMethodSymbol;0;0
hasInstanceOfs;hasInstanceOfs();OMR;ResolvedMethodSymbol;0;0
hasMethodHandleInvokes;hasMethodHandleInvokes();OMR;ResolvedMethodSymbol;0;0
hasNews;hasNews();OMR;ResolvedMethodSymbol;0;0
hasOSRProhibitions;hasOSRProhibitions();OMR;ResolvedMethodSymbol;0;0
hasSnapshots;hasSnapshots();OMR;ResolvedMethodSymbol;0;0
hasThisCalls;hasThisCalls();OMR;ResolvedMethodSymbol;0;0
hasUnkilledTemps;hasUnkilledTemps();OMR;ResolvedMethodSymbol;0;0
hasVeryRefinedAliasSets;hasVeryRefinedAliasSets();OMR;MethodSymbol;0;0
incTempIndex;incTempIndex(class TR_FrontEnd *);OMR;ResolvedMethodSymbol;0;0
induceImmediateOSRWithoutChecksBefore;induceImmediateOSRWithoutChecksBefore(TR::TreeTop *);OMR;ResolvedMethodSymbol;0;0
induceOSRAfter;induceOSRAfter(TR::TreeTop *,TR_ByteCodeInfo,TR::TreeTop *,_Bool,int32_t,TR::TreeTop **);OMR;ResolvedMethodSymbol;0;0
initForCompilation;initForCompilation(TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
insertRematableStoresFromCallSites;insertRematableStoresFromCallSites(TR::Compilation *,int32_t,TR::TreeTop *);OMR;ResolvedMethodSymbol;0;0
insertStoresForDeadStackSlots;insertStoresForDeadStackSlots(TR::Compilation *,TR_ByteCodeInfo &,TR::TreeTop *,_Bool);OMR;ResolvedMethodSymbol;0;0
insertStoresForDeadStackSlotsBeforeInducingOSR;insertStoresForDeadStackSlotsBeforeInducingOSR(TR::Compilation *,int32_t,TR_ByteCodeInfo &,TR::TreeTop *);OMR;ResolvedMethodSymbol;0;0
isComputed;isComputed();OMR;MethodSymbol;0;0
isComputedStatic;isComputedStatic();OMR;MethodSymbol;0;0
isComputedVirtual;isComputedVirtual();OMR;MethodSymbol;0;0
isEHAware;isEHAware();OMR;MethodSymbol;0;0
isHelper;isHelper();OMR;MethodSymbol;0;0
isInlinedByCG;isInlinedByCG();OMR;MethodSymbol;0;0
isInterface;isInterface();OMR;MethodSymbol;0;0
isInterpreted;isInterpreted();OMR;MethodSymbol;0;0
isJITInternalNative;isJITInternalNative();OMR;MethodSymbol;0;0
isJNI;isJNI();OMR;MethodSymbol;0;0
isNative;isNative();OMR;MethodSymbol;0;0
isNoTemps;isNoTemps();OMR;ResolvedMethodSymbol;0;0
isNonReturning;isNonReturning();OMR;MethodSymbol;0;0
isOSRRelatedNode;isOSRRelatedNode(TR::Node *,TR_ByteCodeInfo &);OMR;ResolvedMethodSymbol;0;0
isOSRRelatedNode;isOSRRelatedNode(TR::Node *);OMR;ResolvedMethodSymbol;0;0
isPureFunction;isPureFunction();OMR;MethodSymbol;0;0
isSideEffectFree;isSideEffectFree();OMR;ResolvedMethodSymbol;0;0
isSpecial;isSpecial();OMR;MethodSymbol;0;0
isStatic;isStatic();OMR;MethodSymbol;0;0
isSynchronised;isSynchronised();OMR;MethodSymbol;0;0
isSystemLinkageDispatch;isSystemLinkageDispatch();OMR;MethodSymbol;0;0
isVMInternalNative;isVMInternalNative();OMR;MethodSymbol;0;0
isVirtual;isVirtual();OMR;MethodSymbol;0;0
matchInduceOSRCall;matchInduceOSRCall(TR::TreeTop *,int16_t,int16_t,const char *);OMR;ResolvedMethodSymbol;0;0
mayContainMonitors;mayContainMonitors();OMR;ResolvedMethodSymbol;0;0
mayHaveIndirectCalls;mayHaveIndirectCalls();OMR;ResolvedMethodSymbol;0;0
mayHaveInlineableCall;mayHaveInlineableCall();OMR;ResolvedMethodSymbol;0;0
mayHaveLongOps;mayHaveLongOps();OMR;ResolvedMethodSymbol;0;0
mayHaveLoops;mayHaveLoops();OMR;ResolvedMethodSymbol;0;0
mayHaveNestedLoops;mayHaveNestedLoops();OMR;ResolvedMethodSymbol;0;0
operator=;operator=(class OMR::MethodSymbol &&);OMR;MethodSymbol;1;0
operator=;operator=(const class OMR::MethodSymbol &);OMR;MethodSymbol;1;0
operator=;operator=(class TR::MethodSymbol &&);TR;MethodSymbol;1;0
operator=;operator=(const class TR::MethodSymbol &);TR;MethodSymbol;1;0
operator=;operator=(class OMR::ResolvedMethodSymbol &&);OMR;ResolvedMethodSymbol;1;0
operator=;operator=(const class OMR::ResolvedMethodSymbol &);OMR;ResolvedMethodSymbol;1;0
operator=;operator=(class TR::ResolvedMethodSymbol &&);TR;ResolvedMethodSymbol;1;0
operator=;operator=(const class TR::ResolvedMethodSymbol &);TR;ResolvedMethodSymbol;1;0
prependEmptyFirstBlock;prependEmptyFirstBlock();OMR;ResolvedMethodSymbol;0;0
preservesAllRegisters;preservesAllRegisters();OMR;MethodSymbol;0;0
recursivelyCountChildren;recursivelyCountChildren(TR::Node *);OMR;ResolvedMethodSymbol;0;0
removeTree;removeTree(TR::TreeTop *);OMR;ResolvedMethodSymbol;0;0
removeUnusedLocals;removeUnusedLocals();OMR;ResolvedMethodSymbol;0;0
resetLiveLocalIndices;resetLiveLocalIndices();OMR;ResolvedMethodSymbol;0;0
safeToSkipArrayStoreChecks;safeToSkipArrayStoreChecks();OMR;MethodSymbol;0;0
safeToSkipBoundChecks;safeToSkipBoundChecks();OMR;MethodSymbol;0;0
safeToSkipCheckCasts;safeToSkipCheckCasts();OMR;MethodSymbol;0;0
safeToSkipChecksOnArrayCopies;safeToSkipChecksOnArrayCopies();OMR;MethodSymbol;0;0
safeToSkipDivChecks;safeToSkipDivChecks();OMR;MethodSymbol;0;0
safeToSkipNullChecks;safeToSkipNullChecks();OMR;MethodSymbol;0;0
safeToSkipZeroInitializationOnNewarrays;safeToSkipZeroInitializationOnNewarrays();OMR;MethodSymbol;0;0
self;self();OMR;MethodSymbol;0;0
self;self();OMR;ResolvedMethodSymbol;0;0
setAutoSymRefs;setAutoSymRefs(TR_Array<List<TR::SymbolReference> > *);OMR;ResolvedMethodSymbol;0;0
setAutomaticList;setAutomaticList(List<TR::AutomaticSymbol>);OMR;ResolvedMethodSymbol;0;0
setCanDirectNativeCall;setCanDirectNativeCall(_Bool);OMR;ResolvedMethodSymbol;0;0
setCanReplaceWithHWInstr;setCanReplaceWithHWInstr(_Bool);OMR;ResolvedMethodSymbol;0;0
setCannotAttemptOSR;setCannotAttemptOSR(int32_t);OMR;ResolvedMethodSymbol;0;0
setComp;setComp(TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
setContainsOnlySinglePrecision;setContainsOnlySinglePrecision(_Bool);OMR;ResolvedMethodSymbol;0;0
setEHAware;setEHAware();OMR;MethodSymbol;0;0
setFirstJitTempIndex;setFirstJitTempIndex(int32_t);OMR;ResolvedMethodSymbol;0;0
setFirstTreeTop;setFirstTreeTop(TR::TreeTop *);OMR;ResolvedMethodSymbol;0;0
setFlowGraph;setFlowGraph(TR::CFG *);OMR;ResolvedMethodSymbol;0;0
setHasBranches;setHasBranches(_Bool);OMR;ResolvedMethodSymbol;0;0
setHasCheckCasts;setHasCheckCasts(_Bool);OMR;ResolvedMethodSymbol;0;0
setHasDememoizationOpportunities;setHasDememoizationOpportunities(_Bool);OMR;ResolvedMethodSymbol;0;0
setHasInstanceOfs;setHasInstanceOfs(_Bool);OMR;ResolvedMethodSymbol;0;0
setHasMethodHandleInvokes;setHasMethodHandleInvokes(_Bool);OMR;ResolvedMethodSymbol;0;0
setHasNews;setHasNews(_Bool);OMR;ResolvedMethodSymbol;0;0
setHasSnapshots;setHasSnapshots(_Bool);OMR;ResolvedMethodSymbol;0;0
setHasThisCalls;setHasThisCalls(_Bool);OMR;ResolvedMethodSymbol;0;0
setHasUnkilledTemps;setHasUnkilledTemps(_Bool);OMR;ResolvedMethodSymbol;0;0
setHasVeryRefinedAliasSets;setHasVeryRefinedAliasSets(_Bool);OMR;MethodSymbol;0;0
setHelper;setHelper();OMR;MethodSymbol;0;0
setInterface;setInterface();OMR;MethodSymbol;0;0
setInterpreted;setInterpreted(_Bool);OMR;MethodSymbol;0;0
setIsInlinedByCG;setIsInlinedByCG();OMR;MethodSymbol;0;0
setIsSideEffectFree;setIsSideEffectFree(_Bool);OMR;ResolvedMethodSymbol;0;0
setJITInternalNative;setJITInternalNative(_Bool);OMR;MethodSymbol;0;0
setJNI;setJNI();OMR;MethodSymbol;0;0
setLinkage;setLinkage(enum TR_LinkageConventions);OMR;MethodSymbol;0;0
setLocalMappingCursor;setLocalMappingCursor(uint32_t);OMR;ResolvedMethodSymbol;0;0
setMayContainMonitors;setMayContainMonitors(_Bool);OMR;ResolvedMethodSymbol;0;0
setMayHaveIndirectCalls;setMayHaveIndirectCalls(_Bool);OMR;ResolvedMethodSymbol;0;0
setMayHaveInlineableCall;setMayHaveInlineableCall(_Bool);OMR;ResolvedMethodSymbol;0;0
setMayHaveLongOps;setMayHaveLongOps(_Bool);OMR;ResolvedMethodSymbol;0;0
setMayHaveLoops;setMayHaveLoops(_Bool);OMR;ResolvedMethodSymbol;0;0
setMayHaveNestedLoops;setMayHaveNestedLoops(_Bool);OMR;ResolvedMethodSymbol;0;0
setMethod;setMethod(class TR_Method *);OMR;MethodSymbol;0;0
setMethodAddress;setMethodAddress(void *);OMR;MethodSymbol;0;0
setMethodKind;setMethodKind(int32_t);OMR;MethodSymbol;0;0
setNoTemps;setNoTemps(_Bool);OMR;ResolvedMethodSymbol;0;0
setNonReturning;setNonReturning();OMR;MethodSymbol;0;0
setObjectTempSlots;setObjectTempSlots(uint32_t);OMR;ResolvedMethodSymbol;0;0
setParameterList;setParameterList();OMR;ResolvedMethodSymbol;0;0
setParmSymRef;setParmSymRef(int32_t,TR::SymbolReference *);OMR;ResolvedMethodSymbol;0;0
setPendingPushSymRefs;setPendingPushSymRefs(TR_Array<List<TR::SymbolReference> > *);OMR;ResolvedMethodSymbol;0;0
setPreservesAllRegisters;setPreservesAllRegisters();OMR;MethodSymbol;0;0
setProfilerFrequency;setProfilerFrequency(int32_t,int32_t);OMR;ResolvedMethodSymbol;0;0
setProloguePushSlots;setProloguePushSlots(uint32_t);OMR;ResolvedMethodSymbol;0;0
setResolvedMethod;setResolvedMethod(class TR_ResolvedMethod *);OMR;ResolvedMethodSymbol;0;0
setResolvedMethodIndex;setResolvedMethodIndex(class mcount_t);OMR;ResolvedMethodSymbol;0;0
setScalarTempSlots;setScalarTempSlots(uint32_t);OMR;ResolvedMethodSymbol;0;0
setSpecial;setSpecial();OMR;MethodSymbol;0;0
setStatic;setStatic();OMR;MethodSymbol;0;0
setSyncObjectTemp;setSyncObjectTemp(TR::SymbolReference *);OMR;ResolvedMethodSymbol;0;0
setSynchronised;setSynchronised();OMR;MethodSymbol;0;0
setSystemLinkageDispatch;setSystemLinkageDispatch();OMR;MethodSymbol;0;0
setTempIndex;setTempIndex(int32_t,class TR_FrontEnd *);OMR;ResolvedMethodSymbol;0;0
setThisTempForObjectCtor;setThisTempForObjectCtor(TR::SymbolReference *);OMR;ResolvedMethodSymbol;0;0
setTreatAsAlwaysExpandBIF;setTreatAsAlwaysExpandBIF(_Bool);OMR;MethodSymbol;0;0
setUnimplementedOpcode;setUnimplementedOpcode(uint8_t);OMR;ResolvedMethodSymbol;0;0
setUnsynchronised;setUnsynchronised();OMR;MethodSymbol;0;0
setUsesSinglePrecisionMode;setUsesSinglePrecisionMode(_Bool);OMR;ResolvedMethodSymbol;0;0
setVMInternalNative;setVMInternalNative(_Bool);OMR;MethodSymbol;0;0
setVirtual;setVirtual();OMR;MethodSymbol;0;0
sharesStackSlot;sharesStackSlot(TR::SymbolReference *);OMR;ResolvedMethodSymbol;0;0
sharesStackSlots;sharesStackSlots(TR::Compilation *);OMR;ResolvedMethodSymbol;0;0
signature;signature(class TR_Memory *);OMR;ResolvedMethodSymbol;0;0
skipArrayStoreChecks;skipArrayStoreChecks();OMR;ResolvedMethodSymbol;0;0
skipBoundChecks;skipBoundChecks();OMR;ResolvedMethodSymbol;0;0
skipCheckCasts;skipCheckCasts();OMR;ResolvedMethodSymbol;0;0
skipChecksOnArrayCopies;skipChecksOnArrayCopies();OMR;ResolvedMethodSymbol;0;0
skipDivChecks;skipDivChecks();OMR;ResolvedMethodSymbol;0;0
skipNullChecks;skipNullChecks();OMR;ResolvedMethodSymbol;0;0
skipZeroInitializationOnNewarrays;skipZeroInitializationOnNewarrays();OMR;ResolvedMethodSymbol;0;0
supportsInduceOSR;supportsInduceOSR(TR_ByteCodeInfo &,TR::Block *,TR::Compilation *,_Bool);OMR;ResolvedMethodSymbol;0;0
treatAsAlwaysExpandBIF;treatAsAlwaysExpandBIF();OMR;MethodSymbol;0;0
uncheckedSetTempIndex;uncheckedSetTempIndex(int32_t);OMR;ResolvedMethodSymbol;0;0
unimplementedOpcode;unimplementedOpcode();OMR;ResolvedMethodSymbol;0;0
usesSinglePrecisionMode;usesSinglePrecisionMode();OMR;ResolvedMethodSymbol;0;0
~MethodSymbol;~MethodSymbol();OMR;MethodSymbol;1;1
~MethodSymbol;~MethodSymbol();TR;MethodSymbol;1;1
~ResolvedMethodSymbol;~ResolvedMethodSymbol();OMR;ResolvedMethodSymbol;1;1
~ResolvedMethodSymbol;~ResolvedMethodSymbol();TR;ResolvedMethodSymbol;1;1
StaticSymbol;StaticSymbol(class OMR::StaticSymbol &&);OMR;StaticSymbol;1;0
StaticSymbol;StaticSymbol(const class OMR::StaticSymbol &);OMR;StaticSymbol;1;0
StaticSymbol;StaticSymbol(TR::DataType,uint32_t);OMR;StaticSymbol;0;0
StaticSymbol;StaticSymbol(TR::DataType,uint32_t);TR;StaticSymbol;0;0
StaticSymbol;StaticSymbol(TR::DataType,void *);OMR;StaticSymbol;0;0
StaticSymbol;StaticSymbol(TR::DataType,void *);TR;StaticSymbol;0;0
StaticSymbol;StaticSymbol(TR::DataType);OMR;StaticSymbol;0;0
StaticSymbol;StaticSymbol(TR::DataType);TR;StaticSymbol;0;0
getName;getName();OMR;StaticSymbol;0;0
getStaticAddress;getStaticAddress();OMR;StaticSymbol;0;0
getTOCIndex;getTOCIndex();OMR;StaticSymbol;0;0
makeNamed;makeNamed(const char *);OMR;StaticSymbol;0;0
operator=;operator=(class OMR::StaticSymbol &&);OMR;StaticSymbol;1;0
operator=;operator=(const class OMR::StaticSymbol &);OMR;StaticSymbol;1;0
operator=;operator=(class TR::StaticSymbol &&);TR;StaticSymbol;1;0
operator=;operator=(const class TR::StaticSymbol &);TR;StaticSymbol;1;0
self;self();OMR;StaticSymbol;0;0
setStaticAddress;setStaticAddress(void *);OMR;StaticSymbol;0;0
setTOCIndex;setTOCIndex(uint32_t);OMR;StaticSymbol;0;0
setUpDLPFlags;setUpDLPFlags(int32_t);OMR;StaticSymbol;0;0
~StaticSymbol;~StaticSymbol();OMR;StaticSymbol;1;1
~StaticSymbol;~StaticSymbol();TR;StaticSymbol;1;1
Machine;Machine(class OMR::Machine &&);OMR;Machine;1;0
Machine;Machine();OMR;Machine;0;0
Machine;Machine(uint8_t,uint8_t,uint8_t);OMR;Machine;0;0
Machine;Machine(const class OMR::Machine &);OMR;Machine;1;0
Machine;Machine(const class OMR::X86::Machine &);OMR::X86;Machine;1;0
Machine;Machine(class OMR::X86::Machine &&);OMR::X86;Machine;1;0
Machine;Machine(uint8_t,uint8_t,TR::CodeGenerator *,TR::RealRegister **,TR::Register **,uint8_t,uint8_t,uint8_t,TR::Register **,uint32_t *);OMR::X86;Machine;0;0
Machine;Machine(class OMR::X86::AMD64::Machine &&);OMR::X86::AMD64;Machine;1;0
Machine;Machine(const class OMR::X86::AMD64::Machine &);OMR::X86::AMD64;Machine;1;0
Machine;Machine(TR::CodeGenerator *);OMR::X86::AMD64;Machine;0;0
Machine;Machine(TR::CodeGenerator *);TR;Machine;0;0
adjustRegisterUseCountsDown;adjustRegisterUseCountsDown(TR::list<OMR::RegisterUsage *> *,_Bool);OMR::X86;Machine;0;0
adjustRegisterUseCountsUp;adjustRegisterUseCountsUp(TR::list<OMR::RegisterUsage *> *,_Bool);OMR::X86;Machine;0;0
captureRegisterAssociations;captureRegisterAssociations();OMR::X86;Machine;0;0
captureRegisterFile;captureRegisterFile();OMR::X86;Machine;0;0
captureSpilledRegistersList;captureSpilledRegistersList();OMR::X86;Machine;0;0
cg;cg();OMR::X86;Machine;0;0
clearRegisterAssociations;clearRegisterAssociations();OMR::X86;Machine;0;0
cloneRegisterFile;cloneRegisterFile(TR::RealRegister **,enum TR_AllocationKind);OMR::X86;Machine;0;0
coerceGPRegisterAssignment;coerceGPRegisterAssignment(TR::Instruction *,TR::Register *,enum TR_RegisterSizes);OMR::X86;Machine;0;0
coerceGPRegisterAssignment;coerceGPRegisterAssignment(TR::Instruction *,TR::Register *,TR::class RealRegister::RegNum,_Bool);OMR::X86;Machine;0;0
coerceXMMRegisterAssignment;coerceXMMRegisterAssignment(TR::Instruction *,TR::Register *,TR::class RealRegister::RegNum,_Bool);OMR::X86;Machine;0;0
createCondForLiveAndSpilledGPRs;createCondForLiveAndSpilledGPRs(_Bool,TR::list<TR::Register *> *);OMR::X86;Machine;0;0
createDepCondForLiveGPRs;createDepCondForLiveGPRs();OMR::X86;Machine;0;0
createRegisterAssociationDirective;createRegisterAssociationDirective(TR::Instruction *);OMR::X86;Machine;0;0
disableNewPickRegister;disableNewPickRegister();OMR::X86::AMD64;Machine;0;0
disassociateUnspilledBackingStorage;disassociateUnspilledBackingStorage();OMR::X86;Machine;0;0
enableNewPickRegister;enableNewPickRegister();OMR::X86::AMD64;Machine;0;0
findBestFreeGPRegister;findBestFreeGPRegister(TR::Instruction *,TR::Register *,enum TR_RegisterSizes,_Bool);OMR::X86;Machine;0;0
findFreeFPRegister;findFreeFPRegister();OMR::X86;Machine;0;0
fpCoerceRegistersToTopOfStack;fpCoerceRegistersToTopOfStack(TR::Instruction *,TR::Register *,TR::Register *,_Bool);OMR::X86;Machine;0;0
fpDeterminePopOpCode;fpDeterminePopOpCode(enum TR_X86OpCodes);OMR::X86;Machine;0;0
fpDetermineReverseOpCode;fpDetermineReverseOpCode(enum TR_X86OpCodes);OMR::X86;Machine;0;0
fpGetNumberOfLiveFPRs;fpGetNumberOfLiveFPRs();OMR::X86;Machine;0;0
fpGetNumberOfLiveXMMRs;fpGetNumberOfLiveXMMRs();OMR::X86;Machine;0;0
fpMapToStackRelativeRegister;fpMapToStackRelativeRegister(int32_t);OMR::X86;Machine;0;0
fpMapToStackRelativeRegister;fpMapToStackRelativeRegister(TR::Register *);OMR::X86;Machine;0;0
fpSpillFPR;fpSpillFPR(TR::Instruction *,TR::Register *);OMR::X86;Machine;0;0
fpSpillStack;fpSpillStack(TR::Instruction *);OMR::X86;Machine;0;0
fpStackCoerce;fpStackCoerce(TR::Register *,int32_t);OMR::X86;Machine;0;0
fpStackFXCH;fpStackFXCH(TR::Instruction *,int32_t);OMR::X86;Machine;0;0
fpStackFXCH;fpStackFXCH(TR::Instruction *,TR::Register *,_Bool);OMR::X86;Machine;0;0
fpStackPop;fpStackPop();OMR::X86;Machine;0;0
fpStackPush;fpStackPush(TR::Register *);OMR::X86;Machine;0;0
freeBestFPRegister;freeBestFPRegister(TR::Instruction *);OMR::X86;Machine;0;0
freeBestGPRegister;freeBestGPRegister(TR::Instruction *,TR::Register *,enum TR_RegisterSizes,TR::class RealRegister::RegNum,_Bool);OMR::X86;Machine;0;0
getCopiedFPStackRegister;getCopiedFPStackRegister(int32_t);OMR::X86;Machine;0;0
getDebug;getDebug();OMR::X86;Machine;0;0
getDummyLocalMR;getDummyLocalMR(TR::DataType);OMR::X86;Machine;0;0
getFPStackLocationPtr;getFPStackLocationPtr(int32_t);OMR::X86;Machine;0;0
getFPStackRegister;getFPStackRegister(int32_t);OMR::X86;Machine;0;0
getFPStackRegisterNode;getFPStackRegisterNode(int32_t);OMR::X86;Machine;0;0
getFPStackShape;getFPStackShape();OMR::X86;Machine;0;0
getFPTopOfStack;getFPTopOfStack();OMR::X86;Machine;0;0
getFPTopOfStackPtr;getFPTopOfStackPtr();OMR::X86;Machine;0;0
getFirstGlobalRegisterNumber;getFirstGlobalRegisterNumber(enum TR_RegisterKinds);OMR;Machine;0;0
getGlobalFPRPartitionLimit;getGlobalFPRPartitionLimit();OMR::X86;Machine;0;0
getGlobalGPRPartitionLimit;getGlobalGPRPartitionLimit();OMR::X86;Machine;0;0
getGlobalReg;getGlobalReg(TR::class RealRegister::RegNum);OMR::X86;Machine;0;0
getGlobalRegisterTable;getGlobalRegisterTable(const struct TR::X86LinkageProperties &);OMR::X86;Machine;0;0
getLast8BitGlobalGPRRegisterNumber;getLast8BitGlobalGPRRegisterNumber();OMR::X86;Machine;0;0
getLastGlobalFPRRegisterNumber;getLastGlobalFPRRegisterNumber();OMR::X86;Machine;0;0
getLastGlobalGPRRegisterNumber;getLastGlobalGPRRegisterNumber();OMR::X86;Machine;0;0
getLastGlobalRegisterNumber;getLastGlobalRegisterNumber(enum TR_RegisterKinds);OMR;Machine;0;0
getLastGlobalRegisterNumber;getLastGlobalRegisterNumber();OMR;Machine;0;0
getLastRealRegisterGlobalRegisterNumber;getLastRealRegisterGlobalRegisterNumber();OMR;Machine;0;0
getNextGlobalRegisterNumber;getNextGlobalRegisterNumber();OMR;Machine;0;0
getNumGlobalGPRs;getNumGlobalGPRs();OMR::X86;Machine;0;0
getNumberOfFPRs;getNumberOfFPRs();OMR;Machine;0;0
getNumberOfGPRs;getNumberOfGPRs();OMR;Machine;0;0
getNumberOfRegisters;getNumberOfRegisters(enum TR_RegisterKinds);OMR;Machine;0;0
getRealRegister;getRealRegister(TR_GlobalRegisterNumber);OMR;Machine;0;1
getRegisterAssociations;getRegisterAssociations();OMR::X86;Machine;0;0
getRegisterFile;getRegisterFile();OMR::X86;Machine;0;0
getSpilledRegistersList;getSpilledRegistersList();OMR::X86;Machine;0;0
getVirtualAssociatedWithReal;getVirtualAssociatedWithReal(TR::class RealRegister::RegNum);OMR::X86;Machine;0;0
getX86RealRegister;getX86RealRegister(TR::class RealRegister::RegNum);OMR::X86;Machine;0;0
getXMMGlobalRegister;getXMMGlobalRegister(int32_t);OMR::X86;Machine;0;0
initialiseFPStackRegisterFile;initialiseFPStackRegisterFile();OMR::X86;Machine;0;0
initialiseRegisterFile;initialiseRegisterFile(const struct TR::X86LinkageProperties &);OMR::X86;Machine;0;0
installRegisterFile;installRegisterFile(TR::RealRegister **);OMR::X86;Machine;0;0
isFPRTopOfStack;isFPRTopOfStack(TR::Register *);OMR::X86;Machine;0;0
isFPStackFull;isFPStackFull();OMR::X86;Machine;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Machine;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Machine;0;0
numGPRRegsWithheld;numGPRRegsWithheld(TR::CodeGenerator *);OMR::X86::AMD64;Machine;0;0
numRegsWithheld;numRegsWithheld(TR::CodeGenerator *);OMR::X86::AMD64;Machine;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Machine;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Machine;0;0
operator delete;operator delete(void *,size_t);OMR;Machine;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Machine;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Machine;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Machine;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Machine;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Machine;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Machine;0;0
operator new;operator new(size_t,TR::Region &);OMR;Machine;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Machine;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Machine;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Machine;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Machine;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Machine;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Machine;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Machine;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Machine;0;0
operator=;operator=(class OMR::Machine &&);OMR;Machine;1;0
operator=;operator=(const class OMR::Machine &);OMR;Machine;1;0
operator=;operator=(class OMR::X86::Machine &&);OMR::X86;Machine;1;0
operator=;operator=(const class OMR::X86::Machine &);OMR::X86;Machine;1;0
operator=;operator=(class OMR::X86::AMD64::Machine &&);OMR::X86::AMD64;Machine;1;0
operator=;operator=(const class OMR::X86::AMD64::Machine &);OMR::X86::AMD64;Machine;1;0
operator=;operator=(class TR::Machine &&);TR;Machine;1;0
operator=;operator=(const class TR::Machine &);TR;Machine;1;0
popEntireStack;popEntireStack();OMR::X86;Machine;0;0
printFPRegisterStatus;printFPRegisterStatus(class TR_FrontEnd *,TR::FILE *);OMR::X86;Machine;0;0
printGPRegisterStatus;printGPRegisterStatus(class TR_FrontEnd *,TR::RealRegister **,TR::FILE *);OMR::X86;Machine;0;0
purgeDeadRegistersFromRegisterFile;purgeDeadRegistersFromRegisterFile();OMR::X86;Machine;0;0
resetFPStackRegisters;resetFPStackRegisters();OMR::X86;Machine;0;0
resetXMMGlobalRegisters;resetXMMGlobalRegisters();OMR::X86;Machine;0;0
reverseFPRSpillState;reverseFPRSpillState(TR::Instruction *,TR::Register *);OMR::X86;Machine;0;0
reverseGPRSpillState;reverseGPRSpillState(TR::Instruction *,TR::Register *,TR::RealRegister *,enum TR_RegisterSizes);OMR::X86;Machine;0;0
self;self();OMR;Machine;0;0
setCopiedFPStackRegister;setCopiedFPStackRegister(int32_t,class TR_X86FPStackRegister *);OMR::X86;Machine;0;0
setFPStackRegister;setFPStackRegister(int32_t,class TR_X86FPStackRegister *);OMR::X86;Machine;0;0
setFPStackRegisterNode;setFPStackRegisterNode(int32_t,TR::Node *);OMR::X86;Machine;0;0
setFPTopOfStack;setFPTopOfStack(TR::Register *);OMR::X86;Machine;0;0
setFirstGlobalRegisterNumber;setFirstGlobalRegisterNumber(enum TR_RegisterKinds,TR_GlobalRegisterNumber);OMR;Machine;0;0
setGPRWeightsFromAssociations;setGPRWeightsFromAssociations();OMR::X86;Machine;0;0
setLastGlobalRegisterNumber;setLastGlobalRegisterNumber(enum TR_RegisterKinds,TR_GlobalRegisterNumber);OMR;Machine;0;0
setLastRealRegisterGlobalRegisterNumber;setLastRealRegisterGlobalRegisterNumber(TR_GlobalRegisterNumber);OMR;Machine;0;0
setNumberOfFPRs;setNumberOfFPRs(uint8_t);OMR;Machine;0;0
setNumberOfGPRs;setNumberOfGPRs(uint8_t);OMR;Machine;0;0
setNumberOfRegisters;setNumberOfRegisters(enum TR_RegisterKinds,uint8_t);OMR;Machine;0;0
setRegisterAssociations;setRegisterAssociations(TR::Register **);OMR::X86;Machine;0;0
setRegisterFile;setRegisterFile(TR::RealRegister **);OMR::X86;Machine;0;0
setSpilledRegistersList;setSpilledRegistersList(List<TR::Register> *);OMR::X86;Machine;0;0
setVirtualAssociatedWithReal;setVirtualAssociatedWithReal(TR::class RealRegister::RegNum,TR::Register *);OMR::X86;Machine;0;0
setXMMGlobalRegister;setXMMGlobalRegister(int32_t,TR::Register *);OMR::X86;Machine;0;0
swapGPRegisters;swapGPRegisters(TR::Instruction *,TR::class RealRegister::RegNum,TR::class RealRegister::RegNum);OMR::X86;Machine;0;0
~Machine;~Machine();OMR;Machine;1;0
~Machine;~Machine();OMR::X86;Machine;1;0
~Machine;~Machine();OMR::X86::AMD64;Machine;1;0
~Machine;~Machine();TR;Machine;1;0
RealRegister;RealRegister(class OMR::RealRegister &&);OMR;RealRegister;1;0
RealRegister;RealRegister(const class OMR::RealRegister &);OMR;RealRegister;1;0
RealRegister;RealRegister(TR::CodeGenerator *,RegNum);OMR;RealRegister;0;0
RealRegister;RealRegister(enum TR_RegisterKinds,uint16_t,RegState,uint16_t,RegNum,RegMask,TR::CodeGenerator *);OMR;RealRegister;0;0
RealRegister;RealRegister(class OMR::X86::RealRegister &&);OMR::X86;RealRegister;1;0
RealRegister;RealRegister(const class OMR::X86::RealRegister &);OMR::X86;RealRegister;1;0
RealRegister;RealRegister(TR::CodeGenerator *);OMR::X86;RealRegister;0;0
RealRegister;RealRegister(TR::CodeGenerator *);OMR::X86::AMD64;RealRegister;0;0
RealRegister;RealRegister(enum TR_RegisterKinds,uint16_t,RegState,RegNum,RegMask,TR::CodeGenerator *);OMR::X86;RealRegister;0;0
RealRegister;RealRegister(enum TR_RegisterKinds,uint16_t,RegState,RegNum,RegMask,TR::CodeGenerator *);OMR::X86::AMD64;RealRegister;0;0
RealRegister;RealRegister(class OMR::X86::AMD64::RealRegister &&);OMR::X86::AMD64;RealRegister;1;0
RealRegister;RealRegister(const class OMR::X86::AMD64::RealRegister &);OMR::X86::AMD64;RealRegister;1;0
RealRegister;RealRegister(class TR::RealRegister &&);TR;RealRegister;1;0
RealRegister;RealRegister(const class TR::RealRegister &);TR;RealRegister;1;0
RealRegister;RealRegister(enum TR_RegisterKinds,uint16_t,RegState,TR::class RealRegister::RegNum,TR::class RealRegister::RegMask,TR::CodeGenerator *);TR;RealRegister;0;0
Register;Register(class OMR::Register &&);OMR;Register;1;0
Register;Register(uint32_t);OMR;Register;0;0
Register;Register(uint32_t);OMR::X86;Register;0;0
Register;Register(uint32_t);TR;Register;0;0
Register;Register(enum TR_RegisterKinds,uint16_t);OMR;Register;0;0
Register;Register(enum TR_RegisterKinds,uint16_t);OMR::X86;Register;0;0
Register;Register(enum TR_RegisterKinds,uint16_t);TR;Register;0;0
Register;Register(const class OMR::Register &);OMR;Register;1;0
Register;Register(enum TR_RegisterKinds);OMR;Register;0;0
Register;Register(enum TR_RegisterKinds);OMR::X86;Register;0;0
Register;Register(enum TR_RegisterKinds);TR;Register;0;0
Register;Register(class OMR::X86::Register &&);OMR::X86;Register;1;0
Register;Register(const class OMR::X86::Register &);OMR::X86;Register;1;0
Register;Register(class TR::Register &&);TR;Register;1;0
Register;Register(const class TR::Register &);TR;Register;1;0
TR_X86FPStackRegister;TR_X86FPStackRegister(RegState,TR_X86FPStackRegisters,TR::class RealRegister::RegNum,TR::CodeGenerator *);;TR_X86FPStackRegister;0;0
areUpperBitsZero;areUpperBitsZero();OMR::X86;Register;0;0
block;block();OMR;Register;0;1
block;block();OMR;RealRegister;0;1
containsCollectedReference;containsCollectedReference();OMR;Register;0;0
containsInternalPointer;containsInternalPointer();OMR;Register;0;0
decFutureUseCount;decFutureUseCount(ncount_t);OMR;Register;0;0
decOutOfLineUseCount;decOutOfLineUseCount(ncount_t);OMR;Register;0;0
decTotalUseCount;decTotalUseCount(ncount_t);OMR;Register;0;0
fprMask;fprMask(RegNum);OMR::X86::AMD64;RealRegister;0;0
getAssignedRealRegister;getAssignedRealRegister();OMR;Register;0;0
getAssignedRegister;getAssignedRegister();OMR;Register;0;0
getAssociation;getAssociation();OMR;Register;0;0
getAvailableRegistersMask;getAvailableRegistersMask(enum TR_RegisterKinds);OMR;RealRegister;0;0
getAvailableRegistersMask;getAvailableRegistersMask(enum TR_RegisterKinds);OMR::X86;RealRegister;0;0
getBackingStorage;getBackingStorage();OMR;Register;0;0
getBitPosInMask;getBitPosInMask(TR_RegisterMask);OMR;RealRegister;0;0
getCCRegister;getCCRegister();OMR;Register;0;0
getColouredRegister;getColouredRegister();OMR;Register;0;0
getEndOfRange;getEndOfRange();OMR;Register;0;0
getFPStackRegisterNumber;getFPStackRegisterNumber();;TR_X86FPStackRegister;0;0
getFlags;getFlags();OMR;Register;0;0
getFutureUseCount;getFutureUseCount();OMR;Register;0;0
getHasBeenAssignedInMethod;getHasBeenAssignedInMethod();OMR;RealRegister;0;0
getHighOrder;getHighOrder();OMR;Register;0;1
getIndex;getIndex();OMR;Register;0;0
getInterference;getInterference();OMR::X86;Register;0;0
getIsAssignedMoreThanOnce;getIsAssignedMoreThanOnce();OMR;RealRegister;0;0
getIsAssignedOnce;getIsAssignedOnce();OMR;RealRegister;0;0
getIsFreeOnExit;getIsFreeOnExit();OMR;RealRegister;0;0
getIsSpillExtendedOutOfLoop;getIsSpillExtendedOutOfLoop();OMR;RealRegister;0;0
getKind;getKind();OMR;Register;0;0
getKindAsMask;getKindAsMask();OMR;Register;0;0
getLiveRegisterInfo;getLiveRegisterInfo();OMR::X86;Register;0;0
getLowOrder;getLowOrder();OMR;Register;0;1
getMemRef;getMemRef();OMR::X86;Register;0;0
getOutOfLineUseCount;getOutOfLineUseCount();OMR;Register;0;0
getPinningArrayPointer;getPinningArrayPointer();OMR;Register;0;0
getRealRegister;getRealRegister();OMR;Register;0;1
getRealRegister;getRealRegister();OMR;RealRegister;0;1
getRealRegisterMask;getRealRegisterMask();OMR;RealRegister;0;0
getRealRegisterMask;getRealRegisterMask(enum TR_RegisterKinds,RegNum);OMR::X86;RealRegister;0;0
getRegister;getRegister();OMR;Register;0;1
getRegister;getRegister();OMR;RealRegister;0;1
getRegisterKindName;getRegisterKindName(TR::Compilation *,enum TR_RegisterKinds);OMR;Register;0;0
getRegisterName;getRegisterName(TR::Compilation *,enum TR_RegisterSizes);OMR;Register;0;1
getRegisterNumber;getRegisterNumber();OMR;RealRegister;0;0
getRegisterPair;getRegisterPair();OMR;Register;0;1
getRematerializationInfo;getRematerializationInfo();OMR::X86;Register;0;0
getSiblingRegister;getSiblingRegister();OMR;Register;0;0
getStartOfRange;getStartOfRange();OMR;Register;0;0
getStartOfRangeNode;getStartOfRangeNode();OMR;Register;0;0
getState;getState();OMR;RealRegister;0;0
getTotalUseCount;getTotalUseCount();OMR;Register;0;0
getWeight;getWeight();OMR;RealRegister;0;0
gprMask;gprMask(RegNum);OMR::X86::AMD64;RealRegister;0;0
hasBetterSpillPlacement;hasBetterSpillPlacement();OMR::X86;Register;0;0
incFutureUseCount;incFutureUseCount(ncount_t);OMR;Register;0;0
incOutOfLineUseCount;incOutOfLineUseCount(ncount_t);OMR;Register;0;0
incTotalUseCount;incTotalUseCount(ncount_t);OMR;Register;0;0
isAssignedAsByteRegister;isAssignedAsByteRegister();OMR::X86;Register;0;0
isDiscardable;isDiscardable();OMR::X86;Register;0;0
isLive;isLive();OMR;Register;0;0
isPlaceholderReg;isPlaceholderReg();OMR;Register;0;0
isSinglePrecision;isSinglePrecision();OMR;Register;0;0
isSpilledToSecondHalf;isSpilledToSecondHalf();OMR::X86;Register;0;0
isUpperHalfDead;isUpperHalfDead();OMR;Register;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Register;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Register;0;0
mayNeedPrecisionAdjustment;mayNeedPrecisionAdjustment();OMR::X86;Register;0;0
mmIndex;mmIndex(uint8_t);OMR::X86::AMD64;RealRegister;0;0
mmrMask;mmrMask(RegNum);OMR::X86::AMD64;RealRegister;0;0
needsDisp;needsDisp();OMR::X86::AMD64;RealRegister;0;0
needsLazyClobbering;needsLazyClobbering();OMR::X86;Register;0;0
needsPrecisionAdjustment;needsPrecisionAdjustment();OMR::X86;Register;0;0
needsSIB;needsSIB();OMR::X86::AMD64;RealRegister;0;0
operator delete;operator delete(void *,size_t);OMR;Register;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Register;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Register;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Register;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Register;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Register;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Register;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Register;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Register;0;0
operator new;operator new(size_t,TR::Region &);OMR;Register;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Register;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Register;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Register;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Register;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Register;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Register;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Register;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Register;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Register;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Register;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Register;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Register;0;0
operator=;operator=(const class OMR::Register &);OMR;Register;1;0
operator=;operator=(class OMR::Register &&);OMR;Register;1;0
operator=;operator=(class OMR::X86::Register &&);OMR::X86;Register;1;0
operator=;operator=(const class OMR::X86::Register &);OMR::X86;Register;1;0
operator=;operator=(class TR::Register &&);TR;Register;1;0
operator=;operator=(const class TR::Register &);TR;Register;1;0
operator=;operator=(class OMR::RealRegister &&);OMR;RealRegister;1;0
operator=;operator=(const class OMR::RealRegister &);OMR;RealRegister;1;0
operator=;operator=(class OMR::X86::RealRegister &&);OMR::X86;RealRegister;1;0
operator=;operator=(const class OMR::X86::RealRegister &);OMR::X86;RealRegister;1;0
operator=;operator=(const class OMR::X86::AMD64::RealRegister &);OMR::X86::AMD64;RealRegister;1;0
operator=;operator=(class OMR::X86::AMD64::RealRegister &&);OMR::X86::AMD64;RealRegister;1;0
operator=;operator=(const class TR::RealRegister &);TR;RealRegister;1;0
operator=;operator=(class TR::RealRegister &&);TR;RealRegister;1;0
operator=;operator=(class TR_X86FPStackRegister &&);;TR_X86FPStackRegister;1;0
operator=;operator=(const class TR_X86FPStackRegister &);;TR_X86FPStackRegister;1;0
print;print(TR::Compilation *,TR::FILE *,enum TR_RegisterSizes);OMR;Register;0;1
rIndex;rIndex(uint8_t);OMR::X86::AMD64;RealRegister;0;0
regMaskToRealRegister;regMaskToRealRegister(TR_RegisterMask,enum TR_RegisterKinds,TR::CodeGenerator *);OMR;RealRegister;0;0
regMaskToRealRegister;regMaskToRealRegister(TR_RegisterMask,enum TR_RegisterKinds,TR::CodeGenerator *);OMR::X86;RealRegister;0;0
resetIsDiscardable;resetIsDiscardable();OMR::X86;Register;0;0
resetIsLive;resetIsLive();OMR;Register;0;0
resetMayNeedPrecisionAdjustment;resetMayNeedPrecisionAdjustment();OMR::X86;Register;0;0
resetNeedsPrecisionAdjustment;resetNeedsPrecisionAdjustment();OMR::X86;Register;0;0
resetPlaceholderReg;resetPlaceholderReg();OMR;Register;0;0
resetState;resetState(RegState);OMR;RealRegister;0;0
rexBits;rexBits(uint8_t,_Bool);OMR::X86::AMD64;RealRegister;0;0
self;self();OMR;Register;0;0
self;self();OMR;RealRegister;0;0
setAssignedAsByteRegister;setAssignedAsByteRegister(_Bool);OMR::X86;Register;0;0
setAssignedRegister;setAssignedRegister(TR::Register *);OMR;Register;0;0
setAssignedRegister;setAssignedRegister(TR::Register *);OMR;RealRegister;0;0
setAssociation;setAssociation(uint32_t);OMR;Register;0;0
setBackingStorage;setBackingStorage(class TR_BackingStore *);OMR;Register;0;0
setBaseRegisterFieldInSIB;setBaseRegisterFieldInSIB(uint8_t *);OMR::X86::AMD64;RealRegister;0;0
setCCRegister;setCCRegister(TR::Register *);OMR;Register;0;0
setColouredRegister;setColouredRegister(TR::Register *);OMR;Register;0;0
setContainsCollectedReference;setContainsCollectedReference();OMR;Register;0;0
setContainsInternalPointer;setContainsInternalPointer();OMR;Register;0;0
setEndOfRange;setEndOfRange(TR::Instruction *);OMR;Register;0;0
setFPStackRegisterNumber;setFPStackRegisterNumber(TR_X86FPStackRegisters);;TR_X86FPStackRegister;0;0
setFlags;setFlags(uint32_t);OMR;Register;0;0
setFutureUseCount;setFutureUseCount(ncount_t);OMR;Register;0;0
setHasBeenAssignedInMethod;setHasBeenAssignedInMethod(_Bool);OMR;RealRegister;0;0
setHasBetterSpillPlacement;setHasBetterSpillPlacement(_Bool);OMR::X86;Register;0;0
setIndex;setIndex(uint32_t);OMR;Register;0;0
setIndexRegisterFieldInSIB;setIndexRegisterFieldInSIB(uint8_t *);OMR::X86::AMD64;RealRegister;0;0
setInterference;setInterference(uint32_t);OMR::X86;Register;0;0
setIsAssignedMoreThanOnce;setIsAssignedMoreThanOnce(_Bool);OMR;RealRegister;0;0
setIsAssignedOnce;setIsAssignedOnce(_Bool);OMR;RealRegister;0;0
setIsDiscardable;setIsDiscardable();OMR::X86;Register;0;0
setIsFreeOnExit;setIsFreeOnExit(_Bool);OMR;RealRegister;0;0
setIsLive;setIsLive();OMR;Register;0;0
setIsSinglePrecision;setIsSinglePrecision(_Bool);OMR;Register;0;0
setIsSpillExtendedOutOfLoop;setIsSpillExtendedOutOfLoop(_Bool);OMR;RealRegister;0;0
setIsSpilledToSecondHalf;setIsSpilledToSecondHalf(_Bool);OMR::X86;Register;0;0
setIsUpperHalfDead;setIsUpperHalfDead(_Bool);OMR;Register;0;0
setKind;setKind(enum TR_RegisterKinds);OMR;Register;0;0
setLiveRegisterInfo;setLiveRegisterInfo(class TR_LiveRegisterInfo *);OMR::X86;Register;0;0
setMayNeedPrecisionAdjustment;setMayNeedPrecisionAdjustment();OMR::X86;Register;0;0
setMemRef;setMemRef(TR::MemoryReference *);OMR::X86;Register;0;0
setNeedsLazyClobbering;setNeedsLazyClobbering(_Bool);OMR::X86;Register;0;0
setNeedsPrecisionAdjustment;setNeedsPrecisionAdjustment();OMR::X86;Register;0;0
setOutOfLineUseCount;setOutOfLineUseCount(ncount_t);OMR;Register;0;0
setPinningArrayPointer;setPinningArrayPointer(TR::AutomaticSymbol *);OMR;Register;0;0
setPlaceholderReg;setPlaceholderReg();OMR;Register;0;0
setRMRegisterFieldInModRM;setRMRegisterFieldInModRM(uint8_t *);OMR::X86::AMD64;RealRegister;0;0
setRealRegisterMask;setRealRegisterMask(RegMask);OMR;RealRegister;0;0
setRegisterFieldInModRM;setRegisterFieldInModRM(uint8_t *);OMR::X86::AMD64;RealRegister;0;0
setRegisterFieldInOpcode;setRegisterFieldInOpcode(uint8_t *);OMR::X86::AMD64;RealRegister;0;0
setRegisterNumber;setRegisterNumber(RegNum);OMR;RealRegister;0;0
setRegisterNumber;setRegisterNumber();OMR::X86::AMD64;RealRegister;0;0
setRematerializationInfo;setRematerializationInfo(class TR_RematerializationInfo *);OMR::X86;Register;0;0
setSiblingRegister;setSiblingRegister(TR::Register *);OMR;Register;0;0
setStartOfRange;setStartOfRange(TR::Instruction *);OMR;Register;0;0
setStartOfRangeNode;setStartOfRangeNode(TR::Node *);OMR;Register;0;0
setState;setState(RegState,_Bool);OMR;RealRegister;0;0
setTotalUseCount;setTotalUseCount(ncount_t);OMR;Register;0;0
setUpperBitsAreZero;setUpperBitsAreZero(_Bool);OMR::X86;Register;0;0
setWeight;setWeight(uint16_t);OMR;RealRegister;0;0
unblock;unblock();OMR;Register;0;1
unblock;unblock();OMR;RealRegister;0;1
xmmIndex;xmmIndex(uint8_t);OMR::X86::AMD64;RealRegister;0;0
xmmrMask;xmmrMask(RegNum);OMR::X86::AMD64;RealRegister;0;0
~RealRegister;~RealRegister();OMR;RealRegister;1;0
~RealRegister;~RealRegister();OMR::X86;RealRegister;1;0
~RealRegister;~RealRegister();OMR::X86::AMD64;RealRegister;1;0
~RealRegister;~RealRegister();TR;RealRegister;1;0
~Register;~Register();OMR;Register;1;0
~Register;~Register();OMR::X86;Register;1;0
~Register;~Register();TR;Register;1;0
~TR_X86FPStackRegister;~TR_X86FPStackRegister();;TR_X86FPStackRegister;1;0
BBEndEvaluator;BBEndEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
BBStartEvaluator;BBStartEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
FloatingPointAndVectorBinaryArithmeticEvaluator;FloatingPointAndVectorBinaryArithmeticEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
GlRegDepsEvaluator;GlRegDepsEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
NOPEvaluator;NOPEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
PrefetchEvaluator;PrefetchEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
SIMDRegLoadEvaluator;SIMDRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
SIMDRegStoreEvaluator;SIMDRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
SIMDgetvelemEvaluator;SIMDgetvelemEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
SIMDloadEvaluator;SIMDloadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
SIMDsplatsEvaluator;SIMDsplatsEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
SIMDstoreEvaluator;SIMDstoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
SSE2ArraycmpEvaluator;SSE2ArraycmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
SSE2ArraycmpLenEvaluator;SSE2ArraycmpLenEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
SSE2IfArraycmpEvaluator;SSE2IfArraycmpEvaluator(TR::Node *,TR::LabelSymbol *,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
VMarrayStoreCheckArrayCopyEvaluator;VMarrayStoreCheckArrayCopyEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
VMifArrayCmpEvaluator;VMifArrayCmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
VMifInstanceOfEvaluator;VMifInstanceOfEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
VMinlineCallEvaluator;VMinlineCallEvaluator(TR::Node *,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
VMmergenewEvaluator;VMmergenewEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
VMtestForReferenceArray;VMtestForReferenceArray(TR::Node *,TR::Register *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
a2lEvaluator;a2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
aRegLoadEvaluator;aRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
acmpeqEvaluator;acmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
aconstEvaluator;aconstEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
aiaddEvaluator;aiaddEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
aloadEvaluator;aloadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
analyseAddForLEA;analyseAddForLEA(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
analyseSubForLEA;analyseSubForLEA(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
arraycmpEvaluator;arraycmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
arraycopyEvaluator;arraycopyEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
arraysetEvaluator;arraysetEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
arraytranslateAndTestEvaluator;arraytranslateAndTestEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
arraytranslateEvaluator;arraytranslateEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
atomicorEvaluator;atomicorEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
b2iEvaluator;b2iEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
b2lEvaluator;b2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
b2sEvaluator;b2sEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
badILOpEvaluator;badILOpEvaluator(TR::Node *,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
baddEvaluator;baddEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bandEvaluator;bandEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bcmpEvaluator;bcmpEvaluator(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bcmpEvaluator;bcmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bcmpeqEvaluator;bcmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bcmpgeEvaluator;bcmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bcmpgtEvaluator;bcmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bcmpleEvaluator;bcmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bcmpltEvaluator;bcmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bconstEvaluator;bconstEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bitpermuteEvaluator;bitpermuteEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bloadEvaluator;bloadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bnegEvaluator;bnegEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
borEvaluator;borEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bshlEvaluator;bshlEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bshrEvaluator;bshrEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bstoreEvaluator;bstoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bsubEvaluator;bsubEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bu2iEvaluator;bu2iEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bu2lEvaluator;bu2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
bu2sEvaluator;bu2sEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bucmpEvaluator;bucmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bushrEvaluator;bushrEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
butestEvaluator;butestEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bxorEvaluator;bxorEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
bztestnsetEvaluator;bztestnsetEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
c2iEvaluator;c2iEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
c2lEvaluator;c2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
caddEvaluator;caddEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
canUseFCOMIInstructions;canUseFCOMIInstructions(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
candEvaluator;candEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
cconstEvaluator;cconstEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
cdivEvaluator;cdivEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
checkNonNegativePowerOfTwo;checkNonNegativePowerOfTwo(int32_t);OMR;TreeEvaluator;0;0
checkNonNegativePowerOfTwo;checkNonNegativePowerOfTwo(int64_t);OMR;TreeEvaluator;0;0
checkPositiveOrNegativePowerOfTwo;checkPositiveOrNegativePowerOfTwo(int32_t);OMR;TreeEvaluator;0;0
checkPositiveOrNegativePowerOfTwo;checkPositiveOrNegativePowerOfTwo(int64_t);OMR;TreeEvaluator;0;0
classDepth;classDepth(TR::Node *,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
cmp2BytesEvaluator;cmp2BytesEvaluator(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
cmulEvaluator;cmulEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
coerceFPOperandsToXMMRs;coerceFPOperandsToXMMRs(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
coerceFPRToXMMR;coerceFPRToXMMR(TR::Node *,TR::Register *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
coerceXMMRToFPR;coerceXMMRToFPR(TR::Node *,TR::Register *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
commonFPRemEvaluator;commonFPRemEvaluator(TR::Node *,TR::CodeGenerator *,_Bool);OMR::X86;TreeEvaluator;0;0
compare2BytesForOrder;compare2BytesForOrder(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareBytesForOrder;compareBytesForOrder(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareDoubleAndBranchEvaluator;compareDoubleAndBranchEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareDoubleAndSetEvaluator;compareDoubleAndSetEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareDoubleEvaluator;compareDoubleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareFloatAndBranchEvaluator;compareFloatAndBranchEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareFloatAndSetEvaluator;compareFloatAndSetEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareFloatEvaluator;compareFloatEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareFloatOrDoubleForOrder;compareFloatOrDoubleForOrder(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareGPMemoryToImmediate;compareGPMemoryToImmediate(TR::Node *,TR::MemoryReference *,int32_t,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareGPRegisterToConstantForEquality;compareGPRegisterToConstantForEquality(TR::Node *,int32_t,TR::Register *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareGPRegisterToImmediate;compareGPRegisterToImmediate(TR::Node *,TR::Register *,int32_t,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareGPRegisterToImmediateForEquality;compareGPRegisterToImmediateForEquality(TR::Node *,TR::Register *,int32_t,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareIntegersForEquality;compareIntegersForEquality(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareIntegersForOrder;compareIntegersForOrder(TR::Node *,TR::Node *,TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compareIntegersForOrder;compareIntegersForOrder(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
compressedRefsEvaluator;compressedRefsEvaluator(TR::Node *,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
computeCCEvaluator;computeCCEvaluator(TR::Node *,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
conditionalHelperEvaluator;conditionalHelperEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
constNodeValueIs32BitSigned;constNodeValueIs32BitSigned(TR::Node *,intptrj_t *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
conversionAnalyser;conversionAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
corEvaluator;corEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
cremEvaluator;cremEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
cshlEvaluator;cshlEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
cstoreEvaluator;cstoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
csubEvaluator;csubEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
cushrEvaluator;cushrEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
cxorEvaluator;cxorEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
d2bEvaluator;d2bEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
d2cEvaluator;d2cEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
d2fEvaluator;d2fEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
d2lEvaluator;d2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
d2sEvaluator;d2sEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
dRegLoadEvaluator;dRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
dRegStoreEvaluator;dRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
daddEvaluator;daddEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
dbits2lEvaluator;dbits2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
dconstEvaluator;dconstEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ddivEvaluator;ddivEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
directCallEvaluator;directCallEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
dloadEvaluator;dloadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
dmulEvaluator;dmulEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
dnegEvaluator;dnegEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
dstoreEvaluatorHelper;dstoreEvaluatorHelper(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
dsubEvaluator;dsubEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
evaluateNULLCHKWithPossibleResolve;evaluateNULLCHKWithPossibleResolve(TR::Node *,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
evaluateNodesWithFutureUses;evaluateNodesWithFutureUses(TR::Node *,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
f2bEvaluator;f2bEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
f2cEvaluator;f2cEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
f2dEvaluator;f2dEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
f2iEvaluator;f2iEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
f2lEvaluator;f2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
f2sEvaluator;f2sEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fRegLoadEvaluator;fRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fRegStoreEvaluator;fRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
faddEvaluator;faddEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fbits2iEvaluator;fbits2iEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fconstEvaluator;fconstEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fdivEvaluator;fdivEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fenceEvaluator;fenceEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
floadEvaluator;floadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
floatingPointStoreEvaluator;floatingPointStoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fmulEvaluator;fmulEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fnegEvaluator;fnegEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fpBinaryArithmeticEvaluator;fpBinaryArithmeticEvaluator(TR::Node *,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fpConvertToInt;fpConvertToInt(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fpConvertToLong;fpConvertToLong(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fpRemEvaluator;fpRemEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fpReturnEvaluator;fpReturnEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
fsubEvaluator;fsubEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
genArithmeticInstructionsForOverflowCHK;genArithmeticInstructionsForOverflowCHK(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
genNullTestSequence;genNullTestSequence(TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
generateBranchOrSetOnFPCompare;generateBranchOrSetOnFPCompare(TR::Node *,TR::Register *,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
generateFPCompareResult;generateFPCompareResult(TR::Node *,TR::Register *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
generateIAddOrSubForOverflowCheck;generateIAddOrSubForOverflowCheck(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
generateLAddOrSubForOverflowCheck;generateLAddOrSubForOverflowCheck(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
generateLEAForLoadAddr;generateLEAForLoadAddr(TR::Node *,TR::MemoryReference *,TR::SymbolReference *,TR::CodeGenerator *,_Bool);OMR::X86;TreeEvaluator;0;0
generateMemoryShift;generateMemoryShift(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
generateRegisterShift;generateRegisterShift(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
getHighGlobalRegisterNumberIfAny;getHighGlobalRegisterNumberIfAny(TR::Node *,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
getNodeIs64Bit;getNodeIs64Bit(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
getOverflowCatchBlock;getOverflowCatchBlock(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
gotoEvaluator;gotoEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
i2aEvaluator;i2aEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
i2bEvaluator;i2bEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
i2dEvaluator;i2dEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
i2fEvaluator;i2fEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
i2lEvaluator;i2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
iRegStoreEvaluator;iRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
iandEvaluator;iandEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ibits2fEvaluator;ibits2fEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ibyteswapEvaluator;ibyteswapEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
icmpEvaluator;icmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
icmpsetEvaluator;icmpsetEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
iconstEvaluator;iconstEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifacmpeqEvaluator;ifacmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
ifbcmpeqEvaluator;ifbcmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifbcmpgeEvaluator;ifbcmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifbcmpgtEvaluator;ifbcmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifbcmpleEvaluator;ifbcmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifbcmpltEvaluator;ifbcmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifbucmpgeEvaluator;ifbucmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifbucmpgtEvaluator;ifbucmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifbucmpleEvaluator;ifbucmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifbucmpltEvaluator;ifbucmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
iflcmpeqEvaluator;iflcmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpgeEvaluator;iflcmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpgtEvaluator;iflcmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpleEvaluator;iflcmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpltEvaluator;iflcmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpneEvaluator;iflcmpneEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
ifscmpeqEvaluator;ifscmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifscmpgeEvaluator;ifscmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifscmpgtEvaluator;ifscmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifscmpleEvaluator;ifscmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifscmpltEvaluator;ifscmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifsucmpeqEvaluator;ifsucmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifsucmpgeEvaluator;ifsucmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifsucmpgtEvaluator;ifsucmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifsucmpleEvaluator;ifsucmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifsucmpltEvaluator;ifsucmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ifxcmpoEvaluator;ifxcmpoEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
igotoEvaluator;igotoEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
iloadEvaluator;iloadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ilstoreEvaluator;ilstoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
indirectCallEvaluator;indirectCallEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
initializeStrictlyFutureUseCounts;initializeStrictlyFutureUseCounts(TR::Node *,vcount_t,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
insertLoadConstant;insertLoadConstant(TR::Node *,TR::Register *,intptrj_t,enum TR_RematerializableTypes,TR::CodeGenerator *,TR::Instruction *);OMR::X86;TreeEvaluator;0;0
insertLoadMemory;insertLoadMemory(TR::Node *,TR::Register *,TR::MemoryReference *,enum TR_RematerializableTypes,TR::CodeGenerator *,TR::Instruction *);OMR::X86;TreeEvaluator;0;0
insertPrecisionAdjustment;insertPrecisionAdjustment(TR::Register *,TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
instanceOfOrCheckCastNeedEqualityTest;instanceOfOrCheckCastNeedEqualityTest(TR::Node *,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
instanceOfOrCheckCastNeedSuperTest;instanceOfOrCheckCastNeedSuperTest(TR::Node *,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
intOrLongClobberEvaluate;intOrLongClobberEvaluate(TR::Node *,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerAbsEvaluator;integerAbsEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerAddEvaluator;integerAddEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerCmpeqEvaluator;integerCmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerCmpgeEvaluator;integerCmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerCmpgtEvaluator;integerCmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerCmpleEvaluator;integerCmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerCmpltEvaluator;integerCmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerCmpneEvaluator;integerCmpneEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerConstNodeValue;integerConstNodeValue(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerDivOrRemEvaluator;integerDivOrRemEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerDualAddOrSubEvaluator;integerDualAddOrSubEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerDualMulEvaluator;integerDualMulEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerEqualityHelper;integerEqualityHelper(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerIfCmpeqEvaluator;integerIfCmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerIfCmpgeEvaluator;integerIfCmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerIfCmpgtEvaluator;integerIfCmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerIfCmpleEvaluator;integerIfCmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerIfCmpltEvaluator;integerIfCmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerIfCmpneEvaluator;integerIfCmpneEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerMulEvaluator;integerMulEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerMulhEvaluator;integerMulhEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerNegEvaluator;integerNegEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerOrderHelper;integerOrderHelper(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerRegLoadEvaluator;integerRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerReturnEvaluator;integerReturnEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerRolEvaluator;integerRolEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerShlEvaluator;integerShlEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerShrEvaluator;integerShrEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerStoreEvaluator;integerStoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerSubEvaluator;integerSubEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
integerUshrEvaluator;integerUshrEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
iorEvaluator;iorEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
isStaticClassSymRef;isStaticClassSymRef(TR::SymbolReference *);OMR;TreeEvaluator;0;0
istoreEvaluator;istoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
iternaryEvaluator;iternaryEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
iu2lEvaluator;iu2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
iucmpEvaluator;iucmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ixorEvaluator;ixorEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
l2aEvaluator;l2aEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
l2dEvaluator;l2dEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
l2fEvaluator;l2fEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
l2iEvaluator;l2iEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lRegLoadEvaluator;lRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lRegStoreEvaluator;lRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
laddEvaluator;laddEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
landEvaluator;landEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lbits2dEvaluator;lbits2dEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lcmpEvaluator;lcmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lcmpeqEvaluator;lcmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lcmpgeEvaluator;lcmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lcmpgtEvaluator;lcmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lcmpleEvaluator;lcmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lcmpltEvaluator;lcmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lcmpneEvaluator;lcmpneEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lconstEvaluator;lconstEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lloadEvaluator;lloadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
loadConstant;loadConstant(TR::Node *,intptrj_t,enum TR_RematerializableTypes,TR::CodeGenerator *,TR::Register *);OMR::X86;TreeEvaluator;0;0
loadMemory;loadMemory(TR::Node *,TR::MemoryReference *,enum TR_RematerializableTypes,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
loadaddrEvaluator;loadaddrEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
logicalEvaluator;logicalEvaluator(TR::Node *,enum TR_X86OpCodes [],TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
longStoreEvaluator;longStoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lookupEvaluator;lookupEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
lorEvaluator;lorEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lstoreEvaluator;lstoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lsubEvaluator;lsubEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
lxorEvaluator;lxorEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
minmaxEvaluator;minmaxEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
negEvaluatorHelper;negEvaluatorHelper(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
nodeIsIAddOverflowCheck;nodeIsIAddOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);OMR;TreeEvaluator;0;0
nodeIsIArithmeticOverflowCheck;nodeIsIArithmeticOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);OMR;TreeEvaluator;0;0
nodeIsISubOverflowCheck;nodeIsISubOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);OMR;TreeEvaluator;0;0
nodeIsLAddOverflowCheck;nodeIsLAddOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);OMR;TreeEvaluator;0;0
nodeIsLArithmeticOverflowCheck;nodeIsLArithmeticOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);OMR;TreeEvaluator;0;0
nodeIsLSubOverflowCheck;nodeIsLSubOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);OMR;TreeEvaluator;0;0
overflowCHKEvaluator;overflowCHKEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
padUnresolvedDataReferences;padUnresolvedDataReferences(TR::Node *,TR::SymbolReference &,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
passThroughEvaluator;passThroughEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
performCall;performCall(TR::Node *,_Bool,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
performDload;performDload(TR::Node *,TR::MemoryReference *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
performFload;performFload(TR::Node *,TR::MemoryReference *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
performHelperCall;performHelperCall(TR::Node *,TR::SymbolReference *,TR::ILOpCodes,_Bool,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
performIload;performIload(TR::Node *,TR::MemoryReference *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
performSimpleAtomicMemoryUpdate;performSimpleAtomicMemoryUpdate(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
removeLiveDiscardableStatics;removeLiveDiscardableStatics(TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
returnEvaluator;returnEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
reverseLoadEvaluator;reverseLoadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
reverseStoreEvaluator;reverseStoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
rotateMask;rotateMask(_Bool);OMR::X86;TreeEvaluator;0;0
s2iEvaluator;s2iEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
s2lEvaluator;s2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
saddEvaluator;saddEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sandEvaluator;sandEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sbyteswapEvaluator;sbyteswapEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
scmpEvaluator;scmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
scmpeqEvaluator;scmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
scmpgeEvaluator;scmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
scmpgtEvaluator;scmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
scmpleEvaluator;scmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
scmpltEvaluator;scmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sconstEvaluator;sconstEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
setupProfiledGuardRelocation;setupProfiledGuardRelocation(TR::X86RegImmInstruction *,TR::Node *,TR_ExternalRelocationTargetKind);OMR::X86;TreeEvaluator;0;0
shiftMask;shiftMask(_Bool);OMR::X86;TreeEvaluator;0;0
signedIntegerDivOrRemAnalyser;signedIntegerDivOrRemAnalyser(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sloadEvaluator;sloadEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
snegEvaluator;snegEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sorEvaluator;sorEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sshlEvaluator;sshlEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sshrEvaluator;sshrEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sstoreEvaluator;sstoreEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
ssubEvaluator;ssubEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
stopUsingCopyRegAddr;stopUsingCopyRegAddr(TR::Node *,TR::Register *&,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
stopUsingCopyRegInteger;stopUsingCopyRegInteger(TR::Node *,TR::Register *&,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
su2iEvaluator;su2iEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
su2lEvaluator;su2lEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86::AMD64;TreeEvaluator;0;0
sucmpEvaluator;sucmpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sucmpeqEvaluator;sucmpeqEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sucmpgeEvaluator;sucmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sucmpgtEvaluator;sucmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sucmpleEvaluator;sucmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sucmpltEvaluator;sucmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sushrEvaluator;sushrEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sutestEvaluator;sutestEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
sxorEvaluator;sxorEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
tableEvaluator;tableEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
tabortEvaluator;tabortEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
tfinishEvaluator;tfinishEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
treetopEvaluator;treetopEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
tstartEvaluator;tstartEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
unImpOpEvaluator;unImpOpEvaluator(TR::Node *,TR::CodeGenerator *);OMR;TreeEvaluator;0;0
unsignedIntegerCmpgeEvaluator;unsignedIntegerCmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
unsignedIntegerCmpgtEvaluator;unsignedIntegerCmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
unsignedIntegerCmpleEvaluator;unsignedIntegerCmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
unsignedIntegerCmpltEvaluator;unsignedIntegerCmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
unsignedIntegerIfCmpgeEvaluator;unsignedIntegerIfCmpgeEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
unsignedIntegerIfCmpgtEvaluator;unsignedIntegerIfCmpgtEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
unsignedIntegerIfCmpleEvaluator;unsignedIntegerIfCmpleEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
unsignedIntegerIfCmpltEvaluator;unsignedIntegerIfCmpltEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
zccAddSubEvaluator;zccAddSubEvaluator(TR::Node *,TR::CodeGenerator *);OMR::X86;TreeEvaluator;0;0
CPU;CPU(class OMR::CPU &&);OMR;CPU;1;0
CPU;CPU(const class OMR::CPU &);OMR;CPU;1;0
CPU;CPU();OMR;CPU;0;0
CPU;CPU();OMR::X86;CPU;0;0
CPU;CPU();TR;CPU;0;0
CPU;CPU(const class OMR::X86::CPU &);OMR::X86;CPU;1;0
CPU;CPU(class OMR::X86::CPU &&);OMR::X86;CPU;1;0
CPU;CPU(const class TR::CPU &);TR;CPU;1;0
CPU;CPU(class TR::CPU &&);TR;CPU;1;0
endianness;endianness();OMR;CPU;0;0
getSupportsHardwareCopySign;getSupportsHardwareCopySign();OMR;CPU;0;0
getSupportsHardwareRound;getSupportsHardwareRound();OMR;CPU;0;0
getSupportsHardwareSQRT;getSupportsHardwareSQRT();OMR;CPU;0;0
getX86ProcessorFeatureFlags;getX86ProcessorFeatureFlags(TR::Compilation *);OMR::X86;CPU;0;0
getX86ProcessorFeatureFlags2;getX86ProcessorFeatureFlags2(TR::Compilation *);OMR::X86;CPU;0;0
getX86ProcessorFeatureFlags8;getX86ProcessorFeatureFlags8(TR::Compilation *);OMR::X86;CPU;0;0
getX86ProcessorSignature;getX86ProcessorSignature(TR::Compilation *);OMR::X86;CPU;0;0
getX86ProcessorVendorId;getX86ProcessorVendorId(TR::Compilation *);OMR::X86;CPU;0;0
hasFPU;hasFPU();OMR;CPU;0;0
hasPopulationCountInstruction;hasPopulationCountInstruction();OMR;CPU;0;0
id;id();OMR;CPU;0;0
initializeByHostQuery;initializeByHostQuery();OMR;CPU;0;0
is;is(enum TR_Processor);OMR;CPU;0;0
isAMD64;isAMD64();OMR;CPU;0;0
isARM;isARM();OMR;CPU;0;0
isAtLeast;isAtLeast(enum TR_Processor);OMR;CPU;0;0
isAtMost;isAtMost(enum TR_Processor);OMR;CPU;0;0
isBigEndian;isBigEndian();OMR;CPU;0;0
isEarlierThan;isEarlierThan(enum TR_Processor);OMR;CPU;0;0
isI386;isI386();OMR;CPU;0;0
isLaterThan;isLaterThan(enum TR_Processor);OMR;CPU;0;0
isLittleEndian;isLittleEndian();OMR;CPU;0;0
isNot;isNot(enum TR_Processor);OMR;CPU;0;0
isPower;isPower();OMR;CPU;0;0
isX86;isX86();OMR;CPU;0;0
isZ;isZ();OMR;CPU;0;0
majorArch;majorArch();OMR;CPU;0;0
minorArch;minorArch();OMR;CPU;0;0
operator=;operator=(class OMR::CPU &&);OMR;CPU;1;0
operator=;operator=(const class OMR::CPU &);OMR;CPU;1;0
operator=;operator=(class OMR::X86::CPU &&);OMR::X86;CPU;1;0
operator=;operator=(const class OMR::X86::CPU &);OMR::X86;CPU;1;0
operator=;operator=(class TR::CPU &&);TR;CPU;1;0
operator=;operator=(const class TR::CPU &);TR;CPU;1;0
queryX86TargetCPUID;queryX86TargetCPUID(TR::Compilation *);OMR::X86;CPU;0;0
self;self();OMR;CPU;0;0
setEndianness;setEndianness(TR::Endianness);OMR;CPU;0;0
setMajorArch;setMajorArch(TR::MajorArchitecture);OMR;CPU;0;0
setMinorArch;setMinorArch(TR::MinorArchitecture);OMR;CPU;0;0
setProcessor;setProcessor(enum TR_Processor);OMR;CPU;0;0
supportsDecimalFloatingPoint;supportsDecimalFloatingPoint();OMR;CPU;0;0
testOSForSSESupport;testOSForSSESupport(TR::Compilation *);OMR::X86;CPU;0;0
~CPU;~CPU();OMR;CPU;1;0
~CPU;~CPU();OMR::X86;CPU;1;0
~CPU;~CPU();TR;CPU;1;0
DebugEnv;DebugEnv(class OMR::DebugEnv &&);OMR;DebugEnv;1;0
DebugEnv;DebugEnv();OMR;DebugEnv;0;0
DebugEnv;DebugEnv();OMR::X86;DebugEnv;0;0
DebugEnv;DebugEnv();TR;DebugEnv;0;0
DebugEnv;DebugEnv(const class OMR::DebugEnv &);OMR;DebugEnv;1;0
DebugEnv;DebugEnv(const class OMR::X86::DebugEnv &);OMR::X86;DebugEnv;1;0
DebugEnv;DebugEnv(class OMR::X86::DebugEnv &&);OMR::X86;DebugEnv;1;0
DebugEnv;DebugEnv(class TR::DebugEnv &&);TR;DebugEnv;1;0
DebugEnv;DebugEnv(const class TR::DebugEnv &);TR;DebugEnv;1;0
breakPoint;breakPoint();OMR;DebugEnv;0;0
codeByteColumnWidth;codeByteColumnWidth();OMR;DebugEnv;0;0
extraAssertMessage;extraAssertMessage(TR::Compilation *);OMR;DebugEnv;0;0
hexAddressFieldWidthInChars;hexAddressFieldWidthInChars();OMR;DebugEnv;0;0
hexAddressWidthInChars;hexAddressWidthInChars();OMR;DebugEnv;0;0
operator=;operator=(class OMR::DebugEnv &&);OMR;DebugEnv;1;0
operator=;operator=(const class OMR::DebugEnv &);OMR;DebugEnv;1;0
operator=;operator=(const class OMR::X86::DebugEnv &);OMR::X86;DebugEnv;1;0
operator=;operator=(class OMR::X86::DebugEnv &&);OMR::X86;DebugEnv;1;0
operator=;operator=(class TR::DebugEnv &&);TR;DebugEnv;1;0
operator=;operator=(const class TR::DebugEnv &);TR;DebugEnv;1;0
pointerPrintfMaxLenInChars;pointerPrintfMaxLenInChars();OMR;DebugEnv;0;0
~DebugEnv;~DebugEnv();OMR;DebugEnv;1;0
~DebugEnv;~DebugEnv();OMR::X86;DebugEnv;1;0
~DebugEnv;~DebugEnv();TR;DebugEnv;1;0
Instruction;Instruction(class OMR::Instruction &&);OMR;Instruction;1;0
Instruction;Instruction(const class OMR::Instruction &);OMR;Instruction;1;0
Instruction;Instruction();OMR;Instruction;0;0
Instruction;Instruction(TR::CodeGenerator *,TR::class InstOpCode::Mnemonic,TR::Node *);OMR;Instruction;0;0
Instruction;Instruction(TR::CodeGenerator *,TR::class InstOpCode::Mnemonic,TR::Node *);OMR::X86;Instruction;0;0
Instruction;Instruction(TR::CodeGenerator *,TR::Instruction *,TR::class InstOpCode::Mnemonic,TR::Node *);OMR;Instruction;0;0
Instruction;Instruction(TR::CodeGenerator *,TR::Instruction *,TR::class InstOpCode::Mnemonic,TR::Node *);OMR::X86;Instruction;0;0
Instruction;Instruction(const class OMR::X86::Instruction &);OMR::X86;Instruction;1;0
Instruction;Instruction(class OMR::X86::Instruction &&);OMR::X86;Instruction;1;0
Instruction;Instruction(const class TR::Instruction &);TR;Instruction;1;0
Instruction;Instruction(enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;Instruction;0;0
Instruction;Instruction(TR::RegisterDependencyConditions *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;Instruction;0;0
Instruction;Instruction(class TR::Instruction &&);TR;Instruction;1;0
Instruction;Instruction(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;Instruction;0;0
Instruction;Instruction(TR::RegisterDependencyConditions *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;Instruction;0;0
aboutToAssignDefdRegister;aboutToAssignDefdRegister(TR::Register *,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);OMR::X86;Instruction;0;0
aboutToAssignMemRef;aboutToAssignMemRef(TR::MemoryReference *);OMR::X86;Instruction;0;0
aboutToAssignRegDeps;aboutToAssignRegDeps(enum OMR::X86::Instruction::TR_UpperHalfRefConditions,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);OMR::X86;Instruction;0;0
aboutToAssignRegister;aboutToAssignRegister(TR::Register *,enum OMR::X86::Instruction::TR_UpperHalfRefConditions,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);OMR::X86;Instruction;0;0
aboutToAssignUsedRegister;aboutToAssignUsedRegister(TR::Register *,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);OMR::X86;Instruction;0;0
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);OMR::X86;Instruction;0;1
adjustVFPStateForCall;adjustVFPStateForCall(struct TR_VFPState *,int32_t,TR::CodeGenerator *);OMR::X86;Instruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);OMR;Instruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);OMR::X86;Instruction;0;1
assumeValidInstruction;assumeValidInstruction();OMR::X86;Instruction;0;0
cg;cg();OMR;Instruction;0;0
clobberRegsForRematerialisation;clobberRegsForRematerialisation();OMR::X86;Instruction;0;0
defsRegister;defsRegister(TR::Register *);OMR;Instruction;0;1
defsRegister;defsRegister(TR::Register *);OMR::X86;Instruction;0;1
dependencyRefsRegister;dependencyRefsRegister(TR::Register *);OMR;Instruction;0;1
dependencyRefsRegister;dependencyRefsRegister(TR::Register *);OMR::X86;Instruction;0;1
description;description();OMR::X86;Instruction;0;1
enlarge;enlarge(int32_t,int32_t,_Bool);OMR::X86;Instruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);OMR;Instruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);OMR::X86;Instruction;0;1
generateBinaryEncoding;generateBinaryEncoding();OMR;Instruction;0;1
generateBinaryEncoding;generateBinaryEncoding();OMR::X86;Instruction;0;1
generateOperand;generateOperand(uint8_t *);OMR::X86;Instruction;0;1
generateRepeatedRexPrefix;generateRepeatedRexPrefix(uint8_t *);OMR::X86;Instruction;0;0
getBinaryEncoding;getBinaryEncoding();OMR;Instruction;0;0
getBinaryLength;getBinaryLength();OMR;Instruction;0;0
getBinaryLengthLowerBound;getBinaryLengthLowerBound();OMR;Instruction;0;1
getDependencyConditions;getDependencyConditions();OMR::X86;Instruction;0;0
getEstimatedBinaryLength;getEstimatedBinaryLength();OMR;Instruction;0;0
getGCMap;getGCMap();OMR;Instruction;0;0
getGCRegisterMask;getGCRegisterMask();OMR;Instruction;0;0
getIA32ImmInstruction;getIA32ImmInstruction();OMR::X86;Instruction;0;1
getIA32LabelInstruction;getIA32LabelInstruction();OMR::X86;Instruction;0;1
getIA32RegInstruction;getIA32RegInstruction();OMR::X86;Instruction;0;1
getIndex;getIndex();OMR;Instruction;0;0
getKind;getKind();OMR;Instruction;0;1
getKind;getKind();OMR::X86;Instruction;0;1
getLabelSymbol;getLabelSymbol();OMR;Instruction;0;1
getLiveLocals;getLiveLocals();OMR;Instruction;0;0
getLiveMonitors;getLiveMonitors();OMR;Instruction;0;0
getMaxPatchableInstructionLength;getMaxPatchableInstructionLength();OMR;Instruction;0;0
getMaxPatchableInstructionLength;getMaxPatchableInstructionLength();OMR::X86;Instruction;0;0
getMemoryReference;getMemoryReference();OMR::X86;Instruction;0;1
getNext;getNext();OMR;Instruction;0;0
getNode;getNode();OMR;Instruction;0;0
getNumOperandReferencedFPRegisters;getNumOperandReferencedFPRegisters();OMR::X86;Instruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();OMR::X86;Instruction;0;1
getOpCode;getOpCode();OMR;Instruction;0;0
getOpCode;getOpCode();OMR::X86;Instruction;0;0
getOpCodeValue;getOpCodeValue();OMR;Instruction;0;0
getOpCodeValue;getOpCodeValue();OMR::X86;Instruction;0;0
getPrev;getPrev();OMR;Instruction;0;0
getRegisterSaveDescription;getRegisterSaveDescription();OMR;Instruction;0;0
getSnippetForGC;getSnippetForGC();OMR;Instruction;0;1
getSourceRegister;getSourceRegister();OMR::X86;Instruction;0;1
getSourceRightRegister;getSourceRightRegister();OMR::X86;Instruction;0;1
getTargetRegister;getTargetRegister();OMR::X86;Instruction;0;1
initialize;initialize(TR::CodeGenerator *,TR::RegisterDependencyConditions *,enum TR_X86OpCodes,_Bool);OMR::X86;Instruction;0;0
isBranchOp;isBranchOp();OMR::X86;Instruction;0;1
isLabel;isLabel();OMR::X86;Instruction;0;1
isMergeableGuard;isMergeableGuard();OMR;Instruction;0;0
isPatchBarrier;isPatchBarrier();OMR;Instruction;0;1
isPatchBarrier;isPatchBarrier();OMR::X86;Instruction;0;1
isRegRegMove;isRegRegMove();OMR::X86;Instruction;0;1
isVirtualGuardNOPInstruction;isVirtualGuardNOPInstruction();OMR;Instruction;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Instruction;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Instruction;0;0
move;move(TR::Instruction *);OMR;Instruction;0;0
needsAOTRelocation;needsAOTRelocation();OMR;Instruction;0;0
needsGCMap;needsGCMap();OMR;Instruction;0;0
needsLockPrefix;needsLockPrefix();OMR::X86;Instruction;0;1
needsRepPrefix;needsRepPrefix();OMR::X86;Instruction;0;1
operandSizeRexBits;operandSizeRexBits();OMR::X86;Instruction;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Instruction;0;0
operator delete;operator delete(void *,size_t);OMR;Instruction;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Instruction;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Instruction;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Instruction;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Instruction;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Instruction;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Instruction;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Instruction;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Instruction;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Instruction;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Instruction;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Instruction;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Instruction;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Instruction;0;0
operator new;operator new(size_t,TR::Region &);OMR;Instruction;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Instruction;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Instruction;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Instruction;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Instruction;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Instruction;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Instruction;0;0
operator=;operator=(const class OMR::Instruction &);OMR;Instruction;1;0
operator=;operator=(class OMR::Instruction &&);OMR;Instruction;1;0
operator=;operator=(const class OMR::X86::Instruction &);OMR::X86;Instruction;1;0
operator=;operator=(class OMR::X86::Instruction &&);OMR::X86;Instruction;1;0
operator=;operator=(class TR::Instruction &&);TR;Instruction;1;0
operator=;operator=(const class TR::Instruction &);TR;Instruction;1;0
refsRegister;refsRegister(TR::Register *);OMR;Instruction;0;1
refsRegister;refsRegister(TR::Register *);OMR::X86;Instruction;0;1
registerRefKindApplies;registerRefKindApplies(enum OMR::X86::Instruction::TR_UpperHalfRefConditions);OMR::X86;Instruction;0;0
remove;remove();OMR;Instruction;0;0
requiresAtomicPatching;requiresAtomicPatching();OMR;Instruction;0;0
rexBits;rexBits();OMR::X86;Instruction;0;1
rexRepeatCount;rexRepeatCount();OMR::X86;Instruction;0;0
self;self();OMR;Instruction;0;0
setBinaryEncoding;setBinaryEncoding(uint8_t *);OMR;Instruction;0;0
setBinaryLength;setBinaryLength(uint8_t);OMR;Instruction;0;0
setDependencyConditions;setDependencyConditions(TR::RegisterDependencyConditions *);OMR::X86;Instruction;0;0
setEstimatedBinaryLength;setEstimatedBinaryLength(uint8_t);OMR;Instruction;0;0
setGCMap;setGCMap(class TR_GCStackMap *);OMR;Instruction;0;0
setIndex;setIndex(TIndex);OMR;Instruction;0;0
setIsUpperHalfDead;setIsUpperHalfDead(TR::Register *,_Bool,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);OMR::X86;Instruction;0;0
setLiveLocals;setLiveLocals(class TR_BitVector *);OMR;Instruction;0;0
setLiveMonitors;setLiveMonitors(class TR_BitVector *);OMR;Instruction;0;0
setNeedsAOTRelocation;setNeedsAOTRelocation(_Bool);OMR;Instruction;0;0
setNeedsGCMap;setNeedsGCMap(TCollectableReferenceMask);OMR;Instruction;0;0
setNext;setNext(TR::Instruction *);OMR;Instruction;0;0
setNode;setNode(TR::Node *);OMR;Instruction;0;0
setOpCodeValue;setOpCodeValue(TR::class InstOpCode::Mnemonic);OMR;Instruction;0;0
setOpCodeValue;setOpCodeValue(enum TR_X86OpCodes);OMR::X86;Instruction;0;0
setPrev;setPrev(TR::Instruction *);OMR;Instruction;0;0
setRegisterSaveDescription;setRegisterSaveDescription(int32_t);OMR;Instruction;0;0
setRexRepeatCount;setRexRepeatCount(uint8_t);OMR::X86;Instruction;0;0
totalReferencedFPRegisters;totalReferencedFPRegisters(TR::CodeGenerator *);OMR::X86;Instruction;0;0
totalReferencedGPRegisters;totalReferencedGPRegisters(TR::CodeGenerator *);OMR::X86;Instruction;0;0
useRegister;useRegister(TR::Register *);OMR;Instruction;0;0
usesRegister;usesRegister(TR::Register *);OMR;Instruction;0;1
usesRegister;usesRegister(TR::Register *);OMR::X86;Instruction;0;1
~Instruction;~Instruction();OMR;Instruction;1;0
~Instruction;~Instruction();OMR::X86;Instruction;1;0
~Instruction;~Instruction();TR;Instruction;1;0
Snippet;Snippet(class OMR::Snippet &&);OMR;Snippet;1;0
Snippet;Snippet(const class OMR::Snippet &);OMR;Snippet;1;0
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *);OMR;Snippet;0;0
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *);OMR::X86;Snippet;0;0
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *);TR;Snippet;0;0
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,_Bool);OMR;Snippet;0;0
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,_Bool);OMR::X86;Snippet;0;0
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,_Bool);TR;Snippet;0;0
Snippet;Snippet(const class OMR::X86::Snippet &);OMR::X86;Snippet;1;0
Snippet;Snippet(class OMR::X86::Snippet &&);OMR::X86;Snippet;1;0
cg;cg();OMR;Snippet;0;0
emitSnippet;emitSnippet();OMR;Snippet;0;1
emitSnippetBody;emitSnippetBody();OMR;Snippet;0;1
gcMap;gcMap();OMR;Snippet;0;0
getBlock;getBlock();OMR;Snippet;0;0
getKind;getKind();OMR::X86;Snippet;0;1
getLength;getLength(int32_t);OMR;Snippet;0;1
getNode;getNode();OMR;Snippet;0;0
getSnippetLabel;getSnippetLabel();OMR;Snippet;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Snippet;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Snippet;0;0
needsExceptionTableEntry;needsExceptionTableEntry();OMR;Snippet;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Snippet;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Snippet;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Snippet;0;0
operator delete;operator delete(void *,size_t);OMR;Snippet;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Snippet;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Snippet;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Snippet;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Snippet;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Snippet;0;0
operator new;operator new(size_t,TR::Region &);OMR;Snippet;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Snippet;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Snippet;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Snippet;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Snippet;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Snippet;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Snippet;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Snippet;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Snippet;0;0
operator=;operator=(class OMR::Snippet &&);OMR;Snippet;1;0
operator=;operator=(const class OMR::Snippet &);OMR;Snippet;1;0
operator=;operator=(class OMR::X86::Snippet &&);OMR::X86;Snippet;1;0
operator=;operator=(const class OMR::X86::Snippet &);OMR::X86;Snippet;1;0
operator=;operator=(class TR::Snippet &&);TR;Snippet;1;0
operator=;operator=(const class TR::Snippet &);TR;Snippet;1;0
prepareSnippetForGCSafePoint;prepareSnippetForGCSafePoint();OMR;Snippet;0;0
print;print(TR::FILE *,class TR_Debug *);OMR;Snippet;0;1
resetNeedsExceptionTableEntry;resetNeedsExceptionTableEntry();OMR;Snippet;0;0
self;self();OMR;Snippet;0;0
setBlock;setBlock(TR::Block *);OMR;Snippet;0;0
setCodeGenerator;setCodeGenerator(TR::CodeGenerator *);OMR;Snippet;0;0
setEstimatedCodeLocation;setEstimatedCodeLocation(int32_t);OMR;Snippet;0;1
setNeedsExceptionTableEntry;setNeedsExceptionTableEntry();OMR;Snippet;0;0
setNode;setNode(TR::Node *);OMR;Snippet;0;0
setSnippetLabel;setSnippetLabel(TR::LabelSymbol *);OMR;Snippet;0;0
~Snippet;~Snippet();OMR;Snippet;1;0
~Snippet;~Snippet();OMR::X86;Snippet;1;0
~Snippet;~Snippet();TR;Snippet;1;0
AliasBuilder;AliasBuilder(class OMR::AliasBuilder &&);OMR;AliasBuilder;1;0
AliasBuilder;AliasBuilder(const class OMR::AliasBuilder &);OMR;AliasBuilder;1;0
AliasBuilder;AliasBuilder(TR::SymbolReferenceTable *,size_t,TR::Compilation *);OMR;AliasBuilder;0;0
AliasBuilder;AliasBuilder(TR::SymbolReferenceTable *,size_t,TR::Compilation *);TR;AliasBuilder;0;0
AliasBuilder;AliasBuilder(const class TR::AliasBuilder &);TR;AliasBuilder;1;0
AliasBuilder;AliasBuilder(class TR::AliasBuilder &&);TR;AliasBuilder;1;0
addAddressArrayShadows;addAddressArrayShadows(class TR_BitVector *);OMR;AliasBuilder;0;0
addIntArrayShadows;addIntArrayShadows(class TR_BitVector *);OMR;AliasBuilder;0;0
addNonIntPrimitiveArrayShadows;addNonIntPrimitiveArrayShadows(class TR_BitVector *);OMR;AliasBuilder;0;0
addressShadowSymRefs;addressShadowSymRefs();OMR;AliasBuilder;0;0
addressStaticSymRefs;addressStaticSymRefs();OMR;AliasBuilder;0;0
arrayElementSymRefs;arrayElementSymRefs();OMR;AliasBuilder;0;0
arrayletElementSymRefs;arrayletElementSymRefs();OMR;AliasBuilder;0;0
catchLocalUseSymRefs;catchLocalUseSymRefs();OMR;AliasBuilder;0;0
comp;comp();OMR;AliasBuilder;0;0
conservativeGenericIntShadowAliasing;conservativeGenericIntShadowAliasing();OMR;AliasBuilder;0;0
cpConstantSymRefs;cpConstantSymRefs();OMR;AliasBuilder;0;0
cpSymRefs;cpSymRefs();OMR;AliasBuilder;0;0
createAliasInfo;createAliasInfo();OMR;AliasBuilder;0;0
defaultMethodDefAliases;defaultMethodDefAliases();OMR;AliasBuilder;0;0
defaultMethodDefAliasesWithoutImmutable;defaultMethodDefAliasesWithoutImmutable();OMR;AliasBuilder;0;0
defaultMethodDefAliasesWithoutUserField;defaultMethodDefAliasesWithoutUserField();OMR;AliasBuilder;0;0
defaultMethodUseAliases;defaultMethodUseAliases();OMR;AliasBuilder;0;0
gatherLocalUseInfo;gatherLocalUseInfo(TR::Block *,_Bool);OMR;AliasBuilder;0;0
gatherLocalUseInfo;gatherLocalUseInfo(TR::Node *,class TR_BitVector &,vcount_t,_Bool);OMR;AliasBuilder;0;0
gatherLocalUseInfo;gatherLocalUseInfo(TR::Block *,class TR_BitVector &,TR_ScratchList<TR_Pair<TR::Block, class TR_BitVector> > *,vcount_t,_Bool);OMR;AliasBuilder;0;0
gcSafePointSymRefNumbers;gcSafePointSymRefNumbers();OMR;AliasBuilder;0;0
genericIntArrayShadowSymRefs;genericIntArrayShadowSymRefs();OMR;AliasBuilder;0;0
genericIntNonArrayShadowSymRefs;genericIntNonArrayShadowSymRefs();OMR;AliasBuilder;0;0
genericIntShadowSymRefs;genericIntShadowSymRefs();OMR;AliasBuilder;0;0
getSymRefForAliasing;getSymRefForAliasing(TR::Node *,TR::Node *);OMR;AliasBuilder;0;0
getVeryRefinedCallAliasSets;getVeryRefinedCallAliasSets(TR::ResolvedMethodSymbol *);OMR;AliasBuilder;0;0
hasUseonlyAliasesOnlyDueToOSRCatchBlocks;hasUseonlyAliasesOnlyDueToOSRCatchBlocks(TR::SymbolReference *);OMR;AliasBuilder;0;0
immutableArrayElementSymRefs;immutableArrayElementSymRefs();OMR;AliasBuilder;0;0
intShadowSymRefs;intShadowSymRefs();OMR;AliasBuilder;0;0
intStaticSymRefs;intStaticSymRefs();OMR;AliasBuilder;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;AliasBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;AliasBuilder;0;0
litPoolGenericIntShadowHasBeenCreated;litPoolGenericIntShadowHasBeenCreated();OMR;AliasBuilder;0;0
methodAliases;methodAliases(TR::SymbolReference *);OMR;AliasBuilder;0;0
methodSymRefs;methodSymRefs();OMR;AliasBuilder;0;0
methodsThatMayThrow;methodsThatMayThrow();OMR;AliasBuilder;0;0
mutableGenericIntShadowHasBeenCreated;mutableGenericIntShadowHasBeenCreated();OMR;AliasBuilder;0;0
nonIntPrimitiveShadowSymRefs;nonIntPrimitiveShadowSymRefs();OMR;AliasBuilder;0;0
nonIntPrimitiveStaticSymRefs;nonIntPrimitiveStaticSymRefs();OMR;AliasBuilder;0;0
notOsrCatchLocalUseSymRefs;notOsrCatchLocalUseSymRefs();OMR;AliasBuilder;0;0
operator delete;operator delete(void *,TR::Region &);OMR;AliasBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;AliasBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;AliasBuilder;0;0
operator delete;operator delete(void *,size_t);OMR;AliasBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;AliasBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;AliasBuilder;0;0
operator new;operator new(size_t,TR::Region &);OMR;AliasBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;AliasBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;AliasBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;AliasBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;AliasBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;AliasBuilder;0;0
operator=;operator=(const class OMR::AliasBuilder &);OMR;AliasBuilder;1;0
operator=;operator=(class OMR::AliasBuilder &&);OMR;AliasBuilder;1;0
operator=;operator=(class TR::AliasBuilder &&);TR;AliasBuilder;1;0
operator=;operator=(const class TR::AliasBuilder &);TR;AliasBuilder;1;0
refinedAddressArrayShadows;refinedAddressArrayShadows();OMR;AliasBuilder;0;0
refinedIntArrayShadows;refinedIntArrayShadows();OMR;AliasBuilder;0;0
refinedNonIntPrimitiveArrayShadows;refinedNonIntPrimitiveArrayShadows();OMR;AliasBuilder;0;0
self;self();OMR;AliasBuilder;0;0
setCatchLocalUseSymRefs;setCatchLocalUseSymRefs();OMR;AliasBuilder;0;0
setConservativeGenericIntShadowAliasing;setConservativeGenericIntShadowAliasing(_Bool);OMR;AliasBuilder;0;0
setLitPoolGenericIntShadowHasBeenCreated;setLitPoolGenericIntShadowHasBeenCreated();OMR;AliasBuilder;0;0
setMutableGenericIntShadowHasBeenCreated;setMutableGenericIntShadowHasBeenCreated(_Bool);OMR;AliasBuilder;0;0
setVeryRefinedCallAliasSets;setVeryRefinedCallAliasSets(TR::ResolvedMethodSymbol *,class TR_BitVector *);OMR;AliasBuilder;0;0
symRefTab;symRefTab();OMR;AliasBuilder;0;0
trHeapMemory;trHeapMemory();OMR;AliasBuilder;0;0
trMemory;trMemory();OMR;AliasBuilder;0;0
trStackMemory;trStackMemory();OMR;AliasBuilder;0;0
unsafeArrayElementSymRefs;unsafeArrayElementSymRefs();OMR;AliasBuilder;0;0
unsafeSymRefNumbers;unsafeSymRefNumbers();OMR;AliasBuilder;0;0
updateSubSets;updateSubSets(TR::SymbolReference *);OMR;AliasBuilder;0;0
~AliasBuilder;~AliasBuilder();OMR;AliasBuilder;1;0
~AliasBuilder;~AliasBuilder();TR;AliasBuilder;1;0
ArithEnv;ArithEnv();OMR;ArithEnv;1;0
ArithEnv;ArithEnv();TR;ArithEnv;1;0
ArithEnv;ArithEnv(class OMR::ArithEnv &&);OMR;ArithEnv;1;0
ArithEnv;ArithEnv(const class OMR::ArithEnv &);OMR;ArithEnv;1;0
ArithEnv;ArithEnv(const class TR::ArithEnv &);TR;ArithEnv;1;0
ArithEnv;ArithEnv(class TR::ArithEnv &&);TR;ArithEnv;1;0
doubleAddDouble;doubleAddDouble(double,double);OMR;ArithEnv;0;0
doubleDivideDouble;doubleDivideDouble(double,double);OMR;ArithEnv;0;0
doubleMultiplyDouble;doubleMultiplyDouble(double,double);OMR;ArithEnv;0;0
doubleNegate;doubleNegate(double);OMR;ArithEnv;0;0
doubleRemainderDouble;doubleRemainderDouble(double,double);OMR;ArithEnv;0;0
doubleSubtractDouble;doubleSubtractDouble(double,double);OMR;ArithEnv;0;0
doubleToFloat;doubleToFloat(double);OMR;ArithEnv;0;0
floatAddFloat;floatAddFloat(float,float);OMR;ArithEnv;0;0
floatDivideFloat;floatDivideFloat(float,float);OMR;ArithEnv;0;0
floatMultiplyFloat;floatMultiplyFloat(float,float);OMR;ArithEnv;0;0
floatNegate;floatNegate(float);OMR;ArithEnv;0;0
floatRemainderFloat;floatRemainderFloat(float,float);OMR;ArithEnv;0;0
floatSubtractFloat;floatSubtractFloat(float,float);OMR;ArithEnv;0;0
floatToDouble;floatToDouble(float);OMR;ArithEnv;0;0
longDivideLong;longDivideLong(int64_t,int64_t);OMR;ArithEnv;0;0
longMultiplyLong;longMultiplyLong(int64_t,int64_t);OMR;ArithEnv;0;0
longRemainderLong;longRemainderLong(int64_t,int64_t);OMR;ArithEnv;0;0
operator=;operator=(class OMR::ArithEnv &&);OMR;ArithEnv;1;0
operator=;operator=(const class OMR::ArithEnv &);OMR;ArithEnv;1;0
operator=;operator=(class TR::ArithEnv &&);TR;ArithEnv;1;0
operator=;operator=(const class TR::ArithEnv &);TR;ArithEnv;1;0
self;self();OMR;ArithEnv;0;0
~ArithEnv;~ArithEnv();OMR;ArithEnv;1;0
~ArithEnv;~ArithEnv();TR;ArithEnv;1;0
BlockChecklist;BlockChecklist(class TR::BlockChecklist &&);TR;BlockChecklist;1;0
BlockChecklist;BlockChecklist(TR::Compilation *);TR;BlockChecklist;0;0
Checklist;Checklist(const class TR::Checklist &);TR;Checklist;1;0
Checklist;Checklist(TR::Compilation *);TR;Checklist;0;0
add;add(TR::Block *);TR;BlockChecklist;0;0
add;add(class TR::BlockChecklist &);TR;BlockChecklist;0;0
contains;contains(TR::Block *);TR;BlockChecklist;0;0
operator!=;operator!=(const class TR::BlockChecklist &);TR;BlockChecklist;0;0
operator=;operator=(const class TR::Checklist &);TR;Checklist;1;0
operator=;operator=(class TR::BlockChecklist &&);TR;BlockChecklist;1;0
operator==;operator==(const class TR::BlockChecklist &);TR;BlockChecklist;0;0
remove;remove(TR::Block *);TR;BlockChecklist;0;0
remove;remove(class TR::BlockChecklist &);TR;BlockChecklist;0;0
~BlockChecklist;~BlockChecklist();TR;BlockChecklist;1;0
~Checklist;~Checklist();TR;Checklist;0;0
CFG;CFG(const class OMR::CFG &);OMR;CFG;1;0
CFG;CFG(TR::Compilation *,TR::ResolvedMethodSymbol *);OMR;CFG;0;0
CFG;CFG(TR::Compilation *,TR::ResolvedMethodSymbol *);TR;CFG;0;0
CFG;CFG(class OMR::CFG &&);OMR;CFG;1;0
addEdge;addEdge(TR::CFGNode *,TR::CFGNode *,enum TR_AllocationKind);OMR;CFG;0;0
addEdge;addEdge(TR::CFGEdge *);OMR;CFG;0;0
addExceptionEdge;addExceptionEdge(TR::CFGNode *,TR::CFGNode *,enum TR_AllocationKind);OMR;CFG;0;0
addNode;addNode(TR::CFGNode *,class TR_RegionStructure *,_Bool);OMR;CFG;0;0
addStructureSubGraphNodes;addStructureSubGraphNodes(class TR_StructureSubGraphNode *);OMR;CFG;0;0
addSuccessorEdges;addSuccessorEdges(TR::Block *);OMR;CFG;0;0
allocateNodeNumber;allocateNodeNumber();OMR;CFG;0;0
clone;clone();OMR;CFG;0;0
comp;comp();OMR;CFG;0;0
compareExceptionSuccessors;compareExceptionSuccessors(TR::CFGNode *,TR::CFGNode *);OMR;CFG;0;0
computeEntryFactorsAcyclic;computeEntryFactorsAcyclic(class TR_RegionStructure *);OMR;CFG;0;0
computeEntryFactorsFrom;computeEntryFactorsFrom(class TR_Structure *,float &);OMR;CFG;0;0
computeEntryFactorsLoop;computeEntryFactorsLoop(class TR_RegionStructure *);OMR;CFG;0;0
computeInsideEdgeFactor;computeInsideEdgeFactor(TR::CFGEdge *,TR::CFGNode *);OMR;CFG;0;0
computeOutsideEdgeFactor;computeOutsideEdgeFactor(TR::CFGEdge *,TR::CFGNode *);OMR;CFG;0;0
consumePseudoRandomFrequencies;consumePseudoRandomFrequencies();OMR;CFG;0;0
copyExceptionSuccessors;copyExceptionSuccessors(TR::CFGNode *,TR::CFGNode *,_Bool (*)(TR::CFGEdge *));OMR;CFG;0;0
createArrayOfBlocks;createArrayOfBlocks(enum TR_AllocationKind);OMR;CFG;0;0
createTraversalOrder;createTraversalOrder(_Bool,enum TR_AllocationKind,class TR_BitVector *);OMR;CFG;0;0
findLastTreeTop;findLastTreeTop();OMR;CFG;0;0
findLoopingBlocks;findLoopingBlocks(class TR_BitVector &);OMR;CFG;0;0
findReachableBlocks;findReachableBlocks(class TR_BitVector *);OMR;CFG;0;0
getAvgFrequency;getAvgFrequency();OMR;CFG;0;0
getBackwardTraversalElement;getBackwardTraversalElement(int32_t);OMR;CFG;0;0
getBackwardTraversalLength;getBackwardTraversalLength();OMR;CFG;0;0
getBranchCounters;getBranchCounters(TR::Node *,TR::Block *,int32_t *,int32_t *,TR::Compilation *);OMR;CFG;0;0
getBranchCountersFromProfilingData;getBranchCountersFromProfilingData(TR::Node *,TR::Block *,int32_t *,int32_t *);OMR;CFG;0;0
getEdgeProbability;getEdgeProbability(TR::CFGEdge *);OMR;CFG;0;0
getEnd;getEnd();OMR;CFG;0;0
getFirstNode;getFirstNode();OMR;CFG;0;0
getForwardTraversalElement;getForwardTraversalElement(int32_t);OMR;CFG;0;0
getForwardTraversalLength;getForwardTraversalLength();OMR;CFG;0;0
getFrequencySet;getFrequencySet();OMR;CFG;0;0
getHasUnreachableBlocks;getHasUnreachableBlocks();OMR;CFG;0;0
getIgnoreUnreachableBlocks;getIgnoreUnreachableBlocks();OMR;CFG;0;0
getInitialBlockFrequency;getInitialBlockFrequency();OMR;CFG;0;0
getLowFrequency;getLowFrequency();OMR;CFG;0;0
getMaxEdgeFrequency;getMaxEdgeFrequency();OMR;CFG;0;0
getMaxFrequency;getMaxFrequency();OMR;CFG;0;0
getMethodSymbol;getMethodSymbol();OMR;CFG;0;0
getMightHaveUnreachableBlocks;getMightHaveUnreachableBlocks();OMR;CFG;0;0
getNextNodeNumber;getNextNodeNumber();OMR;CFG;0;0
getNodes;getNodes();OMR;CFG;0;0
getNumberOfNodes;getNumberOfNodes();OMR;CFG;0;0
getOldMaxEdgeFrequency;getOldMaxEdgeFrequency();OMR;CFG;0;0
getStart;getStart();OMR;CFG;0;0
getStructure;getStructure();OMR;CFG;0;0
hasBranchProfilingData;hasBranchProfilingData();OMR;CFG;0;0
insertBefore;insertBefore(TR::Block *,TR::Block *);OMR;CFG;0;0
invalidateStructure;invalidateStructure();OMR;CFG;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;CFG;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;CFG;0;0
join;join(TR::Block *,TR::Block *);OMR;CFG;0;0
normalizeEdgeFrequencies;normalizeEdgeFrequencies(TR_Array<TR::CFGEdge *> *);OMR;CFG;0;0
normalizeFrequencies;normalizeFrequencies(class TR_BitVector *);OMR;CFG;0;0
normalizeNodeFrequencies;normalizeNodeFrequencies(class TR_BitVector *,TR_Array<TR::CFGEdge *> *);OMR;CFG;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;CFG;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;CFG;0;0
operator delete;operator delete(void *,size_t);OMR;CFG;0;0
operator delete;operator delete(void *,TR::Region &);OMR;CFG;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;CFG;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;CFG;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;CFG;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;CFG;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;CFG;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;CFG;0;0
operator new;operator new(size_t,TR::Region &);OMR;CFG;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;CFG;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;CFG;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;CFG;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;CFG;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;CFG;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;CFG;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;CFG;0;0
operator=;operator=(const class OMR::CFG &);OMR;CFG;1;0
operator=;operator=(class OMR::CFG &&);OMR;CFG;1;0
operator=;operator=(class TR::CFG &&);TR;CFG;1;0
processAcyclicRegion;processAcyclicRegion(class TR_RegionStructure *);OMR;CFG;0;0
processNaturalLoop;processNaturalLoop(class TR_RegionStructure *);OMR;CFG;0;0
propagateColdInfo;propagateColdInfo(_Bool);OMR;CFG;0;0
propagateEntryFactorsFrom;propagateEntryFactorsFrom(class TR_Structure *,float);OMR;CFG;0;0
propagateFrequencyInfoFrom;propagateFrequencyInfoFrom(class TR_Structure *);OMR;CFG;0;0
removeBlock;removeBlock(TR::Block *);OMR;CFG;0;0
removeEdge;removeEdge(TR::CFGEdge *,_Bool);OMR;CFG;0;0
removeEdge;removeEdge(TR::CFGEdge *);OMR;CFG;0;0
removeEdge;removeEdge(TR::CFGNode *,TR::CFGNode *);OMR;CFG;0;0
removeEdge;removeEdge(TR::CFGEdgeList &,int32_t,int32_t);OMR;CFG;0;0
removeNode;removeNode(TR::CFGNode *);OMR;CFG;0;0
removeStructureSubGraphNodes;removeStructureSubGraphNodes(class TR_StructureSubGraphNode *);OMR;CFG;0;0
removeUnreachableBlocks;removeUnreachableBlocks();OMR;CFG;0;0
resetFrequencies;resetFrequencies();OMR;CFG;0;0
resetVisitCounts;resetVisitCounts(vcount_t);OMR;CFG;0;0
scaleEdgeFrequencies;scaleEdgeFrequencies();OMR;CFG;0;0
self;self();OMR;CFG;0;0
setBlockAndEdgeFrequenciesBasedOnStructure;setBlockAndEdgeFrequenciesBasedOnStructure();OMR;CFG;0;0
setEdgeFrequenciesFrom;setEdgeFrequenciesFrom();OMR;CFG;0;0
setEdgeFrequenciesOnNode;setEdgeFrequenciesOnNode(TR::CFGNode *,int32_t,int32_t,TR::Compilation *);OMR;CFG;0;0
setEdgeProbability;setEdgeProbability(TR::CFGEdge *,double);OMR;CFG;0;0
setEnd;setEnd(TR::CFGNode *);OMR;CFG;0;0
setFrequencies;setFrequencies();OMR;CFG;0;0
setHasUnreachableBlocks;setHasUnreachableBlocks();OMR;CFG;0;0
setIgnoreUnreachableBlocks;setIgnoreUnreachableBlocks(_Bool);OMR;CFG;0;0
setMaxEdgeFrequency;setMaxEdgeFrequency(int32_t);OMR;CFG;0;0
setMaxFrequency;setMaxFrequency(int32_t);OMR;CFG;0;0
setNextNodeNumber;setNextNodeNumber(int32_t);OMR;CFG;0;0
setStart;setStart(TR::CFGNode *);OMR;CFG;0;0
setStartAndEnd;setStartAndEnd(TR::CFGNode *,TR::CFGNode *);OMR;CFG;0;0
setStructure;setStructure(class TR_Structure *);OMR;CFG;0;0
setUniformEdgeFrequenciesOnNode;setUniformEdgeFrequenciesOnNode(TR::CFGNode *,int32_t,_Bool,TR::Compilation *);OMR;CFG;0;0
structureRegion;structureRegion();OMR;CFG;0;0
trHeapMemory;trHeapMemory();OMR;CFG;0;0
trMemory;trMemory();OMR;CFG;0;0
trStackMemory;trStackMemory();OMR;CFG;0;0
updateBlockFrequency;updateBlockFrequency(TR::Block *,int32_t);OMR;CFG;0;0
updateBlockFrequencyFromEdges;updateBlockFrequencyFromEdges(TR::Block *);OMR;CFG;0;0
walkStructure;walkStructure(class TR_RegionStructure *);OMR;CFG;0;0
~CFG;~CFG();OMR;CFG;1;0
CFGEdge;CFGEdge(class TR::CFGNode *,class TR::CFGNode *);TR;CFGEdge;0;0
CFGEdge;CFGEdge();TR;CFGEdge;0;0
TR_Link0<T>;TR_Link0<T>(T *);;TR_Link0;0;0
TR_Link<T>;TR_Link<T>(T *);;TR_Link;0;0
createEdge;createEdge(class TR::CFGNode *,class TR::CFGNode *,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
createEdge;createEdge(class TR::CFGNode *,class TR::CFGNode *,TR::Region &);TR;CFGEdge;0;0
createExceptionEdge;createExceptionEdge(class TR::CFGNode *,class TR::CFGNode *,TR::Region &);TR;CFGEdge;0;0
createExceptionEdge;createExceptionEdge(class TR::CFGNode *,class TR::CFGNode *,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
getCreatedByTailRecursionElimination;getCreatedByTailRecursionElimination();TR;CFGEdge;0;0
getFrequency;getFrequency();TR;CFGEdge;0;0
getFrom;getFrom();TR;CFGEdge;0;0
getId;getId();TR;CFGEdge;0;0
getNext;getNext();;TR_Link0;0;0
getTo;getTo();TR;CFGEdge;0;0
getVisitCount;getVisitCount();TR;CFGEdge;0;0
incVisitCount;incVisitCount();TR;CFGEdge;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_Link;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TR;CFGEdge;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_Link;0;0
jitPersistentFree;jitPersistentFree(void *);TR;CFGEdge;0;0
mustRestoreVMThreadRegister;mustRestoreVMThreadRegister();TR;CFGEdge;0;0
normalizeFrequency;normalizeFrequency(int32_t);TR;CFGEdge;0;0
operator delete;operator delete(void *,size_t);;TR_Link;0;0
operator delete;operator delete(void *,size_t);TR;CFGEdge;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Link;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_Link;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Link;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
operator delete;operator delete(void *,TR::Region &);;TR_Link;0;0
operator delete;operator delete(void *,TR::Region &);TR;CFGEdge;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_Link;0;0
operator delete[];operator delete[](void *,TR::Region &);TR;CFGEdge;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Link;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Link;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_Link;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_Link;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TR;CFGEdge;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_Link;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TR;CFGEdge;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Link;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
operator new;operator new(size_t,TR::Region &);;TR_Link;0;0
operator new;operator new(size_t,TR::Region &);TR;CFGEdge;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_Link;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TR;CFGEdge;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Link;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Link;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_Link;0;0
operator new[];operator new[](size_t,TR::Region &);TR;CFGEdge;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_Link;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TR;CFGEdge;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Link;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_Link;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TR;CFGEdge;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Link;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Link;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
setCreatedByTailRecursionElimination;setCreatedByTailRecursionElimination(_Bool);TR;CFGEdge;0;0
setExceptionFrom;setExceptionFrom(class TR::CFGNode *);TR;CFGEdge;0;0
setExceptionFromTo;setExceptionFromTo(class TR::CFGNode *,class TR::CFGNode *);TR;CFGEdge;0;0
setExceptionTo;setExceptionTo(class TR::CFGNode *);TR;CFGEdge;0;0
setFrequency;setFrequency(int32_t);TR;CFGEdge;0;0
setFrom;setFrom(class TR::CFGNode *);TR;CFGEdge;0;0
setFromTo;setFromTo(class TR::CFGNode *,class TR::CFGNode *);TR;CFGEdge;0;0
setId;setId(int32_t);TR;CFGEdge;0;0
setMustRestoreVMThreadRegister;setMustRestoreVMThreadRegister(_Bool);TR;CFGEdge;0;0
setNext;setNext(T *);;TR_Link0;0;0
setTo;setTo(class TR::CFGNode *);TR;CFGEdge;0;0
setVisitCount;setVisitCount(vcount_t);TR;CFGEdge;0;0
ClassEnv;ClassEnv(const class OMR::ClassEnv &);OMR;ClassEnv;1;0
ClassEnv;ClassEnv();OMR;ClassEnv;1;0
ClassEnv;ClassEnv();TR;ClassEnv;1;0
ClassEnv;ClassEnv(class OMR::ClassEnv &&);OMR;ClassEnv;1;0
ClassEnv;ClassEnv(const class TR::ClassEnv &);TR;ClassEnv;1;0
ClassEnv;ClassEnv(class TR::ClassEnv &&);TR;ClassEnv;1;0
classDepthOf;classDepthOf(class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
classFromJavaLangClass;classFromJavaLangClass(TR::Compilation *,uintptrj_t);OMR;ClassEnv;0;0
classNameChars;classNameChars(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t &);OMR;ClassEnv;0;0
classNameChars;classNameChars(TR::Compilation *,TR::SymbolReference *,int32_t &);OMR;ClassEnv;0;0
classObjectsMayBeCollected;classObjectsMayBeCollected();OMR;ClassEnv;0;0
classOfObject;classOfObject(TR::Compilation *,uintptrj_t);OMR;ClassEnv;0;0
classOfObject;classOfObject(struct OMR_VMThread *,uintptrj_t);OMR;ClassEnv;0;0
classSignature;classSignature(TR::Compilation *,class TR_OpaqueClassBlock *,class TR_Memory *);OMR;ClassEnv;0;0
classSignature_DEPRECATED;classSignature_DEPRECATED(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t &,class TR_Memory *);OMR;ClassEnv;0;0
classesOnHeap;classesOnHeap();OMR;ClassEnv;0;0
flagValueForArrayCheck;flagValueForArrayCheck(TR::Compilation *);OMR;ClassEnv;0;0
flagValueForFinalizerCheck;flagValueForFinalizerCheck(TR::Compilation *);OMR;ClassEnv;0;0
flagValueForPrimitiveTypeCheck;flagValueForPrimitiveTypeCheck(TR::Compilation *);OMR;ClassEnv;0;0
getArrayElementWidthInBytes;getArrayElementWidthInBytes(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
getStringCharacter;getStringCharacter(TR::Compilation *,uintptrj_t,int32_t);OMR;ClassEnv;0;0
getStringFieldByName;getStringFieldByName(TR::Compilation *,TR::SymbolReference *,TR::SymbolReference *,void *&);OMR;ClassEnv;0;0
hasFinalFieldsInClass;hasFinalFieldsInClass(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
hasFinalizer;hasFinalizer(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isAbstractClass;isAbstractClass(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isAnonymousClass;isAnonymousClass(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isClassArray;isClassArray(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isClassFinal;isClassFinal(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isClassInitialized;isClassInitialized(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isInterfaceClass;isInterfaceClass(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isPrimitiveArray;isPrimitiveArray(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isPrimitiveClass;isPrimitiveClass(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isReferenceArray;isReferenceArray(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isString;isString(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
isString;isString(TR::Compilation *,uintptrj_t);OMR;ClassEnv;0;0
isStringClass;isStringClass(uintptrj_t);OMR;ClassEnv;0;0
isStringClass;isStringClass(class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
jitFieldsAreSame;jitFieldsAreSame(TR::Compilation *,class TR_ResolvedMethod *,int32_t,class TR_ResolvedMethod *,int32_t,int32_t);OMR;ClassEnv;0;0
jitStaticsAreSame;jitStaticsAreSame(TR::Compilation *,class TR_ResolvedMethod *,int32_t,class TR_ResolvedMethod *,int32_t);OMR;ClassEnv;0;0
objectClass;objectClass(TR::Compilation *,uintptrj_t);OMR;ClassEnv;0;0
operator=;operator=(class OMR::ClassEnv &&);OMR;ClassEnv;1;0
operator=;operator=(const class OMR::ClassEnv &);OMR;ClassEnv;1;0
operator=;operator=(class TR::ClassEnv &&);TR;ClassEnv;1;0
operator=;operator=(const class TR::ClassEnv &);TR;ClassEnv;1;0
persistentClassPointerFromClassPointer;persistentClassPointerFromClassPointer(TR::Compilation *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
sameClassLoaders;sameClassLoaders(TR::Compilation *,class TR_OpaqueClassBlock *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
vTableSlot;vTableSlot(TR::Compilation *,class TR_OpaqueMethodBlock *,class TR_OpaqueClassBlock *);OMR;ClassEnv;0;0
~ClassEnv;~ClassEnv();OMR;ClassEnv;1;0
~ClassEnv;~ClassEnv();TR;ClassEnv;1;0
CodeGenPhase;CodeGenPhase(class OMR::CodeGenPhase &&);OMR;CodeGenPhase;1;0
CodeGenPhase;CodeGenPhase(const class OMR::CodeGenPhase &);OMR;CodeGenPhase;1;0
CodeGenPhase;CodeGenPhase(TR::CodeGenerator *);OMR;CodeGenPhase;0;0
CodeGenPhase;CodeGenPhase(TR::CodeGenerator *);TR;CodeGenPhase;0;0
CodeGenPhase;CodeGenPhase(class TR::CodeGenPhase &&);TR;CodeGenPhase;1;0
CodeGenPhase;CodeGenPhase(const class TR::CodeGenPhase &);TR;CodeGenPhase;1;0
getListSize;getListSize();OMR;CodeGenPhase;0;0
getName;getName();OMR;CodeGenPhase;0;0
getName;getName(enum OMR::CodeGenPhase::PhaseValue);OMR;CodeGenPhase;0;0
getNumPhases;getNumPhases();OMR;CodeGenPhase;0;0
operator int;operator int();OMR;CodeGenPhase;0;0
operator=;operator=(const class OMR::CodeGenPhase &);OMR;CodeGenPhase;1;0
operator=;operator=(class OMR::CodeGenPhase &&);OMR;CodeGenPhase;1;0
operator=;operator=(class TR::CodeGenPhase &&);TR;CodeGenPhase;1;0
operator=;operator=(const class TR::CodeGenPhase &);TR;CodeGenPhase;1;0
performAll;performAll();OMR;CodeGenPhase;0;0
performBinaryEncodingPhase;performBinaryEncodingPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performCleanUpFlagsPhase;performCleanUpFlagsPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performCreateStackAtlasPhase;performCreateStackAtlasPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performEmitSnippetsPhase;performEmitSnippetsPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performFindAndFixCommonedReferencesPhase;performFindAndFixCommonedReferencesPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performInliningReportPhase;performInliningReportPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performInsertDebugCountersPhase;performInsertDebugCountersPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performInstructionSelectionPhase;performInstructionSelectionPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performLowerTreesPhase;performLowerTreesPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performMapStackPhase;performMapStackPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performPeepholePhase;performPeepholePhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performProcessRelocationsPhase;performProcessRelocationsPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performRegisterAssigningPhase;performRegisterAssigningPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performRemoveUnusedLocalsPhase;performRemoveUnusedLocalsPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performReserveCodeCachePhase;performReserveCodeCachePhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performSetupForInstructionSelectionPhase;performSetupForInstructionSelectionPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performShrinkWrappingPhase;performShrinkWrappingPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
performUncommonCallConstNodesPhase;performUncommonCallConstNodesPhase(TR::CodeGenerator *,TR::CodeGenPhase *);OMR;CodeGenPhase;0;0
reportPhase;reportPhase(enum OMR::CodeGenPhase::PhaseValue);OMR;CodeGenPhase;0;0
self;self();OMR;CodeGenPhase;0;0
~CodeGenPhase;~CodeGenPhase();OMR;CodeGenPhase;1;0
~CodeGenPhase;~CodeGenPhase();TR;CodeGenPhase;1;0
AddArtificiallyInflatedNodeToStack;AddArtificiallyInflatedNodeToStack(TR::Node *);OMR;CodeGenerator;0;0
CodeGenerator;CodeGenerator(const class OMR::CodeGenerator &);OMR;CodeGenerator;1;0
CodeGenerator;CodeGenerator(class OMR::CodeGenerator &&);OMR;CodeGenerator;1;0
CodeGenerator;CodeGenerator();OMR;CodeGenerator;0;0
CodeGenerator;CodeGenerator();OMR::X86;CodeGenerator;0;0
CodeGenerator;CodeGenerator();OMR::X86::AMD64;CodeGenerator;0;0
CodeGenerator;CodeGenerator();TestCompiler;CodeGenerator;0;0
CodeGenerator;CodeGenerator();TR;CodeGenerator;0;0
CodeGenerator;CodeGenerator(const class OMR::X86::CodeGenerator &);OMR::X86;CodeGenerator;1;0
CodeGenerator;CodeGenerator(class OMR::X86::CodeGenerator &&);OMR::X86;CodeGenerator;1;0
CodeGenerator;CodeGenerator(const class OMR::X86::AMD64::CodeGenerator &);OMR::X86::AMD64;CodeGenerator;1;0
CodeGenerator;CodeGenerator(class OMR::X86::AMD64::CodeGenerator &&);OMR::X86::AMD64;CodeGenerator;1;0
CodeGenerator;CodeGenerator(class TestCompiler::CodeGenerator &&);TestCompiler;CodeGenerator;1;0
CodeGenerator;CodeGenerator(const class TestCompiler::CodeGenerator &);TestCompiler;CodeGenerator;1;0
IntJ;IntJ();OMR;CodeGenerator;0;0
IsInMemoryType;IsInMemoryType(TR::DataType);OMR;CodeGenerator;0;0
addAOTRelocation;addAOTRelocation(TR::Relocation *,TR::RelocationDebugInfo *);OMR;CodeGenerator;0;0
addAOTRelocation;addAOTRelocation(TR::Relocation *,const char *,uintptr_t,TR::Node *);OMR;CodeGenerator;0;0
addAccumulatedInstructionLengthError;addAccumulatedInstructionLengthError(int32_t);OMR;CodeGenerator;0;0
addAllocatedRegister;addAllocatedRegister(TR::Register *);OMR;CodeGenerator;0;0
addAllocatedRegisterPair;addAllocatedRegisterPair(TR::RegisterPair *);OMR;CodeGenerator;0;0
addBreakPointAddress;addBreakPointAddress(uint8_t *);OMR;CodeGenerator;0;0
addClobberingInstruction;addClobberingInstruction(TR::ClobberingInstruction *);OMR::X86;CodeGenerator;0;0
addCountersToEdges;addCountersToEdges(TR::Block *);OMR;CodeGenerator;0;0
addDependentDiscardableRegister;addDependentDiscardableRegister(TR::Register *);OMR::X86;CodeGenerator;0;0
addLiveDiscardableRegister;addLiveDiscardableRegister(TR::Register *);OMR::X86;CodeGenerator;0;0
addMetaDataForBranchTableAddress;addMetaDataForBranchTableAddress(uint8_t *,TR::Node *,TR::X86MemTableInstruction *);OMR::X86;CodeGenerator;0;0
addMonClass;addMonClass(TR::Node *,class TR_OpaqueClassBlock *);OMR;CodeGenerator;0;0
addProjectSpecializedPairRelocation;addProjectSpecializedPairRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *);OMR;CodeGenerator;0;0
addProjectSpecializedRelocation;addProjectSpecializedRelocation(TR::Instruction *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *);OMR;CodeGenerator;0;0
addProjectSpecializedRelocation;addProjectSpecializedRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *);OMR;CodeGenerator;0;0
addRelocation;addRelocation(TR::Relocation *);OMR;CodeGenerator;0;0
addSnippet;addSnippet(TR::Snippet *);OMR;CodeGenerator;0;0
addStaticRelocation;addStaticRelocation(const TR::StaticRelocation &);OMR;CodeGenerator;0;0
addSupportedLiveRegisterKind;addSupportedLiveRegisterKind(enum TR_RegisterKinds);OMR;CodeGenerator;0;0
addSymbolAndDataTypeToMap;addSymbolAndDataTypeToMap(TR::Symbol *,TR::DataType);OMR;CodeGenerator;0;0
addToAtlas;addToAtlas(TR::Instruction *);OMR;CodeGenerator;0;0
addToOSRTable;addToOSRTable(int32_t,TR_ByteCodeInfo &);OMR;CodeGenerator;0;0
addToOSRTable;addToOSRTable(TR::Instruction *);OMR;CodeGenerator;0;0
addToUnlatchedRegisterList;addToUnlatchedRegisterList(TR::RealRegister *);OMR;CodeGenerator;0;0
additionsMatch;additionsMatch(TR::Node *,TR::Node *,_Bool);OMR;CodeGenerator;0;0
addressesMatch;addressesMatch(TR::Node *,TR::Node *,_Bool);OMR;CodeGenerator;0;0
afterRA;afterRA();OMR;CodeGenerator;0;0
alignBinaryBufferCursor;alignBinaryBufferCursor();OMR;CodeGenerator;0;0
alignment;alignment(void *,intptrj_t,intptrj_t);OMR::X86;CodeGenerator;0;0
alignment;alignment(intptrj_t,intptrj_t,intptrj_t);OMR::X86;CodeGenerator;0;0
allocate64bitRegister;allocate64bitRegister();OMR;CodeGenerator;0;0
allocate64bitRegisterPair;allocate64bitRegisterPair(TR::Register *,TR::Register *);OMR;CodeGenerator;0;0
allocateCodeMemory;allocateCodeMemory(uint32_t,uint32_t,uint8_t **,_Bool);OMR;CodeGenerator;0;0
allocateCodeMemory;allocateCodeMemory(uint32_t,_Bool,_Bool);OMR;CodeGenerator;0;0
allocateCollectedReferenceRegister;allocateCollectedReferenceRegister();OMR;CodeGenerator;0;0
allocateFloatingPointRegisterPair;allocateFloatingPointRegisterPair(TR::Register *,TR::Register *);OMR;CodeGenerator;0;0
allocateInternalPointerSpill;allocateInternalPointerSpill(TR::AutomaticSymbol *);OMR;CodeGenerator;0;0
allocateLocalTemp;allocateLocalTemp(TR::DataType,_Bool);OMR;CodeGenerator;0;0
allocateRecompilationInfo;allocateRecompilationInfo();OMR;CodeGenerator;0;0
allocateRegister;allocateRegister(enum TR_RegisterKinds);OMR;CodeGenerator;0;0
allocateRegisterPair;allocateRegisterPair(TR::Register *,TR::Register *);OMR;CodeGenerator;0;0
allocateSinglePrecisionRegister;allocateSinglePrecisionRegister(enum TR_RegisterKinds);OMR;CodeGenerator;0;0
allocateSinglePrecisionRegisterPair;allocateSinglePrecisionRegisterPair(TR::Register *,TR::Register *);OMR;CodeGenerator;0;0
allocateSpill;allocateSpill(_Bool,int32_t *,_Bool);OMR;CodeGenerator;0;0
allocateSpill;allocateSpill(int32_t,_Bool,int32_t *,_Bool);OMR;CodeGenerator;0;0
allocateVMThreadSpill;allocateVMThreadSpill();OMR;CodeGenerator;0;0
allowGlobalRegisterAcrossBranch;allowGlobalRegisterAcrossBranch(class TR_RegisterCandidate *,TR::Node *);OMR;CodeGenerator;0;0
allowGlobalRegisterAcrossBranch;allowGlobalRegisterAcrossBranch(class TR_RegisterCandidate *,TR::Node *);OMR::X86;CodeGenerator;0;0
allowGuardMerging;allowGuardMerging();OMR::X86;CodeGenerator;0;0
allowSplitWarmAndColdBlocks;allowSplitWarmAndColdBlocks();OMR;CodeGenerator;0;0
allowVMThreadRematerialization;allowVMThreadRematerialization();OMR::X86;CodeGenerator;0;1
alwaysUseTrampolines;alwaysUseTrampolines();OMR;CodeGenerator;0;0
apply12BitLabelRelativeRelocation;apply12BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,_Bool);OMR;CodeGenerator;0;0
apply16BitLabelRelativeRelocation;apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,int8_t,_Bool);OMR;CodeGenerator;0;0
apply16BitLabelRelativeRelocation;apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);OMR;CodeGenerator;0;0
apply16BitLoadLabelRelativeRelocation;apply16BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);OMR;CodeGenerator;0;0
apply24BitLabelRelativeRelocation;apply24BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);OMR;CodeGenerator;0;0
apply32BitLabelRelativeRelocation;apply32BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);OMR;CodeGenerator;0;0
apply32BitLabelRelativeRelocation;apply32BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);OMR::X86;CodeGenerator;0;0
apply32BitLabelTableRelocation;apply32BitLabelTableRelocation(int32_t *,TR::LabelSymbol *);OMR;CodeGenerator;0;0
apply32BitLoadLabelRelativeRelocation;apply32BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);OMR;CodeGenerator;0;0
apply32BitLoadLabelRelativeRelocation;apply32BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);OMR::X86;CodeGenerator;0;0
apply64BitLoadLabelRelativeRelocation;apply64BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *);OMR;CodeGenerator;0;0
apply8BitLabelRelativeRelocation;apply8BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);OMR;CodeGenerator;0;0
areAssignableGPRsScarce;areAssignableGPRsScarce();OMR;CodeGenerator;0;0
areMergeableGuards;areMergeableGuards(TR::Instruction *,TR::Instruction *);OMR;CodeGenerator;0;0
arithmeticNeedsLiteralFromPool;arithmeticNeedsLiteralFromPool(TR::Node *);OMR;CodeGenerator;0;0
arrayInitMinimumNumberOfBytes;arrayInitMinimumNumberOfBytes();OMR;CodeGenerator;0;0
arrayInitMinimumNumberOfBytes;arrayInitMinimumNumberOfBytes();OMR::X86;CodeGenerator;0;0
arrayTranslateAndTestMinimumNumberOfIterations;arrayTranslateAndTestMinimumNumberOfIterations();OMR;CodeGenerator;0;0
arrayTranslateAndTestMinimumNumberOfIterations;arrayTranslateAndTestMinimumNumberOfIterations();OMR::X86;CodeGenerator;0;0
arrayTranslateMinimumNumberOfElements;arrayTranslateMinimumNumberOfElements(_Bool,_Bool);OMR;CodeGenerator;0;0
arrayTranslateMinimumNumberOfElements;arrayTranslateMinimumNumberOfElements(_Bool,_Bool);OMR::X86;CodeGenerator;0;0
arrayTranslateTableRequiresAlignment;arrayTranslateTableRequiresAlignment(_Bool,_Bool);OMR;CodeGenerator;0;0
beginInstructionSelection;beginInstructionSelection();OMR;CodeGenerator;0;0
beginInstructionSelection;beginInstructionSelection();OMR::X86;CodeGenerator;0;0
bitwiseOpNeedsLiteralFromPool;bitwiseOpNeedsLiteralFromPool(TR::Node *,TR::Node *);OMR;CodeGenerator;0;0
bndsChkNeedsLiteralFromPool;bndsChkNeedsLiteralFromPool(TR::Node *);OMR;CodeGenerator;0;0
branchDisplacementToHelperOrTrampoline;branchDisplacementToHelperOrTrampoline(uint8_t *,TR::SymbolReference *);OMR::X86;CodeGenerator;0;0
branchesAreExpensive;branchesAreExpensive();OMR;CodeGenerator;0;0
buildGCMapForInstruction;buildGCMapForInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
buildGCMapsForInstructionAndSnippet;buildGCMapsForInstructionAndSnippet(TR::Instruction *);OMR;CodeGenerator;0;0
buildInterpreterEntryPoint;buildInterpreterEntryPoint();OMR;CodeGenerator;0;0
buildRegisterMapForInstruction;buildRegisterMapForInstruction(class TR_GCStackMap *);OMR;CodeGenerator;0;0
buildRegisterMapForInstruction;buildRegisterMapForInstruction(class TR_GCStackMap *);OMR::X86;CodeGenerator;0;0
calculateRegisterPressure;calculateRegisterPressure();OMR;CodeGenerator;0;1
canBeAffectedByStoreTagStalls;canBeAffectedByStoreTagStalls();OMR;CodeGenerator;0;0
canClobberNodesRegister;canClobberNodesRegister(TR::Node *,uint16_t,class TR_ClobberEvalData *,_Bool);OMR;CodeGenerator;0;0
canFoldLargeOffsetInAddressing;canFoldLargeOffsetInAddressing();OMR;CodeGenerator;0;0
canFoldLargeOffsetInAddressing;canFoldLargeOffsetInAddressing();OMR::X86;CodeGenerator;0;0
canNullChkBeImplicit;canNullChkBeImplicit(TR::Node *,_Bool);OMR;CodeGenerator;0;0
canNullChkBeImplicit;canNullChkBeImplicit(TR::Node *);OMR;CodeGenerator;0;0
canNullChkBeImplicit;canNullChkBeImplicit(TR::Node *);OMR::X86;CodeGenerator;0;0
canTransformUnsafeCopyToArrayCopy;canTransformUnsafeCopyToArrayCopy();OMR;CodeGenerator;0;0
canTransformUnsafeCopyToArrayCopy;canTransformUnsafeCopyToArrayCopy();OMR::X86;CodeGenerator;0;0
canTransformUnsafeSetMemory;canTransformUnsafeSetMemory();OMR;CodeGenerator;0;0
canUseImmedInstruction;canUseImmedInstruction(int64_t);OMR;CodeGenerator;0;0
checkForLiveRegisters;checkForLiveRegisters(class TR_LiveRegisters *);OMR;CodeGenerator;0;0
cleanupFlags;cleanupFlags(TR::Node *);OMR;CodeGenerator;0;0
clearRegisterAssignmentFlags;clearRegisterAssignmentFlags();OMR;CodeGenerator;0;0
clobberLiveDependentDiscardableRegisters;clobberLiveDependentDiscardableRegisters(TR::ClobberingInstruction *,TR::Register *);OMR::X86;CodeGenerator;0;0
clobberLiveDiscardableRegisters;clobberLiveDiscardableRegisters(TR::Instruction *,TR::MemoryReference *);OMR::X86;CodeGenerator;0;0
codegenMulDecomposition;codegenMulDecomposition(int64_t);OMR;CodeGenerator;0;0
codegenSupportsLoadlessBNDCheck;codegenSupportsLoadlessBNDCheck();OMR;CodeGenerator;0;0
codegenSupportsUnsignedIntegerDivide;codegenSupportsUnsignedIntegerDivide();OMR;CodeGenerator;0;0
codegenSupportsUnsignedIntegerDivide;codegenSupportsUnsignedIntegerDivide();OMR::X86;CodeGenerator;0;0
commitToCodeCache;commitToCodeCache();OMR;CodeGenerator;0;0
committedToCodeCache;committedToCodeCache();OMR;CodeGenerator;0;0
comp;comp();OMR;CodeGenerator;0;0
compute32BitMagicValues;compute32BitMagicValues(int32_t,int32_t *,int32_t *);OMR;CodeGenerator;0;0
compute64BitMagicValues;compute64BitMagicValues(int64_t,int64_t *,int64_t *);OMR;CodeGenerator;0;0
computeBlocksWithCalls;computeBlocksWithCalls();OMR;CodeGenerator;0;0
computeRegisterSaveDescription;computeRegisterSaveDescription(class TR_BitVector *,_Bool);OMR;CodeGenerator;0;0
computeRegisterSaveDescription;computeRegisterSaveDescription(class TR_BitVector *,_Bool);OMR::X86;CodeGenerator;0;0
computeSimulatedSpilledRegs;computeSimulatedSpilledRegs(class TR_BitVector *,int32_t,TR::SymbolReference *);OMR;CodeGenerator;0;0
computeSpilledRegsForAllPresentLinkages;computeSpilledRegsForAllPresentLinkages(class TR_BitVector *,struct OMR::CodeGenerator::TR_RegisterPressureSummary &);OMR;CodeGenerator;0;0
computeUnsigned64BitMagicValues;computeUnsigned64BitMagicValues(uint64_t,int32_t *,int32_t *);OMR;CodeGenerator;0;0
computesCarry;computesCarry();OMR;CodeGenerator;0;0
considerAllAutosAsTacticalGlobalRegisterCandidates;considerAllAutosAsTacticalGlobalRegisterCandidates();OMR;CodeGenerator;0;0
considerTypeForGRA;considerTypeForGRA(TR::SymbolReference *);OMR;CodeGenerator;0;0
considerTypeForGRA;considerTypeForGRA(TR::DataType);OMR;CodeGenerator;0;0
considerTypeForGRA;considerTypeForGRA(TR::Node *);OMR;CodeGenerator;0;0
constLoadNeedsLiteralFromPool;constLoadNeedsLiteralFromPool(TR::Node *);OMR;CodeGenerator;0;0
constantAddressesCanChangeSize;constantAddressesCanChangeSize(TR::Node *);OMR;CodeGenerator;0;0
convertMultiplyToShift;convertMultiplyToShift(TR::Node *);OMR;CodeGenerator;0;0
create16ByteData;create16ByteData(TR::Node *,void *);OMR::X86;CodeGenerator;0;0
create2ByteData;create2ByteData(TR::Node *,int16_t);OMR::X86;CodeGenerator;0;0
create4ByteData;create4ByteData(TR::Node *,int32_t);OMR::X86;CodeGenerator;0;0
create8ByteData;create8ByteData(TR::Node *,int64_t);OMR::X86;CodeGenerator;0;0
createHWPRecords;createHWPRecords();OMR;CodeGenerator;0;0
createLinkage;createLinkage(enum TR_LinkageConventions);OMR;CodeGenerator;0;0
createLinkage;createLinkage(enum TR_LinkageConventions);OMR::X86;CodeGenerator;0;0
createLinkageForCompilation;createLinkageForCompilation();OMR;CodeGenerator;0;0
createOrFindClonedNode;createOrFindClonedNode(TR::Node *,int32_t);OMR;CodeGenerator;0;0
createStackAtlas;createStackAtlas();OMR;CodeGenerator;0;0
deactivateDependentDiscardableRegisters;deactivateDependentDiscardableRegisters(TR::Register *);OMR::X86;CodeGenerator;0;0
decInternalControlFlowNestingDepth;decInternalControlFlowNestingDepth();OMR;CodeGenerator;0;0
decOutOfLineColdPathNestedDepth;decOutOfLineColdPathNestedDepth();OMR;CodeGenerator;0;0
decReferenceCount;decReferenceCount(TR::Node *);OMR;CodeGenerator;0;0
defaultArrayTranslateMinimumNumberOfIterations;defaultArrayTranslateMinimumNumberOfIterations(const char *);OMR;CodeGenerator;0;0
doBackwardsRegisterAssignment;doBackwardsRegisterAssignment(enum TR_RegisterKinds,TR::Instruction *,TR::Instruction *);OMR::X86;CodeGenerator;0;0
doBinaryEncoding;doBinaryEncoding();OMR;CodeGenerator;0;0
doBinaryEncoding;doBinaryEncoding();OMR::X86;CodeGenerator;0;0
doInstructionSelection;doInstructionSelection();OMR;CodeGenerator;0;0
doPeephole;doPeephole();OMR;CodeGenerator;0;0
doRegisterAssignment;doRegisterAssignment(enum TR_RegisterKinds);OMR;CodeGenerator;0;0
doRegisterAssignment;doRegisterAssignment(enum TR_RegisterKinds);OMR::X86;CodeGenerator;0;0
doRematerialization;doRematerialization();OMR;CodeGenerator;0;0
doRematerialization;doRematerialization();OMR::X86;CodeGenerator;0;0
doubleClobberEvaluate;doubleClobberEvaluate(TR::Node *);OMR::X86;CodeGenerator;0;0
dumpDataSnippets;dumpDataSnippets(TR::FILE *);OMR;CodeGenerator;0;0
dumpDataSnippets;dumpDataSnippets(TR::FILE *);OMR::X86;CodeGenerator;0;0
dumpPostFPRegisterAssignment;dumpPostFPRegisterAssignment(TR::Instruction *,TR::Instruction *);OMR::X86;CodeGenerator;0;0
dumpPostGPRegisterAssignment;dumpPostGPRegisterAssignment(TR::Instruction *,TR::Instruction *);OMR::X86;CodeGenerator;0;0
dumpPreFPRegisterAssignment;dumpPreFPRegisterAssignment(TR::Instruction *);OMR::X86;CodeGenerator;0;0
dumpPreGPRegisterAssignment;dumpPreGPRegisterAssignment(TR::Instruction *);OMR::X86;CodeGenerator;0;0
dumpSpillStats;dumpSpillStats(class TR_FrontEnd *);OMR;CodeGenerator;0;0
dumpTargetAddressSnippets;dumpTargetAddressSnippets(TR::FILE *);OMR;CodeGenerator;0;0
eliminateLoadsOfLocalsThatAreNotStored;eliminateLoadsOfLocalsThatAreNotStored(TR::Node *,int32_t);OMR;CodeGenerator;0;0
emitDataSnippets;emitDataSnippets();OMR;CodeGenerator;0;0
emitDataSnippets;emitDataSnippets();OMR::X86;CodeGenerator;0;0
emitSnippets;emitSnippets();OMR;CodeGenerator;0;0
emitTargetAddressSnippets;emitTargetAddressSnippets();OMR;CodeGenerator;0;0
enableBetterSpillPlacements;enableBetterSpillPlacements();OMR::X86;CodeGenerator;0;0
enableImplicitDivideCheck;enableImplicitDivideCheck();OMR::X86;CodeGenerator;0;0
enableLiteralPoolRegisterForGRA;enableLiteralPoolRegisterForGRA();OMR;CodeGenerator;0;0
enableRefinedAliasSets;enableRefinedAliasSets();OMR;CodeGenerator;0;0
enableRegisterAssociations;enableRegisterAssociations();OMR::X86;CodeGenerator;0;0
enableRegisterInterferences;enableRegisterInterferences();OMR::X86;CodeGenerator;0;0
enableRegisterWeights;enableRegisterWeights();OMR::X86;CodeGenerator;0;0
enableRematerialisation;enableRematerialisation();OMR::X86;CodeGenerator;0;0
enableSinglePrecisionMethods;enableSinglePrecisionMethods();OMR::X86;CodeGenerator;0;0
enableTLHPrefetching;enableTLHPrefetching();OMR::X86;CodeGenerator;0;0
endInstructionSelection;endInstructionSelection();OMR;CodeGenerator;0;0
endInstructionSelection;endInstructionSelection();OMR::X86;CodeGenerator;0;0
endInternalControlFlow;endInternalControlFlow(TR::Instruction *);OMR;CodeGenerator;0;0
estimateBinaryLength;estimateBinaryLength(TR::MemoryReference *);OMR;CodeGenerator;0;0
estimateBinaryLength;estimateBinaryLength(TR::MemoryReference *);OMR::X86;CodeGenerator;0;0
estimateRegisterPressure;estimateRegisterPressure(TR::Block *,vcount_t,int32_t,int32_t,_Bool &,int32_t,class TR_BitVector *,TR::SymbolReference *,_Bool);OMR;CodeGenerator;0;0
estimateRegisterPressure;estimateRegisterPressure(TR::Node *,int32_t &,int32_t &,int32_t,class TR_BitVector *,_Bool,vcount_t,TR::SymbolReference *,_Bool &,_Bool,_Bool &);OMR;CodeGenerator;0;0
evaluate;evaluate(TR::Node *);OMR;CodeGenerator;0;0
evaluateChildrenWithMultipleRefCount;evaluateChildrenWithMultipleRefCount(TR::Node *);OMR;CodeGenerator;0;0
excludeInvariantsFromGRAEnabled;excludeInvariantsFromGRAEnabled();OMR;CodeGenerator;0;0
expandExponentiation;expandExponentiation();OMR;CodeGenerator;0;0
fe;fe();OMR;CodeGenerator;0;0
findAndFixCommonedReferences;findAndFixCommonedReferences();OMR;CodeGenerator;0;0
findBetterSpillPlacement;findBetterSpillPlacement(TR::Register *,int32_t);OMR::X86;CodeGenerator;0;0
findCoalescenceForRegisterCopy;findCoalescenceForRegisterCopy(TR::Node *,class TR_RegisterCandidate *,_Bool *);OMR;CodeGenerator;0;0
findCoalescenceRegisterForParameter;findCoalescenceRegisterForParameter(TR::Node *,class TR_RegisterCandidate *,uint32_t,_Bool *);OMR;CodeGenerator;0;0
findCommonedReferences;findCommonedReferences(TR::Node *,TR::TreeTop *);OMR;CodeGenerator;0;0
findOrCreate16ByteConstant;findOrCreate16ByteConstant(TR::Node *,void *);OMR::X86;CodeGenerator;0;0
findOrCreate2ByteConstant;findOrCreate2ByteConstant(TR::Node *,int16_t);OMR::X86;CodeGenerator;0;0
findOrCreate4ByteConstant;findOrCreate4ByteConstant(TR::Node *,int32_t);OMR::X86;CodeGenerator;0;0
findOrCreate8ByteConstant;findOrCreate8ByteConstant(TR::Node *,int64_t);OMR::X86;CodeGenerator;0;0
findOrCreateConstant;findOrCreateConstant(TR::Node *,void *,uint8_t);OMR::X86;CodeGenerator;0;0
findOrCreateCurrentTimeMillisTempSymRef;findOrCreateCurrentTimeMillisTempSymRef();OMR::X86;CodeGenerator;0;0
findOutlinedInstructionsFromLabel;findOutlinedInstructionsFromLabel(TR::LabelSymbol *);OMR::X86;CodeGenerator;0;0
findOutlinedInstructionsFromLabelForShrinkWrapping;findOutlinedInstructionsFromLabelForShrinkWrapping(TR::LabelSymbol *);OMR::X86;CodeGenerator;0;0
findOutlinedInstructionsFromMergeLabel;findOutlinedInstructionsFromMergeLabel(TR::LabelSymbol *);OMR::X86;CodeGenerator;0;0
findUsedCandidate;findUsedCandidate(TR::Node *,class TR_RegisterCandidate *,class TR_BitVector *);OMR;CodeGenerator;0;0
floatClobberEvaluate;floatClobberEvaluate(TR::Node *);OMR::X86;CodeGenerator;0;0
fprCount;fprCount(TR::DataType);OMR;CodeGenerator;0;0
freeSpill;freeSpill(class TR_BackingStore *,int32_t,int32_t);OMR;CodeGenerator;0;0
freeUnlatchedRegisters;freeUnlatchedRegisters();OMR;CodeGenerator;0;0
genLiveRealRegisters;genLiveRealRegisters(enum TR_RegisterKinds,TR_RegisterMask);OMR;CodeGenerator;0;0
genStoreForSymListArray;genStoreForSymListArray(TR_Array<List<TR::SymbolReference> > *,class TR_OSRMethodData *,TR::TreeTop *&,TR::Node *,TR::Node *,TR::Node *,TR::Node *,int32_t &);OMR;CodeGenerator;0;0
generateCatchBlockBBStartPrologue;generateCatchBlockBBStartPrologue(TR::Node *,TR::Instruction *);OMR;CodeGenerator;0;0
generateCode;generateCode();OMR;CodeGenerator;0;0
generateCodeFromIL;generateCodeFromIL();OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::RegisterDependencyConditions &,int32_t,int8_t,int32_t,TR::Instruction *);OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(TR::Instruction *,const char *,TR::Register *,int8_t,int32_t);OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(TR::Instruction *,const char *,int32_t,int8_t,int32_t);OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::Register *,int8_t);OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,class TR_ScratchRegisterManager &,int32_t,int8_t,int32_t,TR::Instruction *);OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::Register *,TR::RegisterDependencyConditions &,int8_t,int32_t,TR::Instruction *);OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::Register *,class TR_ScratchRegisterManager &,int8_t,int32_t,TR::Instruction *);OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,int32_t,int8_t);OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,TR::RegisterDependencyConditions *);OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,TR::RegisterDependencyConditions *);OMR::X86;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,class TR_ScratchRegisterManager &);OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,class TR_ScratchRegisterManager &);OMR::X86;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,TR::RegisterDependencyConditions *);OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,TR::RegisterDependencyConditions *);OMR::X86;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,class TR_ScratchRegisterManager &);OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,class TR_ScratchRegisterManager &);OMR::X86;CodeGenerator;0;0
generateMasmListingSyntax;generateMasmListingSyntax();OMR::X86;CodeGenerator;0;0
generateNop;generateNop(TR::Node *,TR::Instruction *,enum TR_NOPKind);OMR;CodeGenerator;0;0
generatePadding;generatePadding(uint8_t *,intptrj_t,TR::Instruction *,enum TR_PaddingProperties,_Bool);OMR::X86;CodeGenerator;0;1
generateScratchRegisterManager;generateScratchRegisterManager(int32_t);OMR::X86;CodeGenerator;0;0
generateSwitchToInterpreterPrePrologue;generateSwitchToInterpreterPrePrologue(TR::Instruction *,uint8_t,uint8_t);OMR::X86;CodeGenerator;0;0
getAOTRelocationList;getAOTRelocationList();OMR;CodeGenerator;0;0
getAccessStaticsIndirectly;getAccessStaticsIndirectly();OMR;CodeGenerator;0;0
getAccumulatedInstructionLengthError;getAccumulatedInstructionLengthError();OMR;CodeGenerator;0;0
getAheadOfTimeCompile;getAheadOfTimeCompile();OMR;CodeGenerator;0;0
getAllSpillList;getAllSpillList();OMR;CodeGenerator;0;0
getAppendInstruction;getAppendInstruction();OMR;CodeGenerator;0;0
getAssignmentDirection;getAssignmentDirection();OMR::X86;CodeGenerator;0;0
getBinaryBufferCursor;getBinaryBufferCursor();OMR;CodeGenerator;0;0
getBinaryBufferLength;getBinaryBufferLength();OMR;CodeGenerator;0;0
getBinaryBufferStart;getBinaryBufferStart();OMR;CodeGenerator;0;0
getBlocksWithCalls;getBlocksWithCalls();OMR;CodeGenerator;0;0
getBreakPointList;getBreakPointList();OMR;CodeGenerator;0;0
getClobberingInstructions;getClobberingInstructions();OMR::X86;CodeGenerator;0;0
getCodeCache;getCodeCache();OMR;CodeGenerator;0;0
getCodeEnd;getCodeEnd();OMR;CodeGenerator;0;0
getCodeGeneratorPhase;getCodeGeneratorPhase();OMR;CodeGenerator;0;0
getCodeLength;getCodeLength();OMR;CodeGenerator;0;0
getCodeStart;getCodeStart();OMR;CodeGenerator;0;0
getCollectedSpillList;getCollectedSpillList();OMR;CodeGenerator;0;0
getCurrentBlock;getCurrentBlock();OMR;CodeGenerator;0;0
getCurrentBlockIndex;getCurrentBlockIndex();OMR;CodeGenerator;0;0
getCurrentEvaluationBlock;getCurrentEvaluationBlock();OMR;CodeGenerator;0;0
getCurrentEvaluationTreeTop;getCurrentEvaluationTreeTop();OMR;CodeGenerator;0;0
getCurrentPathDepth;getCurrentPathDepth();OMR;CodeGenerator;0;0
getDataTypeFromSymbolMap;getDataTypeFromSymbolMap(TR::Symbol *);OMR;CodeGenerator;0;0
getDebug;getDebug();OMR;CodeGenerator;0;0
getDependentDiscardableRegisters;getDependentDiscardableRegisters();OMR::X86;CodeGenerator;0;0
getDisableFpGRA;getDisableFpGRA();OMR;CodeGenerator;0;0
getDisableLongGRA;getDisableLongGRA();OMR;CodeGenerator;0;0
getDisableNullCheckOfArrayLength;getDisableNullCheckOfArrayLength();OMR;CodeGenerator;0;0
getDoubleWordConversionTemp;getDoubleWordConversionTemp();OMR::X86;CodeGenerator;0;0
getEnableRegisterUsageTracking;getEnableRegisterUsageTracking();OMR;CodeGenerator;0;0
getEnforceStoreOrder;getEnforceStoreOrder();OMR;CodeGenerator;0;0
getEstimatedCodeLength;getEstimatedCodeLength();OMR;CodeGenerator;0;0
getEstimatedSnippetStart;getEstimatedSnippetStart();OMR;CodeGenerator;0;0
getEstimatedWarmLength;getEstimatedWarmLength();OMR;CodeGenerator;0;0
getEvaluationPriority;getEvaluationPriority(TR::Node *);OMR;CodeGenerator;0;0
getExtendedToInt64GlobalRegisters;getExtendedToInt64GlobalRegisters();OMR;CodeGenerator;0;0
getFPRegisterIterator;getFPRegisterIterator();OMR;CodeGenerator;0;0
getFirstBit;getFirstBit(class TR_BitVector &);OMR;CodeGenerator;0;0
getFirstGlobalAR;getFirstGlobalAR();OMR;CodeGenerator;0;0
getFirstGlobalFPR;getFirstGlobalFPR();OMR;CodeGenerator;0;0
getFirstGlobalGPR;getFirstGlobalGPR();OMR;CodeGenerator;0;0
getFirstGlobalHPR;getFirstGlobalHPR();OMR;CodeGenerator;0;0
getFirstGlobalVRF;getFirstGlobalVRF();OMR;CodeGenerator;0;0
getFirstInstruction;getFirstInstruction();OMR;CodeGenerator;0;0
getFirstOverlappedGlobalFPR;getFirstOverlappedGlobalFPR();OMR;CodeGenerator;0;0
getFirstOverlappedGlobalVRF;getFirstOverlappedGlobalVRF();OMR;CodeGenerator;0;0
getFirstTimeLiveOOLRegisterList;getFirstTimeLiveOOLRegisterList();OMR;CodeGenerator;0;0
getFrameRegister;getFrameRegister();OMR::X86;CodeGenerator;0;0
getFrameSizeInBytes;getFrameSizeInBytes();OMR;CodeGenerator;0;0
getGPRegisterIterator;getGPRegisterIterator();OMR;CodeGenerator;0;0
getGRACompleted;getGRACompleted();OMR;CodeGenerator;0;0
getGlobalFPRPartitionLimit;getGlobalFPRPartitionLimit();OMR;CodeGenerator;0;0
getGlobalFPRsPreservedAcrossCalls;getGlobalFPRsPreservedAcrossCalls();OMR;CodeGenerator;0;0
getGlobalFPRsPreservedAcrossCalls;getGlobalFPRsPreservedAcrossCalls();OMR::X86::AMD64;CodeGenerator;0;0
getGlobalGPRFromHPR;getGlobalGPRFromHPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
getGlobalGPRPartitionLimit;getGlobalGPRPartitionLimit();OMR;CodeGenerator;0;0
getGlobalGPRsPreservedAcrossCalls;getGlobalGPRsPreservedAcrossCalls();OMR;CodeGenerator;0;0
getGlobalGPRsPreservedAcrossCalls;getGlobalGPRsPreservedAcrossCalls();OMR::X86::AMD64;CodeGenerator;0;0
getGlobalHPRFromGPR;getGlobalHPRFromGPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
getGlobalRegister;getGlobalRegister(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
getGlobalRegisterNumber;getGlobalRegisterNumber(uint32_t);OMR;CodeGenerator;0;0
getGlobalRegisters;getGlobalRegisters(enum TR_SpillKinds,enum TR_LinkageConventions);OMR;CodeGenerator;0;1
getGlobalRegisters;getGlobalRegisters(enum TR_SpillKinds,enum TR_LinkageConventions);OMR::X86;CodeGenerator;0;1
getHasDoubleWordAlignedStack;getHasDoubleWordAlignedStack();OMR;CodeGenerator;0;0
getHasResumableTrapHandler;getHasResumableTrapHandler();OMR;CodeGenerator;0;0
getImplicitExceptionPoint;getImplicitExceptionPoint();OMR;CodeGenerator;0;0
getInlinedGetCurrentThreadMethod;getInlinedGetCurrentThreadMethod();OMR;CodeGenerator;0;0
getInstructionAtEndInternalControlFlow;getInstructionAtEndInternalControlFlow();OMR;CodeGenerator;0;0
getInstructionPatchAlignmentBoundary;getInstructionPatchAlignmentBoundary();OMR::X86;CodeGenerator;0;0
getInstructionToBePatched;getInstructionToBePatched(TR::Instruction *);OMR;CodeGenerator;0;0
getInternalPointerSpillFreeList;getInternalPointerSpillFreeList();OMR;CodeGenerator;0;0
getInternalPtrMapBit;getInternalPtrMapBit();OMR;CodeGenerator;0;0
getIsInOOLSection;getIsInOOLSection();OMR;CodeGenerator;0;0
getJNICallSites;getJNICallSites();OMR;CodeGenerator;0;0
getJNILinkageCalleeCleanup;getJNILinkageCalleeCleanup();OMR;CodeGenerator;0;0
getJitMethodEntryPaddingSize;getJitMethodEntryPaddingSize();OMR;CodeGenerator;0;0
getLargestNegConstThatMustBeMaterialized;getLargestNegConstThatMustBeMaterialized();OMR::X86;CodeGenerator;0;0
getLargestOutgoingArgSize;getLargestOutgoingArgSize();OMR;CodeGenerator;0;0
getLastCatchAppendInstruction;getLastCatchAppendInstruction();OMR::X86;CodeGenerator;0;0
getLastGlobalAR;getLastGlobalAR();OMR;CodeGenerator;0;0
getLastGlobalFPR;getLastGlobalFPR();OMR;CodeGenerator;0;0
getLastGlobalGPR;getLastGlobalGPR();OMR;CodeGenerator;0;0
getLastGlobalHPR;getLastGlobalHPR();OMR;CodeGenerator;0;0
getLastGlobalVRF;getLastGlobalVRF();OMR;CodeGenerator;0;0
getLastOverlappedGlobalFPR;getLastOverlappedGlobalFPR();OMR;CodeGenerator;0;0
getLastOverlappedGlobalVRF;getLastOverlappedGlobalVRF();OMR;CodeGenerator;0;0
getLinkage;getLinkage(enum TR_LinkageConventions);OMR;CodeGenerator;0;0
getLinkage;getLinkage();OMR;CodeGenerator;0;0
getLinkageGlobalRegisterNumber;getLinkageGlobalRegisterNumber(int8_t,TR::DataType);OMR;CodeGenerator;0;0
getLinkageGlobalRegisterNumber;getLinkageGlobalRegisterNumber(int8_t,TR::DataType);OMR::X86::AMD64;CodeGenerator;0;0
getLiveButMaybeUnreferencedLocals;getLiveButMaybeUnreferencedLocals();OMR;CodeGenerator;0;0
getLiveDiscardableRegisters;getLiveDiscardableRegisters();OMR::X86;CodeGenerator;0;0
getLiveLocals;getLiveLocals();OMR;CodeGenerator;0;0
getLiveRealRegisters;getLiveRealRegisters(enum TR_RegisterKinds);OMR;CodeGenerator;0;0
getLiveRegisters;getLiveRegisters(enum TR_RegisterKinds);OMR;CodeGenerator;0;0
getLocalsIG;getLocalsIG();OMR;CodeGenerator;0;0
getLowestCommonCodePatchingAlignmentBoundary;getLowestCommonCodePatchingAlignmentBoundary();OMR::X86;CodeGenerator;0;0
getLowestSavedRegister;getLowestSavedRegister();OMR;CodeGenerator;0;0
getMappingAutomatics;getMappingAutomatics();OMR;CodeGenerator;0;0
getMaxObjectSizeGuaranteedNotToOverflow;getMaxObjectSizeGuaranteedNotToOverflow();OMR;CodeGenerator;0;0
getMaximumNumberOfFPRsAllowedAcrossEdge;getMaximumNumberOfFPRsAllowedAcrossEdge(TR::Node *);OMR;CodeGenerator;0;0
getMaximumNumberOfGPRsAllowedAcrossEdge;getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Node *);OMR;CodeGenerator;0;0
getMaximumNumberOfGPRsAllowedAcrossEdge;getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Node *);OMR::X86::AMD64;CodeGenerator;0;0
getMaximumNumberOfGPRsAllowedAcrossEdge;getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Block *);OMR;CodeGenerator;0;0
getMaximumNumberOfVRFsAllowedAcrossEdge;getMaximumNumberOfVRFsAllowedAcrossEdge(TR::Node *);OMR;CodeGenerator;0;0
getMaximumNumbersOfAssignableFPRs;getMaximumNumbersOfAssignableFPRs();OMR;CodeGenerator;0;0
getMaximumNumbersOfAssignableFPRs;getMaximumNumbersOfAssignableFPRs();OMR::X86;CodeGenerator;0;0
getMaximumNumbersOfAssignableGPRs;getMaximumNumbersOfAssignableGPRs();OMR;CodeGenerator;0;0
getMaximumNumbersOfAssignableGPRs;getMaximumNumbersOfAssignableGPRs();OMR::X86;CodeGenerator;0;0
getMaximumNumbersOfAssignableVRs;getMaximumNumbersOfAssignableVRs();OMR;CodeGenerator;0;0
getMaximumNumbersOfAssignableVRs;getMaximumNumbersOfAssignableVRs();OMR::X86;CodeGenerator;0;0
getMethodContainsBinaryCodedDecimal;getMethodContainsBinaryCodedDecimal();OMR;CodeGenerator;0;0
getMethodMetaDataRegister;getMethodMetaDataRegister();OMR::X86;CodeGenerator;0;0
getMethodModifiedByRA;getMethodModifiedByRA();OMR;CodeGenerator;0;0
getMethodStackMap;getMethodStackMap();OMR;CodeGenerator;0;0
getMinByteForLongCompareNarrower;getMinByteForLongCompareNarrower();OMR;CodeGenerator;0;0
getMinShortForLongCompareNarrower;getMinShortForLongCompareNarrower();OMR;CodeGenerator;0;0
getMonClass;getMonClass(TR::Node *);OMR;CodeGenerator;0;0
getNanoTimeTemp;getNanoTimeTemp();OMR::X86;CodeGenerator;0;0
getNextAvailableBlockIndex;getNextAvailableBlockIndex();OMR;CodeGenerator;0;0
getNumberBytesReadInaccessible;getNumberBytesReadInaccessible();OMR;CodeGenerator;0;0
getNumberBytesWriteInaccessible;getNumberBytesWriteInaccessible();OMR;CodeGenerator;0;0
getNumberOfGlobalFPRs;getNumberOfGlobalFPRs();OMR;CodeGenerator;0;0
getNumberOfGlobalGPRs;getNumberOfGlobalGPRs();OMR;CodeGenerator;0;0
getNumberOfGlobalRegisters;getNumberOfGlobalRegisters();OMR;CodeGenerator;0;0
getNumberOfGlobalVRFs;getNumberOfGlobalVRFs();OMR;CodeGenerator;0;0
getNumberOfTemporaryRegistersUsedByCall;getNumberOfTemporaryRegistersUsedByCall(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,uint32_t &,uint32_t &,uint32_t &);OMR;CodeGenerator;0;1
getOptimizationPhaseIsComplete;getOptimizationPhaseIsComplete();OMR;CodeGenerator;0;0
getOutlinedInstructionsList;getOutlinedInstructionsList();OMR::X86;CodeGenerator;0;0
getOverlapOffsetBetweenAliasedGRNs;getOverlapOffsetBetweenAliasedGRNs();OMR;CodeGenerator;0;0
getOverlappedAliasForGRN;getOverlappedAliasForGRN(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
getPicSlotCount;getPicSlotCount();OMR::X86;CodeGenerator;0;0
getPreJitMethodEntrySize;getPreJitMethodEntrySize();OMR;CodeGenerator;0;0
getPrePrologueSize;getPrePrologueSize();OMR;CodeGenerator;0;0
getPreferredLoopUnrollFactor;getPreferredLoopUnrollFactor();OMR;CodeGenerator;0;0
getPreservedRegsInPrologue;getPreservedRegsInPrologue();OMR;CodeGenerator;0;0
getProperties;getProperties();OMR::X86;CodeGenerator;0;0
getRealVMThreadRegister;getRealVMThreadRegister();OMR;CodeGenerator;0;0
getReferencedRegisterList;getReferencedRegisterList();OMR;CodeGenerator;0;0
getRegisterArray;getRegisterArray();OMR;CodeGenerator;0;0
getRegisterMapInfoBitsMask;getRegisterMapInfoBitsMask();OMR;CodeGenerator;0;0
getRegisterSaveDescription;getRegisterSaveDescription();OMR;CodeGenerator;0;0
getRelocationList;getRelocationList();OMR;CodeGenerator;0;0
getReturnTypeInfoInstruction;getReturnTypeInfoInstruction();OMR::X86;CodeGenerator;0;0
getShrinkWrappingDone;getShrinkWrappingDone();OMR;CodeGenerator;0;0
getSizeOfCombinedBuffer;getSizeOfCombinedBuffer();OMR;CodeGenerator;0;0
getSizeOfCombinedBuffer;getSizeOfCombinedBuffer();OMR::X86;CodeGenerator;0;0
getSmallestPosConstThatMustBeMaterialized;getSmallestPosConstThatMustBeMaterialized();OMR::X86;CodeGenerator;0;0
getSnippetList;getSnippetList();OMR;CodeGenerator;0;0
getSpill16FreeList;getSpill16FreeList();OMR;CodeGenerator;0;0
getSpill4FreeList;getSpill4FreeList();OMR;CodeGenerator;0;0
getSpill8FreeList;getSpill8FreeList();OMR;CodeGenerator;0;0
getSpilledIntRegisters;getSpilledIntRegisters();OMR::X86;CodeGenerator;0;0
getSpilledRegisterList;getSpilledRegisterList();OMR;CodeGenerator;0;0
getStackAtlas;getStackAtlas();OMR;CodeGenerator;0;0
getStaticRelocations;getStaticRelocations();OMR;CodeGenerator;0;0
getSupportedLiveRegisterKinds;getSupportedLiveRegisterKinds();OMR;CodeGenerator;0;0
getSupportsAlignedAccessOnly;getSupportsAlignedAccessOnly();OMR;CodeGenerator;0;0
getSupportsArrayCmp;getSupportsArrayCmp();OMR;CodeGenerator;0;0
getSupportsArrayCmpSign;getSupportsArrayCmpSign();OMR;CodeGenerator;0;0
getSupportsArraySet;getSupportsArraySet();OMR;CodeGenerator;0;0
getSupportsArrayTranslateAndTest;getSupportsArrayTranslateAndTest();OMR;CodeGenerator;0;0
getSupportsArrayTranslateTROT;getSupportsArrayTranslateTROT();OMR;CodeGenerator;0;0
getSupportsArrayTranslateTROTNoBreak;getSupportsArrayTranslateTROTNoBreak();OMR;CodeGenerator;0;0
getSupportsArrayTranslateTRTO;getSupportsArrayTranslateTRTO();OMR;CodeGenerator;0;0
getSupportsArrayTranslateTRTO255;getSupportsArrayTranslateTRTO255();OMR;CodeGenerator;0;0
getSupportsArrayTranslateTRxx;getSupportsArrayTranslateTRxx();OMR;CodeGenerator;0;0
getSupportsAtomicLoadAndAdd;getSupportsAtomicLoadAndAdd();OMR;CodeGenerator;0;0
getSupportsAutoSIMD;getSupportsAutoSIMD();OMR;CodeGenerator;0;0
getSupportsBCDToDFPReduction;getSupportsBCDToDFPReduction();OMR;CodeGenerator;0;0
getSupportsBDLLHardwareOverflowCheck;getSupportsBDLLHardwareOverflowCheck();OMR;CodeGenerator;0;0
getSupportsBigDecimalLongLookasideVersioning;getSupportsBigDecimalLongLookasideVersioning();OMR;CodeGenerator;0;0
getSupportsBitOpCodes;getSupportsBitOpCodes();OMR;CodeGenerator;0;0
getSupportsBitOpCodes;getSupportsBitOpCodes();OMR::X86;CodeGenerator;0;0
getSupportsBitPermute;getSupportsBitPermute();OMR;CodeGenerator;0;1
getSupportsBitPermute;getSupportsBitPermute();OMR::X86;CodeGenerator;0;1
getSupportsCompactedLocals;getSupportsCompactedLocals();OMR;CodeGenerator;0;0
getSupportsConstantOffsetInAddressing;getSupportsConstantOffsetInAddressing(int64_t);OMR;CodeGenerator;0;0
getSupportsConstantOffsetInAddressing;getSupportsConstantOffsetInAddressing();OMR;CodeGenerator;0;0
getSupportsCurrentTimeMaxPrecision;getSupportsCurrentTimeMaxPrecision();OMR;CodeGenerator;0;0
getSupportsDirectJNICalls;getSupportsDirectJNICalls();OMR;CodeGenerator;0;0
getSupportsDivCheck;getSupportsDivCheck();OMR;CodeGenerator;0;0
getSupportsDoubleWordCAS;getSupportsDoubleWordCAS();OMR;CodeGenerator;0;0
getSupportsDoubleWordSet;getSupportsDoubleWordSet();OMR;CodeGenerator;0;0
getSupportsEfficientNarrowIntComputation;getSupportsEfficientNarrowIntComputation();OMR;CodeGenerator;0;0
getSupportsEfficientNarrowUnsignedIntComputation;getSupportsEfficientNarrowUnsignedIntComputation();OMR;CodeGenerator;0;0
getSupportsEncodeUtf16BigWithSurrogateTest;getSupportsEncodeUtf16BigWithSurrogateTest();OMR;CodeGenerator;0;0
getSupportsEncodeUtf16BigWithSurrogateTest;getSupportsEncodeUtf16BigWithSurrogateTest();OMR::X86;CodeGenerator;0;0
getSupportsEncodeUtf16LittleWithSurrogateTest;getSupportsEncodeUtf16LittleWithSurrogateTest();OMR;CodeGenerator;0;0
getSupportsEncodeUtf16LittleWithSurrogateTest;getSupportsEncodeUtf16LittleWithSurrogateTest();OMR::X86;CodeGenerator;0;0
getSupportsFastCTM;getSupportsFastCTM();OMR;CodeGenerator;0;0
getSupportsGlRegDepOnFirstBlock;getSupportsGlRegDepOnFirstBlock();OMR;CodeGenerator;0;0
getSupportsGlRegDeps;getSupportsGlRegDeps();OMR;CodeGenerator;0;0
getSupportsIDivAndIRemWithThreeChildren;getSupportsIDivAndIRemWithThreeChildren();OMR;CodeGenerator;0;0
getSupportsIbyteswap;getSupportsIbyteswap();OMR;CodeGenerator;0;1
getSupportsIbyteswap;getSupportsIbyteswap();OMR::X86;CodeGenerator;0;1
getSupportsInlinedAtomicLongVolatiles;getSupportsInlinedAtomicLongVolatiles();OMR;CodeGenerator;0;0
getSupportsInliningOfTypeCoersionMethods;getSupportsInliningOfTypeCoersionMethods();OMR;CodeGenerator;0;0
getSupportsJavaFloatSemantics;getSupportsJavaFloatSemantics();OMR;CodeGenerator;0;0
getSupportsLDivAndLRemWithThreeChildren;getSupportsLDivAndLRemWithThreeChildren();OMR;CodeGenerator;0;0
getSupportsLM;getSupportsLM();OMR;CodeGenerator;0;0
getSupportsLoweringConstIDiv;getSupportsLoweringConstIDiv();OMR;CodeGenerator;0;0
getSupportsLoweringConstLDiv;getSupportsLoweringConstLDiv();OMR;CodeGenerator;0;0
getSupportsLoweringConstLDivPower2;getSupportsLoweringConstLDivPower2();OMR;CodeGenerator;0;0
getSupportsMergedAllocations;getSupportsMergedAllocations();OMR;CodeGenerator;0;0
getSupportsNewInstanceImplOpt;getSupportsNewInstanceImplOpt();OMR;CodeGenerator;0;0
getSupportsNewObjectAlignment;getSupportsNewObjectAlignment();OMR;CodeGenerator;0;0
getSupportsNewObjectAlignment;getSupportsNewObjectAlignment();OMR::X86;CodeGenerator;0;0
getSupportsOpCodeForAutoSIMD;getSupportsOpCodeForAutoSIMD(TR::ILOpCode,TR::DataType);OMR;CodeGenerator;0;0
getSupportsOpCodeForAutoSIMD;getSupportsOpCodeForAutoSIMD(TR::ILOpCode,TR::DataType);OMR::X86;CodeGenerator;0;0
getSupportsPartialInlineOfMethodHooks;getSupportsPartialInlineOfMethodHooks();OMR;CodeGenerator;0;0
getSupportsPostProcessArrayCopy;getSupportsPostProcessArrayCopy();OMR;CodeGenerator;0;0
getSupportsPrimitiveArrayCopy;getSupportsPrimitiveArrayCopy();OMR;CodeGenerator;0;0
getSupportsProfiledInlining;getSupportsProfiledInlining();OMR;CodeGenerator;0;0
getSupportsReadOnlyLocks;getSupportsReadOnlyLocks();OMR;CodeGenerator;0;0
getSupportsReferenceArrayCopy;getSupportsReferenceArrayCopy();OMR;CodeGenerator;0;0
getSupportsReverseLoadAndStore;getSupportsReverseLoadAndStore();OMR;CodeGenerator;0;0
getSupportsRuntimeInstrumentation;getSupportsRuntimeInstrumentation();OMR;CodeGenerator;0;0
getSupportsScaledIndexAddressing;getSupportsScaledIndexAddressing();OMR;CodeGenerator;0;0
getSupportsSearchCharString;getSupportsSearchCharString();OMR;CodeGenerator;0;0
getSupportsShrinkWrapping;getSupportsShrinkWrapping();OMR;CodeGenerator;0;0
getSupportsStackAllocationOfArraylets;getSupportsStackAllocationOfArraylets();OMR;CodeGenerator;0;0
getSupportsTLE;getSupportsTLE();OMR;CodeGenerator;0;1
getSupportsTM;getSupportsTM();OMR;CodeGenerator;0;0
getSupportsTMDoubleWordCASORSet;getSupportsTMDoubleWordCASORSet();OMR;CodeGenerator;0;0
getSupportsTMHashMapAndLinkedQueue;getSupportsTMHashMapAndLinkedQueue();OMR;CodeGenerator;0;0
getSupportsTenuredObjectAlignment;getSupportsTenuredObjectAlignment();OMR;CodeGenerator;0;0
getSupportsTenuredObjectAlignment;getSupportsTenuredObjectAlignment();OMR::X86;CodeGenerator;0;0
getSupportsTestCharComparisonControl;getSupportsTestCharComparisonControl();OMR;CodeGenerator;0;0
getSupportsTestUnderMask;getSupportsTestUnderMask();OMR;CodeGenerator;0;0
getSupportsTranslateAndTestCharString;getSupportsTranslateAndTestCharString();OMR;CodeGenerator;0;0
getSupportsVMThreadGRA;getSupportsVMThreadGRA();OMR;CodeGenerator;0;0
getSupportsVectorRegisters;getSupportsVectorRegisters();OMR;CodeGenerator;0;0
getSupportsVirtualGuardNOPing;getSupportsVirtualGuardNOPing();OMR;CodeGenerator;0;0
getSwitchToInterpreterLabel;getSwitchToInterpreterLabel();OMR::X86;CodeGenerator;0;0
getSymRef;getSymRef(enum TR_RuntimeHelper);OMR;CodeGenerator;0;0
getSymRefTab;getSymRefTab();OMR;CodeGenerator;0;0
getTraceRAOption;getTraceRAOption(uint32_t);OMR;CodeGenerator;0;0
getTreeEvaluatorTable;getTreeEvaluatorTable();OMR;CodeGenerator;0;0
getUseNonLinearRegisterAssigner;getUseNonLinearRegisterAssigner();OMR;CodeGenerator;0;0
getUsesLoadStoreMultiple;getUsesLoadStoreMultiple();OMR;CodeGenerator;0;0
getVMThreadGlobalRegisterNumber;getVMThreadGlobalRegisterNumber();OMR;CodeGenerator;0;0
getVMThreadRegister;getVMThreadRegister();OMR;CodeGenerator;0;0
getVMThreadRequired;getVMThreadRequired();OMR;CodeGenerator;0;0
getVMThreadSpillInstruction;getVMThreadSpillInstruction();OMR;CodeGenerator;0;0
getVirtualGuardForPatching;getVirtualGuardForPatching(TR::Instruction *);OMR;CodeGenerator;0;0
getWordConversionTemp;getWordConversionTemp();OMR::X86;CodeGenerator;0;0
getX86ProcessorInfo;getX86ProcessorInfo();OMR::X86;CodeGenerator;0;0
getX87RegisterIterator;getX87RegisterIterator();OMR::X86;CodeGenerator;0;0
getXMMDoubleLoadOpCode;getXMMDoubleLoadOpCode();OMR::X86;CodeGenerator;0;0
gprClobberEvaluate;gprClobberEvaluate(TR::Node *,enum TR_X86OpCodes);OMR::X86;CodeGenerator;0;0
gprCount;gprCount(TR::DataType,int32_t);OMR;CodeGenerator;0;0
hasCCCarry;hasCCCarry();OMR;CodeGenerator;0;0
hasCCCompare;hasCCCompare();OMR;CodeGenerator;0;0
hasCCInfo;hasCCInfo();OMR;CodeGenerator;0;0
hasCCOverflow;hasCCOverflow();OMR;CodeGenerator;0;0
hasCCSigned;hasCCSigned();OMR;CodeGenerator;0;0
hasCCZero;hasCCZero();OMR;CodeGenerator;0;0
hasComplexAddressingMode;hasComplexAddressingMode();OMR;CodeGenerator;0;0
hasComplexAddressingMode;hasComplexAddressingMode();OMR::X86;CodeGenerator;0;0
hasDataSnippets;hasDataSnippets();OMR;CodeGenerator;0;0
hasDataSnippets;hasDataSnippets();OMR::X86;CodeGenerator;0;0
hasGlobalVRF;hasGlobalVRF();OMR;CodeGenerator;0;0
hasRegisterPressureInfo;hasRegisterPressureInfo();OMR;CodeGenerator;0;0
hasTMEvaluator;hasTMEvaluator();OMR;CodeGenerator;0;0
hasTMEvaluator;hasTMEvaluator();OMR::X86;CodeGenerator;0;0
hasTargetAddressSnippets;hasTargetAddressSnippets();OMR;CodeGenerator;0;0
hiValue;hiValue(intptrj_t);OMR;CodeGenerator;0;0
identifyUnneededByteConvNodes;identifyUnneededByteConvNodes();OMR;CodeGenerator;0;0
identifyUnneededByteConvNodes;identifyUnneededByteConvNodes(TR::Node *,TR::TreeTop *,vcount_t,TR::DataType);OMR;CodeGenerator;0;0
ilOpCodeIsSupported;ilOpCodeIsSupported(TR::ILOpCodes);OMR;CodeGenerator;0;0
incInternalControlFlowNestingDepth;incInternalControlFlowNestingDepth();OMR;CodeGenerator;0;0
incNumRematerializedAddresses;incNumRematerializedAddresses();OMR;CodeGenerator;0;0
incNumRematerializedConstants;incNumRematerializedConstants();OMR;CodeGenerator;0;0
incNumRematerializedIndirects;incNumRematerializedIndirects();OMR;CodeGenerator;0;0
incNumRematerializedLocals;incNumRematerializedLocals();OMR;CodeGenerator;0;0
incNumRematerializedStatics;incNumRematerializedStatics();OMR;CodeGenerator;0;0
incNumRematerializedXMMRs;incNumRematerializedXMMRs();OMR;CodeGenerator;0;0
incNumSpilledRegisters;incNumSpilledRegisters();OMR;CodeGenerator;0;0
incOutOfLineColdPathNestedDepth;incOutOfLineColdPathNestedDepth();OMR;CodeGenerator;0;0
incPicSlotCountBy;incPicSlotCountBy(int32_t);OMR::X86;CodeGenerator;0;0
incRefCountForOpaquePseudoRegister;incRefCountForOpaquePseudoRegister(TR::Node *,TR::CodeGenerator *,TR::Compilation *);OMR;CodeGenerator;0;0
incReferenceCount;incReferenceCount(TR::Node *);OMR;CodeGenerator;0;0
incrementEventCounter;incrementEventCounter(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *);OMR;CodeGenerator;0;0
initLinkageToGlobalRegisterMap;initLinkageToGlobalRegisterMap();OMR::X86::AMD64;CodeGenerator;0;0
initialize;initialize(TR::Compilation *);OMR::X86;CodeGenerator;0;0
initializeLinkage;initializeLinkage();OMR;CodeGenerator;0;0
initializeRegisterPressureSimulator;initializeRegisterPressureSimulator();OMR;CodeGenerator;0;0
initializeVFPState;initializeVFPState(TR::class RealRegister::RegNum,int32_t);OMR::X86;CodeGenerator;0;0
inlineDirectCall;inlineDirectCall(TR::Node *,TR::Register *&);OMR;CodeGenerator;0;0
insertDebugCounters;insertDebugCounters();OMR;CodeGenerator;0;0
insideInternalControlFlow;insideInternalControlFlow();OMR;CodeGenerator;0;0
intClobberEvaluate;intClobberEvaluate(TR::Node *);OMR::X86;CodeGenerator;0;0
internalControlFlowNestingDepth;internalControlFlowNestingDepth();OMR;CodeGenerator;0;0
internalControlFlowSafeNestingDepth;internalControlFlowSafeNestingDepth();OMR;CodeGenerator;0;0
internalPointerSupportImplemented;internalPointerSupportImplemented();OMR;CodeGenerator;0;0
internalPointerSupportImplemented;internalPointerSupportImplemented();OMR::X86;CodeGenerator;0;0
internalPointerSupportImplemented;internalPointerSupportImplemented();OMR::X86::AMD64;CodeGenerator;0;0
is8BitGlobalGPR;is8BitGlobalGPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
isAddressScaleIndexSupported;isAddressScaleIndexSupported(int32_t);OMR;CodeGenerator;0;0
isAddressScaleIndexSupported;isAddressScaleIndexSupported(int32_t);OMR::X86;CodeGenerator;0;0
isAliasedGRN;isAliasedGRN(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
isAlignmentInstruction;isAlignmentInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
isAlignmentInstruction;isAlignmentInstruction(TR::Instruction *);OMR::X86;CodeGenerator;0;0
isBranchInstruction;isBranchInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
isBranchInstruction;isBranchInstruction(TR::Instruction *);OMR::X86;CodeGenerator;0;0
isCandidateLoad;isCandidateLoad(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;0
isCandidateLoad;isCandidateLoad(TR::Node *,TR::SymbolReference *);OMR;CodeGenerator;0;0
isFenceInstruction;isFenceInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
isFenceInstruction;isFenceInstruction(TR::Instruction *);OMR::X86;CodeGenerator;0;0
isFreeSpillListLocked;isFreeSpillListLocked();OMR;CodeGenerator;0;0
isGlobalFPR;isGlobalFPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
isGlobalGPR;isGlobalGPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
isGlobalHPR;isGlobalHPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
isGlobalRegisterAvailable;isGlobalRegisterAvailable(TR_GlobalRegisterNumber,TR::DataType);OMR;CodeGenerator;0;0
isGlobalVRF;isGlobalVRF(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
isInMemoryInstructionCandidate;isInMemoryInstructionCandidate(TR::Node *);OMR;CodeGenerator;0;0
isInternalControlFlowReg;isInternalControlFlowReg(TR::Register *);OMR;CodeGenerator;0;0
isLabelInstruction;isLabelInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
isLabelInstruction;isLabelInstruction(TR::Instruction *);OMR::X86;CodeGenerator;0;0
isLeafMethod;isLeafMethod();OMR;CodeGenerator;0;0
isLiteralPoolOnDemandOn;isLiteralPoolOnDemandOn();OMR;CodeGenerator;0;0
isLoadAlreadyAssignedOnEntry;isLoadAlreadyAssignedOnEntry(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;0
isMaterialized;isMaterialized(TR::Node *);OMR;CodeGenerator;0;0
isMemoryUpdate;isMemoryUpdate(TR::Node *);OMR;CodeGenerator;0;0
isObjectOfSizeWorthAligning;isObjectOfSizeWorthAligning(uint32_t);OMR;CodeGenerator;0;0
isObjectOfSizeWorthAligning;isObjectOfSizeWorthAligning(uint32_t);OMR::X86;CodeGenerator;0;0
isOutOfLineColdPath;isOutOfLineColdPath();OMR;CodeGenerator;0;0
isOutOfLineHotPath;isOutOfLineHotPath();OMR;CodeGenerator;0;0
isPreservedRegister;isPreservedRegister(int32_t);OMR;CodeGenerator;0;0
isPreservedRegister;isPreservedRegister(int32_t);OMR::X86;CodeGenerator;0;0
isRegisterClobberable;isRegisterClobberable(TR::Register *,uint16_t);OMR;CodeGenerator;0;0
isReturnInstruction;isReturnInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
isReturnInstruction;isReturnInstruction(TR::Instruction *);OMR::X86;CodeGenerator;0;0
isRotateAndMask;isRotateAndMask(TR::Node *);OMR;CodeGenerator;0;0
isSnippetMatched;isSnippetMatched(TR::Snippet *,int32_t,TR::SymbolReference *);OMR;CodeGenerator;0;0
isSupportedAdd;isSupportedAdd(TR::Node *);OMR;CodeGenerator;0;0
isTargetSnippetOrOutOfLine;isTargetSnippetOrOutOfLine(TR::Instruction *,TR::Instruction **,TR::Instruction **);OMR;CodeGenerator;0;0
isTargetSnippetOrOutOfLine;isTargetSnippetOrOutOfLine(TR::Instruction *,TR::Instruction **,TR::Instruction **);OMR::X86;CodeGenerator;0;0
jettisonAllSpills;jettisonAllSpills();OMR;CodeGenerator;0;0
jitAdd32BitPicToPatchOnClassRedefinition;jitAdd32BitPicToPatchOnClassRedefinition(void *,void *,_Bool);OMR;CodeGenerator;0;0
jitAdd32BitPicToPatchOnClassUnload;jitAdd32BitPicToPatchOnClassUnload(void *,void *);OMR;CodeGenerator;0;0
jitAddPicToPatchOnClassRedefinition;jitAddPicToPatchOnClassRedefinition(void *,void *,_Bool);OMR;CodeGenerator;0;0
jitAddPicToPatchOnClassUnload;jitAddPicToPatchOnClassUnload(void *,void *);OMR;CodeGenerator;0;0
jitAddUnresolvedAddressMaterializationToPatchOnClassRedefinition;jitAddUnresolvedAddressMaterializationToPatchOnClassRedefinition(void *);OMR;CodeGenerator;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;CodeGenerator;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;CodeGenerator;0;0
killLiveRealRegisters;killLiveRealRegisters(enum TR_RegisterKinds,TR_RegisterMask);OMR;CodeGenerator;0;0
lastInstructionBeforeCurrentEvaluationTreeTop;lastInstructionBeforeCurrentEvaluationTreeTop();OMR;CodeGenerator;0;0
linkage;linkage();OMR;CodeGenerator;0;0
lockFreeSpillList;lockFreeSpillList();OMR;CodeGenerator;0;0
longClobberEvaluate;longClobberEvaluate(TR::Node *);OMR::X86;CodeGenerator;0;1
longClobberEvaluate;longClobberEvaluate(TR::Node *);OMR::X86::AMD64;CodeGenerator;0;1
lookUpSnippet;lookUpSnippet(int32_t,TR::SymbolReference *);OMR;CodeGenerator;0;0
lowerTree;lowerTree(TR::Node *,TR::TreeTop *);OMR;CodeGenerator;0;0
lowerTreeIfNeeded;lowerTreeIfNeeded(TR::Node *,int32_t,TR::Node *,TR::TreeTop *);OMR;CodeGenerator;0;0
lowerTrees;lowerTrees();OMR;CodeGenerator;0;0
lowerTreesPostChildrenVisit;lowerTreesPostChildrenVisit(TR::Node *,TR::TreeTop *,vcount_t);OMR;CodeGenerator;0;0
lowerTreesPostTreeTopVisit;lowerTreesPostTreeTopVisit(TR::TreeTop *,vcount_t);OMR;CodeGenerator;0;0
lowerTreesPreChildrenVisit;lowerTreesPreChildrenVisit(TR::Node *,TR::TreeTop *,vcount_t);OMR;CodeGenerator;0;0
lowerTreesPreTreeTopVisit;lowerTreesPreTreeTopVisit(TR::TreeTop *,vcount_t);OMR;CodeGenerator;0;0
lowerTreesPropagateBlockToNode;lowerTreesPropagateBlockToNode(TR::Node *);OMR;CodeGenerator;0;0
lowerTreesWalk;lowerTreesWalk(TR::Node *,TR::TreeTop *,vcount_t);OMR;CodeGenerator;0;0
machine;machine();OMR;CodeGenerator;0;0
mapAutosTo8ByteSlots;mapAutosTo8ByteSlots();OMR::X86;CodeGenerator;0;0
materializesHeapBase;materializesHeapBase();OMR;CodeGenerator;0;0
materializesHeapBase;materializesHeapBase();OMR::X86;CodeGenerator;0;0
materializesLargeConstants;materializesLargeConstants();OMR;CodeGenerator;0;0
methodEnterExitTracingEnabled;methodEnterExitTracingEnabled();OMR::X86;CodeGenerator;0;0
mulDecompositionCostIsJustified;mulDecompositionCostIsJustified(int,char [],char [],int64_t);OMR;CodeGenerator;0;0
multiplyIsDestructive;multiplyIsDestructive();OMR;CodeGenerator;0;0
mustGenerateSwitchToInterpreterPrePrologue;mustGenerateSwitchToInterpreterPrePrologue();OMR;CodeGenerator;0;0
needClassAndMethodPointerRelocations;needClassAndMethodPointerRelocations();OMR;CodeGenerator;0;0
needGuardSitesEvenWhenGuardRemoved;needGuardSitesEvenWhenGuardRemoved();OMR;CodeGenerator;0;0
needRelocationsForStatics;needRelocationsForStatics();OMR;CodeGenerator;0;0
needSpillTemp;needSpillTemp(class TR_LiveReference *,TR::Node *,TR::TreeTop *);OMR;CodeGenerator;0;0
needToAvoidCommoningInGRA;needToAvoidCommoningInGRA();OMR;CodeGenerator;0;0
needToAvoidCommoningInGRA;needToAvoidCommoningInGRA();OMR::X86;CodeGenerator;0;0
needsNormalizationBeforeShifts;needsNormalizationBeforeShifts();OMR;CodeGenerator;0;0
nodeCanBeFoldedIntoMemref;nodeCanBeFoldedIntoMemref(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;1
nodeIsFoldableMemOperand;nodeIsFoldableMemOperand(TR::Node *,TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR::X86;CodeGenerator;0;0
nodeMatches;nodeMatches(TR::Node *,TR::Node *,_Bool);OMR;CodeGenerator;0;0
nodeMayCauseException;nodeMayCauseException(TR::Node *);OMR;CodeGenerator;0;0
nodeResultARCount;nodeResultARCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;1
nodeResultConsumesNoRegisters;nodeResultConsumesNoRegisters(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;0
nodeResultFPRCount;nodeResultFPRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;1
nodeResultGPRCount;nodeResultGPRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;1
nodeResultGPRCount;nodeResultGPRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR::X86;CodeGenerator;0;1
nodeResultSSRCount;nodeResultSSRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;1
nodeResultVRFCount;nodeResultVRFCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;1
nodeWillBeRematerialized;nodeWillBeRematerialized(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;1
nopsAlsoProcessedByRelocations;nopsAlsoProcessedByRelocations();OMR::X86;CodeGenerator;0;0
opCodeIsNoOp;opCodeIsNoOp(TR::ILOpCode &);OMR;CodeGenerator;0;0
opCodeIsNoOpOnThisPlatform;opCodeIsNoOpOnThisPlatform(TR::ILOpCode &);OMR;CodeGenerator;0;0
opCodeIsNoOpOnThisPlatform;opCodeIsNoOpOnThisPlatform(TR::ILOpCode &);OMR::X86::AMD64;CodeGenerator;0;0
operator delete;operator delete(void *,size_t);OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;CodeGenerator;0;0
operator delete;operator delete(void *,TR::Region &);OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;CodeGenerator;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;CodeGenerator;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;CodeGenerator;0;0
operator new;operator new(size_t,TR::Region &);OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;CodeGenerator;0;0
operator=;operator=(class OMR::CodeGenerator &&);OMR;CodeGenerator;1;0
operator=;operator=(const class OMR::CodeGenerator &);OMR;CodeGenerator;1;0
operator=;operator=(class OMR::X86::CodeGenerator &&);OMR::X86;CodeGenerator;1;0
operator=;operator=(const class OMR::X86::CodeGenerator &);OMR::X86;CodeGenerator;1;0
operator=;operator=(const class OMR::X86::AMD64::CodeGenerator &);OMR::X86::AMD64;CodeGenerator;1;0
operator=;operator=(class OMR::X86::AMD64::CodeGenerator &&);OMR::X86::AMD64;CodeGenerator;1;0
operator=;operator=(const class TestCompiler::CodeGenerator &);TestCompiler;CodeGenerator;1;0
operator=;operator=(class TestCompiler::CodeGenerator &&);TestCompiler;CodeGenerator;1;0
operator=;operator=(class TR::CodeGenerator &&);TR;CodeGenerator;1;0
operator=;operator=(const class TR::CodeGenerator &);TR;CodeGenerator;1;0
patchableRangeNeedsAlignment;patchableRangeNeedsAlignment(void *,intptrj_t,intptrj_t,intptrj_t);OMR::X86;CodeGenerator;0;0
performNonLinearRegisterAssignmentAtBranch;performNonLinearRegisterAssignmentAtBranch(TR::X86LabelInstruction *,enum TR_RegisterKinds);OMR::X86;CodeGenerator;0;0
performsChecksExplicitly;performsChecksExplicitly();OMR;CodeGenerator;0;0
pickNOPRegister;pickNOPRegister(TR::Instruction *);OMR::X86;CodeGenerator;0;0
pickRegister;pickRegister(class TR_RegisterCandidate *,TR::Block **,class TR_BitVector &,TR_GlobalRegisterNumber &,TR_LinkHead<class TR_RegisterCandidate> *);OMR;CodeGenerator;0;0
postLowerTrees;postLowerTrees();OMR;CodeGenerator;0;0
preLowerTrees;preLowerTrees();OMR;CodeGenerator;0;0
prepareForGRA;prepareForGRA();OMR;CodeGenerator;0;0
prepareForNonLinearRegisterAssignmentAtMerge;prepareForNonLinearRegisterAssignmentAtMerge(TR::X86LabelInstruction *);OMR::X86;CodeGenerator;0;0
prepareNodeForInstructionSelection;prepareNodeForInstructionSelection(TR::Node *);OMR;CodeGenerator;0;0
prepareRegistersForAssignment;prepareRegistersForAssignment();OMR;CodeGenerator;0;0
processClobberingInstructions;processClobberingInstructions(TR::ClobberingInstruction *,TR::Instruction *);OMR::X86;CodeGenerator;0;0
processIncomingParameterUsage;processIncomingParameterUsage(class TR_BitVector **,int32_t);OMR;CodeGenerator;0;0
processIncomingParameterUsage;processIncomingParameterUsage(class TR_BitVector **,int32_t);OMR::X86;CodeGenerator;0;0
processInstruction;processInstruction(TR::Instruction *,class TR_BitVector **,int32_t &,int32_t &,_Bool);OMR;CodeGenerator;0;0
processInstruction;processInstruction(TR::Instruction *,class TR_BitVector **,int32_t &,int32_t &,_Bool);OMR::X86;CodeGenerator;0;0
processReference;processReference(TR::Node *,TR::Node *,TR::TreeTop *);OMR;CodeGenerator;0;0
processRelocations;processRelocations();OMR;CodeGenerator;0;0
profiledPointersRequireRelocation;profiledPointersRequireRelocation();OMR;CodeGenerator;0;0
propagateSignThroughBCDLeftShift;propagateSignThroughBCDLeftShift(TR::DataType);OMR;CodeGenerator;0;0
pushPreservedRegisters;pushPreservedRegisters();OMR::X86;CodeGenerator;0;0
reactivateDependentDiscardableRegisters;reactivateDependentDiscardableRegisters(TR::Register *);OMR::X86;CodeGenerator;0;0
recordSingleRegisterUse;recordSingleRegisterUse(TR::Register *);OMR;CodeGenerator;0;0
recursivelyDecReferenceCount;recursivelyDecReferenceCount(TR::Node *);OMR;CodeGenerator;0;0
registerAssumptions;registerAssumptions();OMR;CodeGenerator;0;0
remapGCIndicesInInternalPtrFormat;remapGCIndicesInInternalPtrFormat();OMR;CodeGenerator;0;0
rematerializeCmpUnderTernary;rematerializeCmpUnderTernary(TR::Node *);OMR;CodeGenerator;0;0
removeBetterSpillPlacementCandidate;removeBetterSpillPlacementCandidate(TR::RealRegister *);OMR::X86;CodeGenerator;0;0
removeLiveDiscardableRegister;removeLiveDiscardableRegister(TR::Register *);OMR::X86;CodeGenerator;0;0
removeRegisterHogsInLowerTreesWalk;removeRegisterHogsInLowerTreesWalk();OMR;CodeGenerator;0;0
removeUnavailableRegisters;removeUnavailableRegisters(class TR_RegisterCandidate *,TR::Block **,class TR_BitVector &);OMR;CodeGenerator;0;0
removeUnavailableRegisters;removeUnavailableRegisters(class TR_RegisterCandidate *,TR::Block **,class TR_BitVector &);OMR::X86;CodeGenerator;0;0
removeUnusedLocals;removeUnusedLocals();OMR;CodeGenerator;0;0
requiresCarry;requiresCarry();OMR;CodeGenerator;0;0
reserveCodeCache;reserveCodeCache();OMR;CodeGenerator;0;0
reserveNTrampolines;reserveNTrampolines(int32_t);OMR::X86;CodeGenerator;0;0
resetEnableBetterSpillPlacements;resetEnableBetterSpillPlacements();OMR::X86;CodeGenerator;0;0
resetEnableRegisterUsageTracking;resetEnableRegisterUsageTracking();OMR;CodeGenerator;0;0
resetEnableRematerialisation;resetEnableRematerialisation();OMR::X86;CodeGenerator;0;0
resetIsLeafMethod;resetIsLeafMethod();OMR;CodeGenerator;0;0
resetLiveRealRegisters;resetLiveRealRegisters(enum TR_RegisterKinds);OMR;CodeGenerator;0;0
resetMethodModifiedByRA;resetMethodModifiedByRA();OMR;CodeGenerator;0;0
resetRegisterAssignmentFlag;resetRegisterAssignmentFlag(enum TR_RegisterAssignmentFlagBits);OMR;CodeGenerator;0;0
resetRemoveRegisterHogsInLowerTreesWalk;resetRemoveRegisterHogsInLowerTreesWalk();OMR;CodeGenerator;0;0
resetSupportsVMThreadGRA;resetSupportsVMThreadGRA();OMR;CodeGenerator;0;0
resetTrackingInMemoryKilledLoads;resetTrackingInMemoryKilledLoads();OMR;CodeGenerator;0;0
resizeCodeMemory;resizeCodeMemory();OMR;CodeGenerator;0;0
saveBetterSpillPlacements;saveBetterSpillPlacements(TR::Instruction *);OMR::X86;CodeGenerator;0;0
saveOrRestoreRegisters;saveOrRestoreRegisters(class TR_BitVector *,TR::Instruction *,_Bool);OMR;CodeGenerator;0;0
self;self();OMR;CodeGenerator;0;0
setAccessStaticsIndirectly;setAccessStaticsIndirectly(_Bool);OMR;CodeGenerator;0;0
setAccumulatedInstructionLengthError;setAccumulatedInstructionLengthError(int32_t);OMR;CodeGenerator;0;0
setAheadOfTimeCompile;setAheadOfTimeCompile(TR::AheadOfTimeCompile *);OMR;CodeGenerator;0;0
setAlwaysUseTrampolines;setAlwaysUseTrampolines();OMR;CodeGenerator;0;0
setAppendInstruction;setAppendInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
setAssignmentDirection;setAssignmentDirection(RegisterAssignmentDirection);OMR::X86;CodeGenerator;0;0
setBinaryBufferCursor;setBinaryBufferCursor(uint8_t *);OMR;CodeGenerator;0;0
setBinaryBufferStart;setBinaryBufferStart(uint8_t *);OMR;CodeGenerator;0;0
setCodeCache;setCodeCache(TR::CodeCache *);OMR;CodeGenerator;0;0
setComputesCarry;setComputesCarry(_Bool);OMR;CodeGenerator;0;0
setConsiderAllAutosAsTacticalGlobalRegisterCandidates;setConsiderAllAutosAsTacticalGlobalRegisterCandidates();OMR;CodeGenerator;0;0
setCurrentBlock;setCurrentBlock(TR::Block *);OMR;CodeGenerator;0;0
setCurrentBlockIndex;setCurrentBlockIndex(int32_t);OMR;CodeGenerator;0;0
setCurrentEvaluationBlock;setCurrentEvaluationBlock(TR::Block *);OMR;CodeGenerator;0;0
setCurrentEvaluationTreeTop;setCurrentEvaluationTreeTop(TR::TreeTop *);OMR;CodeGenerator;0;0
setCurrentPathDepth;setCurrentPathDepth(int32_t);OMR;CodeGenerator;0;0
setDisableFpGRA;setDisableFpGRA();OMR;CodeGenerator;0;0
setDisableLongGRA;setDisableLongGRA();OMR;CodeGenerator;0;0
setDisableNullCheckOfArrayLength;setDisableNullCheckOfArrayLength();OMR;CodeGenerator;0;0
setEnableBetterSpillPlacements;setEnableBetterSpillPlacements();OMR::X86;CodeGenerator;0;0
setEnableImplicitDivideCheck;setEnableImplicitDivideCheck();OMR::X86;CodeGenerator;0;0
setEnableRefinedAliasSets;setEnableRefinedAliasSets();OMR;CodeGenerator;0;0
setEnableRegisterAssociations;setEnableRegisterAssociations();OMR::X86;CodeGenerator;0;0
setEnableRegisterInterferences;setEnableRegisterInterferences();OMR::X86;CodeGenerator;0;0
setEnableRegisterUsageTracking;setEnableRegisterUsageTracking();OMR;CodeGenerator;0;0
setEnableRegisterWeights;setEnableRegisterWeights();OMR::X86;CodeGenerator;0;0
setEnableRematerialisation;setEnableRematerialisation();OMR::X86;CodeGenerator;0;0
setEnableSinglePrecisionMethods;setEnableSinglePrecisionMethods();OMR::X86;CodeGenerator;0;0
setEnableTLHPrefetching;setEnableTLHPrefetching();OMR::X86;CodeGenerator;0;0
setEnforceStoreOrder;setEnforceStoreOrder();OMR;CodeGenerator;0;0
setEstimatedCodeLength;setEstimatedCodeLength(uint32_t);OMR;CodeGenerator;0;0
setEstimatedLocationsForDataSnippetLabels;setEstimatedLocationsForDataSnippetLabels(int32_t);OMR;CodeGenerator;0;0
setEstimatedLocationsForDataSnippetLabels;setEstimatedLocationsForDataSnippetLabels(int32_t);OMR::X86;CodeGenerator;0;0
setEstimatedLocationsForSnippetLabels;setEstimatedLocationsForSnippetLabels(int32_t);OMR;CodeGenerator;0;0
setEstimatedLocationsForTargetAddressSnippetLabels;setEstimatedLocationsForTargetAddressSnippetLabels(int32_t);OMR;CodeGenerator;0;0
setEstimatedSnippetStart;setEstimatedSnippetStart(int32_t);OMR;CodeGenerator;0;0
setEstimatedWarmLength;setEstimatedWarmLength(uint32_t);OMR;CodeGenerator;0;0
setExpandExponentiation;setExpandExponentiation();OMR;CodeGenerator;0;0
setFPRegisterIterator;setFPRegisterIterator(TR::RegisterIterator *);OMR;CodeGenerator;0;0
setFirstGlobalAR;setFirstGlobalAR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setFirstGlobalFPR;setFirstGlobalFPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setFirstGlobalHPR;setFirstGlobalHPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setFirstGlobalVRF;setFirstGlobalVRF(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setFirstInstruction;setFirstInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
setFirstOverlappedGlobalFPR;setFirstOverlappedGlobalFPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setFirstOverlappedGlobalVRF;setFirstOverlappedGlobalVRF(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setFirstTimeLiveOOLRegisterList;setFirstTimeLiveOOLRegisterList(TR::list<TR::Register *> *);OMR;CodeGenerator;0;0
setFrameSizeInBytes;setFrameSizeInBytes(int32_t);OMR;CodeGenerator;0;0
setGPRegisterIterator;setGPRegisterIterator(TR::RegisterIterator *);OMR;CodeGenerator;0;0
setGRACompleted;setGRACompleted();OMR;CodeGenerator;0;0
setGenerateMasmListingSyntax;setGenerateMasmListingSyntax();OMR::X86;CodeGenerator;0;0
setGlobalFPRPartitionLimit;setGlobalFPRPartitionLimit(uint8_t);OMR;CodeGenerator;0;0
setGlobalGPRPartitionLimit;setGlobalGPRPartitionLimit(uint8_t);OMR;CodeGenerator;0;0
setGlobalRegisterTable;setGlobalRegisterTable(uint32_t *);OMR;CodeGenerator;0;0
setHasCCCarry;setHasCCCarry(_Bool);OMR;CodeGenerator;0;0
setHasCCCompare;setHasCCCompare(_Bool);OMR;CodeGenerator;0;0
setHasCCInfo;setHasCCInfo(_Bool);OMR;CodeGenerator;0;0
setHasCCOverflow;setHasCCOverflow(_Bool);OMR;CodeGenerator;0;0
setHasCCSigned;setHasCCSigned(_Bool);OMR;CodeGenerator;0;0
setHasCCZero;setHasCCZero(_Bool);OMR;CodeGenerator;0;0
setHasDoubleWordAlignedStack;setHasDoubleWordAlignedStack();OMR;CodeGenerator;0;0
setHasResumableTrapHandler;setHasResumableTrapHandler();OMR;CodeGenerator;0;0
setImplicitExceptionPoint;setImplicitExceptionPoint(TR::Instruction *);OMR;CodeGenerator;0;0
setInlinedGetCurrentThreadMethod;setInlinedGetCurrentThreadMethod();OMR;CodeGenerator;0;0
setInstructionPatchAlignmentBoundary;setInstructionPatchAlignmentBoundary(int32_t);OMR::X86;CodeGenerator;0;0
setInternalControlFlowNestingDepth;setInternalControlFlowNestingDepth(int32_t);OMR;CodeGenerator;0;0
setInternalControlFlowSafeNestingDepth;setInternalControlFlowSafeNestingDepth(int32_t);OMR;CodeGenerator;0;0
setIsLeafMethod;setIsLeafMethod();OMR;CodeGenerator;0;0
setJNILinkageCalleeCleanup;setJNILinkageCalleeCleanup();OMR;CodeGenerator;0;0
setJitMethodEntryPaddingSize;setJitMethodEntryPaddingSize(uint32_t);OMR;CodeGenerator;0;0
setLargestOutgoingArgSize;setLargestOutgoingArgSize(uint32_t);OMR;CodeGenerator;0;0
setLast8BitGlobalGPR;setLast8BitGlobalGPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setLastCatchAppendInstruction;setLastCatchAppendInstruction(TR::Instruction *);OMR::X86;CodeGenerator;0;0
setLastGlobalAR;setLastGlobalAR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setLastGlobalFPR;setLastGlobalFPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setLastGlobalGPR;setLastGlobalGPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setLastGlobalHPR;setLastGlobalHPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setLastGlobalVRF;setLastGlobalVRF(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setLastInstructionBeforeCurrentEvaluationTreeTop;setLastInstructionBeforeCurrentEvaluationTreeTop(TR::Instruction *);OMR;CodeGenerator;0;0
setLastOverlappedGlobalFPR;setLastOverlappedGlobalFPR(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setLastOverlappedGlobalVRF;setLastOverlappedGlobalVRF(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setLinkage;setLinkage(enum TR_LinkageConventions,TR::Linkage *);OMR;CodeGenerator;0;0
setLinkage;setLinkage(TR::Linkage *);OMR;CodeGenerator;0;0
setLiveButMaybeUnreferencedLocals;setLiveButMaybeUnreferencedLocals(class TR_BitVector *);OMR;CodeGenerator;0;0
setLiveLocals;setLiveLocals(class TR_BitVector *);OMR;CodeGenerator;0;0
setLiveRegisters;setLiveRegisters(class TR_LiveRegisters *,enum TR_RegisterKinds);OMR;CodeGenerator;0;0
setLmmdFailed;setLmmdFailed();OMR;CodeGenerator;0;0
setLocalsIG;setLocalsIG(class TR_InterferenceGraph *);OMR;CodeGenerator;0;0
setLowestCommonCodePatchingAlignmentBoundary;setLowestCommonCodePatchingAlignmentBoundary(int32_t);OMR::X86;CodeGenerator;0;0
setLowestSavedRegister;setLowestSavedRegister(int32_t);OMR;CodeGenerator;0;0
setMapAutosTo8ByteSlots;setMapAutosTo8ByteSlots();OMR::X86;CodeGenerator;0;0
setMappingAutomatics;setMappingAutomatics();OMR;CodeGenerator;0;0
setMethodContainsBinaryCodedDecimal;setMethodContainsBinaryCodedDecimal();OMR;CodeGenerator;0;0
setMethodEnterExitTracingEnabled;setMethodEnterExitTracingEnabled();OMR::X86;CodeGenerator;0;0
setMethodModifiedByRA;setMethodModifiedByRA();OMR;CodeGenerator;0;0
setMethodStackMap;setMethodStackMap(class TR_GCStackMap *);OMR;CodeGenerator;0;0
setMultiplyIsDestructive;setMultiplyIsDestructive();OMR;CodeGenerator;0;0
setNextAvailableBlockIndex;setNextAvailableBlockIndex(int32_t);OMR;CodeGenerator;0;0
setOnDemandLiteralPoolRun;setOnDemandLiteralPoolRun(_Bool);OMR;CodeGenerator;0;0
setOptimizationPhaseIsComplete;setOptimizationPhaseIsComplete();OMR;CodeGenerator;0;0
setOverlapOffsetBetweenAliasedGRNs;setOverlapOffsetBetweenAliasedGRNs(TR_GlobalRegisterNumber);OMR;CodeGenerator;0;0
setPerformsChecksExplicitly;setPerformsChecksExplicitly();OMR;CodeGenerator;0;0
setPicSlotCount;setPicSlotCount(int32_t);OMR::X86;CodeGenerator;0;0
setPreJitMethodEntrySize;setPreJitMethodEntrySize(uint32_t);OMR;CodeGenerator;0;0
setPrePrologueSize;setPrePrologueSize(uint32_t);OMR;CodeGenerator;0;0
setPreservedRegsInPrologue;setPreservedRegsInPrologue(class TR_BitVector *);OMR;CodeGenerator;0;0
setPushPreservedRegisters;setPushPreservedRegisters();OMR::X86;CodeGenerator;0;0
setRealVMThreadRegister;setRealVMThreadRegister(TR::RealRegister *);OMR;CodeGenerator;0;0
setReferencedRegisterList;setReferencedRegisterList(TR::list<OMR::RegisterUsage *> *);OMR;CodeGenerator;0;0
setRegisterAssignmentFlag;setRegisterAssignmentFlag(enum TR_RegisterAssignmentFlagBits);OMR;CodeGenerator;0;0
setRegisterSaveDescription;setRegisterSaveDescription(int32_t);OMR;CodeGenerator;0;0
setRemoveRegisterHogsInLowerTreesWalk;setRemoveRegisterHogsInLowerTreesWalk();OMR;CodeGenerator;0;0
setRequiresCarry;setRequiresCarry(_Bool);OMR;CodeGenerator;0;0
setShouldBuildStructure;setShouldBuildStructure();OMR;CodeGenerator;0;0
setShrinkWrappingDone;setShrinkWrappingDone();OMR;CodeGenerator;0;0
setSpilledRegisterList;setSpilledRegisterList(TR::list<TR::Register *> *);OMR;CodeGenerator;0;0
setSpilledRegsForAllPresentLinkages;setSpilledRegsForAllPresentLinkages(class TR_BitVector *,struct OMR::CodeGenerator::TR_RegisterPressureSummary &,enum TR_SpillKinds);OMR;CodeGenerator;0;0
setSpillsFPRegistersAcrossCalls;setSpillsFPRegistersAcrossCalls();OMR;CodeGenerator;0;0
setStackAtlas;setStackAtlas(TR::GCStackAtlas *);OMR;CodeGenerator;0;0
setSupportsAlignedAccessOnly;setSupportsAlignedAccessOnly();OMR;CodeGenerator;0;0
setSupportsArrayCmp;setSupportsArrayCmp();OMR;CodeGenerator;0;0
setSupportsArrayCmpSign;setSupportsArrayCmpSign();OMR;CodeGenerator;0;0
setSupportsArraySet;setSupportsArraySet();OMR;CodeGenerator;0;0
setSupportsArrayTranslateAndTest;setSupportsArrayTranslateAndTest();OMR;CodeGenerator;0;0
setSupportsArrayTranslateTROT;setSupportsArrayTranslateTROT();OMR;CodeGenerator;0;0
setSupportsArrayTranslateTROTNoBreak;setSupportsArrayTranslateTROTNoBreak();OMR;CodeGenerator;0;0
setSupportsArrayTranslateTRTO;setSupportsArrayTranslateTRTO();OMR;CodeGenerator;0;0
setSupportsArrayTranslateTRTO255;setSupportsArrayTranslateTRTO255();OMR;CodeGenerator;0;0
setSupportsArrayTranslateTRxx;setSupportsArrayTranslateTRxx();OMR;CodeGenerator;0;0
setSupportsAtomicLoadAndAdd;setSupportsAtomicLoadAndAdd();OMR;CodeGenerator;0;0
setSupportsAutoSIMD;setSupportsAutoSIMD();OMR;CodeGenerator;0;0
setSupportsBCDToDFPReduction;setSupportsBCDToDFPReduction();OMR;CodeGenerator;0;0
setSupportsBDLLHardwareOverflowCheck;setSupportsBDLLHardwareOverflowCheck();OMR;CodeGenerator;0;0
setSupportsBigDecimalLongLookasideVersioning;setSupportsBigDecimalLongLookasideVersioning();OMR;CodeGenerator;0;0
setSupportsCompactedLocals;setSupportsCompactedLocals();OMR;CodeGenerator;0;0
setSupportsConstantOffsetInAddressing;setSupportsConstantOffsetInAddressing();OMR;CodeGenerator;0;0
setSupportsCurrentTimeMaxPrecision;setSupportsCurrentTimeMaxPrecision();OMR;CodeGenerator;0;0
setSupportsDirectJNICalls;setSupportsDirectJNICalls();OMR;CodeGenerator;0;0
setSupportsDivCheck;setSupportsDivCheck();OMR;CodeGenerator;0;0
setSupportsDoubleWordCAS;setSupportsDoubleWordCAS();OMR;CodeGenerator;0;0
setSupportsDoubleWordSet;setSupportsDoubleWordSet();OMR;CodeGenerator;0;0
setSupportsEfficientNarrowIntComputation;setSupportsEfficientNarrowIntComputation();OMR;CodeGenerator;0;0
setSupportsEfficientNarrowUnsignedIntComputation;setSupportsEfficientNarrowUnsignedIntComputation();OMR;CodeGenerator;0;0
setSupportsFastCTM;setSupportsFastCTM();OMR;CodeGenerator;0;0
setSupportsFastPackedDFPConversions;setSupportsFastPackedDFPConversions();OMR;CodeGenerator;0;0
setSupportsGlRegDepOnFirstBlock;setSupportsGlRegDepOnFirstBlock();OMR;CodeGenerator;0;0
setSupportsGlRegDeps;setSupportsGlRegDeps();OMR;CodeGenerator;0;0
setSupportsIDivAndIRemWithThreeChildren;setSupportsIDivAndIRemWithThreeChildren();OMR;CodeGenerator;0;0
setSupportsInlinedAtomicLongVolatiles;setSupportsInlinedAtomicLongVolatiles();OMR;CodeGenerator;0;0
setSupportsInliningOfTypeCoersionMethods;setSupportsInliningOfTypeCoersionMethods();OMR;CodeGenerator;0;0
setSupportsIntDFPConversions;setSupportsIntDFPConversions();OMR;CodeGenerator;0;0
setSupportsJavaFloatSemantics;setSupportsJavaFloatSemantics();OMR;CodeGenerator;0;0
setSupportsLDivAndLRemWithThreeChildren;setSupportsLDivAndLRemWithThreeChildren();OMR;CodeGenerator;0;0
setSupportsLM;setSupportsLM();OMR;CodeGenerator;0;0
setSupportsLoweringConstIDiv;setSupportsLoweringConstIDiv();OMR;CodeGenerator;0;0
setSupportsLoweringConstLDiv;setSupportsLoweringConstLDiv();OMR;CodeGenerator;0;0
setSupportsLoweringConstLDivPower2;setSupportsLoweringConstLDivPower2();OMR;CodeGenerator;0;0
setSupportsMergedAllocations;setSupportsMergedAllocations();OMR;CodeGenerator;0;0
setSupportsNewInstanceImplOpt;setSupportsNewInstanceImplOpt();OMR;CodeGenerator;0;0
setSupportsPartialInlineOfMethodHooks;setSupportsPartialInlineOfMethodHooks();OMR;CodeGenerator;0;0
setSupportsPostProcessArrayCopy;setSupportsPostProcessArrayCopy();OMR;CodeGenerator;0;0
setSupportsPrimitiveArrayCopy;setSupportsPrimitiveArrayCopy();OMR;CodeGenerator;0;0
setSupportsProfiledInlining;setSupportsProfiledInlining();OMR;CodeGenerator;0;0
setSupportsReadOnlyLocks;setSupportsReadOnlyLocks();OMR;CodeGenerator;0;0
setSupportsReferenceArrayCopy;setSupportsReferenceArrayCopy();OMR;CodeGenerator;0;0
setSupportsReverseLoadAndStore;setSupportsReverseLoadAndStore();OMR;CodeGenerator;0;0
setSupportsRuntimeInstrumentation;setSupportsRuntimeInstrumentation();OMR;CodeGenerator;0;0
setSupportsScaledIndexAddressing;setSupportsScaledIndexAddressing();OMR;CodeGenerator;0;0
setSupportsSearchCharString;setSupportsSearchCharString();OMR;CodeGenerator;0;0
setSupportsShrinkWrapping;setSupportsShrinkWrapping();OMR;CodeGenerator;0;0
setSupportsStackAllocationOfArraylets;setSupportsStackAllocationOfArraylets();OMR;CodeGenerator;0;0
setSupportsTM;setSupportsTM();OMR;CodeGenerator;0;0
setSupportsTMDoubleWordCASORSet;setSupportsTMDoubleWordCASORSet();OMR;CodeGenerator;0;0
setSupportsTMHashMapAndLinkedQueue;setSupportsTMHashMapAndLinkedQueue();OMR;CodeGenerator;0;0
setSupportsTestCharComparisonControl;setSupportsTestCharComparisonControl();OMR;CodeGenerator;0;0
setSupportsTestUnderMask;setSupportsTestUnderMask();OMR;CodeGenerator;0;0
setSupportsTranslateAndTestCharString;setSupportsTranslateAndTestCharString();OMR;CodeGenerator;0;0
setSupportsVMThreadGRA;setSupportsVMThreadGRA();OMR;CodeGenerator;0;0
setSupportsVectorRegisters;setSupportsVectorRegisters();OMR;CodeGenerator;0;0
setSupportsVirtualGuardNOPing;setSupportsVirtualGuardNOPing();OMR;CodeGenerator;0;0
setSupportsZonedDFPConversions;setSupportsZonedDFPConversions();OMR;CodeGenerator;0;0
setSwitchToInterpreterLabel;setSwitchToInterpreterLabel(TR::LabelSymbol *);OMR::X86;CodeGenerator;0;0
setTargetSupportsSoftwarePrefetches;setTargetSupportsSoftwarePrefetches();OMR::X86;CodeGenerator;0;0
setTrackingInMemoryKilledLoads;setTrackingInMemoryKilledLoads();OMR;CodeGenerator;0;0
setUnavailableRegistersUsage;setUnavailableRegistersUsage(TR_Array<class TR_BitVector> &,TR_Array<class TR_BitVector> &);OMR;CodeGenerator;0;0
setUpForInstructionSelection;setUpForInstructionSelection();OMR;CodeGenerator;0;0
setUpStackSizeForCallNode;setUpStackSizeForCallNode(TR::Node *);OMR;CodeGenerator;0;0
setUseGPRsForWin32CTMConversion;setUseGPRsForWin32CTMConversion();OMR::X86;CodeGenerator;0;0
setUseLongDivideHelperForWin32CTMConversion;setUseLongDivideHelperForWin32CTMConversion();OMR::X86;CodeGenerator;0;0
setUseNonLinearRegisterAssigner;setUseNonLinearRegisterAssigner();OMR;CodeGenerator;0;0
setUseSSEForDoublePrecision;setUseSSEForDoublePrecision();OMR::X86;CodeGenerator;0;0
setUseSSEForSinglePrecision;setUseSSEForSinglePrecision();OMR::X86;CodeGenerator;0;0
setUsesLoadStoreMultiple;setUsesLoadStoreMultiple();OMR;CodeGenerator;0;0
setUsesRegisterMaps;setUsesRegisterMaps();OMR;CodeGenerator;0;0
setUsesRegisterPairsForLongs;setUsesRegisterPairsForLongs();OMR;CodeGenerator;0;0
setVFPState;setVFPState(const struct TR_VFPState &);OMR::X86;CodeGenerator;0;0
setVMThreadRegister;setVMThreadRegister(TR::Register *);OMR;CodeGenerator;0;0
setVMThreadRequired;setVMThreadRequired(_Bool);OMR;CodeGenerator;0;0
setVMThreadSpillInstruction;setVMThreadSpillInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
setX87RegisterIterator;setX87RegisterIterator(TR::RegisterIterator *);OMR::X86;CodeGenerator;0;0
setXMMDoubleLoadOpCode;setXMMDoubleLoadOpCode(enum TR_X86OpCodes);OMR::X86;CodeGenerator;0;0
shortClobberEvaluate;shortClobberEvaluate(TR::Node *);OMR::X86;CodeGenerator;0;0
shouldBuildStructure;shouldBuildStructure();OMR;CodeGenerator;0;0
shouldValueBeInACommonedNode;shouldValueBeInACommonedNode(int64_t);OMR;CodeGenerator;0;0
shouldYankCompressedRefs;shouldYankCompressedRefs();OMR;CodeGenerator;0;0
shutdown;shutdown(class TR_FrontEnd *,TR::FILE *);OMR;CodeGenerator;0;0
simulateBlockEvaluation;simulateBlockEvaluation(TR::Block *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);OMR;CodeGenerator;0;0
simulateDecReferenceCount;simulateDecReferenceCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;0
simulateMemoryReference;simulateMemoryReference(struct OMR::CodeGenerator::TR_SimulatedMemoryReference *,TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);OMR;CodeGenerator;0;0
simulateNodeEvaluation;simulateNodeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);OMR;CodeGenerator;0;1
simulateNodeEvaluation;simulateNodeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);OMR::X86;CodeGenerator;0;1
simulateNodeGoingDead;simulateNodeGoingDead(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;0
simulateNodeGoingLive;simulateNodeGoingLive(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;0
simulateNodeInitialization;simulateNodeInitialization(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;0
simulateSkippedTreeEvaluation;simulateSkippedTreeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *,char);OMR;CodeGenerator;0;0
simulateTreeEvaluation;simulateTreeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);OMR;CodeGenerator;0;0
simulatedNodeState;simulatedNodeState(TR::Node *);OMR;CodeGenerator;0;0
simulatedNodeState;simulatedNodeState(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);OMR;CodeGenerator;0;0
simulationPrePass;simulationPrePass(TR::TreeTop *,TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);OMR;CodeGenerator;0;0
sizeOfInstructionToBePatched;sizeOfInstructionToBePatched(TR::Instruction *);OMR;CodeGenerator;0;0
sizeOfInstructionToBePatchedHCRGuard;sizeOfInstructionToBePatchedHCRGuard(TR::Instruction *);OMR;CodeGenerator;0;0
spillsFPRegistersAcrossCalls;spillsFPRegistersAcrossCalls();OMR;CodeGenerator;0;0
splitBlockEntry;splitBlockEntry(TR::Instruction *);OMR;CodeGenerator;0;0
splitBlockEntry;splitBlockEntry(TR::Instruction *);OMR::X86;CodeGenerator;0;0
splitEdge;splitEdge(TR::Instruction *,_Bool,_Bool,TR::Instruction *,TR::list<TR::Instruction *> *,_Bool);OMR;CodeGenerator;0;0
splitEdge;splitEdge(TR::Instruction *,_Bool,_Bool,TR::Instruction *,TR::list<TR::Instruction *> *,_Bool);OMR::X86;CodeGenerator;0;0
startInternalControlFlow;startInternalControlFlow(TR::Instruction *);OMR;CodeGenerator;0;0
startRecordingRegisterUsage;startRecordingRegisterUsage();OMR;CodeGenerator;0;0
startUsingRegister;startUsingRegister(TR::Register *);OMR;CodeGenerator;0;0
stopRecordingRegisterUsage;stopRecordingRegisterUsage();OMR;CodeGenerator;0;0
stopUsingRegister;stopUsingRegister(TR::Register *);OMR;CodeGenerator;0;0
storageMayOverlap;storageMayOverlap(TR::Node *,size_t,TR::Node *,size_t);OMR;CodeGenerator;0;0
supportVMInternalNatives;supportVMInternalNatives();OMR;CodeGenerator;0;0
supports32bitAiadd;supports32bitAiadd();OMR;CodeGenerator;0;0
supportsAddressRematerialization;supportsAddressRematerialization();OMR::X86;CodeGenerator;0;0
supportsAtomicAdd;supportsAtomicAdd();OMR;CodeGenerator;0;0
supportsAtomicAdd;supportsAtomicAdd();OMR::X86;CodeGenerator;0;0
supportsCMOV;supportsCMOV();OMR::X86;CodeGenerator;0;0
supportsComplexAddressing;supportsComplexAddressing();OMR;CodeGenerator;0;0
supportsComplexAddressing;supportsComplexAddressing();OMR::X86;CodeGenerator;0;0
supportsConstantRematerialization;supportsConstantRematerialization();OMR::X86;CodeGenerator;0;0
supportsDebugCounters;supportsDebugCounters(TR::DebugCounterInjectionPoint);OMR;CodeGenerator;0;0
supportsDebugCounters;supportsDebugCounters(TR::DebugCounterInjectionPoint);OMR::X86;CodeGenerator;0;0
supportsDirectIntegralLoadStoresFromLiteralPool;supportsDirectIntegralLoadStoresFromLiteralPool();OMR;CodeGenerator;0;0
supportsDirectJNICallsForAOT;supportsDirectJNICallsForAOT();OMR;CodeGenerator;0;0
supportsDirectJNICallsForAOT;supportsDirectJNICallsForAOT();OMR::X86;CodeGenerator;0;0
supportsFS0VMThreadRematerialization;supportsFS0VMThreadRematerialization();OMR::X86;CodeGenerator;0;0
supportsFastPackedDFPConversions;supportsFastPackedDFPConversions();OMR;CodeGenerator;0;0
supportsFusedMultiplyAdd;supportsFusedMultiplyAdd();OMR;CodeGenerator;0;0
supportsHighWordFacility;supportsHighWordFacility();OMR;CodeGenerator;0;0
supportsIndirectMemoryRematerialization;supportsIndirectMemoryRematerialization();OMR::X86;CodeGenerator;0;0
supportsInliningOfIsInstance;supportsInliningOfIsInstance();OMR;CodeGenerator;0;0
supportsInliningOfIsInstance;supportsInliningOfIsInstance();OMR::X86;CodeGenerator;0;0
supportsIntDFPConversions;supportsIntDFPConversions();OMR;CodeGenerator;0;0
supportsInternalPointers;supportsInternalPointers();OMR;CodeGenerator;0;0
supportsLengthMinusOneForMemoryOpts;supportsLengthMinusOneForMemoryOpts();OMR;CodeGenerator;0;0
supportsLocalMemoryRematerialization;supportsLocalMemoryRematerialization();OMR::X86;CodeGenerator;0;0
supportsLongRegAllocation;supportsLongRegAllocation();OMR;CodeGenerator;0;0
supportsMergingGuards;supportsMergingGuards();OMR;CodeGenerator;0;0
supportsMergingGuards;supportsMergingGuards();OMR::X86;CodeGenerator;0;0
supportsMethodEntryPadding;supportsMethodEntryPadding();OMR;CodeGenerator;0;0
supportsNativeLongOperations;supportsNativeLongOperations();OMR;CodeGenerator;0;0
supportsNegativeFusedMultiplyAdd;supportsNegativeFusedMultiplyAdd();OMR;CodeGenerator;0;0
supportsOnDemandLiteralPool;supportsOnDemandLiteralPool();OMR;CodeGenerator;0;0
supportsPassThroughCopyToNewVirtualRegister;supportsPassThroughCopyToNewVirtualRegister();OMR;CodeGenerator;0;0
supportsPassThroughCopyToNewVirtualRegister;supportsPassThroughCopyToNewVirtualRegister();OMR::X86;CodeGenerator;0;0
supportsSinglePrecisionSQRT;supportsSinglePrecisionSQRT();OMR;CodeGenerator;0;0
supportsSinglePrecisionSQRT;supportsSinglePrecisionSQRT();OMR::X86;CodeGenerator;0;0
supportsStaticMemoryRematerialization;supportsStaticMemoryRematerialization();OMR::X86;CodeGenerator;0;0
supportsTrapsInTMRegion;supportsTrapsInTMRegion();OMR;CodeGenerator;0;0
supportsUnneededLabelRemoval;supportsUnneededLabelRemoval();OMR;CodeGenerator;0;0
supportsXMMRRematerialization;supportsXMMRRematerialization();OMR::X86;CodeGenerator;0;0
supportsZonedDFPConversions;supportsZonedDFPConversions();OMR;CodeGenerator;0;0
suppressInliningOfRecognizedMethod;suppressInliningOfRecognizedMethod(TR::RecognizedMethod);OMR;CodeGenerator;0;0
symRefTab;symRefTab();OMR;CodeGenerator;0;0
syncCode;syncCode(uint8_t *,uint32_t);OMR;CodeGenerator;0;0
targetSupportsSoftwarePrefetches;targetSupportsSoftwarePrefetches();OMR::X86;CodeGenerator;0;0
terseSimulateTreeEvaluation;terseSimulateTreeEvaluation();OMR;CodeGenerator;0;0
testAnyRegisterAssignmentFlags;testAnyRegisterAssignmentFlags(enum TR_RegisterAssignmentFlagBits);OMR;CodeGenerator;0;0
toggleIsInOOLSection;toggleIsInOOLSection();OMR;CodeGenerator;0;0
trHeapMemory;trHeapMemory();OMR;CodeGenerator;0;0
trMemory;trMemory();OMR;CodeGenerator;0;0
trPersistentMemory;trPersistentMemory();OMR;CodeGenerator;0;0
trStackMemory;trStackMemory();OMR;CodeGenerator;0;0
traceBCDCodeGen;traceBCDCodeGen();OMR;CodeGenerator;0;0
traceBCDEntry;traceBCDEntry(char *,TR::Node *);OMR;CodeGenerator;0;0
traceBCDExit;traceBCDExit(char *,TR::Node *);OMR;CodeGenerator;0;0
tracePostRAInstruction;tracePostRAInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
tracePreRAInstruction;tracePreRAInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
traceRAInstruction;traceRAInstruction(TR::Instruction *);OMR;CodeGenerator;0;0
traceRegAssigned;traceRegAssigned(TR::Register *,TR::Register *);OMR;CodeGenerator;0;0
traceRegAssigned;traceRegAssigned(TR::Register *,TR::Register *,TR_RegisterAssignmentFlags);OMR;CodeGenerator;0;0
traceRegFreed;traceRegFreed(TR::Register *,TR::Register *);OMR;CodeGenerator;0;0
traceRegInterference;traceRegInterference(TR::Register *,TR::Register *,int32_t);OMR;CodeGenerator;0;0
traceRegWeight;traceRegWeight(TR::Register *,uint32_t);OMR;CodeGenerator;0;0
traceRegisterAssignment;traceRegisterAssignment(const char *);OMR;CodeGenerator;0;0
traceSimulateTreeEvaluation;traceSimulateTreeEvaluation();OMR;CodeGenerator;0;0
trackingInMemoryKilledLoads;trackingInMemoryKilledLoads();OMR;CodeGenerator;0;0
treeContainsCall;treeContainsCall(TR::TreeTop *);OMR;CodeGenerator;0;0
uncommonCallConstNodes;uncommonCallConstNodes();OMR;CodeGenerator;0;0
uniqueAddressOccurrence;uniqueAddressOccurrence(TR::Node *,TR::Node *,_Bool);OMR;CodeGenerator;0;0
unlockFreeSpillList;unlockFreeSpillList();OMR;CodeGenerator;0;0
updateSnippetMapWithRSD;updateSnippetMapWithRSD(TR::Instruction *,int32_t);OMR;CodeGenerator;0;0
updateSnippetMapWithRSD;updateSnippetMapWithRSD(TR::Instruction *,int32_t);OMR::X86;CodeGenerator;0;0
use64BitRegsOn32Bit;use64BitRegsOn32Bit();OMR;CodeGenerator;0;0
useClobberEvaluate;useClobberEvaluate();OMR;CodeGenerator;0;0
useGPRsForWin32CTMConversion;useGPRsForWin32CTMConversion();OMR::X86;CodeGenerator;0;0
useLongDivideHelperForWin32CTMConversion;useLongDivideHelperForWin32CTMConversion();OMR::X86;CodeGenerator;0;0
useOldArrayTranslateMinimumNumberOfIterations;useOldArrayTranslateMinimumNumberOfIterations();OMR;CodeGenerator;0;0
useSSEFor;useSSEFor(TR::DataType);OMR::X86;CodeGenerator;0;0
useSSEForDoublePrecision;useSSEForDoublePrecision();OMR::X86;CodeGenerator;0;0
useSSEForSingleAndDoublePrecision;useSSEForSingleAndDoublePrecision();OMR::X86;CodeGenerator;0;0
useSSEForSinglePrecision;useSSEForSinglePrecision();OMR::X86;CodeGenerator;0;0
usesImplicit64BitGPRs;usesImplicit64BitGPRs(TR::Node *);OMR;CodeGenerator;0;0
usesRegisterMaps;usesRegisterMaps();OMR;CodeGenerator;0;0
usesRegisterPairsForLongs;usesRegisterPairsForLongs();OMR;CodeGenerator;0;0
vfpResetInstruction;vfpResetInstruction();OMR::X86;CodeGenerator;0;0
vfpState;vfpState();OMR::X86;CodeGenerator;0;0
vrfCount;vrfCount(TR::DataType);OMR;CodeGenerator;0;0
wantToPatchClassPointer;wantToPatchClassPointer(const class TR_OpaqueClassBlock *,const uint8_t *);OMR;CodeGenerator;0;0
wantToPatchClassPointer;wantToPatchClassPointer(const class TR_OpaqueClassBlock *,const TR::Node *);OMR;CodeGenerator;0;0
whichChildToEvaluate;whichChildToEvaluate(TR::Node *);OMR;CodeGenerator;0;0
whichNodeToEvaluate;whichNodeToEvaluate(TR::Node *,TR::Node *);OMR;CodeGenerator;0;0
willBeEvaluatedAsCallByCodeGen;willBeEvaluatedAsCallByCodeGen(TR::Node *,TR::Compilation *);OMR;CodeGenerator;0;1
willBeEvaluatedAsCallByCodeGen;willBeEvaluatedAsCallByCodeGen(TR::Node *,TR::Compilation *);OMR::X86;CodeGenerator;0;1
yankIndexScalingOp;yankIndexScalingOp();OMR;CodeGenerator;0;0
zeroOutAutoOnEdge;zeroOutAutoOnEdge(TR::SymbolReference *,TR::Block *,TR::Block *,TR::list<TR::Block *> *,TR_ScratchList<TR::Node> *);OMR;CodeGenerator;0;0
~CodeGenerator;~CodeGenerator();OMR;CodeGenerator;1;0
~CodeGenerator;~CodeGenerator();OMR::X86;CodeGenerator;1;0
~CodeGenerator;~CodeGenerator();OMR::X86::AMD64;CodeGenerator;1;0
~CodeGenerator;~CodeGenerator();TestCompiler;CodeGenerator;1;0
~CodeGenerator;~CodeGenerator();TR;CodeGenerator;1;0
AddCopyPropagationRematerializationCandidate;AddCopyPropagationRematerializationCandidate(TR::SymbolReference *);OMR;Compilation;0;0
Compilation;Compilation(int32_t,OMR_VMThread *,class TR_FrontEnd *,class TR_ResolvedMethod *,TR::IlGenRequest &,TR::Options &,TR::Region &,class TR_Memory *,class TR_OptimizationPlan *);OMR;Compilation;0;0
Compilation;Compilation(int32_t,OMR_VMThread *,class TR_FrontEnd *,class TR_ResolvedMethod *,TR::IlGenRequest &,TR::Options &,TR::Region &,class TR_Memory *,class TR_OptimizationPlan *);TR;Compilation;0;0
Compilation;Compilation(class OMR::Compilation &);OMR;Compilation;1;0
IsCopyPropagationRematerializationCandidate;IsCopyPropagationRematerializationCandidate(TR::SymbolReference *);OMR;Compilation;0;0
RemoveCopyPropagationRematerializationCandidate;RemoveCopyPropagationRematerializationCandidate(TR::SymbolReference *);OMR;Compilation;0;0
addGenILSym;addGenILSym(TR::ResolvedMethodSymbol *);OMR;Compilation;0;0
addOwningMethod;addOwningMethod(TR::ResolvedMethodSymbol *);OMR;Compilation;0;0
addPeekingArgInfo;addPeekingArgInfo(struct TR_PeekingArgInfo *);OMR;Compilation;0;0
addVirtualGuard;addVirtualGuard(class TR_VirtualGuard *);OMR;Compilation;0;0
adhocRandom;adhocRandom();OMR;Compilation;0;0
adjustInlineDepth;adjustInlineDepth(TR_ByteCodeInfo &);OMR;Compilation;0;0
aliasRegion;aliasRegion();OMR;Compilation;0;0
allocateAtThisOptLevel;allocateAtThisOptLevel();OMR;Compilation;0;0
allocator;allocator(const char *);OMR;Compilation;0;0
allowRecompilation;allowRecompilation();OMR;Compilation;0;0
areSlotsSharedByRefAndNonRef;areSlotsSharedByRefAndNonRef();OMR;Compilation;0;0
arenaAllocator;arenaAllocator();OMR;Compilation;0;0
canAffordOSRControlFlow;canAffordOSRControlFlow();OMR;Compilation;0;0
canTransformUnsafeCopyToArrayCopy;canTransformUnsafeCopyToArrayCopy();OMR;Compilation;0;0
canTransformUnsafeSetMemory;canTransformUnsafeSetMemory();OMR;Compilation;0;0
cannotAttemptOSRDuring;cannotAttemptOSRDuring(uint32_t);OMR;Compilation;0;0
cg;cg();OMR;Compilation;0;0
compilationShouldBeInterrupted;compilationShouldBeInterrupted(enum TR_CallingContext);OMR;Compilation;0;0
compile;compile();OMR;Compilation;0;0
compileRelocatableCode;compileRelocatableCode();OMR;Compilation;0;0
containsBigDecimalLoad;containsBigDecimalLoad();OMR;Compilation;0;0
convertNonDeterministicInput;convertNonDeterministicInput(int32_t,int32_t,class TR_RandomGenerator *,int32_t,_Bool);OMR;Compilation;0;0
couldBeRecompiled;couldBeRecompiled();OMR;Compilation;0;0
createAOTGuard;createAOTGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *,enum TR_VirtualGuardKind);OMR;Compilation;0;0
createAOTInliningGuard;createAOTInliningGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *,enum TR_VirtualGuardKind);OMR;Compilation;0;0
createDevirtualizedCall;createDevirtualizedCall(TR::Node *,class TR_OpaqueClassBlock *);OMR;Compilation;0;0
createDummyGuard;createDummyGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *);OMR;Compilation;0;0
createDummyOrSideEffectGuard;createDummyOrSideEffectGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *);OMR;Compilation;0;0
createJittedMethodSymbol;createJittedMethodSymbol(class TR_ResolvedMethod *);OMR;Compilation;0;0
createSideEffectGuard;createSideEffectGuard(TR::Compilation *,TR::Node *,TR::TreeTop *);OMR;Compilation;0;0
decInlineDepth;decInlineDepth(_Bool);OMR;Compilation;0;0
diagnosticImpl;diagnosticImpl(const char *);OMR;Compilation;0;0
diagnosticImplVA;diagnosticImplVA(const char *,va_list);OMR;Compilation;0;0
dumpFlowGraph;dumpFlowGraph(TR::CFG *);OMR;Compilation;0;0
dumpMethodGraph;dumpMethodGraph(int,TR::ResolvedMethodSymbol *);OMR;Compilation;0;0
dumpMethodTrees;dumpMethodTrees(char *,const char *,TR::ResolvedMethodSymbol *);OMR;Compilation;0;0
dumpMethodTrees;dumpMethodTrees(char *,TR::ResolvedMethodSymbol *);OMR;Compilation;0;0
externalName;externalName();OMR;Compilation;0;0
fe;fe();OMR;Compilation;0;0
findDevirtualizedCall;findDevirtualizedCall(TR::Node *);OMR;Compilation;0;0
findExtraPrefetchInfo;findExtraPrefetchInfo(TR::Node *,_Bool);OMR;Compilation;0;0
findLastTree;findLastTree();OMR;Compilation;0;0
findOrCreateDebug;findOrCreateDebug();OMR;Compilation;0;0
findOrCreateDevirtualizedCall;findOrCreateDevirtualizedCall(TR::Node *,class TR_OpaqueClassBlock *);OMR;Compilation;0;0
findPrefetchInfo;findPrefetchInfo(TR::Node *);OMR;Compilation;0;0
findVirtualGuardInfo;findVirtualGuardInfo(TR::Node *);OMR;Compilation;0;0
foundOnTheStack;foundOnTheStack(class TR_ResolvedMethod *,int32_t);OMR;Compilation;0;0
freeKnownObjectTable;freeKnownObjectTable();OMR;Compilation;0;0
generateAccurateNodeCount;generateAccurateNodeCount();OMR;Compilation;0;0
generateArraylets;generateArraylets();OMR;Compilation;0;0
getAccurateNodeCount;getAccurateNodeCount();OMR;Compilation;0;0
getAddressEnumerationOption;getAddressEnumerationOption(enum TR_CompilationOptions);OMR;Compilation;0;0
getAotMethodCodeStart;getAotMethodCodeStart();OMR;Compilation;0;0
getBitVectorPool;getBitVectorPool();OMR;Compilation;0;0
getCheckcastNullChkInfo;getCheckcastNullChkInfo();OMR;Compilation;0;0
getClassesThatShouldNotBeLoaded;getClassesThatShouldNotBeLoaded();OMR;Compilation;0;0
getClassesThatShouldNotBeNewlyExtended;getClassesThatShouldNotBeNewlyExtended();OMR;Compilation;0;0
getCodeCacheSwitched;getCodeCacheSwitched();OMR;Compilation;0;0
getCompThreadID;getCompThreadID();OMR;Compilation;0;0
getCpuTimeSpentInCompilation;getCpuTimeSpentInCompilation();OMR;Compilation;0;0
getCurrentBlock;getCurrentBlock();OMR;Compilation;0;0
getCurrentCodeCache;getCurrentCodeCache();OMR;Compilation;0;0
getCurrentIlGenerator;getCurrentIlGenerator();OMR;Compilation;0;0
getCurrentInlinedCallArgInfo;getCurrentInlinedCallArgInfo();OMR;Compilation;0;0
getCurrentInlinedCallSite;getCurrentInlinedCallSite();OMR;Compilation;0;0
getCurrentInlinedSiteIndex;getCurrentInlinedSiteIndex();OMR;Compilation;0;0
getCurrentMethod;getCurrentMethod();OMR;Compilation;0;0
getCurrentPeekingArgInfo;getCurrentPeekingArgInfo();OMR;Compilation;0;0
getCurrentSymRefTab;getCurrentSymRefTab();OMR;Compilation;0;0
getDebug;getDebug();OMR;Compilation;0;0
getErrorCode;getErrorCode();OMR;Compilation;0;0
getExtraPrefetchInfo;getExtraPrefetchInfo();OMR;Compilation;0;0
getFailCHTableCommit;getFailCHTableCommit();OMR;Compilation;0;0
getFirstDevirtualizedCall;getFirstDevirtualizedCall();OMR;Compilation;0;0
getFlowGraph;getFlowGraph();OMR;Compilation;0;0
getGPUBlockDimX;getGPUBlockDimX();OMR;Compilation;0;0
getGPUKernelLineNumberList;getGPUKernelLineNumberList();OMR;Compilation;0;0
getGPUParms;getGPUParms();OMR;Compilation;0;0
getGPUPtxCount;getGPUPtxCount();OMR;Compilation;0;0
getGPUPtxList;getGPUPtxList();OMR;Compilation;0;0
getGlobalRegisterCandidates;getGlobalRegisterCandidates();OMR;Compilation;0;0
getHCRMode;getHCRMode();OMR;Compilation;0;0
getHasMethodHandleInvoke;getHasMethodHandleInvoke();OMR;Compilation;0;0
getHotnessName;getHotnessName();OMR;Compilation;0;0
getHotnessName;getHotnessName(enum TR_Hotness);OMR;Compilation;0;0
getILValidator;getILValidator();OMR;Compilation;0;0
getInlineDepth;getInlineDepth();OMR;Compilation;0;0
getInlinedCallArgInfoStack;getInlinedCallArgInfoStack();OMR;Compilation;0;0
getInlinedCallSite;getInlinedCallSite(uint32_t);OMR;Compilation;0;0
getInlinedCallStack;getInlinedCallStack();OMR;Compilation;0;0
getInlinedCallerSymRef;getInlinedCallerSymRef(uint32_t);OMR;Compilation;0;0
getInlinedCalls;getInlinedCalls();OMR;Compilation;0;0
getInlinedResolvedMethod;getInlinedResolvedMethod(uint32_t);OMR;Compilation;0;0
getInlinedResolvedMethodSymbol;getInlinedResolvedMethodSymbol(uint32_t);OMR;Compilation;0;0
getJittedMethodSymbol;getJittedMethodSymbol();OMR;Compilation;0;0
getKnownObjectTable;getKnownObjectTable();OMR;Compilation;0;0
getLastBegunOptIndex;getLastBegunOptIndex();OMR;Compilation;0;0
getLastPerformedOptIndex;getLastPerformedOptIndex();OMR;Compilation;0;0
getLastPerformedOptSubIndex;getLastPerformedOptSubIndex();OMR;Compilation;0;0
getLineNumber;getLineNumber(TR::Node *);OMR;Compilation;0;0
getLineNumberInCurrentMethod;getLineNumberInCurrentMethod(TR::Node *);OMR;Compilation;0;0
getLoopWasVersionedWrtAsyncChecks;getLoopWasVersionedWrtAsyncChecks();OMR;Compilation;0;0
getMaxAliasIndex;getMaxAliasIndex();OMR;Compilation;0;0
getMaxInlineDepth;getMaxInlineDepth();OMR;Compilation;0;0
getMaxPeekedBytecodeSize;getMaxPeekedBytecodeSize();OMR;Compilation;0;0
getMethodFromNode;getMethodFromNode(TR::Node *);OMR;Compilation;0;0
getMethodHotness;getMethodHotness();OMR;Compilation;0;0
getMethodSnippetsToBePatchedOnClassUnload;getMethodSnippetsToBePatchedOnClassUnload();OMR;Compilation;0;0
getMethodSymbol;getMethodSymbol();OMR;Compilation;0;0
getNextOptLevel;getNextOptLevel();OMR;Compilation;0;0
getNodeCount;getNodeCount();OMR;Compilation;0;0
getNodeOpCodeLength;getNodeOpCodeLength();OMR;Compilation;0;0
getNodePool;getNodePool();OMR;Compilation;0;0
getNodesThatShouldPrefetchOffset;getNodesThatShouldPrefetchOffset();OMR;Compilation;0;0
getNumInlinedCallSites;getNumInlinedCallSites();OMR;Compilation;0;0
getNumLivePendingPushSlots;getNumLivePendingPushSlots();OMR;Compilation;0;0
getNumLoopNestingLevels;getNumLoopNestingLevels();OMR;Compilation;0;0
getNumReservedIPICTrampolines;getNumReservedIPICTrampolines();OMR;Compilation;0;0
getOSRCallSiteRemat;getOSRCallSiteRemat(uint32_t,uint32_t,TR::SymbolReference *&,TR::SymbolReference *&);OMR;Compilation;0;0
getOSRCallSiteRematSize;getOSRCallSiteRematSize(uint32_t);OMR;Compilation;0;0
getOSRCompilationData;getOSRCompilationData();OMR;Compilation;0;0
getOSRInductionOffset;getOSRInductionOffset(TR::Node *);OMR;Compilation;0;0
getOSRMode;getOSRMode();OMR;Compilation;0;0
getOSRTransitionTarget;getOSRTransitionTarget();OMR;Compilation;0;0
getOptIndex;getOptIndex();OMR;Compilation;0;0
getOptLevel;getOptLevel();OMR;Compilation;0;0
getOptSubIndex;getOptSubIndex();OMR;Compilation;0;0
getOptimizationPlan;getOptimizationPlan();OMR;Compilation;0;0
getOptimizer;getOptimizer();OMR;Compilation;0;0
getOption;getOption(enum TR_CompilationOptions);OMR;Compilation;0;0
getOptions;getOptions();OMR;Compilation;0;0
getOrCreateKnownObjectTable;getOrCreateKnownObjectTable();OMR;Compilation;0;0
getOutFile;getOutFile();OMR;Compilation;0;0
getOwningMethodSymbol;getOwningMethodSymbol(class mcount_t);OMR;Compilation;0;0
getOwningMethodSymbol;getOwningMethodSymbol(class TR_ResolvedMethod *);OMR;Compilation;0;0
getOwningMethodSymbol;getOwningMethodSymbol(class TR_OpaqueMethodBlock *);OMR;Compilation;0;0
getPeekingArgInfo;getPeekingArgInfo();OMR;Compilation;0;0
getPeekingSymRefTab;getPeekingSymRefTab();OMR;Compilation;0;0
getPersistentInfo;getPersistentInfo();OMR;Compilation;0;0
getPrevSymRefTabSize;getPrevSymRefTabSize();OMR;Compilation;0;0
getProfilingMode;getProfilingMode();OMR;Compilation;0;0
getRecompilationInfo;getRecompilationInfo();OMR;Compilation;0;0
getResolvedMethodSymbolReference;getResolvedMethodSymbolReference(class mcount_t);OMR;Compilation;0;0
getReturnInfo;getReturnInfo();OMR;Compilation;0;0
getScratchSpaceLimit;getScratchSpaceLimit();OMR;Compilation;0;0
getSnippetsToBePatchedOnClassRedefinition;getSnippetsToBePatchedOnClassRedefinition();OMR;Compilation;0;0
getSnippetsToBePatchedOnClassUnload;getSnippetsToBePatchedOnClassUnload();OMR;Compilation;0;0
getSnippetsToBePatchedOnRegisterNative;getSnippetsToBePatchedOnRegisterNative();OMR;Compilation;0;0
getStartBlock;getStartBlock();OMR;Compilation;0;0
getStartTree;getStartTree();OMR;Compilation;0;0
getStaticHCRPICSites;getStaticHCRPICSites();OMR;Compilation;0;0
getStaticMethodPICSites;getStaticMethodPICSites();OMR;Compilation;0;0
getStaticPICSites;getStaticPICSites();OMR;Compilation;0;0
getSymRefCount;getSymRefCount();OMR;Compilation;0;0
getSymRefTab;getSymRefTab();OMR;Compilation;0;0
getSymbolReferenceByReferenceNumber;getSymbolReferenceByReferenceNumber(int32_t);OMR;Compilation;0;0
getToCommentMap;getToCommentMap();OMR;Compilation;0;0
getToNumberMap;getToNumberMap();OMR;Compilation;0;0
getToStringMap;getToStringMap();OMR;Compilation;0;0
getUsesBlockFrequencyInGRA;getUsesBlockFrequencyInGRA();OMR;Compilation;0;0
getVerboseOptTransformationCount;getVerboseOptTransformationCount();OMR;Compilation;0;0
getVirtualGuards;getVirtualGuards();OMR;Compilation;0;0
getVisitCount;getVisitCount();OMR;Compilation;0;0
hasBlockFrequencyInfo;hasBlockFrequencyInfo();OMR;Compilation;0;0
hasClassExtendAssumptions;hasClassExtendAssumptions();OMR;Compilation;0;0
hasClassPreInitializeAssumptions;hasClassPreInitializeAssumptions();OMR;Compilation;0;0
hasClassRedefinitionAssumptions;hasClassRedefinitionAssumptions();OMR;Compilation;0;0
hasClassUnloadAssumptions;hasClassUnloadAssumptions();OMR;Compilation;0;0
hasColdBlocks;hasColdBlocks();OMR;Compilation;0;0
hasLargeNumberOfLoops;hasLargeNumberOfLoops();OMR;Compilation;0;0
hasMethodOverrideAssumptions;hasMethodOverrideAssumptions();OMR;Compilation;0;0
hasNativeCall;hasNativeCall();OMR;Compilation;0;0
hasNews;hasNews();OMR;Compilation;0;0
hasUnsafeSymbol;hasUnsafeSymbol();OMR;Compilation;0;0
haveCommittedCallSiteInfo;haveCommittedCallSiteInfo();OMR;Compilation;0;0
ilGenRequest;ilGenRequest();OMR;Compilation;0;0
ilGenTrace;ilGenTrace();OMR;Compilation;0;0
incGPUPtxCount;incGPUPtxCount();OMR;Compilation;0;0
incInlineDepth;incInlineDepth(TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,int32_t,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *);OMR;Compilation;0;0
incInlineDepth;incInlineDepth(class TR_OpaqueMethodBlock *,TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *);OMR;Compilation;0;0
incInlinedCalls;incInlinedCalls();OMR;Compilation;0;0
incNumLivePendingPushSlots;incNumLivePendingPushSlots(int32_t);OMR;Compilation;0;0
incNumLoopNestingLevels;incNumLoopNestingLevels(int32_t);OMR;Compilation;0;0
incOptIndex;incOptIndex();OMR;Compilation;0;0
incOptSubIndex;incOptSubIndex();OMR;Compilation;0;0
incOrResetVisitCount;incOrResetVisitCount();OMR;Compilation;0;0
incVerboseOptTransformationCount;incVerboseOptTransformationCount(int32_t);OMR;Compilation;0;0
incVisitCount;incVisitCount();OMR;Compilation;0;0
incrNodeOpCodeLength;incrNodeOpCodeLength(int32_t);OMR;Compilation;0;0
invalidateAliasRegion;invalidateAliasRegion();OMR;Compilation;0;0
isCpuExpensiveCompilation;isCpuExpensiveCompilation(int64_t);OMR;Compilation;0;0
isDLT;isDLT();OMR;Compilation;0;0
isDisabled;isDisabled(OMR::Optimizations);OMR;Compilation;0;0
isGPUCompilation;isGPUCompilation();OMR;Compilation;0;0
isGPUCompileCPUCode;isGPUCompileCPUCode();OMR;Compilation;0;0
isInlinedDirectCall;isInlinedDirectCall(uint32_t);OMR;Compilation;0;0
isJProfilingCompilation;isJProfilingCompilation();OMR;Compilation;0;0
isLoopTransferDone;isLoopTransferDone();OMR;Compilation;0;0
isOSRTransitionTarget;isOSRTransitionTarget(TR::OSRTransitionTarget);OMR;Compilation;0;0
isOptServer;isOptServer();OMR;Compilation;0;0
isOutermostMethod;isOutermostMethod();OMR;Compilation;0;0
isPICSite;isPICSite(TR::Instruction *);OMR;Compilation;0;0
isPeekingMethod;isPeekingMethod();OMR;Compilation;0;0
isPotentialOSRPoint;isPotentialOSRPoint(TR::Node *,TR::Node **,_Bool);OMR;Compilation;0;0
isPotentialOSRPointWithSupport;isPotentialOSRPointWithSupport(TR::TreeTop *);OMR;Compilation;0;0
isProfilingCompilation;isProfilingCompilation();OMR;Compilation;0;0
isRecompilationEnabled;isRecompilationEnabled();OMR;Compilation;0;0
isServerInlining;isServerInlining();OMR;Compilation;0;0
isShortRunningMethod;isShortRunningMethod(int32_t);OMR;Compilation;0;0
isVirtualGuardNOPingRequired;isVirtualGuardNOPingRequired(class TR_VirtualGuard *);OMR;Compilation;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Compilation;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Compilation;0;0
matchingCallStackPrefixLength;matchingCallStackPrefixLength(TR_ByteCodeInfo &);OMR;Compilation;0;0
maxInternalPointers;maxInternalPointers();OMR;Compilation;0;0
mayHaveLoops;mayHaveLoops();OMR;Compilation;0;0
mustNotBeRecompiled;mustNotBeRecompiled();OMR;Compilation;0;0
notYetRunMeansCold;notYetRunMeansCold();OMR;Compilation;0;0
omrVMThread;omrVMThread();OMR;Compilation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Compilation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Compilation;0;0
operator delete;operator delete(void *,size_t);OMR;Compilation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Compilation;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Compilation;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Compilation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Compilation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Compilation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Compilation;0;0
operator new;operator new(size_t,TR::Region &);OMR;Compilation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Compilation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Compilation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Compilation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Compilation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Compilation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Compilation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Compilation;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Compilation;0;0
osrInfrastructureRemoved;osrInfrastructureRemoved();OMR;Compilation;0;0
osrStateIsReliable;osrStateIsReliable();OMR;Compilation;0;0
penalizePredsOfOSRCatchBlocksInGRA;penalizePredsOfOSRCatchBlocksInGRA();OMR;Compilation;0;0
pendingPushLivenessDuringIlgen;pendingPushLivenessDuringIlgen();OMR;Compilation;0;0
performOptimizations;performOptimizations();OMR;Compilation;0;0
performVirtualGuardNOPing;performVirtualGuardNOPing();OMR;Compilation;0;0
phaseMemProfiler;phaseMemProfiler();OMR;Compilation;0;0
phaseTimer;phaseTimer();OMR;Compilation;0;0
primaryRandom;primaryRandom();OMR;Compilation;0;0
recordBegunOpt;recordBegunOpt();OMR;Compilation;0;0
recordPerformedOptTransformation;recordPerformedOptTransformation();OMR;Compilation;0;0
region;region();OMR;Compilation;0;0
registerResolvedMethodSymbolReference;registerResolvedMethodSymbolReference(TR::SymbolReference *);OMR;Compilation;0;0
removeExtraPrefetchInfo;removeExtraPrefetchInfo(TR::Node *);OMR;Compilation;0;0
removePeekingArgInfo;removePeekingArgInfo();OMR;Compilation;0;0
removeVirtualGuard;removeVirtualGuard(class TR_VirtualGuard *);OMR;Compilation;0;0
reportAnalysisPhase;reportAnalysisPhase(uint8_t);OMR;Compilation;0;0
reportFailure;reportFailure(const char *);OMR;Compilation;0;0
reportILGeneratorPhase;reportILGeneratorPhase();OMR;Compilation;0;0
reportOptimizationPhase;reportOptimizationPhase(OMR::Optimizations);OMR;Compilation;0;0
reportOptimizationPhaseForSnap;reportOptimizationPhaseForSnap(OMR::Optimizations);OMR;Compilation;0;0
requiresAnalysisOSRPoint;requiresAnalysisOSRPoint(TR::Node *);OMR;Compilation;0;0
requiresSpineChecks;requiresSpineChecks();OMR;Compilation;0;0
resetInlineDepth;resetInlineDepth();OMR;Compilation;0;0
resetVisitCounts;resetVisitCounts(vcount_t,TR::TreeTop *);OMR;Compilation;0;0
resetVisitCounts;resetVisitCounts(vcount_t);OMR;Compilation;0;0
resetVisitCounts;resetVisitCounts(vcount_t,TR::ResolvedMethodSymbol *);OMR;Compilation;0;0
restoreCompilationPhase;restoreCompilationPhase(CompilationPhase);OMR;Compilation;0;0
restoreInlineDepth;restoreInlineDepth(TR_ByteCodeInfo &);OMR;Compilation;0;0
restoreInlineDepthUntil;restoreInlineDepthUntil(int32_t,TR_ByteCodeInfo &);OMR;Compilation;0;0
saveCompilationPhase;saveCompilationPhase();OMR;Compilation;0;0
self;self();OMR;Compilation;0;0
setAllocatorName;setAllocatorName(const char *);OMR;Compilation;0;0
setAotMethodCodeStart;setAotMethodCodeStart(void *);OMR;Compilation;0;0
setCanAffordOSRControlFlow;setCanAffordOSRControlFlow(_Bool);OMR;Compilation;0;0
setCannotAttemptOSRDuring;setCannotAttemptOSRDuring(uint32_t,_Bool);OMR;Compilation;0;0
setCommittedCallSiteInfo;setCommittedCallSiteInfo(_Bool);OMR;Compilation;0;0
setContainsBigDecimalLoad;setContainsBigDecimalLoad(_Bool);OMR;Compilation;0;0
setCurrentBlock;setCurrentBlock(TR::Block *);OMR;Compilation;0;0
setCurrentCodeCache;setCurrentCodeCache(TR::CodeCache *);OMR;Compilation;0;0
setCurrentIlGenerator;setCurrentIlGenerator(class TR_IlGenerator *);OMR;Compilation;0;0
setCurrentSymRefTab;setCurrentSymRefTab(TR::SymbolReferenceTable *);OMR;Compilation;0;0
setDebug;setDebug(class TR_Debug *);OMR;Compilation;0;0
setErrorCode;setErrorCode(int32_t);OMR;Compilation;0;0
setFailCHTableCommit;setFailCHTableCommit(_Bool);OMR;Compilation;0;0
setGPUBlockDimX;setGPUBlockDimX(int32_t);OMR;Compilation;0;0
setGPUParms;setGPUParms(void *);OMR;Compilation;0;0
setGlobalRegisterCandidates;setGlobalRegisterCandidates(class TR_RegisterCandidates *);OMR;Compilation;0;0
setHasClassExtendAssumptions;setHasClassExtendAssumptions(_Bool);OMR;Compilation;0;0
setHasClassPreInitializeAssumptions;setHasClassPreInitializeAssumptions(_Bool);OMR;Compilation;0;0
setHasClassRedefinitionAssumptions;setHasClassRedefinitionAssumptions(_Bool);OMR;Compilation;0;0
setHasClassUnloadAssumptions;setHasClassUnloadAssumptions(_Bool);OMR;Compilation;0;0
setHasColdBlocks;setHasColdBlocks();OMR;Compilation;0;0
setHasMethodHandleInvoke;setHasMethodHandleInvoke();OMR;Compilation;0;0
setHasMethodOverrideAssumptions;setHasMethodOverrideAssumptions(_Bool);OMR;Compilation;0;0
setHasNativeCall;setHasNativeCall();OMR;Compilation;0;0
setHasUnsafeSymbol;setHasUnsafeSymbol();OMR;Compilation;0;0
setILValidator;setILValidator(TR::ILValidator *);OMR;Compilation;0;0
setIlVerifier;setIlVerifier(TR::IlVerifier *);OMR;Compilation;0;0
setLoopTransferDone;setLoopTransferDone();OMR;Compilation;0;0
setLoopWasVersionedWrtAsyncChecks;setLoopWasVersionedWrtAsyncChecks(_Bool);OMR;Compilation;0;0
setNextOptLevel;setNextOptLevel(enum TR_Hotness);OMR;Compilation;0;0
setNodeOpCodeLength;setNodeOpCodeLength(int32_t);OMR;Compilation;0;0
setNumReservedIPICTrampolines;setNumReservedIPICTrampolines(int32_t);OMR;Compilation;0;0
setOSRCallSiteRemat;setOSRCallSiteRemat(uint32_t,TR::SymbolReference *,TR::SymbolReference *);OMR;Compilation;0;0
setOSRInfrastructureRemoved;setOSRInfrastructureRemoved(_Bool);OMR;Compilation;0;0
setOptIndex;setOptIndex(int16_t);OMR;Compilation;0;0
setOptimizationPlan;setOptimizationPlan(class TR_OptimizationPlan *);OMR;Compilation;0;0
setOptimizer;setOptimizer(TR::Optimizer *);OMR;Compilation;0;0
setOption;setOption(enum TR_CompilationOptions);OMR;Compilation;0;0
setOsrStateIsReliable;setOsrStateIsReliable(_Bool);OMR;Compilation;0;0
setOutFile;setOutFile(TR::FILE *);OMR;Compilation;0;0
setPeekingSymRefTab;setPeekingSymRefTab(TR::SymbolReferenceTable *);OMR;Compilation;0;0
setPrevSymRefTabSize;setPrevSymRefTabSize(int32_t);OMR;Compilation;0;0
setRecompilationInfo;setRecompilationInfo(TR::Recompilation *);OMR;Compilation;0;0
setReturnInfo;setReturnInfo(enum TR_ReturnInfo);OMR;Compilation;0;0
setScratchSpaceLimit;setScratchSpaceLimit(size_t);OMR;Compilation;0;0
setSeenClassPreventingInducedOSR;setSeenClassPreventingInducedOSR();OMR;Compilation;0;0
setSlotsSharedByRefAndNonRef;setSlotsSharedByRefAndNonRef(_Bool);OMR;Compilation;0;0
setStartTree;setStartTree(TR::TreeTop *);OMR;Compilation;0;0
setSupressEarlyInlining;setSupressEarlyInlining(_Bool);OMR;Compilation;0;0
setSyncsMarked;setSyncsMarked();OMR;Compilation;0;0
setUseLongRegAllocation;setUseLongRegAllocation(_Bool);OMR;Compilation;0;0
setUsesBlockFrequencyInGRA;setUsesBlockFrequencyInGRA();OMR;Compilation;0;0
setUsesPreexistence;setUsesPreexistence(_Bool);OMR;Compilation;0;0
setVisitCount;setVisitCount(vcount_t);OMR;Compilation;0;0
shouldBeRecompiled;shouldBeRecompiled();OMR;Compilation;0;0
shutdown;shutdown(class TR_FrontEnd *);OMR;Compilation;0;0
signature;signature();OMR;Compilation;0;0
supportsInduceOSR;supportsInduceOSR();OMR;Compilation;0;0
suppressAllocationInlining;suppressAllocationInlining();OMR;Compilation;0;0
supressEarlyInlining;supressEarlyInlining();OMR;Compilation;0;0
switchCodeCache;switchCodeCache(TR::CodeCache *);OMR;Compilation;0;0
syncsMarked;syncsMarked();OMR;Compilation;0;0
trHeapMemory;trHeapMemory();OMR;Compilation;0;0
trMemory;trMemory();OMR;Compilation;0;0
trPersistentMemory;trPersistentMemory();OMR;Compilation;0;0
trStackMemory;trStackMemory();OMR;Compilation;0;0
trace;trace(OMR::Optimizations);OMR;Compilation;0;0
useAnchors;useAnchors();OMR;Compilation;0;0
useCompressedPointers;useCompressedPointers();OMR;Compilation;0;0
useLongRegAllocation;useLongRegAllocation();OMR;Compilation;0;0
useRegisterMaps;useRegisterMaps();OMR;Compilation;0;0
usesPreexistence;usesPreexistence();OMR;Compilation;0;0
validateIL;validateIL(TR::ILValidationContext);OMR;Compilation;0;0
verifyBlocks;verifyBlocks(TR::ResolvedMethodSymbol *);OMR;Compilation;0;0
verifyCFG;verifyCFG(TR::ResolvedMethodSymbol *);OMR;Compilation;0;0
verifyTrees;verifyTrees(TR::ResolvedMethodSymbol *);OMR;Compilation;0;0
~Compilation;~Compilation();OMR;Compilation;0;0
~Compilation;~Compilation();TR;Compilation;0;0
CompilerEnv;CompilerEnv(class OMR::CompilerEnv &&);OMR;CompilerEnv;1;0
CompilerEnv;CompilerEnv(TR::RawAllocator,const TR::PersistentAllocatorKit &);OMR;CompilerEnv;0;0
CompilerEnv;CompilerEnv(TR::RawAllocator,const TR::PersistentAllocatorKit &);TR;CompilerEnv;0;0
CompilerEnv;CompilerEnv(const class OMR::CompilerEnv &);OMR;CompilerEnv;1;0
CompilerEnv;CompilerEnv(class TR::CompilerEnv &&);TR;CompilerEnv;1;0
initialize;initialize();OMR;CompilerEnv;0;0
initializeHostEnvironment;initializeHostEnvironment();OMR;CompilerEnv;0;0
initializeTargetEnvironment;initializeTargetEnvironment();OMR;CompilerEnv;0;0
isInitialized;isInitialized();OMR;CompilerEnv;0;0
operator=;operator=(const class OMR::CompilerEnv &);OMR;CompilerEnv;1;0
operator=;operator=(class OMR::CompilerEnv &&);OMR;CompilerEnv;1;0
operator=;operator=(class TR::CompilerEnv &&);TR;CompilerEnv;1;0
persistentAllocator;persistentAllocator();OMR;CompilerEnv;0;0
self;self();OMR;CompilerEnv;0;0
DataType;DataType(class OMR::DataType &&);OMR;DataType;1;0
DataType;DataType(TR::DataTypes);OMR;DataType;0;0
DataType;DataType(TR::DataTypes);TR;DataType;0;0
DataType;DataType(const class OMR::DataType &);OMR;DataType;1;0
DataType;DataType();OMR;DataType;0;0
DataType;DataType();TR;DataType;0;0
DataType;DataType(class TR::DataType &&);TR;DataType;1;0
DataType;DataType(const class TR::DataType &);TR;DataType;1;0
canGetMaxPrecisionFromType;canGetMaxPrecisionFromType();OMR;DataType;0;0
getDataType;getDataType();OMR;DataType;0;0
getDataTypeConversion;getDataTypeConversion(TR::DataType,TR::DataType);OMR;DataType;0;0
getFloatTypeFromSize;getFloatTypeFromSize(int32_t);OMR;DataType;0;0
getIntegralTypeFromPrecision;getIntegralTypeFromPrecision(int32_t);OMR;DataType;0;0
getMaxPrecisionFromType;getMaxPrecisionFromType();OMR;DataType;0;0
getName;getName(TR::DataType);OMR;DataType;0;0
getPrefix;getPrefix(TR::DataType);OMR;DataType;0;0
getSize;getSize(TR::DataType);OMR;DataType;0;0
getVectorElementType;getVectorElementType();OMR;DataType;0;0
getVectorIntegralType;getVectorIntegralType();OMR;DataType;0;0
isAddress;isAddress();OMR;DataType;0;0
isAggregate;isAggregate();OMR;DataType;0;0
isBFPorHFP;isBFPorHFP();OMR;DataType;0;0
isDouble;isDouble();OMR;DataType;0;0
isFloatingPoint;isFloatingPoint();OMR;DataType;0;0
isInt16;isInt16();OMR;DataType;0;0
isInt32;isInt32();OMR;DataType;0;0
isInt64;isInt64();OMR;DataType;0;0
isInt8;isInt8();OMR;DataType;0;0
isIntegral;isIntegral();OMR;DataType;0;0
isVector;isVector();OMR;DataType;0;0
operator int;operator int();OMR;DataType;0;0
operator!=;operator!=(TR::DataTypes);OMR;DataType;0;0
operator!=;operator!=(const TR::DataType &);OMR;DataType;0;0
operator<;operator<(const TR::DataType &);OMR;DataType;0;0
operator<;operator<(TR::DataTypes);OMR;DataType;0;0
operator<=;operator<=(const TR::DataType &);OMR;DataType;0;0
operator<=;operator<=(TR::DataTypes);OMR;DataType;0;0
operator=;operator=(class OMR::DataType &&);OMR;DataType;1;0
operator=;operator=(const class OMR::DataType &);OMR;DataType;1;0
operator=;operator=(const TR::DataType &);OMR;DataType;0;0
operator=;operator=(TR::DataTypes);OMR;DataType;0;0
operator==;operator==(const TR::DataType &);OMR;DataType;0;0
operator==;operator==(TR::DataTypes);OMR;DataType;0;0
operator>;operator>(const TR::DataType &);OMR;DataType;0;0
operator>;operator>(TR::DataTypes);OMR;DataType;0;0
operator>=;operator>=(const TR::DataType &);OMR;DataType;0;0
operator>=;operator>=(TR::DataTypes);OMR;DataType;0;0
scalarToVector;scalarToVector();OMR;DataType;0;0
self;self();OMR;DataType;0;0
setSize;setSize(TR::DataType,int32_t);OMR;DataType;0;0
toString;toString();OMR;DataType;0;0
vectorToScalar;vectorToScalar();OMR;DataType;0;0
~DataType;~DataType();OMR;DataType;1;0
~DataType;~DataType();TR;DataType;1;0
DebugCounter;DebugCounter(const char *,int8_t,class TR::DebugCounter *,int8_t);TR;DebugCounter;0;0
DebugCounterBase;DebugCounterBase();TR;DebugCounterBase;1;0
DebugCounterBase;DebugCounterBase(class TR::DebugCounterBase &&);TR;DebugCounterBase;1;0
DebugCounterBase;DebugCounterBase(const class TR::DebugCounterBase &);TR;DebugCounterBase;1;0
accumulate;accumulate();TR;DebugCounterBase;0;1
accumulate;accumulate();TR;DebugCounter;0;1
accumulate;accumulate(int64_t);TR;DebugCounter;0;0
contributesToDenominator;contributesToDenominator();TR;DebugCounter;0;0
createBumpCounterNode;createBumpCounterNode(TR::Compilation *,TR::Node *);TR;DebugCounterBase;0;0
debugCounterBucketName;debugCounterBucketName(TR::Compilation *,int32_t,const char *);TR;DebugCounter;0;0
debugCounterName;debugCounterName(TR::Compilation *,const char *);TR;DebugCounter;0;0
getBumpCountAddress;getBumpCountAddress();TR;DebugCounterBase;0;1
getBumpCountAddress;getBumpCountAddress();TR;DebugCounter;0;1
getBumpCountSymRef;getBumpCountSymRef(TR::Compilation *);TR;DebugCounterBase;0;1
getBumpCountSymRef;getBumpCountSymRef(TR::Compilation *);TR;DebugCounter;0;1
getCount;getCount();TR;DebugCounter;0;0
getDebugCounter;getDebugCounter(TR::Compilation *,const char *,int8_t,int32_t);TR;DebugCounter;0;0
getDenominator;getDenominator();TR;DebugCounter;0;0
getFidelity;getFidelity();TR;DebugCounter;0;0
getInsertionCounterNames;getInsertionCounterNames(TR::Compilation *,TR::Node *,const char *(&)[3]);TR;DebugCounter;0;0
getName;getName();TR;DebugCounter;0;0
incStaticDebugCounter;incStaticDebugCounter(TR::Compilation *,const char *,int32_t);TR;DebugCounter;0;0
increment;increment(int64_t);TR;DebugCounter;0;0
isDenominator;isDenominator();TR;DebugCounter;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TR;DebugCounter;0;0
jitPersistentFree;jitPersistentFree(void *);TR;DebugCounter;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;DebugCounter;0;0
operator delete;operator delete(void *,size_t);TR;DebugCounter;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;DebugCounter;0;0
operator delete;operator delete(void *,TR::Region &);TR;DebugCounter;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TR;DebugCounter;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TR;DebugCounter;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;DebugCounter;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;DebugCounter;0;0
operator delete[];operator delete[](void *,TR::Region &);TR;DebugCounter;0;0
operator new;operator new(size_t,TR::Region &);TR;DebugCounter;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TR;DebugCounter;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;DebugCounter;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TR;DebugCounter;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TR;DebugCounter;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;DebugCounter;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TR;DebugCounter;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TR;DebugCounter;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;DebugCounter;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TR;DebugCounter;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TR;DebugCounter;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;DebugCounter;0;0
operator new[];operator new[](size_t,TR::Region &);TR;DebugCounter;0;0
operator=;operator=(class TR::DebugCounterBase &&);TR;DebugCounterBase;1;0
operator=;operator=(const class TR::DebugCounterBase &);TR;DebugCounterBase;1;0
operator=;operator=(const class TR::DebugCounter &);TR;DebugCounter;1;0
operator=;operator=(class TR::DebugCounter &&);TR;DebugCounter;1;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,TR::Node *,int8_t);TR;DebugCounter;0;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,int32_t,int8_t);TR;DebugCounter;0;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,int32_t,int8_t,int32_t);TR;DebugCounter;0;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,TR::Node *,int8_t,int32_t);TR;DebugCounter;0;0
prependDebugCounterBump;prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,TR::Node *);TR;DebugCounter;0;0
prependDebugCounterBump;prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,int32_t);TR;DebugCounter;0;0
reset;reset();TR;DebugCounter;0;0
~DebugCounter;~DebugCounter();TR;DebugCounter;1;0
~DebugCounterBase;~DebugCounterBase();TR;DebugCounterBase;1;0
DebugCounterAggregation;DebugCounterAggregation(class TR_Memory *);TR;DebugCounterAggregation;0;0
accumulate;accumulate();TR;DebugCounterAggregation;0;1
aggregate;aggregate(class TR::DebugCounter *,int32_t);TR;DebugCounterAggregation;0;0
aggregateDebugCounterHistogram;aggregateDebugCounterHistogram(TR::Compilation *,TR::Node *,class TR::DebugCounter *,int32_t,int8_t,int32_t);TR;DebugCounterAggregation;0;0
aggregateDebugCounterInsertions;aggregateDebugCounterInsertions(TR::Compilation *,TR::Node *,class TR::DebugCounter *,int32_t,int8_t,int32_t);TR;DebugCounterAggregation;0;0
aggregateStandardCounters;aggregateStandardCounters(TR::Compilation *,TR::Node *,const char *,int32_t,int8_t,int32_t);TR;DebugCounterAggregation;0;0
getBumpCountAddress;getBumpCountAddress();TR;DebugCounterAggregation;0;1
getBumpCountSymRef;getBumpCountSymRef(TR::Compilation *);TR;DebugCounterAggregation;0;1
hasAnyCounters;hasAnyCounters();TR;DebugCounterAggregation;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TR;DebugCounterAggregation;0;0
jitPersistentFree;jitPersistentFree(void *);TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,TR::Region &);TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,size_t);TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;DebugCounterAggregation;0;0
operator delete[];operator delete[](void *,TR::Region &);TR;DebugCounterAggregation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;DebugCounterAggregation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TR;DebugCounterAggregation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,TR::Region &);TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,TR::Region &);TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;DebugCounterAggregation;0;0
operator=;operator=(const class TR::DebugCounterAggregation &);TR;DebugCounterAggregation;1;0
operator=;operator=(class TR::DebugCounterAggregation &&);TR;DebugCounterAggregation;1;0
~DebugCounterAggregation;~DebugCounterAggregation();TR;DebugCounterAggregation;1;0
Environment;Environment(class OMR::Environment &&);OMR;Environment;1;0
Environment;Environment();OMR;Environment;0;0
Environment;Environment();TR;Environment;0;0
Environment;Environment(const class OMR::Environment &);OMR;Environment;1;0
Environment;Environment(TR::MajorOperatingSystem,TR::Bitness);OMR;Environment;0;0
Environment;Environment(TR::MajorOperatingSystem,TR::Bitness);TR;Environment;0;0
Environment;Environment(const class TR::Environment &);TR;Environment;1;0
Environment;Environment(class TR::Environment &&);TR;Environment;1;0
bitness;bitness();OMR;Environment;0;0
is32Bit;is32Bit();OMR;Environment;0;0
is64Bit;is64Bit();OMR;Environment;0;0
isAIX;isAIX();OMR;Environment;0;0
isLinux;isLinux();OMR;Environment;0;0
isOSX;isOSX();OMR;Environment;0;0
isSMP;isSMP();OMR;Environment;0;0
isUnix;isUnix();OMR;Environment;0;0
isWindows;isWindows();OMR;Environment;0;0
isZOS;isZOS();OMR;Environment;0;0
majorOS;majorOS();OMR;Environment;0;0
numberOfProcessors;numberOfProcessors();OMR;Environment;0;0
operator=;operator=(class OMR::Environment &&);OMR;Environment;1;0
operator=;operator=(const class OMR::Environment &);OMR;Environment;1;0
operator=;operator=(class TR::Environment &&);TR;Environment;1;0
operator=;operator=(const class TR::Environment &);TR;Environment;1;0
setBitness;setBitness(TR::Bitness);OMR;Environment;0;0
setMajorOS;setMajorOS(TR::MajorOperatingSystem);OMR;Environment;0;0
setNumberOfProcessors;setNumberOfProcessors(uint32_t);OMR;Environment;0;0
setSMP;setSMP(_Bool);OMR;Environment;0;0
~Environment;~Environment();OMR;Environment;1;0
~Environment;~Environment();TR;Environment;1;0
GCRegisterMap;GCRegisterMap(const class OMR::GCRegisterMap &);OMR;GCRegisterMap;1;0
GCRegisterMap;GCRegisterMap(class OMR::GCRegisterMap &&);OMR;GCRegisterMap;1;0
GCRegisterMap;GCRegisterMap();OMR;GCRegisterMap;0;0
GCRegisterMap;GCRegisterMap();TR;GCRegisterMap;0;0
GCRegisterMap;GCRegisterMap(class TR::GCRegisterMap &&);TR;GCRegisterMap;1;0
GCRegisterMap;GCRegisterMap(const class TR::GCRegisterMap &);TR;GCRegisterMap;1;0
empty;empty();OMR;GCRegisterMap;0;0
emptyHPR;emptyHPR();OMR;GCRegisterMap;0;0
getHPRMap;getHPRMap();OMR;GCRegisterMap;0;0
getMap;getMap();OMR;GCRegisterMap;0;0
getRegisterSaveDescription;getRegisterSaveDescription();OMR;GCRegisterMap;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;GCRegisterMap;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;GCRegisterMap;0;0
maskRegisters;maskRegisters(uint32_t);OMR;GCRegisterMap;0;0
maskRegistersWithInfoBits;maskRegistersWithInfoBits(uint32_t,uint32_t);OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,size_t);OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,TR::Region &);OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;GCRegisterMap;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;GCRegisterMap;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;GCRegisterMap;0;0
operator new;operator new(size_t,TR::Region &);OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;GCRegisterMap;0;0
resetHighWordRegisterBits;resetHighWordRegisterBits(uint32_t);OMR;GCRegisterMap;0;0
resetRegisterBits;resetRegisterBits(uint32_t);OMR;GCRegisterMap;0;0
self;self();OMR;GCRegisterMap;0;0
setHighWordRegisterBits;setHighWordRegisterBits(uint32_t);OMR;GCRegisterMap;0;0
setInfoBits;setInfoBits(uint32_t);OMR;GCRegisterMap;0;0
setRegisterBits;setRegisterBits(uint32_t);OMR;GCRegisterMap;0;0
setRegisterSaveDescription;setRegisterSaveDescription(uint32_t);OMR;GCRegisterMap;0;0
~GCRegisterMap;~GCRegisterMap();OMR;GCRegisterMap;1;0
~GCRegisterMap;~GCRegisterMap();TR;GCRegisterMap;1;0
GCStackAtlas;GCStackAtlas(class OMR::GCStackAtlas &&);OMR;GCStackAtlas;1;0
GCStackAtlas;GCStackAtlas(const class OMR::GCStackAtlas &);OMR;GCStackAtlas;1;0
GCStackAtlas;GCStackAtlas(uint32_t,uint32_t,class TR_Memory *);OMR;GCStackAtlas;0;0
GCStackAtlas;GCStackAtlas(uint32_t,uint32_t,class TR_Memory *);TR;GCStackAtlas;0;0
addPinningArrayPtrForInternalPtrReg;addPinningArrayPtrForInternalPtrReg(TR::AutomaticSymbol *);OMR;GCStackAtlas;0;0
addStackMap;addStackMap(class TR_GCStackMap *);OMR;GCStackAtlas;0;0
assignGCIndex;assignGCIndex();OMR;GCStackAtlas;0;0
close;close(TR::CodeGenerator *);OMR;GCStackAtlas;0;0
decNumberOfMaps;decNumberOfMaps();OMR;GCStackAtlas;0;0
getAtlasBits;getAtlasBits();OMR;GCStackAtlas;0;0
getIndexOfFirstInternalPointer;getIndexOfFirstInternalPointer();OMR;GCStackAtlas;0;0
getIndexOfFirstSpillTemp;getIndexOfFirstSpillTemp();OMR;GCStackAtlas;0;0
getInternalPointerMap;getInternalPointerMap();OMR;GCStackAtlas;0;0
getLocalBaseOffset;getLocalBaseOffset();OMR;GCStackAtlas;0;0
getLocalMap;getLocalMap();OMR;GCStackAtlas;0;0
getNumberOfDistinctPinningArrays;getNumberOfDistinctPinningArrays();OMR;GCStackAtlas;0;0
getNumberOfLocalSlotsMapped;getNumberOfLocalSlotsMapped();OMR;GCStackAtlas;0;0
getNumberOfMaps;getNumberOfMaps();OMR;GCStackAtlas;0;0
getNumberOfParmSlotsMapped;getNumberOfParmSlotsMapped();OMR;GCStackAtlas;0;0
getNumberOfPendingPushSlots;getNumberOfPendingPushSlots();OMR;GCStackAtlas;0;0
getNumberOfSlotsMapped;getNumberOfSlotsMapped();OMR;GCStackAtlas;0;0
getNumberOfSlotsToBeInitialized;getNumberOfSlotsToBeInitialized();OMR;GCStackAtlas;0;0
getOffsetOfFirstInternalPointer;getOffsetOfFirstInternalPointer();OMR;GCStackAtlas;0;0
getParameterMap;getParameterMap();OMR;GCStackAtlas;0;0
getParmBaseOffset;getParmBaseOffset();OMR;GCStackAtlas;0;0
getPinningArrayPtrsForInternalPtrRegs;getPinningArrayPtrsForInternalPtrRegs();OMR;GCStackAtlas;0;0
getStackAllocMap;getStackAllocMap();OMR;GCStackAtlas;0;0
getStackMapList;getStackMapList();OMR;GCStackAtlas;0;0
hasUninitializedPinningArrayPointer;hasUninitializedPinningArrayPointer();OMR;GCStackAtlas;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;GCStackAtlas;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,TR::Region &);OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,size_t);OMR;GCStackAtlas;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;GCStackAtlas;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;GCStackAtlas;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;GCStackAtlas;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;GCStackAtlas;0;0
operator new;operator new(size_t,TR::Region &);OMR;GCStackAtlas;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;GCStackAtlas;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;GCStackAtlas;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;GCStackAtlas;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;GCStackAtlas;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;GCStackAtlas;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;GCStackAtlas;0;0
removePinningArrayPtrForInternalPtrReg;removePinningArrayPtrForInternalPtrReg(TR::AutomaticSymbol *);OMR;GCStackAtlas;0;0
self;self();OMR;GCStackAtlas;0;0
setAtlasBits;setAtlasBits(uint8_t *);OMR;GCStackAtlas;0;0
setHasUninitializedPinningArrayPointer;setHasUninitializedPinningArrayPointer(_Bool);OMR;GCStackAtlas;0;0
setIndexOfFirstInternalPointer;setIndexOfFirstInternalPointer(int32_t);OMR;GCStackAtlas;0;0
setIndexOfFirstSpillTemp;setIndexOfFirstSpillTemp(uint32_t);OMR;GCStackAtlas;0;0
setInternalPointerMap;setInternalPointerMap(class TR_InternalPointerMap *);OMR;GCStackAtlas;0;0
setLocalBaseOffset;setLocalBaseOffset(int32_t);OMR;GCStackAtlas;0;0
setLocalMap;setLocalMap(class TR_GCStackMap *);OMR;GCStackAtlas;0;0
setNumberOfMaps;setNumberOfMaps(uint32_t);OMR;GCStackAtlas;0;0
setNumberOfPendingPushSlots;setNumberOfPendingPushSlots(uint32_t);OMR;GCStackAtlas;0;0
setNumberOfSlotsMapped;setNumberOfSlotsMapped(uint32_t);OMR;GCStackAtlas;0;0
setNumberOfSlotsToBeInitialized;setNumberOfSlotsToBeInitialized(uint32_t);OMR;GCStackAtlas;0;0
setOffsetOfFirstInternalPointer;setOffsetOfFirstInternalPointer(int32_t);OMR;GCStackAtlas;0;0
setParameterMap;setParameterMap(class TR_GCStackMap *);OMR;GCStackAtlas;0;0
setParmBaseOffset;setParmBaseOffset(int32_t);OMR;GCStackAtlas;0;0
setStackAllocMap;setStackAllocMap(class TR_GCStackAllocMap *);OMR;GCStackAtlas;0;0
trMemory;trMemory();OMR;GCStackAtlas;0;0
IL;IL(class OMR::IL &&);OMR;IL;1;0
IL;IL(const class OMR::IL &);OMR;IL;1;0
IL;IL(class TR::IL &&);TR;IL;1;0
IL;IL(const class TR::IL &);TR;IL;1;0
opCodeForCompareEquals;opCodeForCompareEquals(TR::DataType);OMR;IL;0;0
opCodeForCompareGreaterOrEquals;opCodeForCompareGreaterOrEquals(TR::DataType);OMR;IL;0;0
opCodeForCompareGreaterThan;opCodeForCompareGreaterThan(TR::DataType);OMR;IL;0;0
opCodeForCompareLessOrEquals;opCodeForCompareLessOrEquals(TR::DataType);OMR;IL;0;0
opCodeForCompareLessThan;opCodeForCompareLessThan(TR::DataType);OMR;IL;0;0
opCodeForCompareNotEquals;opCodeForCompareNotEquals(TR::DataType);OMR;IL;0;0
opCodeForConst;opCodeForConst(TR::DataType);OMR;IL;0;0
opCodeForCorrespondingIndirectLoad;opCodeForCorrespondingIndirectLoad(TR::ILOpCodes);OMR;IL;0;0
opCodeForCorrespondingIndirectStore;opCodeForCorrespondingIndirectStore(TR::ILOpCodes);OMR;IL;0;0
opCodeForDirectLoad;opCodeForDirectLoad(TR::DataType);OMR;IL;0;0
opCodeForDirectStore;opCodeForDirectStore(TR::DataType);OMR;IL;0;0
opCodeForIfCompareEquals;opCodeForIfCompareEquals(TR::DataType);OMR;IL;0;0
opCodeForIfCompareGreaterOrEquals;opCodeForIfCompareGreaterOrEquals(TR::DataType);OMR;IL;0;0
opCodeForIfCompareGreaterThan;opCodeForIfCompareGreaterThan(TR::DataType);OMR;IL;0;0
opCodeForIfCompareLessOrEquals;opCodeForIfCompareLessOrEquals(TR::DataType);OMR;IL;0;0
opCodeForIfCompareLessThan;opCodeForIfCompareLessThan(TR::DataType);OMR;IL;0;0
opCodeForIfCompareNotEquals;opCodeForIfCompareNotEquals(TR::DataType);OMR;IL;0;0
opCodeForIndirectArrayLoad;opCodeForIndirectArrayLoad(TR::DataType);OMR;IL;0;0
opCodeForIndirectArrayStore;opCodeForIndirectArrayStore(TR::DataType);OMR;IL;0;0
opCodeForIndirectLoad;opCodeForIndirectLoad(TR::DataType);OMR;IL;0;0
opCodeForIndirectStore;opCodeForIndirectStore(TR::DataType);OMR;IL;0;0
opCodeForRegisterLoad;opCodeForRegisterLoad(TR::DataType);OMR;IL;0;0
opCodeForRegisterStore;opCodeForRegisterStore(TR::DataType);OMR;IL;0;0
~IL;~IL();OMR;IL;1;0
~IL;~IL();TR;IL;1;0
ILOpCode;ILOpCode(class OMR::ILOpCode &&);OMR;ILOpCode;1;0
ILOpCode;ILOpCode(const class OMR::ILOpCode &);OMR;ILOpCode;1;0
ILOpCode;ILOpCode();OMR;ILOpCode;0;0
ILOpCode;ILOpCode();TR;ILOpCode;0;0
ILOpCode;ILOpCode(TR::ILOpCodes);OMR;ILOpCode;0;0
ILOpCode;ILOpCode(TR::ILOpCodes);TR;ILOpCode;0;0
ILOpCode;ILOpCode(class TR::ILOpCode &&);TR;ILOpCode;1;0
ILOpCode;ILOpCode(const class TR::ILOpCode &);TR;ILOpCode;1;0
absOpCode;absOpCode(TR::DataType);OMR;ILOpCode;0;0
addOpCode;addOpCode(TR::DataType,_Bool);OMR;ILOpCode;0;0
andOpCode;andOpCode(TR::DataType);OMR;ILOpCode;0;0
canHaveGlRegDeps;canHaveGlRegDeps();OMR;ILOpCode;0;0
canRaiseException;canRaiseException();OMR;ILOpCode;0;0
canShareValueNumber;canShareValueNumber();OMR;ILOpCode;0;0
canUseBranchOnCount;canUseBranchOnCount();OMR;ILOpCode;0;0
checkILOpArrayLengths;checkILOpArrayLengths();OMR;ILOpCode;0;0
childProperties;childProperties();OMR;ILOpCode;0;0
cmpeqOpCode;cmpeqOpCode(TR::DataType);OMR;ILOpCode;0;0
compareOpCode;compareOpCode(TR::DataType,enum TR_ComparisonTypes,_Bool);OMR;ILOpCode;0;0
constOpCode;constOpCode(TR::DataType);OMR;ILOpCode;0;0
convertCmpToIfCmp;convertCmpToIfCmp();OMR;ILOpCode;0;0
convertIfCmpToCmp;convertIfCmpToCmp();OMR;ILOpCode;0;0
convertScalarToVector;convertScalarToVector(TR::ILOpCodes);OMR;ILOpCode;0;0
convertSignedCmpToUnsignedCmp;convertSignedCmpToUnsignedCmp(TR::ILOpCodes);OMR;ILOpCode;0;0
divideOpCode;divideOpCode(TR::DataType);OMR;ILOpCode;0;0
expectedChildCount;expectedChildCount();OMR;ILOpCode;0;0
expectedChildType;expectedChildType(uint32_t);OMR;ILOpCode;0;0
getCompareType;getCompareType(TR::ILOpCodes);OMR;ILOpCode;0;0
getComparisonWithoutUnordered;getComparisonWithoutUnordered(TR::ILOpCodes);OMR;ILOpCode;0;0
getCorrespondingLogicalComparison;getCorrespondingLogicalComparison(TR::ILOpCodes);OMR;ILOpCode;0;0
getDataType;getDataType(TR::ILOpCodes);OMR;ILOpCode;0;0
getDataType;getDataType();OMR;ILOpCode;0;0
getDirectCall;getDirectCall(TR::DataType);OMR;ILOpCode;0;0
getDirectCall;getDirectCall(TR::ILOpCodes);OMR;ILOpCode;0;0
getIndirectCall;getIndirectCall(TR::DataType);OMR;ILOpCode;0;0
getName;getName();OMR;ILOpCode;0;0
getOpCodeForReverseBranch;getOpCodeForReverseBranch();OMR;ILOpCode;0;0
getOpCodeForSwapChildren;getOpCodeForSwapChildren();OMR;ILOpCode;0;0
getOpCodeValue;getOpCodeValue();OMR;ILOpCode;0;0
getProperConversion;getProperConversion(TR::DataType,TR::DataType,_Bool);OMR;ILOpCode;0;0
getRotateOpCodeFromDt;getRotateOpCodeFromDt(TR::DataType);OMR;ILOpCode;0;0
getSize;getSize(TR::ILOpCodes);OMR;ILOpCode;0;0
getSize;getSize();OMR;ILOpCode;0;0
getType;getType(TR::ILOpCodes);OMR;ILOpCode;0;0
getType;getType();OMR;ILOpCode;0;0
hasBranchChildren;hasBranchChildren();OMR;ILOpCode;0;0
hasNoDataType;hasNoDataType();OMR;ILOpCode;0;0
hasPinningArrayPointer;hasPinningArrayPointer();OMR;ILOpCode;0;0
hasSymbolReference;hasSymbolReference();OMR;ILOpCode;0;0
ifcmpeqOpCode;ifcmpeqOpCode(TR::DataType);OMR;ILOpCode;0;0
ifcmpgeOpCode;ifcmpgeOpCode(TR::DataType,_Bool);OMR;ILOpCode;0;0
ifcmpgtOpCode;ifcmpgtOpCode(TR::DataType,_Bool);OMR;ILOpCode;0;0
ifcmpleOpCode;ifcmpleOpCode(TR::DataType,_Bool);OMR;ILOpCode;0;0
ifcmpltOpCode;ifcmpltOpCode(TR::DataType,_Bool);OMR;ILOpCode;0;0
ifcmpneOpCode;ifcmpneOpCode(TR::DataType);OMR;ILOpCode;0;0
indirectLoadOpCode;indirectLoadOpCode(TR::DataType);OMR;ILOpCode;0;0
integerOpForLongOp;integerOpForLongOp(TR::ILOpCodes);OMR;ILOpCode;0;0
is16Byte;is16Byte();OMR;ILOpCode;0;0
is1Byte;is1Byte();OMR;ILOpCode;0;0
is2Byte;is2Byte();OMR;ILOpCode;0;0
is32Byte;is32Byte();OMR;ILOpCode;0;0
is4Byte;is4Byte();OMR;ILOpCode;0;0
is8Byte;is8Byte();OMR;ILOpCode;0;0
isAbs;isAbs();OMR;ILOpCode;0;0
isAdd;isAdd();OMR;ILOpCode;0;0
isAnchor;isAnchor();OMR;ILOpCode;0;0
isAnd;isAnd();OMR;ILOpCode;0;0
isArithmetic;isArithmetic();OMR;ILOpCode;0;0
isArrayLength;isArrayLength();OMR;ILOpCode;0;0
isArrayRef;isArrayRef();OMR;ILOpCode;0;0
isAssociative;isAssociative();OMR;ILOpCode;0;0
isBitwiseLogical;isBitwiseLogical();OMR;ILOpCode;0;0
isBndCheck;isBndCheck();OMR;ILOpCode;0;0
isBooleanCompare;isBooleanCompare();OMR;ILOpCode;0;0
isBranch;isBranch();OMR;ILOpCode;0;0
isByte;isByte();OMR;ILOpCode;0;0
isCall;isCall();OMR;ILOpCode;0;0
isCallDirect;isCallDirect();OMR;ILOpCode;0;0
isCallIndirect;isCallIndirect();OMR;ILOpCode;0;0
isCase;isCase();OMR;ILOpCode;0;0
isCheck;isCheck();OMR;ILOpCode;0;0
isCheckCast;isCheckCast();OMR;ILOpCode;0;0
isCheckCastOrNullCheck;isCheckCastOrNullCheck();OMR;ILOpCode;0;0
isCommutative;isCommutative();OMR;ILOpCode;0;0
isCompBranchOnly;isCompBranchOnly();OMR;ILOpCode;0;0
isCompareDouble;isCompareDouble();OMR;ILOpCode;0;0
isCompareForEquality;isCompareForEquality();OMR;ILOpCode;0;0
isCompareForOrder;isCompareForOrder();OMR;ILOpCode;0;0
isCompareTrueIfEqual;isCompareTrueIfEqual();OMR;ILOpCode;0;0
isCompareTrueIfGreater;isCompareTrueIfGreater();OMR;ILOpCode;0;0
isCompareTrueIfLess;isCompareTrueIfLess();OMR;ILOpCode;0;0
isCompareTrueIfUnordered;isCompareTrueIfUnordered();OMR;ILOpCode;0;0
isCondCodeComputation;isCondCodeComputation();OMR;ILOpCode;0;0
isConversion;isConversion();OMR;ILOpCode;0;0
isDiv;isDiv();OMR;ILOpCode;0;0
isDouble;isDouble();OMR;ILOpCode;0;0
isEqualCmp;isEqualCmp(TR::ILOpCodes);OMR;ILOpCode;0;0
isExceptionRangeFence;isExceptionRangeFence();OMR;ILOpCode;0;0
isExponentiation;isExponentiation();OMR;ILOpCode;0;0
isFence;isFence();OMR;ILOpCode;0;0
isFloat;isFloat();OMR;ILOpCode;0;0
isFloatingPoint;isFloatingPoint();OMR;ILOpCode;0;0
isFunctionCall;isFunctionCall();OMR;ILOpCode;0;0
isGoto;isGoto();OMR;ILOpCode;0;0
isGreaterCmp;isGreaterCmp(TR::ILOpCodes);OMR;ILOpCode;0;0
isIf;isIf();OMR;ILOpCode;0;0
isIndirect;isIndirect();OMR;ILOpCode;0;0
isInt;isInt();OMR;ILOpCode;0;0
isInteger;isInteger();OMR;ILOpCode;0;0
isIntegerOrAddress;isIntegerOrAddress();OMR;ILOpCode;0;0
isIntegralConst;isIntegralConst();OMR;ILOpCode;0;0
isIntegralLoadVar;isIntegralLoadVar();OMR;ILOpCode;0;0
isJumpWithMultipleTargets;isJumpWithMultipleTargets();OMR;ILOpCode;0;0
isLeftRotate;isLeftRotate();OMR;ILOpCode;0;0
isLeftShift;isLeftShift();OMR;ILOpCode;0;0
isLessCmp;isLessCmp(TR::ILOpCodes);OMR;ILOpCode;0;0
isLikeDef;isLikeDef();OMR;ILOpCode;0;0
isLikeUse;isLikeUse();OMR;ILOpCode;0;0
isLoad;isLoad();OMR;ILOpCode;0;0
isLoadAddr;isLoadAddr();OMR;ILOpCode;0;0
isLoadConst;isLoadConst();OMR;ILOpCode;0;0
isLoadDirect;isLoadDirect();OMR;ILOpCode;0;0
isLoadDirectOrReg;isLoadDirectOrReg();OMR;ILOpCode;0;0
isLoadIndirect;isLoadIndirect();OMR;ILOpCode;0;0
isLoadReg;isLoadReg();OMR;ILOpCode;0;0
isLoadVar;isLoadVar();OMR;ILOpCode;0;0
isLoadVarDirect;isLoadVarDirect();OMR;ILOpCode;0;0
isLoadVarOrStore;isLoadVarOrStore();OMR;ILOpCode;0;0
isLong;isLong();OMR;ILOpCode;0;0
isLongCompare;isLongCompare();OMR;ILOpCode;0;0
isMax;isMax();OMR;ILOpCode;0;0
isMemToMemOp;isMemToMemOp();OMR;ILOpCode;0;0
isMemoryReference;isMemoryReference();OMR;ILOpCode;0;0
isMin;isMin();OMR;ILOpCode;0;0
isMul;isMul();OMR;ILOpCode;0;0
isNeg;isNeg();OMR;ILOpCode;0;0
isNew;isNew();OMR;ILOpCode;0;0
isNotEqualCmp;isNotEqualCmp(TR::ILOpCodes);OMR;ILOpCode;0;0
isNullCheck;isNullCheck();OMR;ILOpCode;0;0
isOpCodeAnImplicitNoOp;isOpCodeAnImplicitNoOp(class OMR::ILOpCode &);OMR;ILOpCode;0;0
isOr;isOr();OMR;ILOpCode;0;0
isOverflowCheck;isOverflowCheck();OMR;ILOpCode;0;0
isOverflowCompare;isOverflowCompare();OMR;ILOpCode;0;0
isRef;isRef();OMR;ILOpCode;0;0
isRem;isRem();OMR;ILOpCode;0;0
isResolveCheck;isResolveCheck();OMR;ILOpCode;0;0
isResolveOrNullCheck;isResolveOrNullCheck();OMR;ILOpCode;0;0
isReturn;isReturn();OMR;ILOpCode;0;0
isReverseLoadOrStore;isReverseLoadOrStore();OMR;ILOpCode;0;0
isRightShift;isRightShift();OMR;ILOpCode;0;0
isRotate;isRotate();OMR;ILOpCode;0;0
isShift;isShift();OMR;ILOpCode;0;0
isShiftLogical;isShiftLogical();OMR;ILOpCode;0;0
isShort;isShort();OMR;ILOpCode;0;0
isSignExtension;isSignExtension();OMR;ILOpCode;0;0
isSignedExponentiation;isSignedExponentiation();OMR;ILOpCode;0;0
isSignum;isSignum();OMR;ILOpCode;0;0
isSpineCheck;isSpineCheck();OMR;ILOpCode;0;0
isSqrt;isSqrt();OMR;ILOpCode;0;0
isStore;isStore();OMR;ILOpCode;0;0
isStoreDirect;isStoreDirect();OMR;ILOpCode;0;0
isStoreDirectOrReg;isStoreDirectOrReg();OMR;ILOpCode;0;0
isStoreIndirect;isStoreIndirect();OMR;ILOpCode;0;0
isStoreReg;isStoreReg();OMR;ILOpCode;0;0
isStrictWidenConversion;isStrictWidenConversion();OMR;ILOpCode;0;0
isStrictlyGreaterThanCmp;isStrictlyGreaterThanCmp(TR::ILOpCodes);OMR;ILOpCode;0;0
isStrictlyLessThanCmp;isStrictlyLessThanCmp(TR::ILOpCodes);OMR;ILOpCode;0;0
isSub;isSub();OMR;ILOpCode;0;0
isSupportedForPRE;isSupportedForPRE();OMR;ILOpCode;0;0
isSwitch;isSwitch();OMR;ILOpCode;0;0
isTernary;isTernary();OMR;ILOpCode;0;0
isTernaryAdd;isTernaryAdd();OMR;ILOpCode;0;0
isTernarySub;isTernarySub();OMR;ILOpCode;0;0
isTreeTop;isTreeTop();OMR;ILOpCode;0;0
isTwoChildrenAddress;isTwoChildrenAddress();OMR;ILOpCode;0;0
isUnsigned;isUnsigned();OMR;ILOpCode;0;0
isUnsignedCompare;isUnsignedCompare();OMR;ILOpCode;0;0
isUnsignedConversion;isUnsignedConversion();OMR;ILOpCode;0;0
isUnsignedExponentiation;isUnsignedExponentiation();OMR;ILOpCode;0;0
isVector;isVector();OMR;ILOpCode;0;0
isVectorReduction;isVectorReduction();OMR;ILOpCode;0;0
isVoid;isVoid();OMR;ILOpCode;0;0
isWrtBar;isWrtBar();OMR;ILOpCode;0;0
isXor;isXor();OMR;ILOpCode;0;0
isZeroExtension;isZeroExtension();OMR;ILOpCode;0;0
mayUseSystemStack;mayUseSystemStack();OMR;ILOpCode;0;0
multiplyOpCode;multiplyOpCode(TR::DataType);OMR;ILOpCode;0;0
mustBeLowered;mustBeLowered();OMR;ILOpCode;0;0
negateOpCode;negateOpCode(TR::DataType);OMR;ILOpCode;0;0
orOpCode;orOpCode(TR::DataType);OMR;ILOpCode;0;0
properties1;properties1();OMR;ILOpCode;0;0
properties2;properties2();OMR;ILOpCode;0;0
properties3;properties3();OMR;ILOpCode;0;0
properties4;properties4();OMR;ILOpCode;0;0
remainderOpCode;remainderOpCode(TR::DataType);OMR;ILOpCode;0;0
returnOpCode;returnOpCode(TR::DataType);OMR;ILOpCode;0;0
setOpCodeValue;setOpCodeValue(TR::ILOpCodes);OMR;ILOpCode;0;0
setTarget;setTarget();OMR;ILOpCode;0;0
shiftLeftOpCode;shiftLeftOpCode(TR::DataType);OMR;ILOpCode;0;0
shiftRightOpCode;shiftRightOpCode(TR::DataType);OMR;ILOpCode;0;0
skipDynamicLitPoolOnInts;skipDynamicLitPoolOnInts();OMR;ILOpCode;0;0
subtractOpCode;subtractOpCode(TR::DataType);OMR;ILOpCode;0;0
typeProperties;typeProperties();OMR;ILOpCode;0;0
unsignedAddOpCode;unsignedAddOpCode(TR::DataType,_Bool);OMR;ILOpCode;0;0
unsignedShiftLeftOpCode;unsignedShiftLeftOpCode(TR::DataType);OMR;ILOpCode;0;0
unsignedShiftRightOpCode;unsignedShiftRightOpCode(TR::DataType);OMR;ILOpCode;0;0
unsignedSubtractOpCode;unsignedSubtractOpCode(TR::DataType);OMR;ILOpCode;0;0
xorOpCode;xorOpCode(TR::DataType);OMR;ILOpCode;0;0
~ILOpCode;~ILOpCode();OMR;ILOpCode;1;0
~ILOpCode;~ILOpCode();TR;ILOpCode;1;0
fclose;fclose(TR::FILE *);OMR;IO;0;0
fflush;fflush(TR::FILE *);OMR;IO;0;0
fopen;fopen(char *,const char *,_Bool);OMR;IO;0;0
fprintf;fprintf(TR::FILE *,const char *);OMR;IO;0;0
fseek;fseek(TR::FILE *,intptr_t,int32_t);OMR;IO;0;0
ftell;ftell(TR::FILE *);OMR;IO;0;0
printf;printf(const char *);OMR;IO;0;0
vfprintf;vfprintf(TR::FILE *,const char *,va_list);OMR;IO;0;0
KnownObjectTable;KnownObjectTable(const class OMR::KnownObjectTable &);OMR;KnownObjectTable;1;0
KnownObjectTable;KnownObjectTable(TR::Compilation *);OMR;KnownObjectTable;0;0
KnownObjectTable;KnownObjectTable(TR::Compilation *);TR;KnownObjectTable;0;0
KnownObjectTable;KnownObjectTable(class OMR::KnownObjectTable &&);OMR;KnownObjectTable;1;0
addArrayWithConstantElements;addArrayWithConstantElements(Index);OMR;KnownObjectTable;0;0
comp;comp();OMR;KnownObjectTable;0;0
dumpTo;dumpTo(TR::FILE *,TR::Compilation *);OMR;KnownObjectTable;0;1
fe;fe();OMR;KnownObjectTable;0;0
getEndIndex;getEndIndex();OMR;KnownObjectTable;0;1
getExistingIndexAt;getExistingIndexAt(uintptrj_t *);OMR;KnownObjectTable;0;0
getIndex;getIndex(uintptrj_t);OMR;KnownObjectTable;0;1
getIndex;getIndex(uintptrj_t,_Bool);OMR;KnownObjectTable;0;0
getIndexAt;getIndexAt(uintptrj_t *,_Bool);OMR;KnownObjectTable;0;0
getIndexAt;getIndexAt(uintptrj_t *);OMR;KnownObjectTable;0;0
getPointer;getPointer(Index);OMR;KnownObjectTable;0;0
getPointerLocation;getPointerLocation(Index);OMR;KnownObjectTable;0;1
getfPointerLocationAt;getfPointerLocationAt(uintptrj_t *);OMR;KnownObjectTable;0;0
isArrayWithConstantElements;isArrayWithConstantElements(Index);OMR;KnownObjectTable;0;0
isNull;isNull(Index);OMR;KnownObjectTable;0;1
operator=;operator=(class OMR::KnownObjectTable &&);OMR;KnownObjectTable;1;0
operator=;operator=(const class OMR::KnownObjectTable &);OMR;KnownObjectTable;1;0
operator=;operator=(const class TR::KnownObjectTable &);TR;KnownObjectTable;1;0
operator=;operator=(class TR::KnownObjectTable &&);TR;KnownObjectTable;1;0
self;self();OMR;KnownObjectTable;0;0
setComp;setComp(TR::Compilation *);OMR;KnownObjectTable;0;0
setFe;setFe(class TR_FrontEnd *);OMR;KnownObjectTable;0;0
~KnownObjectTable;~KnownObjectTable();OMR;KnownObjectTable;1;0
~KnownObjectTable;~KnownObjectTable();TR;KnownObjectTable;1;0
Monitor;Monitor();OMR;Monitor;1;0
Monitor;Monitor();TR;Monitor;1;0
Monitor;Monitor(const class OMR::Monitor &);OMR;Monitor;1;0
Monitor;Monitor(class TR::Monitor &&);TR;Monitor;1;0
create;create(char *);OMR;Monitor;0;0
destroy;destroy(TR::Monitor *);OMR;Monitor;0;0
destroy;destroy();OMR;Monitor;0;0
enter;enter();OMR;Monitor;0;0
exit;exit();OMR;Monitor;0;0
getName;getName();OMR;Monitor;0;0
init;init(char *);OMR;Monitor;0;0
notify;notify();OMR;Monitor;0;0
notifyAll;notifyAll();OMR;Monitor;0;0
num_waiting;num_waiting();OMR;Monitor;0;0
operator delete;operator delete(void *);OMR;Monitor;0;0
operator new;operator new(size_t);OMR;Monitor;0;0
operator=;operator=(const class OMR::Monitor &);OMR;Monitor;1;0
operator=;operator=(class TR::Monitor &&);TR;Monitor;1;0
self;self();OMR;Monitor;0;0
try_enter;try_enter();OMR;Monitor;0;0
wait;wait();OMR;Monitor;0;0
wait_timed;wait_timed(int64_t,int32_t);OMR;Monitor;0;0
~Monitor;~Monitor();OMR;Monitor;0;0
~Monitor;~Monitor();TR;Monitor;0;0
Node;Node(const class OMR::Node &);OMR;Node;1;0
Node;Node(TR::Node *,TR::ILOpCodes,uint16_t);OMR;Node;0;0
Node;Node(TR::Node *,TR::ILOpCodes,uint16_t);TR;Node;0;0
Node;Node(TR::Node *,uint16_t);OMR;Node;0;0
Node;Node();OMR;Node;0;0
Node;Node();TR;Node;0;0
Node;Node(class TR::Node &);TR;Node;0;0
Node;Node(class TR::Node *,uint16_t);TR;Node;0;0
aconst;aconst(uintptrj_t);OMR;Node;0;0
aconst;aconst(TR::Node *,uintptrj_t);OMR;Node;0;0
aconst;aconst(TR::Node *,uintptrj_t,uint8_t);OMR;Node;0;0
addChildren;addChildren(TR::Node **,uint16_t);OMR;Node;0;0
addChildrenAndSymRef;addChildrenAndSymRef(uint16_t,TR::Node *);OMR;Node;0;0
addChildrenAndSymRef;addChildrenAndSymRef(uint16_t,TR::SymbolReference *);OMR;Node;0;0
addExtensionElements;addExtensionElements(uint16_t);OMR;Node;0;0
addressPointsAtObject;addressPointsAtObject();OMR;Node;0;0
anchorConstChildren;anchorConstChildren();OMR;Node;0;0
bconst;bconst(TR::Node *,int8_t);OMR;Node;0;0
bconst;bconst(int8_t);OMR;Node;0;0
buconst;buconst(uint8_t);OMR;Node;0;0
buconst;buconst(TR::Node *,uint8_t);OMR;Node;0;0
canCauseGC;canCauseGC();OMR;Node;0;0
canCheckReferenceIsNonNull;canCheckReferenceIsNonNull();OMR;Node;0;0
canChkNodeCreatedByPRE;canChkNodeCreatedByPRE();OMR;Node;0;0
canDesynchronizeCall;canDesynchronizeCall();OMR;Node;0;0
canEvaluate;canEvaluate();OMR;Node;0;0
canGCandExcept;canGCandExcept();OMR;Node;0;0
canGCandReturn;canGCandReturn();OMR;Node;0;0
canGet32bitIntegralValue;canGet32bitIntegralValue();OMR;Node;0;0
canGet64bitIntegralValue;canGet64bitIntegralValue();OMR;Node;0;0
canOmitSync;canOmitSync();OMR;Node;0;0
canSkipSync;canSkipSync();OMR;Node;0;0
canSkipZeroInitialization;canSkipZeroInitialization();OMR;Node;0;0
cannotOverflow;cannotOverflow();OMR;Node;0;0
cannotTrackLocalStringUses;cannotTrackLocalStringUses();OMR;Node;0;0
cannotTrackLocalUses;cannotTrackLocalUses();OMR;Node;0;0
cconst;cconst(TR::Node *,uint16_t);OMR;Node;0;0
cconst;cconst(uint16_t);OMR;Node;0;0
childIterator;childIterator(int32_t);OMR;Node;0;0
childrenWereSwapped;childrenWereSwapped();OMR;Node;0;0
chkAllocationCanBeRemoved;chkAllocationCanBeRemoved();OMR;Node;0;0
chkAndBitOpMem;chkAndBitOpMem();OMR;Node;0;0
chkArrayChkPrimitiveArray1;chkArrayChkPrimitiveArray1();OMR;Node;0;0
chkArrayChkPrimitiveArray2;chkArrayChkPrimitiveArray2();OMR;Node;0;0
chkArrayChkReferenceArray1;chkArrayChkReferenceArray1();OMR;Node;0;0
chkArrayChkReferenceArray2;chkArrayChkReferenceArray2();OMR;Node;0;0
chkArrayCmpLen;chkArrayCmpLen();OMR;Node;0;0
chkArrayCmpSign;chkArrayCmpSign();OMR;Node;0;0
chkArrayTRT;chkArrayTRT();OMR;Node;0;0
chkBackwardArrayCopy;chkBackwardArrayCopy();OMR;Node;0;0
chkByteToByteTranslate;chkByteToByteTranslate();OMR;Node;0;0
chkByteToCharTranslate;chkByteToCharTranslate();OMR;Node;0;0
chkCannotOverflow;chkCannotOverflow();OMR;Node;0;0
chkCannotTrackLocalStringUses;chkCannotTrackLocalStringUses();OMR;Node;0;0
chkCannotTrackLocalUses;chkCannotTrackLocalUses();OMR;Node;0;0
chkCharArrayTRT;chkCharArrayTRT();OMR;Node;0;0
chkCharToByteTranslate;chkCharToByteTranslate();OMR;Node;0;0
chkCharToCharTranslate;chkCharToCharTranslate();OMR;Node;0;0
chkClassPointerConstant;chkClassPointerConstant();OMR;Node;0;0
chkCompressionSequence;chkCompressionSequence();OMR;Node;0;0
chkDesynchronizeCall;chkDesynchronizeCall();OMR;Node;0;0
chkDontMoveUnderBranch;chkDontMoveUnderBranch();OMR;Node;0;0
chkDontTransformArrayCopyCall;chkDontTransformArrayCopyCall();OMR;Node;0;0
chkEscapesInColdBlock;chkEscapesInColdBlock();OMR;Node;0;0
chkFoldedImplicitNULLCHK;chkFoldedImplicitNULLCHK();OMR;Node;0;0
chkForwardArrayCopy;chkForwardArrayCopy();OMR;Node;0;0
chkHalfWordElementArrayCopy;chkHalfWordElementArrayCopy();OMR;Node;0;0
chkHeapObjectWrtBar;chkHeapObjectWrtBar();OMR;Node;0;0
chkHeapificationAlloc;chkHeapificationAlloc();OMR;Node;0;0
chkHeapificationStore;chkHeapificationStore();OMR;Node;0;0
chkHighWordZero;chkHighWordZero();OMR;Node;0;0
chkIsPrivatizedInlinerArg;chkIsPrivatizedInlinerArg();OMR;Node;0;0
chkIsReferenceNonNull;chkIsReferenceNonNull();OMR;Node;0;0
chkLiveMonitorInitStore;chkLiveMonitorInitStore();OMR;Node;0;0
chkLocalObjectMonitor;chkLocalObjectMonitor();OMR;Node;0;0
chkMethodPointerConstant;chkMethodPointerConstant();OMR;Node;0;0
chkNOPLongStore;chkNOPLongStore();OMR;Node;0;0
chkNeedsPrecisionAdjustment;chkNeedsPrecisionAdjustment();OMR;Node;0;0
chkNoArrayStoreCheckArrayCopy;chkNoArrayStoreCheckArrayCopy();OMR;Node;0;0
chkNodeCreatedByPRE;chkNodeCreatedByPRE();OMR;Node;0;0
chkNodeRecognizedArrayCopyCall;chkNodeRecognizedArrayCopyCall();OMR;Node;0;0
chkNonHeapObjectWrtBar;chkNonHeapObjectWrtBar();OMR;Node;0;0
chkNormalizeNanValues;chkNormalizeNanValues();OMR;Node;0;0
chkNormalizedShift;chkNormalizedShift();OMR;Node;0;0
chkOmitSync;chkOmitSync();OMR;Node;0;0
chkOpsNodeRequiresConditionCodes;chkOpsNodeRequiresConditionCodes();OMR;Node;0;0
chkOrBitOpMem;chkOrBitOpMem();OMR;Node;0;0
chkPointsToNonNull;chkPointsToNonNull();OMR;Node;0;0
chkPointsToNull;chkPointsToNull();OMR;Node;0;0
chkPrimitiveLockedRegion;chkPrimitiveLockedRegion();OMR;Node;0;0
chkRarePathForwardArrayCopy;chkRarePathForwardArrayCopy();OMR;Node;0;0
chkReadMonitor;chkReadMonitor();OMR;Node;0;0
chkReferenceArrayCopy;chkReferenceArrayCopy();OMR;Node;0;0
chkReturnIsDummy;chkReturnIsDummy();OMR;Node;0;0
chkSafeToSkipTableBoundCheck;chkSafeToSkipTableBoundCheck();OMR;Node;0;0
chkSeenRealReference;chkSeenRealReference();OMR;Node;0;0
chkSimpleDivCheck;chkSimpleDivCheck();OMR;Node;0;0
chkSkipSync;chkSkipSync();OMR;Node;0;0
chkSkipWrtBar;chkSkipWrtBar();OMR;Node;0;0
chkSkipZeroInitialization;chkSkipZeroInitialization();OMR;Node;0;0
chkSourceByteArrayTranslate;chkSourceByteArrayTranslate();OMR;Node;0;0
chkSourceCellIsTermChar;chkSourceCellIsTermChar();OMR;Node;0;0
chkStaticMonitor;chkStaticMonitor();OMR;Node;0;0
chkStoreAlreadyEvaluated;chkStoreAlreadyEvaluated();OMR;Node;0;0
chkStoredValueIsIrrelevant;chkStoredValueIsIrrelevant();OMR;Node;0;0
chkSyncMethodMonitor;chkSyncMethodMonitor();OMR;Node;0;0
chkTableBackedByRawStorage;chkTableBackedByRawStorage();OMR;Node;0;0
chkTargetByteArrayTranslate;chkTargetByteArrayTranslate();OMR;Node;0;0
chkTermCharNodeIsHint;chkTermCharNodeIsHint();OMR;Node;0;0
chkTheVirtualCallNodeForAGuardedInlinedCall;chkTheVirtualCallNodeForAGuardedInlinedCall();OMR;Node;0;0
chkThrowInsertedByOSR;chkThrowInsertedByOSR();OMR;Node;0;0
chkUnsigned;chkUnsigned();OMR;Node;0;0
chkUseCallForFloatToFixedConversion;chkUseCallForFloatToFixedConversion();OMR;Node;0;0
chkWordElementArrayCopy;chkWordElementArrayCopy();OMR;Node;0;0
chkXorBitOpMem;chkXorBitOpMem();OMR;Node;0;0
collectSymbolReferencesInNode;collectSymbolReferencesInNode(class TR_BitVector &,vcount_t);OMR;Node;0;0
computeDataType;computeDataType();OMR;Node;0;0
computeIsCollectedReference;computeIsCollectedReference();OMR;Node;0;0
computeIsInternalPointer;computeIsInternalPointer();OMR;Node;0;0
containsCall;containsCall();OMR;Node;0;0
containsCompressionSequence;containsCompressionSequence();OMR;Node;0;0
containsDoNotPropagateNode;containsDoNotPropagateNode(vcount_t);OMR;Node;0;0
containsNode;containsNode(TR::Node *,vcount_t);OMR;Node;0;0
copy;copy(TR::Node *);OMR;Node;0;0
copy;copy(TR::Node *,int32_t);OMR;Node;0;0
copyByteCodeInfo;copyByteCodeInfo(TR::Node *);OMR;Node;0;0
copyChildren;copyChildren(TR::Node *,uint16_t,_Bool);OMR;Node;0;0
copyNodeExtension;copyNodeExtension(TR::NodeExtension *,uint16_t,size_t);OMR;Node;0;0
copyValidProperties;copyValidProperties(TR::Node *,TR::Node *);OMR;Node;0;0
countChildren;countChildren(TR::ILOpCodes);OMR;Node;0;0
countNumberOfNodesInSubtree;countNumberOfNodesInSubtree(vcount_t);OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::TreeTop *);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,int32_t,TR::TreeTop *);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,TR::TreeTop *);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,int32_t,TR::TreeTop *);OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
createAddConstantToAddress;createAddConstantToAddress(TR::Node *,intptr_t,TR::Node *);OMR;Node;0;0
createAddressNode;createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t,uint8_t);OMR;Node;0;0
createAddressNode;createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t);OMR;Node;0;0
createAllocationFence;createAllocationFence(TR::Node *,TR::Node *);OMR;Node;0;0
createArrayOperation;createArrayOperation(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
createArrayStoreCheckInfo;createArrayStoreCheckInfo();OMR;Node;0;0
createArraycopy;createArraycopy(TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
createArraycopy;createArraycopy(TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
createArraycopy;createArraycopy();OMR;Node;0;0
createCase;createCase(TR::Node *,TR::TreeTop *,CASECONST_TYPE);OMR;Node;0;0
createCompressedRefsAnchor;createCompressedRefsAnchor(TR::Node *);OMR;Node;0;0
createConstDead;createConstDead(TR::Node *,TR::DataType,intptrj_t);OMR;Node;0;0
createConstOne;createConstOne(TR::Node *,TR::DataType);OMR;Node;0;0
createConstZeroValue;createConstZeroValue(TR::Node *,TR::DataType);OMR;Node;0;0
createInternal;createInternal(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *);OMR;Node;0;0
createLiteralPoolAddress;createLiteralPoolAddress(TR::Node *,size_t);OMR;Node;0;0
createLoad;createLoad(TR::Node *,TR::SymbolReference *);OMR;Node;0;0
createLoad;createLoad(TR::SymbolReference *);OMR;Node;0;0
createLongIfNeeded;createLongIfNeeded();OMR;Node;0;0
createNodeExtension;createNodeExtension(uint16_t);OMR;Node;0;0
createOnStack;createOnStack(TR::Node *,TR::ILOpCodes,uint16_t);OMR;Node;0;0
createRelative32BitFenceNode;createRelative32BitFenceNode(void *);OMR;Node;0;0
createRelative32BitFenceNode;createRelative32BitFenceNode(TR::Node *,void *);OMR;Node;0;0
createStore;createStore(TR::Node *,TR::SymbolReference *,TR::Node *);OMR;Node;0;0
createStore;createStore(TR::SymbolReference *,TR::Node *,TR::ILOpCodes,size_t);OMR;Node;0;0
createStore;createStore(TR::SymbolReference *,TR::Node *);OMR;Node;0;0
createStore;createStore(TR::SymbolReference *,TR::Node *,TR::ILOpCodes);OMR;Node;0;0
createStoresForVar;createStoresForVar(TR::SymbolReference *&,TR::TreeTop *,_Bool);OMR;Node;0;0
createVectorConst;createVectorConst(TR::Node *,TR::DataType);OMR;Node;0;0
createVectorConversion;createVectorConversion(TR::Node *,TR::DataType);OMR;Node;0;0
createWithRoomForFive;createWithRoomForFive(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Node *,TR::Node *,void *);OMR;Node;0;0
createWithRoomForOneMore;createWithRoomForOneMore(TR::ILOpCodes,uint16_t,void *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
createWithRoomForThree;createWithRoomForThree(TR::ILOpCodes,TR::Node *,TR::Node *,void *);OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *,uintptr_t);OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *);OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::Node *,uintptr_t,TR::SymbolReference *);OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::Node *,TR::ILOpCodes,uint16_t,TR::SymbolReference *);OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::SymbolReference *);OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,uintptr_t,TR::SymbolReference *);OMR;Node;0;0
createbranch;createbranch(TR::ILOpCodes,TR::Node *,TR::TreeTop *);OMR;Node;0;0
createif;createif(TR::ILOpCodes,TR::Node *,TR::Node *,TR::TreeTop *);OMR;Node;0;0
decFutureUseCount;decFutureUseCount();OMR;Node;0;0
decLocalIndex;decLocalIndex();OMR;Node;0;0
decReferenceCount;decReferenceCount();OMR;Node;0;0
devirtualizeCall;devirtualizeCall(TR::TreeTop *);OMR;Node;0;0
divisionCannotOverflow;divisionCannotOverflow();OMR;Node;0;0
dontEliminateStores;dontEliminateStores(_Bool);OMR;Node;0;0
duplicateTree;duplicateTree(_Bool);OMR;Node;0;0
duplicateTreeForCodeMotion;duplicateTreeForCodeMotion();OMR;Node;0;0
duplicateTreeWithCommoning;duplicateTreeWithCommoning(TR::Allocator);OMR;Node;0;0
duplicateTreeWithCommoningImpl;duplicateTreeWithCommoningImpl(CS2::HashTable<TR::Node *, TR::Node *, TR::Allocator> &);OMR;Node;0;0
duplicateTree_DEPRECATED;duplicateTree_DEPRECATED(_Bool);OMR;Node;0;0
escapesInColdBlock;escapesInColdBlock();OMR;Node;0;0
exceptionsRaised;exceptionsRaised();OMR;Node;0;0
extractTheNullCheck;extractTheNullCheck(TR::TreeTop *);OMR;Node;0;0
findChild;findChild(TR::ILOpCodes,_Bool);OMR;Node;0;0
findChildIndex;findChildIndex(TR::Node *);OMR;Node;0;0
freeExtensionIfExists;freeExtensionIfExists();OMR;Node;0;0
gatherAllNodesWhichMightKillCondCode;gatherAllNodesWhichMightKillCondCode(vcount_t,TR::list<TR::Node *> &);OMR;Node;0;0
get32bitIntegralValue;get32bitIntegralValue();OMR;Node;0;0
get64bitIntegralValue;get64bitIntegralValue();OMR;Node;0;0
get64bitIntegralValueAsUnsigned;get64bitIntegralValueAsUnsigned();OMR;Node;0;0
getAOTMethod;getAOTMethod();OMR;Node;0;0
getAddress;getAddress();OMR;Node;0;0
getAllocation;getAllocation();OMR;Node;0;0
getAndDecChild;getAndDecChild(int32_t);OMR;Node;0;0
getArgument;getArgument(int32_t);OMR;Node;0;0
getArrayComponentClassInNode;getArrayComponentClassInNode();OMR;Node;0;0
getArrayCopyElementType;getArrayCopyElementType();OMR;Node;0;0
getArrayStoreClassInNode;getArrayStoreClassInNode();OMR;Node;0;0
getArrayStride;getArrayStride();OMR;Node;0;0
getBlock;getBlock(_Bool);OMR;Node;0;0
getBranchDestination;getBranchDestination();OMR;Node;0;0
getByte;getByte();OMR;Node;0;0
getByteCodeIndex;getByteCodeIndex();OMR;Node;0;0
getByteCodeInfo;getByteCodeInfo();OMR;Node;0;0
getCaseConstant;getCaseConstant();OMR;Node;0;0
getCaseIndexUpperBound;getCaseIndexUpperBound();OMR;Node;0;0
getChild;getChild(int32_t);OMR;Node;0;0
getConstValue;getConstValue();OMR;Node;0;0
getDataType;getDataType();OMR;Node;0;0
getDouble;getDouble();OMR;Node;0;0
getDoubleBits;getDoubleBits();OMR;Node;0;0
getEvaluationPriority;getEvaluationPriority(TR::CodeGenerator *);OMR;Node;0;0
getExtendedChild;getExtendedChild(int32_t);OMR;Node;0;0
getFirstArgument;getFirstArgument();OMR;Node;0;0
getFirstArgumentIndex;getFirstArgumentIndex();OMR;Node;0;0
getFirstChild;getFirstChild();OMR;Node;0;0
getFlags;getFlags();OMR;Node;0;0
getFloat;getFloat();OMR;Node;0;0
getFloatBits;getFloatBits();OMR;Node;0;0
getFutureUseCount;getFutureUseCount();OMR;Node;0;0
getGlobalIndex;getGlobalIndex();OMR;Node;0;0
getGlobalRegisterNumber;getGlobalRegisterNumber();OMR;Node;0;0
getHighGlobalRegisterNumber;getHighGlobalRegisterNumber();OMR;Node;0;0
getInlinedSiteIndex;getInlinedSiteIndex();OMR;Node;0;0
getInt;getInt();OMR;Node;0;0
getIsHPREligible;getIsHPREligible();OMR;Node;0;0
getLabel;getLabel();OMR;Node;0;0
getLastChild;getLastChild();OMR;Node;0;0
getLiteralPoolOffset;getLiteralPoolOffset();OMR;Node;0;0
getLocalIndex;getLocalIndex();OMR;Node;0;0
getLongInt;getLongInt();OMR;Node;0;0
getLongIntHigh;getLongIntHigh();OMR;Node;0;0
getLongIntLow;getLongIntLow();OMR;Node;0;0
getLowGlobalRegisterNumber;getLowGlobalRegisterNumber();OMR;Node;0;0
getMaxIntegerPrecision;getMaxIntegerPrecision();OMR;Node;0;0
getMethod;getMethod();OMR;Node;0;0
getMonitorClass;getMonitorClass(class TR_ResolvedMethod *);OMR;Node;0;0
getMonitorClassInNode;getMonitorClassInNode();OMR;Node;0;0
getMonitorInfo;getMonitorInfo();OMR;Node;0;0
getName;getName(class TR_Debug *);OMR;Node;0;0
getNullCheckReference;getNullCheckReference();OMR;Node;0;0
getNumArguments;getNumArguments();OMR;Node;0;0
getNumChildren;getNumChildren();OMR;Node;0;0
getNumRelocations;getNumRelocations();OMR;Node;0;0
getNumberOfSlots;getNumberOfSlots();OMR;Node;0;0
getOpCode;getOpCode();OMR;Node;0;0
getOpCodeValue;getOpCodeValue();OMR;Node;0;0
getOverflowCheckOperation;getOverflowCheckOperation();OMR;Node;0;0
getOwningMethod;getOwningMethod();OMR;Node;0;0
getPinningArrayPointer;getPinningArrayPointer();OMR;Node;0;0
getReferenceCount;getReferenceCount();OMR;Node;0;0
getRegLoadStoreSymbolReference;getRegLoadStoreSymbolReference();OMR;Node;0;0
getRegister;getRegister();OMR;Node;0;0
getRelocationDestination;getRelocationDestination(uint32_t);OMR;Node;0;0
getRelocationType;getRelocationType();OMR;Node;0;0
getReturnCode;getReturnCode(_Bool);OMR;Node;0;0
getReturnReason;getReturnReason();OMR;Node;0;0
getRoundedSize;getRoundedSize();OMR;Node;0;0
getSecondChild;getSecondChild();OMR;Node;0;0
getShortInt;getShortInt();OMR;Node;0;0
getSize;getSize();OMR;Node;0;0
getSourceCellIsTermChar;getSourceCellIsTermChar();OMR;Node;0;0
getStoreNode;getStoreNode();OMR;Node;0;0
getSymbol;getSymbol();OMR;Node;0;0
getSymbolReference;getSymbolReference();OMR;Node;0;0
getSymbolReferenceOfAnyType;getSymbolReferenceOfAnyType();OMR;Node;0;0
getTableBackedByRawStorage;getTableBackedByRawStorage();OMR;Node;0;0
getTermCharNodeIsHint;getTermCharNodeIsHint();OMR;Node;0;0
getThirdChild;getThirdChild();OMR;Node;0;0
getType;getType();OMR;Node;0;0
getTypeSignature;getTypeSignature(int32_t &,enum TR_AllocationKind);OMR;Node;0;0
getUnionPropertyA_Type;getUnionPropertyA_Type();OMR;Node;0;0
getUnsignedByte;getUnsignedByte();OMR;Node;0;0
getUnsignedConstValue;getUnsignedConstValue();OMR;Node;0;0
getUnsignedInt;getUnsignedInt();OMR;Node;0;0
getUnsignedLongInt;getUnsignedLongInt();OMR;Node;0;0
getUnsignedLongIntHigh;getUnsignedLongIntHigh();OMR;Node;0;0
getUnsignedLongIntLow;getUnsignedLongIntLow();OMR;Node;0;0
getUnsignedShortInt;getUnsignedShortInt();OMR;Node;0;0
getUseDefIndex;getUseDefIndex();OMR;Node;0;0
getValueChild;getValueChild();OMR;Node;0;0
getVirtualCallNodeForGuard;getVirtualCallNodeForGuard();OMR;Node;0;0
getVirtualCallTreeForGuard;getVirtualCallTreeForGuard();OMR;Node;0;0
getVisitCount;getVisitCount();OMR;Node;0;0
hasArrayStoreCheckInfo;hasArrayStoreCheckInfo();OMR;Node;0;0
hasArrayStride;hasArrayStride();OMR;Node;0;0
hasBeenRun;hasBeenRun();OMR;Node;0;0
hasBeenVisitedForHints;hasBeenVisitedForHints();OMR;Node;0;0
hasBlock;hasBlock();OMR;Node;0;0
hasBranchDestinationNode;hasBranchDestinationNode();OMR;Node;0;0
hasChild;hasChild(TR::Node *);OMR;Node;0;0
hasDataType;hasDataType();OMR;Node;0;0
hasFoldedImplicitNULLCHK;hasFoldedImplicitNULLCHK();OMR;Node;0;0
hasMonitorClassInNode;hasMonitorClassInNode();OMR;Node;0;0
hasNodeExtension;hasNodeExtension();OMR;Node;0;0
hasPinningArrayPointer;hasPinningArrayPointer();OMR;Node;0;0
hasRegLoadStoreSymbolReference;hasRegLoadStoreSymbolReference();OMR;Node;0;0
hasSymbolReference;hasSymbolReference();OMR;Node;0;0
hasSymbolReferenceOfAnyType;hasSymbolReferenceOfAnyType();OMR;Node;0;0
hasUnresolvedSymbolReference;hasUnresolvedSymbolReference();OMR;Node;0;0
iconst;iconst(int32_t);OMR;Node;0;0
iconst;iconst(TR::Node *,int32_t);OMR;Node;0;0
incFutureUseCount;incFutureUseCount();OMR;Node;0;0
incLocalIndex;incLocalIndex();OMR;Node;0;0
incReferenceCount;incReferenceCount();OMR;Node;0;0
incVisitCount;incVisitCount();OMR;Node;0;0
initializeFutureUseCounts;initializeFutureUseCounts(vcount_t);OMR;Node;0;0
isAbstractGuard;isAbstractGuard();OMR;Node;0;0
isAdjunct;isAdjunct();OMR;Node;0;0
isAndBitOpMem;isAndBitOpMem();OMR;Node;0;0
isArrayChkPrimitiveArray1;isArrayChkPrimitiveArray1();OMR;Node;0;0
isArrayChkPrimitiveArray2;isArrayChkPrimitiveArray2();OMR;Node;0;0
isArrayChkReferenceArray1;isArrayChkReferenceArray1();OMR;Node;0;0
isArrayChkReferenceArray2;isArrayChkReferenceArray2();OMR;Node;0;0
isArrayCmpLen;isArrayCmpLen();OMR;Node;0;0
isArrayCmpSign;isArrayCmpSign();OMR;Node;0;0
isArrayCopyCall;isArrayCopyCall();OMR;Node;0;0
isArrayTRT;isArrayTRT();OMR;Node;0;0
isArraysetLengthMultipleOfPointerSize;isArraysetLengthMultipleOfPointerSize();OMR;Node;0;0
isBackwardArrayCopy;isBackwardArrayCopy();OMR;Node;0;0
isBigDecimalLoad;isBigDecimalLoad();OMR;Node;0;0
isBreakpointGuard;isBreakpointGuard();OMR;Node;0;0
isByteToByteTranslate;isByteToByteTranslate();OMR;Node;0;0
isByteToCharTranslate;isByteToCharTranslate();OMR;Node;0;0
isCharArrayTRT;isCharArrayTRT();OMR;Node;0;0
isCharToByteTranslate;isCharToByteTranslate();OMR;Node;0;0
isCharToCharTranslate;isCharToCharTranslate();OMR;Node;0;0
isClassPointerConstant;isClassPointerConstant();OMR;Node;0;0
isClassUnloadingConst;isClassUnloadingConst();OMR;Node;0;0
isConstZeroBytes;isConstZeroBytes();OMR;Node;0;0
isConstZeroValue;isConstZeroValue();OMR;Node;0;0
isCopyToNewVirtualRegister;isCopyToNewVirtualRegister();OMR;Node;0;0
isDirectMemoryUpdate;isDirectMemoryUpdate();OMR;Node;0;0
isDirectMethodGuard;isDirectMethodGuard();OMR;Node;0;0
isDoNotPropagateNode;isDoNotPropagateNode();OMR;Node;0;0
isDontMoveUnderBranch;isDontMoveUnderBranch();OMR;Node;0;0
isDontTransformArrayCopyCall;isDontTransformArrayCopyCall();OMR;Node;0;0
isDualCyclic;isDualCyclic();OMR;Node;0;0
isDualHigh;isDualHigh();OMR;Node;0;0
isDummyGuard;isDummyGuard();OMR;Node;0;0
isEligibleForHighWordOpcode;isEligibleForHighWordOpcode();OMR;Node;0;0
isExtendedTo32BitAtSource;isExtendedTo32BitAtSource();OMR;Node;0;0
isExtendedTo64BitAtSource;isExtendedTo64BitAtSource();OMR;Node;0;0
isFPStrictCompliant;isFPStrictCompliant();OMR;Node;0;0
isFloatToFixedConversion;isFloatToFixedConversion();OMR;Node;0;0
isForwardArrayCopy;isForwardArrayCopy();OMR;Node;0;0
isGCSafePointWithSymRef;isGCSafePointWithSymRef();OMR;Node;0;0
isHCRGuard;isHCRGuard();OMR;Node;0;0
isHalfWordElementArrayCopy;isHalfWordElementArrayCopy();OMR;Node;0;0
isHeapObjectWrtBar;isHeapObjectWrtBar();OMR;Node;0;0
isHeapificationAlloc;isHeapificationAlloc();OMR;Node;0;0
isHeapificationStore;isHeapificationStore();OMR;Node;0;0
isHierarchyGuard;isHierarchyGuard();OMR;Node;0;0
isHighWordZero;isHighWordZero();OMR;Node;0;0
isInterfaceGuard;isInterfaceGuard();OMR;Node;0;0
isInternalPointer;isInternalPointer();OMR;Node;0;0
isInvalid8BitGlobalRegister;isInvalid8BitGlobalRegister();OMR;Node;0;0
isLegalCallToCreate;isLegalCallToCreate(TR::ILOpCodes);OMR;Node;0;0
isLikelyStackWrtBar;isLikelyStackWrtBar();OMR;Node;0;0
isLiveMonitorInitStore;isLiveMonitorInitStore();OMR;Node;0;0
isLoadAndTest;isLoadAndTest();OMR;Node;0;0
isLoadFence;isLoadFence();OMR;Node;0;0
isLocalObjectMonitor;isLocalObjectMonitor();OMR;Node;0;0
isMaxLoopIterationGuard;isMaxLoopIterationGuard();OMR;Node;0;0
isMethodEnterExitGuard;isMethodEnterExitGuard();OMR;Node;0;0
isMethodPointerConstant;isMethodPointerConstant();OMR;Node;0;0
isMutableCallSiteTargetGuard;isMutableCallSiteTargetGuard();OMR;Node;0;0
isNOPLongStore;isNOPLongStore();OMR;Node;0;0
isNegative;isNegative();OMR;Node;0;0
isNoArrayStoreCheckArrayCopy;isNoArrayStoreCheckArrayCopy();OMR;Node;0;0
isNodeCreatedByPRE;isNodeCreatedByPRE();OMR;Node;0;0
isNodeRecognizedArrayCopyCall;isNodeRecognizedArrayCopyCall();OMR;Node;0;0
isNonDegenerateArrayCopy;isNonDegenerateArrayCopy();OMR;Node;0;0
isNonHeapObjectWrtBar;isNonHeapObjectWrtBar();OMR;Node;0;0
isNonNegative;isNonNegative();OMR;Node;0;0
isNonNull;isNonNull();OMR;Node;0;0
isNonPositive;isNonPositive();OMR;Node;0;0
isNonZero;isNonZero();OMR;Node;0;0
isNonoverriddenGuard;isNonoverriddenGuard();OMR;Node;0;0
isNopableInlineGuard;isNopableInlineGuard();OMR;Node;0;0
isNormalizedShift;isNormalizedShift();OMR;Node;0;0
isNotCollected;isNotCollected();OMR;Node;0;0
isNull;isNull();OMR;Node;0;0
isOSRGuard;isOSRGuard();OMR;Node;0;0
isOrBitOpMem;isOrBitOpMem();OMR;Node;0;0
isPositive;isPositive();OMR;Node;0;0
isPowerOfTwo;isPowerOfTwo();OMR;Node;0;0
isPreparedForDirectJNI;isPreparedForDirectJNI();OMR;Node;0;0
isPrimitiveLockedRegion;isPrimitiveLockedRegion();OMR;Node;0;0
isPrivatizedInlinerArg;isPrivatizedInlinerArg();OMR;Node;0;0
isProfiledGuard;isProfiledGuard();OMR;Node;0;0
isProfilingCode;isProfilingCode();OMR;Node;0;0
isPureCall;isPureCall();OMR;Node;0;0
isRarePathForwardArrayCopy;isRarePathForwardArrayCopy();OMR;Node;0;0
isReadMonitor;isReadMonitor();OMR;Node;0;0
isReferenceArrayCopy;isReferenceArrayCopy();OMR;Node;0;0
isReferenceNonNull;isReferenceNonNull();OMR;Node;0;0
isRematerializable;isRematerializable(TR::Node *,_Bool);OMR;Node;0;0
isRematerializeable;isRematerializeable();OMR;Node;0;0
isReturnDummy;isReturnDummy();OMR;Node;0;0
isSafeForCGToFastPathUnsafeCall;isSafeForCGToFastPathUnsafeCall();OMR;Node;0;0
isSafeToReplaceNode;isSafeToReplaceNode(TR::TreeTop *);OMR;Node;0;0
isSafeToSkipTableBoundCheck;isSafeToSkipTableBoundCheck();OMR;Node;0;0
isSeenRealReference;isSeenRealReference();OMR;Node;0;0
isSideEffectGuard;isSideEffectGuard();OMR;Node;0;0
isSignExtendedAtSource;isSignExtendedAtSource();OMR;Node;0;0
isSignExtendedTo32BitAtSource;isSignExtendedTo32BitAtSource();OMR;Node;0;0
isSignExtendedTo64BitAtSource;isSignExtendedTo64BitAtSource();OMR;Node;0;0
isSimpleDivCheck;isSimpleDivCheck();OMR;Node;0;0
isSingleRef;isSingleRef();OMR;Node;0;0
isSingleRefUnevaluated;isSingleRefUnevaluated();OMR;Node;0;0
isSourceByteArrayTranslate;isSourceByteArrayTranslate();OMR;Node;0;0
isStaticMonitor;isStaticMonitor();OMR;Node;0;0
isStopTheWorldGuard;isStopTheWorldGuard();OMR;Node;0;0
isStoreAlreadyEvaluated;isStoreAlreadyEvaluated();OMR;Node;0;0
isStoreFence;isStoreFence();OMR;Node;0;0
isSyncMethodMonitor;isSyncMethodMonitor();OMR;Node;0;0
isTargetByteArrayTranslate;isTargetByteArrayTranslate();OMR;Node;0;0
isTernaryHigh;isTernaryHigh();OMR;Node;0;0
isTheVirtualCallNodeForAGuardedInlinedCall;isTheVirtualCallNodeForAGuardedInlinedCall();OMR;Node;0;0
isTheVirtualGuardForAGuardedInlinedCall;isTheVirtualGuardForAGuardedInlinedCall();OMR;Node;0;0
isThisPointer;isThisPointer();OMR;Node;0;0
isUnneededConversion;isUnneededConversion();OMR;Node;0;0
isUnneededIALoad;isUnneededIALoad();OMR;Node;0;0
isUnsafeStaticWrtBar;isUnsafeStaticWrtBar();OMR;Node;0;0
isUnsafeToDuplicateAndExecuteAgain;isUnsafeToDuplicateAndExecuteAgain(int32_t *);OMR;Node;0;0
isUnsigned;isUnsigned();OMR;Node;0;0
isUseBranchOnCount;isUseBranchOnCount();OMR;Node;0;0
isVersionableIfWithMaxExpr;isVersionableIfWithMaxExpr();OMR;Node;0;0
isVersionableIfWithMinExpr;isVersionableIfWithMinExpr();OMR;Node;0;0
isWordElementArrayCopy;isWordElementArrayCopy();OMR;Node;0;0
isXorBitOpMem;isXorBitOpMem();OMR;Node;0;0
isZero;isZero();OMR;Node;0;0
isZeroExtendedAtSource;isZeroExtendedAtSource();OMR;Node;0;0
isZeroExtendedTo32BitAtSource;isZeroExtendedTo32BitAtSource();OMR;Node;0;0
isZeroExtendedTo64BitAtSource;isZeroExtendedTo64BitAtSource();OMR;Node;0;0
isZeroExtension;isZeroExtension();OMR;Node;0;0
isl2aForCompressedArrayletLeafLoad;isl2aForCompressedArrayletLeafLoad();OMR;Node;0;0
iuconst;iuconst(uint32_t);OMR;Node;0;0
iuconst;iuconst(TR::Node *,uint32_t);OMR;Node;0;0
lconst;lconst(int64_t);OMR;Node;0;0
lconst;lconst(TR::Node *,int64_t);OMR;Node;0;0
luconst;luconst(uint64_t);OMR;Node;0;0
luconst;luconst(TR::Node *,uint64_t);OMR;Node;0;0
markedAllocationCanBeRemoved;markedAllocationCanBeRemoved();OMR;Node;0;0
mayKill;mayKill(_Bool);OMR;Node;0;0
mayModifyValue;mayModifyValue(TR::SymbolReference *);OMR;Node;0;0
mayUse;mayUse();OMR;Node;0;0
mightHaveVolatileSymbolReference;mightHaveVolatileSymbolReference();OMR;Node;0;0
needsPrecisionAdjustment;needsPrecisionAdjustment();OMR;Node;0;0
needsSignExtension;needsSignExtension();OMR;Node;0;0
nodeMightKillCondCode;nodeMightKillCondCode();OMR;Node;0;0
nodeRequiresConditionCodes;nodeRequiresConditionCodes();OMR;Node;0;0
normalizeNanValues;normalizeNanValues();OMR;Node;0;0
notifyChangeToValueOfNode;notifyChangeToValueOfNode();OMR;Node;0;0
oneParentSupportsLazyClobber;oneParentSupportsLazyClobber(TR::Compilation *);OMR;Node;0;0
operator new;operator new(size_t,void *);OMR;Node;0;0
operator new;operator new(size_t,TR::NodePool &);OMR;Node;0;0
operator=;operator=(const TR::Node &);OMR;Node;0;0
parentSupportsLazyClobber;parentSupportsLazyClobber();OMR;Node;0;0
performsVolatileAccess;performsVolatileAccess(vcount_t);OMR;Node;0;0
pointsToNonNull;pointsToNonNull();OMR;Node;0;0
pointsToNull;pointsToNull();OMR;Node;0;0
printAllocationCanBeRemoved;printAllocationCanBeRemoved();OMR;Node;0;0
printAndBitOpMem;printAndBitOpMem();OMR;Node;0;0
printArrayCmpLen;printArrayCmpLen();OMR;Node;0;0
printArrayCmpSign;printArrayCmpSign();OMR;Node;0;0
printArrayTRT;printArrayTRT();OMR;Node;0;0
printCanDesynchronizeCall;printCanDesynchronizeCall();OMR;Node;0;0
printCanSkipZeroInitialization;printCanSkipZeroInitialization();OMR;Node;0;0
printCannotOverflow;printCannotOverflow();OMR;Node;0;0
printCannotTrackLocalStringUses;printCannotTrackLocalStringUses();OMR;Node;0;0
printCannotTrackLocalUses;printCannotTrackLocalUses();OMR;Node;0;0
printCharArrayTRT;printCharArrayTRT();OMR;Node;0;0
printContainsCompressionSequence;printContainsCompressionSequence();OMR;Node;0;0
printCopyToNewVirtualRegister;printCopyToNewVirtualRegister();OMR;Node;0;0
printEscapesInColdBlock;printEscapesInColdBlock();OMR;Node;0;0
printFullSubtree;printFullSubtree();OMR;Node;0;0
printHasFoldedImplicitNULLCHK;printHasFoldedImplicitNULLCHK();OMR;Node;0;0
printIsAbstractGuard;printIsAbstractGuard();OMR;Node;0;0
printIsArrayChkPrimitiveArray1;printIsArrayChkPrimitiveArray1();OMR;Node;0;0
printIsArrayChkPrimitiveArray2;printIsArrayChkPrimitiveArray2();OMR;Node;0;0
printIsArrayChkReferenceArray1;printIsArrayChkReferenceArray1();OMR;Node;0;0
printIsArrayChkReferenceArray2;printIsArrayChkReferenceArray2();OMR;Node;0;0
printIsBackwardArrayCopy;printIsBackwardArrayCopy();OMR;Node;0;0
printIsBreakpointGuard;printIsBreakpointGuard();OMR;Node;0;0
printIsByteToByteTranslate;printIsByteToByteTranslate();OMR;Node;0;0
printIsByteToCharTranslate;printIsByteToCharTranslate();OMR;Node;0;0
printIsCharToByteTranslate;printIsCharToByteTranslate();OMR;Node;0;0
printIsCharToCharTranslate;printIsCharToCharTranslate();OMR;Node;0;0
printIsClassPointerConstant;printIsClassPointerConstant();OMR;Node;0;0
printIsDirectMemoryUpdate;printIsDirectMemoryUpdate();OMR;Node;0;0
printIsDirectMethodGuard;printIsDirectMethodGuard();OMR;Node;0;0
printIsDontMoveUnderBranch;printIsDontMoveUnderBranch();OMR;Node;0;0
printIsDontTransformArrayCopyCall;printIsDontTransformArrayCopyCall();OMR;Node;0;0
printIsDummyGuard;printIsDummyGuard();OMR;Node;0;0
printIsFPStrictCompliant;printIsFPStrictCompliant();OMR;Node;0;0
printIsForwardArrayCopy;printIsForwardArrayCopy();OMR;Node;0;0
printIsHCRGuard;printIsHCRGuard();OMR;Node;0;0
printIsHPREligible;printIsHPREligible();OMR;Node;0;0
printIsHalfWordElementArrayCopy;printIsHalfWordElementArrayCopy();OMR;Node;0;0
printIsHeapObjectWrtBar;printIsHeapObjectWrtBar();OMR;Node;0;0
printIsHeapificationAlloc;printIsHeapificationAlloc();OMR;Node;0;0
printIsHeapificationStore;printIsHeapificationStore();OMR;Node;0;0
printIsHierarchyGuard;printIsHierarchyGuard();OMR;Node;0;0
printIsHighWordZero;printIsHighWordZero();OMR;Node;0;0
printIsInterfaceGuard;printIsInterfaceGuard();OMR;Node;0;0
printIsInternalPointer;printIsInternalPointer();OMR;Node;0;0
printIsInvalid8BitGlobalRegister;printIsInvalid8BitGlobalRegister();OMR;Node;0;0
printIsLiveMonitorInitStore;printIsLiveMonitorInitStore();OMR;Node;0;0
printIsLocalObjectMonitor;printIsLocalObjectMonitor();OMR;Node;0;0
printIsMaxLoopIterationGuard;printIsMaxLoopIterationGuard();OMR;Node;0;0
printIsMethodEnterExitGuard;printIsMethodEnterExitGuard();OMR;Node;0;0
printIsMethodPointerConstant;printIsMethodPointerConstant();OMR;Node;0;0
printIsMutableCallSiteTargetGuard;printIsMutableCallSiteTargetGuard();OMR;Node;0;0
printIsNOPLongStore;printIsNOPLongStore();OMR;Node;0;0
printIsNoArrayStoreCheckArrayCopy;printIsNoArrayStoreCheckArrayCopy();OMR;Node;0;0
printIsNodeCreatedByPRE;printIsNodeCreatedByPRE();OMR;Node;0;0
printIsNodeRecognizedArrayCopyCall;printIsNodeRecognizedArrayCopyCall();OMR;Node;0;0
printIsNonHeapObjectWrtBar;printIsNonHeapObjectWrtBar();OMR;Node;0;0
printIsNonNegative;printIsNonNegative();OMR;Node;0;0
printIsNonPositive;printIsNonPositive();OMR;Node;0;0
printIsNonZero;printIsNonZero();OMR;Node;0;0
printIsNonoverriddenGuard;printIsNonoverriddenGuard();OMR;Node;0;0
printIsNormalizedShift;printIsNormalizedShift();OMR;Node;0;0
printIsOSRGuard;printIsOSRGuard();OMR;Node;0;0
printIsOmitSync;printIsOmitSync();OMR;Node;0;0
printIsPrimitiveLockedRegion;printIsPrimitiveLockedRegion();OMR;Node;0;0
printIsPrivatizedInlinerArg;printIsPrivatizedInlinerArg();OMR;Node;0;0
printIsProfiledGuard;printIsProfiledGuard();OMR;Node;0;0
printIsProfilingCode;printIsProfilingCode();OMR;Node;0;0
printIsRarePathForwardArrayCopy;printIsRarePathForwardArrayCopy();OMR;Node;0;0
printIsReadMonitor;printIsReadMonitor();OMR;Node;0;0
printIsReferenceArrayCopy;printIsReferenceArrayCopy();OMR;Node;0;0
printIsReferenceNonNull;printIsReferenceNonNull();OMR;Node;0;0
printIsSafeToSkipTableBoundCheck;printIsSafeToSkipTableBoundCheck();OMR;Node;0;0
printIsSeenRealReference;printIsSeenRealReference();OMR;Node;0;0
printIsSideEffectGuard;printIsSideEffectGuard();OMR;Node;0;0
printIsSignExtendedTo32BitAtSource;printIsSignExtendedTo32BitAtSource();OMR;Node;0;0
printIsSignExtendedTo64BitAtSource;printIsSignExtendedTo64BitAtSource();OMR;Node;0;0
printIsSimpleDivCheck;printIsSimpleDivCheck();OMR;Node;0;0
printIsSkipSync;printIsSkipSync();OMR;Node;0;0
printIsSkipWrtBar;printIsSkipWrtBar();OMR;Node;0;0
printIsStaticMonitor;printIsStaticMonitor();OMR;Node;0;0
printIsStoredValueIsIrrelevant;printIsStoredValueIsIrrelevant();OMR;Node;0;0
printIsSyncMethodMonitor;printIsSyncMethodMonitor();OMR;Node;0;0
printIsTheVirtualCallNodeForAGuardedInlinedCall;printIsTheVirtualCallNodeForAGuardedInlinedCall();OMR;Node;0;0
printIsThrowInsertedByOSR;printIsThrowInsertedByOSR();OMR;Node;0;0
printIsUnneededConversion;printIsUnneededConversion();OMR;Node;0;0
printIsUnsigned;printIsUnsigned();OMR;Node;0;0
printIsWordElementArrayCopy;printIsWordElementArrayCopy();OMR;Node;0;0
printIsZero;printIsZero();OMR;Node;0;0
printIsZeroExtendedTo32BitAtSource;printIsZeroExtendedTo32BitAtSource();OMR;Node;0;0
printIsZeroExtendedTo64BitAtSource;printIsZeroExtendedTo64BitAtSource();OMR;Node;0;0
printNeedsPrecisionAdjustment;printNeedsPrecisionAdjustment();OMR;Node;0;0
printNeedsSignExtension;printNeedsSignExtension();OMR;Node;0;0
printNormalizeNanValues;printNormalizeNanValues();OMR;Node;0;0
printOrBitOpMem;printOrBitOpMem();OMR;Node;0;0
printParentSupportsLazyClobber;printParentSupportsLazyClobber();OMR;Node;0;0
printPointsToNonNull;printPointsToNonNull();OMR;Node;0;0
printPointsToNull;printPointsToNull();OMR;Node;0;0
printRequiresConditionCodes;printRequiresConditionCodes();OMR;Node;0;0
printReturnIsDummy;printReturnIsDummy();OMR;Node;0;0
printSetSourceIsByteArrayTranslate;printSetSourceIsByteArrayTranslate();OMR;Node;0;0
printSetTableBackedByRawStorage;printSetTableBackedByRawStorage();OMR;Node;0;0
printSetTargetIsByteArrayTranslate;printSetTargetIsByteArrayTranslate();OMR;Node;0;0
printSetTermCharNodeIsHint;printSetTermCharNodeIsHint();OMR;Node;0;0
printSetUseSignExtensionMode;printSetUseSignExtensionMode();OMR;Node;0;0
printSkipSignExtension;printSkipSignExtension();OMR;Node;0;0
printSourceCellIsTermChar;printSourceCellIsTermChar();OMR;Node;0;0
printStoreAlreadyEvaluated;printStoreAlreadyEvaluated();OMR;Node;0;0
printUseCallForFloatToFixedConversion;printUseCallForFloatToFixedConversion();OMR;Node;0;0
printXorBitOpMem;printXorBitOpMem();OMR;Node;0;0
recreate;recreate(TR::Node *,TR::ILOpCodes);OMR;Node;0;0
recreateAndCopyValidPropertiesImpl;recreateAndCopyValidPropertiesImpl(TR::Node *,TR::ILOpCodes,TR::SymbolReference *);OMR;Node;0;0
recreateWithSymRef;recreateWithSymRef(TR::Node *,TR::ILOpCodes,TR::SymbolReference *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::SymbolReference *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::SymbolReference *);OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::SymbolReference *);OMR;Node;0;0
recursivelyDecReferenceCount;recursivelyDecReferenceCount();OMR;Node;0;0
recursivelyDecReferenceCountFromCodeGen;recursivelyDecReferenceCountFromCodeGen();OMR;Node;0;0
removeAllChildren;removeAllChildren();OMR;Node;0;0
removeChild;removeChild(int32_t);OMR;Node;0;0
removeLastChild;removeLastChild();OMR;Node;0;0
requiresRegisterPair;requiresRegisterPair(TR::Compilation *);OMR;Node;0;0
resetFlagsForCodeMotion;resetFlagsForCodeMotion();OMR;Node;0;0
resetIsHPREligible;resetIsHPREligible();OMR;Node;0;0
resetIsNodeCreatedByPRE;resetIsNodeCreatedByPRE();OMR;Node;0;0
resetIsTheVirtualCallNodeForAGuardedInlinedCall;resetIsTheVirtualCallNodeForAGuardedInlinedCall();OMR;Node;0;0
resetIsTheVirtualGuardForAGuardedInlinedCall;resetIsTheVirtualGuardForAGuardedInlinedCall();OMR;Node;0;0
resetVisitCounts;resetVisitCounts(vcount_t);OMR;Node;0;0
reverseBranch;reverseBranch(TR::TreeTop *);OMR;Node;0;0
rotateChildren;rotateChildren(int32_t,int32_t);OMR;Node;0;0
safeToDoRecursiveDecrement;safeToDoRecursiveDecrement();OMR;Node;0;0
sconst;sconst(TR::Node *,int16_t);OMR;Node;0;0
sconst;sconst(int16_t);OMR;Node;0;0
self;self();OMR;Node;0;0
set64bitIntegralValue;set64bitIntegralValue(int64_t);OMR;Node;0;0
setAddress;setAddress(uint64_t);OMR;Node;0;0
setAlignTLHAlloc;setAlignTLHAlloc(_Bool);OMR;Node;0;0
setAllocation;setAllocation(TR::Node *);OMR;Node;0;0
setAllocationCanBeRemoved;setAllocationCanBeRemoved(_Bool);OMR;Node;0;0
setAndBitOpMem;setAndBitOpMem(_Bool);OMR;Node;0;0
setAndIncChild;setAndIncChild(int32_t,TR::Node *);OMR;Node;0;0
setAndIncValueChild;setAndIncValueChild(TR::Node *);OMR;Node;0;0
setArrayChkPrimitiveArray1;setArrayChkPrimitiveArray1(_Bool);OMR;Node;0;0
setArrayChkPrimitiveArray2;setArrayChkPrimitiveArray2(_Bool);OMR;Node;0;0
setArrayChkReferenceArray1;setArrayChkReferenceArray1(_Bool);OMR;Node;0;0
setArrayChkReferenceArray2;setArrayChkReferenceArray2(_Bool);OMR;Node;0;0
setArrayCmpLen;setArrayCmpLen(_Bool);OMR;Node;0;0
setArrayCmpSign;setArrayCmpSign(_Bool);OMR;Node;0;0
setArrayComponentClassInNode;setArrayComponentClassInNode(class TR_OpaqueClassBlock *);OMR;Node;0;0
setArrayCopyElementType;setArrayCopyElementType(TR::DataType);OMR;Node;0;0
setArrayStoreClassInNode;setArrayStoreClassInNode(class TR_OpaqueClassBlock *);OMR;Node;0;0
setArrayStride;setArrayStride(int32_t);OMR;Node;0;0
setArrayTRT;setArrayTRT(_Bool);OMR;Node;0;0
setArraysetLengthMultipleOfPointerSize;setArraysetLengthMultipleOfPointerSize(_Bool);OMR;Node;0;0
setBackwardArrayCopy;setBackwardArrayCopy(_Bool);OMR;Node;0;0
setBlock;setBlock(TR::Block *);OMR;Node;0;0
setBranchDestination;setBranchDestination(TR::TreeTop *);OMR;Node;0;0
setByte;setByte(int8_t);OMR;Node;0;0
setByteCodeIndex;setByteCodeIndex(uint32_t);OMR;Node;0;0
setByteCodeInfo;setByteCodeInfo(const TR_ByteCodeInfo &);OMR;Node;0;0
setCanSkipZeroInitialization;setCanSkipZeroInitialization(_Bool);OMR;Node;0;0
setCannotOverflow;setCannotOverflow(_Bool);OMR;Node;0;0
setCannotTrackLocalStringUses;setCannotTrackLocalStringUses(_Bool);OMR;Node;0;0
setCannotTrackLocalUses;setCannotTrackLocalUses(_Bool);OMR;Node;0;0
setCaseConstant;setCaseConstant(CASECONST_TYPE);OMR;Node;0;0
setCharArrayTRT;setCharArrayTRT(_Bool);OMR;Node;0;0
setChild;setChild(int32_t,TR::Node *);OMR;Node;0;0
setConstValue;setConstValue(int64_t);OMR;Node;0;0
setContainsCall;setContainsCall(_Bool);OMR;Node;0;0
setContainsCompressionSequence;setContainsCompressionSequence(_Bool);OMR;Node;0;0
setCopyToNewVirtualRegister;setCopyToNewVirtualRegister(_Bool);OMR;Node;0;0
setDataType;setDataType(TR::DataType);OMR;Node;0;0
setDesynchronizeCall;setDesynchronizeCall(_Bool);OMR;Node;0;0
setDirectMemoryUpdate;setDirectMemoryUpdate(_Bool);OMR;Node;0;0
setDontTransformArrayCopyCall;setDontTransformArrayCopyCall();OMR;Node;0;0
setDouble;setDouble(double);OMR;Node;0;0
setDoubleBits;setDoubleBits(uint64_t);OMR;Node;0;0
setEscapesInColdBlock;setEscapesInColdBlock(_Bool);OMR;Node;0;0
setEvaluationPriority;setEvaluationPriority(int32_t);OMR;Node;0;0
setFirst;setFirst(TR::Node *);OMR;Node;0;0
setFlags;setFlags(flags32_t);OMR;Node;0;0
setFloat;setFloat(float);OMR;Node;0;0
setFloatBits;setFloatBits(uint32_t);OMR;Node;0;0
setForwardArrayCopy;setForwardArrayCopy(_Bool);OMR;Node;0;0
setFutureUseCount;setFutureUseCount(scount_t);OMR;Node;0;0
setGlobalIndex;setGlobalIndex(ncount_t);OMR;Node;0;0
setGlobalRegisterNumber;setGlobalRegisterNumber(TR_GlobalRegisterNumber);OMR;Node;0;0
setHalfWordElementArrayCopy;setHalfWordElementArrayCopy(_Bool);OMR;Node;0;0
setHasBeenVisitedForHints;setHasBeenVisitedForHints(_Bool);OMR;Node;0;0
setHasFoldedImplicitNULLCHK;setHasFoldedImplicitNULLCHK(_Bool);OMR;Node;0;0
setHasMonitorClassInNode;setHasMonitorClassInNode(_Bool);OMR;Node;0;0
setHasNodeExtension;setHasNodeExtension(_Bool);OMR;Node;0;0
setHeapificationAlloc;setHeapificationAlloc(_Bool);OMR;Node;0;0
setHeapificationStore;setHeapificationStore(_Bool);OMR;Node;0;0
setHighGlobalRegisterNumber;setHighGlobalRegisterNumber(TR_GlobalRegisterNumber);OMR;Node;0;0
setInlinedSiteIndex;setInlinedSiteIndex(int16_t);OMR;Node;0;0
setInt;setInt(int32_t);OMR;Node;0;0
setIsAbstractGuard;setIsAbstractGuard();OMR;Node;0;0
setIsAdjunct;setIsAdjunct(_Bool);OMR;Node;0;0
setIsBigDecimalLoad;setIsBigDecimalLoad();OMR;Node;0;0
setIsBreakpointGuard;setIsBreakpointGuard();OMR;Node;0;0
setIsClassPointerConstant;setIsClassPointerConstant(_Bool);OMR;Node;0;0
setIsDirectMethodGuard;setIsDirectMethodGuard(_Bool);OMR;Node;0;0
setIsDontMoveUnderBranch;setIsDontMoveUnderBranch(_Bool);OMR;Node;0;0
setIsDummyGuard;setIsDummyGuard();OMR;Node;0;0
setIsFPStrictCompliant;setIsFPStrictCompliant(_Bool);OMR;Node;0;0
setIsHCRGuard;setIsHCRGuard();OMR;Node;0;0
setIsHPREligible;setIsHPREligible();OMR;Node;0;0
setIsHeapObjectWrtBar;setIsHeapObjectWrtBar(_Bool);OMR;Node;0;0
setIsHierarchyGuard;setIsHierarchyGuard();OMR;Node;0;0
setIsHighWordZero;setIsHighWordZero(_Bool);OMR;Node;0;0
setIsInterfaceGuard;setIsInterfaceGuard();OMR;Node;0;0
setIsInternalPointer;setIsInternalPointer(_Bool);OMR;Node;0;0
setIsInvalid8BitGlobalRegister;setIsInvalid8BitGlobalRegister(_Bool);OMR;Node;0;0
setIsLoadAndTest;setIsLoadAndTest(_Bool);OMR;Node;0;0
setIsLoadFence;setIsLoadFence();OMR;Node;0;0
setIsMaxLoopIterationGuard;setIsMaxLoopIterationGuard(_Bool);OMR;Node;0;0
setIsMethodEnterExitGuard;setIsMethodEnterExitGuard(_Bool);OMR;Node;0;0
setIsMethodPointerConstant;setIsMethodPointerConstant(_Bool);OMR;Node;0;0
setIsMutableCallSiteTargetGuard;setIsMutableCallSiteTargetGuard();OMR;Node;0;0
setIsNodeCreatedByPRE;setIsNodeCreatedByPRE();OMR;Node;0;0
setIsNonHeapObjectWrtBar;setIsNonHeapObjectWrtBar(_Bool);OMR;Node;0;0
setIsNonNegative;setIsNonNegative(_Bool);OMR;Node;0;0
setIsNonNull;setIsNonNull(_Bool);OMR;Node;0;0
setIsNonPositive;setIsNonPositive(_Bool);OMR;Node;0;0
setIsNonZero;setIsNonZero(_Bool);OMR;Node;0;0
setIsNonoverriddenGuard;setIsNonoverriddenGuard();OMR;Node;0;0
setIsNotRematerializeable;setIsNotRematerializeable();OMR;Node;0;0
setIsNull;setIsNull(_Bool);OMR;Node;0;0
setIsOSRGuard;setIsOSRGuard();OMR;Node;0;0
setIsPowerOfTwo;setIsPowerOfTwo(_Bool);OMR;Node;0;0
setIsPrivatizedInlinerArg;setIsPrivatizedInlinerArg(_Bool);OMR;Node;0;0
setIsProfiledGuard;setIsProfiledGuard();OMR;Node;0;0
setIsProfilingCode;setIsProfilingCode();OMR;Node;0;0
setIsSafeForCGToFastPathUnsafeCall;setIsSafeForCGToFastPathUnsafeCall(_Bool);OMR;Node;0;0
setIsSafeToSkipTableBoundCheck;setIsSafeToSkipTableBoundCheck(_Bool);OMR;Node;0;0
setIsSideEffectGuard;setIsSideEffectGuard();OMR;Node;0;0
setIsStoreFence;setIsStoreFence();OMR;Node;0;0
setIsTheVirtualCallNodeForAGuardedInlinedCall;setIsTheVirtualCallNodeForAGuardedInlinedCall();OMR;Node;0;0
setIsUnsafeStaticWrtBar;setIsUnsafeStaticWrtBar(_Bool);OMR;Node;0;0
setIsUseBranchOnCount;setIsUseBranchOnCount(_Bool);OMR;Node;0;0
setIsVersionableIfWithMaxExpr;setIsVersionableIfWithMaxExpr(TR::Compilation *);OMR;Node;0;0
setIsVersionableIfWithMinExpr;setIsVersionableIfWithMinExpr(TR::Compilation *);OMR;Node;0;0
setIsZero;setIsZero(_Bool);OMR;Node;0;0
setLabel;setLabel(TR::LabelSymbol *);OMR;Node;0;0
setLikelyStackWrtBar;setLikelyStackWrtBar(_Bool);OMR;Node;0;0
setLiteralPoolOffset;setLiteralPoolOffset(size_t,size_t);OMR;Node;0;0
setLiveMonitorInitStore;setLiveMonitorInitStore(_Bool);OMR;Node;0;0
setLocalIndex;setLocalIndex(scount_t);OMR;Node;0;0
setLocalObjectMonitor;setLocalObjectMonitor(_Bool);OMR;Node;0;0
setLongInt;setLongInt(int64_t);OMR;Node;0;0
setLowGlobalRegisterNumber;setLowGlobalRegisterNumber(TR_GlobalRegisterNumber);OMR;Node;0;0
setMethod;setMethod(class TR_OpaqueMethodBlock *);OMR;Node;0;0
setMonitorClassInNode;setMonitorClassInNode(class TR_OpaqueClassBlock *);OMR;Node;0;0
setMonitorInfo;setMonitorInfo(void *);OMR;Node;0;0
setNOPLongStore;setNOPLongStore(_Bool);OMR;Node;0;0
setNeedsPrecisionAdjustment;setNeedsPrecisionAdjustment(_Bool);OMR;Node;0;0
setNeedsSignExtension;setNeedsSignExtension(_Bool);OMR;Node;0;0
setNoArrayStoreCheckArrayCopy;setNoArrayStoreCheckArrayCopy(_Bool);OMR;Node;0;0
setNodeIsRecognizedArrayCopyCall;setNodeIsRecognizedArrayCopyCall(_Bool);OMR;Node;0;0
setNodeRequiresConditionCodes;setNodeRequiresConditionCodes(_Bool);OMR;Node;0;0
setNormalizeNanValues;setNormalizeNanValues(_Bool);OMR;Node;0;0
setNormalizedShift;setNormalizedShift(_Bool);OMR;Node;0;0
setNullCheckReference;setNullCheckReference(TR::Node *);OMR;Node;0;0
setNumChildren;setNumChildren(uint16_t);OMR;Node;0;0
setNumRelocations;setNumRelocations(uint32_t);OMR;Node;0;0
setOmitSync;setOmitSync(_Bool);OMR;Node;0;0
setOpCodeValue;setOpCodeValue(TR::ILOpCodes);OMR;Node;0;0
setOrBitOpMem;setOrBitOpMem(_Bool);OMR;Node;0;0
setOverflowCheckOperation;setOverflowCheckOperation(TR::ILOpCodes);OMR;Node;0;0
setParentSupportsLazyClobber;setParentSupportsLazyClobber(_Bool);OMR;Node;0;0
setPinningArrayPointer;setPinningArrayPointer(TR::AutomaticSymbol *);OMR;Node;0;0
setPointsToNonNull;setPointsToNonNull(_Bool);OMR;Node;0;0
setPointsToNull;setPointsToNull(_Bool);OMR;Node;0;0
setPreparedForDirectJNI;setPreparedForDirectJNI();OMR;Node;0;0
setPrimitiveLockedRegion;setPrimitiveLockedRegion(_Bool);OMR;Node;0;0
setRarePathForwardArrayCopy;setRarePathForwardArrayCopy(_Bool);OMR;Node;0;0
setReadMonitor;setReadMonitor(_Bool);OMR;Node;0;0
setReferenceCount;setReferenceCount(rcount_t);OMR;Node;0;0
setReferenceIsNonNull;setReferenceIsNonNull(_Bool);OMR;Node;0;0
setRegLoadStoreSymbolReference;setRegLoadStoreSymbolReference(TR::SymbolReference *);OMR;Node;0;0
setRegister;setRegister(TR::Register *);OMR;Node;0;0
setRelocationDestination;setRelocationDestination(uint32_t,void *);OMR;Node;0;0
setRelocationType;setRelocationType(uint32_t);OMR;Node;0;0
setReturnIsDummy;setReturnIsDummy();OMR;Node;0;0
setSecond;setSecond(TR::Node *);OMR;Node;0;0
setSeenRealReference;setSeenRealReference(_Bool);OMR;Node;0;0
setShortInt;setShortInt(int16_t);OMR;Node;0;0
setSignExtendTo32BitAtSource;setSignExtendTo32BitAtSource(_Bool);OMR;Node;0;0
setSignExtendTo64BitAtSource;setSignExtendTo64BitAtSource(_Bool);OMR;Node;0;0
setSimpleDivCheck;setSimpleDivCheck(_Bool);OMR;Node;0;0
setSkipSignExtension;setSkipSignExtension(_Bool);OMR;Node;0;0
setSkipSync;setSkipSync(_Bool);OMR;Node;0;0
setSkipWrtBar;setSkipWrtBar(_Bool);OMR;Node;0;0
setSourceCellIsTermChar;setSourceCellIsTermChar(_Bool);OMR;Node;0;0
setSourceIsByteArrayTranslate;setSourceIsByteArrayTranslate(_Bool);OMR;Node;0;0
setStaticMonitor;setStaticMonitor(_Bool);OMR;Node;0;0
setStoreAlreadyEvaluated;setStoreAlreadyEvaluated(_Bool);OMR;Node;0;0
setStoredValueIsIrrelevant;setStoredValueIsIrrelevant(_Bool);OMR;Node;0;0
setSwappedChildren;setSwappedChildren(_Bool);OMR;Node;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);OMR;Node;0;0
setSyncMethodMonitor;setSyncMethodMonitor(_Bool);OMR;Node;0;0
setTableBackedByRawStorage;setTableBackedByRawStorage(_Bool);OMR;Node;0;0
setTargetIsByteArrayTranslate;setTargetIsByteArrayTranslate(_Bool);OMR;Node;0;0
setTermCharNodeIsHint;setTermCharNodeIsHint(_Bool);OMR;Node;0;0
setThrowInsertedByOSR;setThrowInsertedByOSR(_Bool);OMR;Node;0;0
setUnneededConversion;setUnneededConversion(_Bool);OMR;Node;0;0
setUnneededIALoad;setUnneededIALoad(_Bool);OMR;Node;0;0
setUnsigned;setUnsigned(_Bool);OMR;Node;0;0
setUnsignedByte;setUnsignedByte(uint8_t);OMR;Node;0;0
setUnsignedInt;setUnsignedInt(uint32_t);OMR;Node;0;0
setUnsignedLongInt;setUnsignedLongInt(uint64_t);OMR;Node;0;0
setUnsignedShortInt;setUnsignedShortInt(uint16_t);OMR;Node;0;0
setUseCallForFloatToFixedConversion;setUseCallForFloatToFixedConversion(_Bool);OMR;Node;0;0
setUseDefIndex;setUseDefIndex(uint16_t);OMR;Node;0;0
setUseSignExtensionMode;setUseSignExtensionMode(_Bool);OMR;Node;0;0
setValueChild;setValueChild(TR::Node *);OMR;Node;0;0
setVisitCount;setVisitCount(vcount_t);OMR;Node;0;0
setWordElementArrayCopy;setWordElementArrayCopy(_Bool);OMR;Node;0;0
setXorBitOpMem;setXorBitOpMem(_Bool);OMR;Node;0;0
setZeroExtendTo32BitAtSource;setZeroExtendTo32BitAtSource(_Bool);OMR;Node;0;0
setZeroExtendTo64BitAtSource;setZeroExtendTo64BitAtSource(_Bool);OMR;Node;0;0
shouldAlignTLHAlloc;shouldAlignTLHAlloc();OMR;Node;0;0
sizeOfExtension;sizeOfExtension();OMR;Node;0;0
skipConversions;skipConversions();OMR;Node;0;0
skipSignExtension;skipSignExtension();OMR;Node;0;0
skipWrtBar;skipWrtBar();OMR;Node;0;0
storedValueIsIrrelevant;storedValueIsIrrelevant();OMR;Node;0;0
swapChildren;swapChildren();OMR;Node;0;0
throwInsertedByOSR;throwInsertedByOSR();OMR;Node;0;0
uncommon;uncommon();OMR;Node;0;0
uncommonChild;uncommonChild(int32_t);OMR;Node;0;0
unsetRegister;unsetRegister();OMR;Node;0;0
useCallForFloatToFixedConversion;useCallForFloatToFixedConversion();OMR;Node;0;0
useSignExtensionMode;useSignExtensionMode();OMR;Node;0;0
uses64BitGPRs;uses64BitGPRs();OMR;Node;0;0
~Node;~Node();OMR;Node;0;0
~Node;~Node();TR;Node;0;0
NodeChecklist;NodeChecklist(const class TR::NodeChecklist &);TR;NodeChecklist;1;0
NodeChecklist;NodeChecklist(TR::Compilation *);TR;NodeChecklist;0;0
NodeChecklist;NodeChecklist(class TR::NodeChecklist &&);TR;NodeChecklist;1;0
add;add(TR::Node *);TR;NodeChecklist;0;0
add;add(class TR::NodeChecklist &);TR;NodeChecklist;0;0
contains;contains(TR::Node *);TR;NodeChecklist;0;0
operator!=;operator!=(const class TR::NodeChecklist &);TR;NodeChecklist;0;0
operator=;operator=(class TR::NodeChecklist &&);TR;NodeChecklist;1;0
operator==;operator==(const class TR::NodeChecklist &);TR;NodeChecklist;0;0
remove;remove(TR::Node *);TR;NodeChecklist;0;0
remove;remove(class TR::NodeChecklist &);TR;NodeChecklist;0;0
~NodeChecklist;~NodeChecklist();TR;NodeChecklist;1;0
ObjectModel;ObjectModel(class OMR::ObjectModel &&);OMR;ObjectModel;1;0
ObjectModel;ObjectModel(const class OMR::ObjectModel &);OMR;ObjectModel;1;0
ObjectModel;ObjectModel();OMR;ObjectModel;0;0
ObjectModel;ObjectModel();TestCompiler;ObjectModel;0;0
ObjectModel;ObjectModel();TR;ObjectModel;0;0
ObjectModel;ObjectModel(class TestCompiler::ObjectModel &&);TestCompiler;ObjectModel;1;0
ObjectModel;ObjectModel(const class TestCompiler::ObjectModel &);TestCompiler;ObjectModel;1;0
ObjectModel;ObjectModel(class TR::ObjectModel &&);TR;ObjectModel;1;0
ObjectModel;ObjectModel(const class TR::ObjectModel &);TR;ObjectModel;1;0
arraySpineShift;arraySpineShift(int32_t);OMR;ObjectModel;0;0
arrayletLeafIndex;arrayletLeafIndex(int32_t,int32_t);OMR;ObjectModel;0;0
arrayletMask;arrayletMask(int32_t);OMR;ObjectModel;0;0
canGenerateArraylets;canGenerateArraylets();OMR;ObjectModel;0;0
compressedReferenceShift;compressedReferenceShift();OMR;ObjectModel;0;0
compressedReferenceShiftOffset;compressedReferenceShiftOffset();OMR;ObjectModel;0;0
contiguousArrayHeaderSizeInBytes;contiguousArrayHeaderSizeInBytes();OMR;ObjectModel;0;0
decompressReference;decompressReference(TR::Compilation *,uintptrj_t);OMR;ObjectModel;0;0
discontiguousArrayHeaderSizeInBytes;discontiguousArrayHeaderSizeInBytes();OMR;ObjectModel;0;0
elementSizeOfBooleanArray;elementSizeOfBooleanArray();OMR;ObjectModel;0;0
generateCompressedObjectHeaders;generateCompressedObjectHeaders();OMR;ObjectModel;0;0
getArrayElementWidthInBytes;getArrayElementWidthInBytes(TR::DataType);OMR;ObjectModel;0;0
getArrayElementWidthInBytes;getArrayElementWidthInBytes(TR::Compilation *,uintptrj_t);OMR;ObjectModel;0;0
getArrayLengthInBytes;getArrayLengthInBytes(TR::Compilation *,uintptrj_t);OMR;ObjectModel;0;0
getArrayLengthInElements;getArrayLengthInElements(TR::Compilation *,uintptrj_t);OMR;ObjectModel;0;0
getSizeOfArrayElement;getSizeOfArrayElement(TR::Node *);OMR;ObjectModel;0;0
initialize;initialize();OMR;ObjectModel;0;0
isDiscontiguousArray;isDiscontiguousArray(int32_t);OMR;ObjectModel;0;0
isDiscontiguousArray;isDiscontiguousArray(int32_t,int32_t);OMR;ObjectModel;0;0
isDiscontiguousArray;isDiscontiguousArray(TR::Compilation *,uintptrj_t);OMR;ObjectModel;0;0
maxArraySizeInElements;maxArraySizeInElements(int32_t,TR::Compilation *);OMR;ObjectModel;0;0
maxArraySizeInElementsForAllocation;maxArraySizeInElementsForAllocation(TR::Node *,TR::Compilation *);OMR;ObjectModel;0;0
maxContiguousArraySizeInBytes;maxContiguousArraySizeInBytes();OMR;ObjectModel;0;0
mayRequireSpineChecks;mayRequireSpineChecks();OMR;ObjectModel;0;0
nativeAddressesCanChangeSize;nativeAddressesCanChangeSize();OMR;ObjectModel;0;0
objectAlignmentInBytes;objectAlignmentInBytes();OMR;ObjectModel;0;0
objectHeaderSizeInBytes;objectHeaderSizeInBytes();OMR;ObjectModel;0;0
offsetOfContiguousArraySizeField;offsetOfContiguousArraySizeField();OMR;ObjectModel;0;0
offsetOfDiscontiguousArraySizeField;offsetOfDiscontiguousArraySizeField();OMR;ObjectModel;0;0
offsetOfIndexableSizeField;offsetOfIndexableSizeField();OMR;ObjectModel;0;0
offsetOfObjectVftField;offsetOfObjectVftField();OMR;ObjectModel;0;0
operator=;operator=(class OMR::ObjectModel &&);OMR;ObjectModel;1;0
operator=;operator=(const class OMR::ObjectModel &);OMR;ObjectModel;1;0
operator=;operator=(class TestCompiler::ObjectModel &&);TestCompiler;ObjectModel;1;0
operator=;operator=(const class TestCompiler::ObjectModel &);TestCompiler;ObjectModel;1;0
operator=;operator=(const class TR::ObjectModel &);TR;ObjectModel;1;0
operator=;operator=(class TR::ObjectModel &&);TR;ObjectModel;1;0
shouldGenerateReadBarriersForFieldLoads;shouldGenerateReadBarriersForFieldLoads();OMR;ObjectModel;0;0
shouldReplaceGuardedLoadWithSoftwareReadBarrier;shouldReplaceGuardedLoadWithSoftwareReadBarrier();OMR;ObjectModel;0;0
sizeofReferenceAddress;sizeofReferenceAddress();OMR;ObjectModel;0;0
sizeofReferenceField;sizeofReferenceField();OMR;ObjectModel;0;0
sizeofReferenceField;sizeofReferenceField();TestCompiler;ObjectModel;0;0
useHybridArraylets;useHybridArraylets();OMR;ObjectModel;0;0
usesDiscontiguousArraylets;usesDiscontiguousArraylets();OMR;ObjectModel;0;0
~ObjectModel;~ObjectModel();OMR;ObjectModel;1;0
~ObjectModel;~ObjectModel();TestCompiler;ObjectModel;1;0
~ObjectModel;~ObjectModel();TR;ObjectModel;1;0
Optimizer;Optimizer(class OMR::Optimizer &&);OMR;Optimizer;1;0
Optimizer;Optimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool,const struct OptimizationStrategy *,uint16_t);OMR;Optimizer;0;0
Optimizer;Optimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool,const struct OptimizationStrategy *,uint16_t);TR;Optimizer;0;0
Optimizer;Optimizer(const class OMR::Optimizer &);OMR;Optimizer;1;0
areBCDAggrConstantNodesEquivalent;areBCDAggrConstantNodesEquivalent(TR::Node *,TR::Node *,TR::Compilation *);OMR;Optimizer;0;0
areNodesEquivalent;areNodesEquivalent(TR::Node *,TR::Node *,TR::Compilation *,_Bool);OMR;Optimizer;0;0
areNodesEquivalent;areNodesEquivalent(TR::Node *,TR::Node *,_Bool);OMR;Optimizer;0;0
areSyntacticallyEquivalent;areSyntacticallyEquivalent(TR::Node *,TR::Node *,vcount_t);OMR;Optimizer;0;0
cachedExtendedBBInfoValid;cachedExtendedBBInfoValid();OMR;Optimizer;0;0
canRunBlockByBlockOptimizations;canRunBlockByBlockOptimizations();OMR;Optimizer;0;0
cantBuildGlobalsUseDefInfo;cantBuildGlobalsUseDefInfo();OMR;Optimizer;0;0
cantBuildGlobalsValueNumberInfo;cantBuildGlobalsValueNumberInfo();OMR;Optimizer;0;0
cantBuildLocalsUseDefInfo;cantBuildLocalsUseDefInfo();OMR;Optimizer;0;0
cantBuildLocalsValueNumberInfo;cantBuildLocalsValueNumberInfo();OMR;Optimizer;0;0
cg;cg();OMR;Optimizer;0;0
changeContinueLoopsToNestedLoops;changeContinueLoopsToNestedLoops();OMR;Optimizer;0;0
checkMaxHotnessOfInlinedMethods;checkMaxHotnessOfInlinedMethods(TR::Compilation *);OMR;Optimizer;0;0
checkNumberOfLoopsAndBasicBlocks;checkNumberOfLoopsAndBasicBlocks(TR::Compilation *,class TR_Structure *);OMR;Optimizer;0;0
comp;comp();OMR;Optimizer;0;0
countNumberOfLoops;countNumberOfLoops(class TR_Structure *);OMR;Optimizer;0;0
createOptimizer;createOptimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool);OMR;Optimizer;0;0
createValueNumberInfo;createValueNumberInfo(_Bool,_Bool,_Bool);OMR;Optimizer;0;0
doStructuralAnalysis;doStructuralAnalysis();OMR;Optimizer;0;0
doStructureChecks;doStructureChecks();OMR;Optimizer;0;0
dumpPostOptTrees;dumpPostOptTrees();OMR;Optimizer;0;0
dumpStrategy;dumpStrategy(const struct OptimizationStrategy *);OMR;Optimizer;0;0
enableAllLocalOpts;enableAllLocalOpts();OMR;Optimizer;0;0
getAliasSetsAreValid;getAliasSetsAreValid();OMR;Optimizer;0;0
getClassPointerNodes;getClassPointerNodes();OMR;Optimizer;0;0
getDebug;getDebug();OMR;Optimizer;0;0
getDumpGraphsIndex;getDumpGraphsIndex();OMR;Optimizer;0;0
getEliminatedCheckcastNodes;getEliminatedCheckcastNodes();OMR;Optimizer;0;0
getEnclosingFinallyBlock;getEnclosingFinallyBlock();OMR;Optimizer;0;0
getInlineSynchronized;getInlineSynchronized();OMR;Optimizer;0;0
getInlinerPolicy;getInlinerPolicy();OMR;Optimizer;0;0
getInlinerUtil;getInlinerUtil();OMR;Optimizer;0;0
getLastRun;getLastRun(OMR::Optimizations);OMR;Optimizer;0;0
getMethodSymbol;getMethodSymbol();OMR;Optimizer;0;0
getOptMessageIndex;getOptMessageIndex();OMR;Optimizer;0;0
getOptimization;getOptimization(OMR::Optimizations);OMR;Optimizer;0;0
getOptimizationName;getOptimizationName(OMR::Optimizations);OMR;Optimizer;0;0
getResetExitsGRA;getResetExitsGRA();OMR;Optimizer;0;0
getSeenBlocksGRA;getSeenBlocksGRA();OMR;Optimizer;0;0
getStaticFrequency;getStaticFrequency(TR::Block *,int32_t *);OMR;Optimizer;0;0
getSuccessorBitsGRA;getSuccessorBitsGRA();OMR;Optimizer;0;0
getSymReferencesTable;getSymReferencesTable();OMR;Optimizer;0;0
getUseDefInfo;getUseDefInfo();OMR;Optimizer;0;0
getValueNumberInfo;getValueNumberInfo();OMR;Optimizer;0;0
incOptMessageIndex;incOptMessageIndex();OMR;Optimizer;0;0
isEnabled;isEnabled(OMR::Optimizations);OMR;Optimizer;0;0
isIlGenOpt;isIlGenOpt();OMR;Optimizer;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Optimizer;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Optimizer;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Optimizer;0;0
operator delete;operator delete(void *,size_t);OMR;Optimizer;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Optimizer;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Optimizer;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Optimizer;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Optimizer;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Optimizer;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Optimizer;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Optimizer;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Optimizer;0;0
operator new;operator new(size_t,TR::Region &);OMR;Optimizer;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Optimizer;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Optimizer;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Optimizer;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Optimizer;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Optimizer;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Optimizer;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Optimizer;0;0
optimizationStrategy;optimizationStrategy(TR::Compilation *);OMR;Optimizer;0;0
optimize;optimize();OMR;Optimizer;0;0
optsThatCanCreateLoopsDisabled;optsThatCanCreateLoopsDisabled();OMR;Optimizer;0;0
performOptimization;performOptimization(const struct OptimizationStrategy *,int32_t,int32_t,int32_t);OMR;Optimizer;0;0
performVeryLateOpts;performVeryLateOpts();OMR;Optimizer;0;0
prepareForNodeRemoval;prepareForNodeRemoval(TR::Node *,_Bool);OMR;Optimizer;0;0
prepareForTreeRemoval;prepareForTreeRemoval(TR::TreeTop *);OMR;Optimizer;0;0
self;self();OMR;Optimizer;0;0
setAliasSetsAreValid;setAliasSetsAreValid(_Bool,_Bool);OMR;Optimizer;0;0
setCachedExtendedBBInfoValid;setCachedExtendedBBInfoValid(_Bool);OMR;Optimizer;0;0
setCanRunBlockByBlockOptimizations;setCanRunBlockByBlockOptimizations(_Bool);OMR;Optimizer;0;0
setCantBuildGlobalsUseDefInfo;setCantBuildGlobalsUseDefInfo(_Bool);OMR;Optimizer;0;0
setCantBuildGlobalsValueNumberInfo;setCantBuildGlobalsValueNumberInfo(_Bool);OMR;Optimizer;0;0
setCantBuildLocalsUseDefInfo;setCantBuildLocalsUseDefInfo(_Bool);OMR;Optimizer;0;0
setCantBuildLocalsValueNumberInfo;setCantBuildLocalsValueNumberInfo(_Bool);OMR;Optimizer;0;0
setEnclosingFinallyBlock;setEnclosingFinallyBlock(TR::Block *);OMR;Optimizer;0;0
setInlineSynchronized;setInlineSynchronized(_Bool);OMR;Optimizer;0;0
setMockStrategy;setMockStrategy(const struct OptimizationStrategy *);OMR;Optimizer;0;0
setRequestOptimization;setRequestOptimization(OMR::Optimizations,_Bool,TR::Block *);OMR;Optimizer;0;0
setResetExitsGRA;setResetExitsGRA(class TR_BitVector *);OMR;Optimizer;0;0
setSeenBlocksGRA;setSeenBlocksGRA(class TR_BitVector *);OMR;Optimizer;0;0
setSuccessorBitsGRA;setSuccessorBitsGRA(class TR_BitVector *);OMR;Optimizer;0;0
setSymReferencesTable;setSymReferencesTable(int32_t *);OMR;Optimizer;0;0
setUseDefInfo;setUseDefInfo(class TR_UseDefInfo *);OMR;Optimizer;0;0
setValueNumberInfo;setValueNumberInfo(class TR_ValueNumberInfo *);OMR;Optimizer;0;0
switchToProfiling;switchToProfiling(uint32_t,uint32_t);OMR;Optimizer;0;0
switchToProfiling;switchToProfiling();OMR;Optimizer;0;0
trHeapMemory;trHeapMemory();OMR;Optimizer;0;0
trMemory;trMemory();OMR;Optimizer;0;0
trPersistentMemory;trPersistentMemory();OMR;Optimizer;0;0
trStackMemory;trStackMemory();OMR;Optimizer;0;0
valueNumberInfoBuildType;valueNumberInfoBuildType();OMR;Optimizer;0;0
Options;Options(class OMR::Options &&);OMR;Options;1;0
Options;Options(const class OMR::Options &);OMR;Options;1;0
Options;Options();OMR;Options;0;0
Options;Options();TR;Options;0;0
Options;Options(TR::Options &);OMR;Options;0;0
Options;Options(TR::Options &);TR;Options;0;0
Options;Options(class TR_Memory *,int32_t,int32_t,class TR_ResolvedMethod *,void *,class TR_OptimizationPlan *,_Bool,int32_t);OMR;Options;0;0
Options;Options(class TR_Memory *,int32_t,int32_t,class TR_ResolvedMethod *,void *,class TR_OptimizationPlan *,_Bool,int32_t);TR;Options;0;0
addOptionSet;addOptionSet(TR::OptionSet *);OMR;Options;0;0
allowRecompilation;allowRecompilation();OMR;Options;0;0
alwaysCallWriteBarrier;alwaysCallWriteBarrier();OMR;Options;0;0
anOptionSetContainsACountValue;anOptionSetContainsACountValue();OMR;Options;0;0
breakOnLoad;breakOnLoad(char *,void *,TR::OptionTable *);OMR;Options;0;0
canJITCompile;canJITCompile();OMR;Options;0;0
checkDisableFlagForAllMethods;checkDisableFlagForAllMethods(OMR::Optimizations,_Bool);OMR;Options;0;0
clearBitsFromStringSet;clearBitsFromStringSet(char *,void *,TR::OptionTable *);OMR;Options;0;0
closeLogFile;closeLogFile(class TR_FrontEnd *,TR::FILE *);OMR;Options;0;0
closeLogsForOtherCompilationThreads;closeLogsForOtherCompilationThreads(class TR_FrontEnd *);OMR;Options;0;0
compareOptionsForBinarySearch;compareOptionsForBinarySearch(const TR::OptionTable &,const TR::OptionTable &);OMR;Options;0;0
configureOptReporting;configureOptReporting(char *,void *,TR::OptionTable *);OMR;Options;0;0
counterIsEnabled;counterIsEnabled(const char *,int8_t,TR::SimpleRegex *);OMR;Options;0;0
createDebug;createDebug();OMR;Options;0;0
debugCounterHistogramIsEnabled;debugCounterHistogramIsEnabled(const char *,int8_t);OMR;Options;0;0
debugCounterInsertedFormat;debugCounterInsertedFormat(class TR_Memory *,const char *,const char *);OMR;Options;0;0
disableCHOpts;disableCHOpts();OMR;Options;0;0
disableForAllMethods;disableForAllMethods(OMR::Optimizations);OMR;Options;0;0
disableMoreOpts;disableMoreOpts(char *,void *,TR::OptionTable *);OMR;Options;0;0
disableOptimization;disableOptimization(char *,void *,TR::OptionTable *);OMR;Options;0;0
disableSamplingThread;disableSamplingThread();OMR;Options;0;0
dontTraceOptimization;dontTraceOptimization(char *,void *,TR::OptionTable *);OMR;Options;0;0
dynamicDebugCounterIsEnabled;dynamicDebugCounterIsEnabled(const char *,int8_t);OMR;Options;0;0
enableDebugCounters;enableDebugCounters();OMR;Options;0;0
enableOptimization;enableOptimization(char *,void *,TR::OptionTable *);OMR;Options;0;0
enableTracing;enableTracing(OMR::Optimizations);OMR;Options;0;0
feLatePostProcess;feLatePostProcess(void *,TR::OptionSet *);OMR;Options;0;0
fePostProcessAOT;fePostProcessAOT(void *);OMR;Options;0;0
fePostProcessJIT;fePostProcessJIT(void *);OMR;Options;0;0
fePreProcess;fePreProcess(void *);OMR;Options;0;0
findLogFileForCompilationThread;findLogFileForCompilationThread(int32_t);OMR;Options;0;0
findOptionSet;findOptionSet(int32_t,int32_t,const char *,enum TR_Hotness,_Bool);OMR;Options;0;0
findOptionSet;findOptionSet(class TR_Memory *,int32_t,int32_t,class TR_ResolvedMethod *,enum TR_Hotness,_Bool);OMR;Options;0;0
findOptionSet;findOptionSet(class TR_Memory *,class TR_ResolvedMethod *,_Bool);OMR;Options;0;0
findOrCreateDebug;findOrCreateDebug();OMR;Options;0;0
gcIsUsingConcurrentMark;gcIsUsingConcurrentMark();OMR;Options;0;0
generateWriteBarriers;generateWriteBarriers();OMR;Options;0;0
get390LitPoolBufferSize;get390LitPoolBufferSize();OMR;Options;0;0
get390StackBufferSize;get390StackBufferSize();OMR;Options;0;0
getAOTCmdLineOptions;getAOTCmdLineOptions();OMR;Options;0;0
getAOTCompile;getAOTCompile();OMR;Options;0;0
getActiveCardTableBase;getActiveCardTableBase();OMR;Options;0;0
getAddressEnumerationOption;getAddressEnumerationOption(uint32_t);OMR;Options;0;0
getAggressivityLevel;getAggressivityLevel();OMR;Options;0;0
getAllOptions;getAllOptions(uint32_t);OMR;Options;0;0
getAlwaysWorthInliningThreshold;getAlwaysWorthInliningThreshold();OMR;Options;0;0
getAnyOption;getAnyOption(uint32_t);OMR;Options;0;0
getAnyTraceCGOption;getAnyTraceCGOption();OMR;Options;0;0
getAotrtDebugLevel;getAotrtDebugLevel();OMR;Options;0;0
getBigCalleeFrequencyCutoffAtHot;getBigCalleeFrequencyCutoffAtHot();OMR;Options;0;0
getBigCalleeFrequencyCutoffAtWarm;getBigCalleeFrequencyCutoffAtWarm();OMR;Options;0;0
getBigCalleeHotOptThreshold;getBigCalleeHotOptThreshold();OMR;Options;0;0
getBigCalleeScorchingOptThreshold;getBigCalleeScorchingOptThreshold();OMR;Options;0;0
getBigCalleeThreshold;getBigCalleeThreshold();OMR;Options;0;0
getBigCalleeThresholdForColdCallsAtHot;getBigCalleeThresholdForColdCallsAtHot();OMR;Options;0;0
getBigCalleeThresholdForColdCallsAtWarm;getBigCalleeThresholdForColdCallsAtWarm();OMR;Options;0;0
getBlockShufflingSequence;getBlockShufflingSequence();OMR;Options;0;0
getBreakOnCreate;getBreakOnCreate();OMR;Options;0;0
getBreakOnOpts;getBreakOnOpts();OMR;Options;0;0
getBreakOnPrint;getBreakOnPrint();OMR;Options;0;0
getBreakOnThrow;getBreakOnThrow();OMR;Options;0;0
getClassesWithFoldableFinalFields;getClassesWithFoldableFinalFields();OMR;Options;0;0
getCmdLineOptions;getCmdLineOptions();OMR;Options;0;0
getCompilationStrategyName;getCompilationStrategyName();OMR;Options;0;0
getCountValue;getCountValue(_Bool,enum TR_Hotness);OMR;Options;0;0
getCountsAreProvidedByUser;getCountsAreProvidedByUser();OMR;Options;0;0
getCustomStrategy;getCustomStrategy();OMR;Options;0;0
getCustomStrategySize;getCustomStrategySize();OMR;Options;0;0
getDLTOptLevel;getDLTOptLevel();OMR;Options;0;0
getDebug;getDebug();OMR;Options;0;0
getDebugCounterBucketGranularity;getDebugCounterBucketGranularity();OMR;Options;0;0
getDebugCounterWarmupSeconds;getDebugCounterWarmupSeconds();OMR;Options;0;0
getDebugEnableFlag;getDebugEnableFlag(uint32_t);OMR;Options;0;0
getDebugOnCreate;getDebugOnCreate();OMR;Options;0;0
getDefaultCountString;getDefaultCountString();OMR;Options;0;0
getDefaultOptions;getDefaultOptions();OMR;Options;0;0
getDelayCompile;getDelayCompile();OMR;Options;0;0
getDeterministicMode;getDeterministicMode();OMR;Options;0;0
getDisableDLTBytecodeIndex;getDisableDLTBytecodeIndex();OMR;Options;0;0
getDisabledIdiomPatterns;getDisabledIdiomPatterns();OMR;Options;0;0
getDisabledInlineSites;getDisabledInlineSites();OMR;Options;0;0
getDisabledOptTransformations;getDisabledOptTransformations();OMR;Options;0;0
getDisabledOpts;getDisabledOpts();OMR;Options;0;0
getDontInline;getDontInline();OMR;Options;0;0
getDumbInlinerBytecodeSizeCutoff;getDumbInlinerBytecodeSizeCutoff();OMR;Options;0;0
getDumbInlinerBytecodeSizeDivisor;getDumbInlinerBytecodeSizeDivisor();OMR;Options;0;0
getDumbInlinerBytecodeSizeMaxCutoff;getDumbInlinerBytecodeSizeMaxCutoff();OMR;Options;0;0
getDumbInlinerBytecodeSizeMinCutoff;getDumbInlinerBytecodeSizeMinCutoff();OMR;Options;0;0
getEnableDLTBytecodeIndex;getEnableDLTBytecodeIndex();OMR;Options;0;0
getEnableGPU;getEnableGPU(uint32_t);OMR;Options;0;0
getEnableSCHintFlags;getEnableSCHintFlags();OMR;Options;0;0
getFirstOptIndex;getFirstOptIndex();OMR;Options;0;0
getFirstOptTransformationIndex;getFirstOptTransformationIndex();OMR;Options;0;0
getFirstOptionSet;getFirstOptionSet();OMR;Options;0;0
getFixedOptLevel;getFixedOptLevel();OMR;Options;0;0
getGCRCount;getGCRCount();OMR;Options;0;0
getGCRDecCount;getGCRDecCount();OMR;Options;0;0
getGCRResetCount;getGCRResetCount();OMR;Options;0;0
getGcCardSize;getGcCardSize();OMR;Options;0;0
getGcMode;getGcMode();OMR;Options;0;0
getHeapAddressToCardAddressShift;getHeapAddressToCardAddressShift();OMR;Options;0;0
getHeapBase;getHeapBase();OMR;Options;0;0
getHeapBaseForBarrierRange0;getHeapBaseForBarrierRange0();OMR;Options;0;0
getHeapSizeForBarrierRange0;getHeapSizeForBarrierRange0();OMR;Options;0;0
getHeapTop;getHeapTop();OMR;Options;0;0
getInduceOSR;getInduceOSR();OMR;Options;0;0
getInitialBCount;getInitialBCount();OMR;Options;0;0
getInitialColdRunBCount;getInitialColdRunBCount();OMR;Options;0;0
getInitialColdRunCount;getInitialColdRunCount();OMR;Options;0;0
getInitialCount;getInitialCount();OMR;Options;0;0
getInitialHotnessLevel;getInitialHotnessLevel(_Bool);OMR;Options;0;0
getInitialMILCount;getInitialMILCount();OMR;Options;0;0
getInitialSCount;getInitialSCount();OMR;Options;0;0
getInlineCntrAllBucketSize;getInlineCntrAllBucketSize();OMR;Options;0;0
getInlineCntrCalleeTooBigBucketSize;getInlineCntrCalleeTooBigBucketSize();OMR;Options;0;0
getInlineCntrCalleeTooDeepBucketSize;getInlineCntrCalleeTooDeepBucketSize();OMR;Options;0;0
getInlineCntrColdAndNotTinyBucketSize;getInlineCntrColdAndNotTinyBucketSize();OMR;Options;0;0
getInlineCntrDepthExceededBucketSize;getInlineCntrDepthExceededBucketSize();OMR;Options;0;0
getInlineCntrRanOutOfBudgetBucketSize;getInlineCntrRanOutOfBudgetBucketSize();OMR;Options;0;0
getInlineCntrWarmCalleeHasTooManyNodesBucketSize;getInlineCntrWarmCalleeHasTooManyNodesBucketSize();OMR;Options;0;0
getInlineCntrWarmCalleeTooBigBucketSize;getInlineCntrWarmCalleeTooBigBucketSize();OMR;Options;0;0
getInlineCntrWarmCallerHasTooManyNodesBucketSize;getInlineCntrWarmCallerHasTooManyNodesBucketSize();OMR;Options;0;0
getInlinerArgumentHeuristicFraction;getInlinerArgumentHeuristicFraction();OMR;Options;0;0
getInlinerBorderFrequency;getInlinerBorderFrequency();OMR;Options;0;0
getInlinerCGBorderFrequency;getInlinerCGBorderFrequency();OMR;Options;0;0
getInlinerCGColdBorderFrequency;getInlinerCGColdBorderFrequency();OMR;Options;0;0
getInlinerCGVeryColdBorderFrequency;getInlinerCGVeryColdBorderFrequency();OMR;Options;0;0
getInlinerColdBorderFrequency;getInlinerColdBorderFrequency();OMR;Options;0;0
getInlinerVeryColdBorderFrequency;getInlinerVeryColdBorderFrequency();OMR;Options;0;0
getInlinerVeryColdBorderFrequencyAtCold;getInlinerVeryColdBorderFrequencyAtCold();OMR;Options;0;0
getInlinerVeryLargeCompiledMethodFaninThreshold;getInlinerVeryLargeCompiledMethodFaninThreshold();OMR;Options;0;0
getInlinerVeryLargeCompiledMethodThreshold;getInlinerVeryLargeCompiledMethodThreshold();OMR;Options;0;0
getInsertGCRTrees;getInsertGCRTrees();OMR;Options;0;0
getJITCmdLineOptions;getJITCmdLineOptions();OMR;Options;0;0
getJitMethodEntryAlignmentBoundary;getJitMethodEntryAlignmentBoundary(TR::CodeGenerator *);OMR;Options;0;0
getLabelTargetNOPLimit;getLabelTargetNOPLimit();OMR;Options;0;0
getLargeCompiledMethodExemptionFreqCutoff;getLargeCompiledMethodExemptionFreqCutoff();OMR;Options;0;0
getLargeNumberOfLoops;getLargeNumberOfLoops();OMR;Options;0;0
getLastIpaOptTransformationIndex;getLastIpaOptTransformationIndex();OMR;Options;0;0
getLastOptIndex;getLastOptIndex();OMR;Options;0;0
getLastOptSubIndex;getLastOptSubIndex();OMR;Options;0;0
getLastOptTransformationIndex;getLastOptTransformationIndex();OMR;Options;0;0
getLastSearchCount;getLastSearchCount();OMR;Options;0;0
getLockReserveClass;getLockReserveClass();OMR;Options;0;0
getLogFile;getLogFile();OMR;Options;0;0
getLogFileName;getLogFileName();OMR;Options;0;0
getLogListForOtherCompThreads;getLogListForOtherCompThreads();OMR;Options;0;0
getLoopyAsyncCheckInsertionMaxEntryFreq;getLoopyAsyncCheckInsertionMaxEntryFreq();OMR;Options;0;0
getMaxInlinedCalls;getMaxInlinedCalls();OMR;Options;0;0
getMaxLastOptTransformationIndex;getMaxLastOptTransformationIndex();OMR;Options;0;0
getMaxLimitedGRACandidates;getMaxLimitedGRACandidates();OMR;Options;0;0
getMaxLimitedGRARegs;getMaxLimitedGRARegs();OMR;Options;0;0
getMaxNumPrexAssumptions;getMaxNumPrexAssumptions();OMR;Options;0;0
getMaxNumVisitedSubclasses;getMaxNumVisitedSubclasses();OMR;Options;0;0
getMaxPeekedBytecodeSize;getMaxPeekedBytecodeSize();OMR;Options;0;0
getMaxSpreadCountLoopless;getMaxSpreadCountLoopless();OMR;Options;0;0
getMaxSpreadCountLoopy;getMaxSpreadCountLoopy();OMR;Options;0;0
getMaxStaticPICSlots;getMaxStaticPICSlots(enum TR_Hotness);OMR;Options;0;0
getMaxSzForVPInliningWarm;getMaxSzForVPInliningWarm();OMR;Options;0;0
getMaxUnloadedAddressRanges;getMaxUnloadedAddressRanges();OMR;Options;0;0
getMinFirstOptTransformationIndex;getMinFirstOptTransformationIndex();OMR;Options;0;0
getMinProfiledCheckcastFrequency;getMinProfiledCheckcastFrequency();OMR;Options;0;0
getNextHotnessLevel;getNextHotnessLevel(_Bool,enum TR_Hotness);OMR;Options;0;0
getNumInterfaceCallCacheSlots;getNumInterfaceCallCacheSlots();OMR;Options;0;0
getNumInterfaceCallStaticSlots;getNumInterfaceCallStaticSlots();OMR;Options;0;0
getNumLimitedGRARegsWithheld;getNumLimitedGRARegsWithheld();OMR;Options;0;0
getNumRestrictedGPRs;getNumRestrictedGPRs();OMR;Options;0;0
getNumUsableCompilationThreads;getNumUsableCompilationThreads();OMR;Options;0;0
getNumericValue;getNumericValue(char *&);OMR;Options;0;0
getObjectFileName;getObjectFileName();OMR;Options;0;0
getOnlyInline;getOnlyInline();OMR;Options;0;0
getOptLevel;getOptLevel();OMR;Options;0;0
getOptLevelDowngraded;getOptLevelDowngraded();OMR;Options;0;0
getOption;getOption(uint32_t);OMR;Options;0;0
getOptsToTrace;getOptsToTrace();OMR;Options;0;0
getPackedTestRegex;getPackedTestRegex();OMR;Options;0;0
getProfilingCompNodecountThreshold;getProfilingCompNodecountThreshold();OMR;Options;0;0
getProfilingCount;getProfilingCount();OMR;Options;0;0
getProfilingFrequency;getProfilingFrequency();OMR;Options;0;0
getRandomSeed;getRandomSeed();OMR;Options;0;0
getRegisterAssignmentTraceOption;getRegisterAssignmentTraceOption(uint32_t);OMR;Options;0;0
getSamplingFrequency;getSamplingFrequency();OMR;Options;0;0
getSamplingJProfilingOption;getSamplingJProfilingOption(enum TR_SamplingJProfilingFlags);OMR;Options;0;0
getScratchSpaceLimit;getScratchSpaceLimit();OMR;Options;0;0
getScratchSpaceLowerBound;getScratchSpaceLowerBound();OMR;Options;0;0
getSlipTrap;getSlipTrap();OMR;Options;0;0
getStackPCDumpNumberOfBuffers;getStackPCDumpNumberOfBuffers();OMR;Options;0;0
getStackPCDumpNumberOfFrames;getStackPCDumpNumberOfFrames();OMR;Options;0;0
getStoreSinkingLastOpt;getStoreSinkingLastOpt();OMR;Options;0;0
getSuffixLogsFormat;getSuffixLogsFormat();OMR;Options;0;0
getTOCSize;getTOCSize();OMR;Options;0;0
getTraceCGOption;getTraceCGOption(uint32_t);OMR;Options;0;0
getTraceForCodeMining;getTraceForCodeMining();OMR;Options;0;0
getTraceILDeadCode;getTraceILDeadCode(uint32_t);OMR;Options;0;0
getTraceLRA;getTraceLRA(uint32_t);OMR;Options;0;0
getTraceRAOption;getTraceRAOption(uint32_t);OMR;Options;0;0
getTraceRegisterITF;getTraceRegisterITF(uint32_t);OMR;Options;0;0
getTraceSimplifier;getTraceSimplifier(uint32_t);OMR;Options;0;0
getTraceSpillCosts;getTraceSpillCosts(uint32_t);OMR;Options;0;0
getTrampolineSpacePercentage;getTrampolineSpacePercentage();OMR;Options;0;0
getTrivialInlinerMaxSize;getTrivialInlinerMaxSize();OMR;Options;0;0
getTryToInline;getTryToInline();OMR;Options;0;0
getVerboseOptTransformationsRegex;getVerboseOptTransformationsRegex();OMR;Options;0;0
getVerboseOption;getVerboseOption(enum TR_VerboseFlags);OMR;Options;0;0
getVerboseOptionName;getVerboseOptionName(enum TR_VerboseFlags);OMR;Options;0;0
hasOptionSets;hasOptionSets();OMR;Options;0;0
hasSomeLogFile;hasSomeLogFile();OMR;Options;0;0
helpOption;helpOption(char *,void *,TR::OptionTable *);OMR;Options;0;0
inlinefileOption;inlinefileOption(char *,void *,TR::OptionTable *);OMR;Options;0;0
insertDebuggingCounters;insertDebuggingCounters();OMR;Options;0;0
isAnySamplingJProfilingOptionSet;isAnySamplingJProfilingOptionSet();OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags);OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags);OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet();OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags);OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags);OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags);OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags);OMR;Options;0;0
isDisabled;isDisabled(OMR::Optimizations);OMR;Options;0;0
isDisabledForAllMethods;isDisabledForAllMethods(OMR::Optimizations);OMR;Options;0;0
isDisabledForAnyMethod;isDisabledForAnyMethod(OMR::Optimizations);OMR;Options;0;0
isFullyInitialized;isFullyInitialized();OMR;Options;0;0
isOptionSetForAnyMethod;isOptionSetForAnyMethod(enum TR_CompilationOptions);OMR;Options;0;0
isQuickstartDetected;isQuickstartDetected();OMR;Options;0;0
isVariableActiveCardTableBase;isVariableActiveCardTableBase();OMR;Options;0;0
isVariableHeapBaseForBarrierRange0;isVariableHeapBaseForBarrierRange0();OMR;Options;0;0
isVariableHeapSizeForBarrierRange0;isVariableHeapSizeForBarrierRange0();OMR;Options;0;0
isVerboseFileSet;isVerboseFileSet();OMR;Options;0;0
jitLatePostProcess;jitLatePostProcess(TR::OptionSet *,void *);OMR;Options;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Options;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Options;0;0
jitPostProcess;jitPostProcess();OMR;Options;0;0
jitPreProcess;jitPreProcess();OMR;Options;0;0
latePostProcess;latePostProcess(TR::Options *,void *,_Bool);OMR;Options;0;0
latePostProcessAOT;latePostProcessAOT(void *);OMR;Options;0;0
latePostProcessJIT;latePostProcessJIT(void *);OMR;Options;0;0
limitOption;limitOption(char *,void *,TR::OptionTable *);OMR;Options;0;0
limitfileOption;limitfileOption(char *,void *,TR::OptionTable *);OMR;Options;0;0
needWriteBarriers;needWriteBarriers();OMR;Options;0;0
negateProcessingMethod;negateProcessingMethod(TR::OptionFunctionPtr);OMR;Options;0;0
openLogFile;openLogFile(int32_t);OMR;Options;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Options;0;0
operator delete;operator delete(void *,size_t);OMR;Options;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Options;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Options;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Options;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Options;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Options;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Options;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Options;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Options;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Options;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Options;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Options;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Options;0;0
operator new;operator new(size_t,TR::Region &);OMR;Options;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Options;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Options;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Options;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Options;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Options;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Options;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Options;0;0
printOptions;printOptions(char *,char *);OMR;Options;0;0
processOption;processOption(char *,TR::OptionTable *,void *,int32_t,TR::OptionSet *);OMR;Options;0;0
processOptionSet;processOptionSet(char *,TR::OptionSet *,void *,_Bool);OMR;Options;0;0
processOptionSet;processOptionSet(char *,char *,TR::OptionSet *);OMR;Options;0;0
processOptionSet;processOptionSet(char *,char *,TR::Options *,_Bool);OMR;Options;0;0
processOptions;processOptions(char *,char *,void *,class TR_FrontEnd *,TR::Options *);OMR;Options;0;0
processOptions;processOptions(char *,char *,TR::Options *);OMR;Options;0;0
processOptionsAOT;processOptionsAOT(char *,void *,class TR_FrontEnd *);OMR;Options;0;0
processOptionsJIT;processOptionsJIT(char *,void *,class TR_FrontEnd *);OMR;Options;0;0
realTimeGC;realTimeGC();OMR;Options;0;0
requiresDebugObject;requiresDebugObject();OMR;Options;0;0
requiresLogFile;requiresLogFile();OMR;Options;0;0
resetBit;resetBit(char *,void *,TR::OptionTable *);OMR;Options;0;0
resetSamplingJProfilingOption;resetSamplingJProfilingOption(enum TR_SamplingJProfilingFlags);OMR;Options;0;0
resetVerboseOption;resetVerboseOption(enum TR_VerboseFlags);OMR;Options;0;0
safelyCloseLogs;safelyCloseLogs(TR::Options *,class TR_MCTLogs *&,class TR_FrontEnd *);OMR;Options;0;0
self;self();OMR;Options;0;0
set32BitHexadecimal;set32BitHexadecimal(char *,void *,TR::OptionTable *);OMR;Options;0;0
set32BitNumeric;set32BitNumeric(char *,void *,TR::OptionTable *);OMR;Options;0;0
set32BitNumericInJitConfig;set32BitNumericInJitConfig(char *,void *,TR::OptionTable *);OMR;Options;0;0
set32BitSignedNumeric;set32BitSignedNumeric(char *,void *,TR::OptionTable *);OMR;Options;0;0
set32BitValue;set32BitValue(char *,void *,TR::OptionTable *);OMR;Options;0;0
set64BitSignedNumeric;set64BitSignedNumeric(char *,void *,TR::OptionTable *);OMR;Options;0;0
setAOTCmdLineOptions;setAOTCmdLineOptions(TR::Options *);OMR;Options;0;0
setAOTCompile;setAOTCompile(_Bool);OMR;Options;0;0
setActiveCardTableBase;setActiveCardTableBase(uintptr_t);OMR;Options;0;0
setAddressEnumerationBits;setAddressEnumerationBits(char *,void *,TR::OptionTable *);OMR;Options;0;0
setAggressiveQuickStart;setAggressiveQuickStart();OMR;Options;0;0
setAllowRecompilation;setAllowRecompilation(_Bool);OMR;Options;0;0
setAnOptionSetContainsACountValue;setAnOptionSetContainsACountValue(_Bool);OMR;Options;0;0
setBit;setBit(char *,void *,TR::OptionTable *);OMR;Options;0;0
setBitsFromStringSet;setBitsFromStringSet(char *,void *,TR::OptionTable *);OMR;Options;0;0
setCanJITCompile;setCanJITCompile(_Bool);OMR;Options;0;0
setConservativeDefaultBehavior;setConservativeDefaultBehavior();OMR;Options;0;0
setConservativeQuickStart;setConservativeQuickStart();OMR;Options;0;0
setCount;setCount(char *,void *,TR::OptionTable *);OMR;Options;0;0
setCounts;setCounts();OMR;Options;0;0
setDebug;setDebug(char *,void *,TR::OptionTable *);OMR;Options;0;0
setDefaultsForDeterministicMode;setDefaultsForDeterministicMode();OMR;Options;0;0
setDisabled;setDisabled(OMR::Optimizations,_Bool);OMR;Options;0;0
setDumbInlinerBytecodeSizeCutoff;setDumbInlinerBytecodeSizeCutoff(int32_t);OMR;Options;0;0
setFixedOptLevel;setFixedOptLevel(int32_t);OMR;Options;0;0
setForAllMethods;setForAllMethods(enum TR_CompilationOptions);OMR;Options;0;0
setGCRCount;setGCRCount(int32_t);OMR;Options;0;0
setGcCardSize;setGcCardSize(uintptr_t);OMR;Options;0;0
setGcMode;setGcMode(enum TR_WriteBarrierKind);OMR;Options;0;0
setGlobalAggressiveAOT;setGlobalAggressiveAOT();OMR;Options;0;0
setHeapAddressToCardAddressShift;setHeapAddressToCardAddressShift(uintptr_t);OMR;Options;0;0
setHeapBase;setHeapBase(uintptr_t);OMR;Options;0;0
setHeapBaseForBarrierRange0;setHeapBaseForBarrierRange0(uintptr_t);OMR;Options;0;0
setHeapSizeForBarrierRange0;setHeapSizeForBarrierRange0(uintptr_t);OMR;Options;0;0
setHeapTop;setHeapTop(uintptr_t);OMR;Options;0;0
setInitialBCount;setInitialBCount(int32_t);OMR;Options;0;0
setInitialCount;setInitialCount(int32_t);OMR;Options;0;0
setInitialMILCount;setInitialMILCount(int32_t);OMR;Options;0;0
setInlinerBorderFrequency;setInlinerBorderFrequency(int32_t);OMR;Options;0;0
setInlinerCGBorderFrequency;setInlinerCGBorderFrequency(int32_t);OMR;Options;0;0
setInlinerCGColdBorderFrequency;setInlinerCGColdBorderFrequency(int32_t);OMR;Options;0;0
setInlinerCGVeryColdBorderFrequency;setInlinerCGVeryColdBorderFrequency(int32_t);OMR;Options;0;0
setInlinerColdBorderFrequency;setInlinerColdBorderFrequency(int32_t);OMR;Options;0;0
setInlinerVeryColdBorderFrequency;setInlinerVeryColdBorderFrequency(int32_t);OMR;Options;0;0
setInlinerVeryColdBorderFrequencyAtCold;setInlinerVeryColdBorderFrequencyAtCold(int32_t);OMR;Options;0;0
setInsertGCRTrees;setInsertGCRTrees();OMR;Options;0;0
setIsFullyInitialized;setIsFullyInitialized();OMR;Options;0;0
setIsVariableActiveCardTableBase;setIsVariableActiveCardTableBase(uintptr_t);OMR;Options;0;0
setIsVariableHeapBaseForBarrierRange0;setIsVariableHeapBaseForBarrierRange0(uintptr_t);OMR;Options;0;0
setIsVariableHeapSizeForBarrierRange0;setIsVariableHeapSizeForBarrierRange0(uintptr_t);OMR;Options;0;0
setJitMethodEntryAlignmentBoundary;setJitMethodEntryAlignmentBoundary(int32_t);OMR;Options;0;0
setLocalAggressiveAOT;setLocalAggressiveAOT();OMR;Options;0;0
setLogFile;setLogFile(TR::FILE *);OMR;Options;0;0
setLogForCompilationThread;setLogForCompilationThread(int32_t,TR::Options *);OMR;Options;0;0
setLogListForOtherCompThreads;setLogListForOtherCompThreads(class TR_MCTLogs *);OMR;Options;0;0
setMoreAggressiveInlining;setMoreAggressiveInlining();OMR;Options;0;0
setNumeric;setNumeric(char *,void *,TR::OptionTable *);OMR;Options;0;0
setOptLevel;setOptLevel(int32_t);OMR;Options;0;0
setOption;setOption(uint32_t,_Bool);OMR;Options;0;0
setOptionInAllOptionSets;setOptionInAllOptionSets(uint32_t,_Bool);OMR;Options;0;0
setQuickStart;setQuickStart();OMR;Options;0;0
setRealTimeGC;setRealTimeGC(_Bool);OMR;Options;0;0
setRegex;setRegex(char *,void *,TR::OptionTable *);OMR;Options;0;0
setSamplingJProfilingBits;setSamplingJProfilingBits(char *,void *,TR::OptionTable *);OMR;Options;0;0
setSamplingJProfilingOption;setSamplingJProfilingOption(enum TR_SamplingJProfilingFlags);OMR;Options;0;0
setScratchSpaceLimit;setScratchSpaceLimit(size_t);OMR;Options;0;0
setScratchSpaceLowerBound;setScratchSpaceLowerBound(size_t);OMR;Options;0;0
setSharedClassCache;setSharedClassCache(_Bool);OMR;Options;0;0
setStatic32BitValue;setStatic32BitValue(char *,void *,TR::OptionTable *);OMR;Options;0;0
setStaticBool;setStaticBool(char *,void *,TR::OptionTable *);OMR;Options;0;0
setStaticHexadecimal;setStaticHexadecimal(char *,void *,TR::OptionTable *);OMR;Options;0;0
setStaticNumeric;setStaticNumeric(char *,void *,TR::OptionTable *);OMR;Options;0;0
setStaticNumericKBAdjusted;setStaticNumericKBAdjusted(char *,void *,TR::OptionTable *);OMR;Options;0;0
setStaticRegex;setStaticRegex(char *,void *,TR::OptionTable *);OMR;Options;0;0
setStaticString;setStaticString(char *,void *,TR::OptionTable *);OMR;Options;0;0
setString;setString(char *,void *,TR::OptionTable *);OMR;Options;0;0
setStringForPrivateBase;setStringForPrivateBase(char *,void *,TR::OptionTable *);OMR;Options;0;0
setStringInJitConfig;setStringInJitConfig(char *,void *,TR::OptionTable *);OMR;Options;0;0
setTarget;setTarget();OMR;Options;0;0
setTrivialInlinerMaxSize;setTrivialInlinerMaxSize(int32_t);OMR;Options;0;0
setValue;setValue(char *,void *,TR::OptionTable *);OMR;Options;0;0
setVerboseBits;setVerboseBits(char *,void *,TR::OptionTable *);OMR;Options;0;0
setVerboseBitsHelper;setVerboseBitsHelper(char *,VerboseOptionFlagArray *,uintptrj_t);OMR;Options;0;0
setVerboseBitsInJitPrivateConfig;setVerboseBitsInJitPrivateConfig(char *,void *,TR::OptionTable *);OMR;Options;0;0
setVerboseOption;setVerboseOption(enum TR_VerboseFlags);OMR;Options;0;0
setVerboseOptions;setVerboseOptions(uint64_t);OMR;Options;0;0
sharedClassCache;sharedClassCache();OMR;Options;0;0
showOptionsInEffect;showOptionsInEffect();OMR;Options;0;0
showPID;showPID();OMR;Options;0;0
shutdown;shutdown(class TR_FrontEnd *);OMR;Options;0;0
startupTimeMatters;startupTimeMatters();OMR;Options;0;0
staticDebugCounterIsEnabled;staticDebugCounterIsEnabled(const char *,int8_t);OMR;Options;0;0
suppressLogFileBecauseDebugObjectNotCreated;suppressLogFileBecauseDebugObjectNotCreated(_Bool);OMR;Options;0;0
trace;trace(OMR::Optimizations);OMR;Options;0;0
traceOptimization;traceOptimization(char *,void *,TR::OptionTable *);OMR;Options;0;0
tracingOptimization;tracingOptimization();OMR;Options;0;0
useCompressedPointers;useCompressedPointers();OMR;Options;0;0
validateOptions;validateOptions(void *,class TR_FrontEnd *);OMR;Options;0;0
validateOptionsTables;validateOptionsTables(void *,class TR_FrontEnd *);OMR;Options;0;0
versionOption;versionOption(char *,void *,TR::OptionTable *);OMR;Options;0;0
PersistentInfo;PersistentInfo(class TR_PersistentMemory *);OMR;PersistentInfo;0;0
PersistentInfo;PersistentInfo(class TR_PersistentMemory *);TR;PersistentInfo;0;0
PersistentInfo;PersistentInfo(class OMR::PersistentInfo &&);OMR;PersistentInfo;1;0
PersistentInfo;PersistentInfo(const class OMR::PersistentInfo &);OMR;PersistentInfo;1;0
PersistentInfo;PersistentInfo(const class TR::PersistentInfo &);TR;PersistentInfo;1;0
PersistentInfo;PersistentInfo(class TR::PersistentInfo &&);TR;PersistentInfo;1;0
advanceCurPseudoRandomNumbersListElem;advanceCurPseudoRandomNumbersListElem();OMR;PersistentInfo;0;0
createCounters;createCounters(class TR_PersistentMemory *);OMR;PersistentInfo;0;0
getCodeCacheManager;getCodeCacheManager();OMR;PersistentInfo;0;0
getCurIndex;getCurIndex();OMR;PersistentInfo;0;0
getCurPseudoRandomNumbersListElem;getCurPseudoRandomNumbersListElem();OMR;PersistentInfo;0;0
getDynamicCounters;getDynamicCounters();OMR;PersistentInfo;0;0
getLastDebugCounterResetSeconds;getLastDebugCounterResetSeconds();OMR;PersistentInfo;0;0
getNextPseudoRandomNumber;getNextPseudoRandomNumber(int32_t);OMR;PersistentInfo;0;0
getPersistentTOC;getPersistentTOC();OMR;PersistentInfo;0;0
getPseudoRandomNumbersList;getPseudoRandomNumbersList();OMR;PersistentInfo;0;0
getPseudoRandomNumbersListPtr;getPseudoRandomNumbersListPtr();OMR;PersistentInfo;0;0
getStaticCounters;getStaticCounters();OMR;PersistentInfo;0;0
isObsoleteClass;isObsoleteClass(void *,class TR_FrontEnd *);OMR;PersistentInfo;0;0
isRuntimeInstrumentationEnabled;isRuntimeInstrumentationEnabled();OMR;PersistentInfo;0;0
operator=;operator=(const class OMR::PersistentInfo &);OMR;PersistentInfo;1;0
operator=;operator=(class OMR::PersistentInfo &&);OMR;PersistentInfo;1;0
operator=;operator=(class TR::PersistentInfo &&);TR;PersistentInfo;1;0
operator=;operator=(const class TR::PersistentInfo &);TR;PersistentInfo;1;0
self;self();OMR;PersistentInfo;0;0
setCodeCacheManager;setCodeCacheManager(TR::CodeCacheManager *);OMR;PersistentInfo;0;0
setLastDebugCounterResetSeconds;setLastDebugCounterResetSeconds(int64_t);OMR;PersistentInfo;0;0
setPersistentTOC;setPersistentTOC(class OMR::TableOfConstants *);OMR;PersistentInfo;0;0
~PersistentInfo;~PersistentInfo();OMR;PersistentInfo;1;0
~PersistentInfo;~PersistentInfo();TR;PersistentInfo;1;0
Destructable;Destructable(const class TR::Region::Destructable &);TR::Region;Destructable;1;0
Destructable;Destructable(class TR::Region::Destructable *const);TR::Region;Destructable;0;0
Instance<T>;Instance<T>(class TR::Region::Destructable *,const T &);TR::Region;Instance;0;0
operator=;operator=(const class TR::Region::Destructable &);TR::Region;Destructable;1;0
prev;prev();TR::Region;Destructable;0;0
value;value();TR::Region;Instance;0;0
~Destructable;~Destructable();TR::Region;Destructable;0;1
~Instance<T>;~Instance<T>();TR::Region;Instance;0;1
RegisterIterator;RegisterIterator(class OMR::X86::RegisterIterator &&);OMR::X86;RegisterIterator;1;0
RegisterIterator;RegisterIterator(TR::Machine *,enum TR_RegisterKinds);OMR::X86;RegisterIterator;0;0
RegisterIterator;RegisterIterator(TR::Machine *,enum TR_RegisterKinds);TR;RegisterIterator;0;0
RegisterIterator;RegisterIterator(const class OMR::X86::RegisterIterator &);OMR::X86;RegisterIterator;1;0
RegisterIterator;RegisterIterator(class TR::RegisterIterator &&);TR;RegisterIterator;1;0
RegisterIterator;RegisterIterator(const class TR::RegisterIterator &);TR;RegisterIterator;1;0
TR_X86FPStackIterator;TR_X86FPStackIterator(TR::Machine *,enum TR_RegisterKinds);;TR_X86FPStackIterator;0;0
getCurrent;getCurrent();OMR::X86;RegisterIterator;0;0
getCurrent;getCurrent();;TR_X86FPStackIterator;0;0
getFirst;getFirst();OMR::X86;RegisterIterator;0;0
getFirst;getFirst();;TR_X86FPStackIterator;0;0
getNext;getNext();OMR::X86;RegisterIterator;0;0
getNext;getNext();;TR_X86FPStackIterator;0;0
~RegisterIterator;~RegisterIterator();OMR::X86;RegisterIterator;1;0
ResolvedMethod;ResolvedMethod(const class TestCompiler::ResolvedMethod &);TestCompiler;ResolvedMethod;1;0
ResolvedMethod;ResolvedMethod(const char *,const char *,char *,int32_t,TR::IlType **,TR::IlType *,void *,TR::IlInjector *);TestCompiler;ResolvedMethod;0;0
ResolvedMethod;ResolvedMethod(class TR_OpaqueMethodBlock *);TestCompiler;ResolvedMethod;0;0
ResolvedMethod;ResolvedMethod(class TR_OpaqueMethodBlock *);TR;ResolvedMethod;0;0
ResolvedMethod;ResolvedMethod(class TestCompiler::ResolvedMethod &&);TestCompiler;ResolvedMethod;1;0
ResolvedMethod;ResolvedMethod(TR::MethodBuilder *);TestCompiler;ResolvedMethod;0;0
ResolvedMethod;ResolvedMethod(TR::MethodBuilder *);TR;ResolvedMethod;0;0
ResolvedMethod;ResolvedMethod(char *,char *,char *,int32_t,TR::IlType **,TR::IlType *,void *,TR::IlInjector *);TR;ResolvedMethod;0;0
ResolvedMethodBase;ResolvedMethodBase(class TestCompiler::ResolvedMethodBase &&);TestCompiler;ResolvedMethodBase;1;0
ResolvedMethodBase;ResolvedMethodBase(const class TestCompiler::ResolvedMethodBase &);TestCompiler;ResolvedMethodBase;1;0
ResolvedMethodBase;ResolvedMethodBase();TestCompiler;ResolvedMethodBase;1;0
TR_ResolvedMethod;TR_ResolvedMethod(class TR_ResolvedMethod &&);;TR_ResolvedMethod;1;0
TR_ResolvedMethod;TR_ResolvedMethod();;TR_ResolvedMethod;1;0
TR_ResolvedMethod;TR_ResolvedMethod(const class TR_ResolvedMethod &);;TR_ResolvedMethod;1;0
_genMethodILForPeeking;_genMethodILForPeeking(TR::ResolvedMethodSymbol *,TR::Compilation *,_Bool,class TR_PrexArgInfo *);;TR_ResolvedMethod;0;1
addressContainingIsOverriddenBit;addressContainingIsOverriddenBit();;TR_ResolvedMethod;0;1
addressOfClassOfMethod;addressOfClassOfMethod();;TR_ResolvedMethod;0;1
allocateException;allocateException(uint32_t,TR::Compilation *);;TR_ResolvedMethod;0;1
archetypeArgPlaceholderSlot;archetypeArgPlaceholderSlot(class TR_Memory *);;TR_ResolvedMethod;0;1
bytecodeStart;bytecodeStart();;TR_ResolvedMethod;0;1
callSiteTableEntryAddress;callSiteTableEntryAddress(int32_t);;TR_ResolvedMethod;0;1
canAlwaysShareSymbolDespiteOwningMethod;canAlwaysShareSymbolDespiteOwningMethod(class TR_ResolvedMethod *);;TR_ResolvedMethod;0;1
classCPIndexOfFieldOrStatic;classCPIndexOfFieldOrStatic(int32_t);;TR_ResolvedMethod;0;1
classCPIndexOfMethod;classCPIndexOfMethod(uint32_t);;TR_ResolvedMethod;0;1
classNameChars;classNameChars();;TR_ResolvedMethod;0;1
classNameChars;classNameChars();TestCompiler;ResolvedMethod;0;1
classNameLength;classNameLength();;TR_ResolvedMethod;0;1
classNameLength;classNameLength();TestCompiler;ResolvedMethodBase;0;1
classNameOfFieldOrStatic;classNameOfFieldOrStatic(int32_t,int32_t &);;TR_ResolvedMethod;0;1
classOfMethod;classOfMethod();;TR_ResolvedMethod;0;1
classOfStatic;classOfStatic(int32_t,_Bool);;TR_ResolvedMethod;0;1
classSignatureOfFieldOrStatic;classSignatureOfFieldOrStatic(int32_t,int32_t &);;TR_ResolvedMethod;0;1
code;code();TestCompiler;ResolvedMethod;0;1
computeSignatureChars;computeSignatureChars();TestCompiler;ResolvedMethod;0;0
computeSignatureCharsPrimitive;computeSignatureCharsPrimitive();TestCompiler;ResolvedMethod;0;0
constantPool;constantPool();;TR_ResolvedMethod;0;1
containingClass;containingClass();;TR_ResolvedMethod;0;1
convertToMethod;convertToMethod();;TR_ResolvedMethod;0;1
convertToMethod;convertToMethod();TestCompiler;ResolvedMethod;0;1
directCallOpCode;directCallOpCode();;TR_ResolvedMethod;0;1
doubleConstant;doubleConstant(int32_t,class TR_Memory *);;TR_ResolvedMethod;0;1
exceptionData;exceptionData(int32_t,int32_t *,int32_t *,int32_t *);;TR_ResolvedMethod;0;1
externalName;externalName(class TR_Memory *,enum TR_AllocationKind);;TR_ResolvedMethod;0;1
fe;fe();;TR_ResolvedMethod;0;1
fieldAttributes;fieldAttributes(TR::Compilation *,int32_t,uint32_t *,TR::DataType *,_Bool *,_Bool *,_Bool *,_Bool,_Bool *,_Bool);;TR_ResolvedMethod;0;1
fieldName;fieldName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind);;TR_ResolvedMethod;0;1
fieldName;fieldName(int32_t,class TR_Memory *,enum TR_AllocationKind);;TR_ResolvedMethod;0;1
fieldNameChars;fieldNameChars(int32_t,int32_t &);;TR_ResolvedMethod;0;1
fieldSignatureChars;fieldSignatureChars(int32_t,int32_t &);;TR_ResolvedMethod;0;1
fieldsAreSame;fieldsAreSame(int32_t,class TR_ResolvedMethod *,int32_t,_Bool &);;TR_ResolvedMethod;0;1
findOrCreateJittedMethodSymbol;findOrCreateJittedMethodSymbol(TR::Compilation *);;TR_ResolvedMethod;0;1
floatConstant;floatConstant(int32_t);;TR_ResolvedMethod;0;1
genMethodILForPeeking;genMethodILForPeeking(TR::ResolvedMethodSymbol *,TR::Compilation *,_Bool,class TR_PrexArgInfo *);;TR_ResolvedMethod;0;0
getClassFromConstantPool;getClassFromConstantPool(TR::Compilation *,uint32_t,_Bool);;TR_ResolvedMethod;0;1
getClassFromFieldOrStatic;getClassFromFieldOrStatic(TR::Compilation *,int32_t,_Bool);;TR_ResolvedMethod;0;0
getClassNameFromConstantPool;getClassNameFromConstantPool(uint32_t,uint32_t &);;TR_ResolvedMethod;0;1
getDeclaringClassFromFieldOrStatic;getDeclaringClassFromFieldOrStatic(TR::Compilation *,int32_t);;TR_ResolvedMethod;0;1
getEntryPoint;getEntryPoint();TestCompiler;ResolvedMethod;0;0
getIlGeneratorMethodDetails;getIlGeneratorMethodDetails();;TR_ResolvedMethod;0;1
getInjector;getInjector(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *);TestCompiler;ResolvedMethod;0;0
getInvocationCount;getInvocationCount();;TR_ResolvedMethod;0;1
getLDCType;getLDCType(int32_t);;TR_ResolvedMethod;0;1
getLineNumber;getLineNumber();TestCompiler;ResolvedMethod;0;0
getMethodHandleLocation;getMethodHandleLocation();;TR_ResolvedMethod;0;1
getNonPersistentIdentifier;getNonPersistentIdentifier();;TR_ResolvedMethod;0;1
getNumArgs;getNumArgs();TestCompiler;ResolvedMethod;0;0
getParameterIterator;getParameterIterator(TR::Compilation &);;TR_ResolvedMethod;0;0
getPersistentIdentifier;getPersistentIdentifier();;TR_ResolvedMethod;0;1
getPersistentIdentifier;getPersistentIdentifier();TestCompiler;ResolvedMethod;0;1
getRecognizedMethod;getRecognizedMethod();;TR_ResolvedMethod;0;0
getResolvedDynamicMethod;getResolvedDynamicMethod(TR::Compilation *,int32_t,_Bool *);;TR_ResolvedMethod;0;1
getResolvedHandleMethod;getResolvedHandleMethod(TR::Compilation *,int32_t,_Bool *);;TR_ResolvedMethod;0;1
getResolvedHandleMethodWithSignature;getResolvedHandleMethodWithSignature(TR::Compilation *,int32_t,char *);;TR_ResolvedMethod;0;1
getResolvedInterfaceMethod;getResolvedInterfaceMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t);;TR_ResolvedMethod;0;1
getResolvedInterfaceMethod;getResolvedInterfaceMethod(int32_t,uintptrj_t *);;TR_ResolvedMethod;0;1
getResolvedInterfaceMethodOffset;getResolvedInterfaceMethodOffset(class TR_OpaqueClassBlock *,int32_t);;TR_ResolvedMethod;0;1
getResolvedSpecialMethod;getResolvedSpecialMethod(TR::Compilation *,int32_t,_Bool *);;TR_ResolvedMethod;0;1
getResolvedStaticMethod;getResolvedStaticMethod(TR::Compilation *,int32_t,_Bool *);;TR_ResolvedMethod;0;1
getResolvedVirtualMethod;getResolvedVirtualMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t,_Bool);;TR_ResolvedMethod;0;1
getResolvedVirtualMethod;getResolvedVirtualMethod(TR::Compilation *,int32_t,_Bool,_Bool *);;TR_ResolvedMethod;0;1
getSignature;getSignature();TestCompiler;ResolvedMethod;0;0
getUnresolvedFieldInCP;getUnresolvedFieldInCP(int32_t);;TR_ResolvedMethod;0;1
getUnresolvedSpecialMethodInCP;getUnresolvedSpecialMethodInCP(int32_t);;TR_ResolvedMethod;0;1
getUnresolvedStaticMethodInCP;getUnresolvedStaticMethodInCP(int32_t);;TR_ResolvedMethod;0;1
getUnresolvedVirtualMethodInCP;getUnresolvedVirtualMethodInCP(int32_t);;TR_ResolvedMethod;0;1
hasBackwardBranches;hasBackwardBranches();;TR_ResolvedMethod;0;1
hasBackwardBranches;hasBackwardBranches();TestCompiler;ResolvedMethodBase;0;1
indirectCallOpCode;indirectCallOpCode();;TR_ResolvedMethod;0;1
intConstant;intConstant(int32_t);;TR_ResolvedMethod;0;1
isAbstract;isAbstract();;TR_ResolvedMethod;0;1
isAbstract;isAbstract();TestCompiler;ResolvedMethodBase;0;1
isClassConstant;isClassConstant(int32_t);;TR_ResolvedMethod;0;1
isCold;isCold(TR::Compilation *,_Bool,TR::ResolvedMethodSymbol *);;TR_ResolvedMethod;0;1
isCompilable;isCompilable(class TR_Memory *);;TR_ResolvedMethod;0;1
isCompilable;isCompilable(class TR_Memory *);TestCompiler;ResolvedMethodBase;0;1
isConstructor;isConstructor();;TR_ResolvedMethod;0;1
isConstructor;isConstructor();TestCompiler;ResolvedMethodBase;0;1
isDAAIntrinsicMethod;isDAAIntrinsicMethod();;TR_ResolvedMethod;0;0
isDAAMarshallingIntrinsicMethod;isDAAMarshallingIntrinsicMethod();;TR_ResolvedMethod;0;0
isDAAMarshallingWrapperMethod;isDAAMarshallingWrapperMethod();;TR_ResolvedMethod;0;0
isDAAPackedDecimalIntrinsicMethod;isDAAPackedDecimalIntrinsicMethod();;TR_ResolvedMethod;0;0
isDAAPackedDecimalWrapperMethod;isDAAPackedDecimalWrapperMethod();;TR_ResolvedMethod;0;0
isDAAWrapperMethod;isDAAWrapperMethod();;TR_ResolvedMethod;0;0
isFinal;isFinal();;TR_ResolvedMethod;0;1
isFinal;isFinal();TestCompiler;ResolvedMethodBase;0;1
isFinalInObject;isFinalInObject();TestCompiler;ResolvedMethodBase;0;1
isInlineable;isInlineable(TR::Compilation *);;TR_ResolvedMethod;0;1
isInterpreted;isInterpreted();;TR_ResolvedMethod;0;1
isInterpreted;isInterpreted();TestCompiler;ResolvedMethod;0;1
isJ9;isJ9();;TR_ResolvedMethod;0;0
isJITInternalNative;isJITInternalNative();;TR_ResolvedMethod;0;1
isJITInternalNative;isJITInternalNative();TestCompiler;ResolvedMethodBase;0;1
isJNINative;isJNINative();;TR_ResolvedMethod;0;1
isJNINative;isJNINative();TestCompiler;ResolvedMethodBase;0;1
isMethodHandleConstant;isMethodHandleConstant(int32_t);;TR_ResolvedMethod;0;1
isMethodTypeConstant;isMethodTypeConstant(int32_t);;TR_ResolvedMethod;0;1
isNative;isNative();;TR_ResolvedMethod;0;1
isNative;isNative();TestCompiler;ResolvedMethodBase;0;1
isNewInstanceImplThunk;isNewInstanceImplThunk();;TR_ResolvedMethod;0;1
isNewInstanceImplThunk;isNewInstanceImplThunk();TestCompiler;ResolvedMethodBase;0;1
isNonEmptyObjectConstructor;isNonEmptyObjectConstructor();;TR_ResolvedMethod;0;1
isNonEmptyObjectConstructor;isNonEmptyObjectConstructor();TestCompiler;ResolvedMethodBase;0;1
isObjectConstructor;isObjectConstructor();;TR_ResolvedMethod;0;1
isPrivate;isPrivate();;TR_ResolvedMethod;0;1
isPrivate;isPrivate();TestCompiler;ResolvedMethodBase;0;1
isProtected;isProtected();;TR_ResolvedMethod;0;1
isProtected;isProtected();TestCompiler;ResolvedMethodBase;0;1
isPublic;isPublic();;TR_ResolvedMethod;0;1
isPublic;isPublic();TestCompiler;ResolvedMethodBase;0;1
isPython;isPython();;TR_ResolvedMethod;0;0
isRuby;isRuby();;TR_ResolvedMethod;0;0
isSameMethod;isSameMethod(class TR_ResolvedMethod *);;TR_ResolvedMethod;0;1
isSameMethod;isSameMethod(class TR_ResolvedMethod *);TestCompiler;ResolvedMethodBase;0;1
isStatic;isStatic();;TR_ResolvedMethod;0;1
isStatic;isStatic();TestCompiler;ResolvedMethodBase;0;1
isStrictFP;isStrictFP();;TR_ResolvedMethod;0;1
isStrictFP;isStrictFP();TestCompiler;ResolvedMethodBase;0;1
isStringConstant;isStringConstant(int32_t);;TR_ResolvedMethod;0;1
isSubjectToPhaseChange;isSubjectToPhaseChange(TR::Compilation *);;TR_ResolvedMethod;0;1
isSubjectToPhaseChange;isSubjectToPhaseChange(TR::Compilation *);TestCompiler;ResolvedMethodBase;0;1
isSynchronized;isSynchronized();;TR_ResolvedMethod;0;1
isSynchronized;isSynchronized();TestCompiler;ResolvedMethodBase;0;1
isUnresolvedCallSiteTableEntry;isUnresolvedCallSiteTableEntry(int32_t);;TR_ResolvedMethod;0;1
isUnresolvedMethodHandle;isUnresolvedMethodHandle(int32_t);;TR_ResolvedMethod;0;1
isUnresolvedMethodType;isUnresolvedMethodType(int32_t);;TR_ResolvedMethod;0;1
isUnresolvedMethodTypeTableEntry;isUnresolvedMethodTypeTableEntry(int32_t);;TR_ResolvedMethod;0;1
isUnresolvedString;isUnresolvedString(int32_t,_Bool);;TR_ResolvedMethod;0;1
isWarmCallGraphTooBig;isWarmCallGraphTooBig(uint32_t,TR::Compilation *);;TR_ResolvedMethod;0;1
localName;localName(uint32_t,uint32_t,int32_t &,class TR_Memory *);;TR_ResolvedMethod;0;1
localName;localName(uint32_t,uint32_t,int32_t &,class TR_Memory *);TestCompiler;ResolvedMethod;0;1
localName;localName(uint32_t,uint32_t,class TR_Memory *);;TR_ResolvedMethod;0;1
longConstant;longConstant(int32_t);;TR_ResolvedMethod;0;1
makeParameterList;makeParameterList(TR::ResolvedMethodSymbol *);;TR_ResolvedMethod;0;1
makeParameterList;makeParameterList(TR::ResolvedMethodSymbol *);TestCompiler;ResolvedMethod;0;1
maxBytecodeIndex;maxBytecodeIndex();;TR_ResolvedMethod;0;1
maxBytecodeIndex;maxBytecodeIndex();TestCompiler;ResolvedMethod;0;1
methodHandleConstant;methodHandleConstant(int32_t);;TR_ResolvedMethod;0;1
methodTypeConstant;methodTypeConstant(int32_t);;TR_ResolvedMethod;0;1
methodTypeTableEntryAddress;methodTypeTableEntryAddress(int32_t);;TR_ResolvedMethod;0;1
nameChars;nameChars();;TR_ResolvedMethod;0;1
nameChars;nameChars();TestCompiler;ResolvedMethod;0;1
nameLength;nameLength();;TR_ResolvedMethod;0;1
nameLength;nameLength();TestCompiler;ResolvedMethodBase;0;1
newInstancePrototypeSignature;newInstancePrototypeSignature(class TR_Memory *,enum TR_AllocationKind);;TR_ResolvedMethod;0;1
numberOfExceptionHandlers;numberOfExceptionHandlers();;TR_ResolvedMethod;0;1
numberOfExceptionHandlers;numberOfExceptionHandlers();TestCompiler;ResolvedMethodBase;0;1
numberOfExplicitParameters;numberOfExplicitParameters();;TR_ResolvedMethod;0;1
numberOfParameterSlots;numberOfParameterSlots();;TR_ResolvedMethod;0;1
numberOfParameterSlots;numberOfParameterSlots();TestCompiler;ResolvedMethod;0;1
numberOfParameters;numberOfParameters();;TR_ResolvedMethod;0;1
numberOfPendingPushes;numberOfPendingPushes();;TR_ResolvedMethod;0;1
numberOfTemps;numberOfTemps();;TR_ResolvedMethod;0;1
numberOfTemps;numberOfTemps();TestCompiler;ResolvedMethod;0;1
operator=;operator=(class TR_ResolvedMethod &&);;TR_ResolvedMethod;1;0
operator=;operator=(const class TR_ResolvedMethod &);;TR_ResolvedMethod;1;0
operator=;operator=(class TestCompiler::ResolvedMethodBase &&);TestCompiler;ResolvedMethodBase;1;0
operator=;operator=(const class TestCompiler::ResolvedMethodBase &);TestCompiler;ResolvedMethodBase;1;0
operator=;operator=(class TestCompiler::ResolvedMethod &&);TestCompiler;ResolvedMethod;1;0
operator=;operator=(const class TestCompiler::ResolvedMethod &);TestCompiler;ResolvedMethod;1;0
operator=;operator=(class TR::ResolvedMethod &&);TR;ResolvedMethod;1;0
operator=;operator=(const class TR::ResolvedMethod &);TR;ResolvedMethod;1;0
owningMethod;owningMethod();;TR_ResolvedMethod;0;1
owningMethodDoesntMatter;owningMethodDoesntMatter();;TR_ResolvedMethod;0;1
parmType;parmType(uint32_t);;TR_ResolvedMethod;0;1
parmType;parmType(uint32_t);TestCompiler;ResolvedMethod;0;1
ramConstantPool;ramConstantPool();;TR_ResolvedMethod;0;1
resolvedMethodAddress;resolvedMethodAddress();;TR_ResolvedMethod;0;1
resolvedMethodAddress;resolvedMethodAddress();TestCompiler;ResolvedMethod;0;1
returnIlType;returnIlType();TestCompiler;ResolvedMethod;0;0
returnOpCode;returnOpCode();;TR_ResolvedMethod;0;1
returnType;returnType();;TR_ResolvedMethod;0;1
returnType;returnType();TestCompiler;ResolvedMethod;0;1
returnTypeIsUnsigned;returnTypeIsUnsigned();;TR_ResolvedMethod;0;1
returnTypeWidth;returnTypeWidth();;TR_ResolvedMethod;0;1
setEntryPoint;setEntryPoint(void *);TestCompiler;ResolvedMethod;0;0
setInvocationCount;setInvocationCount(intptrj_t,intptrj_t);;TR_ResolvedMethod;0;1
setMethodHandleLocation;setMethodHandleLocation(uintptrj_t *);;TR_ResolvedMethod;0;1
setOwningMethod;setOwningMethod(class TR_ResolvedMethod *);;TR_ResolvedMethod;0;1
setVirtualMethodIsOverridden;setVirtualMethodIsOverridden();;TR_ResolvedMethod;0;1
setWarmCallGraphTooBig;setWarmCallGraphTooBig(uint32_t,TR::Compilation *);;TR_ResolvedMethod;0;1
signature;signature(class TR_Memory *,enum TR_AllocationKind);;TR_ResolvedMethod;0;1
signature;signature(class TR_Memory *,enum TR_AllocationKind);TestCompiler;ResolvedMethod;0;1
signatureChars;signatureChars();;TR_ResolvedMethod;0;1
signatureChars;signatureChars();TestCompiler;ResolvedMethod;0;1
signatureLength;signatureLength();;TR_ResolvedMethod;0;1
signatureLength;signatureLength();TestCompiler;ResolvedMethodBase;0;1
signatureLength;signatureLength();TestCompiler;ResolvedMethod;0;1
startAddressForInterpreterOfJittedMethod;startAddressForInterpreterOfJittedMethod();;TR_ResolvedMethod;0;1
startAddressForInterpreterOfJittedMethod;startAddressForInterpreterOfJittedMethod();TestCompiler;ResolvedMethod;0;1
startAddressForJITInternalNativeMethod;startAddressForJITInternalNativeMethod();;TR_ResolvedMethod;0;1
startAddressForJNIMethod;startAddressForJNIMethod(TR::Compilation *);;TR_ResolvedMethod;0;1
startAddressForJittedMethod;startAddressForJittedMethod();;TR_ResolvedMethod;0;1
startAddressForJittedMethod;startAddressForJittedMethod();TestCompiler;ResolvedMethod;0;1
staticAttributes;staticAttributes(TR::Compilation *,int32_t,void **,TR::DataType *,_Bool *,_Bool *,_Bool *,_Bool,_Bool *,_Bool);;TR_ResolvedMethod;0;1
staticName;staticName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind);;TR_ResolvedMethod;0;1
staticName;staticName(int32_t,class TR_Memory *,enum TR_AllocationKind);;TR_ResolvedMethod;0;1
staticNameChars;staticNameChars(int32_t,int32_t &);;TR_ResolvedMethod;0;1
staticSignatureChars;staticSignatureChars(int32_t,int32_t &);;TR_ResolvedMethod;0;1
staticsAreSame;staticsAreSame(int32_t,class TR_ResolvedMethod *,int32_t,_Bool &);;TR_ResolvedMethod;0;1
stringConstant;stringConstant(int32_t);;TR_ResolvedMethod;0;1
vTableSlot;vTableSlot(uint32_t);;TR_ResolvedMethod;0;1
virtualCallSelector;virtualCallSelector(uint32_t);;TR_ResolvedMethod;0;1
virtualMethodIsOverridden;virtualMethodIsOverridden();;TR_ResolvedMethod;0;1
~ResolvedMethod;~ResolvedMethod();TestCompiler;ResolvedMethod;1;0
~ResolvedMethod;~ResolvedMethod();TR;ResolvedMethod;1;0
~ResolvedMethodBase;~ResolvedMethodBase();TestCompiler;ResolvedMethodBase;1;0
~TR_ResolvedMethod;~TR_ResolvedMethod();;TR_ResolvedMethod;1;0
Method;Method(class TestCompiler::Method &&);TestCompiler;Method;1;0
Method;Method(const class TestCompiler::Method &);TestCompiler;Method;1;0
Method;Method();TestCompiler;Method;0;0
TR_Method;TR_Method(class TR_Method &&);;TR_Method;1;0
TR_Method;TR_Method(const class TR_Method &);;TR_Method;1;0
TR_Method;TR_Method(enum TR_Method::Type);;TR_Method;0;0
classNameChars;classNameChars();;TR_Method;0;1
classNameChars;classNameChars();TestCompiler;Method;0;1
classNameLength;classNameLength();;TR_Method;0;1
classNameLength;classNameLength();TestCompiler;Method;0;1
directCallOpCode;directCallOpCode();;TR_Method;0;1
getMandatoryRecognizedMethod;getMandatoryRecognizedMethod();;TR_Method;0;0
getParameterIterator;getParameterIterator(TR::Compilation &,class TR_ResolvedMethod *);;TR_Method;0;1
getRecognizedMethod;getRecognizedMethod();;TR_Method;0;0
indirectCallOpCode;indirectCallOpCode();;TR_Method;0;1
isArchetypeSpecimen;isArchetypeSpecimen();;TR_Method;0;1
isBigDecimalConvertersMethod;isBigDecimalConvertersMethod(TR::Compilation *);;TR_Method;0;1
isBigDecimalMethod;isBigDecimalMethod(TR::Compilation *);;TR_Method;0;1
isConstructor;isConstructor();;TR_Method;0;1
isConstructor;isConstructor();TestCompiler;Method;0;1
isFinalInObject;isFinalInObject();;TR_Method;0;1
isFinalInObject;isFinalInObject();TestCompiler;Method;0;1
isJ9;isJ9();;TR_Method;0;0
isPython;isPython();;TR_Method;0;0
isRuby;isRuby();;TR_Method;0;0
isUnsafeCAS;isUnsafeCAS(TR::Compilation *);;TR_Method;0;1
isUnsafeWithObjectArg;isUnsafeWithObjectArg(TR::Compilation *);;TR_Method;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_Method;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;Method;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_Method;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;Method;0;0
methodType;methodType();;TR_Method;0;0
nameChars;nameChars();;TR_Method;0;1
nameChars;nameChars();TestCompiler;Method;0;1
nameLength;nameLength();;TR_Method;0;1
nameLength;nameLength();TestCompiler;Method;0;1
numberOfExplicitParameters;numberOfExplicitParameters();;TR_Method;0;1
operator delete;operator delete(void *,TR::Region &);;TR_Method;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;Method;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Method;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Method;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_Method;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Method;0;0
operator delete;operator delete(void *,size_t);;TR_Method;0;0
operator delete;operator delete(void *,size_t);TestCompiler;Method;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_Method;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Method;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Method;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_Method;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;Method;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Method;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
operator new;operator new(size_t,TR::Region &);;TR_Method;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;Method;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_Method;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;Method;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_Method;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;Method;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Method;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Method;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Method;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_Method;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;Method;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Method;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Method;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Method;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Method;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_Method;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;Method;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_Method;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;Method;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_Method;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;Method;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Method;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
operator=;operator=(const class TR_Method &);;TR_Method;1;0
operator=;operator=(class TR_Method &&);;TR_Method;1;0
operator=;operator=(class TestCompiler::Method &&);TestCompiler;Method;1;0
operator=;operator=(const class TestCompiler::Method &);TestCompiler;Method;1;0
parmType;parmType(uint32_t);;TR_Method;0;1
returnOpCode;returnOpCode();;TR_Method;0;1
returnType;returnType();;TR_Method;0;1
returnTypeIsUnsigned;returnTypeIsUnsigned();;TR_Method;0;1
returnTypeWidth;returnTypeWidth();;TR_Method;0;1
setArchetypeSpecimen;setArchetypeSpecimen(_Bool);;TR_Method;0;1
setMandatoryRecognizedMethod;setMandatoryRecognizedMethod(TR::RecognizedMethod);;TR_Method;0;0
setRecognizedMethod;setRecognizedMethod(TR::RecognizedMethod);;TR_Method;0;0
signature;signature(class TR_Memory *,enum TR_AllocationKind);;TR_Method;0;1
signatureChars;signatureChars();;TR_Method;0;1
signatureChars;signatureChars();TestCompiler;Method;0;1
signatureLength;signatureLength();;TR_Method;0;1
signatureLength;signatureLength();TestCompiler;Method;0;1
~Method;~Method();TestCompiler;Method;1;0
~TR_Method;~TR_Method();;TR_Method;1;0
SnippetGCMap;SnippetGCMap(class OMR::SnippetGCMap &&);OMR;SnippetGCMap;1;0
SnippetGCMap;SnippetGCMap(const class OMR::SnippetGCMap &);OMR;SnippetGCMap;1;0
SnippetGCMap;SnippetGCMap();OMR;SnippetGCMap;0;0
SnippetGCMap;SnippetGCMap();TR;SnippetGCMap;0;0
SnippetGCMap;SnippetGCMap(class TR::SnippetGCMap &&);TR;SnippetGCMap;1;0
SnippetGCMap;SnippetGCMap(const class TR::SnippetGCMap &);TR;SnippetGCMap;1;0
getGCRegisterMask;getGCRegisterMask();OMR;SnippetGCMap;0;0
getStackMap;getStackMap();OMR;SnippetGCMap;0;0
isGCSafePoint;isGCSafePoint();OMR;SnippetGCMap;0;0
operator=;operator=(class OMR::SnippetGCMap &&);OMR;SnippetGCMap;1;0
operator=;operator=(const class OMR::SnippetGCMap &);OMR;SnippetGCMap;1;0
operator=;operator=(const class TR::SnippetGCMap &);TR;SnippetGCMap;1;0
operator=;operator=(class TR::SnippetGCMap &&);TR;SnippetGCMap;1;0
registerStackMap;registerStackMap(TR::Instruction *,TR::CodeGenerator *);OMR;SnippetGCMap;0;0
registerStackMap;registerStackMap(uint8_t *,TR::CodeGenerator *);OMR;SnippetGCMap;0;0
resetGCSafePoint;resetGCSafePoint();OMR;SnippetGCMap;0;0
setGCRegisterMask;setGCRegisterMask(uint32_t);OMR;SnippetGCMap;0;0
setGCSafePoint;setGCSafePoint();OMR;SnippetGCMap;0;0
setStackMap;setStackMap(class TR_GCStackMap *);OMR;SnippetGCMap;0;0
~SnippetGCMap;~SnippetGCMap();OMR;SnippetGCMap;1;0
~SnippetGCMap;~SnippetGCMap();TR;SnippetGCMap;1;0
Region;Region(const class TR::Region &);TR;Region;0;0
Region;Region(TR::SegmentProvider &,TR::RawAllocator);TR;Region;0;0
StackMemoryRegion;StackMemoryRegion(const class TR::StackMemoryRegion &);TR;StackMemoryRegion;1;0
StackMemoryRegion;StackMemoryRegion(class TR_Memory &);TR;StackMemoryRegion;0;0
allocate;allocate(const size_t,void *);TR;Region;0;0
bytesAllocated;bytesAllocated();TR;Region;0;0
deallocate;deallocate(void *,size_t);TR;Region;0;0
initialSize;initialSize();TR;Region;0;0
operator=;operator=(const class TR::Region &);TR;Region;1;0
operator=;operator=(const class TR::StackMemoryRegion &);TR;StackMemoryRegion;1;0
round;round(size_t);TR;Region;0;0
~Region;~Region();TR;Region;0;1
~StackMemoryRegion;~StackMemoryRegion();TR;StackMemoryRegion;0;1
SymbolReference;SymbolReference(class OMR::SymbolReference &&);OMR;SymbolReference;1;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::SymbolReference &,intptrj_t,TR::class KnownObjectTable::Index);OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::SymbolReference &,intptrj_t,TR::class KnownObjectTable::Index);TR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t);OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t);TR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,class mcount_t,int32_t,int32_t);OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,class mcount_t,int32_t,int32_t);TR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,int32_t,TR::Symbol *,intptrj_t);OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,int32_t,TR::Symbol *,intptrj_t);TR;SymbolReference;0;0
SymbolReference;SymbolReference();OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t,const char *);OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t,const char *);TR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *);OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *);TR;SymbolReference;0;0
SymbolReference;SymbolReference(const class OMR::SymbolReference &);OMR;SymbolReference;1;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::class SymbolReferenceTable::CommonNonhelperSymbol,TR::Symbol *,intptrj_t);OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::class SymbolReferenceTable::CommonNonhelperSymbol,TR::Symbol *,intptrj_t);TR;SymbolReference;0;0
addToOffset;addToOffset(intptrj_t);OMR;SymbolReference;0;0
canCauseGC;canCauseGC();OMR;SymbolReference;0;0
canGCandExcept;canGCandExcept();OMR;SymbolReference;0;0
canGCandReturn;canGCandReturn();OMR;SymbolReference;0;0
canKill;canKill(TR::SymbolReference *);OMR;SymbolReference;0;0
copyAliasSets;copyAliasSets(TR::SymbolReference *,TR::SymbolReferenceTable *);OMR;SymbolReference;0;0
copyFlags;copyFlags(TR::SymbolReference *);OMR;SymbolReference;0;0
copyRefNumIfPossible;copyRefNumIfPossible(TR::SymbolReference *,TR::SymbolReferenceTable *);OMR;SymbolReference;0;0
create;create(TR::SymbolReferenceTable *,TR::Symbol *,TR::class KnownObjectTable::Index);OMR;SymbolReference;0;0
getCPIndex;getCPIndex();OMR;SymbolReference;0;0
getExtraInfo;getExtraInfo();OMR;SymbolReference;0;0
getIndependentSymRefs;getIndependentSymRefs();OMR;SymbolReference;0;0
getKnownObjectIndex;getKnownObjectIndex();OMR;SymbolReference;0;0
getKnownObjectReferenceLocation;getKnownObjectReferenceLocation(TR::Compilation *);OMR;SymbolReference;0;0
getMethodAddress;getMethodAddress();OMR;SymbolReference;0;0
getName;getName(class TR_Debug *);OMR;SymbolReference;0;1
getOffset;getOffset();OMR;SymbolReference;0;0
getOwningMethod;getOwningMethod(TR::Compilation *);OMR;SymbolReference;0;0
getOwningMethodIndex;getOwningMethodIndex();OMR;SymbolReference;0;0
getOwningMethodSymbol;getOwningMethodSymbol(TR::Compilation *);OMR;SymbolReference;0;0
getReferenceNumber;getReferenceNumber();OMR;SymbolReference;0;0
getSize;getSize();OMR;SymbolReference;0;0
getSymbol;getSymbol();OMR;SymbolReference;0;0
getTypeSignature;getTypeSignature(int32_t &,enum TR_AllocationKind,_Bool *);OMR;SymbolReference;0;0
getUnresolvedIndex;getUnresolvedIndex();OMR;SymbolReference;0;0
getUseDefAliases;getUseDefAliases(_Bool,_Bool);OMR;SymbolReference;0;0
getUseDefAliasesBV;getUseDefAliasesBV(_Bool,_Bool);OMR;SymbolReference;0;0
getUseDefAliasesIncludingGCSafePoint;getUseDefAliasesIncludingGCSafePoint(_Bool);OMR;SymbolReference;0;0
getUseonlyAliases;getUseonlyAliases();OMR;SymbolReference;0;0
getUseonlyAliasesBV;getUseonlyAliasesBV(TR::SymbolReferenceTable *);OMR;SymbolReference;0;0
hasBeenAccessedAtRuntime;hasBeenAccessedAtRuntime();OMR;SymbolReference;0;0
hasKnownObjectIndex;hasKnownObjectIndex();OMR;SymbolReference;0;0
hasTemporaryNegativeOffset;hasTemporaryNegativeOffset();OMR;SymbolReference;0;0
holdsMonitoredObjectForSyncMethod;holdsMonitoredObjectForSyncMethod();OMR;SymbolReference;0;0
init;init(TR::SymbolReferenceTable *,uint32_t,TR::Symbol *,intptrj_t,class mcount_t,int32_t,int32_t,_Bool);OMR;SymbolReference;0;0
isAdjunct;isAdjunct();OMR;SymbolReference;0;0
isDual;isDual();OMR;SymbolReference;0;0
isFromLiteralPool;isFromLiteralPool();OMR;SymbolReference;0;0
isInitMethod;isInitMethod();OMR;SymbolReference;0;0
isLitPoolReference;isLitPoolReference();OMR;SymbolReference;0;0
isLiteralPoolAddress;isLiteralPoolAddress();OMR;SymbolReference;0;0
isOverriddenBitAddress;isOverriddenBitAddress();OMR;SymbolReference;0;0
isSideEffectInfo;isSideEffectInfo();OMR;SymbolReference;0;0
isTempVariableSizeSymRef;isTempVariableSizeSymRef();OMR;SymbolReference;0;0
isTemporary;isTemporary(TR::Compilation *);OMR;SymbolReference;0;0
isThisPointer;isThisPointer();OMR;SymbolReference;0;0
isUnresolved;isUnresolved();OMR;SymbolReference;0;0
isUnresolvedFieldInCP;isUnresolvedFieldInCP(TR::Compilation *);OMR;SymbolReference;0;0
isUnresolvedMethodInCP;isUnresolvedMethodInCP(TR::Compilation *);OMR;SymbolReference;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;SymbolReference;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;SymbolReference;0;0
makeIndependent;makeIndependent(TR::SymbolReferenceTable *,TR::SymbolReference *);OMR;SymbolReference;0;0
maybeVolatile;maybeVolatile();OMR;SymbolReference;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;SymbolReference;0;0
operator delete;operator delete(void *,size_t);OMR;SymbolReference;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReference;0;0
operator delete;operator delete(void *,TR::Region &);OMR;SymbolReference;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReference;0;0
operator new;operator new(size_t,TR::Region &);OMR;SymbolReference;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReference;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;SymbolReference;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReference;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;SymbolReference;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;SymbolReference;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;SymbolReference;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReference;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;SymbolReference;0;0
operator=;operator=(class OMR::SymbolReference &&);OMR;SymbolReference;1;0
operator=;operator=(const class OMR::SymbolReference &);OMR;SymbolReference;1;0
operator=;operator=(const class TR::SymbolReference &);TR;SymbolReference;1;0
operator=;operator=(class TR::SymbolReference &&);TR;SymbolReference;1;0
reallySharesSymbol;reallySharesSymbol(TR::Compilation *);OMR;SymbolReference;0;0
reallySharesSymbol;reallySharesSymbol();OMR;SymbolReference;0;0
resetHasTemporaryNegativeOffset;resetHasTemporaryNegativeOffset();OMR;SymbolReference;0;0
self;self();OMR;SymbolReference;0;0
setAliasedTo;setAliasedTo(class TR_BitVector &,TR::SymbolReferenceTable *,_Bool);OMR;SymbolReference;0;1
setAliasedTo;setAliasedTo(TR::SymbolReference *,_Bool);OMR;SymbolReference;0;1
setCPIndex;setCPIndex(int32_t);OMR;SymbolReference;0;0
setCanGCandExcept;setCanGCandExcept();OMR;SymbolReference;0;0
setCanGCandReturn;setCanGCandReturn();OMR;SymbolReference;0;0
setEmptyUseDefAliases;setEmptyUseDefAliases(TR::SymbolReferenceTable *);OMR;SymbolReference;0;0
setExtraInfo;setExtraInfo(struct TR_ExtraInfoForNew *);OMR;SymbolReference;0;0
setFromLiteralPool;setFromLiteralPool();OMR;SymbolReference;0;0
setHasBeenAccessedAtRuntime;setHasBeenAccessedAtRuntime(enum TR_YesNoMaybe);OMR;SymbolReference;0;0
setHasTemporaryNegativeOffset;setHasTemporaryNegativeOffset();OMR;SymbolReference;0;0
setHoldsMonitoredObjectForSyncMethod;setHoldsMonitoredObjectForSyncMethod();OMR;SymbolReference;0;0
setIndependentSymRefs;setIndependentSymRefs(class TR_BitVector *);OMR;SymbolReference;0;0
setInitMethod;setInitMethod();OMR;SymbolReference;0;0
setIsAdjunct;setIsAdjunct();OMR;SymbolReference;0;0
setIsDual;setIsDual();OMR;SymbolReference;0;0
setIsTempVariableSizeSymRef;setIsTempVariableSizeSymRef();OMR;SymbolReference;0;0
setLiteralPoolAddress;setLiteralPoolAddress();OMR;SymbolReference;0;0
setLiteralPoolAliases;setLiteralPoolAliases(class TR_BitVector *,TR::SymbolReferenceTable *);OMR;SymbolReference;0;0
setOffset;setOffset(intptrj_t);OMR;SymbolReference;0;0
setOverriddenBitAddress;setOverriddenBitAddress();OMR;SymbolReference;0;0
setOwningMethodIndex;setOwningMethodIndex(class mcount_t);OMR;SymbolReference;0;0
setReallySharesSymbol;setReallySharesSymbol();OMR;SymbolReference;0;0
setReferenceNumber;setReferenceNumber(int32_t);OMR;SymbolReference;0;0
setSharedShadowAliases;setSharedShadowAliases(class TR_BitVector *,TR::SymbolReferenceTable *);OMR;SymbolReference;0;0
setSharedStaticAliases;setSharedStaticAliases(class TR_BitVector *,TR::SymbolReferenceTable *);OMR;SymbolReference;0;0
setSideEffectInfo;setSideEffectInfo();OMR;SymbolReference;0;0
setSize;setSize(uint32_t);OMR;SymbolReference;0;0
setStackAllocatedArrayAccess;setStackAllocatedArrayAccess();OMR;SymbolReference;0;0
setSymbol;setSymbol(TR::Symbol *);OMR;SymbolReference;0;0
setUnresolved;setUnresolved();OMR;SymbolReference;0;0
setUseDefAliases;setUseDefAliases(class TR_BitVector *);OMR;SymbolReference;0;0
sharesSymbol;sharesSymbol(_Bool);OMR;SymbolReference;0;0
stackAllocatedArrayAccess;stackAllocatedArrayAccess();OMR;SymbolReference;0;0
storeCanBeRemoved;storeCanBeRemoved();OMR;SymbolReference;0;0
willUse;willUse(TR::SymbolReference *,TR::SymbolReferenceTable *);OMR;SymbolReference;0;0
~SymbolReference;~SymbolReference();OMR;SymbolReference;1;0
~SymbolReference;~SymbolReference();TR;SymbolReference;1;0
SymbolReferenceTable;SymbolReferenceTable(const class OMR::SymbolReferenceTable &);OMR;SymbolReferenceTable;1;0
SymbolReferenceTable;SymbolReferenceTable(class OMR::SymbolReferenceTable &&);OMR;SymbolReferenceTable;1;0
SymbolReferenceTable;SymbolReferenceTable(size_t,TR::Compilation *);OMR;SymbolReferenceTable;0;0
SymbolReferenceTable;SymbolReferenceTable(size_t,TR::Compilation *);TR;SymbolReferenceTable;0;0
assignSymRefNumber;assignSymRefNumber(TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
clearAvailableAutos;clearAvailableAutos();OMR;SymbolReferenceTable;0;0
comp;comp();OMR;SymbolReferenceTable;0;0
createCoDependentTemporary;createCoDependentTemporary(TR::ResolvedMethodSymbol *,TR::DataType,_Bool,size_t,TR::Symbol *,int32_t);OMR;SymbolReferenceTable;0;0
createGenericIntShadowSymbolReference;createGenericIntShadowSymbolReference(intptrj_t,_Bool);OMR;SymbolReferenceTable;0;0
createImmutableArrayShadowSymbolRef;createImmutableArrayShadowSymbolRef(TR::DataType,TR::Symbol *);OMR;SymbolReferenceTable;0;0
createIsOverriddenSymbolRef;createIsOverriddenSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
createKnownStaticDataSymbolRef;createKnownStaticDataSymbolRef(void *,TR::DataType,TR::class KnownObjectTable::Index);OMR;SymbolReferenceTable;0;0
createKnownStaticDataSymbolRef;createKnownStaticDataSymbolRef(void *,TR::DataType);OMR;SymbolReferenceTable;0;0
createKnownStaticRefereneceSymbolRef;createKnownStaticRefereneceSymbolRef(void *,TR::class KnownObjectTable::Index);OMR;SymbolReferenceTable;0;0
createLocalAddrArray;createLocalAddrArray(int32_t,TR::ResolvedMethodSymbol *,TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
createLocalObject;createLocalObject(int32_t,TR::ResolvedMethodSymbol *,TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
createLocalPrimArray;createLocalPrimArray(int32_t,TR::ResolvedMethodSymbol *,int32_t);OMR;SymbolReferenceTable;0;0
createParameterSymbol;createParameterSymbol(TR::ResolvedMethodSymbol *,int32_t,TR::DataType);OMR;SymbolReferenceTable;0;0
createRefinedArrayShadowSymbolRef;createRefinedArrayShadowSymbolRef(TR::DataType,TR::Symbol *);OMR;SymbolReferenceTable;0;0
createRefinedArrayShadowSymbolRef;createRefinedArrayShadowSymbolRef(TR::DataType);OMR;SymbolReferenceTable;0;0
createRuntimeHelper;createRuntimeHelper(enum TR_RuntimeHelper,_Bool,_Bool,_Bool);OMR;SymbolReferenceTable;0;0
createSymbolReference;createSymbolReference(TR::Symbol *,intptrj_t);OMR;SymbolReferenceTable;0;0
createTemporary;createTemporary(TR::ResolvedMethodSymbol *,TR::DataType,_Bool,size_t);OMR;SymbolReferenceTable;0;0
element;element(enum TR_RuntimeHelper);OMR;SymbolReferenceTable;0;0
element;element(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);OMR;SymbolReferenceTable;0;0
fe;fe();OMR;SymbolReferenceTable;0;0
findAddressOfClassOfMethodSymbolRef;findAddressOfClassOfMethodSymbolRef();OMR;SymbolReferenceTable;0;0
findArrayClassRomPtrSymbolRef;findArrayClassRomPtrSymbolRef();OMR;SymbolReferenceTable;0;0
findArrayComponentTypeSymbolRef;findArrayComponentTypeSymbolRef();OMR;SymbolReferenceTable;0;0
findAvailableAuto;findAvailableAuto(List<TR::SymbolReference> &,TR::DataType,_Bool,_Bool);OMR;SymbolReferenceTable;0;0
findAvailableAuto;findAvailableAuto(TR::DataType,_Bool,_Bool);OMR;SymbolReferenceTable;0;0
findClassAndDepthFlagsSymbolRef;findClassAndDepthFlagsSymbolRef();OMR;SymbolReferenceTable;0;0
findClassFlagsSymbolRef;findClassFlagsSymbolRef();OMR;SymbolReferenceTable;0;0
findClassFromJavaLangClassSymbolRef;findClassFromJavaLangClassSymbolRef();OMR;SymbolReferenceTable;0;0
findClassIsArraySymbolRef;findClassIsArraySymbolRef();OMR;SymbolReferenceTable;0;0
findClassRomPtrSymbolRef;findClassRomPtrSymbolRef();OMR;SymbolReferenceTable;0;0
findDLPStaticSymbolReference;findDLPStaticSymbolReference(TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
findDescriptionWordFromPtrSymbolRef;findDescriptionWordFromPtrSymbolRef();OMR;SymbolReferenceTable;0;0
findGenericIntShadowSymbol;findGenericIntShadowSymbol();OMR;SymbolReferenceTable;0;0
findHeaderFlagsSymbolRef;findHeaderFlagsSymbolRef();OMR;SymbolReferenceTable;0;0
findInstanceDescriptionSymbolRef;findInstanceDescriptionSymbolRef();OMR;SymbolReferenceTable;0;0
findInstanceShapeSymbolRef;findInstanceShapeSymbolRef();OMR;SymbolReferenceTable;0;0
findJavaLangClassFromClassSymbolRef;findJavaLangClassFromClassSymbolRef();OMR;SymbolReferenceTable;0;0
findObjectNewInstanceImplSymbol;findObjectNewInstanceImplSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateANewArrayNoZeroInitSymbolRef;findOrCreateANewArrayNoZeroInitSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateAThrowSymbolRef;findOrCreateAThrowSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateArrayBoundsCheckSymbolRef;findOrCreateArrayBoundsCheckSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateArrayCmpSymbol;findOrCreateArrayCmpSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateArrayCopySymbol;findOrCreateArrayCopySymbol();OMR;SymbolReferenceTable;0;0
findOrCreateArraySetSymbol;findOrCreateArraySetSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateArrayShadowSymbolRef;findOrCreateArrayShadowSymbolRef(TR::DataType,TR::Node *);OMR;SymbolReferenceTable;0;0
findOrCreateArrayShadowSymbolRef;findOrCreateArrayShadowSymbolRef(TR::DataType,TR::Node *,int32_t,class TR_FrontEnd *);OMR;SymbolReferenceTable;0;0
findOrCreateArrayStoreExceptionSymbolRef;findOrCreateArrayStoreExceptionSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateArrayTranslateAndTestSymbol;findOrCreateArrayTranslateAndTestSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateArrayTranslateSymbol;findOrCreateArrayTranslateSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateArrayletShadowSymbolRef;findOrCreateArrayletShadowSymbolRef(TR::DataType);OMR;SymbolReferenceTable;0;0
findOrCreateAsyncCheckSymbolRef;findOrCreateAsyncCheckSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateAutoSymbol;findOrCreateAutoSymbol(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,_Bool,_Bool,_Bool,_Bool,size_t);OMR;SymbolReferenceTable;0;0
findOrCreateCPSymbol;findOrCreateCPSymbol(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,_Bool,void *);OMR;SymbolReferenceTable;0;0
findOrCreateCheckCastSymbolRef;findOrCreateCheckCastSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateClassSymbol;findOrCreateClassSymbol(TR::ResolvedMethodSymbol *,int32_t,void *,_Bool);OMR;SymbolReferenceTable;0;0
findOrCreateCodeGenInlinedHelper;findOrCreateCodeGenInlinedHelper(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);OMR;SymbolReferenceTable;0;0
findOrCreateComputedStaticMethodSymbol;findOrCreateComputedStaticMethodSymbol(class mcount_t,int32_t,class TR_ResolvedMethod *);OMR;SymbolReferenceTable;0;0
findOrCreateConstantAreaSymbol;findOrCreateConstantAreaSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateConstantAreaSymbolReference;findOrCreateConstantAreaSymbolReference();OMR;SymbolReferenceTable;0;0
findOrCreateContiguousArraySizeSymbolRef;findOrCreateContiguousArraySizeSymbolRef();OMR;SymbolReferenceTable;0;0
findOrCreateCounterAddressSymbolRef;findOrCreateCounterAddressSymbolRef();OMR;SymbolReferenceTable;0;0
findOrCreateCounterSymRef;findOrCreateCounterSymRef(char *,TR::DataType,void *);OMR;SymbolReferenceTable;0;0
findOrCreateCurrentTimeMaxPrecisionSymbol;findOrCreateCurrentTimeMaxPrecisionSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateDLPStaticSymbolReference;findOrCreateDLPStaticSymbolReference(TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
findOrCreateDivCheckSymbolRef;findOrCreateDivCheckSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateExcpSymbolRef;findOrCreateExcpSymbolRef();OMR;SymbolReferenceTable;0;0
findOrCreateGCRPatchPointSymbolRef;findOrCreateGCRPatchPointSymbolRef();OMR;SymbolReferenceTable;0;0
findOrCreateGenericIntArrayShadowSymbolReference;findOrCreateGenericIntArrayShadowSymbolReference(intptrj_t);OMR;SymbolReferenceTable;0;0
findOrCreateGenericIntNonArrayShadowSymbolReference;findOrCreateGenericIntNonArrayShadowSymbolReference(intptrj_t);OMR;SymbolReferenceTable;0;0
findOrCreateGenericIntShadowSymbol;findOrCreateGenericIntShadowSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateGenericIntShadowSymbolReference;findOrCreateGenericIntShadowSymbolReference(intptrj_t,_Bool);OMR;SymbolReferenceTable;0;0
findOrCreateImmutableArrayShadowSymbolRef;findOrCreateImmutableArrayShadowSymbolRef(TR::DataType);OMR;SymbolReferenceTable;0;0
findOrCreateIndexableSizeSymbolRef;findOrCreateIndexableSizeSymbolRef();OMR;SymbolReferenceTable;0;0
findOrCreateInstanceOfSymbolRef;findOrCreateInstanceOfSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateMethodSymbol;findOrCreateMethodSymbol(class mcount_t,int32_t,class TR_ResolvedMethod *,TR::class MethodSymbol::Kinds,_Bool);OMR;SymbolReferenceTable;0;0
findOrCreateMonitorEntrySymbolRef;findOrCreateMonitorEntrySymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateMonitorExitSymbolRef;findOrCreateMonitorExitSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateNewArrayNoZeroInitSymbolRef;findOrCreateNewArrayNoZeroInitSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateNewArraySymbolRef;findOrCreateNewArraySymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateNewObjectNoZeroInitSymbolRef;findOrCreateNewObjectNoZeroInitSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateNewObjectSymbolRef;findOrCreateNewObjectSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateNullCheckSymbolRef;findOrCreateNullCheckSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateOSRReturnAddressSymbolRef;findOrCreateOSRReturnAddressSymbolRef();OMR;SymbolReferenceTable;0;0
findOrCreateOverflowCheckSymbolRef;findOrCreateOverflowCheckSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreatePendingPushTemporary;findOrCreatePendingPushTemporary(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,size_t);OMR;SymbolReferenceTable;0;0
findOrCreatePrefetchSymbol;findOrCreatePrefetchSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateRecompilationCounterSymbolRef;findOrCreateRecompilationCounterSymbolRef(void *);OMR;SymbolReferenceTable;0;0
findOrCreateReportMethodEnterSymbolRef;findOrCreateReportMethodEnterSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateResolveCheckSymbolRef;findOrCreateResolveCheckSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateRuntimeHelper;findOrCreateRuntimeHelper(enum TR_RuntimeHelper,_Bool,_Bool,_Bool);OMR;SymbolReferenceTable;0;0
findOrCreateSinglePrecisionSQRTSymbol;findOrCreateSinglePrecisionSQRTSymbol();OMR;SymbolReferenceTable;0;0
findOrCreateStartPCSymbolRef;findOrCreateStartPCSymbolRef();OMR;SymbolReferenceTable;0;0
findOrCreateStaticMethodSymbol;findOrCreateStaticMethodSymbol(class mcount_t,int32_t,class TR_ResolvedMethod *);OMR;SymbolReferenceTable;0;0
findOrCreateSymRefWithKnownObject;findOrCreateSymRefWithKnownObject(TR::SymbolReference *,uintptrj_t *,_Bool);OMR;SymbolReferenceTable;0;0
findOrCreateSymRefWithKnownObject;findOrCreateSymRefWithKnownObject(TR::SymbolReference *,uintptrj_t *);OMR;SymbolReferenceTable;0;0
findOrCreateSymRefWithKnownObject;findOrCreateSymRefWithKnownObject(TR::SymbolReference *,TR::class KnownObjectTable::Index);OMR;SymbolReferenceTable;0;0
findOrCreateThisRangeExtensionSymRef;findOrCreateThisRangeExtensionSymRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateTransactionAbortSymbolRef;findOrCreateTransactionAbortSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateTransactionEntrySymbolRef;findOrCreateTransactionEntrySymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateTransactionExitSymbolRef;findOrCreateTransactionExitSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateVftSymbolRef;findOrCreateVftSymbolRef();OMR;SymbolReferenceTable;0;0
findOrCreateVolatileReadDoubleSymbolRef;findOrCreateVolatileReadDoubleSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateVolatileReadLongSymbolRef;findOrCreateVolatileReadLongSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateVolatileWriteDoubleSymbolRef;findOrCreateVolatileWriteDoubleSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateVolatileWriteLongSymbolRef;findOrCreateVolatileWriteLongSymbolRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findOrCreateVtableEntrySymbolRef;findOrCreateVtableEntrySymbolRef(TR::ResolvedMethodSymbol *,int32_t);OMR;SymbolReferenceTable;0;0
findOrCreatebitOpMemSymbol;findOrCreatebitOpMemSymbol();OMR;SymbolReferenceTable;0;0
findOrCreatelong2StringSymbol;findOrCreatelong2StringSymbol();OMR;SymbolReferenceTable;0;0
findPrefetchSymbol;findPrefetchSymbol();OMR;SymbolReferenceTable;0;0
findStaticSymbol;findStaticSymbol(class TR_ResolvedMethod *,int32_t,TR::DataType);OMR;SymbolReferenceTable;0;0
findThisRangeExtensionSymRef;findThisRangeExtensionSymRef(TR::ResolvedMethodSymbol *);OMR;SymbolReferenceTable;0;0
findVftSymbolRef;findVftSymbolRef();OMR;SymbolReferenceTable;0;0
getArrayShadowIndex;getArrayShadowIndex(TR::DataType);OMR;SymbolReferenceTable;0;0
getArrayletShadowIndex;getArrayletShadowIndex(TR::DataType);OMR;SymbolReferenceTable;0;0
getIndexOfFirstSymRef;getIndexOfFirstSymRef();OMR;SymbolReferenceTable;0;0
getLastCommonNonhelperSymbol;getLastCommonNonhelperSymbol();OMR;SymbolReferenceTable;0;0
getNonhelperIndex;getNonhelperIndex(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);OMR;SymbolReferenceTable;0;0
getNumHelperSymbols;getNumHelperSymbols();OMR;SymbolReferenceTable;0;0
getNumInternalPointers;getNumInternalPointers();OMR;SymbolReferenceTable;0;0
getNumPredefinedSymbols;getNumPredefinedSymbols();OMR;SymbolReferenceTable;0;0
getNumSymRefs;getNumSymRefs();OMR;SymbolReferenceTable;0;0
getNumUnresolvedSymbols;getNumUnresolvedSymbols();OMR;SymbolReferenceTable;0;0
getSharedAliases;getSharedAliases(TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
getSymRef;getSymRef(int32_t);OMR;SymbolReferenceTable;0;0
getSymRef;getSymRef(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);OMR;SymbolReferenceTable;0;0
isConstantAreaSymbol;isConstantAreaSymbol(TR::Symbol *);OMR;SymbolReferenceTable;0;0
isConstantAreaSymbolReference;isConstantAreaSymbolReference(TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
isImmutableArrayShadow;isImmutableArrayShadow(TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
isNonHelper;isNonHelper(TR::SymbolReference *,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);OMR;SymbolReferenceTable;0;0
isNonHelper;isNonHelper(int32_t,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);OMR;SymbolReferenceTable;0;0
isRefinedArrayShadow;isRefinedArrayShadow(TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
isVtableEntrySymbolRef;isVtableEntrySymbolRef(TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;SymbolReferenceTable;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;SymbolReferenceTable;0;0
makeAutoAvailableForIlGen;makeAutoAvailableForIlGen(TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
makeSharedAliases;makeSharedAliases(TR::SymbolReference *,TR::SymbolReference *);OMR;SymbolReferenceTable;0;0
markBlockAsCold;markBlockAsCold();OMR;SymbolReferenceTable;0;0
methodSymRefFromName;methodSymRefFromName(TR::ResolvedMethodSymbol *,char *,char *,char *,TR::class MethodSymbol::Kinds,int32_t);OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,size_t);OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,TR::Region &);OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,TR::Region &);OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;SymbolReferenceTable;0;0
operator=;operator=(class OMR::SymbolReferenceTable &&);OMR;SymbolReferenceTable;1;0
self;self();OMR;SymbolReferenceTable;0;0
setNumSymRefs;setNumSymRefs(int32_t);OMR;SymbolReferenceTable;0;0
shouldMarkBlockAsCold;shouldMarkBlockAsCold(class TR_ResolvedMethod *,_Bool);OMR;SymbolReferenceTable;0;0
strdup;strdup(const char *);OMR;SymbolReferenceTable;0;0
trHeapMemory;trHeapMemory();OMR;SymbolReferenceTable;0;0
trMemory;trMemory();OMR;SymbolReferenceTable;0;0
trStackMemory;trStackMemory();OMR;SymbolReferenceTable;0;0
~SymbolReferenceTable;~SymbolReferenceTable();OMR;SymbolReferenceTable;1;0
TreeTop;TreeTop(const class OMR::TreeTop &);OMR;TreeTop;1;0
TreeTop;TreeTop(TR::Node *,TR::TreeTop *,TR::TreeTop *);OMR;TreeTop;0;0
TreeTop;TreeTop(TR::Node *,TR::TreeTop *,TR::TreeTop *);TR;TreeTop;0;0
TreeTop;TreeTop(TR::TreeTop *,TR::Node *,TR::Compilation *);OMR;TreeTop;0;0
TreeTop;TreeTop(TR::TreeTop *,TR::Node *,TR::Compilation *);TR;TreeTop;0;0
TreeTop;TreeTop(class OMR::TreeTop &&);OMR;TreeTop;1;0
TreeTop;TreeTop();TR;TreeTop;0;0
adjustBranchOrSwitchTreeTop;adjustBranchOrSwitchTreeTop(TR::Compilation *,TR::TreeTop *,TR::TreeTop *);OMR;TreeTop;0;0
create;create(TR::Compilation *,TR::TreeTop *,TR::Node *);OMR;TreeTop;0;0
create;create(TR::Compilation *,TR::Node *,TR::TreeTop *,TR::TreeTop *);OMR;TreeTop;0;0
create;create(TR::Compilation *);OMR;TreeTop;0;0
createIncTree;createIncTree(TR::Compilation *,TR::Node *,TR::SymbolReference *,int32_t,TR::TreeTop *,_Bool);OMR;TreeTop;0;0
createResetTree;createResetTree(TR::Compilation *,TR::Node *,TR::SymbolReference *,int32_t,TR::TreeTop *,_Bool);OMR;TreeTop;0;0
duplicateTree;duplicateTree();OMR;TreeTop;0;0
getEnclosingBlock;getEnclosingBlock(_Bool);OMR;TreeTop;0;0
getExtendedBlockExitTreeTop;getExtendedBlockExitTreeTop();OMR;TreeTop;0;0
getLastInstruction;getLastInstruction();OMR;TreeTop;0;0
getNextRealTreeTop;getNextRealTreeTop();OMR;TreeTop;0;0
getNextTreeTop;getNextTreeTop();OMR;TreeTop;0;0
getNode;getNode();OMR;TreeTop;0;0
getPrevRealTreeTop;getPrevRealTreeTop();OMR;TreeTop;0;0
getPrevTreeTop;getPrevTreeTop();OMR;TreeTop;0;0
insertAfter;insertAfter(TR::TreeTop *);OMR;TreeTop;0;0
insertBefore;insertBefore(TR::TreeTop *);OMR;TreeTop;0;0
insertNewTreeTop;insertNewTreeTop(TR::TreeTop *,TR::TreeTop *);OMR;TreeTop;0;0
insertTreeTops;insertTreeTops(TR::Compilation *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *);OMR;TreeTop;0;0
insertTreeTopsAfterMe;insertTreeTopsAfterMe(TR::TreeTop *,TR::TreeTop *);OMR;TreeTop;0;0
insertTreeTopsBeforeMe;insertTreeTopsBeforeMe(TR::TreeTop *,TR::TreeTop *);OMR;TreeTop;0;0
isLegalToChangeBranchDestination;isLegalToChangeBranchDestination(TR::Compilation *);OMR;TreeTop;0;0
isPossibleDef;isPossibleDef();OMR;TreeTop;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;TreeTop;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;TreeTop;0;0
join;join(TR::TreeTop *);OMR;TreeTop;0;0
operator new;operator new(size_t,_Bool,class TR_Memory *);OMR;TreeTop;0;0
removeDeadTrees;removeDeadTrees(TR::Compilation *,TR::TreeTop *[]);OMR;TreeTop;0;0
removeDeadTrees;removeDeadTrees(TR::Compilation *,TR::TreeTop *,TR::TreeTop *);OMR;TreeTop;0;0
self;self();OMR;TreeTop;0;0
setLastInstruction;setLastInstruction(TR::Instruction *);OMR;TreeTop;0;0
setNextTreeTop;setNextTreeTop(TR::TreeTop *);OMR;TreeTop;0;0
setNode;setNode(TR::Node *);OMR;TreeTop;0;0
setPrevTreeTop;setPrevTreeTop(TR::TreeTop *);OMR;TreeTop;0;0
unlink;unlink(_Bool);OMR;TreeTop;0;0
OSRFrameHeaderSizeInBytes;OSRFrameHeaderSizeInBytes(TR::Compilation *);OMR;VMEnv;0;0
OSRFrameSizeInBytes;OSRFrameSizeInBytes(TR::Compilation *,class TR_OpaqueMethodBlock *);OMR;VMEnv;0;0
VMEnv;VMEnv(class OMR::VMEnv &&);OMR;VMEnv;1;0
VMEnv;VMEnv(const class OMR::VMEnv &);OMR;VMEnv;1;0
VMEnv;VMEnv();OMR;VMEnv;1;0
VMEnv;VMEnv();TR;VMEnv;1;0
VMEnv;VMEnv(class TR::VMEnv &&);TR;VMEnv;1;0
VMEnv;VMEnv(const class TR::VMEnv &);TR;VMEnv;1;0
acquireVMAccessIfNeeded;acquireVMAccessIfNeeded(struct OMR_VMThread *);OMR;VMEnv;0;0
acquireVMAccessIfNeeded;acquireVMAccessIfNeeded(TR::Compilation *);OMR;VMEnv;0;0
canAnyMethodEventsBeHooked;canAnyMethodEventsBeHooked(TR::Compilation *);OMR;VMEnv;0;0
canMethodEnterEventBeHooked;canMethodEnterEventBeHooked(TR::Compilation *);OMR;VMEnv;0;0
canMethodExitEventBeHooked;canMethodExitEventBeHooked(TR::Compilation *);OMR;VMEnv;0;0
cpuTimeSpentInCompilationThread;cpuTimeSpentInCompilationThread(TR::Compilation *);OMR;VMEnv;0;0
ensureOSRBufferSize;ensureOSRBufferSize(TR::Compilation *,uintptrj_t,uintptrj_t,uintptrj_t);OMR;VMEnv;0;0
getHighResClock;getHighResClock(TR::Compilation *);OMR;VMEnv;0;0
getHighResClock;getHighResClock(struct OMR_VMThread *);OMR;VMEnv;0;0
getHighResClockResolution;getHighResClockResolution();OMR;VMEnv;0;0
getOverflowSafeAllocSize;getOverflowSafeAllocSize(TR::Compilation *);OMR;VMEnv;0;0
getUSecClock;getUSecClock(TR::Compilation *);OMR;VMEnv;0;0
getUSecClock;getUSecClock();OMR;VMEnv;0;0
getUSecClock;getUSecClock(struct OMR_VMThread *);OMR;VMEnv;0;0
hasAccess;hasAccess(TR::Compilation *);OMR;VMEnv;0;0
hasAccess;hasAccess(struct OMR_VMThread *);OMR;VMEnv;0;0
hasResumableTrapHandler;hasResumableTrapHandler(struct OMR_VMThread *);OMR;VMEnv;0;0
hasResumableTrapHandler;hasResumableTrapHandler(TR::Compilation *);OMR;VMEnv;0;0
heapBaseAddress;heapBaseAddress();OMR;VMEnv;0;0
heapTailPaddingSizeInBytes;heapTailPaddingSizeInBytes();OMR;VMEnv;0;0
maxHeapSizeInBytes;maxHeapSizeInBytes();OMR;VMEnv;0;0
operator=;operator=(const class OMR::VMEnv &);OMR;VMEnv;1;0
operator=;operator=(class OMR::VMEnv &&);OMR;VMEnv;1;0
operator=;operator=(class TR::VMEnv &&);TR;VMEnv;1;0
operator=;operator=(const class TR::VMEnv &);TR;VMEnv;1;0
releaseAccess;releaseAccess(struct OMR_VMThread *);OMR;VMEnv;0;0
releaseAccess;releaseAccess(TR::Compilation *);OMR;VMEnv;0;0
releaseVMAccessIfNeeded;releaseVMAccessIfNeeded(struct OMR_VMThread *,_Bool);OMR;VMEnv;0;0
releaseVMAccessIfNeeded;releaseVMAccessIfNeeded(TR::Compilation *,_Bool);OMR;VMEnv;0;0
self;self();OMR;VMEnv;0;0
thisThreadGetConcurrentScavengeActiveByteAddressOffset;thisThreadGetConcurrentScavengeActiveByteAddressOffset(TR::Compilation *);OMR;VMEnv;0;0
thisThreadGetEvacuateBaseAddressOffset;thisThreadGetEvacuateBaseAddressOffset(TR::Compilation *);OMR;VMEnv;0;0
thisThreadGetEvacuateTopAddressOffset;thisThreadGetEvacuateTopAddressOffset(TR::Compilation *);OMR;VMEnv;0;0
thisThreadGetGSHandlerAddressOffset;thisThreadGetGSHandlerAddressOffset(TR::Compilation *);OMR;VMEnv;0;0
thisThreadGetGSIntermediateResultOffset;thisThreadGetGSIntermediateResultOffset(TR::Compilation *);OMR;VMEnv;0;0
thisThreadGetGSOperandAddressOffset;thisThreadGetGSOperandAddressOffset(TR::Compilation *);OMR;VMEnv;0;0
thisThreadGetOSRReturnAddressOffset;thisThreadGetOSRReturnAddressOffset(TR::Compilation *);OMR;VMEnv;0;0
thisThreadGetPendingExceptionOffset;thisThreadGetPendingExceptionOffset();OMR;VMEnv;0;0
tryToAcquireAccess;tryToAcquireAccess(struct OMR_VMThread *,_Bool *);OMR;VMEnv;0;0
tryToAcquireAccess;tryToAcquireAccess(TR::Compilation *,_Bool *);OMR;VMEnv;0;0
~VMEnv;~VMEnv();OMR;VMEnv;1;0
~VMEnv;~VMEnv();TR;VMEnv;1;0
VMMethodEnv;VMMethodEnv(const class OMR::VMMethodEnv &);OMR;VMMethodEnv;1;0
VMMethodEnv;VMMethodEnv(class OMR::VMMethodEnv &&);OMR;VMMethodEnv;1;0
VMMethodEnv;VMMethodEnv();OMR;VMMethodEnv;1;0
VMMethodEnv;VMMethodEnv();TR;VMMethodEnv;1;0
VMMethodEnv;VMMethodEnv(class TR::VMMethodEnv &&);TR;VMMethodEnv;1;0
VMMethodEnv;VMMethodEnv(const class TR::VMMethodEnv &);TR;VMMethodEnv;1;0
hasBackwardBranches;hasBackwardBranches(class TR_OpaqueMethodBlock *);OMR;VMMethodEnv;0;0
isCompiledMethod;isCompiledMethod(class TR_OpaqueMethodBlock *);OMR;VMMethodEnv;0;0
operator=;operator=(const class OMR::VMMethodEnv &);OMR;VMMethodEnv;1;0
operator=;operator=(class OMR::VMMethodEnv &&);OMR;VMMethodEnv;1;0
operator=;operator=(class TR::VMMethodEnv &&);TR;VMMethodEnv;1;0
operator=;operator=(const class TR::VMMethodEnv &);TR;VMMethodEnv;1;0
startPC;startPC(class TR_OpaqueMethodBlock *);OMR;VMMethodEnv;0;0
~VMMethodEnv;~VMMethodEnv();OMR;VMMethodEnv;1;0
~VMMethodEnv;~VMMethodEnv();TR;VMMethodEnv;1;0
TR_BitContainerIterator;TR_BitContainerIterator(const class TR_BitContainerIterator &);;TR_BitContainerIterator;1;0
TR_BitContainerIterator;TR_BitContainerIterator(class TR_BitContainerIterator &&);;TR_BitContainerIterator;1;0
TR_BitContainerIterator;TR_BitContainerIterator();;TR_BitContainerIterator;0;0
TR_BitContainerIterator;TR_BitContainerIterator(class TR_BitContainer &);;TR_BitContainerIterator;0;0
TR_BitVectorIterator;TR_BitVectorIterator(class TR_BitVector &,int32_t);;TR_BitVectorIterator;0;0
TR_BitVectorIterator;TR_BitVectorIterator();;TR_BitVectorIterator;0;0
TR_BitVectorIterator;TR_BitVectorIterator(const class TR_BitVectorIterator &);;TR_BitVectorIterator;1;0
TR_BitVectorIterator;TR_BitVectorIterator(class TR_BitVectorIterator &&);;TR_BitVectorIterator;1;0
getFirstElement;getFirstElement();;TR_BitVectorIterator;0;0
getFirstElement;getFirstElement();;TR_BitContainerIterator;0;0
getNextBit;getNextBit();;TR_BitVectorIterator;0;0
getNextElement;getNextElement();;TR_BitVectorIterator;0;0
getNextElement;getNextElement();;TR_BitContainerIterator;0;0
hasMoreElements;hasMoreElements();;TR_BitVectorIterator;0;0
hasMoreElements;hasMoreElements();;TR_BitContainerIterator;0;0
reset;reset();;TR_BitVectorIterator;0;0
setBitContainer;setBitContainer(class TR_BitContainer &);;TR_BitContainerIterator;0;0
setBitVector;setBitVector(class TR_BitVector &,int32_t);;TR_BitVectorIterator;0;0
~TR_BitVectorIterator;~TR_BitVectorIterator();;TR_BitVectorIterator;1;0
SetToFirstOne;SetToFirstOne();;TR_BitVectorCursor;0;0
SetToNextOne;SetToNextOne();;TR_BitVectorCursor;0;0
TR_BitVectorCursor;TR_BitVectorCursor(class TR_BitVector &);;TR_BitVectorCursor;0;0
Valid;Valid();;TR_BitVectorCursor;0;0
operator unsigned int;operator unsigned int();;TR_BitVectorCursor;0;0
TR_ClassExtendCheck;TR_ClassExtendCheck(class TR_OpaqueClassBlock *);;TR_ClassExtendCheck;0;0
TR_ClassLoadCheck;TR_ClassLoadCheck(char *,int32_t);;TR_ClassLoadCheck;0;0
TR_FrontEnd;TR_FrontEnd(class TR_FrontEnd &&);;TR_FrontEnd;1;0
TR_FrontEnd;TR_FrontEnd();;TR_FrontEnd;0;0
TR_Uncopyable;TR_Uncopyable(const class TR_Uncopyable &);;TR_Uncopyable;0;0
TR_Uncopyable;TR_Uncopyable();;TR_Uncopyable;0;0
acquireLogMonitor;acquireLogMonitor();;TR_FrontEnd;0;1
allocateCodeMemory;allocateCodeMemory(TR::Compilation *,uint32_t,uint32_t,uint8_t **,_Bool);;TR_FrontEnd;0;1
allocateRelocationData;allocateRelocationData(TR::Compilation *,uint32_t);;TR_FrontEnd;0;1
classHasBeenExtended;classHasBeenExtended(class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
classHasBeenReplaced;classHasBeenReplaced(class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
createDebug;createDebug(TR::Compilation *);;TR_FrontEnd;0;1
createMethodMetaData;createMethodMetaData(TR::Compilation *);;TR_FrontEnd;0;1
createResolvedMethod;createResolvedMethod(class TR_Memory *,class TR_OpaqueMethodBlock *,class TR_ResolvedMethod *,class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
dataTypeForLoadOrStore;dataTypeForLoadOrStore(TR::DataType);;TR_FrontEnd;0;1
findOrCreateLiteral;findOrCreateLiteral(TR::Compilation *,void *,size_t);;TR_FrontEnd;0;1
generateBinaryEncodingPrologue;generateBinaryEncodingPrologue(struct TR_BinaryEncodingData *,TR::CodeGenerator *);;TR_FrontEnd;0;1
getArrayClassFromComponentClass;getArrayClassFromComponentClass(class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
getArraySpineShift;getArraySpineShift(int32_t);;TR_FrontEnd;0;1
getArrayletLeafIndex;getArrayletLeafIndex(int32_t,int32_t);;TR_FrontEnd;0;1
getArrayletMask;getArrayletMask(int32_t);;TR_FrontEnd;0;1
getClassClassPointer;getClassClassPointer(class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
getClassDepthAndFlagsValue;getClassDepthAndFlagsValue(class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
getClassFromMethodBlock;getClassFromMethodBlock(class TR_OpaqueMethodBlock *);;TR_FrontEnd;0;1
getClassFromNewArrayType;getClassFromNewArrayType(int32_t);;TR_FrontEnd;0;1
getClassFromSignature;getClassFromSignature(const char *,int32_t,class TR_OpaqueMethodBlock *,_Bool);;TR_FrontEnd;0;1
getClassFromSignature;getClassFromSignature(const char *,int32_t,class TR_ResolvedMethod *,_Bool);;TR_FrontEnd;0;1
getClassFromStatic;getClassFromStatic(void *);;TR_FrontEnd;0;1
getClassOfMethod;getClassOfMethod(class TR_OpaqueMethodBlock *);;TR_FrontEnd;0;1
getCodeCacheBase;getCodeCacheBase(TR::CodeCache *);;TR_FrontEnd;0;1
getCodeCacheBase;getCodeCacheBase();;TR_FrontEnd;0;1
getCodeCacheTop;getCodeCacheTop(TR::CodeCache *);;TR_FrontEnd;0;1
getCodeCacheTop;getCodeCacheTop();;TR_FrontEnd;0;1
getComponentClassFromArrayClass;getComponentClassFromArrayClass(class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
getDesignatedCodeCache;getDesignatedCodeCache(TR::Compilation *);;TR_FrontEnd;0;1
getFormattedName;getFormattedName(char *,int32_t,char *,char *,_Bool);;TR_FrontEnd;0;1
getInlinedCallSiteMethod;getInlinedCallSiteMethod(TR_InlinedCallSite *);;TR_FrontEnd;0;1
getLeafComponentClassFromArrayClass;getLeafComponentClassFromArrayClass(class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
getLineNumberForMethodAndByteCodeIndex;getLineNumberForMethodAndByteCodeIndex(class TR_OpaqueMethodBlock *,int32_t);;TR_FrontEnd;0;1
getMethodFromName;getMethodFromName(char *,char *,char *,class TR_OpaqueMethodBlock *);;TR_FrontEnd;0;1
getNewArrayTypeFromClass;getNewArrayTypeFromClass(class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
getObjectAlignmentInBytes;getObjectAlignmentInBytes();;TR_FrontEnd;0;1
getObjectHeaderSizeInBytes;getObjectHeaderSizeInBytes();;TR_FrontEnd;0;1
getOffsetOfContiguousArraySizeField;getOffsetOfContiguousArraySizeField();;TR_FrontEnd;0;1
getOffsetOfDiscontiguousArraySizeField;getOffsetOfDiscontiguousArraySizeField();;TR_FrontEnd;0;1
getOffsetOfIndexableSizeField;getOffsetOfIndexableSizeField();;TR_FrontEnd;0;1
getPersistentInfo;getPersistentInfo();;TR_FrontEnd;0;1
getStringLength;getStringLength(uintptrj_t);;TR_FrontEnd;0;1
getStringUTF8;getStringUTF8(uintptrj_t,char *,intptrj_t);;TR_FrontEnd;0;1
getStringUTF8Length;getStringUTF8Length(uintptrj_t);;TR_FrontEnd;0;1
getSuperClass;getSuperClass(class TR_OpaqueClassBlock *);;TR_FrontEnd;0;1
indexedTrampolineLookup;indexedTrampolineLookup(int32_t,void *);;TR_FrontEnd;0;1
isInlineableNativeMethod;isInlineableNativeMethod(TR::Compilation *,TR::ResolvedMethodSymbol *);;TR_FrontEnd;0;1
isInstanceOf;isInstanceOf(class TR_OpaqueClassBlock *,class TR_OpaqueClassBlock *,_Bool,_Bool,_Bool);;TR_FrontEnd;0;1
isMethodEnterTracingEnabled;isMethodEnterTracingEnabled(class TR_OpaqueMethodBlock *);;TR_FrontEnd;0;1
isMethodExitTracingEnabled;isMethodExitTracingEnabled(class TR_OpaqueMethodBlock *);;TR_FrontEnd;0;1
isUnloadAssumptionRequired;isUnloadAssumptionRequired(class TR_OpaqueClassBlock *,class TR_ResolvedMethod *);;TR_FrontEnd;0;1
methodTrampolineLookup;methodTrampolineLookup(TR::Compilation *,TR::SymbolReference *,void *);;TR_FrontEnd;0;1
offsetOfIsOverriddenBit;offsetOfIsOverriddenBit();;TR_FrontEnd;0;1
operator=;operator=(const class TR_Uncopyable &);;TR_Uncopyable;0;0
operator=;operator=(class TR_FrontEnd &&);;TR_FrontEnd;1;0
operator=;operator=(const class TR_FrontEnd &);;TR_FrontEnd;1;0
printVerboseLogHeader;printVerboseLogHeader(TR::Options *);;TR_FrontEnd;0;1
releaseCodeMemory;releaseCodeMemory(void *,uint8_t);;TR_FrontEnd;0;1
releaseLogMonitor;releaseLogMonitor();;TR_FrontEnd;0;1
reserveTrampolineIfNecessary;reserveTrampolineIfNecessary(TR::Compilation *,TR::SymbolReference *,_Bool);;TR_FrontEnd;0;1
resizeCodeMemory;resizeCodeMemory(TR::Compilation *,uint8_t *,uint32_t);;TR_FrontEnd;0;1
sampleSignature;sampleSignature(class TR_OpaqueMethodBlock *,char *,int32_t,class TR_Memory *);;TR_FrontEnd;0;1
~TR_FrontEnd;~TR_FrontEnd();;TR_FrontEnd;1;0
~TR_Uncopyable;~TR_Uncopyable();;TR_Uncopyable;0;0
TR_HashTab;TR_HashTab(class TR_HashTab &&);;TR_HashTab;1;0
TR_HashTab;TR_HashTab(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);;TR_HashTab;0;0
TR_HashTab;TR_HashTab(const class TR_HashTab &);;TR_HashTab;1;0
TR_HashTabDouble;TR_HashTabDouble(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);;TR_HashTabDouble;0;0
add;add(void *,TR_HashId,void *);;TR_HashTab;0;0
add;add(double *,TR_HashId,void *);;TR_HashTabDouble;0;0
addElement;addElement(void *,TR_HashId &,class TR_HashTab::TR_HashTableEntry *);;TR_HashTab;0;0
calculateHash;calculateHash(const void *);;TR_HashTab;0;1
calculateHash;calculateHash(const void *);;TR_HashTabDouble;0;1
clear;clear();;TR_HashTab;0;0
getData;getData(TR_HashId);;TR_HashTab;0;0
growAndRehash;growAndRehash(uint32_t);;TR_HashTab;0;0
growTo;growTo(uint32_t);;TR_HashTab;0;0
init;init(uint32_t,_Bool);;TR_HashTab;0;0
isEqual;isEqual(const void *,const void *);;TR_HashTab;0;1
isEqual;isEqual(const void *,const void *);;TR_HashTabDouble;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_HashTab;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_HashTab;0;0
locate;locate(const void *,TR_HashId &);;TR_HashTab;0;0
locate;locate(const double *,TR_HashId &);;TR_HashTabDouble;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HashTab;0;0
operator delete;operator delete(void *,TR::Region &);;TR_HashTab;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_HashTab;0;0
operator delete;operator delete(void *,size_t);;TR_HashTab;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HashTab;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HashTab;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HashTab;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_HashTab;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_HashTab;0;0
operator new;operator new(size_t,TR::Region &);;TR_HashTab;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_HashTab;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_HashTab;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HashTab;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_HashTab;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HashTab;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_HashTab;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_HashTab;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HashTab;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_HashTab;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_HashTab;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_HashTab;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HashTab;0;0
operator=;operator=(const class TR_HashTab &);;TR_HashTab;1;0
operator=;operator=(class TR_HashTab &&);;TR_HashTab;1;0
operator=;operator=(const class TR_HashTabDouble &);;TR_HashTabDouble;1;0
operator=;operator=(class TR_HashTabDouble &&);;TR_HashTabDouble;1;0
replace;replace(void *,TR_HashId,void *);;TR_HashTab;0;0
reset;reset();;TR_HashTab;0;0
setKey;setKey(TR_HashId,void *);;TR_HashTab;0;0
trHeapMemory;trHeapMemory();;TR_HashTab;0;0
trMemory;trMemory();;TR_HashTab;0;0
trStackMemory;trStackMemory();;TR_HashTab;0;0
updateData;updateData(TR_HashId,void *);;TR_HashTab;0;0
~TR_HashTab;~TR_HashTab();;TR_HashTab;1;0
~TR_HashTabDouble;~TR_HashTabDouble();;TR_HashTabDouble;1;0
TR_HashTabFloat;TR_HashTabFloat(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);;TR_HashTabFloat;0;0
add;add(float *,TR_HashId,void *);;TR_HashTabFloat;0;0
calculateHash;calculateHash(const void *);;TR_HashTabFloat;0;1
isEqual;isEqual(const void *,const void *);;TR_HashTabFloat;0;1
locate;locate(const float *,TR_HashId &);;TR_HashTabFloat;0;0
operator=;operator=(class TR_HashTabFloat &&);;TR_HashTabFloat;1;0
operator=;operator=(const class TR_HashTabFloat &);;TR_HashTabFloat;1;0
~TR_HashTabFloat;~TR_HashTabFloat();;TR_HashTabFloat;1;0
TR_HashTabInt;TR_HashTabInt(class TR_HashTabInt &&);;TR_HashTabInt;1;0
TR_HashTabInt;TR_HashTabInt(const class TR_HashTabInt &);;TR_HashTabInt;1;0
TR_HashTabInt;TR_HashTabInt(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);;TR_HashTabInt;0;0
add;add(int32_t,TR_HashId,void *);;TR_HashTabInt;0;0
calculateHash;calculateHash(const void *);;TR_HashTabInt;0;1
locate;locate(int32_t,TR_HashId &);;TR_HashTabInt;0;0
operator=;operator=(class TR_HashTabInt &&);;TR_HashTabInt;1;0
operator=;operator=(const class TR_HashTabInt &);;TR_HashTabInt;1;0
~TR_HashTabInt;~TR_HashTabInt();;TR_HashTabInt;1;0
TR_HashTabLong;TR_HashTabLong(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);;TR_HashTabLong;0;0
add;add(int64_t *,TR_HashId,void *);;TR_HashTabLong;0;0
calculateHash;calculateHash(const void *);;TR_HashTabLong;0;1
isEqual;isEqual(const void *,const void *);;TR_HashTabLong;0;1
locate;locate(const int64_t *,TR_HashId &);;TR_HashTabLong;0;0
operator=;operator=(class TR_HashTabLong &&);;TR_HashTabLong;1;0
operator=;operator=(const class TR_HashTabLong &);;TR_HashTabLong;1;0
~TR_HashTabLong;~TR_HashTabLong();;TR_HashTabLong;1;0
TR_HashTabString;TR_HashTabString(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);;TR_HashTabString;0;0
add;add(const char *,TR_HashId,void *);;TR_HashTabString;0;0
calculateHash;calculateHash(const void *);;TR_HashTabString;0;1
isEqual;isEqual(const void *,const void *);;TR_HashTabString;0;1
locate;locate(const char *,TR_HashId &);;TR_HashTabString;0;0
operator=;operator=(class TR_HashTabString &&);;TR_HashTabString;1;0
operator=;operator=(const class TR_HashTabString &);;TR_HashTabString;1;0
~TR_HashTabString;~TR_HashTabString();;TR_HashTabString;1;0
TR_HeapMemory;TR_HeapMemory(class TR_HeapMemory &&);;TR_HeapMemory;1;0
TR_HeapMemory;TR_HeapMemory(const class TR_HeapMemory &);;TR_HeapMemory;1;0
TR_HeapMemory;TR_HeapMemory(class TR_Memory *);;TR_HeapMemory;0;0
TR_MemoryAllocationType;TR_MemoryAllocationType(class TR_MemoryAllocationType &&);;TR_MemoryAllocationType;1;0
TR_MemoryAllocationType;TR_MemoryAllocationType(class TR_Memory &);;TR_MemoryAllocationType;0;0
TR_MemoryAllocationType;TR_MemoryAllocationType(const class TR_MemoryAllocationType &);;TR_MemoryAllocationType;1;0
allocate;allocate(size_t,class TR_MemoryBase::ObjectType);;TR_HeapMemory;0;0
deallocate;deallocate(void *);;TR_HeapMemory;0;0
operator=;operator=(class TR_MemoryAllocationType &&);;TR_MemoryAllocationType;1;0
operator=;operator=(const class TR_MemoryAllocationType &);;TR_MemoryAllocationType;1;0
operator=;operator=(class TR_HeapMemory &&);;TR_HeapMemory;1;0
trMemory;trMemory();;TR_MemoryAllocationType;0;0
~TR_HeapMemory;~TR_HeapMemory();;TR_HeapMemory;1;0
~TR_MemoryAllocationType;~TR_MemoryAllocationType();;TR_MemoryAllocationType;1;0
TR_Memory;TR_Memory(class TR_PersistentMemory &,TR::Region &);;TR_Memory;0;0
TR_Memory;TR_Memory(class TR_Memory &&);;TR_Memory;1;0
TR_MemoryBase;TR_MemoryBase(const class TR_MemoryBase &);;TR_MemoryBase;0;0
TR_MemoryBase;TR_MemoryBase(void *);;TR_MemoryBase;0;0
allocateHeapMemory;allocateHeapMemory(size_t,enum TR_MemoryBase::ObjectType);;TR_Memory;0;0
allocateMemory;allocateMemory(size_t,enum TR_AllocationKind,enum TR_MemoryBase::ObjectType);;TR_Memory;0;0
allocateStackMemory;allocateStackMemory(size_t,enum TR_MemoryBase::ObjectType);;TR_Memory;0;0
currentStackRegion;currentStackRegion();;TR_Memory;0;0
freeMemory;freeMemory(void *,enum TR_AllocationKind,enum TR_MemoryBase::ObjectType);;TR_Memory;0;0
getPersistentInfo;getPersistentInfo();;TR_Memory;0;0
heapMemoryRegion;heapMemoryRegion();;TR_Memory;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t,enum TR_MemoryBase::ObjectType);;TR_MemoryBase;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_MemoryBase;0;0
operator=;operator=(const class TR_MemoryBase &);;TR_MemoryBase;1;0
operator=;operator=(class TR_Memory &&);;TR_Memory;1;0
registerStackRegion;registerStackRegion(TR::Region &);;TR_Memory;0;0
setCompilation;setCompilation(TR::Compilation *);;TR_Memory;0;0
trHeapMemory;trHeapMemory();;TR_Memory;0;0
trPersistentMemory;trPersistentMemory();;TR_Memory;0;0
trStackMemory;trStackMemory();;TR_Memory;0;0
unregisterStackRegion;unregisterStackRegion(TR::Region &,TR::Region &);;TR_Memory;0;0
~TR_MemoryBase;~TR_MemoryBase();;TR_MemoryBase;1;0
TR_AliasSetInterface<AliasSetInterface>;TR_AliasSetInterface<AliasSetInterface>(_Bool,_Bool);;TR_AliasSetInterface;0;0
TR_NodeAliasSetInterface<>;TR_NodeAliasSetInterface<>(TR::Node *,_Bool,_Bool);;TR_NodeAliasSetInterface;0;0
addAlias;addAlias(TR::SymbolReference *);;TR_AliasSetInterface;0;0
addAliases;addAliases(TR::SparseBitVector &);;TR_AliasSetInterface;0;0
contains;contains(uint32_t,TR::Compilation *);;TR_AliasSetInterface;0;0
contains;contains(TR::SymbolReference *,TR::Compilation *);;TR_AliasSetInterface;0;0
containsAny;containsAny(class TR_BitVector &,TR::Compilation *);;TR_AliasSetInterface;0;0
getAliases;getAliases(class TR_BitVector &);;TR_AliasSetInterface;0;0
getAliasesAndSubtractFrom;getAliasesAndSubtractFrom(class TR_BitVector &);;TR_AliasSetInterface;0;0
getAliasesAndUnionWith;getAliasesAndUnionWith(TR::SparseBitVector &);;TR_AliasSetInterface;0;0
getAliasesAndUnionWith;getAliasesAndUnionWith(class TR_BitVector &);;TR_AliasSetInterface;0;0
getAliasesWithClear;getAliasesWithClear(class TR_BitVector &);;TR_AliasSetInterface;0;0
getTRAliases;getTRAliases();;TR_AliasSetInterface;0;0
getTRAliases_impl;getTRAliases_impl(_Bool,_Bool);;TR_NodeAliasSetInterface;0;0
hasAliases;hasAliases();;TR_AliasSetInterface;0;0
isZero;isZero(TR::Compilation *);;TR_AliasSetInterface;0;0
removeAlias;removeAlias(TR::SymbolReference *);;TR_AliasSetInterface;0;0
removeAliases;removeAliases(TR::SparseBitVector &);;TR_AliasSetInterface;0;0
setAlias;setAlias(TR::SymbolReference *,_Bool);;TR_AliasSetInterface;0;0
TR_PersistentMemory;TR_PersistentMemory(class TR_PersistentMemory &&);;TR_PersistentMemory;1;0
TR_PersistentMemory;TR_PersistentMemory(void *,TR::PersistentAllocator &);;TR_PersistentMemory;0;0
allocatePersistentMemory;allocatePersistentMemory(const size_t,const enum TR_MemoryBase::ObjectType);;TR_PersistentMemory;0;0
freePersistentMemory;freePersistentMemory(void *);;TR_PersistentMemory;0;0
getNonThreadSafePersistentInfo;getNonThreadSafePersistentInfo();;TR_PersistentMemory;0;0
getPersistentInfo;getPersistentInfo();;TR_PersistentMemory;0;0
operator=;operator=(class TR_PersistentMemory &&);;TR_PersistentMemory;1;0
TR_Dominators;TR_Dominators(class TR_Dominators &&);;TR_Dominators;1;0
TR_Dominators;TR_Dominators(const class TR_Dominators &);;TR_Dominators;1;0
TR_Dominators;TR_Dominators(TR::Compilation *,_Bool);;TR_Dominators;0;0
TR_PostDominators;TR_PostDominators(TR::Compilation *);;TR_PostDominators;0;0
blockNumber;blockNumber(int32_t);;TR_Dominators;0;0
comp;comp();;TR_Dominators;0;0
compress;compress(int32_t);;TR_Dominators;0;0
countBlocksControlled;countBlocksControlled(int32_t,BitVector &);;TR_PostDominators;0;0
dominates;dominates(TR::Block *,TR::Block *);;TR_Dominators;0;0
eval;eval(int32_t);;TR_Dominators;0;0
findControlDependents;findControlDependents();;TR_PostDominators;0;0
findDominators;findDominators(TR::Block *);;TR_Dominators;0;0
getDominator;getDominator(TR::Block *);;TR_Dominators;0;0
getInfo;getInfo(int32_t);;TR_Dominators;0;0
initialize;initialize(TR::Block *,struct TR_Dominators::BBInfo *);;TR_Dominators;0;0
isValid;isValid();;TR_PostDominators;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_Dominators;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_PostDominators;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_Dominators;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_PostDominators;0;0
link;link(int32_t,int32_t);;TR_Dominators;0;0
numberOfBlocksControlled;numberOfBlocksControlled(int32_t);;TR_PostDominators;0;0
operator delete;operator delete(void *,size_t);;TR_Dominators;0;0
operator delete;operator delete(void *,size_t);;TR_PostDominators;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Dominators;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Dominators;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
operator delete;operator delete(void *,TR::Region &);;TR_Dominators;0;0
operator delete;operator delete(void *,TR::Region &);;TR_PostDominators;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_Dominators;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_PostDominators;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_Dominators;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_PostDominators;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Dominators;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Dominators;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_Dominators;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_PostDominators;0;0
operator new;operator new(size_t,TR::Region &);;TR_Dominators;0;0
operator new;operator new(size_t,TR::Region &);;TR_PostDominators;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_Dominators;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_PostDominators;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_Dominators;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_PostDominators;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Dominators;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_PostDominators;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_Dominators;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_PostDominators;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Dominators;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Dominators;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_Dominators;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_PostDominators;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_Dominators;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_PostDominators;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Dominators;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_Dominators;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_PostDominators;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Dominators;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Dominators;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_PostDominators;0;0
operator=;operator=(class TR_Dominators &&);;TR_Dominators;1;0
operator=;operator=(const class TR_Dominators &);;TR_Dominators;1;0
operator=;operator=(class TR_PostDominators &&);;TR_PostDominators;1;0
trace;trace();;TR_Dominators;0;0
~TR_Dominators;~TR_Dominators();;TR_Dominators;1;0
TR_CFGIterator;TR_CFGIterator(const class TR_CFGIterator &);;TR_CFGIterator;1;0
TR_CFGIterator;TR_CFGIterator(class TR_CFGIterator &&);;TR_CFGIterator;1;0
TR_CFGIterator;TR_CFGIterator(TR::CFGEdgeList &,TR::CFGEdgeList &);;TR_CFGIterator;0;0
TR_PredecessorIterator;TR_PredecessorIterator(TR::CFGNode *);;TR_PredecessorIterator;0;0
getCurrent;getCurrent();;TR_CFGIterator;0;0
getFirst;getFirst();;TR_CFGIterator;0;0
getNext;getNext();;TR_CFGIterator;0;0
operator=;operator=(const class TR_CFGIterator &);;TR_CFGIterator;1;0
operator=;operator=(class TR_CFGIterator &&);;TR_CFGIterator;1;0
operator=;operator=(class TR_PredecessorIterator &&);;TR_PredecessorIterator;1;0
TR_StackMemory;TR_StackMemory(class TR_Memory *);;TR_StackMemory;0;0
TR_StackMemory;TR_StackMemory(class TR_StackMemory &&);;TR_StackMemory;1;0
TR_StackMemory;TR_StackMemory(const class TR_StackMemory &);;TR_StackMemory;1;0
allocate;allocate(size_t,class TR_MemoryBase::ObjectType);;TR_StackMemory;0;0
deallocate;deallocate(void *);;TR_StackMemory;0;0
operator=;operator=(class TR_StackMemory &&);;TR_StackMemory;1;0
~TR_StackMemory;~TR_StackMemory();;TR_StackMemory;1;0
TR_SuccessorIterator;TR_SuccessorIterator(TR::CFGNode *);;TR_SuccessorIterator;0;0
operator=;operator=(class TR_SuccessorIterator &&);;TR_SuccessorIterator;1;0
TR_SymAliasSetInterface<>;TR_SymAliasSetInterface<>(TR::SymbolReference *,_Bool,_Bool);;TR_SymAliasSetInterface;0;0
addSymRef1KillsSymRef2Asymmetrically;addSymRef1KillsSymRef2Asymmetrically(TR::SymbolReference *,TR::SymbolReference *,_Bool);;TR_SymAliasSetInterface;0;0
getTRAliases_impl;getTRAliases_impl(_Bool,_Bool);;TR_SymAliasSetInterface;0;0
removeAllAliases;removeAllAliases();;TR_SymAliasSetInterface;0;0
removeSymRef1KillsSymRef2Asymmetrically;removeSymRef1KillsSymRef2Asymmetrically(TR::SymbolReference *,TR::SymbolReference *,_Bool);;TR_SymAliasSetInterface;0;0
setAlias_impl;setAlias_impl(TR::SymbolReference *,_Bool,_Bool,_Bool);;TR_SymAliasSetInterface;0;0
setAliases_impl;setAliases_impl(TR::SparseBitVector &,_Bool,_Bool,_Bool);;TR_SymAliasSetInterface;0;0
setSymRef1KillsSymRef2Asymmetrically;setSymRef1KillsSymRef2Asymmetrically(TR::SymbolReference *,TR::SymbolReference *,_Bool,_Bool);;TR_SymAliasSetInterface;0;0
TR_SymRefIterator;TR_SymRefIterator(class TR_BitVector &,TR::SymbolReferenceTable *);;TR_SymRefIterator;0;0
getNext;getNext();;TR_SymRefIterator;0;0
BufferBase<TCursor>;BufferBase<TCursor>(cursor_t);TR_X86OpCode;BufferBase;0;0
Estimator;Estimator(cursor_t);TR_X86OpCode;Estimator;0;0
operator type-parameter-0-0;operator type-parameter-0-0();TR_X86OpCode;BufferBase;0;0
Writer;Writer(cursor_t);TR_X86OpCode;Writer;0;0
TR_ScratchRegisterManager;TR_ScratchRegisterManager(const class TR_ScratchRegisterManager &);;TR_ScratchRegisterManager;1;0
TR_ScratchRegisterManager;TR_ScratchRegisterManager(class TR_ScratchRegisterManager &&);;TR_ScratchRegisterManager;1;0
TR_ScratchRegisterManager;TR_ScratchRegisterManager(int32_t,TR::CodeGenerator *);;TR_ScratchRegisterManager;0;0
TR_X86ScratchRegisterManager;TR_X86ScratchRegisterManager(int32_t,TR::CodeGenerator *);;TR_X86ScratchRegisterManager;0;0
addScratchRegistersToDependencyList;addScratchRegistersToDependencyList(TR::RegisterDependencyConditions *);;TR_ScratchRegisterManager;0;0
donateScratchRegister;donateScratchRegister(TR::Register *);;TR_ScratchRegisterManager;0;0
findOrCreateScratchRegister;findOrCreateScratchRegister(enum TR_RegisterKinds);;TR_ScratchRegisterManager;0;0
getCapacity;getCapacity();;TR_ScratchRegisterManager;0;0
getManagedScratchRegisterList;getManagedScratchRegisterList();;TR_ScratchRegisterManager;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_ScratchRegisterManager;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_ScratchRegisterManager;0;0
numAvailableRegisters;numAvailableRegisters();;TR_ScratchRegisterManager;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_ScratchRegisterManager;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_ScratchRegisterManager;0;0
operator delete;operator delete(void *,size_t);;TR_ScratchRegisterManager;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_ScratchRegisterManager;0;0
operator delete;operator delete(void *,TR::Region &);;TR_ScratchRegisterManager;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_ScratchRegisterManager;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_ScratchRegisterManager;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_ScratchRegisterManager;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_ScratchRegisterManager;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_ScratchRegisterManager;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_ScratchRegisterManager;0;0
operator new;operator new(size_t,TR::Region &);;TR_ScratchRegisterManager;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_ScratchRegisterManager;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_ScratchRegisterManager;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_ScratchRegisterManager;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_ScratchRegisterManager;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_ScratchRegisterManager;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_ScratchRegisterManager;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_ScratchRegisterManager;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_ScratchRegisterManager;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_ScratchRegisterManager;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_ScratchRegisterManager;0;0
reclaimAddressRegister;reclaimAddressRegister(TR::MemoryReference *);;TR_X86ScratchRegisterManager;0;0
reclaimScratchRegister;reclaimScratchRegister(TR::Register *);;TR_ScratchRegisterManager;0;0
setCapacity;setCapacity(int32_t);;TR_ScratchRegisterManager;0;0
stopUsingRegisters;stopUsingRegisters();;TR_ScratchRegisterManager;0;0
(Arch: AMD64): Compiling ../../../../compiler/compile/Method.cpp
ParameterSymbol;ParameterSymbol(class OMR::ParameterSymbol &&);OMR;ParameterSymbol;1;0
ParameterSymbol;ParameterSymbol(TR::DataType,int32_t,size_t);OMR;ParameterSymbol;0;0
ParameterSymbol;ParameterSymbol(TR::DataType,int32_t,size_t);TR;ParameterSymbol;0;0
ParameterSymbol;ParameterSymbol(TR::DataType,int32_t);OMR;ParameterSymbol;0;0
ParameterSymbol;ParameterSymbol(TR::DataType,int32_t);TR;ParameterSymbol;0;0
ParameterSymbol;ParameterSymbol(const class OMR::ParameterSymbol &);OMR;ParameterSymbol;1;0
getAllocatedHigh;getAllocatedHigh();OMR;ParameterSymbol;0;0
getAllocatedIndex;getAllocatedIndex();OMR;ParameterSymbol;0;0
getAllocatedLow;getAllocatedLow();OMR;ParameterSymbol;0;0
getFixedType;getFixedType();OMR;ParameterSymbol;0;0
getIsPreexistent;getIsPreexistent();OMR;ParameterSymbol;0;0
getKnownObjectIndex;getKnownObjectIndex();OMR;ParameterSymbol;0;0
getLinkageRegisterIndex;getLinkageRegisterIndex();OMR;ParameterSymbol;0;0
getOrdinal;getOrdinal();OMR;ParameterSymbol;0;0
getParameterOffset;getParameterOffset();OMR;ParameterSymbol;0;0
getSlot;getSlot();OMR;ParameterSymbol;0;0
getTypeSignature;getTypeSignature(int32_t &);OMR;ParameterSymbol;0;0
hasKnownObjectIndex;hasKnownObjectIndex();OMR;ParameterSymbol;0;0
isParmPassedInRegister;isParmPassedInRegister();OMR;ParameterSymbol;0;0
operator=;operator=(class OMR::ParameterSymbol &&);OMR;ParameterSymbol;1;0
operator=;operator=(const class OMR::ParameterSymbol &);OMR;ParameterSymbol;1;0
operator=;operator=(const class TR::ParameterSymbol &);TR;ParameterSymbol;1;0
operator=;operator=(class TR::ParameterSymbol &&);TR;ParameterSymbol;1;0
self;self();OMR;ParameterSymbol;0;0
setAllocatedHigh;setAllocatedHigh(int8_t);OMR;ParameterSymbol;0;0
setAllocatedIndex;setAllocatedIndex(int8_t);OMR;ParameterSymbol;0;0
setAllocatedLow;setAllocatedLow(int8_t);OMR;ParameterSymbol;0;0
setFixedType;setFixedType(void *);OMR;ParameterSymbol;0;0
setIsPreexistent;setIsPreexistent(_Bool);OMR;ParameterSymbol;0;0
setKnownObjectIndex;setKnownObjectIndex(TR::class KnownObjectTable::Index);OMR;ParameterSymbol;0;0
setLinkageRegisterIndex;setLinkageRegisterIndex(int8_t);OMR;ParameterSymbol;0;0
setOrdinal;setOrdinal(int32_t);OMR;ParameterSymbol;0;0
setParameterOffset;setParameterOffset(int32_t);OMR;ParameterSymbol;0;0
setTypeSignature;setTypeSignature(const char *,int32_t);OMR;ParameterSymbol;0;0
~ParameterSymbol;~ParameterSymbol();OMR;ParameterSymbol;1;1
~ParameterSymbol;~ParameterSymbol();TR;ParameterSymbol;1;1
operator=;operator=(const class TR::DataType &);TR;DataType;1;0
operator=;operator=(class TR::DataType &&);TR;DataType;1;0
(Arch: AMD64): Compiling ../../../../compiler/compile/VirtualGuard.cpp
(Arch: AMD64): Compiling ../../../../compiler/control/OMROptions.cpp
operator=;operator=(class OMR::Options &&);OMR;Options;1;0
operator=;operator=(const class OMR::Options &);OMR;Options;1;0
Recompilation;Recompilation(const class OMR::Recompilation &);OMR;Recompilation;1;0
Recompilation;Recompilation(TR::Compilation *);OMR;Recompilation;0;0
Recompilation;Recompilation(TR::Compilation *);TR;Recompilation;0;0
Recompilation;Recompilation(class OMR::Recompilation &&);OMR;Recompilation;1;0
beforeCodeGen;beforeCodeGen();OMR;Recompilation;0;0
beforeOptimization;beforeOptimization();OMR;Recompilation;0;0
comp;comp();OMR;Recompilation;0;0
couldBeCompiledAgain;couldBeCompiledAgain();OMR;Recompilation;0;0
endOfCompilation;endOfCompilation();OMR;Recompilation;0;0
generatePrePrologue;generatePrePrologue();OMR;Recompilation;0;1
generatePrologue;generatePrologue(TR::Instruction *);OMR;Recompilation;0;1
isProfilingCompilation;isProfilingCompilation();OMR;Recompilation;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Recompilation;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Recompilation;0;0
operator delete;operator delete(void *,size_t);OMR;Recompilation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Recompilation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Recompilation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Recompilation;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Recompilation;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Recompilation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Recompilation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Recompilation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Recompilation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Recompilation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Recompilation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Recompilation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Recompilation;0;0
operator new;operator new(size_t,TR::Region &);OMR;Recompilation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Recompilation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Recompilation;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Recompilation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Recompilation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Recompilation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Recompilation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Recompilation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Recompilation;0;0
operator=;operator=(class OMR::Recompilation &&);OMR;Recompilation;1;0
operator=;operator=(const class OMR::Recompilation &);OMR;Recompilation;1;0
operator=;operator=(class TR::Recompilation &&);TR;Recompilation;1;0
operator=;operator=(const class TR::Recompilation &);TR;Recompilation;1;0
postCompilation;postCompilation();OMR;Recompilation;0;1
self;self();OMR;Recompilation;0;0
shouldBeCompiledAgain;shouldBeCompiledAgain();OMR;Recompilation;0;0
shutdown;shutdown();OMR;Recompilation;0;0
startOfCompilation;startOfCompilation();OMR;Recompilation;0;0
trHeapMemory;trHeapMemory();OMR;Recompilation;0;0
trMemory;trMemory();OMR;Recompilation;0;0
~Recompilation;~Recompilation();OMR;Recompilation;1;0
~Recompilation;~Recompilation();TR;Recompilation;1;0
(Arch: AMD64): Compiling ../../../../compiler/control/OptimizationPlan.cpp
(Arch: AMD64): Compiling ../../../../compiler/control/OMRRecompilation.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/ExceptionTable.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/Assert.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/BitVector.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/Checklist.cpp
BlockChecklist;BlockChecklist(const class TR::BlockChecklist &);TR;BlockChecklist;1;0
(Arch: AMD64): Compiling ../../../../compiler/infra/HashTab.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/STLUtils.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/IGBase.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/IGNode.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/ILWalk.cpp
Optimization;Optimization(TR::OptimizationManager *);OMR;Optimization;0;0
Optimization;Optimization(TR::OptimizationManager *);TR;Optimization;0;0
Optimization;Optimization(const class OMR::Optimization &);OMR;Optimization;1;0
Optimization;Optimization(class TR::Optimization &&);TR;Optimization;1;0
TR_HasRandomGenerator;TR_HasRandomGenerator(class TR_HasRandomGenerator &&);;TR_HasRandomGenerator;1;0
TR_HasRandomGenerator;TR_HasRandomGenerator(TR::Compilation *);;TR_HasRandomGenerator;0;0
TR_HasRandomGenerator;TR_HasRandomGenerator(const class TR_HasRandomGenerator &);;TR_HasRandomGenerator;1;0
allocator;allocator();OMR;Optimization;0;0
anchorAllChildren;anchorAllChildren(TR::Node *,TR::TreeTop *);OMR;Optimization;0;0
anchorChildren;anchorChildren(TR::Node *,TR::TreeTop *,uint32_t,_Bool,TR::Node *);OMR;Optimization;0;0
anchorNode;anchorNode(TR::Node *,TR::TreeTop *);OMR;Optimization;0;0
cg;cg();OMR;Optimization;0;0
changeConditionalToUnconditional;changeConditionalToUnconditional(TR::Node *&,TR::Block *,int,TR::TreeTop *,const char *);OMR;Optimization;0;0
comp;comp();OMR;Optimization;0;0
fe;fe();OMR;Optimization;0;0
generateAnchor;generateAnchor(TR::Node *,TR::TreeTop *);OMR;Optimization;0;0
getDebug;getDebug();OMR;Optimization;0;0
getLastRun;getLastRun();OMR;Optimization;0;0
getSymRefTab;getSymRefTab();OMR;Optimization;0;0
id;id();OMR;Optimization;0;0
manager;manager();OMR;Optimization;0;0
name;name();OMR;Optimization;0;0
nodeIsOrderDependent;nodeIsOrderDependent(TR::Node *,uint32_t,_Bool);OMR;Optimization;0;0
operator delete;operator delete(void *,size_t);OMR;Optimization;0;0
operator new;operator new(size_t,TR::Allocator);OMR;Optimization;0;0
operator=;operator=(class TR_HasRandomGenerator &&);;TR_HasRandomGenerator;1;0
operator=;operator=(const class TR_HasRandomGenerator &);;TR_HasRandomGenerator;1;0
operator=;operator=(const class OMR::Optimization &);OMR;Optimization;1;0
operator=;operator=(const class TR::Optimization &);TR;Optimization;1;0
operator=;operator=(class TR::Optimization &&);TR;Optimization;1;0
optDetailString;optDetailString();OMR;Optimization;0;1
optimizer;optimizer();OMR;Optimization;0;0
perform;perform();OMR;Optimization;0;1
performOnBlock;performOnBlock(TR::Block *);OMR;Optimization;0;1
postPerform;postPerform();OMR;Optimization;0;1
postPerformOnBlocks;postPerformOnBlocks();OMR;Optimization;0;1
prePerform;prePerform();OMR;Optimization;0;1
prePerformOnBlocks;prePerformOnBlocks();OMR;Optimization;0;1
prepareToReplaceNode;prepareToReplaceNode(TR::Node *,TR::ILOpCodes);OMR;Optimization;0;0
prepareToReplaceNode;prepareToReplaceNode(TR::Node *);OMR;Optimization;0;0
prepareToStopUsingNode;prepareToStopUsingNode(TR::Node *,TR::TreeTop *,_Bool);OMR;Optimization;0;0
randomBoolean;randomBoolean(int32_t);;TR_HasRandomGenerator;0;0
randomGenerator;randomGenerator();;TR_HasRandomGenerator;0;0
randomInt;randomInt(int32_t,int32_t);;TR_HasRandomGenerator;0;0
randomInt;randomInt();;TR_HasRandomGenerator;0;0
randomInt;randomInt(int32_t);;TR_HasRandomGenerator;0;0
removeNode;removeNode(TR::Node *,TR::TreeTop *);OMR;Optimization;0;0
removeOrconvertIfToGoto;removeOrconvertIfToGoto(TR::Node *&,TR::Block *,int,TR::TreeTop *,TR::TreeTop *&,TR::TreeTop *&,const char *);OMR;Optimization;0;0
replaceNode;replaceNode(TR::Node *,TR::Node *,TR::TreeTop *,_Bool);OMR;Optimization;0;0
replaceNodeWithChild;replaceNodeWithChild(TR::Node *,TR::Node *,TR::TreeTop *,TR::Block *,_Bool);OMR;Optimization;0;0
requestDeadTreesCleanup;requestDeadTreesCleanup(_Bool,TR::Block *);OMR;Optimization;0;0
requestOpt;requestOpt(OMR::Optimizations,_Bool,TR::Block *);OMR;Optimization;0;0
self;self();OMR;Optimization;0;0
setTrace;setTrace(_Bool);OMR;Optimization;0;0
shouldPerform;shouldPerform();OMR;Optimization;0;1
trHeapMemory;trHeapMemory();OMR;Optimization;0;0
trMemory;trMemory();OMR;Optimization;0;0
trPersistentMemory;trPersistentMemory();OMR;Optimization;0;0
trStackMemory;trStackMemory();OMR;Optimization;0;0
trace;trace();OMR;Optimization;0;0
~Optimization;~Optimization();OMR;Optimization;0;1
~Optimization;~Optimization();TR;Optimization;0;1
~TR_HasRandomGenerator;~TR_HasRandomGenerator();;TR_HasRandomGenerator;1;0
AllBlockIterator;AllBlockIterator(const class TR::AllBlockIterator &);TR;AllBlockIterator;1;0
AllBlockIterator;AllBlockIterator(class TR::AllBlockIterator &&);TR;AllBlockIterator;1;0
AllBlockIterator;AllBlockIterator(TR::CFG *,TR::Compilation *,const char *);TR;AllBlockIterator;0;0
BlockIterator;BlockIterator(TR::Compilation *,const char *);TR;BlockIterator;0;0
BlockIterator;BlockIterator(const class TR::BlockIterator &);TR;BlockIterator;1;0
BlockIterator;BlockIterator(class TR::BlockIterator &&);TR;BlockIterator;1;0
currentBlock;currentBlock();TR;AllBlockIterator;0;0
isAt;isAt(TR::Block *);TR;AllBlockIterator;0;0
isLoggingEnabled;isLoggingEnabled();TR;BlockIterator;0;0
logCurrentLocation;logCurrentLocation();TR;AllBlockIterator;0;0
operator++;operator++();TR;AllBlockIterator;0;0
operator=;operator=(const class TR::BlockIterator &);TR;BlockIterator;1;0
operator=;operator=(class TR::BlockIterator &&);TR;BlockIterator;1;0
stepForward;stepForward();TR;AllBlockIterator;0;0
~BlockIterator;~BlockIterator();TR;BlockIterator;1;0
operator=;operator=(const class TR::NodeChecklist &);TR;NodeChecklist;1;0
NodeIterator;NodeIterator(const class TR::NodeIterator &);TR;NodeIterator;1;0
NodeIterator;NodeIterator(class TR::NodeIterator &&);TR;NodeIterator;1;0
NodeIterator;NodeIterator(TR::TreeTop *,TR::Compilation *);TR;NodeIterator;0;0
NodeIterator;NodeIterator(TR::TreeTop *,TR::Compilation *,const char *);TR;NodeIterator;0;0
NodeOccurrenceIterator;NodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *);TR;NodeOccurrenceIterator;0;0
NodeOccurrenceIterator;NodeOccurrenceIterator(const class TR::NodeOccurrenceIterator &);TR;NodeOccurrenceIterator;1;0
NodeOccurrenceIterator;NodeOccurrenceIterator(class TR::NodeOccurrenceIterator &&);TR;NodeOccurrenceIterator;1;0
PostorderNodeOccurrenceIterator;PostorderNodeOccurrenceIterator(class TR::PostorderNodeOccurrenceIterator &&);TR;PostorderNodeOccurrenceIterator;1;0
PostorderNodeOccurrenceIterator;PostorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *);TR;PostorderNodeOccurrenceIterator;0;0
PostorderNodeOccurrenceIterator;PostorderNodeOccurrenceIterator(const class TR::PostorderNodeOccurrenceIterator &);TR;PostorderNodeOccurrenceIterator;1;0
TreeTopIteratorImpl;TreeTopIteratorImpl(class TR::TreeTopIteratorImpl &&);TR;TreeTopIteratorImpl;1;0
TreeTopIteratorImpl;TreeTopIteratorImpl(const class TR::TreeTopIteratorImpl &);TR;TreeTopIteratorImpl;1;0
TreeTopIteratorImpl;TreeTopIteratorImpl(TR::TreeTop *,TR::Compilation *,const char *);TR;TreeTopIteratorImpl;0;0
alreadyPushedChildren;alreadyPushedChildren(TR::Node *);TR;PostorderNodeOccurrenceIterator;0;0
comp;comp();TR;TreeTopIteratorImpl;0;0
currentNode;currentNode();TR;TreeTopIteratorImpl;0;0
currentNode;currentNode();TR;NodeIterator;0;0
currentNode;currentNode();TR;NodeOccurrenceIterator;0;0
currentTree;currentTree();TR;TreeTopIteratorImpl;0;0
currentTree;currentTree();TR;NodeIterator;0;0
isAt;isAt(class TR::PreorderNodeIterator &);TR;TreeTopIteratorImpl;0;0
isAt;isAt(class TR::PreorderNodeIterator &);TR;NodeIterator;0;0
isAt;isAt(class TR::TreeTopIteratorImpl &);TR;TreeTopIteratorImpl;0;0
isAt;isAt(TR::TreeTop *);TR;TreeTopIteratorImpl;0;0
isAt;isAt(TR::TreeTop *);TR;NodeIterator;0;0
isAt;isAt(class TR::TreeTopIterator &);TR;NodeIterator;0;0
jumpTo;jumpTo(TR::TreeTop *);TR;TreeTopIteratorImpl;0;0
logCurrentLocation;logCurrentLocation();TR;TreeTopIteratorImpl;0;0
logCurrentLocation;logCurrentLocation();TR;NodeIterator;0;0
logCurrentLocation;logCurrentLocation();TR;NodeOccurrenceIterator;0;0
operator!=;operator!=(TR::TreeTop *);TR;TreeTopIteratorImpl;0;0
operator!=;operator!=(TR::TreeTop *);TR;NodeIterator;0;0
operator++;operator++();TR;TreeTopIteratorImpl;0;0
operator++;operator++();TR;PostorderNodeOccurrenceIterator;0;0
operator--;operator--();TR;TreeTopIteratorImpl;0;0
operator=;operator=(class TR::TreeTopIteratorImpl &&);TR;TreeTopIteratorImpl;1;0
operator=;operator=(const class TR::TreeTopIteratorImpl &);TR;TreeTopIteratorImpl;1;0
operator=;operator=(class TR::NodeIterator &&);TR;NodeIterator;1;0
operator==;operator==(TR::TreeTop *);TR;TreeTopIteratorImpl;0;0
operator==;operator==(TR::TreeTop *);TR;NodeIterator;0;0
pushLeftmost;pushLeftmost(TR::Node *);TR;PostorderNodeOccurrenceIterator;0;0
stackDepth;stackDepth();TR;NodeIterator;0;0
stepBackward;stepBackward();TR;TreeTopIteratorImpl;0;0
stepForward;stepForward();TR;TreeTopIteratorImpl;0;0
stepForward;stepForward();TR;PostorderNodeOccurrenceIterator;0;0
~NodeIterator;~NodeIterator();TR;NodeIterator;1;0
~NodeOccurrenceIterator;~NodeOccurrenceIterator();TR;NodeOccurrenceIterator;1;0
~TreeTopIteratorImpl;~TreeTopIteratorImpl();TR;TreeTopIteratorImpl;1;0
OptimizationManager;OptimizationManager(const class OMR::OptimizationManager &);OMR;OptimizationManager;1;0
OptimizationManager;OptimizationManager(TR::Optimizer *,OptimizationFactory,OMR::Optimizations,const struct OptimizationStrategy *);OMR;OptimizationManager;0;0
OptimizationManager;OptimizationManager(TR::Optimizer *,OptimizationFactory,OMR::Optimizations,const struct OptimizationStrategy *);TR;OptimizationManager;0;0
OptimizationManager;OptimizationManager(class TR::OptimizationManager &&);TR;OptimizationManager;1;0
allocator;allocator();OMR;OptimizationManager;0;0
cg;cg();OMR;OptimizationManager;0;0
comp;comp();OMR;OptimizationManager;0;0
enabled;enabled();OMR;OptimizationManager;0;0
factory;factory();OMR;OptimizationManager;0;0
fe;fe();OMR;OptimizationManager;0;0
flags;flags();OMR;OptimizationManager;0;0
getAlteredCode;getAlteredCode();OMR;OptimizationManager;0;0
getCanAddSymbolReference;getCanAddSymbolReference();OMR;OptimizationManager;0;0
getCannotOmitTrivialDefs;getCannotOmitTrivialDefs();OMR;OptimizationManager;0;0
getCheckStructure;getCheckStructure();OMR;OptimizationManager;0;0
getCheckTheCFG;getCheckTheCFG();OMR;OptimizationManager;0;0
getDebug;getDebug();OMR;OptimizationManager;0;0
getDoNotSetFrequencies;getDoNotSetFrequencies();OMR;OptimizationManager;0;0
getDoesNotRequireAliasSets;getDoesNotRequireAliasSets();OMR;OptimizationManager;0;0
getDoesNotRequireLoadsAsDefsInUseDefs;getDoesNotRequireLoadsAsDefsInUseDefs();OMR;OptimizationManager;0;0
getDoesNotRequireTreeDumps;getDoesNotRequireTreeDumps();OMR;OptimizationManager;0;0
getDumpStructure;getDumpStructure();OMR;OptimizationManager;0;0
getLastRun;getLastRun();OMR;OptimizationManager;0;0
getMaintainsUseDefInfo;getMaintainsUseDefInfo();OMR;OptimizationManager;0;0
getOptData;getOptData();OMR;OptimizationManager;0;0
getOptPolicy;getOptPolicy();OMR;OptimizationManager;0;0
getOptUtil;getOptUtil();OMR;OptimizationManager;0;0
getPerformOnlyOnEnabledBlocks;getPerformOnlyOnEnabledBlocks();OMR;OptimizationManager;0;0
getPrefersGlobalsUseDefInfo;getPrefersGlobalsUseDefInfo();OMR;OptimizationManager;0;0
getPrefersGlobalsValueNumbering;getPrefersGlobalsValueNumbering();OMR;OptimizationManager;0;0
getRequestedBlocks;getRequestedBlocks();OMR;OptimizationManager;0;0
getRequiresAccurateNodeCount;getRequiresAccurateNodeCount();OMR;OptimizationManager;0;0
getRequiresGlobalsUseDefInfo;getRequiresGlobalsUseDefInfo();OMR;OptimizationManager;0;0
getRequiresGlobalsValueNumbering;getRequiresGlobalsValueNumbering();OMR;OptimizationManager;0;0
getRequiresLocalsUseDefInfo;getRequiresLocalsUseDefInfo();OMR;OptimizationManager;0;0
getRequiresLocalsValueNumbering;getRequiresLocalsValueNumbering();OMR;OptimizationManager;0;0
getRequiresStructure;getRequiresStructure();OMR;OptimizationManager;0;0
getRequiresUseDefInfo;getRequiresUseDefInfo();OMR;OptimizationManager;0;0
getRequiresValueNumbering;getRequiresValueNumbering();OMR;OptimizationManager;0;0
getStronglyPrefersGlobalsValueNumbering;getStronglyPrefersGlobalsValueNumbering();OMR;OptimizationManager;0;0
getSupportsIlGenOptLevel;getSupportsIlGenOptLevel();OMR;OptimizationManager;0;0
getSymRefTab;getSymRefTab();OMR;OptimizationManager;0;0
getVerifyBlocks;getVerifyBlocks();OMR;OptimizationManager;0;0
getVerifyTrees;getVerifyTrees();OMR;OptimizationManager;0;0
groupOfOpts;groupOfOpts();OMR;OptimizationManager;0;0
id;id();OMR;OptimizationManager;0;0
incNumPassesCompleted;incNumPassesCompleted();OMR;OptimizationManager;0;0
name;name();OMR;OptimizationManager;0;0
numPassesCompleted;numPassesCompleted();OMR;OptimizationManager;0;0
operator delete;operator delete(void *,size_t);OMR;OptimizationManager;0;0
operator new;operator new(size_t,TR::Allocator);OMR;OptimizationManager;0;0
operator=;operator=(const class OMR::OptimizationManager &);OMR;OptimizationManager;1;0
operator=;operator=(const class TR::OptimizationManager &);TR;OptimizationManager;1;0
operator=;operator=(class TR::OptimizationManager &&);TR;OptimizationManager;1;0
optimizer;optimizer();OMR;OptimizationManager;0;0
performChecks;performChecks();OMR;OptimizationManager;0;0
requested;requested(TR::Block *);OMR;OptimizationManager;0;0
self;self();OMR;OptimizationManager;0;0
setAlteredCode;setAlteredCode(_Bool);OMR;OptimizationManager;0;0
setCanAddSymbolReference;setCanAddSymbolReference(_Bool);OMR;OptimizationManager;0;0
setCannotOmitTrivialDefs;setCannotOmitTrivialDefs(_Bool);OMR;OptimizationManager;0;0
setCheckStructure;setCheckStructure(_Bool);OMR;OptimizationManager;0;0
setCheckTheCFG;setCheckTheCFG(_Bool);OMR;OptimizationManager;0;0
setDoNotSetFrequencies;setDoNotSetFrequencies(_Bool);OMR;OptimizationManager;0;0
setDoesNotRequireAliasSets;setDoesNotRequireAliasSets(_Bool);OMR;OptimizationManager;0;0
setDoesNotRequireLoadsAsDefsInUseDefs;setDoesNotRequireLoadsAsDefsInUseDefs(_Bool);OMR;OptimizationManager;0;0
setDumpStructure;setDumpStructure(_Bool);OMR;OptimizationManager;0;0
setEnabled;setEnabled(_Bool);OMR;OptimizationManager;0;0
setFlags;setFlags(flags32_t);OMR;OptimizationManager;0;0
setLastRun;setLastRun(_Bool);OMR;OptimizationManager;0;0
setMaintainsUseDefInfo;setMaintainsUseDefInfo(_Bool);OMR;OptimizationManager;0;0
setNumPassesCompleted;setNumPassesCompleted(int32_t);OMR;OptimizationManager;0;0
setOptData;setOptData(TR::OptimizationData *);OMR;OptimizationManager;0;0
setOptPolicy;setOptPolicy(TR::OptimizationPolicy *);OMR;OptimizationManager;0;0
setOptUtil;setOptUtil(TR::OptimizationUtil *);OMR;OptimizationManager;0;0
setPerformOnlyOnEnabledBlocks;setPerformOnlyOnEnabledBlocks(_Bool);OMR;OptimizationManager;0;0
setPrefersGlobalsUseDefInfo;setPrefersGlobalsUseDefInfo(_Bool);OMR;OptimizationManager;0;0
setPrefersGlobalsValueNumbering;setPrefersGlobalsValueNumbering(_Bool);OMR;OptimizationManager;0;0
setRequested;setRequested(_Bool,TR::Block *);OMR;OptimizationManager;0;0
setRequiresAccurateNodeCount;setRequiresAccurateNodeCount(_Bool);OMR;OptimizationManager;0;0
setRequiresGlobalsUseDefInfo;setRequiresGlobalsUseDefInfo(_Bool);OMR;OptimizationManager;0;0
setRequiresGlobalsValueNumbering;setRequiresGlobalsValueNumbering(_Bool);OMR;OptimizationManager;0;0
setRequiresLocalsUseDefInfo;setRequiresLocalsUseDefInfo(_Bool);OMR;OptimizationManager;0;0
setRequiresLocalsValueNumbering;setRequiresLocalsValueNumbering(_Bool);OMR;OptimizationManager;0;0
setRequiresStructure;setRequiresStructure(_Bool);OMR;OptimizationManager;0;0
setStronglyPrefersGlobalsValueNumbering;setStronglyPrefersGlobalsValueNumbering(_Bool);OMR;OptimizationManager;0;0
setSupportsIlGenOptLevel;setSupportsIlGenOptLevel(_Bool);OMR;OptimizationManager;0;0
setTrace;setTrace(_Bool);OMR;OptimizationManager;0;0
setVerifyBlocks;setVerifyBlocks(_Bool);OMR;OptimizationManager;0;0
setVerifyTrees;setVerifyTrees(_Bool);OMR;OptimizationManager;0;0
trHeapMemory;trHeapMemory();OMR;OptimizationManager;0;0
trMemory;trMemory();OMR;OptimizationManager;0;0
trPersistentMemory;trPersistentMemory();OMR;OptimizationManager;0;0
trStackMemory;trStackMemory();OMR;OptimizationManager;0;0
trace;trace();OMR;OptimizationManager;0;0
~OptimizationManager;~OptimizationManager();OMR;OptimizationManager;0;1
~OptimizationManager;~OptimizationManager();TR;OptimizationManager;0;1
PostorderNodeIterator;PostorderNodeIterator(class TR::PostorderNodeIterator &&);TR;PostorderNodeIterator;1;0
PostorderNodeIterator;PostorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *);TR;PostorderNodeIterator;0;0
PostorderNodeIterator;PostorderNodeIterator(const class TR::PostorderNodeIterator &);TR;PostorderNodeIterator;1;0
alreadyBeenPushed;alreadyBeenPushed(TR::Node *);TR;PostorderNodeIterator;0;0
descend;descend();TR;PostorderNodeIterator;0;0
operator++;operator++();TR;PostorderNodeIterator;0;0
push;push(TR::Node *);TR;PostorderNodeIterator;0;0
stepForward;stepForward();TR;PostorderNodeIterator;0;0
PreorderNodeIterator;PreorderNodeIterator(const class TR::PreorderNodeIterator &);TR;PreorderNodeIterator;1;0
PreorderNodeIterator;PreorderNodeIterator(class TR::PreorderNodeIterator &&);TR;PreorderNodeIterator;1;0
PreorderNodeIterator;PreorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *);TR;PreorderNodeIterator;0;0
alreadyBeenPushed;alreadyBeenPushed(TR::Node *);TR;PreorderNodeIterator;0;0
operator++;operator++();TR;PreorderNodeIterator;0;0
push;push(TR::Node *);TR;PreorderNodeIterator;0;0
stepForward;stepForward();TR;PreorderNodeIterator;0;0
PreorderNodeOccurrenceIterator;PreorderNodeOccurrenceIterator(class TR::PreorderNodeOccurrenceIterator &&);TR;PreorderNodeOccurrenceIterator;1;0
PreorderNodeOccurrenceIterator;PreorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *);TR;PreorderNodeOccurrenceIterator;0;0
PreorderNodeOccurrenceIterator;PreorderNodeOccurrenceIterator(const class TR::PreorderNodeOccurrenceIterator &);TR;PreorderNodeOccurrenceIterator;1;0
alreadyPushedChildren;alreadyPushedChildren(TR::Node *);TR;PreorderNodeOccurrenceIterator;0;0
operator++;operator++();TR;PreorderNodeOccurrenceIterator;0;0
push;push(TR::Node *);TR;PreorderNodeOccurrenceIterator;0;0
stepForward;stepForward();TR;PreorderNodeOccurrenceIterator;0;0
ReversePostorderSnapshotBlockIterator;ReversePostorderSnapshotBlockIterator(const class TR::ReversePostorderSnapshotBlockIterator &);TR;ReversePostorderSnapshotBlockIterator;1;0
ReversePostorderSnapshotBlockIterator;ReversePostorderSnapshotBlockIterator(TR::Block *,TR::Compilation *,const char *);TR;ReversePostorderSnapshotBlockIterator;0;0
ReversePostorderSnapshotBlockIterator;ReversePostorderSnapshotBlockIterator(TR::CFG *,TR::Compilation *,const char *);TR;ReversePostorderSnapshotBlockIterator;0;0
ReversePostorderSnapshotBlockIterator;ReversePostorderSnapshotBlockIterator(class TR::ReversePostorderSnapshotBlockIterator &&);TR;ReversePostorderSnapshotBlockIterator;1;0
currentBlock;currentBlock();TR;ReversePostorderSnapshotBlockIterator;0;0
isAt;isAt(TR::Block *);TR;ReversePostorderSnapshotBlockIterator;0;0
isStepOperationFinished;isStepOperationFinished();TR;ReversePostorderSnapshotBlockIterator;0;0
logCurrentLocation;logCurrentLocation();TR;ReversePostorderSnapshotBlockIterator;0;0
operator++;operator++();TR;ReversePostorderSnapshotBlockIterator;0;0
operator--;operator--();TR;ReversePostorderSnapshotBlockIterator;0;0
operator=;operator=(class TR::ReversePostorderSnapshotBlockIterator &&);TR;ReversePostorderSnapshotBlockIterator;1;0
stepBackward;stepBackward();TR;ReversePostorderSnapshotBlockIterator;0;0
stepForward;stepForward();TR;ReversePostorderSnapshotBlockIterator;0;0
takeSnapshot;takeSnapshot(TR::Block *);TR;ReversePostorderSnapshotBlockIterator;0;0
visit;visit(TR::Block *,TR::BlockChecklist &);TR;ReversePostorderSnapshotBlockIterator;0;0
TreeTopIterator;TreeTopIterator(TR::TreeTop *,TR::Compilation *,const char *);TR;TreeTopIterator;0;0
stepBackward;stepBackward();TR;TreeTopIterator;0;0
stepForward;stepForward();TR;TreeTopIterator;0;0
TreeTopOrderExtendedBlockIterator;TreeTopOrderExtendedBlockIterator(class TR::TreeTopOrderExtendedBlockIterator &&);TR;TreeTopOrderExtendedBlockIterator;1;0
TreeTopOrderExtendedBlockIterator;TreeTopOrderExtendedBlockIterator(const class TR::TreeTopOrderExtendedBlockIterator &);TR;TreeTopOrderExtendedBlockIterator;1;0
TreeTopOrderExtendedBlockIterator;TreeTopOrderExtendedBlockIterator(TR::Compilation *,const char *);TR;TreeTopOrderExtendedBlockIterator;0;0
getFirst;getFirst();TR;TreeTopOrderExtendedBlockIterator;0;0
getLast;getLast();TR;TreeTopOrderExtendedBlockIterator;0;0
logCurrentLocation;logCurrentLocation();TR;TreeTopOrderExtendedBlockIterator;0;0
operator++;operator++();TR;TreeTopOrderExtendedBlockIterator;0;0
~TR_CFGIterator;~TR_CFGIterator();;TR_CFGIterator;1;0
TR_SuccessorIterator;TR_SuccessorIterator(class TR_SuccessorIterator &&);;TR_SuccessorIterator;1;0
TR_SuccessorIterator;TR_SuccessorIterator(const class TR_SuccessorIterator &);;TR_SuccessorIterator;1;0
(Arch: AMD64): Compiling ../../../../compiler/ras/ILValidationRules.cpp
~PostorderNodeOccurrenceIterator;~PostorderNodeOccurrenceIterator();TR;PostorderNodeOccurrenceIterator;1;0
MethodValidationRule;MethodValidationRule(class TR::MethodValidationRule &&);TR;MethodValidationRule;1;0
MethodValidationRule;MethodValidationRule(const class TR::MethodValidationRule &);TR;MethodValidationRule;1;0
MethodValidationRule;MethodValidationRule(TR::Compilation *,OMR::ILValidationRule);TR;MethodValidationRule;0;0
SoundnessRule;SoundnessRule(const class TR::SoundnessRule &);TR;SoundnessRule;1;0
SoundnessRule;SoundnessRule(TR::Compilation *);TR;SoundnessRule;0;0
SoundnessRule;SoundnessRule(class TR::SoundnessRule &&);TR;SoundnessRule;1;0
checkNodeSoundness;checkNodeSoundness(TR::TreeTop *,TR::Node *,TR::NodeChecklist &,TR::NodeChecklist &);TR;SoundnessRule;0;0
checkSoundnessCondition;checkSoundnessCondition(TR::TreeTop *,_Bool,const char *);TR;SoundnessRule;0;0
comp;comp();TR;MethodValidationRule;0;0
id;id();TR;MethodValidationRule;0;0
operator=;operator=(const class TR::MethodValidationRule &);TR;MethodValidationRule;1;0
operator=;operator=(class TR::MethodValidationRule &&);TR;MethodValidationRule;1;0
operator=;operator=(class TR::SoundnessRule &&);TR;SoundnessRule;1;0
operator=;operator=(const class TR::SoundnessRule &);TR;SoundnessRule;1;0
validate;validate(TR::ResolvedMethodSymbol *);TR;MethodValidationRule;0;1
validate;validate(TR::ResolvedMethodSymbol *);TR;SoundnessRule;0;1
~MethodValidationRule;~MethodValidationRule();TR;MethodValidationRule;1;0
~SoundnessRule;~SoundnessRule();TR;SoundnessRule;1;0
NodeValidationRule;NodeValidationRule(class TR::NodeValidationRule &&);TR;NodeValidationRule;1;0
NodeValidationRule;NodeValidationRule(const class TR::NodeValidationRule &);TR;NodeValidationRule;1;0
NodeValidationRule;NodeValidationRule(TR::Compilation *,OMR::ILValidationRule);TR;NodeValidationRule;0;0
ValidateChildCount;ValidateChildCount(class TR::ValidateChildCount &&);TR;ValidateChildCount;1;0
ValidateChildCount;ValidateChildCount(const class TR::ValidateChildCount &);TR;ValidateChildCount;1;0
ValidateChildCount;ValidateChildCount(TR::Compilation *);TR;ValidateChildCount;0;0
comp;comp();TR;NodeValidationRule;0;0
id;id();TR;NodeValidationRule;0;0
operator=;operator=(class TR::NodeValidationRule &&);TR;NodeValidationRule;1;0
operator=;operator=(const class TR::NodeValidationRule &);TR;NodeValidationRule;1;0
operator=;operator=(const class TR::ValidateChildCount &);TR;ValidateChildCount;1;0
operator=;operator=(class TR::ValidateChildCount &&);TR;ValidateChildCount;1;0
validate;validate(TR::Node *);TR;NodeValidationRule;0;1
validate;validate(TR::Node *);TR;ValidateChildCount;0;1
~NodeValidationRule;~NodeValidationRule();TR;NodeValidationRule;1;0
~ValidateChildCount;~ValidateChildCount();TR;ValidateChildCount;1;0
ValidateChildTypes;ValidateChildTypes(class TR::ValidateChildTypes &&);TR;ValidateChildTypes;1;0
ValidateChildTypes;ValidateChildTypes(TR::Compilation *);TR;ValidateChildTypes;0;0
ValidateChildTypes;ValidateChildTypes(const class TR::ValidateChildTypes &);TR;ValidateChildTypes;1;0
operator=;operator=(const class TR::ValidateChildTypes &);TR;ValidateChildTypes;1;0
operator=;operator=(class TR::ValidateChildTypes &&);TR;ValidateChildTypes;1;0
validate;validate(TR::Node *);TR;ValidateChildTypes;0;1
~ValidateChildTypes;~ValidateChildTypes();TR;ValidateChildTypes;1;0
ValidateLivenessBoundaries;ValidateLivenessBoundaries(class TR::ValidateLivenessBoundaries &&);TR;ValidateLivenessBoundaries;1;0
ValidateLivenessBoundaries;ValidateLivenessBoundaries(const class TR::ValidateLivenessBoundaries &);TR;ValidateLivenessBoundaries;1;0
ValidateLivenessBoundaries;ValidateLivenessBoundaries(TR::Compilation *);TR;ValidateLivenessBoundaries;0;0
operator=;operator=(class TR::ValidateLivenessBoundaries &&);TR;ValidateLivenessBoundaries;1;0
operator=;operator=(const class TR::ValidateLivenessBoundaries &);TR;ValidateLivenessBoundaries;1;0
updateNodeState;updateNodeState(TR::Node *,TR::NodeSideTable<TR::NodeState> &,TR::LiveNodeWindow &);TR;ValidateLivenessBoundaries;0;0
validate;validate(TR::ResolvedMethodSymbol *);TR;ValidateLivenessBoundaries;0;1
validateEndOfExtendedBlockBoundary;validateEndOfExtendedBlockBoundary(TR::Node *,class TR::LiveNodeWindow &);TR;ValidateLivenessBoundaries;0;0
~ValidateLivenessBoundaries;~ValidateLivenessBoundaries();TR;ValidateLivenessBoundaries;1;0
BlockValidationRule;BlockValidationRule(class TR::BlockValidationRule &&);TR;BlockValidationRule;1;0
BlockValidationRule;BlockValidationRule(TR::Compilation *,OMR::ILValidationRule);TR;BlockValidationRule;0;0
BlockValidationRule;BlockValidationRule(const class TR::BlockValidationRule &);TR;BlockValidationRule;1;0
ValidateNodeRefCountWithinBlock;ValidateNodeRefCountWithinBlock(class TR::ValidateNodeRefCountWithinBlock &&);TR;ValidateNodeRefCountWithinBlock;1;0
ValidateNodeRefCountWithinBlock;ValidateNodeRefCountWithinBlock(const class TR::ValidateNodeRefCountWithinBlock &);TR;ValidateNodeRefCountWithinBlock;1;0
ValidateNodeRefCountWithinBlock;ValidateNodeRefCountWithinBlock(TR::Compilation *);TR;ValidateNodeRefCountWithinBlock;0;0
comp;comp();TR;BlockValidationRule;0;0
id;id();TR;BlockValidationRule;0;0
operator=;operator=(const class TR::BlockValidationRule &);TR;BlockValidationRule;1;0
operator=;operator=(class TR::BlockValidationRule &&);TR;BlockValidationRule;1;0
operator=;operator=(class TR::ValidateNodeRefCountWithinBlock &&);TR;ValidateNodeRefCountWithinBlock;1;0
operator=;operator=(const class TR::ValidateNodeRefCountWithinBlock &);TR;ValidateNodeRefCountWithinBlock;1;0
validate;validate(TR::TreeTop *,TR::TreeTop *);TR;BlockValidationRule;0;1
validate;validate(TR::TreeTop *,TR::TreeTop *);TR;ValidateNodeRefCountWithinBlock;0;1
validateRefCountPass1;validateRefCountPass1(TR::Node *);TR;ValidateNodeRefCountWithinBlock;0;0
validateRefCountPass2;validateRefCountPass2(TR::Node *);TR;ValidateNodeRefCountWithinBlock;0;0
~BlockValidationRule;~BlockValidationRule();TR;BlockValidationRule;1;0
~ValidateNodeRefCountWithinBlock;~ValidateNodeRefCountWithinBlock();TR;ValidateNodeRefCountWithinBlock;1;0
Validate_ireturnReturnType;Validate_ireturnReturnType(const class TR::Validate_ireturnReturnType &);TR;Validate_ireturnReturnType;1;0
Validate_ireturnReturnType;Validate_ireturnReturnType(TR::Compilation *);TR;Validate_ireturnReturnType;0;0
Validate_ireturnReturnType;Validate_ireturnReturnType(class TR::Validate_ireturnReturnType &&);TR;Validate_ireturnReturnType;1;0
operator=;operator=(const class TR::Validate_ireturnReturnType &);TR;Validate_ireturnReturnType;1;0
operator=;operator=(class TR::Validate_ireturnReturnType &&);TR;Validate_ireturnReturnType;1;0
validate;validate(TR::Node *);TR;Validate_ireturnReturnType;0;1
~Validate_ireturnReturnType;~Validate_ireturnReturnType();TR;Validate_ireturnReturnType;1;0
(Arch: AMD64): Compiling ../../../../compiler/ras/ILValidationUtils.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/ILValidator.cpp
~PreorderNodeIterator;~PreorderNodeIterator();TR;PreorderNodeIterator;1;0
(Arch: AMD64): Compiling ../../../../compiler/infra/InterferenceGraph.cpp
TR_IGBase;TR_IGBase(class TR_IGBase &&);;TR_IGBase;1;0
TR_IGBase;TR_IGBase();;TR_IGBase;0;0
TR_IGBase;TR_IGBase(const class TR_IGBase &);;TR_IGBase;1;0
TR_InterferenceGraph;TR_InterferenceGraph(TR::Compilation *);;TR_InterferenceGraph;0;0
TR_InterferenceGraph;TR_InterferenceGraph(class TR_InterferenceGraph &&);;TR_InterferenceGraph;1;0
TR_InterferenceGraph;TR_InterferenceGraph(TR::Compilation *,int32_t);;TR_InterferenceGraph;0;0
TR_InterferenceGraph;TR_InterferenceGraph(const class TR_InterferenceGraph &);;TR_InterferenceGraph;1;0
add;add(void *,_Bool);;TR_InterferenceGraph;0;0
addIGNodeToEntityHash;addIGNodeToEntityHash(class TR_IGNode *);;TR_InterferenceGraph;0;0
addInterferenceBetween;addInterferenceBetween(class TR_IGNode *,class TR_IGNode *);;TR_InterferenceGraph;0;0
addInterferenceBetween;addInterferenceBetween(void *,void *);;TR_InterferenceGraph;0;0
comp;comp();;TR_InterferenceGraph;0;0
doColouring;doColouring(IGNodeColour);;TR_InterferenceGraph;0;0
dumpIG;dumpIG(char *);;TR_InterferenceGraph;0;0
entityHashBucket;entityHashBucket(void *);;TR_InterferenceGraph;0;0
findMaxDegree;findMaxDegree();;TR_InterferenceGraph;0;0
findMinimumChromaticNumber;findMinimumChromaticNumber();;TR_InterferenceGraph;0;0
getIGNodeForEntity;getIGNodeForEntity(void *);;TR_InterferenceGraph;0;0
getInterferenceMatrix;getInterferenceMatrix();;TR_IGBase;0;0
getNodePairToBVIndex;getNodePairToBVIndex(IGNodeIndex,IGNodeIndex);;TR_IGBase;0;0
getNodeStack;getNodeStack();;TR_InterferenceGraph;0;0
getNodeTable;getNodeTable(IGNodeIndex);;TR_InterferenceGraph;0;0
getNumColours;getNumColours();;TR_IGBase;0;0
getNumNodes;getNumNodes();;TR_IGBase;0;0
getNumberOfColoursUsedToColour;getNumberOfColoursUsedToColour();;TR_IGBase;0;0
getOrderedNodePairToBVIndex;getOrderedNodePairToBVIndex(IGNodeIndex,IGNodeIndex);;TR_IGBase;0;0
hasInterference;hasInterference(void *,void *);;TR_InterferenceGraph;0;0
hasInterference;hasInterference(class TR_IGNode *,class TR_IGNode *);;TR_InterferenceGraph;0;0
incNumNodes;incNumNodes();;TR_IGBase;0;0
isEmpty;isEmpty();;TR_IGBase;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_IGBase;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_IGBase;0;0
operator delete;operator delete(void *,TR::Region &);;TR_IGBase;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IGBase;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IGBase;0;0
operator delete;operator delete(void *,size_t);;TR_IGBase;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_IGBase;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_IGBase;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_IGBase;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IGBase;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IGBase;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_IGBase;0;0
operator new;operator new(size_t,TR::Region &);;TR_IGBase;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_IGBase;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IGBase;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_IGBase;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_IGBase;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IGBase;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_IGBase;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_IGBase;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_IGBase;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_IGBase;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IGBase;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IGBase;0;0
operator=;operator=(class TR_IGBase &&);;TR_IGBase;1;0
operator=;operator=(const class TR_IGBase &);;TR_IGBase;1;0
operator=;operator=(class TR_InterferenceGraph &&);;TR_InterferenceGraph;1;0
operator=;operator=(const class TR_InterferenceGraph &);;TR_InterferenceGraph;1;0
partitionNodesIntoDegreeSets;partitionNodesIntoDegreeSets(CS2::ABitVector<TR::Allocator> &,CS2::ABitVector<TR::Allocator> &,CS2::ABitVector<TR::Allocator> &);;TR_InterferenceGraph;0;0
removeAllInterferences;removeAllInterferences(void *);;TR_InterferenceGraph;0;0
removeInterferenceBetween;removeInterferenceBetween(class TR_IGNode *,class TR_IGNode *);;TR_InterferenceGraph;0;0
removeInterferenceBetween;removeInterferenceBetween(void *,void *);;TR_InterferenceGraph;0;0
select;select();;TR_InterferenceGraph;0;1
setInterferenceMatrix;setInterferenceMatrix(class TR_BitVector *);;TR_IGBase;0;0
setNodeStack;setNodeStack(TR_Stack<class TR_IGNode *> *);;TR_InterferenceGraph;0;0
setNumColours;setNumColours(IGNodeColour);;TR_IGBase;0;0
setNumNodes;setNumNodes(IGNodeIndex);;TR_IGBase;0;0
setNumberOfColoursUsedToColour;setNumberOfColoursUsedToColour(IGNodeColour);;TR_IGBase;0;0
simplify;simplify();;TR_InterferenceGraph;0;1
trHeapMemory;trHeapMemory();;TR_InterferenceGraph;0;0
trMemory;trMemory();;TR_InterferenceGraph;0;0
trStackMemory;trStackMemory();;TR_InterferenceGraph;0;0
virtualRemoveEntityFromIG;virtualRemoveEntityFromIG(void *);;TR_InterferenceGraph;0;0
virtualRemoveNodeFromIG;virtualRemoveNodeFromIG(class TR_IGNode *);;TR_InterferenceGraph;0;0
~TR_IGBase;~TR_IGBase();;TR_IGBase;1;0
~TR_InterferenceGraph;~TR_InterferenceGraph();;TR_InterferenceGraph;1;0
(Arch: AMD64): Compiling ../../../../compiler/infra/OMRMonitor.cpp
Monitor;Monitor(const class TR::Monitor &);TR;Monitor;1;0
MonitorTable;MonitorTable(class OMR::MonitorTable &&);OMR;MonitorTable;1;0
MonitorTable;MonitorTable();OMR;MonitorTable;1;0
MonitorTable;MonitorTable();TR;MonitorTable;1;0
MonitorTable;MonitorTable(const class OMR::MonitorTable &);OMR;MonitorTable;1;0
create;create(char *);OMR;MonitorTable;0;0
free;free();OMR;MonitorTable;0;0
get;get();OMR;MonitorTable;0;0
getMemoryAllocMonitor;getMemoryAllocMonitor();OMR;MonitorTable;0;0
getScratchMemoryPoolMonitor;getScratchMemoryPoolMonitor();OMR;MonitorTable;0;0
removeAndDestroy;removeAndDestroy(TR::Monitor *);OMR;MonitorTable;0;0
self;self();OMR;MonitorTable;0;0
(Arch: AMD64): Compiling ../../../../compiler/infra/OMRMonitorTable.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/Random.cpp
RandomExercizer;RandomExercizer(const class RandomExercizer &);;RandomExercizer;1;0
RandomExercizer;RandomExercizer(class RandomExercizer &&);;RandomExercizer;1;0
RandomExercizer;RandomExercizer(TR::Compilation *);;RandomExercizer;0;0
comp;comp();;RandomExercizer;0;0
(Arch: AMD64): Compiling ../../../../compiler/infra/Timer.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/TreeServices.cpp
TR_AnythingPattern;TR_AnythingPattern(class TR_AnythingPattern &&);;TR_AnythingPattern;1;0
TR_AnythingPattern;TR_AnythingPattern(const class TR_AnythingPattern &);;TR_AnythingPattern;1;0
TR_AnythingPattern;TR_AnythingPattern(class TR_Pattern *);;TR_AnythingPattern;0;0
TR_Pattern;TR_Pattern(class TR_Pattern &&);;TR_Pattern;1;0
TR_Pattern;TR_Pattern(const class TR_Pattern &);;TR_Pattern;1;0
TR_Pattern;TR_Pattern(class TR_Pattern *);;TR_Pattern;0;0
getName;getName();;TR_Pattern;0;1
getName;getName();;TR_AnythingPattern;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_Pattern;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_Pattern;0;0
matches;matches(TR::Node *,TR::Node **,TR::Compilation *);;TR_Pattern;0;0
matches;matches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_Pattern;0;0
operator delete;operator delete(void *,TR::Region &);;TR_Pattern;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Pattern;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Pattern;0;0
operator delete;operator delete(void *,size_t);;TR_Pattern;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_Pattern;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_Pattern;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_Pattern;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Pattern;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Pattern;0;0
operator new;operator new(size_t,TR::Region &);;TR_Pattern;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_Pattern;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Pattern;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_Pattern;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Pattern;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_Pattern;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Pattern;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_Pattern;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_Pattern;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Pattern;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Pattern;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_Pattern;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Pattern;0;0
operator=;operator=(const class TR_Pattern &);;TR_Pattern;1;0
operator=;operator=(class TR_Pattern &&);;TR_Pattern;1;0
operator=;operator=(class TR_AnythingPattern &&);;TR_AnythingPattern;1;0
operator=;operator=(const class TR_AnythingPattern &);;TR_AnythingPattern;1;0
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_Pattern;0;1
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_AnythingPattern;0;1
tracePattern;tracePattern(TR::Node *);;TR_Pattern;0;1
~TR_AnythingPattern;~TR_AnythingPattern();;TR_AnythingPattern;1;0
~TR_Pattern;~TR_Pattern();;TR_Pattern;1;0
TR_ChildPattern;TR_ChildPattern(const class TR_ChildPattern &);;TR_ChildPattern;1;0
TR_ChildPattern;TR_ChildPattern(class TR_ChildPattern &&);;TR_ChildPattern;1;0
TR_ChildPattern;TR_ChildPattern(int32_t,class TR_Pattern *,class TR_Pattern *);;TR_ChildPattern;0;0
getName;getName();;TR_ChildPattern;0;1
operator=;operator=(class TR_ChildPattern &&);;TR_ChildPattern;1;0
operator=;operator=(const class TR_ChildPattern &);;TR_ChildPattern;1;0
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_ChildPattern;0;1
~TR_ChildPattern;~TR_ChildPattern();;TR_ChildPattern;1;0
TR_ChildrenPattern;TR_ChildrenPattern(class TR_ChildrenPattern &&);;TR_ChildrenPattern;1;0
TR_ChildrenPattern;TR_ChildrenPattern(const class TR_ChildrenPattern &);;TR_ChildrenPattern;1;0
TR_ChildrenPattern;TR_ChildrenPattern(class TR_Pattern *,class TR_Pattern *,class TR_Pattern *);;TR_ChildrenPattern;0;0
TR_CommutativePattern;TR_CommutativePattern(class TR_CommutativePattern &&);;TR_CommutativePattern;1;0
TR_CommutativePattern;TR_CommutativePattern(const class TR_CommutativePattern &);;TR_CommutativePattern;1;0
TR_CommutativePattern;TR_CommutativePattern(class TR_Pattern *,class TR_Pattern *,class TR_Pattern *);;TR_CommutativePattern;0;0
getName;getName();;TR_ChildrenPattern;0;1
getName;getName();;TR_CommutativePattern;0;1
operator=;operator=(class TR_ChildrenPattern &&);;TR_ChildrenPattern;1;0
operator=;operator=(const class TR_ChildrenPattern &);;TR_ChildrenPattern;1;0
operator=;operator=(class TR_CommutativePattern &&);;TR_CommutativePattern;1;0
operator=;operator=(const class TR_CommutativePattern &);;TR_CommutativePattern;1;0
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_ChildrenPattern;0;1
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_CommutativePattern;0;1
~TR_ChildrenPattern;~TR_ChildrenPattern();;TR_ChildrenPattern;1;0
~TR_CommutativePattern;~TR_CommutativePattern();;TR_CommutativePattern;1;0
TR_ChoicePattern;TR_ChoicePattern(const class TR_ChoicePattern &);;TR_ChoicePattern;1;0
TR_ChoicePattern;TR_ChoicePattern(class TR_ChoicePattern &&);;TR_ChoicePattern;1;0
TR_ChoicePattern;TR_ChoicePattern(class TR_Pattern *,class TR_Pattern *,class TR_Pattern *);;TR_ChoicePattern;0;0
getName;getName();;TR_ChoicePattern;0;1
operator=;operator=(class TR_ChoicePattern &&);;TR_ChoicePattern;1;0
operator=;operator=(const class TR_ChoicePattern &);;TR_ChoicePattern;1;0
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_ChoicePattern;0;1
~TR_ChoicePattern;~TR_ChoicePattern();;TR_ChoicePattern;1;0
TR_IConstPattern;TR_IConstPattern(class TR_IConstPattern &&);;TR_IConstPattern;1;0
TR_IConstPattern;TR_IConstPattern(const class TR_IConstPattern &);;TR_IConstPattern;1;0
TR_IConstPattern;TR_IConstPattern(int32_t,class TR_Pattern *);;TR_IConstPattern;0;0
TR_OpCodePattern;TR_OpCodePattern(const class TR_OpCodePattern &);;TR_OpCodePattern;1;0
TR_OpCodePattern;TR_OpCodePattern(class TR_OpCodePattern &&);;TR_OpCodePattern;1;0
TR_OpCodePattern;TR_OpCodePattern(TR::ILOpCodes,class TR_Pattern *);;TR_OpCodePattern;0;0
getName;getName();;TR_OpCodePattern;0;1
getName;getName();;TR_IConstPattern;0;1
operator=;operator=(class TR_OpCodePattern &&);;TR_OpCodePattern;1;0
operator=;operator=(const class TR_OpCodePattern &);;TR_OpCodePattern;1;0
operator=;operator=(class TR_IConstPattern &&);;TR_IConstPattern;1;0
operator=;operator=(const class TR_IConstPattern &);;TR_IConstPattern;1;0
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_OpCodePattern;0;1
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_IConstPattern;0;1
tracePattern;tracePattern(TR::Node *);;TR_OpCodePattern;0;1
~TR_IConstPattern;~TR_IConstPattern();;TR_IConstPattern;1;0
~TR_OpCodePattern;~TR_OpCodePattern();;TR_OpCodePattern;1;0
TR_LConstPattern;TR_LConstPattern(class TR_LConstPattern &&);;TR_LConstPattern;1;0
TR_LConstPattern;TR_LConstPattern(const class TR_LConstPattern &);;TR_LConstPattern;1;0
TR_LConstPattern;TR_LConstPattern(int64_t,class TR_Pattern *);;TR_LConstPattern;0;0
getName;getName();;TR_LConstPattern;0;1
operator=;operator=(class TR_LConstPattern &&);;TR_LConstPattern;1;0
operator=;operator=(const class TR_LConstPattern &);;TR_LConstPattern;1;0
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_LConstPattern;0;1
~TR_LConstPattern;~TR_LConstPattern();;TR_LConstPattern;1;0
TR_NoRegisterPattern;TR_NoRegisterPattern(const class TR_NoRegisterPattern &);;TR_NoRegisterPattern;1;0
TR_NoRegisterPattern;TR_NoRegisterPattern(class TR_NoRegisterPattern &&);;TR_NoRegisterPattern;1;0
TR_NoRegisterPattern;TR_NoRegisterPattern(class TR_Pattern *);;TR_NoRegisterPattern;0;0
getName;getName();;TR_NoRegisterPattern;0;1
operator=;operator=(class TR_NoRegisterPattern &&);;TR_NoRegisterPattern;1;0
operator=;operator=(const class TR_NoRegisterPattern &);;TR_NoRegisterPattern;1;0
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_NoRegisterPattern;0;1
~TR_NoRegisterPattern;~TR_NoRegisterPattern();;TR_NoRegisterPattern;1;0
TR_UnifyPattern;TR_UnifyPattern(class TR_UnifyPattern &&);;TR_UnifyPattern;1;0
TR_UnifyPattern;TR_UnifyPattern(const class TR_UnifyPattern &);;TR_UnifyPattern;1;0
TR_UnifyPattern;TR_UnifyPattern(class TR_Unification::TR_Index,class TR_Pattern *);;TR_UnifyPattern;0;0
getName;getName();;TR_UnifyPattern;0;1
operator=;operator=(class TR_UnifyPattern &&);;TR_UnifyPattern;1;0
operator=;operator=(const class TR_UnifyPattern &);;TR_UnifyPattern;1;0
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_UnifyPattern;0;1
~TR_UnifyPattern;~TR_UnifyPattern();;TR_UnifyPattern;1;0
(Arch: AMD64): Compiling ../../../../compiler/infra/OMRCfg.cpp
CFGEdge;CFGEdge(const class TR::CFGEdge &);TR;CFGEdge;1;0
CFGEdge;CFGEdge(class TR::CFGEdge &&);TR;CFGEdge;1;0
VPArrayInfo;VPArrayInfo(int32_t,int32_t,int32_t);TR;VPArrayInfo;0;0
VPConstraint;VPConstraint(class TR::VPConstraint &&);TR;VPConstraint;1;0
VPConstraint;VPConstraint(const class TR::VPConstraint &);TR;VPConstraint;1;0
VPConstraint;VPConstraint(int32_t);TR;VPConstraint;0;0
add;add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPConstraint;0;1
asArrayInfo;asArrayInfo();TR;VPConstraint;0;1
asArrayInfo;asArrayInfo();TR;VPArrayInfo;0;1
asBCDSign;asBCDSign();TR;VPConstraint;0;1
asBCDValue;asBCDValue();TR;VPConstraint;0;1
asClass;asClass();TR;VPConstraint;0;1
asClassPresence;asClassPresence();TR;VPConstraint;0;1
asClassType;asClassType();TR;VPConstraint;0;1
asConstString;asConstString();TR;VPConstraint;0;1
asEqual;asEqual();TR;VPConstraint;0;1
asFixedClass;asFixedClass();TR;VPConstraint;0;1
asGreaterThanOrEqual;asGreaterThanOrEqual();TR;VPConstraint;0;1
asIntConst;asIntConst();TR;VPConstraint;0;1
asIntConstraint;asIntConstraint();TR;VPConstraint;0;1
asIntRange;asIntRange();TR;VPConstraint;0;1
asKnownObject;asKnownObject();TR;VPConstraint;0;1
asLessThanOrEqual;asLessThanOrEqual();TR;VPConstraint;0;1
asLongConst;asLongConst();TR;VPConstraint;0;1
asLongConstraint;asLongConstraint();TR;VPConstraint;0;1
asLongRange;asLongRange();TR;VPConstraint;0;1
asMergedConstraints;asMergedConstraints();TR;VPConstraint;0;1
asMergedIntConstraints;asMergedIntConstraints();TR;VPConstraint;0;1
asMergedLongConstraints;asMergedLongConstraints();TR;VPConstraint;0;1
asMergedShortConstraints;asMergedShortConstraints();TR;VPConstraint;0;1
asNonNullObject;asNonNullObject();TR;VPConstraint;0;1
asNotEqual;asNotEqual();TR;VPConstraint;0;1
asNullObject;asNullObject();TR;VPConstraint;0;1
asObjectLocation;asObjectLocation();TR;VPConstraint;0;1
asPreexistentObject;asPreexistentObject();TR;VPConstraint;0;1
asRelation;asRelation();TR;VPConstraint;0;1
asResolvedClass;asResolvedClass();TR;VPConstraint;0;1
asShortConst;asShortConst();TR;VPConstraint;0;1
asShortConstraint;asShortConstraint();TR;VPConstraint;0;1
asShortRange;asShortRange();TR;VPConstraint;0;1
asUnreachablePath;asUnreachablePath();TR;VPConstraint;0;1
asUnresolvedClass;asUnresolvedClass();TR;VPConstraint;0;1
asVPSync;asVPSync();TR;VPConstraint;0;1
canOverflow;canOverflow();TR;VPConstraint;0;1
create;create(OMR::ValuePropagation *,const char *,int32_t,class TR_ResolvedMethod *,_Bool);TR;VPConstraint;0;0
create;create(OMR::ValuePropagation *,int32_t,int32_t,int32_t);TR;VPArrayInfo;0;0
create;create(OMR::ValuePropagation *,char *);TR;VPArrayInfo;0;0
elementSize;elementSize();TR;VPArrayInfo;0;0
getArrayInfo;getArrayInfo();TR;VPConstraint;0;1
getArrayInfo;getArrayInfo();TR;VPArrayInfo;0;1
getClass;getClass();TR;VPConstraint;0;1
getClassPresence;getClassPresence();TR;VPConstraint;0;1
getClassSignature;getClassSignature(int32_t &);TR;VPConstraint;0;1
getClassType;getClassType();TR;VPConstraint;0;1
getConstString;getConstString();TR;VPConstraint;0;1
getHighInt;getHighInt();TR;VPConstraint;0;1
getHighLong;getHighLong();TR;VPConstraint;0;1
getHighShort;getHighShort();TR;VPConstraint;0;1
getKnownObject;getKnownObject();TR;VPConstraint;0;1
getLowInt;getLowInt();TR;VPConstraint;0;1
getLowLong;getLowLong();TR;VPConstraint;0;1
getLowShort;getLowShort();TR;VPConstraint;0;1
getObjectLocation;getObjectLocation();TR;VPConstraint;0;1
getPrecision;getPrecision();TR;VPConstraint;0;1
getPreexistence;getPreexistence();TR;VPConstraint;0;1
getUnsignedHighInt;getUnsignedHighInt();TR;VPConstraint;0;1
getUnsignedHighLong;getUnsignedHighLong();TR;VPConstraint;0;1
getUnsignedHighShort;getUnsignedHighShort();TR;VPConstraint;0;1
getUnsignedLowInt;getUnsignedLowInt();TR;VPConstraint;0;1
getUnsignedLowLong;getUnsignedLowLong();TR;VPConstraint;0;1
getUnsignedLowShort;getUnsignedLowShort();TR;VPConstraint;0;1
hasArtificialIncrement;hasArtificialIncrement();TR;VPConstraint;0;0
highBound;highBound();TR;VPArrayInfo;0;0
intersect;intersect(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstraint;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstraint;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPArrayInfo;0;1
isClassObject;isClassObject();TR;VPConstraint;0;1
isConstString;isConstString();TR;VPConstraint;0;1
isFixedClass;isFixedClass();TR;VPConstraint;0;1
isHeapObject;isHeapObject();TR;VPConstraint;0;1
isJ9ClassObject;isJ9ClassObject();TR;VPConstraint;0;1
isJavaLangClassObject;isJavaLangClassObject();TR;VPConstraint;0;1
isNonNullObject;isNonNullObject();TR;VPConstraint;0;1
isNullObject;isNullObject();TR;VPConstraint;0;1
isPreexistentObject;isPreexistentObject();TR;VPConstraint;0;1
isSpecialClass;isSpecialClass(uintptrj_t);TR;VPConstraint;0;0
isStackObject;isStackObject();TR;VPConstraint;0;1
isUnsigned;isUnsigned();TR;VPConstraint;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TR;VPConstraint;0;0
jitPersistentFree;jitPersistentFree(void *);TR;VPConstraint;0;0
lowBound;lowBound();TR;VPArrayInfo;0;0
merge;merge(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstraint;0;0
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstraint;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPArrayInfo;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstraint;0;1
mustBeEqual;mustBeEqual();TR;VPConstraint;0;1
mustBeGreaterThan;mustBeGreaterThan();TR;VPConstraint;0;1
mustBeGreaterThanOrEqual;mustBeGreaterThanOrEqual();TR;VPConstraint;0;1
mustBeLessThan;mustBeLessThan();TR;VPConstraint;0;1
mustBeLessThan;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstraint;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstraint;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual();TR;VPConstraint;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstraint;0;1
mustBeNotEqual;mustBeNotEqual();TR;VPConstraint;0;1
name;name();TR;VPConstraint;0;1
name;name();TR;VPArrayInfo;0;1
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TR;VPConstraint;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;VPConstraint;0;0
operator delete;operator delete(void *,TR::Region &);TR;VPConstraint;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;VPConstraint;0;0
operator delete;operator delete(void *,size_t);TR;VPConstraint;0;0
operator delete[];operator delete[](void *,TR::Region &);TR;VPConstraint;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;VPConstraint;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TR;VPConstraint;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TR;VPConstraint;0;0
operator new;operator new(size_t,TR::Region &);TR;VPConstraint;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;VPConstraint;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TR;VPConstraint;0;0
operator new[];operator new[](size_t,TR::Region &);TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TR;VPConstraint;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;VPConstraint;0;0
operator=;operator=(const class TR::VPConstraint &);TR;VPConstraint;1;0
operator=;operator=(class TR::VPConstraint &&);TR;VPConstraint;1;0
operator=;operator=(class TR::VPArrayInfo &&);TR;VPArrayInfo;1;0
operator=;operator=(const class TR::VPArrayInfo &);TR;VPArrayInfo;1;0
print;print(TR::Compilation *,TR::FILE *,int32_t);TR;VPConstraint;0;1
print;print(TR::Compilation *,TR::FILE *);TR;VPConstraint;0;1
print;print(TR::Compilation *,TR::FILE *);TR;VPArrayInfo;0;1
print;print(OMR::ValuePropagation *);TR;VPConstraint;0;0
priority;priority();TR;VPConstraint;0;0
setCanOverflow;setCanOverflow(enum TR_YesNoMaybe);TR;VPConstraint;0;1
setHasArtificialIncrement;setHasArtificialIncrement();TR;VPConstraint;0;0
setIsUnsigned;setIsUnsigned(_Bool);TR;VPConstraint;0;0
subtract;subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPConstraint;0;1
~VPArrayInfo;~VPArrayInfo();TR;VPArrayInfo;1;0
~VPConstraint;~VPConstraint();TR;VPConstraint;1;0
VPClass;VPClass(TR::VPClassType *,TR::VPClassPresence *,TR::VPPreexistentObject *,TR::VPArrayInfo *,TR::VPObjectLocation *);TR;VPClass;0;0
asClass;asClass();TR;VPClass;0;1
create;create(OMR::ValuePropagation *,TR::VPClassType *,TR::VPClassPresence *,TR::VPPreexistentObject *,TR::VPArrayInfo *,TR::VPObjectLocation *);TR;VPClass;0;0
getArrayInfo;getArrayInfo();TR;VPClass;0;1
getClass;getClass();TR;VPClass;0;1
getClassPresence;getClassPresence();TR;VPClass;0;1
getClassSignature;getClassSignature(int32_t &);TR;VPClass;0;1
getClassType;getClassType();TR;VPClass;0;1
getConstString;getConstString();TR;VPClass;0;1
getKnownObject;getKnownObject();TR;VPClass;0;1
getObjectLocation;getObjectLocation();TR;VPClass;0;1
getPreexistence;getPreexistence();TR;VPClass;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPClass;0;1
isClassObject;isClassObject();TR;VPClass;0;1
isConstString;isConstString();TR;VPClass;0;1
isFixedClass;isFixedClass();TR;VPClass;0;1
isHeapObject;isHeapObject();TR;VPClass;0;1
isJ9ClassObject;isJ9ClassObject();TR;VPClass;0;1
isJavaLangClassObject;isJavaLangClassObject();TR;VPClass;0;1
isNonNullObject;isNonNullObject();TR;VPClass;0;1
isNullObject;isNullObject();TR;VPClass;0;1
isPreexistentObject;isPreexistentObject();TR;VPClass;0;1
isStackObject;isStackObject();TR;VPClass;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPClass;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPClass;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPClass;0;1
name;name();TR;VPClass;0;1
operator=;operator=(class TR::VPClass &&);TR;VPClass;1;0
operator=;operator=(const class TR::VPClass &);TR;VPClass;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPClass;0;1
typeIntersect;typeIntersect(TR::VPClassPresence *&,TR::VPClassType *&,TR::VPConstraint *,OMR::ValuePropagation *);TR;VPClass;0;0
~VPClass;~VPClass();TR;VPClass;1;0
VPClassPresence;VPClassPresence();TR;VPClassPresence;0;0
asClassPresence;asClassPresence();TR;VPClassPresence;0;1
asNonNullObject;asNonNullObject();TR;VPNonNullObject;0;1
create;create(OMR::ValuePropagation *);TR;VPNonNullObject;0;0
getClassPresence;getClassPresence();TR;VPClassPresence;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNonNullObject;0;1
isNonNullObject;isNonNullObject();TR;VPNonNullObject;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNonNullObject;0;1
name;name();TR;VPNonNullObject;0;1
operator=;operator=(class TR::VPClassPresence &&);TR;VPClassPresence;1;0
operator=;operator=(const class TR::VPClassPresence &);TR;VPClassPresence;1;0
operator=;operator=(const class TR::VPNonNullObject &);TR;VPNonNullObject;1;0
operator=;operator=(class TR::VPNonNullObject &&);TR;VPNonNullObject;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPNonNullObject;0;1
~VPClassPresence;~VPClassPresence();TR;VPClassPresence;1;0
~VPNonNullObject;~VPNonNullObject();TR;VPNonNullObject;1;0
VPClassType;VPClassType(class TR::VPClassType &&);TR;VPClassType;1;0
VPClassType;VPClassType(int32_t);TR;VPClassType;0;0
VPClassType;VPClassType(const class TR::VPClassType &);TR;VPClassType;1;0
VPConstString;VPConstString(class TR_OpaqueClassBlock *,TR::Compilation *,TR::SymbolReference *);TR;VPConstString;0;0
VPFixedClass;VPFixedClass(class TR::VPFixedClass &&);TR;VPFixedClass;1;0
VPFixedClass;VPFixedClass(const class TR::VPFixedClass &);TR;VPFixedClass;1;0
VPFixedClass;VPFixedClass(class TR_OpaqueClassBlock *,TR::Compilation *,int32_t);TR;VPFixedClass;0;0
VPResolvedClass;VPResolvedClass(class TR::VPResolvedClass &&);TR;VPResolvedClass;1;0
VPResolvedClass;VPResolvedClass(const class TR::VPResolvedClass &);TR;VPResolvedClass;1;0
VPResolvedClass;VPResolvedClass(class TR_OpaqueClassBlock *,TR::Compilation *,int32_t);TR;VPResolvedClass;0;0
VPResolvedClass;VPResolvedClass(class TR_OpaqueClassBlock *,TR::Compilation *);TR;VPResolvedClass;0;0
asClassType;asClassType();TR;VPClassType;0;1
asConstString;asConstString();TR;VPConstString;0;1
asFixedClass;asFixedClass();TR;VPFixedClass;0;1
asResolvedClass;asResolvedClass();TR;VPResolvedClass;0;1
charAt;charAt(int32_t,TR::Compilation *);TR;VPConstString;0;0
classTypesCompatible;classTypesCompatible(TR::VPClassType *,OMR::ValuePropagation *);TR;VPClassType;0;0
create;create(OMR::ValuePropagation *,TR::SymbolReference *,_Bool,_Bool);TR;VPClassType;0;0
create;create(OMR::ValuePropagation *,const char *,int32_t,class TR_ResolvedMethod *,_Bool,class TR_OpaqueClassBlock *);TR;VPClassType;0;0
create;create(OMR::ValuePropagation *,class TR_OpaqueClassBlock *);TR;VPResolvedClass;0;0
create;create(OMR::ValuePropagation *,class TR_OpaqueClassBlock *);TR;VPFixedClass;0;0
create;create(OMR::ValuePropagation *,TR::SymbolReference *);TR;VPConstString;0;0
getArrayClass;getArrayClass(OMR::ValuePropagation *);TR;VPClassType;0;1
getArrayClass;getArrayClass(OMR::ValuePropagation *);TR;VPResolvedClass;0;1
getArrayClass;getArrayClass(OMR::ValuePropagation *);TR;VPFixedClass;0;1
getClass;getClass();TR;VPResolvedClass;0;1
getClassSignature;getClassSignature(int32_t &);TR;VPClassType;0;1
getClassSignature;getClassSignature(int32_t &);TR;VPResolvedClass;0;1
getClassType;getClassType();TR;VPClassType;0;1
getConstString;getConstString();TR;VPConstString;0;1
getFieldByName;getFieldByName(TR::SymbolReference *,void *&,TR::Compilation *);TR;VPConstString;0;0
getPrimitiveArrayDataType;getPrimitiveArrayDataType();TR;VPClassType;0;0
getSymRef;getSymRef();TR;VPConstString;0;0
hasMoreThanFixedClassInfo;hasMoreThanFixedClassInfo();TR;VPFixedClass;0;1
hasMoreThanFixedClassInfo;hasMoreThanFixedClassInfo();TR;VPConstString;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPResolvedClass;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPFixedClass;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstString;0;1
isArray;isArray();TR;VPClassType;0;1
isArray;isArray();TR;VPFixedClass;0;1
isClassObject;isClassObject();TR;VPClassType;0;1
isCloneableOrSerializable;isCloneableOrSerializable();TR;VPClassType;0;1
isConstString;isConstString();TR;VPConstString;0;1
isFixedClass;isFixedClass();TR;VPFixedClass;0;1
isJ9ClassObject;isJ9ClassObject();TR;VPClassType;0;1
isJavaLangClassObject;isJavaLangClassObject();TR;VPClassType;0;1
isJavaLangObject;isJavaLangObject(OMR::ValuePropagation *);TR;VPClassType;0;1
isJavaLangObject;isJavaLangObject(OMR::ValuePropagation *);TR;VPResolvedClass;0;1
isPrimitiveArray;isPrimitiveArray(TR::Compilation *);TR;VPClassType;0;1
isPrimitiveArray;isPrimitiveArray(TR::Compilation *);TR;VPResolvedClass;0;1
isReferenceArray;isReferenceArray(TR::Compilation *);TR;VPClassType;0;1
isReferenceArray;isReferenceArray(TR::Compilation *);TR;VPResolvedClass;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPResolvedClass;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPFixedClass;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstString;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstString;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstString;0;1
name;name();TR;VPResolvedClass;0;1
name;name();TR;VPFixedClass;0;1
name;name();TR;VPConstString;0;1
operator=;operator=(const class TR::VPClassType &);TR;VPClassType;1;0
operator=;operator=(class TR::VPClassType &&);TR;VPClassType;1;0
operator=;operator=(const class TR::VPResolvedClass &);TR;VPResolvedClass;1;0
operator=;operator=(class TR::VPResolvedClass &&);TR;VPResolvedClass;1;0
operator=;operator=(const class TR::VPFixedClass &);TR;VPFixedClass;1;0
operator=;operator=(class TR::VPFixedClass &&);TR;VPFixedClass;1;0
operator=;operator=(const class TR::VPConstString &);TR;VPConstString;1;0
operator=;operator=(class TR::VPConstString &&);TR;VPConstString;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPResolvedClass;0;1
print;print(TR::Compilation *,TR::FILE *);TR;VPFixedClass;0;1
print;print(TR::Compilation *,TR::FILE *);TR;VPConstString;0;1
~VPClassType;~VPClassType();TR;VPClassType;1;0
~VPConstString;~VPConstString();TR;VPConstString;1;0
~VPFixedClass;~VPFixedClass();TR;VPFixedClass;1;0
~VPResolvedClass;~VPResolvedClass();TR;VPResolvedClass;1;0
VPEqual;VPEqual(int32_t);TR;VPEqual;0;0
VPRelation;VPRelation(class TR::VPRelation &&);TR;VPRelation;1;0
VPRelation;VPRelation(int32_t,int32_t);TR;VPRelation;0;0
VPRelation;VPRelation(const class TR::VPRelation &);TR;VPRelation;1;0
asEqual;asEqual();TR;VPEqual;0;1
asRelation;asRelation();TR;VPRelation;0;1
create;create(OMR::ValuePropagation *,int32_t);TR;VPEqual;0;0
getComplement;getComplement(OMR::ValuePropagation *);TR;VPRelation;0;1
getComplement;getComplement(OMR::ValuePropagation *);TR;VPEqual;0;1
increment;increment();TR;VPRelation;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPEqual;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPEqual;0;1
mustBeEqual;mustBeEqual();TR;VPEqual;0;1
mustBeGreaterThan;mustBeGreaterThan();TR;VPEqual;0;1
mustBeGreaterThanOrEqual;mustBeGreaterThanOrEqual();TR;VPEqual;0;1
mustBeLessThan;mustBeLessThan();TR;VPEqual;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual();TR;VPEqual;0;1
mustBeNotEqual;mustBeNotEqual();TR;VPEqual;0;1
name;name();TR;VPEqual;0;1
operator=;operator=(class TR::VPRelation &&);TR;VPRelation;1;0
operator=;operator=(const class TR::VPRelation &);TR;VPRelation;1;0
operator=;operator=(class TR::VPEqual &&);TR;VPEqual;1;0
operator=;operator=(const class TR::VPEqual &);TR;VPEqual;1;0
print;print(TR::Compilation *,TR::FILE *,int32_t);TR;VPEqual;0;1
print;print(TR::Compilation *,TR::FILE *);TR;VPEqual;0;1
propagateAbsoluteConstraint;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);TR;VPRelation;0;1
propagateAbsoluteConstraint;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);TR;VPEqual;0;1
propagateRelativeConstraint;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);TR;VPRelation;0;1
propagateRelativeConstraint;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);TR;VPEqual;0;1
~VPEqual;~VPEqual();TR;VPEqual;1;0
~VPRelation;~VPRelation();TR;VPRelation;1;0
VPGreaterThanOrEqual;VPGreaterThanOrEqual(int32_t);TR;VPGreaterThanOrEqual;0;0
asGreaterThanOrEqual;asGreaterThanOrEqual();TR;VPGreaterThanOrEqual;0;1
create;create(OMR::ValuePropagation *,int32_t);TR;VPGreaterThanOrEqual;0;0
getComplement;getComplement(OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
mustBeGreaterThan;mustBeGreaterThan();TR;VPGreaterThanOrEqual;0;1
mustBeGreaterThanOrEqual;mustBeGreaterThanOrEqual();TR;VPGreaterThanOrEqual;0;1
mustBeNotEqual;mustBeNotEqual();TR;VPGreaterThanOrEqual;0;1
name;name();TR;VPGreaterThanOrEqual;0;1
operator=;operator=(class TR::VPGreaterThanOrEqual &&);TR;VPGreaterThanOrEqual;1;0
operator=;operator=(const class TR::VPGreaterThanOrEqual &);TR;VPGreaterThanOrEqual;1;0
print;print(TR::Compilation *,TR::FILE *,int32_t);TR;VPGreaterThanOrEqual;0;1
print;print(TR::Compilation *,TR::FILE *);TR;VPGreaterThanOrEqual;0;1
propagateAbsoluteConstraint;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
propagateRelativeConstraint;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
~VPGreaterThanOrEqual;~VPGreaterThanOrEqual();TR;VPGreaterThanOrEqual;1;0
VPIntConst;VPIntConst(int32_t);TR;VPIntConst;0;0
VPIntConstraint;VPIntConstraint(int32_t);TR;VPIntConstraint;0;0
VPIntConstraint;VPIntConstraint(class TR::VPIntConstraint &&);TR;VPIntConstraint;1;0
VPIntConstraint;VPIntConstraint(const class TR::VPIntConstraint &);TR;VPIntConstraint;1;0
add;add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
asIntConst;asIntConst();TR;VPIntConst;0;1
asIntConstraint;asIntConstraint();TR;VPIntConstraint;0;1
canOverflow;canOverflow();TR;VPIntConstraint;0;1
create;create(OMR::ValuePropagation *,int32_t);TR;VPIntConst;0;0
createExclusion;createExclusion(OMR::ValuePropagation *,int32_t);TR;VPIntConst;0;0
getHigh;getHigh();TR;VPIntConstraint;0;1
getHigh;getHigh();TR;VPIntConst;0;1
getHighInt;getHighInt();TR;VPIntConstraint;0;1
getInt;getInt();TR;VPIntConstraint;0;0
getLow;getLow();TR;VPIntConstraint;0;0
getLowInt;getLowInt();TR;VPIntConstraint;0;1
getPrecision;getPrecision();TR;VPIntConstraint;0;1
getPrecision;getPrecision();TR;VPIntConst;0;1
getRange;getRange(int32_t,int32_t,_Bool,_Bool,OMR::ValuePropagation *);TR;VPIntConstraint;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConst;0;1
mustBeLessThan;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
name;name();TR;VPIntConst;0;1
operator=;operator=(class TR::VPIntConstraint &&);TR;VPIntConstraint;1;0
operator=;operator=(const class TR::VPIntConstraint &);TR;VPIntConstraint;1;0
operator=;operator=(class TR::VPIntConst &&);TR;VPIntConst;1;0
operator=;operator=(const class TR::VPIntConst &);TR;VPIntConst;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPIntConst;0;1
setCanOverflow;setCanOverflow(enum TR_YesNoMaybe);TR;VPIntConstraint;0;1
subtract;subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
~VPIntConst;~VPIntConst();TR;VPIntConst;1;0
~VPIntConstraint;~VPIntConstraint();TR;VPIntConstraint;1;0
VPIntRange;VPIntRange(int32_t,int32_t);TR;VPIntRange;0;0
asIntRange;asIntRange();TR;VPIntRange;0;1
create;create(OMR::ValuePropagation *,TR::DataTypes,enum TR_YesNoMaybe);TR;VPIntRange;0;0
create;create(OMR::ValuePropagation *,int32_t,int32_t,enum TR_YesNoMaybe);TR;VPIntRange;0;0
createWithPrecision;createWithPrecision(OMR::ValuePropagation *,TR::DataType,int32_t,enum TR_YesNoMaybe,_Bool);TR;VPIntRange;0;0
getHigh;getHigh();TR;VPIntRange;0;1
getPrecision;getPrecision();TR;VPIntRange;0;1
name;name();TR;VPIntRange;0;1
operator=;operator=(class TR::VPIntRange &&);TR;VPIntRange;1;0
operator=;operator=(const class TR::VPIntRange &);TR;VPIntRange;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPIntRange;0;1
~VPIntRange;~VPIntRange();TR;VPIntRange;1;0
VPKnownObject;VPKnownObject(class TR_OpaqueClassBlock *,TR::Compilation *,TR::class KnownObjectTable::Index,_Bool);TR;VPKnownObject;0;0
asKnownObject;asKnownObject();TR;VPKnownObject;0;1
create;create(OMR::ValuePropagation *,TR::class KnownObjectTable::Index,_Bool);TR;VPKnownObject;0;0
create;create(OMR::ValuePropagation *,TR::class KnownObjectTable::Index);TR;VPKnownObject;0;0
createForJavaLangClass;createForJavaLangClass(OMR::ValuePropagation *,TR::class KnownObjectTable::Index);TR;VPKnownObject;0;0
getIndex;getIndex();TR;VPKnownObject;0;0
getKnownObject;getKnownObject();TR;VPKnownObject;0;1
hasMoreThanFixedClassInfo;hasMoreThanFixedClassInfo();TR;VPKnownObject;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPKnownObject;0;1
isArrayWithConstantElements;isArrayWithConstantElements(TR::Compilation *);TR;VPKnownObject;0;1
isJavaLangClassObject;isJavaLangClassObject();TR;VPKnownObject;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPKnownObject;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPKnownObject;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPKnownObject;0;1
name;name();TR;VPKnownObject;0;1
operator=;operator=(const class TR::VPKnownObject &);TR;VPKnownObject;1;0
operator=;operator=(class TR::VPKnownObject &&);TR;VPKnownObject;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPKnownObject;0;1
~VPKnownObject;~VPKnownObject();TR;VPKnownObject;1;0
VPLessThanOrEqual;VPLessThanOrEqual(int32_t);TR;VPLessThanOrEqual;0;0
asLessThanOrEqual;asLessThanOrEqual();TR;VPLessThanOrEqual;0;1
create;create(OMR::ValuePropagation *,int32_t);TR;VPLessThanOrEqual;0;0
getComplement;getComplement(OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
mustBeLessThan;mustBeLessThan();TR;VPLessThanOrEqual;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual();TR;VPLessThanOrEqual;0;1
mustBeNotEqual;mustBeNotEqual();TR;VPLessThanOrEqual;0;1
name;name();TR;VPLessThanOrEqual;0;1
operator=;operator=(class TR::VPLessThanOrEqual &&);TR;VPLessThanOrEqual;1;0
operator=;operator=(const class TR::VPLessThanOrEqual &);TR;VPLessThanOrEqual;1;0
print;print(TR::Compilation *,TR::FILE *,int32_t);TR;VPLessThanOrEqual;0;1
print;print(TR::Compilation *,TR::FILE *);TR;VPLessThanOrEqual;0;1
propagateAbsoluteConstraint;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
propagateRelativeConstraint;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
~VPLessThanOrEqual;~VPLessThanOrEqual();TR;VPLessThanOrEqual;1;0
VPLongConst;VPLongConst(int64_t);TR;VPLongConst;0;0
VPLongConstraint;VPLongConstraint(int64_t);TR;VPLongConstraint;0;0
VPLongConstraint;VPLongConstraint(class TR::VPLongConstraint &&);TR;VPLongConstraint;1;0
VPLongConstraint;VPLongConstraint(const class TR::VPLongConstraint &);TR;VPLongConstraint;1;0
add;add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
asLongConst;asLongConst();TR;VPLongConst;0;1
asLongConstraint;asLongConstraint();TR;VPLongConstraint;0;1
canOverflow;canOverflow();TR;VPLongConstraint;0;1
create;create(OMR::ValuePropagation *,int64_t);TR;VPLongConst;0;0
createExclusion;createExclusion(OMR::ValuePropagation *,int64_t);TR;VPLongConst;0;0
getHigh;getHigh();TR;VPLongConstraint;0;1
getHigh;getHigh();TR;VPLongConst;0;1
getHighLong;getHighLong();TR;VPLongConstraint;0;1
getLong;getLong();TR;VPLongConstraint;0;0
getLow;getLow();TR;VPLongConstraint;0;0
getLowLong;getLowLong();TR;VPLongConstraint;0;1
getPrecision;getPrecision();TR;VPLongConstraint;0;1
getPrecision;getPrecision();TR;VPLongConst;0;1
getRange;getRange(int64_t,int64_t,_Bool,_Bool,OMR::ValuePropagation *);TR;VPLongConstraint;0;0
getUnsignedLong;getUnsignedLong();TR;VPLongConstraint;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConst;0;1
mustBeLessThan;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
name;name();TR;VPLongConst;0;1
operator=;operator=(const class TR::VPLongConstraint &);TR;VPLongConstraint;1;0
operator=;operator=(class TR::VPLongConstraint &&);TR;VPLongConstraint;1;0
operator=;operator=(class TR::VPLongConst &&);TR;VPLongConst;1;0
operator=;operator=(const class TR::VPLongConst &);TR;VPLongConst;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPLongConst;0;1
setCanOverflow;setCanOverflow(enum TR_YesNoMaybe);TR;VPLongConstraint;0;1
subtract;subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
~VPLongConst;~VPLongConst();TR;VPLongConst;1;0
~VPLongConstraint;~VPLongConstraint();TR;VPLongConstraint;1;0
VPLongRange;VPLongRange(int64_t,int64_t);TR;VPLongRange;0;0
asLongRange;asLongRange();TR;VPLongRange;0;1
create;create(OMR::ValuePropagation *,int64_t,int64_t,_Bool,enum TR_YesNoMaybe);TR;VPLongRange;0;0
getHigh;getHigh();TR;VPLongRange;0;1
getIsPowerOfTwo;getIsPowerOfTwo();TR;VPLongRange;0;0
getPrecision;getPrecision();TR;VPLongRange;0;1
name;name();TR;VPLongRange;0;1
operator=;operator=(class TR::VPLongRange &&);TR;VPLongRange;1;0
operator=;operator=(const class TR::VPLongRange &);TR;VPLongRange;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPLongRange;0;1
setIsPowerOfTwo;setIsPowerOfTwo();TR;VPLongRange;0;0
~VPLongRange;~VPLongRange();TR;VPLongRange;1;0
VPMergedConstraints;VPMergedConstraints(ListElement<TR::VPConstraint> *,class TR_Memory *);TR;VPMergedConstraints;0;0
asMergedConstraints;asMergedConstraints();TR;VPMergedConstraints;0;1
asMergedIntConstraints;asMergedIntConstraints();TR;VPMergedConstraints;0;1
asMergedLongConstraints;asMergedLongConstraints();TR;VPMergedConstraints;0;1
asMergedShortConstraints;asMergedShortConstraints();TR;VPMergedConstraints;0;1
create;create(OMR::ValuePropagation *,TR::VPConstraint *,TR::VPConstraint *);TR;VPMergedConstraints;0;0
create;create(OMR::ValuePropagation *,ListElement<TR::VPConstraint> *);TR;VPMergedConstraints;0;0
getHighInt;getHighInt();TR;VPMergedConstraints;0;1
getHighLong;getHighLong();TR;VPMergedConstraints;0;1
getHighShort;getHighShort();TR;VPMergedConstraints;0;1
getList;getList();TR;VPMergedConstraints;0;0
getLowInt;getLowInt();TR;VPMergedConstraints;0;1
getLowLong;getLowLong();TR;VPMergedConstraints;0;1
getLowShort;getLowShort();TR;VPMergedConstraints;0;1
getType;getType();TR;VPMergedConstraints;0;0
getUnsignedHighInt;getUnsignedHighInt();TR;VPMergedConstraints;0;1
getUnsignedHighLong;getUnsignedHighLong();TR;VPMergedConstraints;0;1
getUnsignedHighShort;getUnsignedHighShort();TR;VPMergedConstraints;0;1
getUnsignedLowInt;getUnsignedLowInt();TR;VPMergedConstraints;0;1
getUnsignedLowLong;getUnsignedLowLong();TR;VPMergedConstraints;0;1
getUnsignedLowShort;getUnsignedLowShort();TR;VPMergedConstraints;0;1
intIntersect;intIntersect(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;0
intMerge;intMerge(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
longIntersect;longIntersect(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;0
longMerge;longMerge(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;0
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
mustBeLessThan;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
name;name();TR;VPMergedConstraints;0;1
operator=;operator=(class TR::VPMergedConstraints &&);TR;VPMergedConstraints;1;0
operator=;operator=(const class TR::VPMergedConstraints &);TR;VPMergedConstraints;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPMergedConstraints;0;1
shortIntersect;shortIntersect(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;0
shortMerge;shortMerge(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;0
~VPMergedConstraints;~VPMergedConstraints();TR;VPMergedConstraints;1;0
VPNotEqual;VPNotEqual(int32_t);TR;VPNotEqual;0;0
asNotEqual;asNotEqual();TR;VPNotEqual;0;1
create;create(OMR::ValuePropagation *,int32_t);TR;VPNotEqual;0;0
getComplement;getComplement(OMR::ValuePropagation *);TR;VPNotEqual;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNotEqual;0;1
mustBeNotEqual;mustBeNotEqual();TR;VPNotEqual;0;1
name;name();TR;VPNotEqual;0;1
operator=;operator=(class TR::VPNotEqual &&);TR;VPNotEqual;1;0
operator=;operator=(const class TR::VPNotEqual &);TR;VPNotEqual;1;0
print;print(TR::Compilation *,TR::FILE *,int32_t);TR;VPNotEqual;0;1
print;print(TR::Compilation *,TR::FILE *);TR;VPNotEqual;0;1
propagateAbsoluteConstraint;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);TR;VPNotEqual;0;1
propagateRelativeConstraint;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);TR;VPNotEqual;0;1
~VPNotEqual;~VPNotEqual();TR;VPNotEqual;1;0
asNullObject;asNullObject();TR;VPNullObject;0;1
create;create(OMR::ValuePropagation *);TR;VPNullObject;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNullObject;0;1
isNullObject;isNullObject();TR;VPNullObject;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNullObject;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNullObject;0;1
name;name();TR;VPNullObject;0;1
operator=;operator=(const class TR::VPNullObject &);TR;VPNullObject;1;0
operator=;operator=(class TR::VPNullObject &&);TR;VPNullObject;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPNullObject;0;1
~VPNullObject;~VPNullObject();TR;VPNullObject;1;0
VPObjectLocation;VPObjectLocation(enum TR::VPObjectLocation::VPObjectLocationKind);TR;VPObjectLocation;0;0
asObjectLocation;asObjectLocation();TR;VPObjectLocation;0;1
create;create(OMR::ValuePropagation *,enum TR::VPObjectLocation::VPObjectLocationKind);TR;VPObjectLocation;0;0
getObjectLocation;getObjectLocation();TR;VPObjectLocation;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPObjectLocation;0;1
isClassObject;isClassObject();TR;VPObjectLocation;0;1
isHeapObject;isHeapObject();TR;VPObjectLocation;0;1
isJ9ClassObject;isJ9ClassObject();TR;VPObjectLocation;0;1
isJavaLangClassObject;isJavaLangClassObject();TR;VPObjectLocation;0;1
isKindSubset;isKindSubset(enum TR::VPObjectLocation::VPObjectLocationKind,enum TR::VPObjectLocation::VPObjectLocationKind);TR;VPObjectLocation;0;0
isStackObject;isStackObject();TR;VPObjectLocation;0;1
isWithin;isWithin(enum TR::VPObjectLocation::VPObjectLocationKind);TR;VPObjectLocation;0;0
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPObjectLocation;0;1
name;name();TR;VPObjectLocation;0;1
operator=;operator=(const class TR::VPObjectLocation &);TR;VPObjectLocation;1;0
operator=;operator=(class TR::VPObjectLocation &&);TR;VPObjectLocation;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPObjectLocation;0;1
~VPObjectLocation;~VPObjectLocation();TR;VPObjectLocation;1;0
VPPreexistentObject;VPPreexistentObject(class TR_OpaqueClassBlock *);TR;VPPreexistentObject;0;0
asPreexistentObject;asPreexistentObject();TR;VPPreexistentObject;0;1
create;create(OMR::ValuePropagation *,class TR_OpaqueClassBlock *);TR;VPPreexistentObject;0;0
getAssumptionClass;getAssumptionClass();TR;VPPreexistentObject;0;0
getPreexistence;getPreexistence();TR;VPPreexistentObject;0;1
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPPreexistentObject;0;1
isPreexistentObject;isPreexistentObject();TR;VPPreexistentObject;0;1
name;name();TR;VPPreexistentObject;0;1
operator=;operator=(class TR::VPPreexistentObject &&);TR;VPPreexistentObject;1;0
operator=;operator=(const class TR::VPPreexistentObject &);TR;VPPreexistentObject;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPPreexistentObject;0;1
~VPPreexistentObject;~VPPreexistentObject();TR;VPPreexistentObject;1;0
VPShortConst;VPShortConst(int16_t);TR;VPShortConst;0;0
VPShortConstraint;VPShortConstraint(class TR::VPShortConstraint &&);TR;VPShortConstraint;1;0
VPShortConstraint;VPShortConstraint(const class TR::VPShortConstraint &);TR;VPShortConstraint;1;0
VPShortConstraint;VPShortConstraint(int16_t);TR;VPShortConstraint;0;0
add;add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
asShortConst;asShortConst();TR;VPShortConst;0;1
asShortConstraint;asShortConstraint();TR;VPShortConstraint;0;1
canOverflow;canOverflow();TR;VPShortConstraint;0;1
create;create(OMR::ValuePropagation *,int16_t);TR;VPShortConst;0;0
createExclusion;createExclusion(OMR::ValuePropagation *,int16_t);TR;VPShortConst;0;0
getHigh;getHigh();TR;VPShortConstraint;0;1
getHigh;getHigh();TR;VPShortConst;0;1
getHighShort;getHighShort();TR;VPShortConstraint;0;1
getLow;getLow();TR;VPShortConstraint;0;0
getLowShort;getLowShort();TR;VPShortConstraint;0;1
getPrecision;getPrecision();TR;VPShortConstraint;0;1
getPrecision;getPrecision();TR;VPShortConst;0;1
getRange;getRange(int16_t,int16_t,_Bool,_Bool,OMR::ValuePropagation *);TR;VPShortConstraint;0;0
getShort;getShort();TR;VPShortConstraint;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConst;0;1
mustBeLessThan;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
name;name();TR;VPShortConst;0;1
operator=;operator=(const class TR::VPShortConstraint &);TR;VPShortConstraint;1;0
operator=;operator=(class TR::VPShortConstraint &&);TR;VPShortConstraint;1;0
operator=;operator=(class TR::VPShortConst &&);TR;VPShortConst;1;0
operator=;operator=(const class TR::VPShortConst &);TR;VPShortConst;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPShortConst;0;1
setCanOverflow;setCanOverflow(enum TR_YesNoMaybe);TR;VPShortConstraint;0;1
subtract;subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
~VPShortConst;~VPShortConst();TR;VPShortConst;1;0
~VPShortConstraint;~VPShortConstraint();TR;VPShortConstraint;1;0
VPShortRange;VPShortRange(int16_t,int16_t);TR;VPShortRange;0;0
asShortRange;asShortRange();TR;VPShortRange;0;1
create;create(OMR::ValuePropagation *);TR;VPShortRange;0;0
create;create(OMR::ValuePropagation *,int16_t,int16_t,enum TR_YesNoMaybe);TR;VPShortRange;0;0
createWithPrecision;createWithPrecision(OMR::ValuePropagation *,int32_t,_Bool);TR;VPShortRange;0;0
getHigh;getHigh();TR;VPShortRange;0;1
getPrecision;getPrecision();TR;VPShortRange;0;1
name;name();TR;VPShortRange;0;1
operator=;operator=(class TR::VPShortRange &&);TR;VPShortRange;1;0
operator=;operator=(const class TR::VPShortRange &);TR;VPShortRange;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPShortRange;0;1
~VPShortRange;~VPShortRange();TR;VPShortRange;1;0
VPSync;VPSync(enum TR_YesNoMaybe);TR;VPSync;0;0
asVPSync;asVPSync();TR;VPSync;0;1
create;create(OMR::ValuePropagation *,enum TR_YesNoMaybe);TR;VPSync;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPSync;0;1
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPSync;0;1
name;name();TR;VPSync;0;1
operator=;operator=(const class TR::VPSync &);TR;VPSync;1;0
operator=;operator=(class TR::VPSync &&);TR;VPSync;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPSync;0;1
syncEmitted;syncEmitted();TR;VPSync;0;0
~VPSync;~VPSync();TR;VPSync;1;0
VPUnreachablePath;VPUnreachablePath();TR;VPUnreachablePath;0;0
asUnreachablePath;asUnreachablePath();TR;VPUnreachablePath;0;1
create;create(OMR::ValuePropagation *);TR;VPUnreachablePath;0;0
name;name();TR;VPUnreachablePath;0;1
operator=;operator=(class TR::VPUnreachablePath &&);TR;VPUnreachablePath;1;0
operator=;operator=(const class TR::VPUnreachablePath &);TR;VPUnreachablePath;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPUnreachablePath;0;1
~VPUnreachablePath;~VPUnreachablePath();TR;VPUnreachablePath;1;0
VPUnresolvedClass;VPUnresolvedClass(const char *,int32_t,class TR_ResolvedMethod *);TR;VPUnresolvedClass;0;0
asUnresolvedClass;asUnresolvedClass();TR;VPUnresolvedClass;0;1
create;create(OMR::ValuePropagation *,const char *,int32_t,class TR_ResolvedMethod *);TR;VPUnresolvedClass;0;0
getArrayClass;getArrayClass(OMR::ValuePropagation *);TR;VPUnresolvedClass;0;1
getClassSignature;getClassSignature(int32_t &);TR;VPUnresolvedClass;0;1
getMethod;getMethod();TR;VPUnresolvedClass;0;0
getOwningMethod;getOwningMethod();TR;VPUnresolvedClass;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPUnresolvedClass;0;1
isDefiniteType;isDefiniteType();TR;VPUnresolvedClass;0;0
isPrimitiveArray;isPrimitiveArray(TR::Compilation *);TR;VPUnresolvedClass;0;1
isReferenceArray;isReferenceArray(TR::Compilation *);TR;VPUnresolvedClass;0;1
name;name();TR;VPUnresolvedClass;0;1
operator=;operator=(class TR::VPUnresolvedClass &&);TR;VPUnresolvedClass;1;0
operator=;operator=(const class TR::VPUnresolvedClass &);TR;VPUnresolvedClass;1;0
print;print(TR::Compilation *,TR::FILE *);TR;VPUnresolvedClass;0;1
setDefiniteType;setDefiniteType(_Bool);TR;VPUnresolvedClass;0;0
~VPUnresolvedClass;~VPUnresolvedClass();TR;VPUnresolvedClass;1;0
TR_BlockStructure;TR_BlockStructure(const class TR_BlockStructure &);;TR_BlockStructure;1;0
TR_BlockStructure;TR_BlockStructure(class TR_BlockStructure &&);;TR_BlockStructure;1;0
TR_BlockStructure;TR_BlockStructure(TR::Compilation *,int32_t,TR::Block *);;TR_BlockStructure;0;0
TR_Structure;TR_Structure(class TR_Structure &&);;TR_Structure;1;0
TR_Structure;TR_Structure(TR::Compilation *,int32_t);;TR_Structure;0;0
TR_Structure;TR_Structure(const class TR_Structure &);;TR_Structure;1;0
addEdge;addEdge(TR::CFGEdge *,_Bool);;TR_Structure;0;1
addExternalEdge;addExternalEdge(class TR_Structure *,int32_t,_Bool);;TR_Structure;0;1
addExternalEdge;addExternalEdge(class TR_Structure *,int32_t,_Bool);;TR_BlockStructure;0;1
adjustWeightForBranches;adjustWeightForBranches(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *,int32_t *);;TR_Structure;0;0
asBlock;asBlock();;TR_Structure;0;1
asBlock;asBlock();;TR_BlockStructure;0;1
asRegion;asRegion();;TR_Structure;0;1
calculateFrequencyOfExecution;calculateFrequencyOfExecution(int32_t *);;TR_Structure;0;0
cfg;cfg();;TR_Structure;0;0
changeContinueLoopsToNestedLoops;changeContinueLoopsToNestedLoops(class TR_RegionStructure *);;TR_Structure;0;1
changeContinueLoopsToNestedLoops;changeContinueLoopsToNestedLoops(class TR_RegionStructure *);;TR_BlockStructure;0;1
checkStructure;checkStructure(class TR_BitVector *);;TR_Structure;0;1
checkStructure;checkStructure(class TR_BitVector *);;TR_BlockStructure;0;1
clearAnalysisInfo;clearAnalysisInfo();;TR_Structure;0;1
clearAnalysisInfo;clearAnalysisInfo();;TR_BlockStructure;0;1
cloneStructure;cloneStructure(TR::Block **,class TR_StructureSubGraphNode **,List<class TR_Structure> *,List<class TR_Structure> *);;TR_Structure;0;1
cloneStructure;cloneStructure(TR::Block **,class TR_StructureSubGraphNode **,List<class TR_Structure> *,List<class TR_Structure> *);;TR_BlockStructure;0;1
cloneStructureEdges;cloneStructureEdges(TR::Block **);;TR_Structure;0;1
cloneStructureEdges;cloneStructureEdges(TR::Block **);;TR_BlockStructure;0;1
collectCFGEdgesTo;collectCFGEdgesTo(int32_t,List<TR::CFGEdge> *);;TR_Structure;0;1
collectCFGEdgesTo;collectCFGEdgesTo(int32_t,List<TR::CFGEdge> *);;TR_BlockStructure;0;1
collectExitBlocks;collectExitBlocks(List<TR::Block> *,List<TR::CFGEdge> *);;TR_Structure;0;1
collectExitBlocks;collectExitBlocks(List<TR::Block> *,List<TR::CFGEdge> *);;TR_BlockStructure;0;1
comp;comp();;TR_Structure;0;0
contains;contains(class TR_Structure *,class TR_Structure *);;TR_Structure;0;0
containsImproperRegion;containsImproperRegion();;TR_Structure;0;1
doDataFlowAnalysis;doDataFlowAnalysis(class TR_DataFlowAnalysis *,_Bool);;TR_Structure;0;1
doDataFlowAnalysis;doDataFlowAnalysis(class TR_DataFlowAnalysis *,_Bool);;TR_BlockStructure;0;1
findCommonParent;findCommonParent(class TR_Structure *,TR::CFG *);;TR_Structure;0;0
findNodeInHierarchy;findNodeInHierarchy(class TR_RegionStructure *,int32_t);;TR_Structure;0;0
getAnalysisInfo;getAnalysisInfo();;TR_Structure;0;0
getAnyCyclicRegionNestingDepth;getAnyCyclicRegionNestingDepth();;TR_Structure;0;0
getBlock;getBlock();;TR_BlockStructure;0;0
getBlocks;getBlocks(List<TR::Block> *,vcount_t);;TR_Structure;0;1
getBlocks;getBlocks(List<TR::Block> *,vcount_t);;TR_BlockStructure;0;1
getBlocks;getBlocks(List<TR::Block> *);;TR_Structure;0;1
getBlocks;getBlocks(List<TR::Block> *);;TR_BlockStructure;0;1
getContainingLoop;getContainingLoop();;TR_Structure;0;0
getDuplicatedBlock;getDuplicatedBlock();;TR_BlockStructure;0;0
getEntryBlock;getEntryBlock();;TR_Structure;0;1
getEntryBlock;getEntryBlock();;TR_BlockStructure;0;1
getKind;getKind();;TR_Structure;0;1
getKind;getKind();;TR_BlockStructure;0;1
getMaxNestingDepth;getMaxNestingDepth(int32_t *,int32_t *);;TR_Structure;0;1
getMaxNestingDepth;getMaxNestingDepth();;TR_Structure;0;0
getNestingDepth;getNestingDepth();;TR_Structure;0;0
getNumber;getNumber();;TR_Structure;0;0
getNumberOfLoops;getNumberOfLoops();;TR_Structure;0;0
getParent;getParent();;TR_Structure;0;0
getSubGraphNode;getSubGraphNode();;TR_Structure;0;0
getWeight;getWeight();;TR_Structure;0;0
hasBeenAnalyzedBefore;hasBeenAnalyzedBefore();;TR_Structure;0;0
hoistInvariantsOutOfNestedLoops;hoistInvariantsOutOfNestedLoops(class TR_LocalTransparency *,class TR_BitVector **,_Bool,class TR_BlockStructure *,class TR_RegionStructure *,int32_t);;TR_Structure;0;1
hoistInvariantsOutOfNestedLoops;hoistInvariantsOutOfNestedLoops(class TR_LocalTransparency *,class TR_BitVector **,_Bool,class TR_BlockStructure *,class TR_RegionStructure *,int32_t);;TR_BlockStructure;0;1
isCreatedByVersioning;isCreatedByVersioning();;TR_BlockStructure;0;0
isEntryOfShortRunningLoop;isEntryOfShortRunningLoop();;TR_BlockStructure;0;0
isExpressionTransparentIn;isExpressionTransparentIn(int32_t,class TR_LocalTransparency *);;TR_Structure;0;1
isExpressionTransparentIn;isExpressionTransparentIn(int32_t,class TR_LocalTransparency *);;TR_BlockStructure;0;1
isLoopInvariantBlock;isLoopInvariantBlock();;TR_BlockStructure;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_Structure;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_Structure;0;0
markStructuresWithImproperRegions;markStructuresWithImproperRegions();;TR_Structure;0;1
markStructuresWithImproperRegions;markStructuresWithImproperRegions();;TR_BlockStructure;0;1
mergeBlocks;mergeBlocks(TR::Block *,TR::Block *);;TR_Structure;0;0
mergeInto;mergeInto(TR::Block *,TR::Block *);;TR_Structure;0;1
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Structure;0;0
operator delete;operator delete(void *,size_t);;TR_Structure;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Structure;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_Structure;0;0
operator delete;operator delete(void *,TR::Region &);;TR_Structure;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Structure;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_Structure;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_Structure;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Structure;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_Structure;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Structure;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_Structure;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Structure;0;0
operator new;operator new(size_t,TR::Region &);;TR_Structure;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_Structure;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Structure;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_Structure;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_Structure;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Structure;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Structure;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Structure;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_Structure;0;0
operator=;operator=(const class TR_Structure &);;TR_Structure;1;0
operator=;operator=(class TR_Structure &&);;TR_Structure;1;0
operator=;operator=(const class TR_BlockStructure &);;TR_BlockStructure;1;0
operator=;operator=(class TR_BlockStructure &&);;TR_BlockStructure;1;0
removeEdge;removeEdge(class TR_Structure *,class TR_Structure *);;TR_Structure;0;1
removeEdge;removeEdge(class TR_Structure *,class TR_Structure *);;TR_BlockStructure;0;1
removeExternalEdgeTo;removeExternalEdgeTo(class TR_Structure *,int32_t);;TR_Structure;0;1
removeExternalEdgeTo;removeExternalEdgeTo(class TR_Structure *,int32_t);;TR_BlockStructure;0;1
removeMergedBlock;removeMergedBlock(TR::Block *,TR::Block *);;TR_Structure;0;1
renumber;renumber(int32_t);;TR_Structure;0;1
renumber;renumber(int32_t);;TR_BlockStructure;0;1
renumberRecursively;renumberRecursively(int32_t,int32_t);;TR_Structure;0;1
renumberRecursively;renumberRecursively(int32_t,int32_t);;TR_BlockStructure;0;1
replacePart;replacePart(class TR_Structure *,class TR_Structure *);;TR_Structure;0;1
replacePart;replacePart(class TR_Structure *,class TR_Structure *);;TR_BlockStructure;0;1
resetAnalysisInfo;resetAnalysisInfo();;TR_Structure;0;1
resetAnalysisInfo;resetAnalysisInfo();;TR_BlockStructure;0;1
resetAnalyzedStatus;resetAnalyzedStatus();;TR_Structure;0;1
resetAnalyzedStatus;resetAnalyzedStatus();;TR_BlockStructure;0;1
resetVisitCounts;resetVisitCounts(vcount_t);;TR_Structure;0;1
resetVisitCounts;resetVisitCounts(vcount_t);;TR_BlockStructure;0;1
setAnalysisInfo;setAnalysisInfo(void *);;TR_Structure;0;0
setAnalyzedStatus;setAnalyzedStatus(_Bool);;TR_Structure;0;0
setAnyCyclicRegionNestingDepth;setAnyCyclicRegionNestingDepth(int16_t);;TR_Structure;0;0
setAnyCyclicRegionNestingDepths;setAnyCyclicRegionNestingDepths(int32_t *);;TR_Structure;0;0
setAsLoopInvariantBlock;setAsLoopInvariantBlock(_Bool);;TR_BlockStructure;0;0
setBlock;setBlock(TR::Block *);;TR_BlockStructure;0;0
setConditionalityWeight;setConditionalityWeight(int32_t *);;TR_Structure;0;0
setContainsImproperRegion;setContainsImproperRegion(_Bool);;TR_Structure;0;1
setCreatedByVersioning;setCreatedByVersioning(_Bool);;TR_BlockStructure;0;0
setDuplicatedBlock;setDuplicatedBlock(class TR_BlockStructure *);;TR_BlockStructure;0;0
setIsEntryOfShortRunningLoop;setIsEntryOfShortRunningLoop();;TR_BlockStructure;0;0
setMaxNestingDepth;setMaxNestingDepth(int16_t);;TR_Structure;0;0
setNestingDepth;setNestingDepth(int16_t);;TR_Structure;0;0
setNestingDepths;setNestingDepths(int32_t *);;TR_Structure;0;0
setNumber;setNumber(int32_t);;TR_Structure;0;0
setParent;setParent(class TR_RegionStructure *);;TR_Structure;0;0
setSubGraphNode;setSubGraphNode(class TR_StructureSubGraphNode *);;TR_Structure;0;0
setWasHeaderOfCanonicalizedLoop;setWasHeaderOfCanonicalizedLoop(_Bool);;TR_BlockStructure;0;0
setWeight;setWeight(int32_t);;TR_Structure;0;0
trHeapMemory;trHeapMemory();;TR_Structure;0;0
trMemory;trMemory();;TR_Structure;0;0
trPersistentMemory;trPersistentMemory();;TR_Structure;0;0
trStackMemory;trStackMemory();;TR_Structure;0;0
wasHeaderOfCanonicalizedLoop;wasHeaderOfCanonicalizedLoop();;TR_BlockStructure;0;0
~TR_BlockStructure;~TR_BlockStructure();;TR_BlockStructure;1;0
~TR_Structure;~TR_Structure();;TR_Structure;1;0
TR_InductionVariable;TR_InductionVariable(TR::RegisterMappedSymbol *,TR::VPConstraint *,TR::VPConstraint *,TR::VPConstraint *,enum TR_YesNoMaybe);;TR_InductionVariable;0;0
TR_InductionVariable;TR_InductionVariable();;TR_InductionVariable;0;0
getEntry;getEntry();;TR_InductionVariable;0;0
getExit;getExit();;TR_InductionVariable;0;0
getIncr;getIncr();;TR_InductionVariable;0;0
getLocal;getLocal();;TR_InductionVariable;0;0
isSigned;isSigned();;TR_InductionVariable;0;0
setEntry;setEntry(TR::VPConstraint *);;TR_InductionVariable;0;0
setExit;setExit(TR::VPConstraint *);;TR_InductionVariable;0;0
setIncr;setIncr(TR::VPConstraint *);;TR_InductionVariable;0;0
setLocal;setLocal(TR::RegisterMappedSymbol *);;TR_InductionVariable;0;0
TR_PredecessorIterator;TR_PredecessorIterator(class TR_PredecessorIterator &&);;TR_PredecessorIterator;1;0
TR_PredecessorIterator;TR_PredecessorIterator(const class TR_PredecessorIterator &);;TR_PredecessorIterator;1;0
TR_RegionStructure;TR_RegionStructure(TR::Compilation *,int32_t);;TR_RegionStructure;0;0
TR_RegionStructure;TR_RegionStructure(class TR_RegionStructure &&);;TR_RegionStructure;1;0
addAfterInductionVariable;addAfterInductionVariable(class TR_InductionVariable *,class TR_InductionVariable *);;TR_RegionStructure;0;0
addEdge;addEdge(TR::CFGEdge *,_Bool);;TR_RegionStructure;0;1
addExitEdge;addExitEdge(class TR_StructureSubGraphNode *,int32_t,_Bool,TR::CFGEdge *);;TR_RegionStructure;0;0
addExitEdge;addExitEdge(TR::CFGEdge *);;TR_RegionStructure;0;0
addExternalEdge;addExternalEdge(class TR_Structure *,int32_t,_Bool);;TR_RegionStructure;0;1
addGlobalRegisterCandidateToExits;addGlobalRegisterCandidateToExits(class TR_RegisterCandidate *);;TR_RegionStructure;0;0
addInductionVariable;addInductionVariable(class TR_InductionVariable *);;TR_RegionStructure;0;0
addInductionVariable;addInductionVariable(class TR_BasicInductionVariable *);;TR_RegionStructure;0;0
addSubNode;addSubNode(class TR_StructureSubGraphNode *);;TR_RegionStructure;0;0
asRegion;asRegion();;TR_RegionStructure;0;1
begin;begin();;TR_RegionStructure;0;0
canBeUnrolled;canBeUnrolled();;TR_RegionStructure;0;0
changeContinueLoopsToNestedLoops;changeContinueLoopsToNestedLoops(class TR_RegionStructure *);;TR_RegionStructure;0;1
checkForInternalCycles;checkForInternalCycles();;TR_RegionStructure;0;0
checkStructure;checkStructure(class TR_BitVector *);;TR_RegionStructure;0;1
cleanupAfterEdgeRemoval;cleanupAfterEdgeRemoval(TR::CFGNode *);;TR_RegionStructure;0;0
cleanupAfterNodeRemoval;cleanupAfterNodeRemoval();;TR_RegionStructure;0;0
clearAnalysisInfo;clearAnalysisInfo();;TR_RegionStructure;0;1
clearInductionVariables;clearInductionVariables();;TR_RegionStructure;0;0
cloneStructure;cloneStructure(TR::Block **,class TR_StructureSubGraphNode **,List<class TR_Structure> *,List<class TR_Structure> *);;TR_RegionStructure;0;1
cloneStructureEdges;cloneStructureEdges(TR::Block **);;TR_RegionStructure;0;1
collapseIntoParent;collapseIntoParent();;TR_RegionStructure;0;0
collectCFGEdgesTo;collectCFGEdgesTo(int32_t,List<TR::CFGEdge> *);;TR_RegionStructure;0;1
collectExitBlocks;collectExitBlocks(List<TR::Block> *,List<TR::CFGEdge> *);;TR_RegionStructure;0;1
computeInvariantExpressions;computeInvariantExpressions();;TR_RegionStructure;0;0
computeInvariantSymbols;computeInvariantSymbols();;TR_RegionStructure;0;0
containsInternalCycles;containsInternalCycles();;TR_RegionStructure;0;0
containsOnlyAcyclicRegions;containsOnlyAcyclicRegions();;TR_RegionStructure;0;0
doDataFlowAnalysis;doDataFlowAnalysis(class TR_DataFlowAnalysis *,_Bool);;TR_RegionStructure;0;1
end;end();;TR_RegionStructure;0;0
extractUnconditionalExits;extractUnconditionalExits(TR::Compilation *const,const TR::list<TR::Block *, TR::Region &> &);;TR_RegionStructure;0;0
findMatchingIV;findMatchingIV(TR::SymbolReference *);;TR_RegionStructure;0;0
findNodeInHierarchy;findNodeInHierarchy(int32_t);;TR_RegionStructure;0;0
findSubNodeInRegion;findSubNodeInRegion(int32_t);;TR_RegionStructure;0;0
getBasicInductionVariables;getBasicInductionVariables();;TR_RegionStructure;0;0
getBlocks;getBlocks(List<TR::Block> *,vcount_t);;TR_RegionStructure;0;1
getBlocks;getBlocks(List<TR::Block> *);;TR_RegionStructure;0;1
getBlocksAtSameNestingLevel;getBlocksAtSameNestingLevel();;TR_RegionStructure;0;0
getEntry;getEntry();;TR_RegionStructure;0;0
getEntryBlock;getEntryBlock();;TR_RegionStructure;0;1
getExitEdges;getExitEdges();;TR_RegionStructure;0;0
getFirstInductionVariable;getFirstInductionVariable();;TR_RegionStructure;0;0
getFrequencyEntryFactor;getFrequencyEntryFactor();;TR_RegionStructure;0;0
getInvariantExpressions;getInvariantExpressions();;TR_RegionStructure;0;0
getKind;getKind();;TR_RegionStructure;0;1
getMaxNestingDepth;getMaxNestingDepth(int32_t *,int32_t *);;TR_RegionStructure;0;1
getPrimaryInductionVariable;getPrimaryInductionVariable();;TR_RegionStructure;0;0
getUnrollFactor;getUnrollFactor();;TR_RegionStructure;0;0
getVersionedLoop;getVersionedLoop();;TR_RegionStructure;0;0
hasExceptionOutEdges;hasExceptionOutEdges();;TR_RegionStructure;0;0
hoistInvariantsOutOfNestedLoops;hoistInvariantsOutOfNestedLoops(class TR_LocalTransparency *,class TR_BitVector **,_Bool,class TR_BlockStructure *,class TR_RegionStructure *,int32_t);;TR_RegionStructure;0;1
isAcyclic;isAcyclic();;TR_RegionStructure;0;0
isCanonicalizedLoop;isCanonicalizedLoop();;TR_RegionStructure;0;0
isExitEdge;isExitEdge(TR::CFGEdge *);;TR_RegionStructure;0;0
isExprInvariant;isExprInvariant(TR::Node *,_Bool);;TR_RegionStructure;0;0
isExprTreeInvariant;isExprTreeInvariant(TR::Node *);;TR_RegionStructure;0;0
isExpressionTransparentIn;isExpressionTransparentIn(int32_t,class TR_LocalTransparency *);;TR_RegionStructure;0;1
isInvertible;isInvertible();;TR_RegionStructure;0;0
isNaturalLoop;isNaturalLoop();;TR_RegionStructure;0;0
isSubtreeInvariant;isSubtreeInvariant(TR::Node *,vcount_t);;TR_RegionStructure;0;0
isSymbolRefInvariant;isSymbolRefInvariant(TR::SymbolReference *);;TR_RegionStructure;0;0
markStructuresWithImproperRegions;markStructuresWithImproperRegions();;TR_RegionStructure;0;1
mergeInto;mergeInto(TR::Block *,TR::Block *);;TR_RegionStructure;0;1
numSubNodes;numSubNodes();;TR_RegionStructure;0;0
operator=;operator=(class TR_RegionStructure &&);;TR_RegionStructure;1;0
operator=;operator=(const class TR_RegionStructure &);;TR_RegionStructure;1;0
removeEdge;removeEdge(class TR_Structure *,class TR_Structure *);;TR_RegionStructure;0;1
removeEdge;removeEdge(TR::CFGEdge *,_Bool);;TR_RegionStructure;0;0
removeEdgeWithoutCleanup;removeEdgeWithoutCleanup(TR::CFGEdge *,_Bool);;TR_RegionStructure;0;0
removeExternalEdgeTo;removeExternalEdgeTo(class TR_Structure *,int32_t);;TR_RegionStructure;0;1
removeMergedBlock;removeMergedBlock(TR::Block *,TR::Block *);;TR_RegionStructure;0;1
removeSubNode;removeSubNode(class TR_StructureSubGraphNode *);;TR_RegionStructure;0;0
removeSubNodeWithoutCleanup;removeSubNodeWithoutCleanup(class TR_StructureSubGraphNode *);;TR_RegionStructure;0;0
renumber;renumber(int32_t);;TR_RegionStructure;0;1
renumberRecursively;renumberRecursively(int32_t,int32_t);;TR_RegionStructure;0;1
replaceExitPart;replaceExitPart(int32_t,int32_t);;TR_RegionStructure;0;0
replacePart;replacePart(class TR_Structure *,class TR_Structure *);;TR_RegionStructure;0;1
resetAnalysisInfo;resetAnalysisInfo();;TR_RegionStructure;0;1
resetAnalyzedStatus;resetAnalyzedStatus();;TR_RegionStructure;0;1
resetExprInvariant;resetExprInvariant(TR::Node *);;TR_RegionStructure;0;0
resetInvariance;resetInvariance();;TR_RegionStructure;0;0
resetVisitCounts;resetVisitCounts(vcount_t);;TR_RegionStructure;0;1
setAsCanonicalizedLoop;setAsCanonicalizedLoop(_Bool);;TR_RegionStructure;0;0
setAsInvertible;setAsInvertible(_Bool);;TR_RegionStructure;0;0
setBlocksAtSameNestingLevel;setBlocksAtSameNestingLevel(class TR_BitVector *);;TR_RegionStructure;0;0
setContainsInternalCycles;setContainsInternalCycles(_Bool);;TR_RegionStructure;0;0
setEntry;setEntry(class TR_StructureSubGraphNode *);;TR_RegionStructure;0;0
setExprInvariant;setExprInvariant(TR::Node *);;TR_RegionStructure;0;0
setFrequencyEntryFactor;setFrequencyEntryFactor(float);;TR_RegionStructure;0;0
setPrimaryInductionVariable;setPrimaryInductionVariable(class TR_PrimaryInductionVariable *);;TR_RegionStructure;0;0
setUnrollFactor;setUnrollFactor(int);;TR_RegionStructure;0;0
setVersionedLoop;setVersionedLoop(class TR_RegionStructure *);;TR_RegionStructure;0;0
subNodeFromStructure;subNodeFromStructure(class TR_Structure *);;TR_RegionStructure;0;0
updateInvariantExpressions;updateInvariantExpressions(TR::Node *,vcount_t);;TR_RegionStructure;0;0
updateInvariantSymbols;updateInvariantSymbols(TR::Node *,vcount_t);;TR_RegionStructure;0;0
~TR_RegionStructure;~TR_RegionStructure();;TR_RegionStructure;1;0
TR_StructureSubGraphNode;TR_StructureSubGraphNode(class TR_StructureSubGraphNode &&);;TR_StructureSubGraphNode;1;0
TR_StructureSubGraphNode;TR_StructureSubGraphNode(class TR_Structure *);;TR_StructureSubGraphNode;0;0
TR_StructureSubGraphNode;TR_StructureSubGraphNode(const class TR_StructureSubGraphNode &);;TR_StructureSubGraphNode;1;0
TR_StructureSubGraphNode;TR_StructureSubGraphNode(int32_t,TR::Region &);;TR_StructureSubGraphNode;0;0
asStructureSubGraphNode;asStructureSubGraphNode();;TR_StructureSubGraphNode;0;1
create;create(int32_t,class TR_RegionStructure *);;TR_StructureSubGraphNode;0;0
getStructure;getStructure();;TR_StructureSubGraphNode;0;0
operator=;operator=(const class TR_StructureSubGraphNode &);;TR_StructureSubGraphNode;1;0
operator=;operator=(class TR_StructureSubGraphNode &&);;TR_StructureSubGraphNode;1;0
setStructure;setStructure(class TR_Structure *);;TR_StructureSubGraphNode;0;0
~TR_StructureSubGraphNode;~TR_StructureSubGraphNode();;TR_StructureSubGraphNode;1;0
~TR_SuccessorIterator;~TR_SuccessorIterator();;TR_SuccessorIterator;1;0
(Arch: AMD64): Compiling ../../../../compiler/infra/SimpleRegex.cpp
(Arch: AMD64): Compiling ../../../../compiler/ilgen/IlGenRequest.cpp
CompileIlGenRequest;CompileIlGenRequest(TR::IlGeneratorMethodDetails &);TR;CompileIlGenRequest;0;0
IlGenRequest;IlGenRequest(class OMR::IlGenRequest &&);OMR;IlGenRequest;1;0
IlGenRequest;IlGenRequest(const class OMR::IlGenRequest &);OMR;IlGenRequest;1;0
IlGenRequest;IlGenRequest(TR::IlGeneratorMethodDetails &);OMR;IlGenRequest;0;0
IlGenRequest;IlGenRequest(TR::IlGeneratorMethodDetails &);TR;IlGenRequest;0;0
IlGenRequest;IlGenRequest(const class TR::IlGenRequest &);TR;IlGenRequest;1;0
IlGenRequest;IlGenRequest(class TR::IlGenRequest &&);TR;IlGenRequest;1;0
allowIlGenOptimizations;allowIlGenOptimizations();TR;IlGenRequest;0;1
details;details();OMR;IlGenRequest;0;0
getIlGenerator;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *);OMR;IlGenRequest;0;1
getIlGenerator;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *);TR;CompileIlGenRequest;0;1
operator=;operator=(class OMR::IlGenRequest &&);OMR;IlGenRequest;1;0
operator=;operator=(const class OMR::IlGenRequest &);OMR;IlGenRequest;1;0
operator=;operator=(const class TR::IlGenRequest &);TR;IlGenRequest;1;0
operator=;operator=(class TR::IlGenRequest &&);TR;IlGenRequest;1;0
operator=;operator=(class TR::CompileIlGenRequest &&);TR;CompileIlGenRequest;1;0
operator=;operator=(const class TR::CompileIlGenRequest &);TR;CompileIlGenRequest;1;0
print;print(class TR_FrontEnd *,TR::FILE *,const char *);OMR;IlGenRequest;0;1
print;print(class TR_FrontEnd *,TR::FILE *,const char *);TR;CompileIlGenRequest;0;1
~CompileIlGenRequest;~CompileIlGenRequest();TR;CompileIlGenRequest;1;0
~IlGenRequest;~IlGenRequest();OMR;IlGenRequest;1;0
~IlGenRequest;~IlGenRequest();TR;IlGenRequest;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(const class OMR::IlGeneratorMethodDetails &);OMR;IlGeneratorMethodDetails;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails();OMR;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails();TestCompiler;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails();TR;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(const class TestCompiler::IlGeneratorMethodDetails &);TestCompiler;IlGeneratorMethodDetails;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(class TR_ResolvedMethod *);TestCompiler;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(class TR_ResolvedMethod *);TR;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(TR::ResolvedMethod *);TestCompiler;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(TR::ResolvedMethod *);TR;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(class TestCompiler::IlGeneratorMethodDetails &&);TestCompiler;IlGeneratorMethodDetails;1;0
create;create(TR::IlGeneratorMethodDetails &,class TR_ResolvedMethod *);OMR;IlGeneratorMethodDetails;0;0
getIlGenerator;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *,_Bool,class TR_InlineBlocks *);TestCompiler;IlGeneratorMethodDetails;0;1
getIlVerifier;getIlVerifier();OMR;IlGeneratorMethodDetails;0;0
getMethod;getMethod();TestCompiler;IlGeneratorMethodDetails;0;0
getResolvedMethod;getResolvedMethod();TestCompiler;IlGeneratorMethodDetails;0;0
isMethodInProgress;isMethodInProgress();OMR;IlGeneratorMethodDetails;0;1
operator new;operator new(size_t,TR::IlGeneratorMethodDetails &);OMR;IlGeneratorMethodDetails;0;0
operator new;operator new(size_t,TR::IlGeneratorMethodDetails *);OMR;IlGeneratorMethodDetails;0;0
operator=;operator=(const class OMR::IlGeneratorMethodDetails &);OMR;IlGeneratorMethodDetails;1;0
operator=;operator=(class TestCompiler::IlGeneratorMethodDetails &&);TestCompiler;IlGeneratorMethodDetails;1;0
operator=;operator=(const class TestCompiler::IlGeneratorMethodDetails &);TestCompiler;IlGeneratorMethodDetails;1;0
operator=;operator=(class TR::IlGeneratorMethodDetails &&);TR;IlGeneratorMethodDetails;1;0
operator=;operator=(const class TR::IlGeneratorMethodDetails &);TR;IlGeneratorMethodDetails;1;0
print;print(class TR_FrontEnd *,TR::FILE *);OMR;IlGeneratorMethodDetails;0;0
print;print(class TR_FrontEnd *,TR::FILE *);TestCompiler;IlGeneratorMethodDetails;0;0
sameAs;sameAs(TR::IlGeneratorMethodDetails &);OMR;IlGeneratorMethodDetails;0;0
sameAs;sameAs(TR::IlGeneratorMethodDetails &,class TR_FrontEnd *);TestCompiler;IlGeneratorMethodDetails;0;0
self;self();OMR;IlGeneratorMethodDetails;0;0
setIlVerifier;setIlVerifier(TR::IlVerifier *);OMR;IlGeneratorMethodDetails;0;0
supportsInvalidation;supportsInvalidation();OMR;IlGeneratorMethodDetails;0;0
~IlGeneratorMethodDetails;~IlGeneratorMethodDetails();OMR;IlGeneratorMethodDetails;0;1
~IlGeneratorMethodDetails;~IlGeneratorMethodDetails();TestCompiler;IlGeneratorMethodDetails;0;1
~IlGeneratorMethodDetails;~IlGeneratorMethodDetails();TR;IlGeneratorMethodDetails;0;1
InliningIlGenRequest;InliningIlGenRequest(class TR::InliningIlGenRequest &&);TR;InliningIlGenRequest;1;0
InliningIlGenRequest;InliningIlGenRequest(const class TR::InliningIlGenRequest &);TR;InliningIlGenRequest;1;0
InliningIlGenRequest;InliningIlGenRequest(TR::IlGeneratorMethodDetails &,TR::ResolvedMethodSymbol *);TR;InliningIlGenRequest;0;0
PartialInliningIlGenRequest;PartialInliningIlGenRequest(TR::IlGeneratorMethodDetails &,TR::ResolvedMethodSymbol *,class TR_InlineBlocks *);TR;PartialInliningIlGenRequest;0;0
allowIlGenOptimizations;allowIlGenOptimizations();TR;InliningIlGenRequest;0;1
getIlGenerator;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *);TR;InliningIlGenRequest;0;1
getIlGenerator;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *);TR;PartialInliningIlGenRequest;0;1
operator=;operator=(class TR::InliningIlGenRequest &&);TR;InliningIlGenRequest;1;0
operator=;operator=(const class TR::InliningIlGenRequest &);TR;InliningIlGenRequest;1;0
operator=;operator=(class TR::PartialInliningIlGenRequest &&);TR;PartialInliningIlGenRequest;1;0
operator=;operator=(const class TR::PartialInliningIlGenRequest &);TR;PartialInliningIlGenRequest;1;0
print;print(class TR_FrontEnd *,TR::FILE *,const char *);TR;InliningIlGenRequest;0;1
print;print(class TR_FrontEnd *,TR::FILE *,const char *);TR;PartialInliningIlGenRequest;0;1
~InliningIlGenRequest;~InliningIlGenRequest();TR;InliningIlGenRequest;1;0
~PartialInliningIlGenRequest;~PartialInliningIlGenRequest();TR;PartialInliningIlGenRequest;1;0
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRSymbol.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRBlock.cpp
BSDTimer;BSDTimer(class CS2::BSDTimer &&);CS2;BSDTimer;1;0
BSDTimer;BSDTimer();CS2;BSDTimer;1;0
BSDTimer;BSDTimer(const class CS2::BSDTimer &);CS2;BSDTimer;1;0
Timer;Timer(class CS2::Timer &&);CS2;Timer;1;0
Timer;Timer(const class CS2::Timer &);CS2;Timer;1;0
Timer;Timer();CS2;Timer;1;0
~BSDTimer;~BSDTimer();CS2;BSDTimer;1;0
~Timer;~Timer();CS2;Timer;1;0
Block;Block(const class TR::Block &);TR;Block;1;0
Optimization;Optimization(const class TR::Optimization &);TR;Optimization;1;0
TR_Inliner;TR_Inliner(const class TR_Inliner &);;TR_Inliner;1;0
TR_Inliner;TR_Inliner(class TR_Inliner &&);;TR_Inliner;1;0
TR_Inliner;TR_Inliner(TR::OptimizationManager *);;TR_Inliner;0;0
create;create(TR::OptimizationManager *);;TR_Inliner;0;0
operator=;operator=(class TR_Inliner &&);;TR_Inliner;1;0
operator=;operator=(const class TR_Inliner &);;TR_Inliner;1;0
optDetailString;optDetailString();;TR_Inliner;0;1
perform;perform();;TR_Inliner;0;1
~TR_Inliner;~TR_Inliner();;TR_Inliner;1;1
OMR_InlinerPolicy;OMR_InlinerPolicy(class OMR_InlinerPolicy &&);;OMR_InlinerPolicy;1;0
OMR_InlinerPolicy;OMR_InlinerPolicy(TR::Compilation *);;OMR_InlinerPolicy;0;0
OptimizationPolicy;OptimizationPolicy(const class TR::OptimizationPolicy &);TR;OptimizationPolicy;1;0
OptimizationPolicy;OptimizationPolicy(TR::Compilation *);TR;OptimizationPolicy;0;0
aggressiveSmallAppOpts;aggressiveSmallAppOpts();;OMR_InlinerPolicy;0;0
allocator;allocator();TR;OptimizationPolicy;0;0
alwaysWorthInlining;alwaysWorthInlining(class TR_ResolvedMethod *,TR::Node *);;OMR_InlinerPolicy;0;1
callMustBeInlined;callMustBeInlined(struct TR_CallTarget *);;OMR_InlinerPolicy;0;1
canInlineMethodWhileInstrumenting;canInlineMethodWhileInstrumenting(class TR_ResolvedMethod *);;OMR_InlinerPolicy;0;1
checkIfTargetInlineable;checkIfTargetInlineable(struct TR_CallTarget *,struct TR_CallSite *,TR::Compilation *);;OMR_InlinerPolicy;0;1
comp;comp();TR;OptimizationPolicy;0;0
determineInliningHeuristic;determineInliningHeuristic(TR::ResolvedMethodSymbol *);;OMR_InlinerPolicy;0;1
dontPrivatizeArgumentsForRecognizedMethod;dontPrivatizeArgumentsForRecognizedMethod(TR::RecognizedMethod);;OMR_InlinerPolicy;0;1
fe;fe();TR;OptimizationPolicy;0;0
getInitialBytecodeSize;getInitialBytecodeSize(TR::ResolvedMethodSymbol *,TR::Compilation *);;OMR_InlinerPolicy;0;0
getInitialBytecodeSize;getInitialBytecodeSize(class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,TR::Compilation *);;OMR_InlinerPolicy;0;1
inlineMethodEvenForColdBlocks;inlineMethodEvenForColdBlocks(class TR_ResolvedMethod *);;OMR_InlinerPolicy;0;1
inlineRecognizedMethod;inlineRecognizedMethod(TR::RecognizedMethod);;OMR_InlinerPolicy;0;1
mustBeInlinedEvenInDebug;mustBeInlinedEvenInDebug(class TR_ResolvedMethod *,TR::TreeTop *);;OMR_InlinerPolicy;0;0
operator delete;operator delete(void *,size_t);TR;OptimizationPolicy;0;0
operator new;operator new(size_t,TR::Allocator);TR;OptimizationPolicy;0;0
operator=;operator=(const class TR::OptimizationPolicy &);TR;OptimizationPolicy;1;0
operator=;operator=(const class OMR_InlinerPolicy &);;OMR_InlinerPolicy;1;0
operator=;operator=(class OMR_InlinerPolicy &&);;OMR_InlinerPolicy;1;0
replaceSoftwareCheckWithHardwareCheck;replaceSoftwareCheckWithHardwareCheck(class TR_ResolvedMethod *);;OMR_InlinerPolicy;0;1
skipHCRGuardForCallee;skipHCRGuardForCallee(class TR_ResolvedMethod *);;OMR_InlinerPolicy;0;1
suitableForRemat;suitableForRemat(TR::Compilation *,TR::Node *,struct TR_VirtualGuardSelection *);;OMR_InlinerPolicy;0;1
supressInliningRecognizedInitialCallee;supressInliningRecognizedInitialCallee(struct TR_CallSite *,TR::Compilation *);;OMR_InlinerPolicy;0;1
trMemory;trMemory();TR;OptimizationPolicy;0;0
tryToInline;tryToInline(struct TR_CallTarget *,class TR_CallStack *,_Bool);;OMR_InlinerPolicy;0;1
tryToInlineGeneral;tryToInlineGeneral(struct TR_CallTarget *,class TR_CallStack *,_Bool);;OMR_InlinerPolicy;0;0
tryToInlineTrivialMethod;tryToInlineTrivialMethod(class TR_CallStack *,struct TR_CallTarget *);;OMR_InlinerPolicy;0;1
willBeInlinedInCodeGen;willBeInlinedInCodeGen(TR::RecognizedMethod);;OMR_InlinerPolicy;0;1
~OMR_InlinerPolicy;~OMR_InlinerPolicy();;OMR_InlinerPolicy;1;1
~OptimizationPolicy;~OptimizationPolicy();TR;OptimizationPolicy;0;1
OMR_InlinerHelper;OMR_InlinerHelper(class OMR_InlinerHelper &&);;OMR_InlinerHelper;1;0
OMR_InlinerHelper;OMR_InlinerHelper(const class OMR_InlinerHelper &);;OMR_InlinerHelper;1;0
inliner;inliner();;OMR_InlinerHelper;0;0
operator=;operator=(class OMR_InlinerHelper &&);;OMR_InlinerHelper;1;0
operator=;operator=(const class OMR_InlinerHelper &);;OMR_InlinerHelper;1;0
setInliner;setInliner(class TR_InlinerBase *);;OMR_InlinerHelper;0;0
tracer;tracer();;OMR_InlinerHelper;0;0
~OMR_InlinerHelper;~OMR_InlinerHelper();;OMR_InlinerHelper;1;0
OMR_InlinerUtil;OMR_InlinerUtil(class OMR_InlinerUtil &&);;OMR_InlinerUtil;1;0
OMR_InlinerUtil;OMR_InlinerUtil(TR::Compilation *);;OMR_InlinerUtil;0;0
OptimizationUtil;OptimizationUtil(const class TR::OptimizationUtil &);TR;OptimizationUtil;1;0
OptimizationUtil;OptimizationUtil(TR::Compilation *);TR;OptimizationUtil;0;0
addTargetIfMethodIsNotOverridenInReceiversHierarchy;addTargetIfMethodIsNotOverridenInReceiversHierarchy(class TR_IndirectCallSite *);;OMR_InlinerUtil;0;1
addTargetIfThereIsSingleImplementer;addTargetIfThereIsSingleImplementer(class TR_IndirectCallSite *);;OMR_InlinerUtil;0;1
adjustByteCodeSize;adjustByteCodeSize(class TR_ResolvedMethod *,_Bool,TR::Block *,int &);;OMR_InlinerUtil;0;1
adjustCallerWeightLimit;adjustCallerWeightLimit(TR::ResolvedMethodSymbol *,int &);;OMR_InlinerUtil;0;1
adjustMethodByteCodeSizeThreshold;adjustMethodByteCodeSizeThreshold(TR::ResolvedMethodSymbol *,int &);;OMR_InlinerUtil;0;1
allocator;allocator();TR;OptimizationUtil;0;0
calleeTreeTopPreMergeActions;calleeTreeTopPreMergeActions(TR::ResolvedMethodSymbol *,struct TR_CallTarget *);;OMR_InlinerUtil;0;1
collectCalleeMethodClassInfo;collectCalleeMethodClassInfo(class TR_ResolvedMethod *);;OMR_InlinerUtil;0;1
comp;comp();TR;OptimizationUtil;0;0
computeMethodBranchProfileInfo;computeMethodBranchProfileInfo(TR::Block *,struct TR_CallTarget *,TR::ResolvedMethodSymbol *);;OMR_InlinerUtil;0;1
computePrexInfo;computePrexInfo(struct TR_CallTarget *);;OMR_InlinerUtil;0;1
createInnerPrexInfo;createInnerPrexInfo(TR::Compilation *,TR::ResolvedMethodSymbol *,class TR_CallStack *,TR::TreeTop *,TR::Node *,enum TR_VirtualGuardKind);;OMR_InlinerUtil;0;1
createPrexArgInfoForCallTarget;createPrexArgInfoForCallTarget(struct TR_VirtualGuardSelection *,class TR_ResolvedMethod *);;OMR_InlinerUtil;0;1
estimateAndRefineBytecodeSize;estimateAndRefineBytecodeSize(struct TR_CallSite *,struct TR_CallTarget *,class TR_CallStack *,int32_t &);;OMR_InlinerUtil;0;1
fe;fe();TR;OptimizationUtil;0;0
findSingleJittedImplementer;findSingleJittedImplementer(class TR_IndirectCallSite *);;OMR_InlinerUtil;0;1
getCallCount;getCallCount(TR::Node *);;OMR_InlinerUtil;0;1
getInlinerTracer;getInlinerTracer(TR::Optimization *);;OMR_InlinerUtil;0;1
getTransformInlinedFunction;getTransformInlinedFunction(TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,TR::Block *,TR::TreeTop *,TR::Node *,class TR_ParameterToArgumentMapper &,struct TR_VirtualGuardSelection *,List<TR::SymbolReference> &,List<TR::SymbolReference> &,List<TR::SymbolReference> &);;OMR_InlinerUtil;0;1
needTargetedInlining;needTargetedInlining(TR::ResolvedMethodSymbol *);;OMR_InlinerUtil;0;1
operator delete;operator delete(void *,size_t);TR;OptimizationUtil;0;0
operator new;operator new(size_t,TR::Allocator);TR;OptimizationUtil;0;0
operator=;operator=(const class TR::OptimizationUtil &);TR;OptimizationUtil;1;0
operator=;operator=(class OMR_InlinerUtil &&);;OMR_InlinerUtil;1;0
operator=;operator=(const class OMR_InlinerUtil &);;OMR_InlinerUtil;1;0
refineColdness;refineColdness(TR::Node *,_Bool &);;OMR_InlinerUtil;0;1
refineInlineGuard;refineInlineGuard(TR::Node *,TR::Block *&,TR::Block *&,_Bool &,TR::ResolvedMethodSymbol *,TR::TreeTop *,TR::TreeTop *&,TR::Block *);;OMR_InlinerUtil;0;1
refineInliningThresholds;refineInliningThresholds(TR::Compilation *,int32_t &,int32_t &,int32_t &,int32_t &,int32_t &,int32_t &,int32_t);;OMR_InlinerUtil;0;1
storeValueInATemp;storeValueInATemp(TR::Compilation *,TR::Node *,TR::SymbolReference *&,TR::TreeTop *,TR::ResolvedMethodSymbol *,List<TR::SymbolReference> &,List<TR::SymbolReference> &,List<TR::SymbolReference> *,_Bool,TR::TreeTop **,_Bool,int32_t);;OMR_InlinerUtil;0;0
trMemory;trMemory();TR;OptimizationUtil;0;0
validateInterfaceImplementation;validateInterfaceImplementation(class TR_ResolvedMethod *);;OMR_InlinerUtil;0;1
~OMR_InlinerUtil;~OMR_InlinerUtil();;OMR_InlinerUtil;1;1
~OptimizationUtil;~OptimizationUtil();TR;OptimizationUtil;0;1
TransformUtil;TransformUtil();OMR;TransformUtil;0;0
TransformUtil;TransformUtil();TR;TransformUtil;0;0
TransformUtil;TransformUtil(const class OMR::TransformUtil &);OMR;TransformUtil;1;0
TransformUtil;TransformUtil(class OMR::TransformUtil &&);OMR;TransformUtil;1;0
convertWidthToShift;convertWidthToShift(int32_t);OMR;TransformUtil;0;0
fieldShouldBeCompressed;fieldShouldBeCompressed(TR::Node *,TR::Compilation *);OMR;TransformUtil;0;0
isNoopConversion;isNoopConversion(TR::Compilation *,TR::Node *);OMR;TransformUtil;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;TransformUtil;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;TransformUtil;0;0
operator delete;operator delete(void *,size_t);OMR;TransformUtil;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;TransformUtil;0;0
operator delete;operator delete(void *,TR::Region &);OMR;TransformUtil;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;TransformUtil;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;TransformUtil;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;TransformUtil;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;TransformUtil;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;TransformUtil;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;TransformUtil;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;TransformUtil;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;TransformUtil;0;0
operator new;operator new(size_t,TR::Region &);OMR;TransformUtil;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;TransformUtil;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;TransformUtil;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;TransformUtil;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;TransformUtil;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;TransformUtil;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;TransformUtil;0;0
recursivelySetNodeVisitCount;recursivelySetNodeVisitCount(TR::Node *,vcount_t);OMR;TransformUtil;0;0
removeTree;removeTree(TR::Compilation *,TR::TreeTop *);OMR;TransformUtil;0;0
scalarizeAddressParameter;scalarizeAddressParameter(TR::Compilation *,TR::Node *,size_t,TR::DataType,TR::SymbolReference *,_Bool);OMR;TransformUtil;0;0
scalarizeArrayCopy;scalarizeArrayCopy(TR::Compilation *,TR::Node *,TR::TreeTop *,_Bool,_Bool &,TR::SymbolReference *,TR::SymbolReference *,_Bool);OMR;TransformUtil;0;0
self;self();OMR;TransformUtil;0;0
transformDirectLoad;transformDirectLoad(TR::Compilation *,TR::Node *);OMR;TransformUtil;0;0
transformIndirectLoad;transformIndirectLoad(TR::Compilation *,TR::Node *);OMR;TransformUtil;0;0
transformIndirectLoadChain;transformIndirectLoadChain(TR::Compilation *,TR::Node *,TR::Node *,TR::class KnownObjectTable::Index,TR::Node **);OMR;TransformUtil;0;0
transformIndirectLoadChainAt;transformIndirectLoadChainAt(TR::Compilation *,TR::Node *,TR::Node *,uintptrj_t *,TR::Node **);OMR;TransformUtil;0;0
TR_DirectCallSite;TR_DirectCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool);;TR_DirectCallSite;0;0
TR_DirectCallSite;TR_DirectCallSite(class TR_DirectCallSite &&);;TR_DirectCallSite;1;0
findCallSiteTarget;findCallSiteTarget(class TR_CallStack *,class TR_InlinerBase *);;TR_DirectCallSite;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_DirectCallSite;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_DirectCallSite;0;0
name;name();;TR_DirectCallSite;0;1
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_DirectCallSite;0;0
operator delete;operator delete(void *,size_t);;TR_DirectCallSite;0;0
operator delete;operator delete(void *,TR::Region &);;TR_DirectCallSite;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_DirectCallSite;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_DirectCallSite;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_DirectCallSite;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_DirectCallSite;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_DirectCallSite;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_DirectCallSite;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
operator new;operator new(size_t,TR::Region &);;TR_DirectCallSite;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_DirectCallSite;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_DirectCallSite;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_DirectCallSite;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_DirectCallSite;0;0
operator=;operator=(class TR_DirectCallSite &&);;TR_DirectCallSite;1;0
operator=;operator=(const class TR_DirectCallSite &);;TR_DirectCallSite;1;0
~TR_DirectCallSite;~TR_DirectCallSite();;TR_DirectCallSite;1;0
TR_CallStack;TR_CallStack(TR::Compilation *,TR::ResolvedMethodSymbol *,class TR_ResolvedMethod *,class TR_CallStack *,int32_t,_Bool);;TR_CallStack;0;0
addAutomatic;addAutomatic(TR::AutomaticSymbol *);;TR_CallStack;0;0
addInjectedBasicBlockTemp;addInjectedBasicBlockTemp(TR::SymbolReference *);;TR_CallStack;0;0
addTemp;addTemp(TR::SymbolReference *);;TR_CallStack;0;0
blockInfo;blockInfo(int32_t);;TR_CallStack;0;0
commit;commit();;TR_CallStack;0;0
comp;comp();;TR_CallStack;0;0
initializeControlFlowInfo;initializeControlFlowInfo(TR::ResolvedMethodSymbol *);;TR_CallStack;0;0
isAnywhereOnTheStack;isAnywhereOnTheStack(class TR_ResolvedMethod *,int32_t);;TR_CallStack;0;0
isCurrentlyOnTheStack;isCurrentlyOnTheStack(class TR_ResolvedMethod *,int32_t);;TR_CallStack;0;0
makeBasicBlockTempsAvailable;makeBasicBlockTempsAvailable(List<TR::SymbolReference> &);;TR_CallStack;0;0
makeTempsAvailable;makeTempsAvailable(List<TR::SymbolReference> &,List<TR::SymbolReference> &);;TR_CallStack;0;0
makeTempsAvailable;makeTempsAvailable(List<TR::SymbolReference> &);;TR_CallStack;0;0
trHeapMemory;trHeapMemory();;TR_CallStack;0;0
trMemory;trMemory();;TR_CallStack;0;0
trPersistentMemory;trPersistentMemory();;TR_CallStack;0;0
trStackMemory;trStackMemory();;TR_CallStack;0;0
updateState;updateState(TR::Block *);;TR_CallStack;0;0
~TR_CallStack;~TR_CallStack();;TR_CallStack;0;0
IsOSRFramesSizeUnderThreshold;IsOSRFramesSizeUnderThreshold();;TR_InlinerBase;0;0
TR_DumbInliner;TR_DumbInliner(TR::Optimizer *,TR::Optimization *,uint32_t,uint32_t);;TR_DumbInliner;0;0
TR_InlineCall;TR_InlineCall(TR::Optimizer *,TR::Optimization *);;TR_InlineCall;0;0
TR_InlinerBase;TR_InlinerBase(TR::Optimizer *,TR::Optimization *);;TR_InlinerBase;0;0
addAdditionalGuard;addAdditionalGuard(TR::Node *,TR::ResolvedMethodSymbol *,class TR_OpaqueClassBlock *,TR::Block *,TR::Block *,TR::Block *,enum TR_VirtualGuardKind,enum TR_VirtualGuardTestType,_Bool,TR::CFG *);;TR_InlinerBase;0;0
addGuardForVirtual;addGuardForVirtual(TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,TR::TreeTop *,TR::Node *,class TR_OpaqueClassBlock *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,class TR_TransformInlinedFunction &,List<TR::SymbolReference> &,struct TR_VirtualGuardSelection *,TR::TreeTop **,struct TR_CallTarget *);;TR_InlinerBase;0;0
allowBiggerMethods;allowBiggerMethods();;TR_InlinerBase;0;0
alwaysWorthInlining;alwaysWorthInlining(class TR_ResolvedMethod *,TR::Node *);;TR_InlinerBase;0;0
analyzeCallSite;analyzeCallSite(class TR_CallStack *,TR::TreeTop *,TR::Node *,TR::Node *);;TR_DumbInliner;0;1
applyPolicyToTargets;applyPolicyToTargets(class TR_CallStack *,struct TR_CallSite *);;TR_InlinerBase;0;0
buildPrexArgInfoForOutermostMethod;buildPrexArgInfoForOutermostMethod(TR::ResolvedMethodSymbol *);;TR_InlinerBase;0;0
callMustBeInlinedRegardlessOfSize;callMustBeInlinedRegardlessOfSize(struct TR_CallSite *);;TR_InlinerBase;0;0
checkInlineableWithoutInitialCalleeSymbol;checkInlineableWithoutInitialCalleeSymbol(struct TR_CallSite *,TR::Compilation *);;TR_InlinerBase;0;0
cleanup;cleanup(TR::ResolvedMethodSymbol *,_Bool);;TR_InlinerBase;0;0
cloneChildren;cloneChildren(TR::Node *,TR::Node *,uint32_t);;TR_InlinerBase;0;0
comp;comp();;TR_InlinerBase;0;0
createParmMap;createParmMap(TR::ResolvedMethodSymbol *,TR_LinkHead<struct TR_ParameterMapping> &);;TR_InlinerBase;0;0
createVirtualGuard;createVirtualGuard(TR::Node *,TR::ResolvedMethodSymbol *,TR::TreeTop *,int16_t,class TR_OpaqueClassBlock *,_Bool,struct TR_VirtualGuardSelection *);;TR_InlinerBase;0;0
exceedsSizeThreshold;exceedsSizeThreshold(struct TR_CallSite *,int,TR::Block *,TR_ByteCodeInfo &,int32_t,class TR_ResolvedMethod *,class TR_ResolvedMethod *,TR::Node *,_Bool);;TR_InlinerBase;0;1
fe;fe();;TR_InlinerBase;0;0
findAndUpdateCallSiteInGraph;findAndUpdateCallSiteInGraph(class TR_CallStack *,TR_ByteCodeInfo &,TR::TreeTop *,TR::Node *,TR::Node *,struct TR_CallTarget *);;TR_InlinerBase;0;0
firstPass;firstPass();;TR_InlinerBase;0;0
forceCalcInlining;forceCalcInlining(struct TR_CallTarget *);;TR_InlinerBase;0;0
forceInline;forceInline(struct TR_CallTarget *);;TR_InlinerBase;0;0
forceVarInitInlining;forceVarInitInlining(struct TR_CallTarget *);;TR_InlinerBase;0;0
getBorderFrequencies;getBorderFrequencies(int32_t &,int32_t &,class TR_ResolvedMethod *,TR::Node *);;TR_InlinerBase;0;0
getCurrentNumberOfNodes;getCurrentNumberOfNodes();;TR_InlinerBase;0;0
getMaxInliningCallSites;getMaxInliningCallSites();;TR_InlinerBase;0;0
getMaxRecursiveCallByteCodeSizeEstimate;getMaxRecursiveCallByteCodeSizeEstimate();;TR_InlinerBase;0;0
getNodeCountThreshold;getNodeCountThreshold();;TR_InlinerBase;0;0
getNumAsyncChecks;getNumAsyncChecks();;TR_InlinerBase;0;0
getOptimizer;getOptimizer();;TR_InlinerBase;0;0
getPolicy;getPolicy();;TR_InlinerBase;0;0
getSizeThreshold;getSizeThreshold();;TR_InlinerBase;0;0
getStoreToCachedPrivateStatic;getStoreToCachedPrivateStatic();;TR_InlinerBase;0;0
getSuccessorsWithGlobalLabels;getSuccessorsWithGlobalLabels();;TR_InlinerBase;0;0
getSymbolAndFindInlineTargets;getSymbolAndFindInlineTargets(class TR_CallStack *,struct TR_CallSite *,_Bool);;TR_InlinerBase;0;0
getUtil;getUtil();;TR_InlinerBase;0;0
getVisitCount;getVisitCount();;TR_InlinerBase;0;0
heuristicForUsingOSR;heuristicForUsingOSR(TR::Node *,TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,_Bool);;TR_InlinerBase;0;0
incCurrentNumberOfNodes;incCurrentNumberOfNodes(int32_t);;TR_InlinerBase;0;0
initializeControlFlowInfo;initializeControlFlowInfo(class TR_CallStack *,TR::ResolvedMethodSymbol *);;TR_InlinerBase;0;0
inlineCall;inlineCall(TR::TreeTop *,class TR_OpaqueClassBlock *,_Bool,class TR_PrexArgInfo *,int32_t);;TR_InlineCall;0;0
inlineCallTarget;inlineCallTarget(class TR_CallStack *,struct TR_CallTarget *,_Bool,class TR_PrexArgInfo *,TR::TreeTop **);;TR_InlinerBase;0;0
inlineCallTarget2;inlineCallTarget2(class TR_CallStack *,struct TR_CallTarget *,TR::TreeTop **,_Bool,int32_t);;TR_InlinerBase;0;0
inlineCallTargets;inlineCallTargets(TR::ResolvedMethodSymbol *,class TR_CallStack *,class TR_InnerPreexistenceInfo *);;TR_InlinerBase;0;1
inlineCallTargets;inlineCallTargets(TR::ResolvedMethodSymbol *,class TR_CallStack *,class TR_InnerPreexistenceInfo *);;TR_DumbInliner;0;1
inlineFromGraph;inlineFromGraph(class TR_CallStack *,struct TR_CallTarget *,class TR_InnerPreexistenceInfo *);;TR_InlinerBase;0;0
inlineRecognizedMethod;inlineRecognizedMethod(TR::RecognizedMethod);;TR_InlinerBase;0;1
inlineRecognizedMethod;inlineRecognizedMethod(TR::RecognizedMethod);;TR_InlineCall;0;1
inlineSynchronized;inlineSynchronized();;TR_InlinerBase;0;0
inlineVirtuals;inlineVirtuals();;TR_InlinerBase;0;0
isEDODisableInlinedProfilingInfo;isEDODisableInlinedProfilingInfo();;TR_InlinerBase;0;0
linkOSRCodeBlocks;linkOSRCodeBlocks();;TR_InlinerBase;0;0
operator=;operator=(const class TR_InlinerBase &);;TR_InlinerBase;1;0
operator=;operator=(class TR_InlinerBase &&);;TR_InlinerBase;1;0
operator=;operator=(class TR_DumbInliner &&);;TR_DumbInliner;1;0
operator=;operator=(const class TR_DumbInliner &);;TR_DumbInliner;1;0
operator=;operator=(class TR_InlineCall &&);;TR_InlineCall;1;0
operator=;operator=(const class TR_InlineCall &);;TR_InlineCall;1;0
performInlining;performInlining(TR::ResolvedMethodSymbol *);;TR_InlinerBase;0;0
rematerializeCallArguments;rematerializeCallArguments(class TR_TransformInlinedFunction &,struct TR_VirtualGuardSelection *,TR::Node *,TR::Block *,TR::TreeTop *);;TR_InlinerBase;0;0
replaceCallNode;replaceCallNode(TR::ResolvedMethodSymbol *,TR::Node *,rcount_t,TR::TreeTop *,TR::Node *,TR::Node *);;TR_InlinerBase;0;0
replaceCallNodeReferences;replaceCallNodeReferences(TR::Node *,TR::Node *,uint32_t,TR::Node *,TR::Node *,rcount_t &);;TR_InlinerBase;0;0
scaleSizeBasedOnBlockFrequency;scaleSizeBasedOnBlockFrequency(int32_t,int32_t,int32_t,class TR_ResolvedMethod *,TR::Node *,int32_t);;TR_InlinerBase;0;0
setFirstPass;setFirstPass(_Bool);;TR_InlinerBase;0;0
setInlineSynchronized;setInlineSynchronized(_Bool);;TR_InlinerBase;0;0
setInlineThresholds;setInlineThresholds(TR::ResolvedMethodSymbol *);;TR_InlinerBase;0;0
setInlineVirtuals;setInlineVirtuals(_Bool);;TR_InlinerBase;0;0
setPolicy;setPolicy(class OMR_InlinerPolicy *);;TR_InlinerBase;0;0
setSizeThreshold;setSizeThreshold(uint32_t);;TR_InlinerBase;0;0
setStoreToCachedPrivateStatic;setStoreToCachedPrivateStatic(TR::Node *);;TR_InlinerBase;0;0
setUtil;setUtil(class OMR_InlinerUtil *);;TR_InlinerBase;0;0
supportsMultipleTargetInlining;supportsMultipleTargetInlining();;TR_InlinerBase;0;1
trHeapMemory;trHeapMemory();;TR_InlinerBase;0;0
trMemory;trMemory();;TR_InlinerBase;0;0
trPersistentMemory;trPersistentMemory();;TR_InlinerBase;0;0
trStackMemory;trStackMemory();;TR_InlinerBase;0;0
tracer;tracer();;TR_InlinerBase;0;0
tryToGenerateILForMethod;tryToGenerateILForMethod(TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,struct TR_CallTarget *);;TR_InlinerBase;0;0
tryToInline;tryToInline(char *,struct TR_CallTarget *);;TR_DumbInliner;0;0
tryToInlineTrivialMethod;tryToInlineTrivialMethod(class TR_CallStack *,struct TR_CallTarget *);;TR_InlinerBase;0;0
~TR_DumbInliner;~TR_DumbInliner();;TR_DumbInliner;1;0
~TR_InlineCall;~TR_InlineCall();;TR_InlineCall;1;0
~TR_InlinerBase;~TR_InlinerBase();;TR_InlinerBase;1;0
TR_FunctionPointerCallSite;TR_FunctionPointerCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool);;TR_FunctionPointerCallSite;0;0
TR_IndirectCallSite;TR_IndirectCallSite(class TR_IndirectCallSite &&);;TR_IndirectCallSite;1;0
TR_IndirectCallSite;TR_IndirectCallSite(const class TR_IndirectCallSite &);;TR_IndirectCallSite;1;0
TR_IndirectCallSite;TR_IndirectCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool);;TR_IndirectCallSite;0;0
addTargetIfMethodIsNotOverriden;addTargetIfMethodIsNotOverriden(class TR_InlinerBase *);;TR_IndirectCallSite;0;0
addTargetIfMethodIsNotOverridenInReceiversHierarchy;addTargetIfMethodIsNotOverridenInReceiversHierarchy(class TR_InlinerBase *);;TR_IndirectCallSite;0;0
addTargetIfThereIsSingleImplementer;addTargetIfThereIsSingleImplementer(class TR_InlinerBase *);;TR_IndirectCallSite;0;0
extractAndLogClassArgument;extractAndLogClassArgument(class TR_InlinerBase *);;TR_IndirectCallSite;0;0
findCallSiteTarget;findCallSiteTarget(class TR_CallStack *,class TR_InlinerBase *);;TR_IndirectCallSite;0;1
findCallTargetUsingArgumentPreexistence;findCallTargetUsingArgumentPreexistence(class TR_InlinerBase *);;TR_IndirectCallSite;0;1
findSingleJittedImplementer;findSingleJittedImplementer(class TR_InlinerBase *);;TR_IndirectCallSite;0;1
getClassFromArgInfo;getClassFromArgInfo();;TR_IndirectCallSite;0;0
getClassFromMethod;getClassFromMethod();;TR_IndirectCallSite;0;1
getResolvedMethod;getResolvedMethod(class TR_OpaqueClassBlock *);;TR_IndirectCallSite;0;1
hasFixedTypeArgInfo;hasFixedTypeArgInfo();;TR_IndirectCallSite;0;0
hasResolvedTypeArgInfo;hasResolvedTypeArgInfo();;TR_IndirectCallSite;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_IndirectCallSite;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_FunctionPointerCallSite;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_IndirectCallSite;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_FunctionPointerCallSite;0;0
name;name();;TR_IndirectCallSite;0;1
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_IndirectCallSite;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_FunctionPointerCallSite;0;0
operator delete;operator delete(void *,size_t);;TR_IndirectCallSite;0;0
operator delete;operator delete(void *,size_t);;TR_FunctionPointerCallSite;0;0
operator delete;operator delete(void *,TR::Region &);;TR_IndirectCallSite;0;0
operator delete;operator delete(void *,TR::Region &);;TR_FunctionPointerCallSite;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_IndirectCallSite;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_FunctionPointerCallSite;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_IndirectCallSite;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_FunctionPointerCallSite;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_IndirectCallSite;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_FunctionPointerCallSite;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_IndirectCallSite;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_FunctionPointerCallSite;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_IndirectCallSite;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_FunctionPointerCallSite;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_IndirectCallSite;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_FunctionPointerCallSite;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
operator new;operator new(size_t,TR::Region &);;TR_IndirectCallSite;0;0
operator new;operator new(size_t,TR::Region &);;TR_FunctionPointerCallSite;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_IndirectCallSite;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_FunctionPointerCallSite;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_IndirectCallSite;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_FunctionPointerCallSite;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_IndirectCallSite;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_FunctionPointerCallSite;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_IndirectCallSite;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_FunctionPointerCallSite;0;0
operator=;operator=(class TR_IndirectCallSite &&);;TR_IndirectCallSite;1;0
operator=;operator=(const class TR_IndirectCallSite &);;TR_IndirectCallSite;1;0
operator=;operator=(class TR_FunctionPointerCallSite &&);;TR_FunctionPointerCallSite;1;0
operator=;operator=(const class TR_FunctionPointerCallSite &);;TR_FunctionPointerCallSite;1;0
tryToRefineReceiverClassBasedOnResolvedTypeArgInfo;tryToRefineReceiverClassBasedOnResolvedTypeArgInfo(class TR_InlinerBase *);;TR_IndirectCallSite;0;0
~TR_FunctionPointerCallSite;~TR_FunctionPointerCallSite();;TR_FunctionPointerCallSite;1;0
~TR_IndirectCallSite;~TR_IndirectCallSite();;TR_IndirectCallSite;1;0
TR_InlinerTracer;TR_InlinerTracer(TR::Compilation *,class TR_FrontEnd *,TR::Optimization *);;TR_InlinerTracer;0;0
TR_LogTracer;TR_LogTracer(TR::Compilation *,TR::Optimization *);;TR_LogTracer;0;0
alwaysTraceM;alwaysTraceM(const char *);;TR_LogTracer;0;0
comp;comp();;TR_LogTracer;0;0
debugLevel;debugLevel();;TR_LogTracer;0;0
dumpCallGraphs;dumpCallGraphs(TR_LinkHead<struct TR_CallTarget> *);;TR_InlinerTracer;0;0
dumpCallSite;dumpCallSite(struct TR_CallSite *,const char *);;TR_InlinerTracer;0;0
dumpCallStack;dumpCallStack(class TR_CallStack *,const char *);;TR_InlinerTracer;0;0
dumpCallTarget;dumpCallTarget(struct TR_CallTarget *,const char *);;TR_InlinerTracer;0;0
dumpDeadCalls;dumpDeadCalls(TR_LinkHead<struct TR_CallSite> *);;TR_InlinerTracer;0;0
dumpInline;dumpInline(TR_LinkHead<struct TR_CallTarget> *,const char *);;TR_InlinerTracer;0;0
dumpPartialInline;dumpPartialInline(class TR_InlineBlocks *);;TR_InlinerTracer;0;0
dumpPrexArgInfo;dumpPrexArgInfo(class TR_PrexArgInfo *);;TR_InlinerTracer;0;0
fe;fe();;TR_InlinerTracer;0;0
getFailureReasonString;getFailureReasonString(enum TR_InlinerFailureReason);;TR_InlinerTracer;0;0
getGuardKindString;getGuardKindString(struct TR_VirtualGuardSelection *);;TR_InlinerTracer;0;0
getGuardTypeString;getGuardTypeString(struct TR_VirtualGuardSelection *);;TR_InlinerTracer;0;0
heuristicLevel;heuristicLevel();;TR_LogTracer;0;0
insertCounter;insertCounter(enum TR_InlinerFailureReason,TR::TreeTop *);;TR_InlinerTracer;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_InlinerTracer;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_InlinerTracer;0;0
operator delete;operator delete(void *,TR::Region &);;TR_InlinerTracer;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_InlinerTracer;0;0
operator delete;operator delete(void *,size_t);;TR_InlinerTracer;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_InlinerTracer;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_InlinerTracer;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_InlinerTracer;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_InlinerTracer;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_InlinerTracer;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_InlinerTracer;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_InlinerTracer;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_InlinerTracer;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_InlinerTracer;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_InlinerTracer;0;0
operator new;operator new(size_t,TR::Region &);;TR_InlinerTracer;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_InlinerTracer;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_InlinerTracer;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_InlinerTracer;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_InlinerTracer;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_InlinerTracer;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_InlinerTracer;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_InlinerTracer;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_InlinerTracer;0;0
partialLevel;partialLevel();;TR_InlinerTracer;0;0
partialTraceM;partialTraceM(const char *);;TR_InlinerTracer;0;0
setTraceLevelToDebug;setTraceLevelToDebug();;TR_LogTracer;0;0
trHeapMemory;trHeapMemory();;TR_InlinerTracer;0;0
trMemory;trMemory();;TR_InlinerTracer;0;0
trPersistentMemory;trPersistentMemory();;TR_InlinerTracer;0;0
trStackMemory;trStackMemory();;TR_InlinerTracer;0;0
TR_RegisterCandidate;TR_RegisterCandidate(TR::SymbolReference *,TR::Region &);;TR_RegisterCandidate;0;0
TR_RegisterCandidate;TR_RegisterCandidate(class TR_RegisterCandidate &&);;TR_RegisterCandidate;1;0
addAllBlocks;addAllBlocks();;TR_RegisterCandidate;0;0
addAllBlocksInStructure;addAllBlocksInStructure(class TR_Structure *,TR::Compilation *,const char *,vcount_t,_Bool);;TR_RegisterCandidate;0;0
addBlock;addBlock(TR::Block *,int32_t);;TR_RegisterCandidate;0;0
addLoopExitBlock;addLoopExitBlock(TR::Block *);;TR_RegisterCandidate;0;0
addLoopWithHole;addLoopWithHole(class TR_Structure *);;TR_RegisterCandidate;0;0
addStore;addStore(TR::TreeTop *);;TR_RegisterCandidate;0;0
canAllocateDespiteAliases;canAllocateDespiteAliases(TR::Compilation *);;TR_RegisterCandidate;0;0
canBeReprioritized;canBeReprioritized();;TR_RegisterCandidate;0;0
countNumberOfLoadsAndStoresInBlocks;countNumberOfLoadsAndStoresInBlocks(List<TR::Block> *);;TR_RegisterCandidate;0;0
extendLiveRangesForLiveOnExit;extendLiveRangesForLiveOnExit(TR::Compilation *,TR::Block **,TR_Array<TR::Block *> &);;TR_RegisterCandidate;0;0
extendedLiveRange;extendedLiveRange();;TR_RegisterCandidate;0;0
find;find(TR::Block *);;TR_RegisterCandidate;0;0
getBlocksLiveOnEntry;getBlocksLiveOnEntry();;TR_RegisterCandidate;0;0
getBlocksLiveOnExit;getBlocksLiveOnExit();;TR_RegisterCandidate;0;0
getDataType;getDataType();;TR_RegisterCandidate;0;0
getGlobalRegisterNumber;getGlobalRegisterNumber();;TR_RegisterCandidate;0;0
getHighGlobalRegisterNumber;getHighGlobalRegisterNumber();;TR_RegisterCandidate;0;0
getLastLoad;getLastLoad();;TR_RegisterCandidate;0;0
getLoopsWithHoles;getLoopsWithHoles();;TR_RegisterCandidate;0;0
getLowGlobalRegisterNumber;getLowGlobalRegisterNumber();;TR_RegisterCandidate;0;0
getMostRecentValue;getMostRecentValue();;TR_RegisterCandidate;0;0
getRegisterKinds;getRegisterKinds();;TR_RegisterCandidate;0;0
getReprioritized;getReprioritized();;TR_RegisterCandidate;0;0
getRestoreSymbolReference;getRestoreSymbolReference();;TR_RegisterCandidate;0;0
getSplitSymbolReference;getSplitSymbolReference();;TR_RegisterCandidate;0;0
getStores;getStores();;TR_RegisterCandidate;0;0
getSymbol;getSymbol();;TR_RegisterCandidate;0;0
getSymbolReference;getSymbolReference();;TR_RegisterCandidate;0;0
getType;getType();;TR_RegisterCandidate;0;0
getValueModified;getValueModified();;TR_RegisterCandidate;0;0
getWeight;getWeight();;TR_RegisterCandidate;0;0
hasBlock;hasBlock(TR::Block *);;TR_RegisterCandidate;0;0
hasLoopExitBlock;hasLoopExitBlock(TR::Block *);;TR_RegisterCandidate;0;0
hasSameGlobalRegisterNumberAs;hasSameGlobalRegisterNumberAs(TR::Node *,TR::Compilation *);;TR_RegisterCandidate;0;0
initialBlocksWeightComputed;initialBlocksWeightComputed();;TR_RegisterCandidate;0;0
is8BitGlobalGPR;is8BitGlobalGPR();;TR_RegisterCandidate;0;0
isAllBlocks;isAllBlocks();;TR_RegisterCandidate;0;0
isDontAssignVMThreadRegister;isDontAssignVMThreadRegister();;TR_RegisterCandidate;0;0
isHighWordZero;isHighWordZero();;TR_RegisterCandidate;0;0
isLiveAcrossExceptionEdge;isLiveAcrossExceptionEdge();;TR_RegisterCandidate;0;0
operator=;operator=(class TR_RegisterCandidate &&);;TR_RegisterCandidate;1;0
prevBlockTooRegisterConstrained;prevBlockTooRegisterConstrained(TR::Compilation *,TR::Block *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &);;TR_RegisterCandidate;0;0
processLiveOnEntryBlocks;processLiveOnEntryBlocks(TR::Block **,int32_t *,TR::Compilation *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &,class TR_BitVector *,TR_Array<TR::Block *> &,_Bool);;TR_RegisterCandidate;0;0
rcNeeds2Regs;rcNeeds2Regs(TR::Compilation *);;TR_RegisterCandidate;0;0
recalculateWeight;recalculateWeight(TR::Block **,int32_t *,TR::Compilation *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &,class TR_BitVector *,TR_Array<TR::Block *> &);;TR_RegisterCandidate;0;0
removeAssignedCandidateFromLoop;removeAssignedCandidateFromLoop(TR::Compilation *,class TR_Structure *,int32_t,class TR_BitVector *,class TR_BitVector *,_Bool);;TR_RegisterCandidate;0;0
removeBlock;removeBlock(TR::Block *);;TR_RegisterCandidate;0;0
removeLoopExitBlock;removeLoopExitBlock(TR::Block *);;TR_RegisterCandidate;0;0
setAllBlocks;setAllBlocks(_Bool);;TR_RegisterCandidate;0;0
setDontAssignVMThreadRegister;setDontAssignVMThreadRegister(_Bool);;TR_RegisterCandidate;0;0
setExtendedLiveRange;setExtendedLiveRange(_Bool);;TR_RegisterCandidate;0;0
setGlobalRegisterNumber;setGlobalRegisterNumber(TR_GlobalRegisterNumber);;TR_RegisterCandidate;0;0
setHighGlobalRegisterNumber;setHighGlobalRegisterNumber(TR_GlobalRegisterNumber);;TR_RegisterCandidate;0;0
setHighWordZero;setHighWordZero(_Bool);;TR_RegisterCandidate;0;0
setInitialBlocksWeightComputed;setInitialBlocksWeightComputed(_Bool);;TR_RegisterCandidate;0;0
setIs8BitGlobalGPR;setIs8BitGlobalGPR(_Bool);;TR_RegisterCandidate;0;0
setLastLoad;setLastLoad(TR::Node *);;TR_RegisterCandidate;0;0
setLiveAcrossExceptionEdge;setLiveAcrossExceptionEdge(_Bool);;TR_RegisterCandidate;0;0
setLowGlobalRegisterNumber;setLowGlobalRegisterNumber(TR_GlobalRegisterNumber);;TR_RegisterCandidate;0;0
setMaxReprioritized;setMaxReprioritized(uint8_t);;TR_RegisterCandidate;0;0
setMostRecentValue;setMostRecentValue(TR::Node *);;TR_RegisterCandidate;0;0
setReprioritized;setReprioritized();;TR_RegisterCandidate;0;0
setRestoreSymbolReference;setRestoreSymbolReference(TR::SymbolReference *);;TR_RegisterCandidate;0;0
setSplitSymbolReference;setSplitSymbolReference(TR::SymbolReference *);;TR_RegisterCandidate;0;0
setValueModified;setValueModified(_Bool);;TR_RegisterCandidate;0;0
setWeight;setWeight(TR::Block **,int32_t *,TR::Compilation *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &,class TR_BitVector *,TR_Array<TR::Block *> &,class TR_BitVector &,class TR_BitVector &);;TR_RegisterCandidate;0;0
symbolIsLive;symbolIsLive(TR::Block *);;TR_RegisterCandidate;0;0
TR_TrivialInliner;TR_TrivialInliner(const class TR_TrivialInliner &);;TR_TrivialInliner;1;0
TR_TrivialInliner;TR_TrivialInliner(class TR_TrivialInliner &&);;TR_TrivialInliner;1;0
TR_TrivialInliner;TR_TrivialInliner(TR::OptimizationManager *);;TR_TrivialInliner;0;0
create;create(TR::OptimizationManager *);;TR_TrivialInliner;0;0
operator=;operator=(class TR_TrivialInliner &&);;TR_TrivialInliner;1;0
operator=;operator=(const class TR_TrivialInliner &);;TR_TrivialInliner;1;0
optDetailString;optDetailString();;TR_TrivialInliner;0;1
perform;perform();;TR_TrivialInliner;0;1
~TR_TrivialInliner;~TR_TrivialInliner();;TR_TrivialInliner;1;1
(Arch: AMD64): Compiling ../../../../compiler/compile/OMRSymbolReferenceTable.cpp
SymbolReference;SymbolReference(class TR::SymbolReference &&);TR;SymbolReference;1;0
SymbolReference;SymbolReference(const class TR::SymbolReference &);TR;SymbolReference;1;0
TR_SymRefIterator;TR_SymRefIterator(class TR_SymRefIterator &&);;TR_SymRefIterator;1;0
TR_SymRefIterator;TR_SymRefIterator(const class TR_SymRefIterator &);;TR_SymRefIterator;1;0
(Arch: AMD64): Compiling ../../../../compiler/compile/OMRAliasBuilder.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRAutomaticSymbol.cpp
AutomaticSymbol;AutomaticSymbol(const class TR::AutomaticSymbol &);TR;AutomaticSymbol;1;0
AutomaticSymbol;AutomaticSymbol(class TR::AutomaticSymbol &&);TR;AutomaticSymbol;1;0
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRLabelSymbol.cpp
LabelSymbol;LabelSymbol(class TR::LabelSymbol &&);TR;LabelSymbol;1;0
LabelSymbol;LabelSymbol(const class TR::LabelSymbol &);TR;LabelSymbol;1;0
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRMethodSymbol.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRParameterSymbol.cpp
ParameterSymbol;ParameterSymbol(const class TR::ParameterSymbol &);TR;ParameterSymbol;1;0
ParameterSymbol;ParameterSymbol(class TR::ParameterSymbol &&);TR;ParameterSymbol;1;0
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRRegisterMappedSymbol.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRResolvedMethodSymbol.cpp
ResolvedMethodSymbol;ResolvedMethodSymbol(const class TR::ResolvedMethodSymbol &);TR;ResolvedMethodSymbol;1;0
ResolvedMethodSymbol;ResolvedMethodSymbol(class TR::ResolvedMethodSymbol &&);TR;ResolvedMethodSymbol;1;0
Linkage;Linkage(const class OMR::Linkage &);OMR;Linkage;1;0
Linkage;Linkage();OMR;Linkage;0;0
Linkage;Linkage(class OMR::Linkage &&);OMR;Linkage;1;0
Linkage;Linkage(class OMR::X86::Linkage &&);OMR::X86;Linkage;1;0
Linkage;Linkage(const class OMR::X86::Linkage &);OMR::X86;Linkage;1;0
Linkage;Linkage(TR::CodeGenerator *);OMR::X86;Linkage;0;0
Linkage;Linkage(TR::CodeGenerator *);TR;Linkage;0;0
alignLocalObjectWithCollectedFields;alignLocalObjectWithCollectedFields(uint32_t &);OMR::X86;Linkage;0;0
alignLocalObjectWithoutCollectedFields;alignLocalObjectWithoutCollectedFields(uint32_t &);OMR::X86;Linkage;0;0
argumentRegisterKind;argumentRegisterKind(TR::Node *);OMR;Linkage;0;1
associatePreservedRegisters;associatePreservedRegisters(TR::RegisterDependencyConditions *,TR::Register *);OMR::X86;Linkage;0;0
buildDirectDispatch;buildDirectDispatch(TR::Node *,_Bool);OMR::X86;Linkage;0;1
buildIndirectDispatch;buildIndirectDispatch(TR::Node *);OMR::X86;Linkage;0;1
cg;cg();OMR::X86;Linkage;0;0
coerceFPReturnValueToXMMR;coerceFPReturnValueToXMMR(TR::Node *,TR::RegisterDependencyConditions *,TR::MethodSymbol *,TR::Register *);OMR::X86;Linkage;0;0
comp;comp();OMR::X86;Linkage;0;0
composeSavesRestores;composeSavesRestores(TR::Instruction *,int32_t,int32_t,int32_t,int32_t,_Bool);OMR;Linkage;0;1
copyGlRegDepsToParameterSymbols;copyGlRegDepsToParameterSymbols(TR::Node *,TR::CodeGenerator *);OMR::X86;Linkage;0;1
copyLinkageInfoToParameterSymbols;copyLinkageInfoToParameterSymbols();OMR::X86;Linkage;0;1
copyStackParametersToLinkageRegisters;copyStackParametersToLinkageRegisters(TR::Instruction *);OMR::X86;Linkage;0;1
createEpilogue;createEpilogue(TR::Instruction *);OMR;Linkage;0;1
createEpilogue;createEpilogue(TR::Instruction *);OMR::X86;Linkage;0;1
createPrologue;createPrologue(TR::Instruction *);OMR;Linkage;0;1
createPrologue;createPrologue(TR::Instruction *);OMR::X86;Linkage;0;1
deallocateFrameIfNeeded;deallocateFrameIfNeeded(TR::Instruction *,int32_t);OMR::X86;Linkage;0;1
ensureMinimumFirstInstructionSize;ensureMinimumFirstInstructionSize(uint8_t);OMR::X86;Linkage;0;0
fe;fe();OMR::X86;Linkage;0;0
findReturnRegisterFromDependencies;findReturnRegisterFromDependencies(TR::Node *,TR::RegisterDependencyConditions *,TR::MethodSymbol *,_Bool);OMR::X86;Linkage;0;0
flushArguments;flushArguments(TR::Node *,uint8_t *,_Bool,int32_t *,_Bool,_Bool);OMR::X86;Linkage;0;1
flushArguments;flushArguments(TR::Instruction *,TR::ResolvedMethodSymbol *,_Bool,_Bool);OMR::X86;Linkage;0;1
fullRegisterMovType;fullRegisterMovType(TR::Register *);OMR::X86;Linkage;0;0
getKilledRegisters;getKilledRegisters(TR::Node *);OMR;Linkage;0;1
getMinimumFirstInstructionSize;getMinimumFirstInstructionSize();OMR::X86;Linkage;0;0
getProperties;getProperties();OMR::X86;Linkage;0;1
getRegisterSaveSize;getRegisterSaveSize();OMR;Linkage;0;1
getRightToLeft;getRightToLeft();OMR;Linkage;0;1
getRightToLeft;getRightToLeft();OMR::X86;Linkage;0;1
getSavedRegisters;getSavedRegisters(TR::Node *,int32_t);OMR;Linkage;0;1
hasToBeOnStack;hasToBeOnStack(TR::ParameterSymbol *);OMR;Linkage;0;1
isFloat;isFloat(TR_MovDataTypes);OMR::X86;Linkage;0;0
isSpecialNonVolatileArgumentRegister;isSpecialNonVolatileArgumentRegister(int8_t);OMR;Linkage;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;Linkage;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;Linkage;0;0
loadArguments;loadArguments(TR::Node *,uint8_t *,_Bool,int32_t *,_Bool);OMR::X86;Linkage;0;0
loadArguments;loadArguments(TR::Instruction *,TR::ResolvedMethodSymbol *);OMR::X86;Linkage;0;0
machine;machine();OMR::X86;Linkage;0;0
mapCompactedStack;mapCompactedStack(TR::ResolvedMethodSymbol *);OMR::X86;Linkage;0;0
mapIncomingParms;mapIncomingParms(TR::ResolvedMethodSymbol *);OMR::X86;Linkage;0;1
mapPreservedRegistersToStackOffsets;mapPreservedRegistersToStackOffsets(int32_t *,int32_t &,class TR_BitVector *&);OMR;Linkage;0;1
mapSingleAutomatic;mapSingleAutomatic(TR::AutomaticSymbol *,uint32_t &);OMR;Linkage;0;1
mapSingleAutomatic;mapSingleAutomatic(TR::AutomaticSymbol *,uint32_t &);OMR::X86;Linkage;0;1
mapSingleAutomatic;mapSingleAutomatic(TR::AutomaticSymbol *,uint32_t,uint32_t &);OMR::X86;Linkage;0;0
mapStack;mapStack(TR::ResolvedMethodSymbol *);OMR;Linkage;0;1
mapStack;mapStack(TR::ResolvedMethodSymbol *);OMR::X86;Linkage;0;1
movOpcodes;movOpcodes(TR_MovOperandTypes,TR_MovDataTypes);OMR::X86;Linkage;0;0
movRegisterKind;movRegisterKind(TR_MovDataTypes);OMR::X86;Linkage;0;0
movType;movType(TR::DataType);OMR::X86;Linkage;0;0
needsFrameDeallocation;needsFrameDeallocation();OMR::X86;Linkage;0;1
numArgumentRegisters;numArgumentRegisters(enum TR_RegisterKinds);OMR;Linkage;0;1
numArgumentRegisters;numArgumentRegisters(enum TR_RegisterKinds);OMR::X86;Linkage;0;1
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;Linkage;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Linkage;0;0
operator delete;operator delete(void *,size_t);OMR;Linkage;0;0
operator delete;operator delete(void *,TR::Region &);OMR;Linkage;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Linkage;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Linkage;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;Linkage;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Linkage;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;Linkage;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Linkage;0;0
operator new;operator new(size_t,TR::Region &);OMR;Linkage;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Linkage;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;Linkage;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Linkage;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;Linkage;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;Linkage;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;Linkage;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;Linkage;0;0
operator=;operator=(class OMR::Linkage &&);OMR;Linkage;1;0
operator=;operator=(const class OMR::Linkage &);OMR;Linkage;1;0
operator=;operator=(class OMR::X86::Linkage &&);OMR::X86;Linkage;1;0
operator=;operator=(const class OMR::X86::Linkage &);OMR::X86;Linkage;1;0
operator=;operator=(class TR::Linkage &&);TR;Linkage;1;0
operator=;operator=(const class TR::Linkage &);TR;Linkage;1;0
paramMovType;paramMovType(TR::ParameterSymbol *);OMR::X86;Linkage;0;0
restorePreservedRegister;restorePreservedRegister(TR::Instruction *,int32_t,int32_t);OMR;Linkage;0;1
savePreservedRegister;savePreservedRegister(TR::Instruction *,int32_t,int32_t);OMR;Linkage;0;1
self;self();OMR;Linkage;0;0
setParameterLinkageRegisterIndex;setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *);OMR;Linkage;0;1
setParameterLinkageRegisterIndex;setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *);OMR::X86;Linkage;0;1
setParameterLinkageRegisterIndex;setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *,List<TR::ParameterSymbol> &);OMR;Linkage;0;1
stopUsingKilledRegisters;stopUsingKilledRegisters(TR::RegisterDependencyConditions *,TR::Register *);OMR::X86;Linkage;0;0
storeArguments;storeArguments(TR::Instruction *,TR::ResolvedMethodSymbol *);OMR::X86;Linkage;0;0
storeArguments;storeArguments(TR::Node *,uint8_t *,_Bool,int32_t *);OMR::X86;Linkage;0;0
trHeapMemory;trHeapMemory();OMR::X86;Linkage;0;0
trMemory;trMemory();OMR::X86;Linkage;0;0
trStackMemory;trStackMemory();OMR::X86;Linkage;0;0
useCachedStaticAreaAddresses;useCachedStaticAreaAddresses(TR::Compilation *);OMR;Linkage;0;1
~Linkage;~Linkage();OMR;Linkage;1;0
~Linkage;~Linkage();OMR::X86;Linkage;1;0
~Linkage;~Linkage();TR;Linkage;1;0
CFG;CFG(const class TR::CFG &);TR;CFG;1;0
CFG;CFG(class TR::CFG &&);TR;CFG;1;0
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRStaticSymbol.cpp
StaticSymbol;StaticSymbol(class TR::StaticSymbol &&);TR;StaticSymbol;1;0
StaticSymbol;StaticSymbol(const class TR::StaticSymbol &);TR;StaticSymbol;1;0
(Arch: AMD64): Compiling ../../../../compiler/il/OMRNode.cpp
TR_LoadExtensions;TR_LoadExtensions(class TR_LoadExtensions &&);;TR_LoadExtensions;1;0
TR_LoadExtensions;TR_LoadExtensions(const class TR_LoadExtensions &);;TR_LoadExtensions;1;0
TR_LoadExtensions;TR_LoadExtensions(TR::OptimizationManager *);;TR_LoadExtensions;0;0
canSkipConversion;canSkipConversion(TR::Node *,TR::Node *,_Bool &);;TR_LoadExtensions;0;0
create;create(TR::OptimizationManager *);;TR_LoadExtensions;0;0
findPreferredLoadExtensions;findPreferredLoadExtensions(TR::Node *);;TR_LoadExtensions;0;0
flagPreferredLoadExtensions;flagPreferredLoadExtensions(TR::Node *);;TR_LoadExtensions;0;0
getExtensionPreference;getExtensionPreference(TR::Node *);;TR_LoadExtensions;0;0
isSupportedLoad;isSupportedLoad(TR::Node *);;TR_LoadExtensions;0;0
isSupportedType;isSupportedType(TR::Node *);;TR_LoadExtensions;0;0
operator=;operator=(class TR_LoadExtensions &&);;TR_LoadExtensions;1;0
operator=;operator=(const class TR_LoadExtensions &);;TR_LoadExtensions;1;0
optDetailString;optDetailString();;TR_LoadExtensions;0;1
perform;perform();;TR_LoadExtensions;0;1
setExtensionPreference;setExtensionPreference(TR::Node *,TR::Node *);;TR_LoadExtensions;0;0
~TR_LoadExtensions;~TR_LoadExtensions();;TR_LoadExtensions;1;1
FlattenRegisterPairs;FlattenRegisterPairs(TR_Queue<TR::Register> *);OMR;RegisterPair;0;1
RegisterPair;RegisterPair(class OMR::RegisterPair &&);OMR;RegisterPair;1;0
RegisterPair;RegisterPair();OMR;RegisterPair;0;0
RegisterPair;RegisterPair();TR;RegisterPair;0;0
RegisterPair;RegisterPair(const class OMR::RegisterPair &);OMR;RegisterPair;1;0
RegisterPair;RegisterPair(enum TR_RegisterKinds);OMR;RegisterPair;0;0
RegisterPair;RegisterPair(enum TR_RegisterKinds);TR;RegisterPair;0;0
RegisterPair;RegisterPair(TR::Register *,TR::Register *);OMR;RegisterPair;0;0
RegisterPair;RegisterPair(TR::Register *,TR::Register *);TR;RegisterPair;0;0
block;block();OMR;RegisterPair;0;1
getHighOrder;getHighOrder();OMR;RegisterPair;0;1
getLowOrder;getLowOrder();OMR;RegisterPair;0;1
getRegister;getRegister();OMR;RegisterPair;0;1
getRegisterPair;getRegisterPair();OMR;RegisterPair;0;1
operator=;operator=(const class OMR::RegisterPair &);OMR;RegisterPair;1;0
operator=;operator=(class OMR::RegisterPair &&);OMR;RegisterPair;1;0
operator=;operator=(class TR::RegisterPair &&);TR;RegisterPair;1;0
operator=;operator=(const class TR::RegisterPair &);TR;RegisterPair;1;0
setHighOrder;setHighOrder(TR::Register *,TR::CodeGenerator *);OMR;RegisterPair;0;0
setLowOrder;setLowOrder(TR::Register *,TR::CodeGenerator *);OMR;RegisterPair;0;0
unblock;unblock();OMR;RegisterPair;0;1
usesRegister;usesRegister(TR::Register *);OMR;RegisterPair;0;1
~RegisterPair;~RegisterPair();OMR;RegisterPair;1;0
~RegisterPair;~RegisterPair();TR;RegisterPair;1;0
TR_HashValueNumberInfo;TR_HashValueNumberInfo(TR::Compilation *,TR::Optimizer *,_Bool,_Bool,_Bool);;TR_HashValueNumberInfo;0;0
TR_HashValueNumberInfo;TR_HashValueNumberInfo(class TR_HashValueNumberInfo &&);;TR_HashValueNumberInfo;1;0
TR_ValueNumberInfo;TR_ValueNumberInfo(class TR_ValueNumberInfo &);;TR_ValueNumberInfo;1;0
TR_ValueNumberInfo;TR_ValueNumberInfo(TR::Compilation *,TR::Optimizer *,_Bool,_Bool,_Bool);;TR_ValueNumberInfo;0;0
TR_ValueNumberInfo;TR_ValueNumberInfo(TR::Compilation *);;TR_ValueNumberInfo;0;0
allocateNonShareableValueNumbers;allocateNonShareableValueNumbers();;TR_ValueNumberInfo;0;1
allocateParmValueNumbers;allocateParmValueNumbers();;TR_ValueNumberInfo;0;1
allocateShareableValueNumbers;allocateShareableValueNumbers();;TR_ValueNumberInfo;0;1
allocateValueNumber;allocateValueNumber(TR::Node *,vcount_t);;TR_ValueNumberInfo;0;1
allocateValueNumber;allocateValueNumber(TR::Node *);;TR_ValueNumberInfo;0;1
allocateValueNumber;allocateValueNumber(TR::Node *);;TR_HashValueNumberInfo;0;1
allocator;allocator();;TR_ValueNumberInfo;0;0
buildValueNumberInfo;buildValueNumberInfo();;TR_ValueNumberInfo;0;0
canShareValueNumber;canShareValueNumber(TR::Node *);;TR_ValueNumberInfo;0;0
changeValueNumber;changeValueNumber(TR::Node *,int32_t);;TR_ValueNumberInfo;0;0
comp;comp();;TR_ValueNumberInfo;0;0
congruentNodes;congruentNodes(TR::Node *,TR::Node *);;TR_ValueNumberInfo;0;0
getNext;getNext(TR::Node *);;TR_ValueNumberInfo;0;0
getNode;getNode(int32_t);;TR_ValueNumberInfo;0;0
getNumberOfNodes;getNumberOfNodes();;TR_ValueNumberInfo;0;0
getNumberOfParmValues;getNumberOfParmValues();;TR_ValueNumberInfo;0;0
getNumberOfShareableValues;getNumberOfShareableValues();;TR_ValueNumberInfo;0;0
getNumberOfValues;getNumberOfValues();;TR_ValueNumberInfo;0;0
getVN;getVN(TR::Node *);;TR_ValueNumberInfo;0;1
getValueNumber;getValueNumber(TR::Node *);;TR_ValueNumberInfo;0;0
getValueNumberForLoad;getValueNumberForLoad(TR::Node *);;TR_ValueNumberInfo;0;1
growTo;growTo(int32_t);;TR_ValueNumberInfo;0;0
hasGlobalsValueNumbers;hasGlobalsValueNumbers();;TR_ValueNumberInfo;0;0
hash;hash(TR::Node *);;TR_ValueNumberInfo;0;0
infoIsValid;infoIsValid();;TR_ValueNumberInfo;0;0
initializeNode;initializeNode(TR::Node *,int32_t &);;TR_ValueNumberInfo;0;1
initializeNode;initializeNode(TR::Node *,int32_t &);;TR_HashValueNumberInfo;0;1
operator delete;operator delete(void *,size_t);;TR_ValueNumberInfo;0;0
operator new;operator new(size_t,TR::Allocator);;TR_ValueNumberInfo;0;0
operator=;operator=(const class TR_ValueNumberInfo &);;TR_ValueNumberInfo;1;0
operator=;operator=(class TR_HashValueNumberInfo &&);;TR_HashValueNumberInfo;1;0
operator=;operator=(const class TR_HashValueNumberInfo &);;TR_HashValueNumberInfo;1;0
optimizer;optimizer();;TR_ValueNumberInfo;0;0
printValueNumberInfo;printValueNumberInfo(TR::Node *);;TR_ValueNumberInfo;0;0
removeNodeInfo;removeNodeInfo(TR::Node *);;TR_ValueNumberInfo;0;0
setUniqueValueNumber;setUniqueValueNumber(TR::Node *);;TR_ValueNumberInfo;0;0
setValueNumber;setValueNumber(TR::Node *,TR::Node *);;TR_ValueNumberInfo;0;0
trHeapMemory;trHeapMemory();;TR_ValueNumberInfo;0;0
trMemory;trMemory();;TR_ValueNumberInfo;0;0
trStackMemory;trStackMemory();;TR_ValueNumberInfo;0;0
trace;trace();;TR_ValueNumberInfo;0;0
~TR_HashValueNumberInfo;~TR_HashValueNumberInfo();;TR_HashValueNumberInfo;1;1
~TR_ValueNumberInfo;~TR_ValueNumberInfo();;TR_ValueNumberInfo;0;1
(Arch: AMD64): Compiling ../../../../compiler/il/NodePool.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/NodeUtils.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRIL.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRSymbolReference.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/Aliases.cpp
(Arch: AMD64): Compiling ../../../../compiler/compile/OMRCompilation.cpp
CodeGenerator;CodeGenerator(class TR::CodeGenerator &&);TR;CodeGenerator;1;0
CodeGenerator;CodeGenerator(const class TR::CodeGenerator &);TR;CodeGenerator;1;0
IL;IL();OMR;IL;1;0
IL;IL();TR;IL;1;0
SymbolReferenceTable;SymbolReferenceTable(class TR::SymbolReferenceTable &&);TR;SymbolReferenceTable;1;0
SymbolReferenceTable;SymbolReferenceTable(const class TR::SymbolReferenceTable &);TR;SymbolReferenceTable;1;0
(Arch: AMD64): Compiling ../../../../compiler/compile/TLSCompilationManager.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRCPU.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRObjectModel.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRArithEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRClassEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRDebugEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRVMEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/SegmentProvider.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/SegmentAllocator.cpp
SegmentAllocator;SegmentAllocator(size_t);TR;SegmentAllocator;0;0
SegmentAllocator;SegmentAllocator(const class TR::SegmentAllocator &);TR;SegmentAllocator;0;0
SegmentProvider;SegmentProvider(const class TR::SegmentProvider &);TR;SegmentProvider;0;0
SegmentProvider;SegmentProvider(size_t);TR;SegmentProvider;0;0
allocationLimit;allocationLimit();TR;SegmentAllocator;0;1
bytesAllocated;bytesAllocated();TR;SegmentProvider;0;1
defaultSegmentSize;defaultSegmentSize();TR;SegmentProvider;0;0
operator=;operator=(const class TR::SegmentProvider &);TR;SegmentProvider;1;0
operator=;operator=(const class TR::SegmentAllocator &);TR;SegmentAllocator;1;0
regionBytesAllocated;regionBytesAllocated();TR;SegmentAllocator;0;1
release;release(TR::MemorySegment &);TR;SegmentProvider;0;1
request;request(size_t);TR;SegmentProvider;0;1
setAllocationLimit;setAllocationLimit(size_t);TR;SegmentAllocator;0;1
systemBytesAllocated;systemBytesAllocated();TR;SegmentAllocator;0;1
~SegmentAllocator;~SegmentAllocator();TR;SegmentAllocator;0;1
~SegmentProvider;~SegmentProvider();TR;SegmentProvider;0;1
(Arch: AMD64): Compiling ../../../../compiler/env/SystemSegmentProvider.cpp
SystemSegmentProvider;SystemSegmentProvider(size_t,TR::RawAllocator);OMR;SystemSegmentProvider;0;0
SystemSegmentProvider;SystemSegmentProvider(const class OMR::SystemSegmentProvider &);OMR;SystemSegmentProvider;1;0
allocationLimit;allocationLimit();OMR;SystemSegmentProvider;0;1
bytesAllocated;bytesAllocated();OMR;SystemSegmentProvider;0;1
operator=;operator=(const class OMR::SystemSegmentProvider &);OMR;SystemSegmentProvider;1;0
regionBytesAllocated;regionBytesAllocated();OMR;SystemSegmentProvider;0;1
release;release(TR::MemorySegment &);OMR;SystemSegmentProvider;0;1
request;request(size_t);OMR;SystemSegmentProvider;0;1
setAllocationLimit;setAllocationLimit(size_t);OMR;SystemSegmentProvider;0;1
systemBytesAllocated;systemBytesAllocated();OMR;SystemSegmentProvider;0;1
~SystemSegmentProvider;~SystemSegmentProvider();OMR;SystemSegmentProvider;0;1
(Arch: AMD64): Compiling ../../../../compiler/env/DebugSegmentProvider.cpp
DebugSegmentProvider;DebugSegmentProvider(const class TR::DebugSegmentProvider &);TR;DebugSegmentProvider;1;0
DebugSegmentProvider;DebugSegmentProvider(size_t,TR::RawAllocator);TR;DebugSegmentProvider;0;0
allocationLimit;allocationLimit();TR;DebugSegmentProvider;0;1
bytesAllocated;bytesAllocated();TR;DebugSegmentProvider;0;1
operator=;operator=(const class TR::DebugSegmentProvider &);TR;DebugSegmentProvider;1;0
regionBytesAllocated;regionBytesAllocated();TR;DebugSegmentProvider;0;1
release;release(TR::MemorySegment &);TR;DebugSegmentProvider;0;1
request;request(size_t);TR;DebugSegmentProvider;0;1
setAllocationLimit;setAllocationLimit(size_t);TR;DebugSegmentProvider;0;1
systemBytesAllocated;systemBytesAllocated();TR;DebugSegmentProvider;0;1
~DebugSegmentProvider;~DebugSegmentProvider();TR;DebugSegmentProvider;0;1
(Arch: AMD64): Compiling ../../../../compiler/env/Region.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/StackMemoryRegion.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRPersistentInfo.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/TRMemory.cpp
GlobalSingletonAllocator;GlobalSingletonAllocator(const class TR::GlobalSingletonAllocator &);TR;GlobalSingletonAllocator;1;0
TR_Memory;TR_Memory(const class TR_Memory &);;TR_Memory;1;0
(Arch: AMD64): Compiling ../../../../compiler/env/TRPersistentMemory.cpp
TR_PersistentMemory;TR_PersistentMemory(const class TR_PersistentMemory &);;TR_PersistentMemory;1;0
(Arch: AMD64): Compiling ../../../../compiler/env/VerboseLog.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRDataTypes.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRTreeTop.cpp
TreeTop;TreeTop(class TR::TreeTop &&);TR;TreeTop;1;0
TreeTop;TreeTop(const class TR::TreeTop &);TR;TreeTop;1;0
~TreeTop;~TreeTop();OMR;TreeTop;1;0
(Arch: AMD64): Compiling ../../../../compiler/il/OMRILOps.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/CallStack.cpp
TR_CallStackIterator;TR_CallStackIterator();;TR_CallStackIterator;0;0
TR_CallStackIterator;TR_CallStackIterator(const class TR_CallStackIterator &);;TR_CallStackIterator;1;0
TR_CallStackIterator;TR_CallStackIterator(class TR_CallStackIterator &&);;TR_CallStackIterator;1;0
TR_LinuxCallStackIterator;TR_LinuxCallStackIterator();;TR_LinuxCallStackIterator;0;0
getNext;getNext();;TR_CallStackIterator;0;1
getOffsetInProcedure;getOffsetInProcedure();;TR_CallStackIterator;0;1
getProcedureName;getProcedureName();;TR_CallStackIterator;0;1
isDone;isDone();;TR_CallStackIterator;0;1
operator=;operator=(class TR_CallStackIterator &&);;TR_CallStackIterator;1;0
operator=;operator=(const class TR_CallStackIterator &);;TR_CallStackIterator;1;0
operator=;operator=(class TR_LinuxCallStackIterator &&);;TR_LinuxCallStackIterator;1;0
operator=;operator=(const class TR_LinuxCallStackIterator &);;TR_LinuxCallStackIterator;1;0
printStackBacktrace;printStackBacktrace(TR::Compilation *);;TR_CallStackIterator;0;1
printStackBacktrace;printStackBacktrace(TR::Compilation *);;TR_LinuxCallStackIterator;0;1
printSymbol;printSymbol(int32_t,char *,TR::Compilation *);;TR_LinuxCallStackIterator;0;0
~TR_CallStackIterator;~TR_CallStackIterator();;TR_CallStackIterator;1;0
~TR_LinuxCallStackIterator;~TR_LinuxCallStackIterator();;TR_LinuxCallStackIterator;1;0
__pbase_type_info;__pbase_type_info(const class __cxxabiv1::__pbase_type_info &);__cxxabiv1;__pbase_type_info;0;0
__pointer_catch;__pointer_catch(const class __cxxabiv1::__pbase_type_info *,void **,unsigned int);__cxxabiv1;__pbase_type_info;0;1
__pointer_catch;__pointer_catch(const class __cxxabiv1::__pbase_type_info *,void **,unsigned int);__cxxabiv1;__pointer_to_member_type_info;0;1
__pointer_to_member_type_info;__pointer_to_member_type_info(const class __cxxabiv1::__pointer_to_member_type_info &);__cxxabiv1;__pointer_to_member_type_info;0;0
operator=;operator=(const class __cxxabiv1::__pbase_type_info &);__cxxabiv1;__pbase_type_info;0;0
operator=;operator=(const class __cxxabiv1::__pointer_to_member_type_info &);__cxxabiv1;__pointer_to_member_type_info;0;0
~__pbase_type_info;~__pbase_type_info();__cxxabiv1;__pbase_type_info;0;1
~__pointer_to_member_type_info;~__pointer_to_member_type_info();__cxxabiv1;__pointer_to_member_type_info;0;1
__is_pointer_p;__is_pointer_p();__cxxabiv1;__pointer_type_info;0;1
__pointer_catch;__pointer_catch(const class __cxxabiv1::__pbase_type_info *,void **,unsigned int);__cxxabiv1;__pointer_type_info;0;1
operator=;operator=(const class __cxxabiv1::__pointer_type_info &);__cxxabiv1;__pointer_type_info;1;0
~__pointer_type_info;~__pointer_type_info();__cxxabiv1;__pointer_type_info;0;1
__class_type_info;__class_type_info(const class __cxxabiv1::__class_type_info &);__cxxabiv1;__class_type_info;1;0
__class_type_info;__class_type_info(const char *);__cxxabiv1;__class_type_info;0;0
__do_dyncast;__do_dyncast(ptrdiff_t,enum __cxxabiv1::__class_type_info::__sub_kind,const class __cxxabiv1::__class_type_info *,const void *,const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__dyncast_result &);__cxxabiv1;__class_type_info;0;1
__do_dyncast;__do_dyncast(ptrdiff_t,enum __cxxabiv1::__class_type_info::__sub_kind,const class __cxxabiv1::__class_type_info *,const void *,const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__dyncast_result &);__cxxabiv1;__si_class_type_info;0;1
__do_find_public_src;__do_find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *);__cxxabiv1;__class_type_info;0;1
__do_find_public_src;__do_find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *);__cxxabiv1;__si_class_type_info;0;1
__do_upcast;__do_upcast(const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__upcast_result &__restrict);__cxxabiv1;__class_type_info;0;1
__do_upcast;__do_upcast(const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__upcast_result &__restrict);__cxxabiv1;__si_class_type_info;0;1
__do_upcast;__do_upcast(const class __cxxabiv1::__class_type_info *,void **);__cxxabiv1;__class_type_info;0;1
__find_public_src;__find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *);__cxxabiv1;__class_type_info;0;0
__si_class_type_info;__si_class_type_info(const char *,const class __cxxabiv1::__class_type_info *);__cxxabiv1;__si_class_type_info;0;0
__si_class_type_info;__si_class_type_info(const class __cxxabiv1::__si_class_type_info &);__cxxabiv1;__si_class_type_info;0;0
operator=;operator=(const class __cxxabiv1::__class_type_info &);__cxxabiv1;__class_type_info;1;0
operator=;operator=(const class __cxxabiv1::__si_class_type_info &);__cxxabiv1;__si_class_type_info;0;0
~__class_type_info;~__class_type_info();__cxxabiv1;__class_type_info;0;1
~__si_class_type_info;~__si_class_type_info();__cxxabiv1;__si_class_type_info;0;1
__do_dyncast;__do_dyncast(ptrdiff_t,enum __cxxabiv1::__class_type_info::__sub_kind,const class __cxxabiv1::__class_type_info *,const void *,const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__dyncast_result &);__cxxabiv1;__vmi_class_type_info;0;1
__do_find_public_src;__do_find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *);__cxxabiv1;__vmi_class_type_info;0;1
__do_upcast;__do_upcast(const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__upcast_result &__restrict);__cxxabiv1;__vmi_class_type_info;0;1
__vmi_class_type_info;__vmi_class_type_info(const char *,int);__cxxabiv1;__vmi_class_type_info;0;0
operator=;operator=(const class __cxxabiv1::__vmi_class_type_info &);__cxxabiv1;__vmi_class_type_info;1;0
~__vmi_class_type_info;~__vmi_class_type_info();__cxxabiv1;__vmi_class_type_info;0;1
(Arch: AMD64): Compiling ../../../../compiler/ras/CFGChecker.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/Debug.cpp
TR_LinuxCallStackIterator;TR_LinuxCallStackIterator(class TR_LinuxCallStackIterator &&);;TR_LinuxCallStackIterator;1;0
TR_LinuxCallStackIterator;TR_LinuxCallStackIterator(const class TR_LinuxCallStackIterator &);;TR_LinuxCallStackIterator;1;0
(Arch: AMD64): Compiling ../../../../compiler/ras/DebugCounter.cpp
DebugCounter;DebugCounter(class TR::DebugCounter &&);TR;DebugCounter;1;0
DebugCounter;DebugCounter(const class TR::DebugCounter &);TR;DebugCounter;1;0
DebugCounterAggregation;DebugCounterAggregation(class TR::DebugCounterAggregation &&);TR;DebugCounterAggregation;1;0
DebugCounterAggregation;DebugCounterAggregation(const class TR::DebugCounterAggregation &);TR;DebugCounterAggregation;1;0
(Arch: AMD64): Compiling ../../../../compiler/ras/IgnoreLocale.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/LimitFile.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/LogTracer.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/OptionsDebug.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/PPCOpNames.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/Tree.cpp
TR_BitVectorCursor;TR_BitVectorCursor(const class TR_BitVectorCursor &);;TR_BitVectorCursor;1;0
TR_BitVectorCursor;TR_BitVectorCursor(class TR_BitVectorCursor &&);;TR_BitVectorCursor;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/AsyncCheckInsertion.cpp
TR_AsyncCheckInsertion;TR_AsyncCheckInsertion(TR::OptimizationManager *);;TR_AsyncCheckInsertion;0;0
TR_AsyncCheckInsertion;TR_AsyncCheckInsertion(class TR_AsyncCheckInsertion &&);;TR_AsyncCheckInsertion;1;0
TR_AsyncCheckInsertion;TR_AsyncCheckInsertion(const class TR_AsyncCheckInsertion &);;TR_AsyncCheckInsertion;1;0
create;create(TR::OptimizationManager *);;TR_AsyncCheckInsertion;0;0
insertAsyncCheck;insertAsyncCheck(TR::Block *,TR::Compilation *,const char *);;TR_AsyncCheckInsertion;0;0
insertReturnAsyncChecks;insertReturnAsyncChecks(TR::Optimization *,const char *);;TR_AsyncCheckInsertion;0;0
operator=;operator=(class TR_AsyncCheckInsertion &&);;TR_AsyncCheckInsertion;1;0
operator=;operator=(const class TR_AsyncCheckInsertion &);;TR_AsyncCheckInsertion;1;0
optDetailString;optDetailString();;TR_AsyncCheckInsertion;0;1
perform;perform();;TR_AsyncCheckInsertion;0;1
shouldPerform;shouldPerform();;TR_AsyncCheckInsertion;0;1
~TR_AsyncCheckInsertion;~TR_AsyncCheckInsertion();;TR_AsyncCheckInsertion;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/BackwardBitVectorAnalysis.cpp
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardDFSetAnalysis;0;0
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(const class TR_BackwardDFSetAnalysis<class TR_BitVector *> &);;TR_BackwardDFSetAnalysis;1;0
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_BackwardDFSetAnalysis;1;0
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(const class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_BackwardDFSetAnalysis;1;0
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(class TR_BackwardDFSetAnalysis<class TR_BitVector *> &&);;TR_BackwardDFSetAnalysis;1;0
TR_BackwardDFSetAnalysis<type-parameter-0-0 *>;TR_BackwardDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardDFSetAnalysis;0;0
TR_BackwardIntersectionBitVectorAnalysis;TR_BackwardIntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardIntersectionBitVectorAnalysis;0;0
TR_BackwardIntersectionDFSetAnalysis<type-parameter-0-0 *>;TR_BackwardIntersectionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardIntersectionDFSetAnalysis;0;0
TR_BasicDFSetAnalysis<type-parameter-0-0 *>;TR_BasicDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BasicDFSetAnalysis;0;0
TR_DataFlowAnalysis;TR_DataFlowAnalysis(const class TR_DataFlowAnalysis &);;TR_DataFlowAnalysis;1;0
TR_DataFlowAnalysis;TR_DataFlowAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_DataFlowAnalysis;0;0
TR_GlobalAnticipatability;TR_GlobalAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);;TR_GlobalAnticipatability;0;0
addToAnalysisQueue;addToAnalysisQueue(class TR_StructureSubGraphNode *,uint8_t);;TR_DataFlowAnalysis;0;0
allocateBlockInfoContainer;allocateBlockInfoContainer(Container **,Container *);;TR_BasicDFSetAnalysis;0;1
allocateBlockInfoContainer;allocateBlockInfoContainer(Container **,_Bool,_Bool);;TR_BasicDFSetAnalysis;0;1
allocateContainer;allocateContainer(Container **,_Bool,_Bool);;TR_BasicDFSetAnalysis;0;1
allocateTempContainer;allocateTempContainer(Container **,Container *);;TR_BasicDFSetAnalysis;0;1
allocator;allocator();;TR_DataFlowAnalysis;0;0
analyzeBlockStructure;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_DataFlowAnalysis;0;1
analyzeBlockStructure;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_BackwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_SingleBitContainer *);;TR_BackwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,Container *);;TR_BackwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_BackwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_GlobalAnticipatability;0;1
analyzeNodeIfSuccessorsAnalyzed;analyzeNodeIfSuccessorsAnalyzed(class TR_RegionStructure *,class TR_BitVector &,class TR_BitVector &);;TR_BackwardDFSetAnalysis;0;0
analyzeRegionStructure;analyzeRegionStructure(class TR_RegionStructure *,_Bool);;TR_DataFlowAnalysis;0;1
analyzeRegionStructure;analyzeRegionStructure(class TR_RegionStructure *,_Bool);;TR_BackwardDFSetAnalysis;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_BackwardDFSetAnalysis;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_GlobalAnticipatability;0;1
areSyntacticallyEquivalent;areSyntacticallyEquivalent(TR::Node *,TR::Node *);;TR_DataFlowAnalysis;0;0
asDelayedness;asDelayedness();;TR_DataFlowAnalysis;0;1
asEarliestness;asEarliestness();;TR_DataFlowAnalysis;0;1
asExceptionCheckMotion;asExceptionCheckMotion();;TR_DataFlowAnalysis;0;1
asFlowSensitiveEscapeAnalysis;asFlowSensitiveEscapeAnalysis();;TR_DataFlowAnalysis;0;1
asGlobalAnticipatability;asGlobalAnticipatability();;TR_DataFlowAnalysis;0;1
asGlobalAnticipatability;asGlobalAnticipatability();;TR_GlobalAnticipatability;0;1
asIsolatedness;asIsolatedness();;TR_DataFlowAnalysis;0;1
asLatestness;asLatestness();;TR_DataFlowAnalysis;0;1
asLiveOnAllPaths;asLiveOnAllPaths();;TR_DataFlowAnalysis;0;1
asLiveness;asLiveness();;TR_DataFlowAnalysis;0;1
asRedundantExpressionAdjustment;asRedundantExpressionAdjustment();;TR_DataFlowAnalysis;0;1
asRegisterAnticipatability;asRegisterAnticipatability();;TR_DataFlowAnalysis;0;1
asRegisterAvailability;asRegisterAvailability();;TR_DataFlowAnalysis;0;1
canGenAndKillForStructure;canGenAndKillForStructure(class TR_Structure *);;TR_BasicDFSetAnalysis;0;1
canGenAndKillForStructure;canGenAndKillForStructure(class TR_Structure *);;TR_BackwardDFSetAnalysis;0;1
cg;cg();;TR_DataFlowAnalysis;0;0
clearAnalysisInfo;clearAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *);;TR_BasicDFSetAnalysis;0;0
collectAllSymbolReferencesInTreeInto;collectAllSymbolReferencesInTreeInto(TR::Node *,List<TR::SymbolReference> *);;TR_DataFlowAnalysis;0;0
collectCallSymbolReferencesInTreeInto;collectCallSymbolReferencesInTreeInto(TR::Node *,List<TR::SymbolReference> *);;TR_DataFlowAnalysis;0;0
comp;comp();;TR_DataFlowAnalysis;0;0
compose;compose(Container *,Container *);;TR_BasicDFSetAnalysis;0;1
compose;compose(Container *,Container *);;TR_BackwardDFSetAnalysis;0;1
compose;compose(Container *,Container *);;TR_BackwardIntersectionDFSetAnalysis;0;1
compose;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_BackwardDFSetAnalysis;0;1
compose;compose(class TR_BitVector *,class TR_BitVector *);;TR_BackwardDFSetAnalysis;0;1
createAnalysisInfo;createAnalysisInfo();;TR_BasicDFSetAnalysis;0;0
doAnalysis;doAnalysis(class TR_Structure *,_Bool);;TR_BasicDFSetAnalysis;0;0
fe;fe();;TR_DataFlowAnalysis;0;0
getAnalysisInfo;getAnalysisInfo(class TR_Structure *);;TR_BasicDFSetAnalysis;0;0
getAnalysisName;getAnalysisName();;TR_DataFlowAnalysis;0;0
getCheckExpressionsInBlock;getCheckExpressionsInBlock(int32_t);;TR_GlobalAnticipatability;0;0
getDebug;getDebug();;TR_DataFlowAnalysis;0;0
getKind;getKind();;TR_DataFlowAnalysis;0;1
getKind;getKind();;TR_BasicDFSetAnalysis;0;1
getKind;getKind();;TR_BackwardDFSetAnalysis;0;1
getKind;getKind();;TR_BackwardIntersectionDFSetAnalysis;0;1
getKind;getKind();;TR_GlobalAnticipatability;0;1
getNumberOfBits;getNumberOfBits();;TR_BasicDFSetAnalysis;0;1
getNumberOfBits;getNumberOfBits();;TR_GlobalAnticipatability;0;1
initialize;initialize();;TR_BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,class TR_RegionStructure *);;TR_BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,TR::Block *);;TR_BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,class TR_Structure *);;TR_BasicDFSetAnalysis;0;0
initializeBasicDFSetAnalysis;initializeBasicDFSetAnalysis();;TR_BasicDFSetAnalysis;0;1
initializeBlockInfo;initializeBlockInfo(_Bool);;TR_BasicDFSetAnalysis;0;0
initializeCurrentGenKillSetInfo;initializeCurrentGenKillSetInfo();;TR_BackwardDFSetAnalysis;0;1
initializeCurrentGenKillSetInfo;initializeCurrentGenKillSetInfo();;TR_BackwardIntersectionDFSetAnalysis;0;1
initializeDFSetAnalysis;initializeDFSetAnalysis();;TR_BasicDFSetAnalysis;0;1
initializeDFSetAnalysis;initializeDFSetAnalysis();;TR_BackwardDFSetAnalysis;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo();;TR_BasicDFSetAnalysis;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo(class TR_RegionStructure *,class TR_BitVector &,class TR_BitVector &,_Bool);;TR_BackwardDFSetAnalysis;0;1
initializeGenAndKillSetInfoForBlock;initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *);;TR_BasicDFSetAnalysis;0;1
initializeGenAndKillSetInfoForBlock;initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *);;TR_BackwardDFSetAnalysis;0;1
initializeGenAndKillSetInfoForRegion;initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *);;TR_BasicDFSetAnalysis;0;1
initializeGenAndKillSetInfoForRegion;initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *);;TR_BackwardDFSetAnalysis;0;1
initializeGenAndKillSetInfoForStructure;initializeGenAndKillSetInfoForStructure(class TR_Structure *);;TR_BasicDFSetAnalysis;0;0
initializeGenAndKillSetInfoForStructures;initializeGenAndKillSetInfoForStructures();;TR_BasicDFSetAnalysis;0;0
initializeGenAndKillSetInfoPropertyForStructure;initializeGenAndKillSetInfoPropertyForStructure(class TR_Structure *,_Bool);;TR_BasicDFSetAnalysis;0;0
initializeInfo;initializeInfo(Container *);;TR_BasicDFSetAnalysis;0;1
initializeInfo;initializeInfo(Container *);;TR_BackwardDFSetAnalysis;0;1
initializeInfo;initializeInfo(Container *);;TR_BackwardIntersectionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_SingleBitContainer *);;TR_BackwardDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);;TR_BackwardDFSetAnalysis;0;1
initializeOutSetInfo;initializeOutSetInfo();;TR_BackwardDFSetAnalysis;0;1
initializeOutSetInfo;initializeOutSetInfo();;TR_BackwardIntersectionDFSetAnalysis;0;1
inverseCompose;inverseCompose(Container *,Container *);;TR_BasicDFSetAnalysis;0;1
inverseCompose;inverseCompose(Container *,Container *);;TR_BackwardDFSetAnalysis;0;1
inverseCompose;inverseCompose(Container *,Container *);;TR_BackwardIntersectionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);;TR_BackwardDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_BackwardDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(Container *);;TR_BasicDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(Container *);;TR_BackwardDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(Container *);;TR_BackwardIntersectionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_SingleBitContainer *);;TR_BackwardDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);;TR_BackwardDFSetAnalysis;0;1
isExceptionalInBlock;isExceptionalInBlock(TR::Node *,int32_t,ContainerType *,vcount_t);;TR_GlobalAnticipatability;0;0
isSameAsOrAliasedWith;isSameAsOrAliasedWith(TR::SymbolReference *,TR::SymbolReference *);;TR_DataFlowAnalysis;0;0
killBasedOnSuccTransparency;killBasedOnSuccTransparency(TR::Block *);;TR_GlobalAnticipatability;0;0
operator delete;operator delete(void *,size_t);;TR_DataFlowAnalysis;0;0
operator new;operator new(size_t,TR::Allocator);;TR_DataFlowAnalysis;0;0
operator=;operator=(const class TR_DataFlowAnalysis &);;TR_DataFlowAnalysis;1;0
operator=;operator=(class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_BackwardDFSetAnalysis;1;0
operator=;operator=(const class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_BackwardDFSetAnalysis;1;0
operator=;operator=(class TR_BackwardDFSetAnalysis<class TR_BitVector *> &&);;TR_BackwardDFSetAnalysis;1;0
operator=;operator=(const class TR_BackwardDFSetAnalysis<class TR_BitVector *> &);;TR_BackwardDFSetAnalysis;1;0
operator=;operator=(const class TR_BackwardIntersectionBitVectorAnalysis &);;TR_BackwardIntersectionBitVectorAnalysis;1;0
operator=;operator=(class TR_BackwardIntersectionBitVectorAnalysis &&);;TR_BackwardIntersectionBitVectorAnalysis;1;0
operator=;operator=(class TR_GlobalAnticipatability &&);;TR_GlobalAnticipatability;1;0
operator=;operator=(const class TR_GlobalAnticipatability &);;TR_GlobalAnticipatability;1;0
optimizer;optimizer();;TR_DataFlowAnalysis;0;0
perform;perform();;TR_DataFlowAnalysis;0;1
performAnalysis;performAnalysis(class TR_Structure *,_Bool);;TR_BasicDFSetAnalysis;0;0
postInitializationProcessing;postInitializationProcessing();;TR_BasicDFSetAnalysis;0;1
postInitializationProcessing;postInitializationProcessing();;TR_GlobalAnticipatability;0;1
removeHeadFromAnalysisQueue;removeHeadFromAnalysisQueue();;TR_DataFlowAnalysis;0;0
setTrace;setTrace(_Bool);;TR_DataFlowAnalysis;0;0
supportsGenAndKillSets;supportsGenAndKillSets();;TR_BasicDFSetAnalysis;0;1
supportsGenAndKillSetsForStructures;supportsGenAndKillSetsForStructures();;TR_BasicDFSetAnalysis;0;1
trHeapMemory;trHeapMemory();;TR_DataFlowAnalysis;0;0
trMemory;trMemory();;TR_DataFlowAnalysis;0;0
trPersistentMemory;trPersistentMemory();;TR_DataFlowAnalysis;0;0
trStackMemory;trStackMemory();;TR_DataFlowAnalysis;0;0
trace;trace();;TR_DataFlowAnalysis;0;0
traceBBVA;traceBBVA();;TR_BackwardDFSetAnalysis;0;0
traceBVA;traceBVA();;TR_BasicDFSetAnalysis;0;0
treeHasChecks;treeHasChecks(TR::TreeTop *,TR::Node *);;TR_DataFlowAnalysis;0;0
~TR_BackwardDFSetAnalysis;~TR_BackwardDFSetAnalysis();;TR_BackwardDFSetAnalysis;1;1
~TR_BackwardIntersectionBitVectorAnalysis;~TR_BackwardIntersectionBitVectorAnalysis();;TR_BackwardIntersectionBitVectorAnalysis;1;1
~TR_DataFlowAnalysis;~TR_DataFlowAnalysis();;TR_DataFlowAnalysis;0;1
~TR_GlobalAnticipatability;~TR_GlobalAnticipatability();;TR_GlobalAnticipatability;1;1
TR_BackwardUnionBitVectorAnalysis;TR_BackwardUnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardUnionBitVectorAnalysis;0;0
TR_BackwardUnionDFSetAnalysis<type-parameter-0-0 *>;TR_BackwardUnionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardUnionDFSetAnalysis;0;0
TR_Liveness;TR_Liveness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,class TR_LiveVariableInformation *,_Bool,_Bool);;TR_Liveness;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_Liveness;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_Liveness;0;1
asLiveness;asLiveness();;TR_Liveness;0;1
compose;compose(Container *,Container *);;TR_BackwardUnionDFSetAnalysis;0;1
getKind;getKind();;TR_BackwardUnionDFSetAnalysis;0;1
getKind;getKind();;TR_Liveness;0;1
getLiveVariableInfo;getLiveVariableInfo();;TR_Liveness;0;0
getNumberOfBits;getNumberOfBits();;TR_Liveness;0;1
initializeCurrentGenKillSetInfo;initializeCurrentGenKillSetInfo();;TR_BackwardUnionDFSetAnalysis;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo();;TR_Liveness;0;1
initializeInfo;initializeInfo(Container *);;TR_BackwardUnionDFSetAnalysis;0;1
initializeOutSetInfo;initializeOutSetInfo();;TR_BackwardUnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(Container *,Container *);;TR_BackwardUnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(Container *);;TR_BackwardUnionDFSetAnalysis;0;1
operator=;operator=(const class TR_BackwardUnionBitVectorAnalysis &);;TR_BackwardUnionBitVectorAnalysis;1;0
operator=;operator=(class TR_BackwardUnionBitVectorAnalysis &&);;TR_BackwardUnionBitVectorAnalysis;1;0
operator=;operator=(const class TR_Liveness &);;TR_Liveness;1;0
operator=;operator=(class TR_Liveness &&);;TR_Liveness;1;0
postInitializationProcessing;postInitializationProcessing();;TR_Liveness;0;1
supportsGenAndKillSets;supportsGenAndKillSets();;TR_Liveness;0;1
traceLiveness;traceLiveness();;TR_Liveness;0;0
~TR_BackwardUnionBitVectorAnalysis;~TR_BackwardUnionBitVectorAnalysis();;TR_BackwardUnionBitVectorAnalysis;1;1
~TR_Liveness;~TR_Liveness();;TR_Liveness;1;1
TR_BackwardUnionSingleBitContainerAnalysis;TR_BackwardUnionSingleBitContainerAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardUnionSingleBitContainerAnalysis;0;0
operator=;operator=(class TR_BackwardUnionSingleBitContainerAnalysis &&);;TR_BackwardUnionSingleBitContainerAnalysis;1;0
operator=;operator=(const class TR_BackwardUnionSingleBitContainerAnalysis &);;TR_BackwardUnionSingleBitContainerAnalysis;1;0
~TR_BackwardUnionSingleBitContainerAnalysis;~TR_BackwardUnionSingleBitContainerAnalysis();;TR_BackwardUnionSingleBitContainerAnalysis;1;1
TR_Delayedness;TR_Delayedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);;TR_Delayedness;0;0
TR_ForwardDFSetAnalysis<type-parameter-0-0 *>;TR_ForwardDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_ForwardDFSetAnalysis;0;0
TR_IntersectionBitVectorAnalysis;TR_IntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_IntersectionBitVectorAnalysis;0;0
TR_IntersectionDFSetAnalysis<type-parameter-0-0 *>;TR_IntersectionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_IntersectionDFSetAnalysis;0;0
analyzeBlockStructure;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_ForwardDFSetAnalysis;0;1
analyzeBlockZeroStructure;analyzeBlockZeroStructure(class TR_BlockStructure *);;TR_ForwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,Container *);;TR_ForwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,ContainerType *);;TR_Delayedness;0;1
analyzeNodeIfPredecessorsAnalyzed;analyzeNodeIfPredecessorsAnalyzed(class TR_RegionStructure *,class TR_BitVector &);;TR_ForwardDFSetAnalysis;0;0
analyzeRegionStructure;analyzeRegionStructure(class TR_RegionStructure *,_Bool);;TR_ForwardDFSetAnalysis;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_ForwardDFSetAnalysis;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_Delayedness;0;1
asDelayedness;asDelayedness();;TR_Delayedness;0;1
canGenAndKillForStructure;canGenAndKillForStructure(class TR_Structure *);;TR_ForwardDFSetAnalysis;0;1
compose;compose(Container *,Container *);;TR_ForwardDFSetAnalysis;0;1
compose;compose(Container *,Container *);;TR_IntersectionDFSetAnalysis;0;1
compose;compose(class TR_BitVector *,class TR_BitVector *);;TR_IntersectionBitVectorAnalysis;0;1
getKind;getKind();;TR_ForwardDFSetAnalysis;0;1
getKind;getKind();;TR_IntersectionDFSetAnalysis;0;1
getKind;getKind();;TR_Delayedness;0;1
getNumberOfBits;getNumberOfBits();;TR_Delayedness;0;1
initialize;initialize();;TR_ForwardDFSetAnalysis;0;0
initializeCurrentGenKillSetInfo;initializeCurrentGenKillSetInfo();;TR_ForwardDFSetAnalysis;0;1
initializeCurrentGenKillSetInfo;initializeCurrentGenKillSetInfo();;TR_IntersectionDFSetAnalysis;0;1
initializeDFSetAnalysis;initializeDFSetAnalysis();;TR_ForwardDFSetAnalysis;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo(class TR_RegionStructure *,class TR_BitVector &);;TR_ForwardDFSetAnalysis;0;1
initializeGenAndKillSetInfoForBlock;initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *);;TR_ForwardDFSetAnalysis;0;1
initializeGenAndKillSetInfoForRegion;initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *);;TR_ForwardDFSetAnalysis;0;1
initializeInSetInfo;initializeInSetInfo();;TR_ForwardDFSetAnalysis;0;1
initializeInSetInfo;initializeInSetInfo();;TR_IntersectionDFSetAnalysis;0;1
initializeInfo;initializeInfo(Container *);;TR_ForwardDFSetAnalysis;0;1
initializeInfo;initializeInfo(Container *);;TR_IntersectionDFSetAnalysis;0;1
inverseCompose;inverseCompose(Container *,Container *);;TR_ForwardDFSetAnalysis;0;1
inverseCompose;inverseCompose(Container *,Container *);;TR_IntersectionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(Container *);;TR_ForwardDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(Container *);;TR_IntersectionDFSetAnalysis;0;1
operator=;operator=(class TR_IntersectionBitVectorAnalysis &&);;TR_IntersectionBitVectorAnalysis;1;0
operator=;operator=(const class TR_IntersectionBitVectorAnalysis &);;TR_IntersectionBitVectorAnalysis;1;0
operator=;operator=(class TR_Delayedness &&);;TR_Delayedness;1;0
operator=;operator=(const class TR_Delayedness &);;TR_Delayedness;1;0
postInitializationProcessing;postInitializationProcessing();;TR_Delayedness;0;1
~TR_Delayedness;~TR_Delayedness();;TR_Delayedness;1;1
~TR_IntersectionBitVectorAnalysis;~TR_IntersectionBitVectorAnalysis();;TR_IntersectionBitVectorAnalysis;1;1
TR_Earliestness;TR_Earliestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);;TR_Earliestness;0;0
TR_UnionBitVectorAnalysis;TR_UnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_UnionBitVectorAnalysis;0;0
TR_UnionDFSetAnalysis<type-parameter-0-0 *>;TR_UnionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_UnionDFSetAnalysis;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_Earliestness;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_Earliestness;0;1
asEarliestness;asEarliestness();;TR_Earliestness;0;1
compose;compose(Container *,Container *);;TR_UnionDFSetAnalysis;0;1
getKind;getKind();;TR_UnionDFSetAnalysis;0;1
getKind;getKind();;TR_Earliestness;0;1
getNumberOfBits;getNumberOfBits();;TR_Earliestness;0;1
initializeCurrentGenKillSetInfo;initializeCurrentGenKillSetInfo();;TR_UnionDFSetAnalysis;0;1
initializeInSetInfo;initializeInSetInfo();;TR_UnionDFSetAnalysis;0;1
initializeInfo;initializeInfo(Container *);;TR_UnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(Container *,Container *);;TR_UnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(Container *);;TR_UnionDFSetAnalysis;0;1
operator=;operator=(class TR_UnionBitVectorAnalysis &&);;TR_UnionBitVectorAnalysis;1;0
operator=;operator=(const class TR_UnionBitVectorAnalysis &);;TR_UnionBitVectorAnalysis;1;0
operator=;operator=(class TR_Earliestness &&);;TR_Earliestness;1;0
operator=;operator=(const class TR_Earliestness &);;TR_Earliestness;1;0
postInitializationProcessing;postInitializationProcessing();;TR_Earliestness;0;1
~TR_Earliestness;~TR_Earliestness();;TR_Earliestness;1;1
~TR_UnionBitVectorAnalysis;~TR_UnionBitVectorAnalysis();;TR_UnionBitVectorAnalysis;1;1
TR_FlowSensitiveEscapeAnalysis;TR_FlowSensitiveEscapeAnalysis(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_EscapeAnalysis *);;TR_FlowSensitiveEscapeAnalysis;0;0
analyzeNode;analyzeNode(TR::Node *,_Bool,int32_t,TR::Node *);;TR_FlowSensitiveEscapeAnalysis;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_FlowSensitiveEscapeAnalysis;0;1
asFlowSensitiveEscapeAnalysis;asFlowSensitiveEscapeAnalysis();;TR_FlowSensitiveEscapeAnalysis;0;1
collectCFGBackEdges;collectCFGBackEdges(class TR_StructureSubGraphNode *);;TR_FlowSensitiveEscapeAnalysis;0;0
findOrSplitEdge;findOrSplitEdge(TR::Block *,TR::Block *);;TR_FlowSensitiveEscapeAnalysis;0;0
getCFGBackEdgesAndLoopEntryBlocks;getCFGBackEdgesAndLoopEntryBlocks(class TR_Structure *);;TR_FlowSensitiveEscapeAnalysis;0;0
getKind;getKind();;TR_FlowSensitiveEscapeAnalysis;0;1
getNumberOfBits;getNumberOfBits();;TR_FlowSensitiveEscapeAnalysis;0;1
operator=;operator=(class TR_FlowSensitiveEscapeAnalysis &&);;TR_FlowSensitiveEscapeAnalysis;1;0
operator=;operator=(const class TR_FlowSensitiveEscapeAnalysis &);;TR_FlowSensitiveEscapeAnalysis;1;0
postInitializationProcessing;postInitializationProcessing();;TR_FlowSensitiveEscapeAnalysis;0;1
supportsGenAndKillSets;supportsGenAndKillSets();;TR_FlowSensitiveEscapeAnalysis;0;1
~TR_FlowSensitiveEscapeAnalysis;~TR_FlowSensitiveEscapeAnalysis();;TR_FlowSensitiveEscapeAnalysis;1;1
TR_Isolatedness;TR_Isolatedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);;TR_Isolatedness;0;0
asIsolatedness;asIsolatedness();;TR_Isolatedness;0;1
getKind;getKind();;TR_Isolatedness;0;1
getNumberOfBits;getNumberOfBits();;TR_Isolatedness;0;1
operator=;operator=(class TR_Isolatedness &&);;TR_Isolatedness;1;0
operator=;operator=(const class TR_Isolatedness &);;TR_Isolatedness;1;0
postInitializationProcessing;postInitializationProcessing();;TR_Isolatedness;0;1
~TR_Isolatedness;~TR_Isolatedness();;TR_Isolatedness;1;1
TR_Latestness;TR_Latestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);;TR_Latestness;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,ContainerType *);;TR_Latestness;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_Latestness;0;1
asLatestness;asLatestness();;TR_Latestness;0;1
getKind;getKind();;TR_Latestness;0;1
getNumberOfBits;getNumberOfBits();;TR_Latestness;0;1
operator=;operator=(class TR_Latestness &&);;TR_Latestness;1;0
operator=;operator=(const class TR_Latestness &);;TR_Latestness;1;0
~TR_Latestness;~TR_Latestness();;TR_Latestness;1;1
TR_LiveOnAllPaths;TR_LiveOnAllPaths(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_LiveVariableInformation *,_Bool,_Bool);;TR_LiveOnAllPaths;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_LiveOnAllPaths;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_LiveOnAllPaths;0;1
asLiveOnAllPaths;asLiveOnAllPaths();;TR_LiveOnAllPaths;0;1
getKind;getKind();;TR_LiveOnAllPaths;0;1
getLiveVariableInfo;getLiveVariableInfo();;TR_LiveOnAllPaths;0;0
getNumberOfBits;getNumberOfBits();;TR_LiveOnAllPaths;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo();;TR_LiveOnAllPaths;0;1
operator=;operator=(class TR_LiveOnAllPaths &&);;TR_LiveOnAllPaths;1;0
operator=;operator=(const class TR_LiveOnAllPaths &);;TR_LiveOnAllPaths;1;0
postInitializationProcessing;postInitializationProcessing();;TR_LiveOnAllPaths;0;1
supportsGenAndKillSets;supportsGenAndKillSets();;TR_LiveOnAllPaths;0;1
~TR_LiveOnAllPaths;~TR_LiveOnAllPaths();;TR_LiveOnAllPaths;1;1
TR_LocalAnalysis;TR_LocalAnalysis(class TR_LocalAnalysisInfo &,_Bool);;TR_LocalAnalysis;0;0
TR_LocalAnticipatability;TR_LocalAnticipatability(class TR_LocalAnalysisInfo &,class TR_LocalTransparency *,_Bool);;TR_LocalAnticipatability;0;0
adjustInfoForAddressAdd;adjustInfoForAddressAdd(TR::Node *,TR::Node *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,TR::Block *);;TR_LocalAnticipatability;0;0
allocateContainer;allocateContainer(int32_t);;TR_LocalAnalysis;0;0
allocateTempContainer;allocateTempContainer(int32_t);;TR_LocalAnalysis;0;0
analyzeBlock;analyzeBlock(TR::Block *,vcount_t,vcount_t,class TR_BitVector *);;TR_LocalAnticipatability;0;0
comp;comp();;TR_LocalAnalysis;0;0
getAnalysisInfo;getAnalysisInfo(int32_t);;TR_LocalAnalysis;0;0
getCheckExpressions;getCheckExpressions();;TR_LocalAnalysis;0;0
getCheckSymbolReferences;getCheckSymbolReferences();;TR_LocalAnalysis;0;0
getDownwardExposedAnalysisInfo;getDownwardExposedAnalysisInfo(int32_t);;TR_LocalAnalysis;0;0
getDownwardExposedStoreAnalysisInfo;getDownwardExposedStoreAnalysisInfo(int32_t);;TR_LocalAnalysis;0;0
getNumNodes;getNumNodes();;TR_LocalAnalysis;0;0
initializeBlocks;initializeBlocks(TR::Block *,TR::BitVector &);;TR_LocalAnalysis;0;0
initializeLocalAnalysis;initializeLocalAnalysis(_Bool,_Bool);;TR_LocalAnalysis;0;0
isSupportedNode;isSupportedNode(TR::Node *,TR::Compilation *,TR::Node *,_Bool);;TR_LocalAnalysis;0;0
isSupportedNodeForFieldPrivatization;isSupportedNodeForFieldPrivatization(TR::Node *,TR::Compilation *,TR::Node *);;TR_LocalAnalysis;0;0
isSupportedNodeForFunctionality;isSupportedNodeForFunctionality(TR::Node *,TR::Compilation *,TR::Node *,_Bool);;TR_LocalAnalysis;0;0
isSupportedNodeForPREPerformance;isSupportedNodeForPREPerformance(TR::Node *,TR::Compilation *,TR::Node *);;TR_LocalAnalysis;0;0
isSupportedOpCode;isSupportedOpCode(TR::ILOpCode &,TR::Compilation *);;TR_LocalAnalysis;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_LocalAnalysis;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_LocalAnalysis;0;0
killDownwardExposedExprs;killDownwardExposedExprs(TR::Block *,TR::Node *);;TR_LocalAnticipatability;0;0
killDownwardExposedExprs;killDownwardExposedExprs(TR::Block *,ContainerType *,TR::Node *);;TR_LocalAnticipatability;0;0
loadaddrAsLoad;loadaddrAsLoad();;TR_LocalAnticipatability;0;0
operator delete;operator delete(void *,size_t);;TR_LocalAnalysis;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_LocalAnalysis;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_LocalAnalysis;0;0
operator delete;operator delete(void *,TR::Region &);;TR_LocalAnalysis;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_LocalAnalysis;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_LocalAnalysis;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_LocalAnalysis;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_LocalAnalysis;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_LocalAnalysis;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_LocalAnalysis;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_LocalAnalysis;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_LocalAnalysis;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_LocalAnalysis;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_LocalAnalysis;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_LocalAnalysis;0;0
operator new;operator new(size_t,TR::Region &);;TR_LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_LocalAnalysis;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_LocalAnalysis;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_LocalAnalysis;0;0
operator=;operator=(const class TR_LocalAnalysis &);;TR_LocalAnalysis;1;0
operator=;operator=(class TR_LocalAnalysis &&);;TR_LocalAnalysis;1;0
operator=;operator=(class TR_LocalAnticipatability &&);;TR_LocalAnticipatability;1;0
trHeapMemory;trHeapMemory();;TR_LocalAnalysis;0;0
trMemory;trMemory();;TR_LocalAnalysis;0;0
trStackMemory;trStackMemory();;TR_LocalAnalysis;0;0
trace;trace();;TR_LocalAnalysis;0;0
updateAnticipatabilityForSupportedNodes;updateAnticipatabilityForSupportedNodes(TR::Node *,ContainerType *,ContainerType *,TR::Block *,ContainerType *,ContainerType *,ContainerType *,class TR_BitVector *,ContainerType *,vcount_t);;TR_LocalAnticipatability;0;0
updateUsesAndDefs;updateUsesAndDefs(TR::Node *,TR::Block *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,class TR_BitVector *,ContainerType *,vcount_t);;TR_LocalAnticipatability;0;0
~TR_LocalAnalysis;~TR_LocalAnalysis();;TR_LocalAnalysis;1;0
~TR_LocalAnticipatability;~TR_LocalAnticipatability();;TR_LocalAnticipatability;1;0
TR_LocalTransparency;TR_LocalTransparency(class TR_LocalAnalysisInfo &,_Bool);;TR_LocalTransparency;0;0
adjustInfoForAddressAdd;adjustInfoForAddressAdd(TR::Node *,TR::Node *,ContainerType *,ContainerType *);;TR_LocalTransparency;0;0
getTransparencyInfo;getTransparencyInfo(int32_t);;TR_LocalTransparency;0;0
loadaddrAsLoad;loadaddrAsLoad();;TR_LocalTransparency;0;0
operator=;operator=(class TR_LocalTransparency &&);;TR_LocalTransparency;1;0
operator=;operator=(const class TR_LocalTransparency &);;TR_LocalTransparency;1;0
updateInfoForSupportedNodes;updateInfoForSupportedNodes(TR::Node *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,vcount_t);;TR_LocalTransparency;0;0
updateUsesAndDefs;updateUsesAndDefs(TR::Node *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,vcount_t,ContainerType *,class TR_BitVector *,ContainerType *);;TR_LocalTransparency;0;0
~TR_LocalTransparency;~TR_LocalTransparency();;TR_LocalTransparency;1;0
TR_LiveVariableInformation;TR_LiveVariableInformation(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,_Bool,_Bool,_Bool);;TR_LiveVariableInformation;0;0
TR_OSRLiveVariableInformation;TR_OSRLiveVariableInformation(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,_Bool,_Bool,_Bool);;TR_OSRLiveVariableInformation;0;0
buildLiveSymbolsBitVector;buildLiveSymbolsBitVector(class TR_OSRMethodData *,int32_t,class TR_BitVector *);;TR_OSRLiveVariableInformation;0;0
comp;comp();;TR_LiveVariableInformation;0;0
createGenAndKillSetCaches;createGenAndKillSetCaches();;TR_LiveVariableInformation;0;0
findAllUseOfLocal;findAllUseOfLocal(TR::Node *,int32_t,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,_Bool,vcount_t);;TR_LiveVariableInformation;0;0
findCommonedLoads;findCommonedLoads(TR::Node *,class TR_BitVector *,_Bool,vcount_t);;TR_LiveVariableInformation;0;0
findLocalUsesInBackwardsTreeWalk;findLocalUsesInBackwardsTreeWalk(TR::Node *,int32_t,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,vcount_t);;TR_LiveVariableInformation;0;0
findUseOfLocal;findUseOfLocal(TR::Node *,int32_t,class TR_BitVector **,class TR_BitVector **,class TR_BitVector *,_Bool,vcount_t);;TR_LiveVariableInformation;0;1
findUseOfLocal;findUseOfLocal(TR::Node *,int32_t,class TR_BitVector **,class TR_BitVector **,class TR_BitVector *,_Bool,vcount_t);;TR_OSRLiveVariableInformation;0;1
getLiveSymbolsInInterpreter;getLiveSymbolsInInterpreter(TR_ByteCodeInfo &);;TR_OSRLiveVariableInformation;0;0
includeMethodMetaDataSymbols;includeMethodMetaDataSymbols();;TR_LiveVariableInformation;0;0
includeParms;includeParms();;TR_LiveVariableInformation;0;0
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo(class TR_BitVector **,class TR_BitVector **,class TR_BitVector **,class TR_BitVector **);;TR_LiveVariableInformation;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_LiveVariableInformation;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_OSRLiveVariableInformation;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_LiveVariableInformation;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_OSRLiveVariableInformation;0;0
liveCommonedLoads;liveCommonedLoads();;TR_LiveVariableInformation;0;0
numLocals;numLocals();;TR_LiveVariableInformation;0;0
numNodes;numNodes();;TR_LiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_LiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_OSRLiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_LiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
operator delete;operator delete(void *,TR::Region &);;TR_LiveVariableInformation;0;0
operator delete;operator delete(void *,TR::Region &);;TR_OSRLiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_LiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
operator delete;operator delete(void *,size_t);;TR_LiveVariableInformation;0;0
operator delete;operator delete(void *,size_t);;TR_OSRLiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_LiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_OSRLiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_LiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_LiveVariableInformation;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_OSRLiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_LiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_LiveVariableInformation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_OSRLiveVariableInformation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_LiveVariableInformation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_OSRLiveVariableInformation;0;0
operator new;operator new(size_t,TR::Region &);;TR_LiveVariableInformation;0;0
operator new;operator new(size_t,TR::Region &);;TR_OSRLiveVariableInformation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_LiveVariableInformation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_LiveVariableInformation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_LiveVariableInformation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_OSRLiveVariableInformation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_LiveVariableInformation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_OSRLiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_OSRLiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_OSRLiveVariableInformation;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_LiveVariableInformation;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_OSRLiveVariableInformation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_LiveVariableInformation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_OSRLiveVariableInformation;0;0
operator=;operator=(const class TR_LiveVariableInformation &);;TR_LiveVariableInformation;1;0
operator=;operator=(class TR_LiveVariableInformation &&);;TR_LiveVariableInformation;1;0
operator=;operator=(class TR_OSRLiveVariableInformation &&);;TR_OSRLiveVariableInformation;1;0
operator=;operator=(const class TR_OSRLiveVariableInformation &);;TR_OSRLiveVariableInformation;1;0
splitLongs;splitLongs();;TR_LiveVariableInformation;0;0
trHeapMemory;trHeapMemory();;TR_LiveVariableInformation;0;0
trMemory;trMemory();;TR_LiveVariableInformation;0;0
trStackMemory;trStackMemory();;TR_LiveVariableInformation;0;0
traceLiveVarInfo;traceLiveVarInfo();;TR_LiveVariableInformation;0;0
trackLiveCommonedLoads;trackLiveCommonedLoads();;TR_LiveVariableInformation;0;0
visitTreeForLocals;visitTreeForLocals(TR::Node *,class TR_BitVector **,class TR_BitVector *,_Bool,_Bool,vcount_t,class TR_BitVector *,_Bool);;TR_LiveVariableInformation;0;0
~TR_LiveVariableInformation;~TR_LiveVariableInformation();;TR_LiveVariableInformation;1;0
~TR_OSRLiveVariableInformation;~TR_OSRLiveVariableInformation();;TR_OSRLiveVariableInformation;1;0
TR_ReachingDefinitions;TR_ReachingDefinitions(TR::Compilation *,TR::CFG *,TR::Optimizer *,class TR_UseDefInfo *,class TR_UseDefInfo::AuxiliaryData &,_Bool);;TR_ReachingDefinitions;0;0
analyzeBlockZeroStructure;analyzeBlockZeroStructure(class TR_BlockStructure *);;TR_ReachingDefinitions;0;1
getKind;getKind();;TR_ReachingDefinitions;0;1
getNumberOfBits;getNumberOfBits();;TR_ReachingDefinitions;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo();;TR_ReachingDefinitions;0;1
initializeGenAndKillSetInfoForNode;initializeGenAndKillSetInfoForNode(TR::Node *,class TR_BitVector &,_Bool,int32_t,TR::Node *);;TR_ReachingDefinitions;0;0
operator=;operator=(const class TR_ReachingDefinitions &);;TR_ReachingDefinitions;1;0
operator=;operator=(class TR_ReachingDefinitions &&);;TR_ReachingDefinitions;1;0
perform;perform();;TR_ReachingDefinitions;0;1
supportsGenAndKillSets;supportsGenAndKillSets();;TR_ReachingDefinitions;0;1
traceRD;traceRD();;TR_ReachingDefinitions;0;0
~TR_ReachingDefinitions;~TR_ReachingDefinitions();;TR_ReachingDefinitions;1;1
TR_RegisterAnticipatability;TR_RegisterAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool);;TR_RegisterAnticipatability;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_RegisterAnticipatability;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_RegisterAnticipatability;0;1
asRegisterAnticipatability;asRegisterAnticipatability();;TR_RegisterAnticipatability;0;1
getKind;getKind();;TR_RegisterAnticipatability;0;1
getNumberOfBits;getNumberOfBits();;TR_RegisterAnticipatability;0;1
initializeRegisterUsageInfo;initializeRegisterUsageInfo();;TR_RegisterAnticipatability;0;0
operator=;operator=(class TR_RegisterAnticipatability &&);;TR_RegisterAnticipatability;1;0
operator=;operator=(const class TR_RegisterAnticipatability &);;TR_RegisterAnticipatability;1;0
postInitializationProcessing;postInitializationProcessing();;TR_RegisterAnticipatability;0;1
~TR_RegisterAnticipatability;~TR_RegisterAnticipatability();;TR_RegisterAnticipatability;1;1
TR_RegisterAvailability;TR_RegisterAvailability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool);;TR_RegisterAvailability;0;0
analyzeBlockZeroStructure;analyzeBlockZeroStructure(class TR_BlockStructure *);;TR_RegisterAvailability;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_RegisterAvailability;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_RegisterAvailability;0;1
asRegisterAvailability;asRegisterAvailability();;TR_RegisterAvailability;0;1
getKind;getKind();;TR_RegisterAvailability;0;1
getNumberOfBits;getNumberOfBits();;TR_RegisterAvailability;0;1
initializeRegisterUsageInfo;initializeRegisterUsageInfo();;TR_RegisterAvailability;0;0
operator=;operator=(class TR_RegisterAvailability &&);;TR_RegisterAvailability;1;0
operator=;operator=(const class TR_RegisterAvailability &);;TR_RegisterAvailability;1;0
postInitializationProcessing;postInitializationProcessing();;TR_RegisterAvailability;0;1
~TR_RegisterAvailability;~TR_RegisterAvailability();;TR_RegisterAvailability;1;1
TR_UnionSingleBitContainerAnalysis;TR_UnionSingleBitContainerAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_UnionSingleBitContainerAnalysis;0;0
operator=;operator=(class TR_UnionSingleBitContainerAnalysis &&);;TR_UnionSingleBitContainerAnalysis;1;0
operator=;operator=(const class TR_UnionSingleBitContainerAnalysis &);;TR_UnionSingleBitContainerAnalysis;1;0
~TR_UnionSingleBitContainerAnalysis;~TR_UnionSingleBitContainerAnalysis();;TR_UnionSingleBitContainerAnalysis;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/BackwardIntersectionBitVectorAnalysis.cpp
TR_BackwardIntersectionDFSetAnalysis;TR_BackwardIntersectionDFSetAnalysis(class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &&);;TR_BackwardIntersectionDFSetAnalysis;1;0
TR_BackwardIntersectionDFSetAnalysis;TR_BackwardIntersectionDFSetAnalysis(const class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &);;TR_BackwardIntersectionDFSetAnalysis;1;0
TR_BackwardIntersectionDFSetAnalysis;TR_BackwardIntersectionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardIntersectionDFSetAnalysis;0;0
compose;compose(class TR_BitVector *,class TR_BitVector *);;TR_BackwardIntersectionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);;TR_BackwardIntersectionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);;TR_BackwardIntersectionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);;TR_BackwardIntersectionDFSetAnalysis;0;1
operator=;operator=(class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &&);;TR_BackwardIntersectionDFSetAnalysis;1;0
operator=;operator=(const class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &);;TR_BackwardIntersectionDFSetAnalysis;1;0
~TR_BackwardIntersectionDFSetAnalysis;~TR_BackwardIntersectionDFSetAnalysis();;TR_BackwardIntersectionDFSetAnalysis;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/BackwardUnionBitVectorAnalysis.cpp
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(const class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_BackwardUnionDFSetAnalysis;1;0
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_BackwardUnionDFSetAnalysis;1;0
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardUnionDFSetAnalysis;0;0
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(const class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &);;TR_BackwardUnionDFSetAnalysis;1;0
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &&);;TR_BackwardUnionDFSetAnalysis;1;0
compose;compose(class TR_BitVector *,class TR_BitVector *);;TR_BackwardUnionDFSetAnalysis;0;1
compose;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_BackwardUnionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_SingleBitContainer *);;TR_BackwardUnionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);;TR_BackwardUnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);;TR_BackwardUnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_BackwardUnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_SingleBitContainer *);;TR_BackwardUnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);;TR_BackwardUnionDFSetAnalysis;0;1
operator=;operator=(class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_BackwardUnionDFSetAnalysis;1;0
operator=;operator=(const class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &);;TR_BackwardUnionDFSetAnalysis;1;0
operator=;operator=(const class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_BackwardUnionDFSetAnalysis;1;0
operator=;operator=(class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &&);;TR_BackwardUnionDFSetAnalysis;1;0
~TR_BackwardUnionDFSetAnalysis;~TR_BackwardUnionDFSetAnalysis();;TR_BackwardUnionDFSetAnalysis;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/BitVectorAnalysis.cpp
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(const class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_BasicDFSetAnalysis;1;0
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_BasicDFSetAnalysis;1;0
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(const class TR_BasicDFSetAnalysis<class TR_BitVector *> &);;TR_BasicDFSetAnalysis;1;0
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BasicDFSetAnalysis;0;0
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(class TR_BasicDFSetAnalysis<class TR_BitVector *> &&);;TR_BasicDFSetAnalysis;1;0
allocateBlockInfoContainer;allocateBlockInfoContainer(class TR_SingleBitContainer **,_Bool,_Bool);;TR_BasicDFSetAnalysis;0;1
allocateBlockInfoContainer;allocateBlockInfoContainer(class TR_SingleBitContainer **,class TR_SingleBitContainer *);;TR_BasicDFSetAnalysis;0;1
allocateBlockInfoContainer;allocateBlockInfoContainer(class TR_BitVector **,class TR_BitVector *);;TR_BasicDFSetAnalysis;0;1
allocateBlockInfoContainer;allocateBlockInfoContainer(class TR_BitVector **,_Bool,_Bool);;TR_BasicDFSetAnalysis;0;1
allocateContainer;allocateContainer(class TR_SingleBitContainer **,_Bool,_Bool);;TR_BasicDFSetAnalysis;0;1
allocateContainer;allocateContainer(class TR_BitVector **,_Bool,_Bool);;TR_BasicDFSetAnalysis;0;1
allocateTempContainer;allocateTempContainer(class TR_SingleBitContainer **,class TR_SingleBitContainer *);;TR_BasicDFSetAnalysis;0;1
allocateTempContainer;allocateTempContainer(class TR_BitVector **,class TR_BitVector *);;TR_BasicDFSetAnalysis;0;1
clearAnalysisInfo;clearAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *);;TR_BasicDFSetAnalysis;0;0
clearAnalysisInfo;clearAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *);;TR_BasicDFSetAnalysis;0;0
compose;compose(class TR_BitVector *,class TR_BitVector *);;TR_BasicDFSetAnalysis;0;1
compose;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_BasicDFSetAnalysis;0;1
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *,class TR_Structure *);;TR_BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *,class TR_RegionStructure *);;TR_BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *,TR::Block *);;TR_BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *,TR::Block *);;TR_BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *,class TR_RegionStructure *);;TR_BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *,class TR_Structure *);;TR_BasicDFSetAnalysis;0;0
initializeInfo;initializeInfo(class TR_BitVector *);;TR_BasicDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_SingleBitContainer *);;TR_BasicDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);;TR_BasicDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_BasicDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_SingleBitContainer *);;TR_BasicDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);;TR_BasicDFSetAnalysis;0;1
operator=;operator=(class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_BasicDFSetAnalysis;1;0
operator=;operator=(const class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_BasicDFSetAnalysis;1;0
operator=;operator=(const class TR_BasicDFSetAnalysis<class TR_BitVector *> &);;TR_BasicDFSetAnalysis;1;0
operator=;operator=(class TR_BasicDFSetAnalysis<class TR_BitVector *> &&);;TR_BasicDFSetAnalysis;1;0
~TR_BasicDFSetAnalysis;~TR_BasicDFSetAnalysis();;TR_BasicDFSetAnalysis;1;1
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_ForwardDFSetAnalysis;1;0
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(const class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_ForwardDFSetAnalysis;1;0
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_ForwardDFSetAnalysis;0;0
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(const class TR_ForwardDFSetAnalysis<class TR_BitVector *> &);;TR_ForwardDFSetAnalysis;1;0
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(class TR_ForwardDFSetAnalysis<class TR_BitVector *> &&);;TR_ForwardDFSetAnalysis;1;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_SingleBitContainer *);;TR_ForwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_ForwardDFSetAnalysis;0;1
compose;compose(class TR_BitVector *,class TR_BitVector *);;TR_ForwardDFSetAnalysis;0;1
compose;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_ForwardDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);;TR_ForwardDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_SingleBitContainer *);;TR_ForwardDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);;TR_ForwardDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_ForwardDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_SingleBitContainer *);;TR_ForwardDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);;TR_ForwardDFSetAnalysis;0;1
operator=;operator=(class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_ForwardDFSetAnalysis;1;0
operator=;operator=(const class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_ForwardDFSetAnalysis;1;0
operator=;operator=(class TR_ForwardDFSetAnalysis<class TR_BitVector *> &&);;TR_ForwardDFSetAnalysis;1;0
operator=;operator=(const class TR_ForwardDFSetAnalysis<class TR_BitVector *> &);;TR_ForwardDFSetAnalysis;1;0
~TR_ForwardDFSetAnalysis;~TR_ForwardDFSetAnalysis();;TR_ForwardDFSetAnalysis;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/CatchBlockRemover.cpp
TR_CatchBlockRemover;TR_CatchBlockRemover(const class TR_CatchBlockRemover &);;TR_CatchBlockRemover;1;0
TR_CatchBlockRemover;TR_CatchBlockRemover(class TR_CatchBlockRemover &&);;TR_CatchBlockRemover;1;0
TR_CatchBlockRemover;TR_CatchBlockRemover(TR::OptimizationManager *);;TR_CatchBlockRemover;0;0
create;create(TR::OptimizationManager *);;TR_CatchBlockRemover;0;0
operator=;operator=(class TR_CatchBlockRemover &&);;TR_CatchBlockRemover;1;0
operator=;operator=(const class TR_CatchBlockRemover &);;TR_CatchBlockRemover;1;0
optDetailString;optDetailString();;TR_CatchBlockRemover;0;1
perform;perform();;TR_CatchBlockRemover;0;1
~TR_CatchBlockRemover;~TR_CatchBlockRemover();;TR_CatchBlockRemover;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/CFGSimplifier.cpp
TR_CFGSimplifier;TR_CFGSimplifier(class TR_CFGSimplifier &&);;TR_CFGSimplifier;1;0
TR_CFGSimplifier;TR_CFGSimplifier(const class TR_CFGSimplifier &);;TR_CFGSimplifier;1;0
TR_CFGSimplifier;TR_CFGSimplifier(TR::OptimizationManager *);;TR_CFGSimplifier;0;0
canReverseBranchMask;canReverseBranchMask();;TR_CFGSimplifier;0;0
create;create(TR::OptimizationManager *);;TR_CFGSimplifier;0;0
getFallThroughBlock;getFallThroughBlock(TR::Block *);;TR_CFGSimplifier;0;0
getLastRealTreetop;getLastRealTreetop(TR::Block *);;TR_CFGSimplifier;0;0
getNextRealTreetop;getNextRealTreetop(TR::TreeTop *,_Bool);;TR_CFGSimplifier;0;0
operator=;operator=(class TR_CFGSimplifier &&);;TR_CFGSimplifier;1;0
operator=;operator=(const class TR_CFGSimplifier &);;TR_CFGSimplifier;1;0
optDetailString;optDetailString();;TR_CFGSimplifier;0;1
perform;perform();;TR_CFGSimplifier;0;1
simplify;simplify();;TR_CFGSimplifier;0;0
simplifyBooleanStore;simplifyBooleanStore();;TR_CFGSimplifier;0;0
simplifyCondCodeBooleanStore;simplifyCondCodeBooleanStore(TR::Block *,TR::Node *,TR::Node *,TR::Node *);;TR_CFGSimplifier;0;0
~TR_CFGSimplifier;~TR_CFGSimplifier();;TR_CFGSimplifier;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/CompactLocals.cpp
TR_CompactLocals;TR_CompactLocals(class TR_CompactLocals &&);;TR_CompactLocals;1;0
TR_CompactLocals;TR_CompactLocals(TR::OptimizationManager *);;TR_CompactLocals;0;0
TR_CompactLocals;TR_CompactLocals(const class TR_CompactLocals &);;TR_CompactLocals;1;0
assignColorsToSymbols;assignColorsToSymbols(class TR_BitVector *);;TR_CompactLocals;0;0
create;create(TR::OptimizationManager *);;TR_CompactLocals;0;0
createInterferenceBetween;createInterferenceBetween(class TR_BitVector *);;TR_CompactLocals;0;0
createInterferenceBetween;createInterferenceBetween(class TR_BitVector *,class TR_BitVector *);;TR_CompactLocals;0;0
createInterferenceBetweenLocals;createInterferenceBetweenLocals(int32_t);;TR_CompactLocals;0;0
doCompactLocals;doCompactLocals();;TR_CompactLocals;0;0
eligibleLocal;eligibleLocal(TR::AutomaticSymbol *);;TR_CompactLocals;0;0
operator=;operator=(class TR_CompactLocals &&);;TR_CompactLocals;1;0
operator=;operator=(const class TR_CompactLocals &);;TR_CompactLocals;1;0
optDetailString;optDetailString();;TR_CompactLocals;0;1
perform;perform();;TR_CompactLocals;0;1
processNodeInPreorder;processNodeInPreorder(TR::Node *,vcount_t,class TR_Liveness *,TR::Block *,_Bool);;TR_CompactLocals;0;0
~TR_CompactLocals;~TR_CompactLocals();;TR_CompactLocals;1;1
TR_BackwardUnionBitVectorAnalysis;TR_BackwardUnionBitVectorAnalysis(const class TR_BackwardUnionBitVectorAnalysis &);;TR_BackwardUnionBitVectorAnalysis;1;0
TR_BackwardUnionBitVectorAnalysis;TR_BackwardUnionBitVectorAnalysis(class TR_BackwardUnionBitVectorAnalysis &&);;TR_BackwardUnionBitVectorAnalysis;1;0
TR_Liveness;TR_Liveness(class TR_Liveness &&);;TR_Liveness;1;0
TR_Liveness;TR_Liveness(const class TR_Liveness &);;TR_Liveness;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/CopyPropagation.cpp
TR_CopyPropagation;TR_CopyPropagation(const class TR_CopyPropagation &);;TR_CopyPropagation;1;0
TR_CopyPropagation;TR_CopyPropagation(TR::OptimizationManager *);;TR_CopyPropagation;0;0
TR_CopyPropagation;TR_CopyPropagation(class TR_CopyPropagation &&);;TR_CopyPropagation;1;0
adjustUseDefInfo;adjustUseDefInfo(TR::Node *,TR::Node *,class TR_UseDefInfo *);;TR_CopyPropagation;0;0
areAllDefsInCorrectForm;areAllDefsInCorrectForm(TR::Node *,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *,int32_t,TR::Node *&,int32_t &,TR::Node *&);;TR_CopyPropagation;0;0
collectUseTrees;collectUseTrees(TR::TreeTop *,TR::Node *,TR::NodeChecklist &);;TR_CopyPropagation;0;0
commonIndirectLoadsFromAutos;commonIndirectLoadsFromAutos();;TR_CopyPropagation;0;0
containsLoadOfSymbol;containsLoadOfSymbol(TR::Node *,TR::SymbolReference *,TR::Node **);;TR_CopyPropagation;0;0
containsNode;containsNode(TR::Node *,TR::Node *,_Bool);;TR_CopyPropagation;0;0
create;create(TR::OptimizationManager *);;TR_CopyPropagation;0;0
findAnchorTree;findAnchorTree(TR::Node *,TR::Node *);;TR_CopyPropagation;0;0
findUseTree;findUseTree(TR::Node *);;TR_CopyPropagation;0;0
isBaseAddrAvailable;isBaseAddrAvailable(TR::Node *,TR::Node *,_Bool &);;TR_CopyPropagation;0;0
isCheapRematerializationCandidate;isCheapRematerializationCandidate(TR::Node *,TR::Node *);;TR_CopyPropagation;0;0
isCorrectToPropagate;isCorrectToPropagate(TR::Node *,TR::Node *,TR::list<TR::Node *> &,TR::SparseBitVector &,int32_t,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *);;TR_CopyPropagation;0;0
isCorrectToReplace;isCorrectToReplace(TR::Node *,TR::Node *,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *);;TR_CopyPropagation;0;0
isIndirectLoadFromAuto;isIndirectLoadFromAuto(TR::Node *);;TR_CopyPropagation;0;0
isIndirectLoadFromRegister;isIndirectLoadFromRegister(TR::Node *,TR::Node *&);;TR_CopyPropagation;0;0
isLoadNodeSuitableForPropagation;isLoadNodeSuitableForPropagation(TR::Node *,TR::Node *,TR::Node *);;TR_CopyPropagation;0;0
isLoadVarWithConst;isLoadVarWithConst(TR::Node *);;TR_CopyPropagation;0;0
isNodeAvailableInBlock;isNodeAvailableInBlock(TR::TreeTop *,TR::Node *);;TR_CopyPropagation;0;0
isRedefinedBetweenStoreTreeAnd;isRedefinedBetweenStoreTreeAnd(TR::list<TR::Node *> &,TR::SparseBitVector &,TR::Node *,TR::TreeTop *,int32_t,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *);;TR_CopyPropagation;0;0
isSafeToPropagate;isSafeToPropagate(TR::Node *,TR::Node *);;TR_CopyPropagation;0;0
isUniqueDefinitionOfUse;isUniqueDefinitionOfUse(class TR_BitVector *,class TR_UseDefInfo *,int32_t);;TR_CopyPropagation;0;0
isValidRegLoad;isValidRegLoad(TR::Node *,TR::TreeTop *,int32_t &);;TR_CopyPropagation;0;0
operator=;operator=(const class TR_CopyPropagation &);;TR_CopyPropagation;1;0
operator=;operator=(class TR_CopyPropagation &&);;TR_CopyPropagation;1;0
optDetailString;optDetailString();;TR_CopyPropagation;0;1
perform;perform();;TR_CopyPropagation;0;1
recursive_isRedefinedBetweenStoreTreeAnd;recursive_isRedefinedBetweenStoreTreeAnd(TR::list<TR::Node *> &,TR::SparseBitVector &,TR::Node *,TR::TreeTop *,int32_t,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *);;TR_CopyPropagation;0;0
rematerializeIndirectLoadsFromAutos;rematerializeIndirectLoadsFromAutos();;TR_CopyPropagation;0;0
replaceCopySymbolReferenceByOriginalIn;replaceCopySymbolReferenceByOriginalIn(TR::SymbolReference *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,_Bool);;TR_CopyPropagation;0;0
replaceCopySymbolReferenceByOriginalRegLoadIn;replaceCopySymbolReferenceByOriginalRegLoadIn(TR::Node *,TR::Node *,TR::SymbolReference *,TR::Node *,TR::Node *,int32_t);;TR_CopyPropagation;0;0
skipTreeTopAndGetNode;skipTreeTopAndGetNode(TR::TreeTop *);;TR_CopyPropagation;0;0
~TR_CopyPropagation;~TR_CopyPropagation();;TR_CopyPropagation;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DataFlowAnalysis.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DeadStoreElimination.cpp
TR_DeadStoreElimination;TR_DeadStoreElimination(const class TR_DeadStoreElimination &);;TR_DeadStoreElimination;1;0
TR_DeadStoreElimination;TR_DeadStoreElimination(class TR_DeadStoreElimination &&);;TR_DeadStoreElimination;1;0
TR_DeadStoreElimination;TR_DeadStoreElimination(TR::OptimizationManager *);;TR_DeadStoreElimination;0;0
TR_IsolatedStoreElimination;TR_IsolatedStoreElimination(class TR_IsolatedStoreElimination &&);;TR_IsolatedStoreElimination;1;0
TR_IsolatedStoreElimination;TR_IsolatedStoreElimination(TR::OptimizationManager *);;TR_IsolatedStoreElimination;0;0
TR_IsolatedStoreElimination;TR_IsolatedStoreElimination(const class TR_IsolatedStoreElimination &);;TR_IsolatedStoreElimination;1;0
analyzeSingleBlockLoop;analyzeSingleBlockLoop(class TR_RegionStructure *,TR::Block *);;TR_IsolatedStoreElimination;0;0
canRemoveStoreNode;canRemoveStoreNode(TR::Node *);;TR_IsolatedStoreElimination;0;0
collectDefParentInfo;collectDefParentInfo(int32_t,TR::Node *,class TR_UseDefInfo *);;TR_IsolatedStoreElimination;0;0
create;create(TR::OptimizationManager *);;TR_IsolatedStoreElimination;0;0
create;create(TR::OptimizationManager *);;TR_DeadStoreElimination;0;0
examineNode;examineNode(TR::Node *,vcount_t,_Bool);;TR_IsolatedStoreElimination;0;0
findStructuresAndNodesUsedIn;findStructuresAndNodesUsedIn(class TR_UseDefInfo *,class TR_Structure *,vcount_t,class TR_BitVector *,class TR_BitVector *,_Bool *);;TR_IsolatedStoreElimination;0;0
groupIsolatedStores;groupIsolatedStores(int32_t,class TR_BitVector *,class TR_UseDefInfo *);;TR_IsolatedStoreElimination;0;0
markNodesAndLocateSideEffectIn;markNodesAndLocateSideEffectIn(TR::Node *,vcount_t,class TR_BitVector *,class TR_BitVector *);;TR_IsolatedStoreElimination;0;0
operator=;operator=(const class TR_IsolatedStoreElimination &);;TR_IsolatedStoreElimination;1;0
operator=;operator=(class TR_IsolatedStoreElimination &&);;TR_IsolatedStoreElimination;1;0
operator=;operator=(class TR_DeadStoreElimination &&);;TR_DeadStoreElimination;1;0
operator=;operator=(const class TR_DeadStoreElimination &);;TR_DeadStoreElimination;1;0
optDetailString;optDetailString();;TR_IsolatedStoreElimination;0;1
optDetailString;optDetailString();;TR_DeadStoreElimination;0;1
perform;perform();;TR_IsolatedStoreElimination;0;1
performDeadStructureRemoval;performDeadStructureRemoval(class TR_UseDefInfo *);;TR_IsolatedStoreElimination;0;0
performWithUseDefInfo;performWithUseDefInfo();;TR_IsolatedStoreElimination;0;0
performWithoutUseDefInfo;performWithoutUseDefInfo();;TR_IsolatedStoreElimination;0;0
removeRedundantSpills;removeRedundantSpills();;TR_IsolatedStoreElimination;0;0
~TR_DeadStoreElimination;~TR_DeadStoreElimination();;TR_DeadStoreElimination;1;1
~TR_IsolatedStoreElimination;~TR_IsolatedStoreElimination();;TR_IsolatedStoreElimination;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DeadTreesElimination.cpp
DeadTreesElimination;DeadTreesElimination(class TR::DeadTreesElimination &&);TR;DeadTreesElimination;1;0
DeadTreesElimination;DeadTreesElimination(const class TR::DeadTreesElimination &);TR;DeadTreesElimination;1;0
DeadTreesElimination;DeadTreesElimination(TR::OptimizationManager *);TR;DeadTreesElimination;0;0
create;create(TR::OptimizationManager *);TR;DeadTreesElimination;0;0
findLastTreetop;findLastTreetop(TR::Block *,TR::TreeTop *);TR;DeadTreesElimination;0;1
operator=;operator=(const class TR::DeadTreesElimination &);TR;DeadTreesElimination;1;0
operator=;operator=(class TR::DeadTreesElimination &&);TR;DeadTreesElimination;1;0
optDetailString;optDetailString();TR;DeadTreesElimination;0;1
perform;perform();TR;DeadTreesElimination;0;1
performOnBlock;performOnBlock(TR::Block *);TR;DeadTreesElimination;0;1
prePerformOnBlocks;prePerformOnBlocks();TR;DeadTreesElimination;0;1
process;process(TR::TreeTop *,TR::TreeTop *);TR;DeadTreesElimination;0;0
~DeadTreesElimination;~DeadTreesElimination();TR;DeadTreesElimination;1;1
TreeTopIterator;TreeTopIterator(const class TR::TreeTopIterator &);TR;TreeTopIterator;1;0
TreeTopIterator;TreeTopIterator(class TR::TreeTopIterator &&);TR;TreeTopIterator;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DebuggingCounters.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Delayedness.cpp
TR_Delayedness;TR_Delayedness(class TR_Delayedness &&);;TR_Delayedness;1;0
TR_Delayedness;TR_Delayedness(const class TR_Delayedness &);;TR_Delayedness;1;0
TR_IntersectionBitVectorAnalysis;TR_IntersectionBitVectorAnalysis(class TR_IntersectionBitVectorAnalysis &&);;TR_IntersectionBitVectorAnalysis;1;0
TR_IntersectionBitVectorAnalysis;TR_IntersectionBitVectorAnalysis(const class TR_IntersectionBitVectorAnalysis &);;TR_IntersectionBitVectorAnalysis;1;0
TR_Earliestness;TR_Earliestness(const class TR_Earliestness &);;TR_Earliestness;1;0
TR_Earliestness;TR_Earliestness(class TR_Earliestness &&);;TR_Earliestness;1;0
TR_UnionBitVectorAnalysis;TR_UnionBitVectorAnalysis(class TR_UnionBitVectorAnalysis &&);;TR_UnionBitVectorAnalysis;1;0
TR_UnionBitVectorAnalysis;TR_UnionBitVectorAnalysis(const class TR_UnionBitVectorAnalysis &);;TR_UnionBitVectorAnalysis;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Dominators.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DominatorVerifier.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DominatorsChk.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Earliestness.cpp
TR_BackwardIntersectionBitVectorAnalysis;TR_BackwardIntersectionBitVectorAnalysis(class TR_BackwardIntersectionBitVectorAnalysis &&);;TR_BackwardIntersectionBitVectorAnalysis;1;0
TR_BackwardIntersectionBitVectorAnalysis;TR_BackwardIntersectionBitVectorAnalysis(const class TR_BackwardIntersectionBitVectorAnalysis &);;TR_BackwardIntersectionBitVectorAnalysis;1;0
TR_GlobalAnticipatability;TR_GlobalAnticipatability(class TR_GlobalAnticipatability &&);;TR_GlobalAnticipatability;1;0
TR_GlobalAnticipatability;TR_GlobalAnticipatability(const class TR_GlobalAnticipatability &);;TR_GlobalAnticipatability;1;0
TR_LocalAnalysis;TR_LocalAnalysis(class TR_LocalAnalysis &&);;TR_LocalAnalysis;1;0
TR_LocalAnalysis;TR_LocalAnalysis(const class TR_LocalAnalysis &);;TR_LocalAnalysis;1;0
TR_LocalAnticipatability;TR_LocalAnticipatability(class TR_LocalAnticipatability &&);;TR_LocalAnticipatability;1;0
TR_LocalAnticipatability;TR_LocalAnticipatability(const class TR_LocalAnticipatability &);;TR_LocalAnticipatability;1;0
TR_LocalTransparency;TR_LocalTransparency(class TR_LocalTransparency &&);;TR_LocalTransparency;1;0
TR_LocalTransparency;TR_LocalTransparency(const class TR_LocalTransparency &);;TR_LocalTransparency;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ExpressionsSimplification.cpp
TR_ExpressionsSimplification;TR_ExpressionsSimplification(class TR_ExpressionsSimplification &&);;TR_ExpressionsSimplification;1;0
TR_ExpressionsSimplification;TR_ExpressionsSimplification(const class TR_ExpressionsSimplification &);;TR_ExpressionsSimplification;1;0
TR_ExpressionsSimplification;TR_ExpressionsSimplification(TR::OptimizationManager *);;TR_ExpressionsSimplification;0;0
checkForLoad;checkForLoad(TR::Node *,TR::Node *);;TR_ExpressionsSimplification;0;0
create;create(TR::OptimizationManager *);;TR_ExpressionsSimplification;0;0
findAndSimplifyInvariantLoopExpressions;findAndSimplifyInvariantLoopExpressions(class TR_RegionStructure *);;TR_ExpressionsSimplification;0;0
findLoopInfo;findLoopInfo(class TR_RegionStructure *);;TR_ExpressionsSimplification;0;0
findPredecessorBlock;findPredecessorBlock(TR::CFGNode *);;TR_ExpressionsSimplification;0;0
findUseInRegion;findUseInRegion(TR::Node *,uint16_t,uint16_t);;TR_ExpressionsSimplification;0;0
findUseInRegion;findUseInRegion(class TR_RegionStructure *,uint16_t,uint16_t);;TR_ExpressionsSimplification;0;0
iaddisubSimplifier;iaddisubSimplifier(TR::Node *,class TR_ExpressionsSimplification::LoopInfo *);;TR_ExpressionsSimplification;0;0
invalidateCandidates;invalidateCandidates();;TR_ExpressionsSimplification;0;0
isSupportedNodeForExpressionSimplification;isSupportedNodeForExpressionSimplification(TR::Node *);;TR_ExpressionsSimplification;0;0
ixorinegSimplifier;ixorinegSimplifier(TR::Node *,class TR_ExpressionsSimplification::LoopInfo *,_Bool *);;TR_ExpressionsSimplification;0;0
operator=;operator=(class TR_ExpressionsSimplification &&);;TR_ExpressionsSimplification;1;0
operator=;operator=(const class TR_ExpressionsSimplification &);;TR_ExpressionsSimplification;1;0
optDetailString;optDetailString();;TR_ExpressionsSimplification;0;1
perform;perform();;TR_ExpressionsSimplification;0;1
perform;perform(class TR_Structure *);;TR_ExpressionsSimplification;0;0
removeCandidate;removeCandidate(class TR_RegionStructure *);;TR_ExpressionsSimplification;0;0
removeCandidate;removeCandidate(TR::Node *,TR::TreeTop *);;TR_ExpressionsSimplification;0;0
removeUncertainBlocks;removeUncertainBlocks(class TR_RegionStructure *,List<TR::Block> *);;TR_ExpressionsSimplification;0;0
removeUnsupportedCandidates;removeUnsupportedCandidates();;TR_ExpressionsSimplification;0;0
setStoreMotionCandidates;setStoreMotionCandidates(TR::Node *,TR::TreeTop *);;TR_ExpressionsSimplification;0;0
setSummationReductionCandidates;setSummationReductionCandidates(TR::Node *,TR::TreeTop *);;TR_ExpressionsSimplification;0;0
simplifyInvariantLoopExpressions;simplifyInvariantLoopExpressions(ListIterator<TR::Block> &);;TR_ExpressionsSimplification;0;0
tranformStoreMotionCandidate;tranformStoreMotionCandidate(TR::TreeTop *,_Bool *);;TR_ExpressionsSimplification;0;0
tranformSummationReductionCandidate;tranformSummationReductionCandidate(TR::TreeTop *,class TR_ExpressionsSimplification::LoopInfo *,_Bool *);;TR_ExpressionsSimplification;0;0
transformNode;transformNode(TR::Node *,TR::Block *);;TR_ExpressionsSimplification;0;0
~TR_ExpressionsSimplification;~TR_ExpressionsSimplification();;TR_ExpressionsSimplification;1;1
TR_PostDominators;TR_PostDominators(class TR_PostDominators &&);;TR_PostDominators;1;0
TR_PostDominators;TR_PostDominators(const class TR_PostDominators &);;TR_PostDominators;1;0
~TR_PostDominators;~TR_PostDominators();;TR_PostDominators;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/FieldPrivatizer.cpp
TR_FieldPrivatizer;TR_FieldPrivatizer(class TR_FieldPrivatizer &&);;TR_FieldPrivatizer;1;0
TR_FieldPrivatizer;TR_FieldPrivatizer(const class TR_FieldPrivatizer &);;TR_FieldPrivatizer;1;0
TR_FieldPrivatizer;TR_FieldPrivatizer(TR::OptimizationManager *);;TR_FieldPrivatizer;0;0
TR_LoopTransformer;TR_LoopTransformer(class TR_LoopTransformer &&);;TR_LoopTransformer;1;0
TR_LoopTransformer;TR_LoopTransformer(TR::OptimizationManager *);;TR_LoopTransformer;0;0
TR_LoopTransformer;TR_LoopTransformer(const class TR_LoopTransformer &);;TR_LoopTransformer;1;0
addPrivatizedRegisterCandidates;addPrivatizedRegisterCandidates(class TR_Structure *);;TR_FieldPrivatizer;0;0
addStringInitialization;addStringInitialization(TR::Block *);;TR_FieldPrivatizer;0;0
adjustTreesInBlock;adjustTreesInBlock(TR::Block *);;TR_LoopTransformer;0;0
asLoopCanonicalizer;asLoopCanonicalizer();;TR_LoopTransformer;0;1
asLoopPredictor;asLoopPredictor();;TR_LoopTransformer;0;1
asLoopReducer;asLoopReducer();;TR_LoopTransformer;0;1
asLoopVersioner;asLoopVersioner();;TR_LoopTransformer;0;1
blockIsAlwaysExecutedInLoop;blockIsAlwaysExecutedInLoop(TR::Block *,class TR_RegionStructure *,_Bool *);;TR_LoopTransformer;0;0
bothSubtreesMatch;bothSubtreesMatch(TR::Node *,TR::Node *);;TR_FieldPrivatizer;0;0
canPrivatizeFieldSymRef;canPrivatizeFieldSymRef(TR::Node *);;TR_FieldPrivatizer;0;0
checkIfIncrementInDifferentExtendedBlock;checkIfIncrementInDifferentExtendedBlock(TR::Block *,int32_t);;TR_LoopTransformer;0;1
checkLoopForPredictability;checkLoopForPredictability(class TR_Structure *,TR::Block *,TR::Node **,_Bool);;TR_LoopTransformer;0;1
cleanseTrees;cleanseTrees(TR::Block *);;TR_LoopTransformer;0;0
cleanupStringPeephole;cleanupStringPeephole();;TR_FieldPrivatizer;0;0
collectSymbolsWrittenAndReadExactlyOnce;collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t,struct TR_LoopTransformer::updateInfo_tables &);;TR_LoopTransformer;0;0
collectSymbolsWrittenAndReadExactlyOnce;collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t);;TR_LoopTransformer;0;0
containsEscapePoints;containsEscapePoints(class TR_Structure *,_Bool &);;TR_FieldPrivatizer;0;0
containsOnlyInductionVariableAndAdditiveConstant;containsOnlyInductionVariableAndAdditiveConstant(TR::Node *,int32_t);;TR_LoopTransformer;0;0
create;create(TR::OptimizationManager *);;TR_FieldPrivatizer;0;0
createNewEmptyBlock;createNewEmptyBlock();;TR_LoopTransformer;0;0
createNewGotoNode;createNewGotoNode();;TR_LoopTransformer;0;0
createWhileLoopsList;createWhileLoopsList(TR_ScratchList<class TR_Structure> *);;TR_LoopTransformer;0;0
detectCanonicalizedPredictableLoops;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);;TR_LoopTransformer;0;1
detectCanonicalizedPredictableLoops;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);;TR_FieldPrivatizer;0;1
detectEmptyLoop;detectEmptyLoop(class TR_Structure *,int32_t *);;TR_LoopTransformer;0;0
detectFieldsThatCannotBePrivatized;detectFieldsThatCannotBePrivatized(TR::Node *,vcount_t);;TR_FieldPrivatizer;0;0
detectFieldsThatCannotBePrivatized;detectFieldsThatCannotBePrivatized(class TR_Structure *,vcount_t);;TR_FieldPrivatizer;0;0
detectWhileLoops;detectWhileLoops(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_Structure *,_Bool);;TR_LoopTransformer;0;0
detectWhileLoopsInSubnodesInOrder;detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_Structure *,class TR_StructureSubGraphNode *,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool);;TR_LoopTransformer;0;0
detectWhileLoopsInSubnodesInOrder;detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool);;TR_LoopTransformer;0;0
duplicateExact;duplicateExact(TR::Node *,List<TR::Node> *,List<TR::Node> *);;TR_LoopTransformer;0;0
elementPrivatization;elementPrivatization();;TR_FieldPrivatizer;0;0
examineTreeForInductionVariableUse;examineTreeForInductionVariableUse(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t,TR::SymbolReference **);;TR_LoopTransformer;0;1
findElementCandidates;findElementCandidates();;TR_FieldPrivatizer;0;0
findMatchingIVInRegion;findMatchingIVInRegion(TR::TreeTop *,class TR_RegionStructure *);;TR_LoopTransformer;0;0
getCorrectNumberOfIterations;getCorrectNumberOfIterations(TR::Node *,TR::Node *);;TR_LoopTransformer;0;0
getInductionSymbolReference;getInductionSymbolReference(TR::Node *);;TR_LoopTransformer;0;1
getOffSetFromAddressNode;getOffSetFromAddressNode(TR::Node *);;TR_FieldPrivatizer;0;0
getPrivatizedFieldAutoSymRef;getPrivatizedFieldAutoSymRef(TR::Node *);;TR_FieldPrivatizer;0;0
getSymbolDefUseStateInBlock;getSymbolDefUseStateInBlock(TR::Block *,TR::RegisterMappedSymbol *);;TR_LoopTransformer;0;0
getSymbolDefUseStateInSubTree;getSymbolDefUseStateInSubTree(TR::Node *,TR::RegisterMappedSymbol *);;TR_LoopTransformer;0;0
initializeSymbolsWrittenAndReadExactlyOnce;initializeSymbolsWrittenAndReadExactlyOnce(int32_t,enum TR_BitVectorGrowable);;TR_LoopTransformer;0;0
isFieldAliasAccessed;isFieldAliasAccessed(TR::SymbolReference *);;TR_FieldPrivatizer;0;0
isNodeInCorrectForm;isNodeInCorrectForm(TR::Node *);;TR_FieldPrivatizer;0;0
isStoreInRequiredForm;isStoreInRequiredForm(int32_t,class TR_Structure *);;TR_LoopTransformer;0;1
isStringPeephole;isStringPeephole(TR::Node *,TR::TreeTop *);;TR_FieldPrivatizer;0;0
isSymbolReferenceWrittenNumberOfTimesInStructure;isSymbolReferenceWrittenNumberOfTimesInStructure(class TR_Structure *,int32_t,int32_t *,int32_t);;TR_LoopTransformer;0;0
makeInvariantBlockFallThroughIfPossible;makeInvariantBlockFallThroughIfPossible(TR::Block *);;TR_LoopTransformer;0;0
operator=;operator=(class TR_LoopTransformer &&);;TR_LoopTransformer;1;0
operator=;operator=(const class TR_LoopTransformer &);;TR_LoopTransformer;1;0
operator=;operator=(const class TR_FieldPrivatizer &);;TR_FieldPrivatizer;1;0
operator=;operator=(class TR_FieldPrivatizer &&);;TR_FieldPrivatizer;1;0
optDetailString;optDetailString();;TR_FieldPrivatizer;0;1
perform;perform();;TR_LoopTransformer;0;1
perform;perform();;TR_FieldPrivatizer;0;1
placeInitializersInLoopInvariantBlock;placeInitializersInLoopInvariantBlock(TR::Block *);;TR_FieldPrivatizer;0;0
placeStoresBackInExit;placeStoresBackInExit(TR::Block *,_Bool);;TR_FieldPrivatizer;0;0
placeStoresBackInExits;placeStoresBackInExits(List<TR::Block> *,List<TR::Block> *);;TR_FieldPrivatizer;0;0
placeStringEpilogueInExits;placeStringEpilogueInExits(List<TR::Block> *,List<TR::Block> *);;TR_FieldPrivatizer;0;0
placeStringEpiloguesBackInExit;placeStringEpiloguesBackInExit(TR::Block *,_Bool);;TR_FieldPrivatizer;0;0
printTrees;printTrees();;TR_LoopTransformer;0;0
privatizeElementCandidates;privatizeElementCandidates();;TR_FieldPrivatizer;0;0
privatizeFields;privatizeFields(TR::Node *,_Bool,vcount_t);;TR_FieldPrivatizer;0;0
privatizeNonEscapingLoop;privatizeNonEscapingLoop(class TR_Structure *,TR::Block *,vcount_t);;TR_FieldPrivatizer;0;0
replaceAllInductionVariableComputations;replaceAllInductionVariableComputations(TR::Block *,class TR_Structure *,TR::SymbolReference **,TR::SymbolReference *);;TR_LoopTransformer;0;1
setVisitCount;setVisitCount(vcount_t);;TR_FieldPrivatizer;0;0
storesBackMustBePlacedInExitBlock;storesBackMustBePlacedInExitBlock(TR::Block *,TR::Block *,class TR_BitVector *);;TR_FieldPrivatizer;0;0
subtreeIsInvariantInLoop;subtreeIsInvariantInLoop(TR::Node *);;TR_FieldPrivatizer;0;0
updateInfo;updateInfo(TR::Node *,vcount_t,struct TR_LoopTransformer::updateInfo_tables &);;TR_LoopTransformer;0;0
updateLoadUsedInLoopIncrement;updateLoadUsedInLoopIncrement(TR::Node *,int32_t);;TR_LoopTransformer;0;1
updateStoreInfo;updateStoreInfo(int32_t,TR::TreeTop *);;TR_LoopTransformer;0;1
walkTreeForLoadOrStoreNode;walkTreeForLoadOrStoreNode(TR::Node *);;TR_FieldPrivatizer;0;0
~TR_FieldPrivatizer;~TR_FieldPrivatizer();;TR_FieldPrivatizer;1;1
~TR_LoopTransformer;~TR_LoopTransformer();;TR_LoopTransformer;1;1
TR_LoopCanonicalizer;TR_LoopCanonicalizer(class TR_LoopCanonicalizer &&);;TR_LoopCanonicalizer;1;0
TR_LoopCanonicalizer;TR_LoopCanonicalizer(const class TR_LoopCanonicalizer &);;TR_LoopCanonicalizer;1;0
TR_LoopCanonicalizer;TR_LoopCanonicalizer(TR::OptimizationManager *);;TR_LoopCanonicalizer;0;0
TR_RedundantInductionVarElimination;TR_RedundantInductionVarElimination(class TR_RedundantInductionVarElimination &&);;TR_RedundantInductionVarElimination;1;0
TR_RedundantInductionVarElimination;TR_RedundantInductionVarElimination(TR::OptimizationManager *);;TR_RedundantInductionVarElimination;0;0
TR_RedundantInductionVarElimination;TR_RedundantInductionVarElimination(const class TR_RedundantInductionVarElimination &);;TR_RedundantInductionVarElimination;1;0
asLoopCanonicalizer;asLoopCanonicalizer();;TR_LoopCanonicalizer;0;1
canonicalizeDoWhileLoop;canonicalizeDoWhileLoop(class TR_RegionStructure *);;TR_LoopCanonicalizer;0;0
canonicalizeNaturalLoop;canonicalizeNaturalLoop(class TR_RegionStructure *);;TR_LoopCanonicalizer;0;0
checkComplexInductionVariableUse;checkComplexInductionVariableUse(class TR_Structure *);;TR_LoopCanonicalizer;0;0
checkComplexInductionVariableUseNode;checkComplexInductionVariableUseNode(TR::Node *,_Bool);;TR_LoopCanonicalizer;0;0
checkIfOrderOfBlocksIsKnown;checkIfOrderOfBlocksIsKnown(class TR_RegionStructure *,TR::Block *,TR::Block *,TR_ScratchList<TR::Block> *,TR_ScratchList<TR::Block> *,uint8_t &);;TR_LoopCanonicalizer;0;0
create;create(TR::OptimizationManager *);;TR_LoopCanonicalizer;0;0
create;create(TR::OptimizationManager *);;TR_RedundantInductionVarElimination;0;0
eliminateRedundantInductionVariablesFromLoop;eliminateRedundantInductionVariablesFromLoop(class TR_RegionStructure *);;TR_LoopCanonicalizer;0;0
examineTreeForInductionVariableUse;examineTreeForInductionVariableUse(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t,TR::SymbolReference **);;TR_LoopCanonicalizer;0;1
findIncrements;findIncrements(TR::Node *,vcount_t,TR::SymbolReference *,TR::SymbolReference *,int64_t &,int64_t &,_Bool &);;TR_LoopCanonicalizer;0;0
incrementedInLockStep;incrementedInLockStep(class TR_Structure *,TR::SymbolReference *,TR::SymbolReference *,int64_t,int64_t,TR_ScratchList<TR::Block> *,TR_ScratchList<TR::Block> *);;TR_LoopCanonicalizer;0;0
isLegalToSplitEdges;isLegalToSplitEdges(class TR_RegionStructure *,TR::Block *);;TR_LoopCanonicalizer;0;0
modifyBranchesForSplitEdges;modifyBranchesForSplitEdges(class TR_RegionStructure *,TR::Block *,TR::Block *,TR::Block *,_Bool,int32_t *,_Bool);;TR_LoopCanonicalizer;0;0
operator=;operator=(const class TR_LoopCanonicalizer &);;TR_LoopCanonicalizer;1;0
operator=;operator=(class TR_LoopCanonicalizer &&);;TR_LoopCanonicalizer;1;0
operator=;operator=(class TR_RedundantInductionVarElimination &&);;TR_RedundantInductionVarElimination;1;0
operator=;operator=(const class TR_RedundantInductionVarElimination &);;TR_RedundantInductionVarElimination;1;0
optDetailString;optDetailString();;TR_LoopCanonicalizer;0;1
optDetailString;optDetailString();;TR_RedundantInductionVarElimination;0;1
perform;perform();;TR_LoopCanonicalizer;0;1
perform;perform();;TR_RedundantInductionVarElimination;0;1
placeInitializationTreeInLoopPreHeader;placeInitializationTreeInLoopPreHeader(TR::Block *,TR::Node *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);;TR_LoopCanonicalizer;0;0
replaceInductionVariableComputationsInExits;replaceInductionVariableComputationsInExits(class TR_Structure *,TR::Node *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);;TR_LoopCanonicalizer;0;0
rewritePostToPreIncrementTestInBlock;rewritePostToPreIncrementTestInBlock(TR::Block *);;TR_LoopCanonicalizer;0;0
rewritePostToPreIncrementTestInRegion;rewritePostToPreIncrementTestInRegion(class TR_RegionStructure *);;TR_LoopCanonicalizer;0;0
~TR_LoopCanonicalizer;~TR_LoopCanonicalizer();;TR_LoopCanonicalizer;1;1
~TR_RedundantInductionVarElimination;~TR_RedundantInductionVarElimination();;TR_RedundantInductionVarElimination;1;1
TR_LoopInverter;TR_LoopInverter(class TR_LoopInverter &&);;TR_LoopInverter;1;0
TR_LoopInverter;TR_LoopInverter(TR::OptimizationManager *);;TR_LoopInverter;0;0
TR_LoopInverter;TR_LoopInverter(const class TR_LoopInverter &);;TR_LoopInverter;1;0
checkIfSymbolIsReadInKnownTree;checkIfSymbolIsReadInKnownTree(TR::Node *,int32_t,TR::TreeTop *,TR::NodeChecklist &);;TR_LoopInverter;0;0
create;create(TR::OptimizationManager *);;TR_LoopInverter;0;0
detectCanonicalizedPredictableLoops;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);;TR_LoopInverter;0;1
isInvertibleLoop;isInvertibleLoop(int32_t,class TR_Structure *);;TR_LoopInverter;0;0
operator=;operator=(class TR_LoopInverter &&);;TR_LoopInverter;1;0
operator=;operator=(const class TR_LoopInverter &);;TR_LoopInverter;1;0
optDetailString;optDetailString();;TR_LoopInverter;0;1
perform;perform();;TR_LoopInverter;0;1
~TR_LoopInverter;~TR_LoopInverter();;TR_LoopInverter;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/GeneralLoopUnroller.cpp
TR_InductionVariableAnalysis;TR_InductionVariableAnalysis(const class TR_InductionVariableAnalysis &);;TR_InductionVariableAnalysis;1;0
TR_InductionVariableAnalysis;TR_InductionVariableAnalysis(class TR_InductionVariableAnalysis &&);;TR_InductionVariableAnalysis;1;0
TR_InductionVariableAnalysis;TR_InductionVariableAnalysis(TR::OptimizationManager *);;TR_InductionVariableAnalysis;0;0
analyzeAcyclicRegion;analyzeAcyclicRegion(class TR_RegionStructure *,class TR_RegionStructure *);;TR_InductionVariableAnalysis;0;0
analyzeBlock;analyzeBlock(class TR_BlockStructure *,class TR_RegionStructure *);;TR_InductionVariableAnalysis;0;0
analyzeCyclicRegion;analyzeCyclicRegion(class TR_RegionStructure *,class TR_RegionStructure *);;TR_InductionVariableAnalysis;0;0
analyzeExitEdges;analyzeExitEdges(class TR_RegionStructure *,class TR_BitVector *,TR_Array<class TR_BasicInductionVariable *> &);;TR_InductionVariableAnalysis;0;0
analyzeLoopExpressions;analyzeLoopExpressions(class TR_RegionStructure *,class TR_InductionVariableAnalysis::DeltaInfo **);;TR_InductionVariableAnalysis;0;0
analyzeNaturalLoop;analyzeNaturalLoop(class TR_RegionStructure *);;TR_InductionVariableAnalysis;0;0
appendPredecessors;appendPredecessors(WorkQueue &,TR::Block *);;TR_InductionVariableAnalysis;0;0
branchContainsInductionVariable;branchContainsInductionVariable(TR::Node *,TR::SymbolReference *,int32_t *);;TR_InductionVariableAnalysis;0;0
branchContainsInductionVariable;branchContainsInductionVariable(class TR_RegionStructure *,TR::Node *,TR_Array<class TR_BasicInductionVariable *> &);;TR_InductionVariableAnalysis;0;0
create;create(TR::OptimizationManager *);;TR_InductionVariableAnalysis;0;0
findEntryValueForSymRef;findEntryValueForSymRef(class TR_RegionStructure *,TR::SymbolReference *);;TR_InductionVariableAnalysis;0;0
findEntryValues;findEntryValues(class TR_RegionStructure *,TR_Array<class TR_BasicInductionVariable *> &);;TR_InductionVariableAnalysis;0;0
gatherCandidates;gatherCandidates(class TR_Structure *,class TR_BitVector *,class TR_BitVector *);;TR_InductionVariableAnalysis;0;0
getBlockInfo;getBlockInfo(TR::Block *);;TR_InductionVariableAnalysis;0;0
getEntryValue;getEntryValue(TR::Block *,TR::SymbolReference *,class TR_BitVector *,TR_Array<TR::Node *> &);;TR_InductionVariableAnalysis;0;0
getInductionVariables;getInductionVariables();;TR_InductionVariableAnalysis;0;0
getProgression;getProgression(TR::Node *,TR::SymbolReference *,TR::SymbolReference **,enum TR_ProgressionKind *,int64_t *);;TR_InductionVariableAnalysis;0;0
initializeBlockInfoArray;initializeBlockInfoArray(class TR_RegionStructure *);;TR_InductionVariableAnalysis;0;0
isGotoBlock;isGotoBlock(TR::Block *);;TR_InductionVariableAnalysis;0;0
isIVUnchangedInLoop;isIVUnchangedInLoop(class TR_RegionStructure *,TR::Block *,TR::Node *);;TR_InductionVariableAnalysis;0;0
isProgressionalStore;isProgressionalStore(TR::Node *,enum TR_ProgressionKind *,int64_t *);;TR_InductionVariableAnalysis;0;0
mergeWithBlock;mergeWithBlock(TR::Block *,class TR_InductionVariableAnalysis::DeltaInfo **,class TR_RegionStructure *);;TR_InductionVariableAnalysis;0;0
mergeWithSet;mergeWithSet(class TR_InductionVariableAnalysis::DeltaInfo **,class TR_InductionVariableAnalysis::DeltaInfo **,class TR_RegionStructure *);;TR_InductionVariableAnalysis;0;0
newBlockInfo;newBlockInfo(class TR_RegionStructure *);;TR_InductionVariableAnalysis;0;0
operator=;operator=(class TR_InductionVariableAnalysis &&);;TR_InductionVariableAnalysis;1;0
operator=;operator=(const class TR_InductionVariableAnalysis &);;TR_InductionVariableAnalysis;1;0
optDetailString;optDetailString();;TR_InductionVariableAnalysis;0;1
perform;perform();;TR_InductionVariableAnalysis;0;1
perform;perform(class TR_RegionStructure *);;TR_InductionVariableAnalysis;0;0
printDeltaInfo;printDeltaInfo(class TR_InductionVariableAnalysis::DeltaInfo *);;TR_InductionVariableAnalysis;0;0
setBlockInfo;setBlockInfo(TR::Block *,class TR_InductionVariableAnalysis::DeltaInfo **);;TR_InductionVariableAnalysis;0;0
~TR_InductionVariableAnalysis;~TR_InductionVariableAnalysis();;TR_InductionVariableAnalysis;1;1
TR_BasicInductionVariable;TR_BasicInductionVariable(const class TR_BasicInductionVariable &);;TR_BasicInductionVariable;1;0
TR_BasicInductionVariable;TR_BasicInductionVariable(TR::Compilation *,class TR_BasicInductionVariable *);;TR_BasicInductionVariable;0;0
TR_BasicInductionVariable;TR_BasicInductionVariable(TR::Compilation *,class TR_RegionStructure *,TR::SymbolReference *);;TR_BasicInductionVariable;0;0
TR_BasicInductionVariable;TR_BasicInductionVariable(class TR_BasicInductionVariable &&);;TR_BasicInductionVariable;1;0
TR_DerivedInductionVariable;TR_DerivedInductionVariable(TR::Compilation *,class TR_BasicInductionVariable *,class TR_PrimaryInductionVariable *);;TR_DerivedInductionVariable;0;0
comp;comp();;TR_BasicInductionVariable;0;0
getDeltaOnBackEdge;getDeltaOnBackEdge();;TR_BasicInductionVariable;0;0
getDeltaOnExitEdge;getDeltaOnExitEdge();;TR_BasicInductionVariable;0;0
getEntryValue;getEntryValue();;TR_BasicInductionVariable;0;0
getExitValue;getExitValue();;TR_BasicInductionVariable;0;1
getExitValue;getExitValue();;TR_DerivedInductionVariable;0;1
getIncrement;getIncrement();;TR_BasicInductionVariable;0;0
getIterationCount;getIterationCount();;TR_BasicInductionVariable;0;1
getIterationCount;getIterationCount();;TR_DerivedInductionVariable;0;1
getSymRef;getSymRef();;TR_BasicInductionVariable;0;0
isLongInt;isLongInt();;TR_BasicInductionVariable;0;0
isOnlyIncrementValid;isOnlyIncrementValid();;TR_BasicInductionVariable;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_BasicInductionVariable;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_DerivedInductionVariable;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_BasicInductionVariable;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_DerivedInductionVariable;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_BasicInductionVariable;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
operator delete;operator delete(void *,size_t);;TR_BasicInductionVariable;0;0
operator delete;operator delete(void *,size_t);;TR_DerivedInductionVariable;0;0
operator delete;operator delete(void *,TR::Region &);;TR_BasicInductionVariable;0;0
operator delete;operator delete(void *,TR::Region &);;TR_DerivedInductionVariable;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_BasicInductionVariable;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_BasicInductionVariable;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_DerivedInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_BasicInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_DerivedInductionVariable;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_BasicInductionVariable;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_DerivedInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_BasicInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_BasicInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
operator new;operator new(size_t,TR::Region &);;TR_BasicInductionVariable;0;0
operator new;operator new(size_t,TR::Region &);;TR_DerivedInductionVariable;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_BasicInductionVariable;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_DerivedInductionVariable;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_BasicInductionVariable;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_BasicInductionVariable;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_BasicInductionVariable;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_DerivedInductionVariable;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_BasicInductionVariable;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_DerivedInductionVariable;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_BasicInductionVariable;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_DerivedInductionVariable;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_BasicInductionVariable;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_DerivedInductionVariable;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_BasicInductionVariable;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_DerivedInductionVariable;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_BasicInductionVariable;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_DerivedInductionVariable;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_BasicInductionVariable;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_BasicInductionVariable;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_DerivedInductionVariable;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_BasicInductionVariable;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
operator=;operator=(const class TR_BasicInductionVariable &);;TR_BasicInductionVariable;1;0
operator=;operator=(class TR_BasicInductionVariable &&);;TR_BasicInductionVariable;1;0
operator=;operator=(class TR_DerivedInductionVariable &&);;TR_DerivedInductionVariable;1;0
operator=;operator=(const class TR_DerivedInductionVariable &);;TR_DerivedInductionVariable;1;0
setDeltaOnBackEdge;setDeltaOnBackEdge(int32_t);;TR_BasicInductionVariable;0;0
setDeltaOnExitEdge;setDeltaOnExitEdge(int32_t);;TR_BasicInductionVariable;0;0
setEntryValue;setEntryValue(TR::Node *);;TR_BasicInductionVariable;0;0
setIncrement;setIncrement(int32_t);;TR_BasicInductionVariable;0;0
setOnlyIncrementValid;setOnlyIncrementValid(_Bool);;TR_BasicInductionVariable;0;0
~TR_BasicInductionVariable;~TR_BasicInductionVariable();;TR_BasicInductionVariable;1;0
~TR_DerivedInductionVariable;~TR_DerivedInductionVariable();;TR_DerivedInductionVariable;1;0
TR_GeneralLoopUnroller;TR_GeneralLoopUnroller(class TR_GeneralLoopUnroller &&);;TR_GeneralLoopUnroller;1;0
TR_GeneralLoopUnroller;TR_GeneralLoopUnroller(TR::OptimizationManager *);;TR_GeneralLoopUnroller;0;0
TR_GeneralLoopUnroller;TR_GeneralLoopUnroller(const class TR_GeneralLoopUnroller &);;TR_GeneralLoopUnroller;1;0
branchContainsInductionVariable;branchContainsInductionVariable(class TR_RegionStructure *,TR::Node *,_Bool);;TR_GeneralLoopUnroller;0;0
branchContainsInductionVariable;branchContainsInductionVariable(TR::Node *,TR::SymbolReference *);;TR_GeneralLoopUnroller;0;0
canUnrollUnCountedLoop;canUnrollUnCountedLoop(class TR_RegionStructure *,int32_t,int32_t,int32_t);;TR_GeneralLoopUnroller;0;0
collectNonColdInnerLoops;collectNonColdInnerLoops(class TR_RegionStructure *,List<class TR_RegionStructure> &);;TR_GeneralLoopUnroller;0;0
countNodesAndSubscripts;countNodesAndSubscripts(TR::Node *,int32_t &,int32_t &,class LoopWeightProbe &);;TR_GeneralLoopUnroller;0;0
create;create(TR::OptimizationManager *);;TR_GeneralLoopUnroller;0;0
gatherStatistics;gatherStatistics(class TR_Structure *,int32_t &,int32_t &,int32_t &,int32_t &,class LoopWeightProbe &);;TR_GeneralLoopUnroller;0;0
operator=;operator=(class TR_GeneralLoopUnroller &&);;TR_GeneralLoopUnroller;1;0
operator=;operator=(const class TR_GeneralLoopUnroller &);;TR_GeneralLoopUnroller;1;0
optDetailString;optDetailString();;TR_GeneralLoopUnroller;0;1
perform;perform();;TR_GeneralLoopUnroller;0;1
profileNonCountedLoops;profileNonCountedLoops(List<class TR_RegionStructure> &);;TR_GeneralLoopUnroller;0;0
weighNaturalLoop;weighNaturalLoop(class TR_RegionStructure *,class TR_LoopUnroller::UnrollKind &,int32_t &,int32_t &,int32_t &);;TR_GeneralLoopUnroller;0;0
~TR_GeneralLoopUnroller;~TR_GeneralLoopUnroller();;TR_GeneralLoopUnroller;1;1
TR_IVTypeTransformer;TR_IVTypeTransformer(class TR_IVTypeTransformer &&);;TR_IVTypeTransformer;1;0
TR_IVTypeTransformer;TR_IVTypeTransformer(const class TR_IVTypeTransformer &);;TR_IVTypeTransformer;1;0
TR_IVTypeTransformer;TR_IVTypeTransformer(TR::OptimizationManager *);;TR_IVTypeTransformer;0;0
changeIVTypeFromAddrToInt;changeIVTypeFromAddrToInt(class TR_RegionStructure *);;TR_IVTypeTransformer;0;0
create;create(TR::OptimizationManager *);;TR_IVTypeTransformer;0;0
findComparandSymRef;findComparandSymRef(TR::Node *);;TR_IVTypeTransformer;0;0
getIntegralIfOpCode;getIntegralIfOpCode(TR::ILOpCodes,_Bool);;TR_IVTypeTransformer;0;0
isInAddrIncrementForm;isInAddrIncrementForm(TR::Node *,int32_t &);;TR_IVTypeTransformer;0;0
operator=;operator=(class TR_IVTypeTransformer &&);;TR_IVTypeTransformer;1;0
operator=;operator=(const class TR_IVTypeTransformer &);;TR_IVTypeTransformer;1;0
optDetailString;optDetailString();;TR_IVTypeTransformer;0;1
perform;perform();;TR_IVTypeTransformer;0;1
replaceAloadWithBaseIndexInSubtree;replaceAloadWithBaseIndexInSubtree(TR::Node *);;TR_IVTypeTransformer;0;0
~TR_IVTypeTransformer;~TR_IVTypeTransformer();;TR_IVTypeTransformer;1;1
TR_LoopStrider;TR_LoopStrider(const class TR_LoopStrider &);;TR_LoopStrider;1;0
TR_LoopStrider;TR_LoopStrider(class TR_LoopStrider &&);;TR_LoopStrider;1;0
TR_LoopStrider;TR_LoopStrider(TR::OptimizationManager *);;TR_LoopStrider;0;0
addLoad;addLoad(class TR_StoreTreeInfo *,TR::Node *,int32_t);;TR_LoopStrider;0;0
changeBranchFromIntToLong;changeBranchFromIntToLong(TR::Node *);;TR_LoopStrider;0;0
changeLoopCondition;changeLoopCondition(class TR_BlockStructure *,_Bool,int32_t,TR::Node *);;TR_LoopStrider;0;0
checkExpressionForInductionVariable;checkExpressionForInductionVariable(TR::Node *);;TR_LoopStrider;0;0
checkIfIncrementInDifferentExtendedBlock;checkIfIncrementInDifferentExtendedBlock(TR::Block *,int32_t);;TR_LoopStrider;0;1
checkInvariance;checkInvariance(TR::Node *,int32_t,TR::Node *,int32_t);;TR_LoopStrider;0;0
checkStoreOfIndVar;checkStoreOfIndVar(TR::Node *);;TR_LoopStrider;0;0
convertIV;convertIV(TR::Node *,TR::TreeTop *,int32_t,int32_t,TR::ILOpCodes);;TR_LoopStrider;0;0
create;create(TR::OptimizationManager *);;TR_LoopStrider;0;0
createConstraintsForNewInductionVariable;createConstraintsForNewInductionVariable(class TR_Structure *,TR::SymbolReference *,TR::SymbolReference *);;TR_LoopStrider;0;0
createParmAutoPair;createParmAutoPair(TR::SymbolReference *,TR::SymbolReference *);;TR_LoopStrider;0;0
detectCanonicalizedPredictableLoops;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);;TR_LoopStrider;0;1
detectLoopsForIndVarConversion;detectLoopsForIndVarConversion(class TR_Structure *,TR::NodeChecklist &);;TR_LoopStrider;0;0
duplicateAdditiveTermNode;duplicateAdditiveTermNode(int32_t,TR::Node *,TR::DataType);;TR_LoopStrider;0;0
duplicateMulTermNode;duplicateMulTermNode(int32_t,TR::Node *,TR::DataType);;TR_LoopStrider;0;0
eliminateSignExtensions;eliminateSignExtensions(TR::NodeChecklist &);;TR_LoopStrider;0;0
eliminateSignExtensionsInSubtree;eliminateSignExtensionsInSubtree(TR::Node *,TR::NodeChecklist &,TR::NodeChecklist &,SignExtMemo &);;TR_LoopStrider;0;0
examineOpCodesForInductionVariableUse;examineOpCodesForInductionVariableUse(TR::Node *,TR::Node *,int32_t &,int32_t &,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference **,TR::Block *,TR::AutomaticSymbol *,int64_t,_Bool &,_Bool &,_Bool &);;TR_LoopStrider;0;0
examineTreeForInductionVariableUse;examineTreeForInductionVariableUse(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t,TR::SymbolReference **);;TR_LoopStrider;0;1
findDataType;findDataType(TR::Node *,_Bool,_Bool);;TR_LoopStrider;0;0
findNewInductionVariable;findNewInductionVariable(TR::Node *,TR::SymbolReference **,_Bool,int32_t);;TR_LoopStrider;0;0
findOrCreateStoreInfo;findOrCreateStoreInfo(TR::TreeTop *,int32_t);;TR_LoopStrider;0;0
findReplacingNode;findReplacingNode(TR::Node *,_Bool,int32_t);;TR_LoopStrider;0;0
foundLoad;foundLoad(TR::TreeTop *,TR::Node *,int32_t,vcount_t);;TR_LoopStrider;0;0
foundLoad;foundLoad(TR::TreeTop *,int32_t,TR::Compilation *);;TR_LoopStrider;0;0
foundValue;foundValue(TR::Node *,int32_t,vcount_t);;TR_LoopStrider;0;0
genLoad;genLoad(TR::Node *,TR::SymbolReference *,_Bool);;TR_LoopStrider;0;0
genVPIntRange;genVPIntRange(TR::VPConstraint *,int64_t,int64_t);;TR_LoopStrider;0;0
genVPLongRange;genVPLongRange(TR::VPConstraint *,int64_t,int64_t);;TR_LoopStrider;0;0
getAdditiveTermConst;getAdditiveTermConst(int32_t);;TR_LoopStrider;0;0
getAdditiveTermNode;getAdditiveTermNode(int32_t);;TR_LoopStrider;0;0
getInductionVariableNode;getInductionVariableNode(TR::Node *);;TR_LoopStrider;0;0
getMulTermConst;getMulTermConst(int32_t);;TR_LoopStrider;0;0
getMulTermNode;getMulTermNode(int32_t);;TR_LoopStrider;0;0
getNewLoopIncrement;getNewLoopIncrement(TR::Node *,int32_t,int32_t);;TR_LoopStrider;0;0
getNewLoopIncrement;getNewLoopIncrement(class TR_StoreTreeInfo *,int32_t);;TR_LoopStrider;0;0
identifyExpressionLinearInInductionVariable;identifyExpressionLinearInInductionVariable(TR::Node *,vcount_t);;TR_LoopStrider;0;0
identifyExpressionsLinearInInductionVariables;identifyExpressionsLinearInInductionVariables(class TR_Structure *,vcount_t);;TR_LoopStrider;0;0
isAdditiveTermConst;isAdditiveTermConst(int32_t);;TR_LoopStrider;0;0
isAdditiveTermEquivalentTo;isAdditiveTermEquivalentTo(int32_t,TR::Node *);;TR_LoopStrider;0;0
isExprLoopInvariant;isExprLoopInvariant(TR::Node *);;TR_LoopStrider;0;0
isExpressionLinearInInductionVariable;isExpressionLinearInInductionVariable(TR::Node *,int32_t);;TR_LoopStrider;0;0
isExpressionLinearInSomeInductionVariable;isExpressionLinearInSomeInductionVariable(TR::Node *);;TR_LoopStrider;0;0
isMulTermConst;isMulTermConst(int32_t);;TR_LoopStrider;0;0
isMulTermEquivalentTo;isMulTermEquivalentTo(int32_t,TR::Node *);;TR_LoopStrider;0;0
isStoreInRequiredForm;isStoreInRequiredForm(int32_t,class TR_Structure *);;TR_LoopStrider;0;1
isStoreInRequiredForm;isStoreInRequiredForm(TR::Node *,int32_t,class TR_Structure *);;TR_LoopStrider;0;0
maxInternalPointers;maxInternalPointers();;TR_LoopStrider;0;0
maxInternalPointersAtPointTooLateToBackOff;maxInternalPointersAtPointTooLateToBackOff();;TR_LoopStrider;0;0
morphExpressionLinearInInductionVariable;morphExpressionLinearInInductionVariable(TR::Node *,int32_t,TR::Node *,vcount_t);;TR_LoopStrider;0;0
morphExpressionsLinearInInductionVariable;morphExpressionsLinearInInductionVariable(class TR_Structure *,vcount_t);;TR_LoopStrider;0;0
operator=;operator=(const class TR_LoopStrider &);;TR_LoopStrider;1;0
operator=;operator=(class TR_LoopStrider &&);;TR_LoopStrider;1;0
optDetailString;optDetailString();;TR_LoopStrider;0;1
perform;perform();;TR_LoopStrider;0;1
placeInitializationTreeInLoopInvariantBlock;placeInitializationTreeInLoopInvariantBlock(class TR_BlockStructure *,TR::SymbolReference *,TR::SymbolReference *,int32_t,TR::SymbolReferenceTable *);;TR_LoopStrider;0;0
placeNewInductionVariableIncrementTree;placeNewInductionVariableIncrementTree(class TR_BlockStructure *,TR::SymbolReference *,TR::SymbolReference *,int32_t,TR::SymbolReferenceTable *,TR::Node *,TR::Node *,TR::TreeTop *,TR::Node *,_Bool);;TR_LoopStrider;0;0
placeNewInductionVariableIncrementTree;placeNewInductionVariableIncrementTree(class TR_BlockStructure *,TR::SymbolReference *,TR::SymbolReference *,int32_t,TR::SymbolReferenceTable *,TR::Node *,int32_t);;TR_LoopStrider;0;0
placeStore;placeStore(TR::Node *,TR::Block *);;TR_LoopStrider;0;0
populateLinearEquation;populateLinearEquation(TR::Node *,int32_t,int32_t,int32_t,TR::Node *);;TR_LoopStrider;0;0
reassociateAndHoistComputations;reassociateAndHoistComputations(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t);;TR_LoopStrider;0;0
reassociateAndHoistComputations;reassociateAndHoistComputations(TR::Block *,class TR_Structure *);;TR_LoopStrider;0;0
reassociateAndHoistNonPacked;reassociateAndHoistNonPacked();;TR_LoopStrider;0;0
replaceLoadsInStructure;replaceLoadsInStructure(class TR_Structure *,int32_t,TR::Node *,TR::SymbolReference *,TR::NodeChecklist &,TR::NodeChecklist &);;TR_LoopStrider;0;0
replaceLoadsInSubtree;replaceLoadsInSubtree(TR::Node *,int32_t,TR::Node *,TR::SymbolReference *,TR::NodeChecklist &,TR::NodeChecklist &);;TR_LoopStrider;0;0
setAdditiveTermNode;setAdditiveTermNode(TR::Node *,int32_t);;TR_LoopStrider;0;0
setInternalPointer;setInternalPointer(TR::Symbol *,TR::AutomaticSymbol *);;TR_LoopStrider;0;0
setMulTermNode;setMulTermNode(TR::Node *,int32_t);;TR_LoopStrider;0;0
setUsesLoadUsedInLoopIncrement;setUsesLoadUsedInLoopIncrement(TR::Node *,int32_t);;TR_LoopStrider;0;0
signExtend;signExtend(TR::Node *,TR::NodeChecklist &,SignExtMemo &);;TR_LoopStrider;0;0
signExtendBinOp;signExtendBinOp(TR::ILOpCodes,TR::Node *,TR::NodeChecklist &,SignExtMemo &);;TR_LoopStrider;0;0
transmuteDescendantsIntoTruncations;transmuteDescendantsIntoTruncations(TR::Node *,TR::Node *);;TR_LoopStrider;0;0
unchangedValueNeededIn;unchangedValueNeededIn(TR::Block *,int32_t,_Bool &);;TR_LoopStrider;0;0
updateLoadUsedInLoopIncrement;updateLoadUsedInLoopIncrement(TR::Node *,int32_t);;TR_LoopStrider;0;1
updateStoreInfo;updateStoreInfo(int32_t,TR::TreeTop *);;TR_LoopStrider;0;1
walkTreesAndFixUseDefs;walkTreesAndFixUseDefs(class TR_Structure *,TR::SymbolReference *,TR::NodeChecklist &);;TR_LoopStrider;0;0
widenComparison;widenComparison(TR::Node *,int32_t,TR::Node *,TR::NodeChecklist &);;TR_LoopStrider;0;0
~TR_LoopStrider;~TR_LoopStrider();;TR_LoopStrider;1;1
TR_PrimaryInductionVariable;TR_PrimaryInductionVariable(class TR_BasicInductionVariable *,TR::Block *,TR::Node *,TR::ILOpCodes,TR::Compilation *,TR::Optimizer *,_Bool,_Bool);;TR_PrimaryInductionVariable;0;0
getBranchBlock;getBranchBlock();;TR_PrimaryInductionVariable;0;0
getExitBound;getExitBound();;TR_PrimaryInductionVariable;0;0
getExitValue;getExitValue();;TR_PrimaryInductionVariable;0;1
getIterationCount;getIterationCount();;TR_PrimaryInductionVariable;0;1
getNumLoopExits;getNumLoopExits();;TR_PrimaryInductionVariable;0;0
isUnsigned;isUnsigned();;TR_PrimaryInductionVariable;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_PrimaryInductionVariable;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_PrimaryInductionVariable;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
operator delete;operator delete(void *,size_t);;TR_PrimaryInductionVariable;0;0
operator delete;operator delete(void *,TR::Region &);;TR_PrimaryInductionVariable;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_PrimaryInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_PrimaryInductionVariable;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_PrimaryInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
operator new;operator new(size_t,TR::Region &);;TR_PrimaryInductionVariable;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_PrimaryInductionVariable;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_PrimaryInductionVariable;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_PrimaryInductionVariable;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_PrimaryInductionVariable;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_PrimaryInductionVariable;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_PrimaryInductionVariable;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_PrimaryInductionVariable;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_PrimaryInductionVariable;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
operator=;operator=(const class TR_PrimaryInductionVariable &);;TR_PrimaryInductionVariable;1;0
operator=;operator=(class TR_PrimaryInductionVariable &&);;TR_PrimaryInductionVariable;1;0
setNumLoopExits;setNumLoopExits(int32_t);;TR_PrimaryInductionVariable;0;0
setUsesUnchangedValueInLoopTest;setUsesUnchangedValueInLoopTest(_Bool);;TR_PrimaryInductionVariable;0;0
usesUnchangedValueInLoopTest;usesUnchangedValueInLoopTest();;TR_PrimaryInductionVariable;0;0
~TR_PrimaryInductionVariable;~TR_PrimaryInductionVariable();;TR_PrimaryInductionVariable;1;0
TR_RegionStructure;TR_RegionStructure(const class TR_RegionStructure &);;TR_RegionStructure;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/GlobalAnticipatability.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/GlobalRegisterAllocator.cpp
TR_GlobalRegisterAllocator;TR_GlobalRegisterAllocator(const class TR_GlobalRegisterAllocator &);;TR_GlobalRegisterAllocator;1;0
TR_GlobalRegisterAllocator;TR_GlobalRegisterAllocator(class TR_GlobalRegisterAllocator &&);;TR_GlobalRegisterAllocator;1;0
TR_GlobalRegisterAllocator;TR_GlobalRegisterAllocator(TR::OptimizationManager *);;TR_GlobalRegisterAllocator;0;0
addCandidateReloadsToEntry;addCandidateReloadsToEntry(TR::TreeTop *,TR_Array<class TR_GlobalRegister> &,TR::Block *);;TR_GlobalRegisterAllocator;0;0
addGlRegDepToExit;addGlRegDepToExit(TR_Array<TR::Node *> &,TR::Node *,TR_Array<class TR_GlobalRegister> &,TR::Block *);;TR_GlobalRegisterAllocator;0;0
addRegLoadsToEntry;addRegLoadsToEntry(TR::TreeTop *,TR_Array<class TR_GlobalRegister> &,TR::Block *);;TR_GlobalRegisterAllocator;0;0
addStoresForCatchBlockLoads;addStoresForCatchBlockLoads(TR::TreeTop *,TR_Array<class TR_GlobalRegister> &,TR::Block *);;TR_GlobalRegisterAllocator;0;0
allocateForSymRef;allocateForSymRef(TR::SymbolReference *);;TR_GlobalRegisterAllocator;0;0
allocateForType;allocateForType(TR::DataType);;TR_GlobalRegisterAllocator;0;0
appendGotoBlock;appendGotoBlock(TR::Block *,TR::Block *);;TR_GlobalRegisterAllocator;0;0
assignRegisters;assignRegisters();;TR_GlobalRegisterAllocator;0;0
assignRegisters;assignRegisters(TR::Block *);;TR_GlobalRegisterAllocator;0;0
blockInfo;blockInfo(int32_t);;TR_GlobalRegisterAllocator;0;0
candidateCouldNeedSignExtension;candidateCouldNeedSignExtension(int32_t);;TR_GlobalRegisterAllocator;0;0
create;create(TR::OptimizationManager *);;TR_GlobalRegisterAllocator;0;0
createBlock;createBlock(TR::Block *,TR::Block *);;TR_GlobalRegisterAllocator;0;0
createLoadFromRegister;createLoadFromRegister();;TR_GlobalRegisterAllocator;0;0
createNewSuccessorBlock;createNewSuccessorBlock(TR::Block *,TR::Block *,TR::TreeTop *,TR::Node *,class TR_RegisterCandidate *);;TR_GlobalRegisterAllocator;0;0
createStoreFromRegister;createStoreFromRegister();;TR_GlobalRegisterAllocator;0;0
createStoreToRegister;createStoreToRegister();;TR_GlobalRegisterAllocator;0;0
createStoresForSignExt;createStoresForSignExt(TR::Node *,TR::Node *,TR::Node *,TR::TreeTop *,TR::Node **,TR::Block *,List<TR::Block> *,vcount_t,_Bool);;TR_GlobalRegisterAllocator;0;0
extendBlock;extendBlock(TR::Block *,TR::Block *);;TR_GlobalRegisterAllocator;0;0
findIfThenRegisterCandidates;findIfThenRegisterCandidates();;TR_GlobalRegisterAllocator;0;0
findLoopAutoRegisterCandidates;findLoopAutoRegisterCandidates();;TR_GlobalRegisterAllocator;0;0
findLoopsAndAutosNoStructureInfo;findLoopsAndAutosNoStructureInfo(vcount_t,class TR_RegisterCandidate **);;TR_GlobalRegisterAllocator;0;0
findLoopsAndCorrespondingAutos;findLoopsAndCorrespondingAutos(class TR_StructureSubGraphNode *,vcount_t,SymRefCandidateMap &);;TR_GlobalRegisterAllocator;0;0
findLoopsAndCreateAutosForSignExt;findLoopsAndCreateAutosForSignExt(class TR_StructureSubGraphNode *,vcount_t);;TR_GlobalRegisterAllocator;0;0
findOrCreatePairedSymbols;findOrCreatePairedSymbols(TR::SymbolReference *,TR::SymbolReference *);;TR_GlobalRegisterAllocator;0;0
findPairedSymbols;findPairedSymbols(TR::SymbolReference *,TR::SymbolReference *);;TR_GlobalRegisterAllocator;0;0
findPrevTreeTop;findPrevTreeTop(TR::TreeTop *&,TR::Node *&,TR::Block *,TR::Block *);;TR_GlobalRegisterAllocator;0;0
findRegInStoreInfo;findRegInStoreInfo(class TR_GlobalRegister *);;TR_GlobalRegisterAllocator;0;0
findSymsUsedInIndirectAccesses;findSymsUsedInIndirectAccesses(TR::Node *,class TR_BitVector *,class TR_BitVector *,_Bool);;TR_GlobalRegisterAllocator;0;0
getAppendBlock;getAppendBlock(TR::Block *);;TR_GlobalRegisterAllocator;0;0
getGlobalRegister;getGlobalRegister(TR::Symbol *,TR_Array<class TR_GlobalRegister> &,TR::Block *);;TR_GlobalRegisterAllocator;0;0
getGlobalRegisterWithoutChangingCurrentCandidate;getGlobalRegisterWithoutChangingCurrentCandidate(TR::Symbol *,TR_Array<class TR_GlobalRegister> &,TR::Block *);;TR_GlobalRegisterAllocator;0;0
getPairedSymbols;getPairedSymbols();;TR_GlobalRegisterAllocator;0;0
initializeControlFlowInfo;initializeControlFlowInfo();;TR_GlobalRegisterAllocator;0;0
isDependentStore;isDependentStore(TR::Node *,const class TR_UseDefInfo::BitVector &,TR::SymbolReference *,_Bool *);;TR_GlobalRegisterAllocator;0;0
isNodeAvailable;isNodeAvailable(TR::Node *);;TR_GlobalRegisterAllocator;0;0
isSplittingCopy;isSplittingCopy(TR::Node *);;TR_GlobalRegisterAllocator;0;0
isSymRefAvailable;isSymRefAvailable(TR::SymbolReference *,List<TR::Block> *);;TR_GlobalRegisterAllocator;0;0
isSymRefAvailable;isSymRefAvailable(TR::SymbolReference *);;TR_GlobalRegisterAllocator;0;0
isTypeAvailable;isTypeAvailable(TR::SymbolReference *);;TR_GlobalRegisterAllocator;0;0
markAutosUsedIn;markAutosUsedIn(TR::Node *,TR::Node *,TR::Node *,TR::Node **,TR::Block *,List<TR::Block> *,vcount_t,int32_t,SymRefCandidateMap &,class TR_BitVector *,class TR_BitVector *,_Bool);;TR_GlobalRegisterAllocator;0;0
markCandidateForReloadInSuccessors;markCandidateForReloadInSuccessors(int32_t,class TR_GlobalRegister *,class TR_GlobalRegister *,TR::Block *,_Bool);;TR_GlobalRegisterAllocator;0;0
numberOfRegistersLiveOnEntry;numberOfRegistersLiveOnEntry(TR_Array<class TR_GlobalRegister> &,_Bool);;TR_GlobalRegisterAllocator;0;0
offerAllAutosAndRegisterParmAsCandidates;offerAllAutosAndRegisterParmAsCandidates(TR::Block **,int32_t,_Bool);;TR_GlobalRegisterAllocator;0;0
offerAllFPAutosAndParmsAsCandidates;offerAllFPAutosAndParmsAsCandidates(TR::Block **,int32_t);;TR_GlobalRegisterAllocator;0;0
operator=;operator=(class TR_GlobalRegisterAllocator &&);;TR_GlobalRegisterAllocator;1;0
operator=;operator=(const class TR_GlobalRegisterAllocator &);;TR_GlobalRegisterAllocator;1;0
optDetailString;optDetailString();;TR_GlobalRegisterAllocator;0;1
perform;perform();;TR_GlobalRegisterAllocator;0;1
populateSymRefNodes;populateSymRefNodes(TR::Node *,vcount_t);;TR_GlobalRegisterAllocator;0;0
prepareForBlockExit;prepareForBlockExit(TR::TreeTop *&,TR::Node *&,TR::Block *,TR_Array<class TR_GlobalRegister> &,TR::Block *,TR_Array<TR::Node *> &);;TR_GlobalRegisterAllocator;0;0
registerIsLiveAcrossEdge;registerIsLiveAcrossEdge(TR::TreeTop *,TR::Node *,TR::Block *,class TR_GlobalRegister *,TR::Block *&,int32_t);;TR_GlobalRegisterAllocator;0;0
reloadNonRegStarVariables;reloadNonRegStarVariables(TR::TreeTop *,TR::Node *,TR::Block *,_Bool);;TR_GlobalRegisterAllocator;0;0
resolveTypeMismatch;resolveTypeMismatch(TR::DataType,TR::Node *);;TR_GlobalRegisterAllocator;0;0
resolveTypeMismatch;resolveTypeMismatch(TR::Node *,TR::Node *);;TR_GlobalRegisterAllocator;0;0
resolveTypeMismatch;resolveTypeMismatch(TR::DataType,TR::Node *,TR::Node *);;TR_GlobalRegisterAllocator;0;0
restoreOriginalSymbol;restoreOriginalSymbol(TR::Node *,vcount_t);;TR_GlobalRegisterAllocator;0;0
setSignExtensionNotRequired;setSignExtensionNotRequired(_Bool,int32_t);;TR_GlobalRegisterAllocator;0;0
setSignExtensionRequired;setSignExtensionRequired(_Bool,int32_t);;TR_GlobalRegisterAllocator;0;0
signExtendAllDefNodes;signExtendAllDefNodes(TR::Node *,List<TR::Node> *);;TR_GlobalRegisterAllocator;0;0
signExtensionNotRequired;signExtensionNotRequired();;TR_GlobalRegisterAllocator;0;0
signExtensionRequired;signExtensionRequired();;TR_GlobalRegisterAllocator;0;0
tagCandidates;tagCandidates(TR::Block *,_Bool);;TR_GlobalRegisterAllocator;0;0
tagCandidates;tagCandidates(TR::Block *,uint32_t,_Bool);;TR_GlobalRegisterAllocator;0;0
transformBlock;transformBlock(TR::TreeTop *);;TR_GlobalRegisterAllocator;0;0
transformBlockExit;transformBlockExit(TR::TreeTop *,TR::Node *,TR::Block *,TR_Array<class TR_GlobalRegister> &,TR::Block *);;TR_GlobalRegisterAllocator;0;0
transformMultiWayBranch;transformMultiWayBranch(TR::TreeTop *,TR::Node *,TR::Block *,TR_Array<class TR_GlobalRegister> &,_Bool);;TR_GlobalRegisterAllocator;0;0
transformNode;transformNode(TR::Node *,TR::Node *,int32_t,TR::TreeTop *,TR::Block *&,TR_Array<class TR_GlobalRegister> &,class TR_NodeMappings *);;TR_GlobalRegisterAllocator;0;0
visitNodeForDataType;visitNodeForDataType(TR::Node *);;TR_GlobalRegisterAllocator;0;0
walkTreesAndCollectSymbolDataTypes;walkTreesAndCollectSymbolDataTypes();;TR_GlobalRegisterAllocator;0;0
~TR_GlobalRegisterAllocator;~TR_GlobalRegisterAllocator();;TR_GlobalRegisterAllocator;1;1
TR_LiveRangeSplitter;TR_LiveRangeSplitter(class TR_LiveRangeSplitter &&);;TR_LiveRangeSplitter;1;0
TR_LiveRangeSplitter;TR_LiveRangeSplitter(const class TR_LiveRangeSplitter &);;TR_LiveRangeSplitter;1;0
TR_LiveRangeSplitter;TR_LiveRangeSplitter(TR::OptimizationManager *);;TR_LiveRangeSplitter;0;0
appendStoreToBlock;appendStoreToBlock(TR::SymbolReference *,TR::SymbolReference *,TR::Block *,TR::Node *);;TR_LiveRangeSplitter;0;0
create;create(TR::OptimizationManager *);;TR_LiveRangeSplitter;0;0
fixExitsAfterSplit;fixExitsAfterSplit(TR::SymbolReference *,struct TR_SymRefCandidatePair *,struct TR_SymRefCandidatePair **,TR::Block *,List<TR::Block> *,TR::Node *,SymRefCandidateMap &,class TR_StructureSubGraphNode *,class TR_BitVector *,TR::SymbolReference *);;TR_LiveRangeSplitter;0;0
operator=;operator=(class TR_LiveRangeSplitter &&);;TR_LiveRangeSplitter;1;0
operator=;operator=(const class TR_LiveRangeSplitter &);;TR_LiveRangeSplitter;1;0
optDetailString;optDetailString();;TR_LiveRangeSplitter;0;1
perform;perform();;TR_LiveRangeSplitter;0;1
placeStoresInLoopExits;placeStoresInLoopExits(TR::Node *,class TR_StructureSubGraphNode *,List<TR::Block> *,TR::SymbolReference *,TR::SymbolReference *);;TR_LiveRangeSplitter;0;0
prependStoreToBlock;prependStoreToBlock(TR::SymbolReference *,TR::SymbolReference *,TR::Block *,TR::Node *);;TR_LiveRangeSplitter;0;0
replaceAutosUsedIn;replaceAutosUsedIn(TR::TreeTop *,TR::Node *,TR::Node *,TR::Block *,List<TR::Block> *,List<TR::Block> *,vcount_t,int32_t,SymRefCandidateMap &,struct TR_SymRefCandidatePair **,class TR_BitVector *,class TR_BitVector *,class TR_StructureSubGraphNode *,TR::Block *);;TR_LiveRangeSplitter;0;0
splitAndFixPreHeader;splitAndFixPreHeader(TR::SymbolReference *,struct TR_SymRefCandidatePair **,TR::Block *,TR::Node *);;TR_LiveRangeSplitter;0;0
splitLiveRanges;splitLiveRanges();;TR_LiveRangeSplitter;0;0
splitLiveRanges;splitLiveRanges(class TR_StructureSubGraphNode *);;TR_LiveRangeSplitter;0;0
~TR_LiveRangeSplitter;~TR_LiveRangeSplitter();;TR_LiveRangeSplitter;1;1
SuccessorIterator;SuccessorIterator(class SuccessorIterator &&);;SuccessorIterator;1;0
SuccessorIterator;SuccessorIterator(const class SuccessorIterator &);;SuccessorIterator;1;0
SuccessorIterator;SuccessorIterator();;SuccessorIterator;1;0
asSwitchSuccessor;asSwitchSuccessor();;SuccessorIterator;0;1
getFirstSuccessor;getFirstSuccessor();;SuccessorIterator;0;1
getFirstSuccessor;getFirstSuccessor();;multipleJumpSuccessorIterator;0;1
getNextSuccessor;getNextSuccessor();;SuccessorIterator;0;1
getNextSuccessor;getNextSuccessor();;multipleJumpSuccessorIterator;0;1
getNextSuccessor_;getNextSuccessor_();;multipleJumpSuccessorIterator;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;multipleJumpSuccessorIterator;0;0
jitPersistentFree;jitPersistentFree(void *);;multipleJumpSuccessorIterator;0;0
multipleJumpSuccessorIterator;multipleJumpSuccessorIterator(const class multipleJumpSuccessorIterator &);;multipleJumpSuccessorIterator;1;0
multipleJumpSuccessorIterator;multipleJumpSuccessorIterator(class multipleJumpSuccessorIterator &&);;multipleJumpSuccessorIterator;1;0
multipleJumpSuccessorIterator;multipleJumpSuccessorIterator(TR::Block *);;multipleJumpSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;multipleJumpSuccessorIterator;0;0
operator delete;operator delete(void *,size_t);;multipleJumpSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;multipleJumpSuccessorIterator;0;0
operator delete;operator delete(void *,TR::Region &);;multipleJumpSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;multipleJumpSuccessorIterator;0;0
operator delete[];operator delete[](void *,TR::Region &);;multipleJumpSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;multipleJumpSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;multipleJumpSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,TR::Region &);;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,TR::Region &);;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;multipleJumpSuccessorIterator;0;0
operator=;operator=(const class SuccessorIterator &);;SuccessorIterator;1;0
operator=;operator=(class SuccessorIterator &&);;SuccessorIterator;1;0
operator=;operator=(const class multipleJumpSuccessorIterator &);;multipleJumpSuccessorIterator;1;0
operator=;operator=(class multipleJumpSuccessorIterator &&);;multipleJumpSuccessorIterator;1;0
~SuccessorIterator;~SuccessorIterator();;SuccessorIterator;1;0
~multipleJumpSuccessorIterator;~multipleJumpSuccessorIterator();;multipleJumpSuccessorIterator;1;0
asSwitchSuccessor;asSwitchSuccessor();;switchSuccessorIterator;0;1
getCaseNode;getCaseNode();;switchSuccessorIterator;0;0
getFirstSuccessor;getFirstSuccessor();;switchSuccessorIterator;0;1
getNextSuccessor;getNextSuccessor();;switchSuccessorIterator;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);;switchSuccessorIterator;0;0
jitPersistentFree;jitPersistentFree(void *);;switchSuccessorIterator;0;0
operator delete;operator delete(void *,size_t);;switchSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;switchSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;switchSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;switchSuccessorIterator;0;0
operator delete;operator delete(void *,TR::Region &);;switchSuccessorIterator;0;0
operator delete[];operator delete[](void *,TR::Region &);;switchSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;switchSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;switchSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;switchSuccessorIterator;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;switchSuccessorIterator;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;switchSuccessorIterator;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;switchSuccessorIterator;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;switchSuccessorIterator;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;switchSuccessorIterator;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;switchSuccessorIterator;0;0
operator new;operator new(size_t,TR::Region &);;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,TR::Region &);;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;switchSuccessorIterator;0;0
operator=;operator=(class switchSuccessorIterator &&);;switchSuccessorIterator;1;0
operator=;operator=(const class switchSuccessorIterator &);;switchSuccessorIterator;1;0
switchSuccessorIterator;switchSuccessorIterator(class switchSuccessorIterator &&);;switchSuccessorIterator;1;0
switchSuccessorIterator;switchSuccessorIterator(TR::Node *);;switchSuccessorIterator;0;0
switchSuccessorIterator;switchSuccessorIterator(const class switchSuccessorIterator &);;switchSuccessorIterator;1;0
~switchSuccessorIterator;~switchSuccessorIterator();;switchSuccessorIterator;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Inliner.cpp
OMR_InlinerPolicy;OMR_InlinerPolicy(const class OMR_InlinerPolicy &);;OMR_InlinerPolicy;1;0
OMR_InlinerHelper;OMR_InlinerHelper();;OMR_InlinerHelper;1;0
OMR_InlinerUtil;OMR_InlinerUtil(const class OMR_InlinerUtil &);;OMR_InlinerUtil;1;0
operator=;operator=(class OMR::ILOpCode &&);OMR;ILOpCode;1;0
operator=;operator=(const class OMR::ILOpCode &);OMR;ILOpCode;1;0
operator=;operator=(class TR::ILOpCode &&);TR;ILOpCode;1;0
operator=;operator=(const class TR::ILOpCode &);TR;ILOpCode;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(class TR::IlGeneratorMethodDetails &&);TR;IlGeneratorMethodDetails;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(const class TR::IlGeneratorMethodDetails &);TR;IlGeneratorMethodDetails;1;0
TR_CallStack;TR_CallStack(const class TR_CallStack &);;TR_CallStack;1;0
TR_DumbInliner;TR_DumbInliner(class TR_DumbInliner &&);;TR_DumbInliner;1;0
TR_DumbInliner;TR_DumbInliner(const class TR_DumbInliner &);;TR_DumbInliner;1;0
TR_InlineCall;TR_InlineCall(class TR_InlineCall &&);;TR_InlineCall;1;0
TR_InlineCall;TR_InlineCall(const class TR_InlineCall &);;TR_InlineCall;1;0
TR_InlinerBase;TR_InlinerBase(class TR_InlinerBase &&);;TR_InlinerBase;1;0
TR_InlinerBase;TR_InlinerBase(const class TR_InlinerBase &);;TR_InlinerBase;1;0
TR_InlinerTracer;TR_InlinerTracer(const class TR_InlinerTracer &);;TR_InlinerTracer;1;0
TR_InlinerTracer;TR_InlinerTracer(class TR_InlinerTracer &&);;TR_InlinerTracer;1;0
TR_LogTracer;TR_LogTracer(const class TR_LogTracer &);;TR_LogTracer;1;0
TR_LogTracer;TR_LogTracer(class TR_LogTracer &&);;TR_LogTracer;1;0
~TR_LogTracer;~TR_LogTracer();;TR_LogTracer;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RematTools.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/InductionVariable.cpp
~PostorderNodeIterator;~PostorderNodeIterator();TR;PostorderNodeIterator;1;0
VPIntRange;VPIntRange(class TR::VPIntRange &&);TR;VPIntRange;1;0
VPIntRange;VPIntRange(const class TR::VPIntRange &);TR;VPIntRange;1;0
VPLongRange;VPLongRange(const class TR::VPLongRange &);TR;VPLongRange;1;0
VPLongRange;VPLongRange(class TR::VPLongRange &&);TR;VPLongRange;1;0
TR_DerivedInductionVariable;TR_DerivedInductionVariable(class TR_DerivedInductionVariable &&);;TR_DerivedInductionVariable;1;0
TR_DerivedInductionVariable;TR_DerivedInductionVariable(const class TR_DerivedInductionVariable &);;TR_DerivedInductionVariable;1;0
TR_InductionVariable;TR_InductionVariable(class TR_InductionVariable &&);;TR_InductionVariable;1;0
TR_InductionVariable;TR_InductionVariable(const class TR_InductionVariable &);;TR_InductionVariable;1;0
TR_PrimaryInductionVariable;TR_PrimaryInductionVariable(const class TR_PrimaryInductionVariable &);;TR_PrimaryInductionVariable;1;0
TR_PrimaryInductionVariable;TR_PrimaryInductionVariable(class TR_PrimaryInductionVariable &&);;TR_PrimaryInductionVariable;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/IntersectionBitVectorAnalysis.cpp
TR_IntersectionDFSetAnalysis;TR_IntersectionDFSetAnalysis(class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &&);;TR_IntersectionDFSetAnalysis;1;0
TR_IntersectionDFSetAnalysis;TR_IntersectionDFSetAnalysis(const class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &);;TR_IntersectionDFSetAnalysis;1;0
TR_IntersectionDFSetAnalysis;TR_IntersectionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_IntersectionDFSetAnalysis;0;0
compose;compose(class TR_BitVector *,class TR_BitVector *);;TR_IntersectionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);;TR_IntersectionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);;TR_IntersectionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);;TR_IntersectionDFSetAnalysis;0;1
operator=;operator=(class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &&);;TR_IntersectionDFSetAnalysis;1;0
operator=;operator=(const class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &);;TR_IntersectionDFSetAnalysis;1;0
~TR_IntersectionDFSetAnalysis;~TR_IntersectionDFSetAnalysis();;TR_IntersectionDFSetAnalysis;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Isolatedness.cpp
TR_Isolatedness;TR_Isolatedness(class TR_Isolatedness &&);;TR_Isolatedness;1;0
TR_Isolatedness;TR_Isolatedness(const class TR_Isolatedness &);;TR_Isolatedness;1;0
TR_Latestness;TR_Latestness(class TR_Latestness &&);;TR_Latestness;1;0
TR_Latestness;TR_Latestness(const class TR_Latestness &);;TR_Latestness;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/IsolatedStoreElimination.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Latestness.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LiveOnAllPaths.cpp
TR_LiveOnAllPaths;TR_LiveOnAllPaths(class TR_LiveOnAllPaths &&);;TR_LiveOnAllPaths;1;0
TR_LiveOnAllPaths;TR_LiveOnAllPaths(const class TR_LiveOnAllPaths &);;TR_LiveOnAllPaths;1;0
TR_LiveVariableInformation;TR_LiveVariableInformation(class TR_LiveVariableInformation &&);;TR_LiveVariableInformation;1;0
TR_LiveVariableInformation;TR_LiveVariableInformation(const class TR_LiveVariableInformation &);;TR_LiveVariableInformation;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LiveVariableInformation.cpp
TR_OSRLiveVariableInformation;TR_OSRLiveVariableInformation(class TR_OSRLiveVariableInformation &&);;TR_OSRLiveVariableInformation;1;0
TR_OSRLiveVariableInformation;TR_OSRLiveVariableInformation(const class TR_OSRLiveVariableInformation &);;TR_OSRLiveVariableInformation;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Liveness.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoadExtensions.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalAnalysis.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalAnticipatability.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalLiveRangeReducer.cpp
TR_LocalLiveRangeReduction;TR_LocalLiveRangeReduction(class TR_LocalLiveRangeReduction &&);;TR_LocalLiveRangeReduction;1;0
TR_LocalLiveRangeReduction;TR_LocalLiveRangeReduction(const class TR_LocalLiveRangeReduction &);;TR_LocalLiveRangeReduction;1;0
TR_LocalLiveRangeReduction;TR_LocalLiveRangeReduction(TR::OptimizationManager *);;TR_LocalLiveRangeReduction;0;0
addDepPair;addDepPair(class TR_TreeRefInfo *,class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
collectInfo;collectInfo(TR::TreeTop *,TR::TreeTop *);;TR_LocalLiveRangeReduction;0;0
collectRefInfo;collectRefInfo(class TR_TreeRefInfo *,TR::Node *,vcount_t,int32_t *);;TR_LocalLiveRangeReduction;0;0
containsCallOrCheck;containsCallOrCheck(class TR_TreeRefInfo *,TR::Node *);;TR_LocalLiveRangeReduction;0;0
create;create(TR::OptimizationManager *);;TR_LocalLiveRangeReduction;0;0
findLocationToMove;findLocationToMove(class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
getIndexInArray;getIndexInArray(class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
initPotentialDeps;initPotentialDeps(class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
investigateAndMove;investigateAndMove(class TR_TreeRefInfo *,int32_t);;TR_LocalLiveRangeReduction;0;0
isAnyDataConstraint;isAnyDataConstraint(class TR_TreeRefInfo *,class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
isAnySymInDefinedOrUsedBy;isAnySymInDefinedOrUsedBy(class TR_TreeRefInfo *,TR::Node *,class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
isNeedToBeInvestigated;isNeedToBeInvestigated(class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
isWorthMoving;isWorthMoving(class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
matchFirstOrMidToLastRef;matchFirstOrMidToLastRef(class TR_TreeRefInfo *,class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
moveTreeBefore;moveTreeBefore(class TR_TreeRefInfo *,class TR_TreeRefInfo *,int32_t);;TR_LocalLiveRangeReduction;0;0
operator=;operator=(class TR_LocalLiveRangeReduction &&);;TR_LocalLiveRangeReduction;1;0
operator=;operator=(const class TR_LocalLiveRangeReduction &);;TR_LocalLiveRangeReduction;1;0
optDetailString;optDetailString();;TR_LocalLiveRangeReduction;0;1
perform;perform();;TR_LocalLiveRangeReduction;0;1
populatePotentialDeps;populatePotentialDeps(class TR_TreeRefInfo *,TR::Node *);;TR_LocalLiveRangeReduction;0;0
postPerformOnBlocks;postPerformOnBlocks();;TR_LocalLiveRangeReduction;0;1
prePerformOnBlocks;prePerformOnBlocks();;TR_LocalLiveRangeReduction;0;1
printOnVerifyError;printOnVerifyError(class TR_TreeRefInfo *,class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
printRefInfo;printRefInfo(class TR_TreeRefInfo *);;TR_LocalLiveRangeReduction;0;0
transformExtendedBlock;transformExtendedBlock(TR::TreeTop *,TR::TreeTop *);;TR_LocalLiveRangeReduction;0;0
updateDepList;updateDepList();;TR_LocalLiveRangeReduction;0;0
updateRefInfo;updateRefInfo(TR::Node *,class TR_TreeRefInfo *,class TR_TreeRefInfo *,_Bool);;TR_LocalLiveRangeReduction;0;0
verifyRefInfo;verifyRefInfo(List<TR::Node> *,List<TR::Node> *);;TR_LocalLiveRangeReduction;0;0
~TR_LocalLiveRangeReduction;~TR_LocalLiveRangeReduction();;TR_LocalLiveRangeReduction;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalReordering.cpp
TR_LocalReordering;TR_LocalReordering(const class TR_LocalReordering &);;TR_LocalReordering;1;0
TR_LocalReordering;TR_LocalReordering(TR::OptimizationManager *);;TR_LocalReordering;0;0
TR_LocalReordering;TR_LocalReordering(class TR_LocalReordering &&);;TR_LocalReordering;1;0
collectSymbolsUsedAndDefinedInNode;collectSymbolsUsedAndDefinedInNode(TR::Node *,vcount_t);;TR_LocalReordering;0;0
collectUses;collectUses(TR::Block *);;TR_LocalReordering;0;0
containsBarriers;containsBarriers(TR::Block *);;TR_LocalReordering;0;0
create;create(TR::OptimizationManager *);;TR_LocalReordering;0;0
delayDefinitions;delayDefinitions(TR::Block *);;TR_LocalReordering;0;0
insertDefinitionBetween;insertDefinitionBetween(TR::TreeTop *,TR::TreeTop *);;TR_LocalReordering;0;0
insertEarlierIfPossible;insertEarlierIfPossible(TR::TreeTop *,TR::TreeTop *,_Bool);;TR_LocalReordering;0;0
isAnySymInDefinedBy;isAnySymInDefinedBy(TR::Node *,vcount_t);;TR_LocalReordering;0;0
isAnySymInDefinedOrUsedBy;isAnySymInDefinedOrUsedBy(TR::Node *,vcount_t);;TR_LocalReordering;0;0
isSubtreeCommoned;isSubtreeCommoned(TR::Node *);;TR_LocalReordering;0;0
moveStoresEarlierIfRhsAnchored;moveStoresEarlierIfRhsAnchored(TR::Block *,TR::TreeTop *,TR::Node *,TR::Node *,vcount_t);;TR_LocalReordering;0;0
operator=;operator=(const class TR_LocalReordering &);;TR_LocalReordering;1;0
operator=;operator=(class TR_LocalReordering &&);;TR_LocalReordering;1;0
optDetailString;optDetailString();;TR_LocalReordering;0;1
perform;perform();;TR_LocalReordering;0;1
performOnBlock;performOnBlock(TR::Block *);;TR_LocalReordering;0;1
postPerformOnBlocks;postPerformOnBlocks();;TR_LocalReordering;0;1
prePerformOnBlocks;prePerformOnBlocks();;TR_LocalReordering;0;1
setUseTreeForSymbolReferencesIn;setUseTreeForSymbolReferencesIn(TR::TreeTop *,TR::Node *,vcount_t);;TR_LocalReordering;0;0
transformBlock;transformBlock(TR::Block *);;TR_LocalReordering;0;0
~TR_LocalReordering;~TR_LocalReordering();;TR_LocalReordering;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalTransparency.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoopCanonicalizer.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoopReducer.cpp
TR_ArrayLoop;TR_ArrayLoop(class TR_ArrayLoop &&);;TR_ArrayLoop;1;0
TR_ArrayLoop;TR_ArrayLoop(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *);;TR_ArrayLoop;0;0
TR_ArrayLoop;TR_ArrayLoop(const class TR_ArrayLoop &);;TR_ArrayLoop;1;0
TR_ArrayLoop;TR_ArrayLoop(TR::Compilation *,class TR_InductionVariable *);;TR_ArrayLoop;0;0
TR_Arraycmp;TR_Arraycmp(const class TR_Arraycmp &);;TR_Arraycmp;1;0
TR_Arraycmp;TR_Arraycmp(class TR_Arraycmp &&);;TR_Arraycmp;1;0
TR_Arraycmp;TR_Arraycmp(TR::Compilation *,class TR_InductionVariable *);;TR_Arraycmp;0;0
checkElementCompare;checkElementCompare(TR::Node *);;TR_Arraycmp;0;0
checkForPostIncrement;checkForPostIncrement(TR::Block *,TR::Node *,TR::Node *,TR::Symbol *);;TR_ArrayLoop;0;0
checkGoto;checkGoto(TR::Block *,TR::Node *,TR::Node *);;TR_Arraycmp;0;0
checkLoopCmp;checkLoopCmp(TR::Node *,TR::Node *,class TR_InductionVariable *);;TR_ArrayLoop;0;0
comp;comp();;TR_ArrayLoop;0;0
findIndVarLoads;findIndVarLoads(TR::Node *,TR::Node *,_Bool &,List<TR::Node> *,TR::Symbol *,vcount_t);;TR_ArrayLoop;0;0
forwardLoop;forwardLoop();;TR_ArrayLoop;0;0
getAddInc;getAddInc();;TR_ArrayLoop;0;0
getFinalNode;getFinalNode();;TR_ArrayLoop;0;0
getFirstAddress;getFirstAddress();;TR_ArrayLoop;0;0
getFirstIndVarNode;getFirstIndVarNode();;TR_Arraycmp;0;0
getFirstLoad;getFirstLoad();;TR_Arraycmp;0;0
getFirstMultiplyNode;getFirstMultiplyNode();;TR_Arraycmp;0;0
getSecondAddress;getSecondAddress();;TR_ArrayLoop;0;0
getSecondIndVarNode;getSecondIndVarNode();;TR_Arraycmp;0;0
getSecondLoad;getSecondLoad();;TR_Arraycmp;0;0
getSecondMultiplyNode;getSecondMultiplyNode();;TR_Arraycmp;0;0
getThirdAddress;getThirdAddress();;TR_ArrayLoop;0;0
setFirstLoad;setFirstLoad(TR::Node *);;TR_Arraycmp;0;0
setSecondLoad;setSecondLoad(TR::Node *);;TR_Arraycmp;0;0
targetOfGotoBlock;targetOfGotoBlock();;TR_Arraycmp;0;0
updateIndVarStore;updateIndVarStore(class TR_ParentOfChildNode *,TR::Node *,class TR_LRAddressTree *,int32_t);;TR_ArrayLoop;0;0
~TR_ArrayLoop;~TR_ArrayLoop();;TR_ArrayLoop;1;0
TR_Arraycopy;TR_Arraycopy(class TR_Arraycopy &&);;TR_Arraycopy;1;0
TR_Arraycopy;TR_Arraycopy(const class TR_Arraycopy &);;TR_Arraycopy;1;0
TR_Arraycopy;TR_Arraycopy(TR::Compilation *,class TR_InductionVariable *);;TR_Arraycopy;0;0
checkArrayStore;checkArrayStore(TR::Node *);;TR_Arraycopy;0;0
getCopySize;getCopySize();;TR_Arraycopy;0;0
getLoadAddress;getLoadAddress();;TR_Arraycopy;0;0
getLoadIndVarNode;getLoadIndVarNode();;TR_Arraycopy;0;0
getLoadMultiplyNode;getLoadMultiplyNode();;TR_Arraycopy;0;0
getStoreAddress;getStoreAddress();;TR_Arraycopy;0;0
getStoreIndVarNode;getStoreIndVarNode();;TR_Arraycopy;0;0
getStoreMultiplyNode;getStoreMultiplyNode();;TR_Arraycopy;0;0
getStoreNode;getStoreNode();;TR_Arraycopy;0;0
hasWriteBarrier;hasWriteBarrier();;TR_Arraycopy;0;0
TR_Arrayset;TR_Arrayset(class TR_Arrayset &&);;TR_Arrayset;1;0
TR_Arrayset;TR_Arrayset(const class TR_Arrayset &);;TR_Arrayset;1;0
TR_Arrayset;TR_Arrayset(TR::Compilation *,class TR_InductionVariable *);;TR_Arrayset;0;0
checkArrayStore;checkArrayStore(TR::Node *);;TR_Arrayset;0;0
getIndVar;getIndVar();;TR_Arrayset;0;0
getIndVarNode;getIndVarNode();;TR_Arrayset;0;0
getMultiplyNode;getMultiplyNode();;TR_Arrayset;0;0
getStoreAddress;getStoreAddress();;TR_Arrayset;0;0
TR_Arraytranslate;TR_Arraytranslate(class TR_Arraytranslate &&);;TR_Arraytranslate;1;0
TR_Arraytranslate;TR_Arraytranslate(TR::Compilation *,class TR_InductionVariable *,_Bool,_Bool);;TR_Arraytranslate;0;0
TR_Arraytranslate;TR_Arraytranslate(const class TR_Arraytranslate &);;TR_Arraytranslate;1;0
checkBreak;checkBreak(TR::Block *,TR::Node *,TR::Block *);;TR_Arraytranslate;0;0
checkGoto;checkGoto(TR::Block *,TR::Node *,TR::Block *);;TR_Arraytranslate;0;0
checkLoad;checkLoad(TR::Node *);;TR_Arraytranslate;0;0
checkMatIndVarStore;checkMatIndVarStore(TR::Node *,TR::Node *);;TR_Arraytranslate;0;0
checkStore;checkStore(TR::Node *);;TR_Arraytranslate;0;0
compilerGeneratedTable;compilerGeneratedTable();;TR_Arraytranslate;0;0
getByteInput;getByteInput();;TR_Arraytranslate;0;0
getByteOutput;getByteOutput();;TR_Arraytranslate;0;0
getInputNode;getInputNode();;TR_Arraytranslate;0;0
getLoadAddress;getLoadAddress();;TR_Arraytranslate;0;0
getMulChild;getMulChild(TR::Node *);;TR_Arraytranslate;0;0
getOutputNode;getOutputNode();;TR_Arraytranslate;0;0
getResultNode;getResultNode();;TR_Arraytranslate;0;0
getResultUnconvertedNode;getResultUnconvertedNode();;TR_Arraytranslate;0;0
getStoreAddress;getStoreAddress();;TR_Arraytranslate;0;0
getTableNode;getTableNode();;TR_Arraytranslate;0;0
getTermCharNode;getTermCharNode();;TR_Arraytranslate;0;0
getTermValue;getTermValue();;TR_Arraytranslate;0;0
hasBranch;hasBranch();;TR_Arraytranslate;0;0
hasBreak;hasBreak();;TR_Arraytranslate;0;0
tableBackedByRawStorage;tableBackedByRawStorage();;TR_Arraytranslate;0;0
TR_ArraytranslateAndTest;TR_ArraytranslateAndTest(TR::Compilation *,class TR_InductionVariable *);;TR_ArraytranslateAndTest;0;0
TR_ArraytranslateAndTest;TR_ArraytranslateAndTest(class TR_ArraytranslateAndTest &&);;TR_ArraytranslateAndTest;1;0
TR_ArraytranslateAndTest;TR_ArraytranslateAndTest(const class TR_ArraytranslateAndTest &);;TR_ArraytranslateAndTest;1;0
checkFrequency;checkFrequency(TR::CodeGenerator *,TR::Block *,TR::Node *);;TR_ArraytranslateAndTest;0;0
checkLoad;checkLoad(TR::Block *,TR::Node *);;TR_ArraytranslateAndTest;0;0
getIndVarNode;getIndVarNode();;TR_ArraytranslateAndTest;0;0
getInputNode;getInputNode();;TR_ArraytranslateAndTest;0;0
getStoreAddress;getStoreAddress();;TR_ArraytranslateAndTest;0;0
getTermCharNode;getTermCharNode();;TR_ArraytranslateAndTest;0;0
TR_ByteToCharArraycopy;TR_ByteToCharArraycopy(class TR_ByteToCharArraycopy &&);;TR_ByteToCharArraycopy;1;0
TR_ByteToCharArraycopy;TR_ByteToCharArraycopy(const class TR_ByteToCharArraycopy &);;TR_ByteToCharArraycopy;1;0
TR_ByteToCharArraycopy;TR_ByteToCharArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool);;TR_ByteToCharArraycopy;0;0
checkArrayStore;checkArrayStore(TR::Node *);;TR_ByteToCharArraycopy;0;0
checkByteLoads;checkByteLoads(TR::Node *);;TR_ByteToCharArraycopy;0;0
getHighLoadAddress;getHighLoadAddress();;TR_ByteToCharArraycopy;0;0
getHighLoadIndVarNode;getHighLoadIndVarNode();;TR_ByteToCharArraycopy;0;0
getHighLoadMultiplyNode;getHighLoadMultiplyNode();;TR_ByteToCharArraycopy;0;0
getLowLoadAddress;getLowLoadAddress();;TR_ByteToCharArraycopy;0;0
getLowLoadIndVarNode;getLowLoadIndVarNode();;TR_ByteToCharArraycopy;0;0
getLowLoadMultiplyNode;getLowLoadMultiplyNode();;TR_ByteToCharArraycopy;0;0
getStoreAddress;getStoreAddress();;TR_ByteToCharArraycopy;0;0
getStoreIndVarNode;getStoreIndVarNode();;TR_ByteToCharArraycopy;0;0
getStoreMultiplyNode;getStoreMultiplyNode();;TR_ByteToCharArraycopy;0;0
TR_CharToByteArraycopy;TR_CharToByteArraycopy(const class TR_CharToByteArraycopy &);;TR_CharToByteArraycopy;1;0
TR_CharToByteArraycopy;TR_CharToByteArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool);;TR_CharToByteArraycopy;0;0
TR_CharToByteArraycopy;TR_CharToByteArraycopy(class TR_CharToByteArraycopy &&);;TR_CharToByteArraycopy;1;0
checkArrayStores;checkArrayStores(TR::Node *,TR::Node *);;TR_CharToByteArraycopy;0;0
getHighStoreAddress;getHighStoreAddress();;TR_CharToByteArraycopy;0;0
getHighStoreIndVarNode;getHighStoreIndVarNode();;TR_CharToByteArraycopy;0;0
getHighStoreMultiplyNode;getHighStoreMultiplyNode();;TR_CharToByteArraycopy;0;0
getLoadAddress;getLoadAddress();;TR_CharToByteArraycopy;0;0
getLoadIndVarNode;getLoadIndVarNode();;TR_CharToByteArraycopy;0;0
getLoadMultiplyNode;getLoadMultiplyNode();;TR_CharToByteArraycopy;0;0
getLowStoreAddress;getLowStoreAddress();;TR_CharToByteArraycopy;0;0
getLowStoreIndVarNode;getLowStoreIndVarNode();;TR_CharToByteArraycopy;0;0
getLowStoreMultiplyNode;getLowStoreMultiplyNode();;TR_CharToByteArraycopy;0;0
TR_AddressTree;TR_AddressTree(class TR_AddressTree &&);;TR_AddressTree;1;0
TR_AddressTree;TR_AddressTree(const class TR_AddressTree &);;TR_AddressTree;1;0
TR_AddressTree;TR_AddressTree(enum TR_AllocationKind,TR::Compilation *);;TR_AddressTree;0;0
TR_LRAddressTree;TR_LRAddressTree(const class TR_LRAddressTree &);;TR_LRAddressTree;1;0
TR_LRAddressTree;TR_LRAddressTree(class TR_LRAddressTree &&);;TR_LRAddressTree;1;0
TR_LRAddressTree;TR_LRAddressTree(TR::Compilation *,class TR_InductionVariable *);;TR_LRAddressTree;0;0
checkAiadd;checkAiadd(TR::Node *,int32_t);;TR_LRAddressTree;0;0
checkIndVarStore;checkIndVarStore(TR::Node *);;TR_LRAddressTree;0;0
comp;comp();;TR_AddressTree;0;0
findComplexAddressGenerationTree;findComplexAddressGenerationTree(TR::Node *,vcount_t,TR::Node *);;TR_AddressTree;0;1
getBaseVarNode;getBaseVarNode();;TR_AddressTree;0;0
getIncrement;getIncrement();;TR_LRAddressTree;0;0
getIndVar;getIndVar();;TR_LRAddressTree;0;0
getIndVarLoad;getIndVarLoad();;TR_LRAddressTree;0;0
getIndVarNode;getIndVarNode();;TR_AddressTree;0;0
getIndVarSymRef;getIndVarSymRef();;TR_LRAddressTree;0;0
getIndexBase;getIndexBase();;TR_AddressTree;0;0
getMaterializedIndVarSymRef;getMaterializedIndVarSymRef();;TR_LRAddressTree;0;0
getMultiplier;getMultiplier();;TR_AddressTree;0;0
getMultiplyNode;getMultiplyNode();;TR_AddressTree;0;0
getOffset;getOffset();;TR_AddressTree;0;0
getRootNode;getRootNode();;TR_AddressTree;0;0
isILLoad;isILLoad(TR::Node *);;TR_AddressTree;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_AddressTree;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_AddressTree;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_AddressTree;0;0
operator delete;operator delete(void *,size_t);;TR_AddressTree;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_AddressTree;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_AddressTree;0;0
operator delete;operator delete(void *,TR::Region &);;TR_AddressTree;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_AddressTree;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_AddressTree;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_AddressTree;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_AddressTree;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_AddressTree;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_AddressTree;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_AddressTree;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_AddressTree;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_AddressTree;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_AddressTree;0;0
operator new;operator new(size_t,TR::Region &);;TR_AddressTree;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_AddressTree;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_AddressTree;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_AddressTree;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_AddressTree;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_AddressTree;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_AddressTree;0;0
operator=;operator=(const class TR_AddressTree &);;TR_AddressTree;1;0
operator=;operator=(class TR_AddressTree &&);;TR_AddressTree;1;0
operator=;operator=(class TR_LRAddressTree &&);;TR_LRAddressTree;1;0
operator=;operator=(const class TR_LRAddressTree &);;TR_LRAddressTree;1;0
process;process(TR::Node *,_Bool);;TR_AddressTree;0;0
processBaseAndIndex;processBaseAndIndex(TR::Node *);;TR_AddressTree;0;1
processBaseAndIndex;processBaseAndIndex(TR::Node *);;TR_LRAddressTree;0;1
processMultiplyNode;processMultiplyNode(TR::Node *);;TR_AddressTree;0;0
setIncrement;setIncrement(int32_t);;TR_LRAddressTree;0;0
setMaterializedIndVarSymRef;setMaterializedIndVarSymRef(TR::SymbolReference *);;TR_LRAddressTree;0;0
trMemory;trMemory();;TR_AddressTree;0;0
updateAiaddSubTree;updateAiaddSubTree(class TR_ParentOfChildNode *,class TR_ArrayLoop *);;TR_LRAddressTree;0;0
updateMultiply;updateMultiply(class TR_ParentOfChildNode *);;TR_LRAddressTree;0;0
~TR_AddressTree;~TR_AddressTree();;TR_AddressTree;1;0
~TR_LRAddressTree;~TR_LRAddressTree();;TR_LRAddressTree;1;0
TR_LoopReducer;TR_LoopReducer(class TR_LoopReducer &&);;TR_LoopReducer;1;0
TR_LoopReducer;TR_LoopReducer(const class TR_LoopReducer &);;TR_LoopReducer;1;0
TR_LoopReducer;TR_LoopReducer(TR::OptimizationManager *);;TR_LoopReducer;0;0
addBlock;addBlock(TR::Block *,TR::Block **,int,const int);;TR_LoopReducer;0;0
addRegionBlocks;addRegionBlocks(class TR_RegionStructure *,TR::Block **,int,const int);;TR_LoopReducer;0;0
asLoopReducer;asLoopReducer();;TR_LoopReducer;0;1
blockInVersionedLoop;blockInVersionedLoop(List<TR::CFGEdge>,TR::Block *);;TR_LoopReducer;0;0
constrainedIndVar;constrainedIndVar(class TR_InductionVariable *);;TR_LoopReducer;0;0
convertIf;convertIf(TR::ILOpCodes);;TR_LoopReducer;0;0
create;create(TR::OptimizationManager *);;TR_LoopReducer;0;0
generateArraycmp;generateArraycmp(class TR_RegionStructure *,class TR_InductionVariable *,TR::Block *,TR::Block *);;TR_LoopReducer;0;0
generateArraycopy;generateArraycopy(class TR_InductionVariable *,TR::Block *);;TR_LoopReducer;0;0
generateArrayset;generateArrayset(class TR_InductionVariable *,TR::Block *);;TR_LoopReducer;0;0
generateArraytranslate;generateArraytranslate(class TR_RegionStructure *,class TR_InductionVariable *,TR::Block *,TR::Block *,TR::Block *,TR::Block *);;TR_LoopReducer;0;0
generateArraytranslateAndTest;generateArraytranslateAndTest(class TR_RegionStructure *,class TR_InductionVariable *,TR::Block *,TR::Block *);;TR_LoopReducer;0;0
generateByteToCharArraycopy;generateByteToCharArraycopy(class TR_InductionVariable *,class TR_InductionVariable *,TR::Block *);;TR_LoopReducer;0;0
generateCharToByteArraycopy;generateCharToByteArraycopy(class TR_InductionVariable *,class TR_InductionVariable *,TR::Block *);;TR_LoopReducer;0;0
mayNeedGlobalDeadStoreElimination;mayNeedGlobalDeadStoreElimination(TR::Block *,TR::Block *);;TR_LoopReducer;0;0
operator=;operator=(class TR_LoopReducer &&);;TR_LoopReducer;1;0
operator=;operator=(const class TR_LoopReducer &);;TR_LoopReducer;1;0
optDetailString;optDetailString();;TR_LoopReducer;0;1
perform;perform();;TR_LoopReducer;0;1
reduceNaturalLoop;reduceNaturalLoop(class TR_RegionStructure *);;TR_LoopReducer;0;0
removeSelfEdge;removeSelfEdge(TR::CFGEdgeList &,int32_t);;TR_LoopReducer;0;0
replaceInductionVariable;replaceInductionVariable(TR::Node *,TR::Node *,int32_t,int32_t,TR::Node *,vcount_t);;TR_LoopReducer;0;0
~TR_LoopReducer;~TR_LoopReducer();;TR_LoopReducer;1;1
TR_RangeTranslateTable;TR_RangeTranslateTable(class TR_RangeTranslateTable &&);;TR_RangeTranslateTable;1;0
TR_RangeTranslateTable;TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint32_t,uint32_t,uint16_t);;TR_RangeTranslateTable;0;0
TR_RangeTranslateTable;TR_RangeTranslateTable(const class TR_RangeTranslateTable &);;TR_RangeTranslateTable;1;0
TR_RangeTranslateTable;TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t,uint16_t,uint16_t,uint16_t,uint16_t);;TR_RangeTranslateTable;0;0
TR_RangeTranslateTable;TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint32_t,uint32_t,uint32_t,uint32_t,uint16_t);;TR_RangeTranslateTable;0;0
TR_RangeTranslateTable;TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t,uint16_t,uint16_t);;TR_RangeTranslateTable;0;0
TR_TranslateTable;TR_TranslateTable(class TR_TranslateTable &&);;TR_TranslateTable;1;0
TR_TranslateTable;TR_TranslateTable(const class TR_TranslateTable &);;TR_TranslateTable;1;0
TR_TranslateTable;TR_TranslateTable(TR::Compilation *);;TR_TranslateTable;0;0
comp;comp();;TR_TranslateTable;0;0
createSymbolRef;createSymbolRef();;TR_TranslateTable;0;0
createTable;createTable(uint16_t,uint16_t,uint16_t,uint16_t,uint8_t,uint8_t,uint16_t);;TR_TranslateTable;0;0
createTable;createTable(uint32_t,uint32_t,uint8_t,uint8_t,uint16_t);;TR_TranslateTable;0;0
createTable;createTable(uint16_t,uint16_t,uint8_t,uint8_t,uint16_t);;TR_TranslateTable;0;0
createTable;createTable(uint32_t,uint32_t,uint32_t,uint32_t,uint8_t,uint8_t,uint16_t);;TR_TranslateTable;0;0
data;data();;TR_TranslateTable;0;0
dumpTable;dumpTable();;TR_TranslateTable;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_TranslateTable;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_TranslateTable;0;0
matchTable;matchTable(uint8_t,uint8_t,void *);;TR_TranslateTable;0;0
matchTable;matchTable(uint32_t,uint32_t,uint32_t,uint32_t,uint8_t,uint8_t,uint16_t);;TR_TranslateTable;0;0
operator delete;operator delete(void *,size_t);;TR_TranslateTable;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_TranslateTable;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_TranslateTable;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_TranslateTable;0;0
operator delete;operator delete(void *,TR::Region &);;TR_TranslateTable;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_TranslateTable;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_TranslateTable;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_TranslateTable;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_TranslateTable;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_TranslateTable;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_TranslateTable;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_TranslateTable;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_TranslateTable;0;0
operator new;operator new(size_t,TR::Region &);;TR_TranslateTable;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_TranslateTable;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_TranslateTable;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_TranslateTable;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_TranslateTable;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_TranslateTable;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_TranslateTable;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_TranslateTable;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_TranslateTable;0;0
setTable;setTable(struct TR_TranslateTable::TR_TranslateTableData *);;TR_TranslateTable;0;0
table;table();;TR_TranslateTable;0;0
tableSize;tableSize(uint8_t,uint8_t);;TR_TranslateTable;0;0
updateTable;updateTable();;TR_TranslateTable;0;0
~TR_TranslateTable;~TR_TranslateTable();;TR_TranslateTable;1;0
TR_SetTranslateTable;TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t []);;TR_SetTranslateTable;0;0
TR_SetTranslateTable;TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,void *,int);;TR_SetTranslateTable;0;0
TR_SetTranslateTable;TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint8_t []);;TR_SetTranslateTable;0;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoopReplicator.cpp
TR_LoopReplicator;TR_LoopReplicator(class TR_LoopReplicator &&);;TR_LoopReplicator;1;0
TR_LoopReplicator;TR_LoopReplicator(const class TR_LoopReplicator &);;TR_LoopReplicator;1;0
TR_LoopReplicator;TR_LoopReplicator(TR::OptimizationManager *);;TR_LoopReplicator;0;0
addBlocksAndFixEdges;addBlocksAndFixEdges(struct TR_LoopReplicator::LoopInfo *);;TR_LoopReplicator;0;0
bestSuccessor;bestSuccessor(class TR_RegionStructure *,TR::Block *,TR::CFGEdge **);;TR_LoopReplicator;0;0
calculateBlockWeights;calculateBlockWeights(class TR_RegionStructure *);;TR_LoopReplicator;0;0
checkForSuccessor;checkForSuccessor(TR::Block *,TR::Block *);;TR_LoopReplicator;0;0
checkInnerLoopFrequencies;checkInnerLoopFrequencies(class TR_RegionStructure *,struct TR_LoopReplicator::LoopInfo *);;TR_LoopReplicator;0;0
computeWeight;computeWeight(TR::CFGEdge *);;TR_LoopReplicator;0;0
countChildren;countChildren(TR::Node *,vcount_t);;TR_LoopReplicator;0;0
create;create(TR::OptimizationManager *);;TR_LoopReplicator;0;0
createEmptyGoto;createEmptyGoto(TR::Block *,TR::Block *,_Bool);;TR_LoopReplicator;0;0
deriveFrequencyFromPreds;deriveFrequencyFromPreds(class TR_StructureSubGraphNode *,class TR_RegionStructure *);;TR_LoopReplicator;0;0
doTailDuplication;doTailDuplication(struct TR_LoopReplicator::LoopInfo *);;TR_LoopReplicator;0;0
findEndTreeTop;findEndTreeTop(class TR_RegionStructure *);;TR_LoopReplicator;0;0
findLoopInfo;findLoopInfo(int32_t);;TR_LoopReplicator;0;0
findNodeInHierarchy;findNodeInHierarchy(class TR_RegionStructure *,int32_t);;TR_LoopReplicator;0;0
fixUpLoopEntry;fixUpLoopEntry(struct TR_LoopReplicator::LoopInfo *,TR::Block *);;TR_LoopReplicator;0;0
gatherBlocksToBeCloned;gatherBlocksToBeCloned(struct TR_LoopReplicator::LoopInfo *);;TR_LoopReplicator;0;0
gatherRestOfLoop;gatherRestOfLoop(class TR_RegionStructure *,TR::Block *,TR_Queue<TR::Block> &);;TR_LoopReplicator;0;0
gatherRestOfLoop;gatherRestOfLoop(class TR_RegionStructure *,TR_Queue<TR::Block> *);;TR_LoopReplicator;0;0
gatherTargets;gatherTargets(TR_Queue<TR::Block> &,TR_Queue<TR::Block> &,struct TR_LoopReplicator::LoopInfo *);;TR_LoopReplicator;0;0
getBlockFreq;getBlockFreq(TR::Block *);;TR_LoopReplicator;0;0
getScaledFreq;getScaledFreq(TR_ScratchList<TR::Block> &,TR::Block *);;TR_LoopReplicator;0;0
getSeedFreq;getSeedFreq(class TR_RegionStructure *);;TR_LoopReplicator;0;0
heuristics;heuristics(struct TR_LoopReplicator::LoopInfo *,_Bool);;TR_LoopReplicator;0;0
heuristics;heuristics(struct TR_LoopReplicator::LoopInfo *);;TR_LoopReplicator;0;0
isBackEdgeOrLoopExit;isBackEdgeOrLoopExit(TR::CFGEdge *,class TR_RegionStructure *,_Bool);;TR_LoopReplicator;0;0
isSwitchBlock;isSwitchBlock(TR::Block *);;TR_LoopReplicator;0;0
isWellFormedLoop;isWellFormedLoop(class TR_RegionStructure *,class TR_Structure *);;TR_LoopReplicator;0;0
logTrace;logTrace(struct TR_LoopReplicator::LoopInfo *);;TR_LoopReplicator;0;0
modifyLoops;modifyLoops();;TR_LoopReplicator;0;0
nextCandidate;nextCandidate(TR::Block *,class TR_RegionStructure *,_Bool);;TR_LoopReplicator;0;0
nextSuccessor;nextSuccessor(class TR_RegionStructure *,TR::Block **,TR::CFGEdge **);;TR_LoopReplicator;0;0
operator=;operator=(const class TR_LoopReplicator &);;TR_LoopReplicator;1;0
operator=;operator=(class TR_LoopReplicator &&);;TR_LoopReplicator;1;0
optDetailString;optDetailString();;TR_LoopReplicator;0;1
perform;perform();;TR_LoopReplicator;0;1
perform;perform(class TR_Structure *);;TR_LoopReplicator;0;0
predecessorsNotYetVisited;predecessorsNotYetVisited(class TR_RegionStructure *,class TR_StructureSubGraphNode *);;TR_LoopReplicator;0;0
processBlock;processBlock(TR::Block *,class TR_RegionStructure *,struct TR_LoopReplicator::LoopInfo *);;TR_LoopReplicator;0;0
replicateLoop;replicateLoop(class TR_RegionStructure *,class TR_StructureSubGraphNode *);;TR_LoopReplicator;0;0
searchList;searchList(TR::Block *,enum listType,struct TR_LoopReplicator::LoopInfo *);;TR_LoopReplicator;0;0
shouldReplicateWithHotInnerLoops;shouldReplicateWithHotInnerLoops(class TR_RegionStructure *,struct TR_LoopReplicator::LoopInfo *,TR_ScratchList<TR::Block> *);;TR_LoopReplicator;0;0
~TR_LoopReplicator;~TR_LoopReplicator();;TR_LoopReplicator;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoopVersioner.cpp
TR_LoopSpecializer;TR_LoopSpecializer(TR::OptimizationManager *);;TR_LoopSpecializer;0;0
TR_LoopSpecializer;TR_LoopSpecializer(class TR_LoopSpecializer &&);;TR_LoopSpecializer;1;0
TR_LoopSpecializer;TR_LoopSpecializer(const class TR_LoopSpecializer &);;TR_LoopSpecializer;1;0
TR_LoopVersioner;TR_LoopVersioner(const class TR_LoopVersioner &);;TR_LoopVersioner;1;0
TR_LoopVersioner;TR_LoopVersioner(class TR_LoopVersioner &&);;TR_LoopVersioner;1;0
TR_LoopVersioner;TR_LoopVersioner(TR::OptimizationManager *,_Bool,_Bool);;TR_LoopVersioner;0;0
asLoopVersioner;asLoopVersioner();;TR_LoopVersioner;0;1
boundCheckUsesUnchangedValue;boundCheckUsesUnchangedValue(TR::TreeTop *,TR::Node *,TR::SymbolReference *,class TR_RegionStructure *);;TR_LoopVersioner;0;0
buildAliasRefinementComparisonTrees;buildAliasRefinementComparisonTrees(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,TR_ScratchList<TR::Node> *,TR::Block *);;TR_LoopVersioner;0;1
buildArrayStoreCheckComparisonsTree;buildArrayStoreCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);;TR_LoopVersioner;0;0
buildBoundCheckComparisonsTree;buildBoundCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *,_Bool);;TR_LoopVersioner;0;0
buildCheckCastComparisonsTree;buildCheckCastComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);;TR_LoopVersioner;0;0
buildConditionalTree;buildConditionalTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *,SharedSparseBitVector &);;TR_LoopVersioner;0;0
buildDivCheckComparisonsTree;buildDivCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);;TR_LoopVersioner;0;0
buildIwrtbarComparisonsTree;buildIwrtbarComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);;TR_LoopVersioner;0;0
buildLoopInvariantTree;buildLoopInvariantTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,TR::Block *,TR::Block *);;TR_LoopVersioner;0;0
buildNullCheckComparisonsTree;buildNullCheckComparisonsTree(List<TR::Node> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);;TR_LoopVersioner;0;0
buildSpecializationTree;buildSpecializationTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<TR::Node> *,TR::Block *,TR::Block *,TR::SymbolReference **);;TR_LoopVersioner;0;0
buildSpineCheckComparisonsTree;buildSpineCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);;TR_LoopVersioner;0;0
canPredictIters;canPredictIters(class TR_RegionStructure *,const TR_ScratchList<TR::Block> &,_Bool &,TR::SymbolReference *&);;TR_LoopVersioner;0;0
checkProfiledGuardSuitability;checkProfiledGuardSuitability(TR_ScratchList<TR::Block> *,TR::Node *,TR::SymbolReference *,TR::Compilation *);;TR_LoopVersioner;0;0
collectAllExpressionsToBeChecked;collectAllExpressionsToBeChecked(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,TR::Node *,List<TR::Node> *,TR::Block *,vcount_t);;TR_LoopVersioner;0;0
collectArrayAliasCandidates;collectArrayAliasCandidates(TR::Node *,vcount_t);;TR_LoopVersioner;0;1
convertSpecializedLongsToInts;convertSpecializedLongsToInts(TR::Node *,vcount_t,TR::SymbolReference **);;TR_LoopVersioner;0;0
create;create(TR::OptimizationManager *);;TR_LoopVersioner;0;0
create;create(TR::OptimizationManager *);;TR_LoopSpecializer;0;0
createClonedHeader;createClonedHeader(TR::Block *,TR::TreeTop **);;TR_LoopVersioner;0;0
createEmptyGoto;createEmptyGoto(TR::Block *,TR::Block *,TR::TreeTop *);;TR_LoopVersioner;0;0
createSwitchNode;createSwitchNode(TR::Block *,TR::SymbolReference *,int32_t);;TR_LoopVersioner;0;0
detectCanonicalizedPredictableLoops;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);;TR_LoopVersioner;0;1
detectChecksToBeEliminated;detectChecksToBeEliminated(class TR_RegionStructure *,List<TR::Node> *,List<TR::TreeTop> *,List<int32_t> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<int32_t> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,_Bool &);;TR_LoopVersioner;0;0
detectInvariantArrayStoreChecks;detectInvariantArrayStoreChecks(List<TR::TreeTop> *);;TR_LoopVersioner;0;0
detectInvariantBoundChecks;detectInvariantBoundChecks(List<TR::TreeTop> *);;TR_LoopVersioner;0;0
detectInvariantChecks;detectInvariantChecks(List<TR::Node> *,List<TR::TreeTop> *);;TR_LoopVersioner;0;0
detectInvariantDivChecks;detectInvariantDivChecks(List<TR::TreeTop> *);;TR_LoopVersioner;0;0
detectInvariantIwrtbars;detectInvariantIwrtbars(List<TR::TreeTop> *);;TR_LoopVersioner;0;0
detectInvariantNodes;detectInvariantNodes(List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *);;TR_LoopVersioner;0;0
detectInvariantSpecializedExprs;detectInvariantSpecializedExprs(List<TR::Node> *);;TR_LoopVersioner;0;0
detectInvariantSpineChecks;detectInvariantSpineChecks(List<TR::TreeTop> *);;TR_LoopVersioner;0;0
detectInvariantTrees;detectInvariantTrees(class TR_RegionStructure *,List<TR::TreeTop> *,_Bool,_Bool *,SharedSparseBitVector &);;TR_LoopVersioner;0;0
findAndReplaceContigArrayLen;findAndReplaceContigArrayLen(TR::Node *,TR::Node *,vcount_t);;TR_LoopVersioner;0;0
findCallNodeInBlockForGuard;findCallNodeInBlockForGuard(TR::Node *);;TR_LoopVersioner;0;0
findLoad;findLoad(TR::Node *,TR::SymbolReference *,vcount_t);;TR_LoopVersioner;0;0
findStore;findStore(TR::TreeTop *,TR::TreeTop *,TR::Node *,TR::SymbolReference *,_Bool,_Bool);;TR_LoopVersioner;0;0
fixupVirtualGuardTargets;fixupVirtualGuardTargets(struct VirtualGuardInfo *);;TR_LoopVersioner;0;0
getCurrentBlock;getCurrentBlock(TR::Block *);;TR_LoopVersioner;0;0
hasWrtbarBeenSeen;hasWrtbarBeenSeen(List<TR::TreeTop> *,TR::Node *);;TR_LoopVersioner;0;0
initAdditionalDataStructures;initAdditionalDataStructures();;TR_LoopVersioner;0;1
isBranchSuitableToDoLoopTransfer;isBranchSuitableToDoLoopTransfer(TR_ScratchList<TR::Block> *,TR::Node *,TR::Compilation *);;TR_LoopVersioner;0;0
isBranchSuitableToVersion;isBranchSuitableToVersion(TR_ScratchList<TR::Block> *,TR::Node *,TR::Compilation *);;TR_LoopVersioner;0;0
isConditionalTreeCandidateForElimination;isConditionalTreeCandidateForElimination(TR::TreeTop *);;TR_LoopVersioner;0;0
isDependentOnAllocation;isDependentOnAllocation(TR::Node *,int32_t);;TR_LoopVersioner;0;0
isDependentOnInductionVariable;isDependentOnInductionVariable(TR::Node *,_Bool,_Bool &,TR::Node *&,TR::Node *&,_Bool &);;TR_LoopVersioner;0;0
isDependentOnInvariant;isDependentOnInvariant(TR::Node *);;TR_LoopVersioner;0;0
isExprInvariant;isExprInvariant(TR::Node *,_Bool);;TR_LoopVersioner;0;0
isExprInvariantRecursive;isExprInvariantRecursive(TR::Node *,_Bool);;TR_LoopVersioner;0;0
isInverseConversions;isInverseConversions(TR::Node *);;TR_LoopVersioner;0;0
isStoreInRequiredForm;isStoreInRequiredForm(int32_t,class TR_Structure *);;TR_LoopVersioner;0;1
isStoreInSpecialForm;isStoreInSpecialForm(int32_t,class TR_Structure *);;TR_LoopVersioner;0;0
isVersionableArrayAccess;isVersionableArrayAccess(TR::Node *);;TR_LoopVersioner;0;0
loopIsWorthVersioning;loopIsWorthVersioning(class TR_RegionStructure *);;TR_LoopVersioner;0;0
operator=;operator=(const class TR_LoopVersioner &);;TR_LoopVersioner;1;0
operator=;operator=(class TR_LoopVersioner &&);;TR_LoopVersioner;1;0
operator=;operator=(class TR_LoopSpecializer &&);;TR_LoopSpecializer;1;0
operator=;operator=(const class TR_LoopSpecializer &);;TR_LoopSpecializer;1;0
optDetailString;optDetailString();;TR_LoopVersioner;0;1
optDetailString;optDetailString();;TR_LoopSpecializer;0;1
perform;perform();;TR_LoopVersioner;0;1
performLoopTransfer;performLoopTransfer();;TR_LoopVersioner;0;0
performWithDominators;performWithDominators();;TR_LoopVersioner;0;0
performWithoutDominators;performWithoutDominators();;TR_LoopVersioner;0;0
processArrayAliasCandidates;processArrayAliasCandidates();;TR_LoopVersioner;0;1
recordCurrentBlock;recordCurrentBlock(TR::Block *);;TR_LoopVersioner;0;0
refineAliases;refineAliases();;TR_LoopVersioner;0;0
refineArrayAliases;refineArrayAliases(class TR_RegionStructure *);;TR_LoopVersioner;0;1
replaceInductionVariable;replaceInductionVariable(TR::Node *,TR::Node *,int,int,TR::Node *,int);;TR_LoopVersioner;0;0
setOnlySpecializeLoops;setOnlySpecializeLoops(_Bool);;TR_LoopVersioner;0;0
shouldOnlySpecializeLoops;shouldOnlySpecializeLoops();;TR_LoopVersioner;0;0
updateDefinitionsAndCollectProfiledExprs;updateDefinitionsAndCollectProfiledExprs(TR::Node *,TR::Node *,vcount_t,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,TR::Node *,_Bool,TR::Block *,int32_t);;TR_LoopVersioner;0;0
versionNaturalLoop;versionNaturalLoop(class TR_RegionStructure *,List<TR::Node> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,List<class TR_Structure> *,List<class TR_Structure> *,_Bool,SharedSparseBitVector &);;TR_LoopVersioner;0;0
~TR_LoopSpecializer;~TR_LoopSpecializer();;TR_LoopSpecializer;1;1
~TR_LoopVersioner;~TR_LoopVersioner();;TR_LoopVersioner;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRLocalCSE.cpp
LocalCSE;LocalCSE(class OMR::LocalCSE &&);OMR;LocalCSE;1;0
LocalCSE;LocalCSE(const class OMR::LocalCSE &);OMR;LocalCSE;1;0
LocalCSE;LocalCSE(TR::OptimizationManager *);OMR;LocalCSE;0;0
LocalCSE;LocalCSE(TR::OptimizationManager *);TR;LocalCSE;0;0
LocalCSE;LocalCSE(class TR::LocalCSE &&);TR;LocalCSE;1;0
LocalCSE;LocalCSE(const class TR::LocalCSE &);TR;LocalCSE;1;0
addToHashTable;addToHashTable(TR::Node *,int32_t);OMR;LocalCSE;0;0
allowNodeTypes;allowNodeTypes(TR::Node *,TR::Node *);OMR;LocalCSE;0;0
areSyntacticallyEquivalent;areSyntacticallyEquivalent(TR::Node *,TR::Node *,_Bool *);OMR;LocalCSE;0;0
canAffordToIncreaseRegisterPressure;canAffordToIncreaseRegisterPressure(TR::Node *);OMR;LocalCSE;0;1
canBeAvailable;canBeAvailable(TR::Node *,TR::Node *,class TR_BitVector &,_Bool);OMR;LocalCSE;0;0
collectAllReplacedNodes;collectAllReplacedNodes(TR::Node *,TR::Node *);OMR;LocalCSE;0;0
commonNode;commonNode(TR::Node *,int32_t,TR::Node *,TR::Node *);OMR;LocalCSE;0;0
create;create(TR::OptimizationManager *);OMR;LocalCSE;0;0
doCommoningAgainIfPreviouslyCommoned;doCommoningAgainIfPreviouslyCommoned(TR::Node *,TR::Node *,int32_t);OMR;LocalCSE;0;0
doCommoningIfAvailable;doCommoningIfAvailable(TR::Node *,TR::Node *,int32_t,_Bool &);OMR;LocalCSE;0;0
doCopyPropagationIfPossible;doCopyPropagationIfPossible(TR::Node *,TR::Node *,int32_t,TR::Node *,TR::SymbolReference *,vcount_t,_Bool &);OMR;LocalCSE;0;0
doExtraPassForVolatiles;doExtraPassForVolatiles();OMR;LocalCSE;0;0
examineNode;examineNode(TR::Node *,class TR_BitVector &,TR::Node *,int32_t,int32_t *,_Bool *,int32_t);OMR;LocalCSE;0;0
getAvailableExpression;getAvailableExpression(TR::Node *,TR::Node *);OMR;LocalCSE;0;0
getNode;getNode(TR::Node *);OMR;LocalCSE;0;0
getNumberOfNodes;getNumberOfNodes(TR::Node *);OMR;LocalCSE;0;0
hash;hash(TR::Node *,TR::Node *);OMR;LocalCSE;0;0
isAvailableNullCheck;isAvailableNullCheck(TR::Node *,class TR_BitVector &);OMR;LocalCSE;0;0
isFirstReferenceToNode;isFirstReferenceToNode(TR::Node *,int32_t,TR::Node *,vcount_t);OMR;LocalCSE;0;0
isIfAggrToBCDOverride;isIfAggrToBCDOverride(TR::Node *,TR::Node *,TR::Node *);OMR;LocalCSE;0;0
isTreetopSafeToCommon;isTreetopSafeToCommon();OMR;LocalCSE;0;1
killAllAvailableExpressions;killAllAvailableExpressions();OMR;LocalCSE;0;0
killAllDataStructures;killAllDataStructures(class TR_BitVector &);OMR;LocalCSE;0;0
killAllInternalPointersBasedOnThisPinningArray;killAllInternalPointersBasedOnThisPinningArray(TR::SymbolReference *);OMR;LocalCSE;0;0
killAvailableExpressions;killAvailableExpressions(int32_t);OMR;LocalCSE;0;0
killAvailableExpressionsAtGCSafePoints;killAvailableExpressionsAtGCSafePoints(TR::Node *,TR::Node *,class TR_BitVector &);OMR;LocalCSE;0;0
killAvailableExpressionsUsingAliases;killAvailableExpressionsUsingAliases(class TR_BitVector &);OMR;LocalCSE;0;0
killAvailableExpressionsUsingAliases;killAvailableExpressionsUsingAliases(struct TR_NodeKillAliasSetInterface &);OMR;LocalCSE;0;0
killAvailableExpressionsUsingBitVector;killAvailableExpressionsUsingBitVector(HashTable *,class TR_BitVector &);OMR;LocalCSE;0;0
killExpressionsIfVolatileLoad;killExpressionsIfVolatileLoad(TR::Node *,class TR_BitVector &,struct TR_NodeKillAliasSetInterface &);OMR;LocalCSE;0;0
makeNodeAvailableForCommoning;makeNodeAvailableForCommoning(TR::Node *,TR::Node *,class TR_BitVector &,_Bool *);OMR;LocalCSE;0;0
onNewTreeTop;onNewTreeTop(TR::TreeTop *);OMR;LocalCSE;0;1
operator=;operator=(class OMR::LocalCSE &&);OMR;LocalCSE;1;0
operator=;operator=(const class OMR::LocalCSE &);OMR;LocalCSE;1;0
operator=;operator=(const class TR::LocalCSE &);TR;LocalCSE;1;0
operator=;operator=(class TR::LocalCSE &&);TR;LocalCSE;1;0
optDetailString;optDetailString();OMR;LocalCSE;0;1
perform;perform();OMR;LocalCSE;0;1
performOnBlock;performOnBlock(TR::Block *);OMR;LocalCSE;0;1
postPerformOnBlocks;postPerformOnBlocks();OMR;LocalCSE;0;1
prePerformOnBlocks;prePerformOnBlocks();OMR;LocalCSE;0;1
prepareToCopyPropagate;prepareToCopyPropagate(TR::Node *,TR::Node *);OMR;LocalCSE;0;1
recursivelyIncReferenceCount;recursivelyIncReferenceCount(TR::Node *);OMR;LocalCSE;0;0
removeFromHashTable;removeFromHashTable(HashTable *,int32_t);OMR;LocalCSE;0;0
replaceCopySymbolReferenceByOriginalIn;replaceCopySymbolReferenceByOriginalIn(TR::SymbolReference *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,int32_t);OMR;LocalCSE;0;0
setIsInMemoryCopyPropFlag;setIsInMemoryCopyPropFlag(TR::Node *);OMR;LocalCSE;0;0
shouldCommonNode;shouldCommonNode(TR::Node *,TR::Node *);OMR;LocalCSE;0;1
shouldCopyPropagateNode;shouldCopyPropagateNode(TR::Node *,TR::Node *,int32_t,TR::Node *);OMR;LocalCSE;0;1
shouldTransformBlock;shouldTransformBlock(TR::Block *);OMR;LocalCSE;0;1
transformBlock;transformBlock(TR::TreeTop *,TR::TreeTop *);OMR;LocalCSE;0;0
~LocalCSE;~LocalCSE();OMR;LocalCSE;1;1
~LocalCSE;~LocalCSE();TR;LocalCSE;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalDeadStoreElimination.cpp
LocalDeadStoreElimination;LocalDeadStoreElimination(const class TR::LocalDeadStoreElimination &);TR;LocalDeadStoreElimination;1;0
LocalDeadStoreElimination;LocalDeadStoreElimination(class TR::LocalDeadStoreElimination &&);TR;LocalDeadStoreElimination;1;0
LocalDeadStoreElimination;LocalDeadStoreElimination(TR::OptimizationManager *);TR;LocalDeadStoreElimination;0;0
adjustStoresInfo;adjustStoresInfo(TR::Node *,class TR_BitVector &);TR;LocalDeadStoreElimination;0;0
areLhsOfStoresSyntacticallyEquivalent;areLhsOfStoresSyntacticallyEquivalent(TR::Node *,TR::Node *);TR;LocalDeadStoreElimination;0;0
create;create(TR::OptimizationManager *);TR;LocalDeadStoreElimination;0;0
eliminateDeadObjectInitializations;eliminateDeadObjectInitializations();TR;LocalDeadStoreElimination;0;0
examineNewUsesForKill;examineNewUsesForKill(TR::Node *,TR::Node *,List<TR::Node> *,List<TR::Node> *,TR::Node *,int32_t,vcount_t);TR;LocalDeadStoreElimination;0;0
examineNode;examineNode(TR::Node *,int32_t,TR::Node *,class TR_BitVector &);TR;LocalDeadStoreElimination;0;0
findLocallyAllocatedObjectUses;findLocallyAllocatedObjectUses(LDSBitVector &,TR::Node *,int32_t,TR::Node *,vcount_t);TR;LocalDeadStoreElimination;0;0
getAnchorNode;getAnchorNode(TR::Node *,int32_t,TR::Node *,TR::TreeTop *,TR::NodeChecklist &);TR;LocalDeadStoreElimination;0;0
isEntireNodeRemovable;isEntireNodeRemovable(TR::Node *);TR;LocalDeadStoreElimination;0;0
isFirstReferenceToNode;isFirstReferenceToNode(TR::Node *,int32_t,TR::Node *);TR;LocalDeadStoreElimination;0;0
isIdentityStore;isIdentityStore(TR::Node *);TR;LocalDeadStoreElimination;0;0
isNonRemovableStore;isNonRemovableStore(TR::Node *,_Bool &);TR;LocalDeadStoreElimination;0;1
killStoreNodes;killStoreNodes(TR::Node *);TR;LocalDeadStoreElimination;0;0
operator=;operator=(class TR::LocalDeadStoreElimination &&);TR;LocalDeadStoreElimination;1;0
operator=;operator=(const class TR::LocalDeadStoreElimination &);TR;LocalDeadStoreElimination;1;0
optDetailString;optDetailString();TR;LocalDeadStoreElimination;0;1
perform;perform();TR;LocalDeadStoreElimination;0;1
performOnBlock;performOnBlock(TR::Block *);TR;LocalDeadStoreElimination;0;1
postPerformOnBlocks;postPerformOnBlocks();TR;LocalDeadStoreElimination;0;1
prePerformOnBlocks;prePerformOnBlocks();TR;LocalDeadStoreElimination;0;1
removeStoreTree;removeStoreTree(TR::TreeTop *);TR;LocalDeadStoreElimination;0;0
seenIdenticalStore;seenIdenticalStore(TR::Node *);TR;LocalDeadStoreElimination;0;0
self;self();TR;LocalDeadStoreElimination;0;0
setExternalReferenceCountToTree;setExternalReferenceCountToTree(TR::Node *,rcount_t *);TR;LocalDeadStoreElimination;0;0
setIsFirstReferenceToNode;setIsFirstReferenceToNode(TR::Node *,int32_t,TR::Node *);TR;LocalDeadStoreElimination;0;0
setupReferenceCounts;setupReferenceCounts(TR::Node *);TR;LocalDeadStoreElimination;0;0
transformBlock;transformBlock(TR::TreeTop *,TR::TreeTop *);TR;LocalDeadStoreElimination;0;0
~LocalDeadStoreElimination;~LocalDeadStoreElimination();TR;LocalDeadStoreElimination;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalOpts.cpp
TR_ArraysetStoreElimination;TR_ArraysetStoreElimination(const class TR_ArraysetStoreElimination &);;TR_ArraysetStoreElimination;1;0
TR_ArraysetStoreElimination;TR_ArraysetStoreElimination(TR::OptimizationManager *);;TR_ArraysetStoreElimination;0;0
TR_ArraysetStoreElimination;TR_ArraysetStoreElimination(class TR_ArraysetStoreElimination &&);;TR_ArraysetStoreElimination;1;0
create;create(TR::OptimizationManager *);;TR_ArraysetStoreElimination;0;0
operator=;operator=(const class TR_ArraysetStoreElimination &);;TR_ArraysetStoreElimination;1;0
operator=;operator=(class TR_ArraysetStoreElimination &&);;TR_ArraysetStoreElimination;1;0
optDetailString;optDetailString();;TR_ArraysetStoreElimination;0;1
optimizeArraysetIfPossible;optimizeArraysetIfPossible(TR::Node *,TR::Node *,TR::TreeTop *,TR::Node *,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,vcount_t,TR::TreeTop *);;TR_ArraysetStoreElimination;0;0
perform;perform();;TR_ArraysetStoreElimination;0;1
performOnBlock;performOnBlock(TR::Block *);;TR_ArraysetStoreElimination;0;1
process;process(TR::TreeTop *,TR::TreeTop *);;TR_ArraysetStoreElimination;0;0
reduceArraysetStores;reduceArraysetStores(TR::Block *,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *);;TR_ArraysetStoreElimination;0;0
~TR_ArraysetStoreElimination;~TR_ArraysetStoreElimination();;TR_ArraysetStoreElimination;1;1
~AllBlockIterator;~AllBlockIterator();TR;AllBlockIterator;1;0
TR_BlockManipulator;TR_BlockManipulator(class TR_BlockManipulator &&);;TR_BlockManipulator;1;0
TR_BlockManipulator;TR_BlockManipulator(const class TR_BlockManipulator &);;TR_BlockManipulator;1;0
TR_BlockManipulator;TR_BlockManipulator(TR::OptimizationManager *);;TR_BlockManipulator;0;0
TR_CleanseTrees;TR_CleanseTrees(class TR_CleanseTrees &&);;TR_CleanseTrees;1;0
TR_CleanseTrees;TR_CleanseTrees(TR::OptimizationManager *);;TR_CleanseTrees;0;0
TR_CleanseTrees;TR_CleanseTrees(const class TR_CleanseTrees &);;TR_CleanseTrees;1;0
breakFallThrough;breakFallThrough(TR::Block *,TR::Block *,_Bool);;TR_BlockManipulator;0;0
countNumberOfTreesInSameExtendedBlock;countNumberOfTreesInSameExtendedBlock(TR::Block *);;TR_BlockManipulator;0;0
create;create(TR::OptimizationManager *);;TR_CleanseTrees;0;0
estimatedHotness;estimatedHotness(TR::CFGEdge *,TR::Block *);;TR_BlockManipulator;0;0
getBestChoiceForExtension;getBestChoiceForExtension(TR::Block *);;TR_BlockManipulator;0;0
isBestChoiceForFallThrough;isBestChoiceForFallThrough(TR::Block *,TR::Block *);;TR_BlockManipulator;0;0
operator=;operator=(const class TR_BlockManipulator &);;TR_BlockManipulator;1;0
operator=;operator=(class TR_BlockManipulator &&);;TR_BlockManipulator;1;0
operator=;operator=(const class TR_CleanseTrees &);;TR_CleanseTrees;1;0
operator=;operator=(class TR_CleanseTrees &&);;TR_CleanseTrees;1;0
optDetailString;optDetailString();;TR_CleanseTrees;0;1
perform;perform();;TR_CleanseTrees;0;1
performChecksAndTreesMovement;performChecksAndTreesMovement(TR::Block *,TR::Block *,TR::Block *,TR::TreeTop *,vcount_t,TR::Optimizer *);;TR_BlockManipulator;0;0
performOnBlock;performOnBlock(TR::Block *);;TR_CleanseTrees;0;1
prePerformOnBlocks;prePerformOnBlocks();;TR_CleanseTrees;0;1
process;process(TR::TreeTop *,TR::TreeTop *);;TR_CleanseTrees;0;0
~TR_BlockManipulator;~TR_BlockManipulator();;TR_BlockManipulator;1;1
~TR_CleanseTrees;~TR_CleanseTrees();;TR_CleanseTrees;1;1
TR_BlockOrderingOptimization;TR_BlockOrderingOptimization(const class TR_BlockOrderingOptimization &);;TR_BlockOrderingOptimization;1;0
TR_BlockOrderingOptimization;TR_BlockOrderingOptimization(class TR_BlockOrderingOptimization &&);;TR_BlockOrderingOptimization;1;0
TR_BlockOrderingOptimization;TR_BlockOrderingOptimization(TR::OptimizationManager *);;TR_BlockOrderingOptimization;0;0
TR_BlockShuffling;TR_BlockShuffling(class TR_BlockShuffling &&);;TR_BlockShuffling;1;0
TR_BlockShuffling;TR_BlockShuffling(const class TR_BlockShuffling &);;TR_BlockShuffling;1;0
TR_BlockShuffling;TR_BlockShuffling(TR::OptimizationManager *);;TR_BlockShuffling;0;0
allocateBlockArray;allocateBlockArray();;TR_BlockShuffling;0;0
applyBlockOrder;applyBlockOrder(TR::Block **);;TR_BlockShuffling;0;0
connectTreesAccordingToOrder;connectTreesAccordingToOrder(TR_BlockList &);;TR_BlockOrderingOptimization;0;0
create;create(TR::OptimizationManager *);;TR_BlockShuffling;0;0
dumpBlockOrdering;dumpBlockOrdering(TR::TreeTop *,char *);;TR_BlockOrderingOptimization;0;0
insertGotoFallThroughBlock;insertGotoFallThroughBlock(TR::TreeTop *,TR::Node *,TR::CFGNode *,TR::CFGNode *,class TR_RegionStructure *);;TR_BlockOrderingOptimization;0;0
operator=;operator=(class TR_BlockOrderingOptimization &&);;TR_BlockOrderingOptimization;1;0
operator=;operator=(const class TR_BlockOrderingOptimization &);;TR_BlockOrderingOptimization;1;0
operator=;operator=(class TR_BlockShuffling &&);;TR_BlockShuffling;1;0
operator=;operator=(const class TR_BlockShuffling &);;TR_BlockShuffling;1;0
optDetailString;optDetailString();;TR_BlockShuffling;0;1
perform;perform();;TR_BlockShuffling;0;1
reverse;reverse(TR::Block **);;TR_BlockShuffling;0;0
riffle;riffle(TR::Block **);;TR_BlockShuffling;0;0
scramble;scramble(TR::Block **);;TR_BlockShuffling;0;0
swap;swap(TR::Block **,int32_t,int32_t);;TR_BlockShuffling;0;0
traceBlocks;traceBlocks(TR::Block **);;TR_BlockShuffling;0;0
~TR_BlockOrderingOptimization;~TR_BlockOrderingOptimization();;TR_BlockOrderingOptimization;1;1
~TR_BlockShuffling;~TR_BlockShuffling();;TR_BlockShuffling;1;1
TR_BlockSplitter;TR_BlockSplitter(const class TR_BlockSplitter &);;TR_BlockSplitter;1;0
TR_BlockSplitter;TR_BlockSplitter(TR::OptimizationManager *);;TR_BlockSplitter;0;0
TR_BlockSplitter;TR_BlockSplitter(class TR_BlockSplitter &&);;TR_BlockSplitter;1;0
calculateBlockSplitScore;calculateBlockSplitScore(struct TR_BlockSplitter::Synergy &);;TR_BlockSplitter;0;0
containCycle;containCycle(TR::Block *,TR_LinkHeadAndTail<struct BlockMapper> *);;TR_BlockSplitter;0;0
create;create(TR::OptimizationManager *);;TR_BlockSplitter;0;0
disableSynergy;disableSynergy();;TR_BlockSplitter;0;0
dumpBlockMapper;dumpBlockMapper(TR_LinkHeadAndTail<struct BlockMapper> *);;TR_BlockSplitter;0;0
dumpSynergies;dumpSynergies(TR_Array<struct TR_BlockSplitter::Synergy> *);;TR_BlockSplitter;0;0
getParentStructure;getParentStructure(TR::Block *);;TR_BlockSplitter;0;0
hasIVUpdate;hasIVUpdate(TR::Block *);;TR_BlockSplitter;0;0
hasLoopAsyncCheck;hasLoopAsyncCheck(TR::Block *);;TR_BlockSplitter;0;0
heapElementQuickSort;heapElementQuickSort(TR_Array<class TR_BlockSplitter::TR_IndexedBinaryHeapElement *> *,int32_t,int32_t);;TR_BlockSplitter;0;0
isExitEdge;isExitEdge(TR::Block *,TR::Block *);;TR_BlockSplitter;0;0
isLoopHeader;isLoopHeader(TR::Block *);;TR_BlockSplitter;0;0
operator=;operator=(const class TR_BlockSplitter &);;TR_BlockSplitter;1;0
operator=;operator=(class TR_BlockSplitter &&);;TR_BlockSplitter;1;0
optDetailString;optDetailString();;TR_BlockSplitter;0;1
perform;perform();;TR_BlockSplitter;0;1
processNode;processNode(TR::Node *,int32_t,TR_Array<uint32_t> *,TR_Array<struct TR_BlockSplitter::Synergy> *);;TR_BlockSplitter;0;0
pruneAndPopulateBlockMapper;pruneAndPopulateBlockMapper(TR_LinkHeadAndTail<struct BlockMapper> *,int32_t);;TR_BlockSplitter;0;0
quickSortSwap;quickSortSwap(TR_Array<class TR_BlockSplitter::TR_IndexedBinaryHeapElement *> *,int32_t,int32_t);;TR_BlockSplitter;0;0
splitBlock;splitBlock(TR::Block *,TR_LinkHeadAndTail<struct BlockMapper> *);;TR_BlockSplitter;0;0
synergisticDepthCalculator;synergisticDepthCalculator(TR_LinkHeadAndTail<struct BlockMapper> *,TR::Block *);;TR_BlockSplitter;0;0
~TR_BlockSplitter;~TR_BlockSplitter();;TR_BlockSplitter;1;1
TR_Array<T>;TR_Array<T>(const TR_Array<T> &);;TR_Array;0;0
TR_Array<T>;TR_Array<T>(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);;TR_Array;0;0
TR_Array<T>;TR_Array<T>();;TR_Array;0;0
TR_Array<T>;TR_Array<T>(class TR_Memory *,uint32_t,_Bool,enum TR_AllocationKind);;TR_Array;0;0
TR_Array<T>;TR_Array<T>(class TR_PersistentMemory *,uint32_t,_Bool);;TR_Array;0;0
TR_BinaryHeap;TR_BinaryHeap(const class TR_BlockSplitter::TR_BinaryHeap &);TR_BlockSplitter;TR_BinaryHeap;1;0
TR_BinaryHeap;TR_BinaryHeap(class TR_BlockSplitter::TR_BinaryHeap &&);TR_BlockSplitter;TR_BinaryHeap;1;0
TR_BinaryHeap;TR_BinaryHeap(class TR_Memory *,uint32_t);TR_BlockSplitter;TR_BinaryHeap;0;0
add;add(T);;TR_Array;0;0
add;add(class TR_BlockSplitter::TR_IndexedBinaryHeapElement *);TR_BlockSplitter;TR_BinaryHeap;0;0
allocationKind;allocationKind();;TR_Array;0;0
append;append(const TR_Array<T> &);;TR_Array;0;0
clear;clear();;TR_Array;0;0
contains;contains(T);;TR_Array;0;0
copy;copy(const TR_Array<T> &);;TR_Array;0;0
dumpList;dumpList(TR::Compilation *);TR_BlockSplitter;TR_BinaryHeap;0;0
element;element(uint32_t);;TR_Array;0;0
free;free();;TR_Array;0;0
freeMemory;freeMemory();;TR_Array;0;0
getMaxSize;getMaxSize();TR_BlockSplitter;TR_BinaryHeap;0;0
getMin;getMin();TR_BlockSplitter;TR_BinaryHeap;0;0
growTo;growTo(uint32_t);;TR_Array;0;0
init;init(class TR_Memory *,class TR_PersistentMemory *,uint32_t,_Bool,enum TR_AllocationKind);;TR_Array;0;0
init;init(class TR_Memory *,uint32_t,_Bool,enum TR_AllocationKind);;TR_Array;0;0
insert;insert(T,uint32_t);;TR_Array;0;0
internalSize;internalSize();;TR_Array;0;0
isEmpty;isEmpty();;TR_Array;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_Array;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_Array;0;0
lastIndex;lastIndex();;TR_Array;0;0
operator delete;operator delete(void *,TR::Region &);;TR_Array;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_Array;0;0
operator delete;operator delete(void *,size_t);;TR_Array;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Array;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Array;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Array;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_Array;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_Array;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Array;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Array;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Array;0;0
operator new;operator new(size_t,TR::Region &);;TR_Array;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_Array;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Array;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_Array;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_Array;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Array;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_Array;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_Array;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Array;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_Array;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Array;0;0
operator=;operator=(const TR_Array<T> &);;TR_Array;0;0
operator=;operator=(class TR_BlockSplitter::TR_BinaryHeap &&);TR_BlockSplitter;TR_BinaryHeap;1;0
operator[];operator[](uint32_t);;TR_Array;0;0
remove;remove(uint32_t);;TR_Array;0;0
remove;remove(class TR_BlockSplitter::TR_IndexedBinaryHeapElement *);TR_BlockSplitter;TR_BinaryHeap;0;0
removeMin;removeMin();TR_BlockSplitter;TR_BinaryHeap;0;0
setMaxSize;setMaxSize(uint32_t);TR_BlockSplitter;TR_BinaryHeap;0;0
setSize;setSize(uint32_t);;TR_Array;0;0
size;size();;TR_Array;0;0
trMemory;trMemory();;TR_Array;0;0
TR_CheckcastAndProfiledGuardCoalescer;TR_CheckcastAndProfiledGuardCoalescer(class TR_CheckcastAndProfiledGuardCoalescer &&);;TR_CheckcastAndProfiledGuardCoalescer;1;0
TR_CheckcastAndProfiledGuardCoalescer;TR_CheckcastAndProfiledGuardCoalescer(TR::OptimizationManager *);;TR_CheckcastAndProfiledGuardCoalescer;0;0
TR_CheckcastAndProfiledGuardCoalescer;TR_CheckcastAndProfiledGuardCoalescer(const class TR_CheckcastAndProfiledGuardCoalescer &);;TR_CheckcastAndProfiledGuardCoalescer;1;0
create;create(TR::OptimizationManager *);;TR_CheckcastAndProfiledGuardCoalescer;0;0
doBasicCase;doBasicCase(TR::TreeTop *,TR::TreeTop *);;TR_CheckcastAndProfiledGuardCoalescer;0;0
operator=;operator=(const class TR_CheckcastAndProfiledGuardCoalescer &);;TR_CheckcastAndProfiledGuardCoalescer;1;0
operator=;operator=(class TR_CheckcastAndProfiledGuardCoalescer &&);;TR_CheckcastAndProfiledGuardCoalescer;1;0
optDetailString;optDetailString();;TR_CheckcastAndProfiledGuardCoalescer;0;1
perform;perform();;TR_CheckcastAndProfiledGuardCoalescer;0;1
storeObjectInATemporary;storeObjectInATemporary(TR::TreeTop *);;TR_CheckcastAndProfiledGuardCoalescer;0;0
~TR_CheckcastAndProfiledGuardCoalescer;~TR_CheckcastAndProfiledGuardCoalescer();;TR_CheckcastAndProfiledGuardCoalescer;1;1
TR_ColdBlockMarker;TR_ColdBlockMarker(const class TR_ColdBlockMarker &);;TR_ColdBlockMarker;1;0
TR_ColdBlockMarker;TR_ColdBlockMarker(TR::OptimizationManager *);;TR_ColdBlockMarker;0;0
TR_ColdBlockMarker;TR_ColdBlockMarker(class TR_ColdBlockMarker &&);;TR_ColdBlockMarker;1;0
TR_ColdBlockOutlining;TR_ColdBlockOutlining(class TR_ColdBlockOutlining &&);;TR_ColdBlockOutlining;1;0
TR_ColdBlockOutlining;TR_ColdBlockOutlining(const class TR_ColdBlockOutlining &);;TR_ColdBlockOutlining;1;0
TR_ColdBlockOutlining;TR_ColdBlockOutlining(TR::OptimizationManager *);;TR_ColdBlockOutlining;0;0
create;create(TR::OptimizationManager *);;TR_ColdBlockMarker;0;0
create;create(TR::OptimizationManager *);;TR_ColdBlockOutlining;0;0
hasAnyExistingColdBlocks;hasAnyExistingColdBlocks();;TR_ColdBlockMarker;0;0
hasNotYetRun;hasNotYetRun(TR::Node *);;TR_ColdBlockMarker;0;0
identifyColdBlocks;identifyColdBlocks();;TR_ColdBlockMarker;0;0
initialize;initialize();;TR_ColdBlockMarker;0;0
isBlockCold;isBlockCold(TR::Block *);;TR_ColdBlockMarker;0;0
operator=;operator=(class TR_ColdBlockMarker &&);;TR_ColdBlockMarker;1;0
operator=;operator=(const class TR_ColdBlockMarker &);;TR_ColdBlockMarker;1;0
operator=;operator=(class TR_ColdBlockOutlining &&);;TR_ColdBlockOutlining;1;0
operator=;operator=(const class TR_ColdBlockOutlining &);;TR_ColdBlockOutlining;1;0
optDetailString;optDetailString();;TR_ColdBlockMarker;0;1
optDetailString;optDetailString();;TR_ColdBlockOutlining;0;1
perform;perform();;TR_ColdBlockMarker;0;1
perform;perform();;TR_ColdBlockOutlining;0;1
reorderColdBlocks;reorderColdBlocks();;TR_ColdBlockOutlining;0;0
~TR_ColdBlockMarker;~TR_ColdBlockMarker();;TR_ColdBlockMarker;1;1
~TR_ColdBlockOutlining;~TR_ColdBlockOutlining();;TR_ColdBlockOutlining;1;1
TR_CompactNullChecks;TR_CompactNullChecks(class TR_CompactNullChecks &&);;TR_CompactNullChecks;1;0
TR_CompactNullChecks;TR_CompactNullChecks(TR::OptimizationManager *);;TR_CompactNullChecks;0;0
TR_CompactNullChecks;TR_CompactNullChecks(const class TR_CompactNullChecks &);;TR_CompactNullChecks;1;0
compactNullChecks;compactNullChecks(TR::Block *,class TR_BitVector *);;TR_CompactNullChecks;0;0
create;create(TR::OptimizationManager *);;TR_CompactNullChecks;0;0
operator=;operator=(class TR_CompactNullChecks &&);;TR_CompactNullChecks;1;0
operator=;operator=(const class TR_CompactNullChecks &);;TR_CompactNullChecks;1;0
optDetailString;optDetailString();;TR_CompactNullChecks;0;1
perform;perform();;TR_CompactNullChecks;0;1
performOnBlock;performOnBlock(TR::Block *);;TR_CompactNullChecks;0;1
process;process(TR::TreeTop *,TR::TreeTop *);;TR_CompactNullChecks;0;0
replaceNullCheckIfPossible;replaceNullCheckIfPossible(TR::Node *,TR::Node *,TR::Node *,TR::Node *,class TR_BitVector *,vcount_t,vcount_t,_Bool &);;TR_CompactNullChecks;0;0
replacePassThroughIfPossible;replacePassThroughIfPossible(TR::Node *,TR::Node *,TR::Node *,TR::Node *,_Bool *,class TR_BitVector *,vcount_t,vcount_t,TR::TreeTop *);;TR_CompactNullChecks;0;0
~TR_CompactNullChecks;~TR_CompactNullChecks();;TR_CompactNullChecks;1;1
TR_EliminateRedundantGotos;TR_EliminateRedundantGotos(class TR_EliminateRedundantGotos &&);;TR_EliminateRedundantGotos;1;0
TR_EliminateRedundantGotos;TR_EliminateRedundantGotos(TR::OptimizationManager *);;TR_EliminateRedundantGotos;0;0
TR_EliminateRedundantGotos;TR_EliminateRedundantGotos(const class TR_EliminateRedundantGotos &);;TR_EliminateRedundantGotos;1;0
create;create(TR::OptimizationManager *);;TR_EliminateRedundantGotos;0;0
operator=;operator=(class TR_EliminateRedundantGotos &&);;TR_EliminateRedundantGotos;1;0
operator=;operator=(const class TR_EliminateRedundantGotos &);;TR_EliminateRedundantGotos;1;0
optDetailString;optDetailString();;TR_EliminateRedundantGotos;0;1
perform;perform();;TR_EliminateRedundantGotos;0;1
performOnBlock;performOnBlock(TR::Block *);;TR_EliminateRedundantGotos;0;1
placeAsyncCheckBefore;placeAsyncCheckBefore(TR::TreeTop *);;TR_EliminateRedundantGotos;0;0
process;process(TR::TreeTop *,TR::TreeTop *);;TR_EliminateRedundantGotos;0;0
renumberExitEdges;renumberExitEdges(class TR_RegionStructure *,int32_t,int32_t);;TR_EliminateRedundantGotos;0;0
renumberInAncestors;renumberInAncestors(class TR_Structure *,int32_t);;TR_EliminateRedundantGotos;0;0
~TR_EliminateRedundantGotos;~TR_EliminateRedundantGotos();;TR_EliminateRedundantGotos;1;1
TR_ExtendBasicBlocks;TR_ExtendBasicBlocks(class TR_ExtendBasicBlocks &&);;TR_ExtendBasicBlocks;1;0
TR_ExtendBasicBlocks;TR_ExtendBasicBlocks(const class TR_ExtendBasicBlocks &);;TR_ExtendBasicBlocks;1;0
TR_ExtendBasicBlocks;TR_ExtendBasicBlocks(TR::OptimizationManager *);;TR_ExtendBasicBlocks;0;0
create;create(TR::OptimizationManager *);;TR_ExtendBasicBlocks;0;0
operator=;operator=(class TR_ExtendBasicBlocks &&);;TR_ExtendBasicBlocks;1;0
operator=;operator=(const class TR_ExtendBasicBlocks &);;TR_ExtendBasicBlocks;1;0
optDetailString;optDetailString();;TR_ExtendBasicBlocks;0;1
orderBlocksWithFrequencyInfo;orderBlocksWithFrequencyInfo();;TR_ExtendBasicBlocks;0;0
orderBlocksWithoutFrequencyInfo;orderBlocksWithoutFrequencyInfo();;TR_ExtendBasicBlocks;0;0
perform;perform();;TR_ExtendBasicBlocks;0;1
~TR_ExtendBasicBlocks;~TR_ExtendBasicBlocks();;TR_ExtendBasicBlocks;1;1
TR_HoistBlocks;TR_HoistBlocks(class TR_HoistBlocks &&);;TR_HoistBlocks;1;0
TR_HoistBlocks;TR_HoistBlocks(const class TR_HoistBlocks &);;TR_HoistBlocks;1;0
TR_HoistBlocks;TR_HoistBlocks(TR::OptimizationManager *);;TR_HoistBlocks;0;0
create;create(TR::OptimizationManager *);;TR_HoistBlocks;0;0
hasSynergy;hasSynergy(TR::Block *,TR::Node *);;TR_HoistBlocks;0;0
operator=;operator=(const class TR_HoistBlocks &);;TR_HoistBlocks;1;0
operator=;operator=(class TR_HoistBlocks &&);;TR_HoistBlocks;1;0
optDetailString;optDetailString();;TR_HoistBlocks;0;1
perform;perform();;TR_HoistBlocks;0;1
performOnBlock;performOnBlock(TR::Block *);;TR_HoistBlocks;0;1
process;process(TR::TreeTop *,TR::TreeTop *);;TR_HoistBlocks;0;0
~TR_HoistBlocks;~TR_HoistBlocks();;TR_HoistBlocks;1;1
TR_InvariantArgumentPreexistence;TR_InvariantArgumentPreexistence(class TR_InvariantArgumentPreexistence &&);;TR_InvariantArgumentPreexistence;1;0
TR_InvariantArgumentPreexistence;TR_InvariantArgumentPreexistence(const class TR_InvariantArgumentPreexistence &);;TR_InvariantArgumentPreexistence;1;0
TR_InvariantArgumentPreexistence;TR_InvariantArgumentPreexistence(TR::OptimizationManager *);;TR_InvariantArgumentPreexistence;0;0
convertCall;convertCall(TR::Node *,TR::TreeTop *);;TR_InvariantArgumentPreexistence;0;0
create;create(TR::OptimizationManager *);;TR_InvariantArgumentPreexistence;0;0
getSuitableParmInfo;getSuitableParmInfo(TR::Node *);;TR_InvariantArgumentPreexistence;0;0
operator=;operator=(const class TR_InvariantArgumentPreexistence &);;TR_InvariantArgumentPreexistence;1;0
operator=;operator=(class TR_InvariantArgumentPreexistence &&);;TR_InvariantArgumentPreexistence;1;0
optDetailString;optDetailString();;TR_InvariantArgumentPreexistence;0;1
perform;perform();;TR_InvariantArgumentPreexistence;0;1
processIndirectCall;processIndirectCall(TR::Node *,TR::TreeTop *,vcount_t);;TR_InvariantArgumentPreexistence;0;0
processIndirectLoad;processIndirectLoad(TR::Node *,TR::TreeTop *,vcount_t);;TR_InvariantArgumentPreexistence;0;0
processNode;processNode(TR::Node *,TR::TreeTop *,vcount_t);;TR_InvariantArgumentPreexistence;0;0
~TR_InvariantArgumentPreexistence;~TR_InvariantArgumentPreexistence();;TR_InvariantArgumentPreexistence;1;1
TR_LongRegAllocation;TR_LongRegAllocation(class TR_LongRegAllocation &&);;TR_LongRegAllocation;1;0
TR_LongRegAllocation;TR_LongRegAllocation(const class TR_LongRegAllocation &);;TR_LongRegAllocation;1;0
TR_LongRegAllocation;TR_LongRegAllocation(TR::OptimizationManager *);;TR_LongRegAllocation;0;0
TR_Rematerialization;TR_Rematerialization(class TR_Rematerialization &&);;TR_Rematerialization;1;0
TR_Rematerialization;TR_Rematerialization(const class TR_Rematerialization &);;TR_Rematerialization;1;0
TR_Rematerialization;TR_Rematerialization(TR::OptimizationManager *,_Bool);;TR_Rematerialization;0;0
addParentToList;addParentToList(TR::Node *,List<TR::Node> *,TR::Node *,List<List<TR::Node> > *);;TR_Rematerialization;0;0
calculateLongRegWeight;calculateLongRegWeight(_Bool,_Bool);;TR_Rematerialization;0;0
create;create(TR::OptimizationManager *);;TR_Rematerialization;0;0
create;create(TR::OptimizationManager *);;TR_LongRegAllocation;0;0
examineLongRegNode;examineLongRegNode(TR::Node *,vcount_t,_Bool);;TR_Rematerialization;0;0
examineNode;examineNode(TR::TreeTop *,TR::Node *,TR::Node *,vcount_t,class TR_RematState *,class TR_RematAdjustments &);;TR_Rematerialization;0;0
findSymsUsedInIndirectAccesses;findSymsUsedInIndirectAccesses(TR::Node *,List<TR::Node> *,List<List<TR::Node> > *);;TR_Rematerialization;0;0
getLoopNestingLevel;getLoopNestingLevel(int32_t);;TR_Rematerialization;0;0
getNumCallLiveLongs;getNumCallLiveLongs();;TR_Rematerialization;0;0
getNumLongAtNesting;getNumLongAtNesting(int8_t);;TR_Rematerialization;0;0
getNumLongLoopOps;getNumLongLoopOps();;TR_Rematerialization;0;0
getNumLongOps;getNumLongOps();;TR_Rematerialization;0;0
getNumLongOutArgs;getNumLongOutArgs();;TR_Rematerialization;0;0
getNumLongParms;getNumLongParms();;TR_LongRegAllocation;0;0
getNumLoopOps;getNumLoopOps();;TR_Rematerialization;0;0
getNumOps;getNumOps();;TR_Rematerialization;0;0
initLongRegData;initLongRegData();;TR_Rematerialization;0;0
isRematerializable;isRematerializable(TR::Node *,TR::Node *,_Bool);;TR_Rematerialization;0;0
isRematerializableLoad;isRematerializableLoad(TR::Node *,TR::Node *);;TR_Rematerialization;0;0
longRegDecisionMade;longRegDecisionMade();;TR_Rematerialization;0;0
makeEarlyLongRegDecision;makeEarlyLongRegDecision();;TR_Rematerialization;0;0
makeLongRegDecision;makeLongRegDecision();;TR_LongRegAllocation;0;0
operator=;operator=(class TR_Rematerialization &&);;TR_Rematerialization;1;0
operator=;operator=(const class TR_Rematerialization &);;TR_Rematerialization;1;0
operator=;operator=(const class TR_LongRegAllocation &);;TR_LongRegAllocation;1;0
operator=;operator=(class TR_LongRegAllocation &&);;TR_LongRegAllocation;1;0
optDetailString;optDetailString();;TR_Rematerialization;0;1
optDetailString;optDetailString();;TR_LongRegAllocation;0;1
perform;perform();;TR_Rematerialization;0;1
performOnBlock;performOnBlock(TR::Block *);;TR_Rematerialization;0;1
postPerformOnBlocks;postPerformOnBlocks();;TR_LongRegAllocation;0;1
prePerformOnBlocks;prePerformOnBlocks();;TR_Rematerialization;0;1
printStats;printStats();;TR_LongRegAllocation;0;0
process;process(TR::TreeTop *,TR::TreeTop *);;TR_Rematerialization;0;0
rematerializeAddresses;rematerializeAddresses(TR::Node *,TR::TreeTop *,vcount_t);;TR_Rematerialization;0;0
rematerializeNode;rematerializeNode(TR::TreeTop *,TR::Node *,TR::Node *,vcount_t,List<TR::Node> *,List<TR::Node> *,List<List<TR::Node> > *,List<TR::Node> *,List<List<TR::Node> > *,List<TR::Node> *,List<TR::Node> *,_Bool);;TR_Rematerialization;0;0
rematerializeSSAddress;rematerializeSSAddress(TR::Node *,int32_t);;TR_Rematerialization;0;0
removeNodeFromList;removeNodeFromList(TR::Node *,List<TR::Node> *,List<List<TR::Node> > *,_Bool,List<TR::Node> *,List<TR::Node> *,const TR::SparseBitVector &);;TR_Rematerialization;0;0
removeNodeFromList;removeNodeFromList(TR::Node *,List<TR::Node> *,List<List<TR::Node> > *,_Bool,List<TR::Node> *,List<TR::Node> *);;TR_Rematerialization;0;0
setLongRegDecision;setLongRegDecision(_Bool);;TR_Rematerialization;0;0
setOnlyRunLongRegHeuristic;setOnlyRunLongRegHeuristic(_Bool);;TR_Rematerialization;0;0
shouldOnlyRunLongRegHeuristic;shouldOnlyRunLongRegHeuristic();;TR_Rematerialization;0;0
~TR_LongRegAllocation;~TR_LongRegAllocation();;TR_LongRegAllocation;1;1
~TR_Rematerialization;~TR_Rematerialization();;TR_Rematerialization;1;1
TR_OrderBlocks;TR_OrderBlocks(const class TR_OrderBlocks &);;TR_OrderBlocks;1;0
TR_OrderBlocks;TR_OrderBlocks(TR::OptimizationManager *,_Bool);;TR_OrderBlocks;0;0
TR_OrderBlocks;TR_OrderBlocks(class TR_OrderBlocks &&);;TR_OrderBlocks;1;0
addRemainingSuccessorsToList;addRemainingSuccessorsToList(TR::CFGNode *,TR::CFGNode *);;TR_OrderBlocks;0;0
addRemainingSuccessorsToListHWProfile;addRemainingSuccessorsToListHWProfile(TR::CFGNode *,TR::CFGNode *);;TR_OrderBlocks;0;0
addToOrderedBlockList;addToOrderedBlockList(TR::CFGNode *,TR_BlockList &,_Bool);;TR_OrderBlocks;0;0
analyseForHazards;analyseForHazards(TR::CFGNode *);;TR_OrderBlocks;0;0
candidateIsBetterSuccessorThanBest;candidateIsBetterSuccessorThanBest(TR::CFGEdge *,TR::CFGEdge *);;TR_OrderBlocks;0;0
cannotFollowBlock;cannotFollowBlock(TR::Block *,TR::Block *);;TR_OrderBlocks;0;0
chooseBestFallThroughSuccessor;chooseBestFallThroughSuccessor(TR::CFG *,TR::CFGNode *,int32_t &);;TR_OrderBlocks;0;0
create;create(TR::OptimizationManager *);;TR_OrderBlocks;0;0
doBlockExtension;doBlockExtension();;TR_OrderBlocks;0;0
doPeepHoleBlockCorrections;doPeepHoleBlockCorrections(TR::Block *,char *);;TR_OrderBlocks;0;0
doPeepHoleOptimizations;doPeepHoleOptimizations(_Bool,_Bool);;TR_OrderBlocks;0;0
doReordering;doReordering();;TR_OrderBlocks;0;0
dontExtendBlocks;dontExtendBlocks();;TR_OrderBlocks;0;0
dontReorderBlocks;dontReorderBlocks();;TR_OrderBlocks;0;0
endPathAtBlock;endPathAtBlock(TR::CFGNode *,TR::CFGNode *,TR::CFG *);;TR_OrderBlocks;0;0
extendBlocks;extendBlocks();;TR_OrderBlocks;0;0
findBestPath;findBestPath(TR::CFGNode *);;TR_OrderBlocks;0;0
findSuitablePathInList;findSuitablePathInList(List<TR::CFGNode> &,TR::CFGNode *);;TR_OrderBlocks;0;0
generateNewOrder;generateNewOrder(TR_BlockList &);;TR_OrderBlocks;0;0
hasValidCandidate;hasValidCandidate(List<TR::CFGNode> &,TR::CFGNode *);;TR_OrderBlocks;0;0
initialize;initialize();;TR_OrderBlocks;0;0
insertBlocksToList;insertBlocksToList();;TR_OrderBlocks;0;0
invalidateStructure;invalidateStructure();;TR_OrderBlocks;0;0
isCandidateReallyBetter;isCandidateReallyBetter(TR::CFGEdge *,TR::Compilation *);;TR_OrderBlocks;0;0
lookForPeepHoleOpportunities;lookForPeepHoleOpportunities(char *);;TR_OrderBlocks;0;0
mustFollowBlock;mustFollowBlock(TR::Block *,TR::Block *);;TR_OrderBlocks;0;0
needBetterChoice;needBetterChoice(TR::CFG *,TR::CFGNode *,TR::CFGNode *);;TR_OrderBlocks;0;0
needInvalidateStructure;needInvalidateStructure();;TR_OrderBlocks;0;0
noPeepHoleOptimizations;noPeepHoleOptimizations();;TR_OrderBlocks;0;0
operator=;operator=(class TR_OrderBlocks &&);;TR_OrderBlocks;1;0
operator=;operator=(const class TR_OrderBlocks &);;TR_OrderBlocks;1;0
optDetailString;optDetailString();;TR_OrderBlocks;0;1
peepHoleBranchAroundSingleGoto;peepHoleBranchAroundSingleGoto(TR::CFG *,TR::Block *,char *);;TR_OrderBlocks;0;0
peepHoleBranchBlock;peepHoleBranchBlock(TR::CFG *,TR::Block *,char *);;TR_OrderBlocks;0;0
peepHoleBranchToFollowing;peepHoleBranchToFollowing(TR::CFG *,TR::Block *,TR::Block *,char *);;TR_OrderBlocks;0;0
peepHoleBranchToLoopHeader;peepHoleBranchToLoopHeader(TR::CFG *,TR::Block *,TR::Block *,TR::Block *,char *);;TR_OrderBlocks;0;0
peepHoleGotoBlock;peepHoleGotoBlock(TR::CFG *,TR::Block *,char *);;TR_OrderBlocks;0;0
peepHoleGotoToEmpty;peepHoleGotoToEmpty(TR::CFG *,TR::Block *,TR::Node *,TR::Block *,char *);;TR_OrderBlocks;0;0
peepHoleGotoToFollowing;peepHoleGotoToFollowing(TR::CFG *,TR::Block *,TR::Block *,char *);;TR_OrderBlocks;0;0
peepHoleGotoToGoto;peepHoleGotoToGoto(TR::CFG *,TR::Block *,TR::Node *,TR::Block *,char *,TR::BitVector &);;TR_OrderBlocks;0;0
perform;perform();;TR_OrderBlocks;0;1
removeEmptyBlock;removeEmptyBlock(TR::CFG *,TR::Block *,char *);;TR_OrderBlocks;0;0
removeFromOrderedBlockLists;removeFromOrderedBlockLists(TR::CFGNode *);;TR_OrderBlocks;0;0
removeRedundantBranch;removeRedundantBranch(TR::CFG *,TR::Block *,TR::Node *,TR::Block *);;TR_OrderBlocks;0;0
reorderBlocks;reorderBlocks();;TR_OrderBlocks;0;0
shouldPerform;shouldPerform();;TR_OrderBlocks;0;1
~TR_OrderBlocks;~TR_OrderBlocks();;TR_OrderBlocks;1;1
TR_PeepHoleBasicBlocks;TR_PeepHoleBasicBlocks(TR::OptimizationManager *);;TR_PeepHoleBasicBlocks;0;0
TR_PeepHoleBasicBlocks;TR_PeepHoleBasicBlocks(class TR_PeepHoleBasicBlocks &&);;TR_PeepHoleBasicBlocks;1;0
TR_PeepHoleBasicBlocks;TR_PeepHoleBasicBlocks(const class TR_PeepHoleBasicBlocks &);;TR_PeepHoleBasicBlocks;1;0
create;create(TR::OptimizationManager *);;TR_PeepHoleBasicBlocks;0;0
operator=;operator=(class TR_PeepHoleBasicBlocks &&);;TR_PeepHoleBasicBlocks;1;0
operator=;operator=(const class TR_PeepHoleBasicBlocks &);;TR_PeepHoleBasicBlocks;1;0
optDetailString;optDetailString();;TR_PeepHoleBasicBlocks;0;1
perform;perform();;TR_PeepHoleBasicBlocks;0;1
~TR_PeepHoleBasicBlocks;~TR_PeepHoleBasicBlocks();;TR_PeepHoleBasicBlocks;1;1
TR_ProfiledNodeVersioning;TR_ProfiledNodeVersioning(class TR_ProfiledNodeVersioning &&);;TR_ProfiledNodeVersioning;1;0
TR_ProfiledNodeVersioning;TR_ProfiledNodeVersioning(const class TR_ProfiledNodeVersioning &);;TR_ProfiledNodeVersioning;1;0
TR_ProfiledNodeVersioning;TR_ProfiledNodeVersioning(TR::OptimizationManager *);;TR_ProfiledNodeVersioning;0;0
create;create(TR::OptimizationManager *);;TR_ProfiledNodeVersioning;0;0
operator=;operator=(class TR_ProfiledNodeVersioning &&);;TR_ProfiledNodeVersioning;1;0
operator=;operator=(const class TR_ProfiledNodeVersioning &);;TR_ProfiledNodeVersioning;1;0
optDetailString;optDetailString();;TR_ProfiledNodeVersioning;0;1
perform;perform();;TR_ProfiledNodeVersioning;0;1
temporarilySetProfilingBcInfoOnNewArrayLengthChild;temporarilySetProfilingBcInfoOnNewArrayLengthChild(TR::Node *,TR::Compilation *);;TR_ProfiledNodeVersioning;0;0
~TR_ProfiledNodeVersioning;~TR_ProfiledNodeVersioning();;TR_ProfiledNodeVersioning;1;1
TR_SimplifyAnds;TR_SimplifyAnds(class TR_SimplifyAnds &&);;TR_SimplifyAnds;1;0
TR_SimplifyAnds;TR_SimplifyAnds(const class TR_SimplifyAnds &);;TR_SimplifyAnds;1;0
TR_SimplifyAnds;TR_SimplifyAnds(TR::OptimizationManager *);;TR_SimplifyAnds;0;0
create;create(TR::OptimizationManager *);;TR_SimplifyAnds;0;0
operator=;operator=(class TR_SimplifyAnds &&);;TR_SimplifyAnds;1;0
operator=;operator=(const class TR_SimplifyAnds &);;TR_SimplifyAnds;1;0
optDetailString;optDetailString();;TR_SimplifyAnds;0;1
perform;perform();;TR_SimplifyAnds;0;1
performOnBlock;performOnBlock(TR::Block *);;TR_SimplifyAnds;0;1
process;process(TR::TreeTop *,TR::TreeTop *);;TR_SimplifyAnds;0;0
~TR_SimplifyAnds;~TR_SimplifyAnds();;TR_SimplifyAnds;1;1
TR_TrivialBlockExtension;TR_TrivialBlockExtension(class TR_TrivialBlockExtension &&);;TR_TrivialBlockExtension;1;0
TR_TrivialBlockExtension;TR_TrivialBlockExtension(const class TR_TrivialBlockExtension &);;TR_TrivialBlockExtension;1;0
TR_TrivialBlockExtension;TR_TrivialBlockExtension(TR::OptimizationManager *);;TR_TrivialBlockExtension;0;0
create;create(TR::OptimizationManager *);;TR_TrivialBlockExtension;0;0
operator=;operator=(class TR_TrivialBlockExtension &&);;TR_TrivialBlockExtension;1;0
operator=;operator=(const class TR_TrivialBlockExtension &);;TR_TrivialBlockExtension;1;0
optDetailString;optDetailString();;TR_TrivialBlockExtension;0;1
perform;perform();;TR_TrivialBlockExtension;0;1
performOnBlock;performOnBlock(TR::Block *);;TR_TrivialBlockExtension;0;1
~TR_TrivialBlockExtension;~TR_TrivialBlockExtension();;TR_TrivialBlockExtension;1;1
TR_TrivialDeadTreeRemoval;TR_TrivialDeadTreeRemoval(const class TR_TrivialDeadTreeRemoval &);;TR_TrivialDeadTreeRemoval;1;0
TR_TrivialDeadTreeRemoval;TR_TrivialDeadTreeRemoval(TR::OptimizationManager *);;TR_TrivialDeadTreeRemoval;0;0
TR_TrivialDeadTreeRemoval;TR_TrivialDeadTreeRemoval(class TR_TrivialDeadTreeRemoval &&);;TR_TrivialDeadTreeRemoval;1;0
create;create(TR::OptimizationManager *);;TR_TrivialDeadTreeRemoval;0;0
examineNode;examineNode(TR::Node *,vcount_t);;TR_TrivialDeadTreeRemoval;0;0
operator=;operator=(class TR_TrivialDeadTreeRemoval &&);;TR_TrivialDeadTreeRemoval;1;0
operator=;operator=(const class TR_TrivialDeadTreeRemoval &);;TR_TrivialDeadTreeRemoval;1;0
optDetailString;optDetailString();;TR_TrivialDeadTreeRemoval;0;1
perform;perform();;TR_TrivialDeadTreeRemoval;0;1
performOnBlock;performOnBlock(TR::Block *);;TR_TrivialDeadTreeRemoval;0;1
postProcessTreetop;postProcessTreetop(TR::TreeTop *,List<TR::TreeTop> &,char *,TR::Compilation *);;TR_TrivialDeadTreeRemoval;0;0
preProcessTreetop;preProcessTreetop(TR::TreeTop *,List<TR::TreeTop> &,char *,TR::Compilation *);;TR_TrivialDeadTreeRemoval;0;0
processCommonedChild;processCommonedChild(TR::Node *,TR::TreeTop *,List<TR::TreeTop> &,char *,TR::Compilation *);;TR_TrivialDeadTreeRemoval;0;0
transformBlock;transformBlock(TR::TreeTop *,TR::TreeTop *);;TR_TrivialDeadTreeRemoval;0;0
~TR_TrivialDeadTreeRemoval;~TR_TrivialDeadTreeRemoval();;TR_TrivialDeadTreeRemoval;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMROptimization.cpp
Simplifier;Simplifier(const class OMR::Simplifier &);OMR;Simplifier;1;0
Simplifier;Simplifier(class OMR::Simplifier &&);OMR;Simplifier;1;0
Simplifier;Simplifier(TR::OptimizationManager *);OMR;Simplifier;0;0
Simplifier;Simplifier(TR::OptimizationManager *);TR;Simplifier;0;0
anchorOrderDependentNodesInSubtree;anchorOrderDependentNodesInSubtree(TR::Node *,TR::Node *,TR::TreeTop *);OMR;Simplifier;0;0
cleanupFlags;cleanupFlags(TR::Node *);OMR;Simplifier;0;0
conditionalToUnconditional;conditionalToUnconditional(TR::Node *&,TR::Block *,int);OMR;Simplifier;0;0
containingStructure;containingStructure();OMR;Simplifier;0;0
create;create(TR::OptimizationManager *);OMR;Simplifier;0;0
getCC;getCC(TR::Node *);OMR;Simplifier;0;0
isBoundDefinitelyGELength;isBoundDefinitelyGELength(TR::Node *,TR::Node *);OMR;Simplifier;0;1
isLegalToFold;isLegalToFold(TR::Node *,TR::Node *);OMR;Simplifier;0;1
isLegalToUnaryCancel;isLegalToUnaryCancel(TR::Node *,TR::Node *,TR::ILOpCodes);OMR;Simplifier;0;1
operator=;operator=(const class OMR::Simplifier &);OMR;Simplifier;1;0
operator=;operator=(class OMR::Simplifier &&);OMR;Simplifier;1;0
operator=;operator=(class TR::Simplifier &&);TR;Simplifier;1;0
operator=;operator=(const class TR::Simplifier &);TR;Simplifier;1;0
optDetailString;optDetailString();OMR;Simplifier;0;1
perform;perform();OMR;Simplifier;0;1
performOnBlock;performOnBlock(TR::Block *);OMR;Simplifier;0;1
postPerformOnBlocks;postPerformOnBlocks();OMR;Simplifier;0;1
prePerformOnBlocks;prePerformOnBlocks();OMR;Simplifier;0;1
prepareToReplaceNode;prepareToReplaceNode(TR::Node *);OMR;Simplifier;0;0
reassociate;reassociate();OMR;Simplifier;0;0
setCC;setCC(TR::Node *,TR_ConditionCodeNumber);OMR;Simplifier;0;0
setNodePrecisionIfNeeded;setNodePrecisionIfNeeded(TR::Node *,TR::Node *,TR::NodeChecklist &);OMR;Simplifier;0;1
simplify;simplify(TR::Block *);OMR;Simplifier;0;0
simplify;simplify(TR::TreeTop *,TR::Block *);OMR;Simplifier;0;0
simplify;simplify(TR::Node *,TR::Block *);OMR;Simplifier;0;0
simplifyExtendedBlock;simplifyExtendedBlock(TR::TreeTop *);OMR;Simplifier;0;0
simplifyIndirectLoadPatterns;simplifyIndirectLoadPatterns(TR::Node *);OMR;Simplifier;0;1
simplifyaCallMethods;simplifyaCallMethods(TR::Node *,TR::Block *);OMR;Simplifier;0;1
simplifyd2fPatterns;simplifyd2fPatterns(TR::Node *);OMR;Simplifier;0;1
simplifyi2sPatterns;simplifyi2sPatterns(TR::Node *);OMR;Simplifier;0;1
simplifyiCallMethods;simplifyiCallMethods(TR::Node *,TR::Block *);OMR;Simplifier;0;1
simplifyiOrPatterns;simplifyiOrPatterns(TR::Node *);OMR;Simplifier;0;1
simplifylCallMethods;simplifylCallMethods(TR::Node *,TR::Block *);OMR;Simplifier;0;1
unaryCancelOutWithChild;unaryCancelOutWithChild(TR::Node *,TR::Node *,TR::TreeTop *,TR::ILOpCodes,_Bool);OMR;Simplifier;0;1
~Simplifier;~Simplifier();OMR;Simplifier;1;1
~Simplifier;~Simplifier();TR;Simplifier;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMROptimizationManager.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRTransformUtil.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMROptimizer.cpp
List<T>;List<T>(TR::Region &);;List;0;0
List<T>;List<T>(class TR_Memory *);;List;0;0
List<T>;List<T>();;List;0;0
ListBase<T>;ListBase<T>();;ListBase;0;0
TR_OrderedBlockList;TR_OrderedBlockList(class TR_Memory *);;TR_OrderedBlockList;0;0
add;add(List<T> &);;List;0;0
add;add(T *,List<T> &);;List;0;0
add;add(T *);;List;0;0
addAfter;addAfter(T *,ListElement<T> *);;List;0;0
addInTraversalOrder;addInTraversalOrder(TR::Block *,_Bool,TR::CFGEdge *);;TR_OrderedBlockList;0;0
deleteAll;deleteAll();;List;0;0
find;find(T *);;ListBase;0;0
freeElements;freeElements(List<T> &);;List;0;0
getHeadData;getHeadData();;List;0;0
getLastElement;getLastElement();;ListBase;0;0
getListHead;getListHead();;ListBase;0;0
getRegion;getRegion();;ListBase;0;0
getSize;getSize();;ListBase;0;0
init;init();;List;0;0
isDoubleton;isDoubleton();;ListBase;0;0
isEmpty;isEmpty();;ListBase;0;0
isMultipleEntry;isMultipleEntry();;ListBase;0;0
isSingleton;isSingleton();;ListBase;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;ListBase;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;List;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_OrderedBlockList;0;0
jitPersistentFree;jitPersistentFree(void *);;ListBase;0;0
jitPersistentFree;jitPersistentFree(void *);;List;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_OrderedBlockList;0;0
operator delete;operator delete(void *,TR::Region &);;ListBase;0;0
operator delete;operator delete(void *,TR::Region &);;List;0;0
operator delete;operator delete(void *,TR::Region &);;TR_OrderedBlockList;0;0
operator delete;operator delete(void *,size_t);;ListBase;0;0
operator delete;operator delete(void *,size_t);;List;0;0
operator delete;operator delete(void *,size_t);;TR_OrderedBlockList;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;ListBase;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;List;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;ListBase;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;List;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_OrderedBlockList;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;ListBase;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;List;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
operator delete[];operator delete[](void *,TR::Region &);;ListBase;0;0
operator delete[];operator delete[](void *,TR::Region &);;List;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_OrderedBlockList;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;ListBase;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;List;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_OrderedBlockList;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;ListBase;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;List;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;ListBase;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;List;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;ListBase;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;List;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_OrderedBlockList;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;ListBase;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;List;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_OrderedBlockList;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;ListBase;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;List;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_OrderedBlockList;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;ListBase;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;List;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_OrderedBlockList;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;ListBase;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;List;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
operator new;operator new(size_t,TR::Region &);;ListBase;0;0
operator new;operator new(size_t,TR::Region &);;List;0;0
operator new;operator new(size_t,TR::Region &);;TR_OrderedBlockList;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;ListBase;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;List;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
operator new[];operator new[](size_t,TR::Region &);;ListBase;0;0
operator new[];operator new[](size_t,TR::Region &);;List;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_OrderedBlockList;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;ListBase;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;List;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_OrderedBlockList;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;ListBase;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;List;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_OrderedBlockList;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;ListBase;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;List;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;ListBase;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;List;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;ListBase;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;List;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_OrderedBlockList;0;0
operator==;operator==(const ListBase<T> &);;ListBase;0;0
popHead;popHead();;List;0;0
remove;remove(T *);;List;0;0
removeBlockFromList;removeBlockFromList(TR::Block *,TR::CFGEdge *);;TR_OrderedBlockList;0;0
removeNext;removeNext(ListElement<T> *);;List;0;0
setListHead;setListHead(ListElement<T> *);;List;0;0
setRegion;setRegion(TR::Region &);;ListBase;0;0
RecognizedCallTransformer;RecognizedCallTransformer(class OMR::RecognizedCallTransformer &&);OMR;RecognizedCallTransformer;1;0
RecognizedCallTransformer;RecognizedCallTransformer(const class OMR::RecognizedCallTransformer &);OMR;RecognizedCallTransformer;1;0
RecognizedCallTransformer;RecognizedCallTransformer(TR::OptimizationManager *);OMR;RecognizedCallTransformer;0;0
RecognizedCallTransformer;RecognizedCallTransformer(TR::OptimizationManager *);TR;RecognizedCallTransformer;0;0
create;create(TR::OptimizationManager *);OMR;RecognizedCallTransformer;0;0
isInlineable;isInlineable(TR::TreeTop *);OMR;RecognizedCallTransformer;0;1
operator=;operator=(const class OMR::RecognizedCallTransformer &);OMR;RecognizedCallTransformer;1;0
operator=;operator=(class OMR::RecognizedCallTransformer &&);OMR;RecognizedCallTransformer;1;0
operator=;operator=(class TR::RecognizedCallTransformer &&);TR;RecognizedCallTransformer;1;0
operator=;operator=(const class TR::RecognizedCallTransformer &);TR;RecognizedCallTransformer;1;0
optDetailString;optDetailString();OMR;RecognizedCallTransformer;0;1
perform;perform();OMR;RecognizedCallTransformer;0;1
transform;transform(TR::TreeTop *);OMR;RecognizedCallTransformer;0;1
~RecognizedCallTransformer;~RecognizedCallTransformer();OMR;RecognizedCallTransformer;1;1
~RecognizedCallTransformer;~RecognizedCallTransformer();TR;RecognizedCallTransformer;1;1
TR_HedgeNode<T>;TR_HedgeNode<T>(int32_t);;TR_HedgeNode;0;0
ValueConstraint;ValueConstraint(int32_t);OMR::ValuePropagation;ValueConstraint;0;0
getKey;getKey();;TR_HedgeNode;0;0
getParent;getParent();;TR_HedgeNode;0;0
getValueNumber;getValueNumber();OMR::ValuePropagation;ValueConstraint;0;0
height;height();;TR_HedgeNode;0;0
initialize;initialize(int32_t);;TR_HedgeNode;0;0
initialize;initialize(int32_t,struct OMR::ValuePropagation::Relationship *,struct OMR::ValuePropagation::StoreRelationship *);OMR::ValuePropagation;ValueConstraint;0;0
isLeftSibling;isLeftSibling();;TR_HedgeNode;0;0
isRightSibling;isRightSibling();;TR_HedgeNode;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_HedgeNode;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_HedgeNode;0;0
left;left();;TR_HedgeNode;0;0
leftReference;leftReference();;TR_HedgeNode;0;0
operator delete;operator delete(void *,size_t);;TR_HedgeNode;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HedgeNode;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_HedgeNode;0;0
operator delete;operator delete(void *,TR::Region &);;TR_HedgeNode;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HedgeNode;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_HedgeNode;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HedgeNode;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HedgeNode;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_HedgeNode;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HedgeNode;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_HedgeNode;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_HedgeNode;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HedgeNode;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_HedgeNode;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_HedgeNode;0;0
operator new;operator new(size_t,TR::Region &);;TR_HedgeNode;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_HedgeNode;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_HedgeNode;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_HedgeNode;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HedgeNode;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HedgeNode;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_HedgeNode;0;0
print;print(OMR::ValuePropagation *,int32_t);OMR::ValuePropagation;ValueConstraint;0;0
printTree;printTree(class TR_FrontEnd *,TR::FILE *,int32_t,char *,_Bool,_Bool);;TR_HedgeNode;0;0
right;right();;TR_HedgeNode;0;0
rightReference;rightReference();;TR_HedgeNode;0;0
setLeft;setLeft(T *);;TR_HedgeNode;0;0
setLeftSibling;setLeftSibling(_Bool);;TR_HedgeNode;0;0
setParent;setParent(T *);;TR_HedgeNode;0;0
setRight;setRight(T *);;TR_HedgeNode;0;0
setRightSibling;setRightSibling(_Bool);;TR_HedgeNode;0;0
verify;verify(T *);;TR_HedgeNode;0;0
ValueConstraintHandler;ValueConstraintHandler(class OMR::ValuePropagation::ValueConstraintHandler &&);OMR::ValuePropagation;ValueConstraintHandler;1;0
ValueConstraintHandler;ValueConstraintHandler(const class OMR::ValuePropagation::ValueConstraintHandler &);OMR::ValuePropagation;ValueConstraintHandler;1;0
allocate;allocate(int32_t);;TR_HedgeTreeHandler;0;1
allocate;allocate(int32_t);OMR::ValuePropagation;ValueConstraintHandler;0;1
comp;comp();;TR_HedgeTreeHandler;0;1
comp;comp();OMR::ValuePropagation;ValueConstraintHandler;0;1
copy;copy(T *);;TR_HedgeTreeHandler;0;1
copy;copy(class OMR::ValuePropagation::ValueConstraint *);OMR::ValuePropagation;ValueConstraintHandler;0;1
copyAll;copyAll(TR_HedgeTree<T> &);;TR_HedgeTreeHandler;0;0
copySubtree;copySubtree(T *);;TR_HedgeTreeHandler;0;0
empty;empty(TR_HedgeTree<T> &);;TR_HedgeTreeHandler;0;0
emptySubtree;emptySubtree(T *&);;TR_HedgeTreeHandler;0;0
find;find(int32_t,TR_HedgeTree<T> &);;TR_HedgeTreeHandler;0;0
findOrCreate;findOrCreate(int32_t,T *&,int32_t &);;TR_HedgeTreeHandler;0;0
findOrCreate;findOrCreate(int32_t,TR_HedgeTree<T> &);;TR_HedgeTreeHandler;0;0
free;free(T *);;TR_HedgeTreeHandler;0;1
free;free(class OMR::ValuePropagation::ValueConstraint *);OMR::ValuePropagation;ValueConstraintHandler;0;1
getRoot;getRoot(TR_HedgeTree<T> &);;TR_HedgeTreeHandler;0;0
insert;insert(T *,TR_HedgeTree<T> &);;TR_HedgeTreeHandler;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_HedgeTreeHandler;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_HedgeTreeHandler;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HedgeTreeHandler;0;0
operator delete;operator delete(void *,size_t);;TR_HedgeTreeHandler;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_HedgeTreeHandler;0;0
operator delete;operator delete(void *,TR::Region &);;TR_HedgeTreeHandler;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HedgeTreeHandler;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HedgeTreeHandler;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HedgeTreeHandler;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_HedgeTreeHandler;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_HedgeTreeHandler;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HedgeTreeHandler;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_HedgeTreeHandler;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_HedgeTreeHandler;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HedgeTreeHandler;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_HedgeTreeHandler;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_HedgeTreeHandler;0;0
operator new;operator new(size_t,TR::Region &);;TR_HedgeTreeHandler;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_HedgeTreeHandler;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_HedgeTreeHandler;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_HedgeTreeHandler;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_HedgeTreeHandler;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_HedgeTreeHandler;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_HedgeTreeHandler;0;0
operator=;operator=(class OMR::ValuePropagation::ValueConstraintHandler &&);OMR::ValuePropagation;ValueConstraintHandler;1;0
operator=;operator=(const class OMR::ValuePropagation::ValueConstraintHandler &);OMR::ValuePropagation;ValueConstraintHandler;1;0
remove;remove(int32_t,T *&,int32_t &);;TR_HedgeTreeHandler;0;0
remove;remove(int32_t,TR_HedgeTree<T> &);;TR_HedgeTreeHandler;0;0
setRoot;setRoot(TR_HedgeTree<T> &,T *);;TR_HedgeTreeHandler;0;0
setVP;setVP(OMR::ValuePropagation *);OMR::ValuePropagation;ValueConstraintHandler;0;0
swapRightmost;swapRightmost(T *&,T *&);;TR_HedgeTreeHandler;0;0
~ValueConstraintHandler;~ValueConstraintHandler();OMR::ValuePropagation;ValueConstraintHandler;1;0
ArraycopyTransformation;ArraycopyTransformation(class TR::ArraycopyTransformation &&);TR;ArraycopyTransformation;1;0
ArraycopyTransformation;ArraycopyTransformation(const class TR::ArraycopyTransformation &);TR;ArraycopyTransformation;1;0
ArraycopyTransformation;ArraycopyTransformation(TR::OptimizationManager *);TR;ArraycopyTransformation;0;0
arraycopyHighFrequencySpecificLength;arraycopyHighFrequencySpecificLength(TR::Node *);TR;ArraycopyTransformation;0;0
create;create(TR::OptimizationManager *);TR;ArraycopyTransformation;0;0
createArrayNode;createArrayNode(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool);TR;ArraycopyTransformation;0;0
createArrayNode;createArrayNode(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::Node *,TR::SymbolReference *,TR::SymbolReference *,_Bool);TR;ArraycopyTransformation;0;0
createMultipleArrayNodes;createMultipleArrayNodes(TR::TreeTop *,TR::Node *);TR;ArraycopyTransformation;0;0
createPointerCompareNode;createPointerCompareNode(TR::Node *,TR::SymbolReference *,TR::SymbolReference *);TR;ArraycopyTransformation;0;0
createRangeCompareNode;createRangeCompareNode(TR::Node *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);TR;ArraycopyTransformation;0;0
hasChangedTrees;hasChangedTrees();TR;ArraycopyTransformation;0;0
operator=;operator=(class TR::ArraycopyTransformation &&);TR;ArraycopyTransformation;1;0
operator=;operator=(const class TR::ArraycopyTransformation &);TR;ArraycopyTransformation;1;0
optDetailString;optDetailString();TR;ArraycopyTransformation;0;1
perform;perform();TR;ArraycopyTransformation;0;1
setChangedTrees;setChangedTrees(_Bool);TR;ArraycopyTransformation;0;0
specializeForLength;specializeForLength(TR::TreeTop *,TR::Node *,uintptrj_t,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);TR;ArraycopyTransformation;0;0
tryToSpecializeForLength;tryToSpecializeForLength(TR::TreeTop *,TR::Node *);TR;ArraycopyTransformation;0;0
~ArraycopyTransformation;~ArraycopyTransformation();TR;ArraycopyTransformation;1;1
GlobalValuePropagation;GlobalValuePropagation(class TR::GlobalValuePropagation &&);TR;GlobalValuePropagation;1;0
GlobalValuePropagation;GlobalValuePropagation(const class TR::GlobalValuePropagation &);TR;GlobalValuePropagation;1;0
GlobalValuePropagation;GlobalValuePropagation(TR::OptimizationManager *);TR;GlobalValuePropagation;0;0
ValuePropagation;ValuePropagation(class OMR::ValuePropagation &&);OMR;ValuePropagation;1;0
ValuePropagation;ValuePropagation(TR::OptimizationManager *);OMR;ValuePropagation;0;0
ValuePropagation;ValuePropagation(TR::OptimizationManager *);TR;ValuePropagation;0;0
ValuePropagation;ValuePropagation(const class OMR::ValuePropagation &);OMR;ValuePropagation;1;0
ValuePropagation;ValuePropagation(class TR::ValuePropagation &&);TR;ValuePropagation;1;0
ValuePropagation;ValuePropagation(const class TR::ValuePropagation &);TR;ValuePropagation;1;0
addBlockConstraint;addBlockConstraint(TR::Node *,TR::VPConstraint *,TR::Node *,_Bool);OMR;ValuePropagation;0;0
addBlockOrGlobalConstraint;addBlockOrGlobalConstraint(TR::Node *,TR::VPConstraint *,_Bool,TR::Node *);OMR;ValuePropagation;0;0
addConstraint;addConstraint(TR::VPConstraint *,int32_t);OMR;ValuePropagation;0;0
addConstraintToList;addConstraintToList(TR::Node *,int32_t,int32_t,TR::VPConstraint *,ValueConstraints *,_Bool);OMR;ValuePropagation;0;0
addEdgeConstraint;addEdgeConstraint(TR::Node *,TR::VPConstraint *,struct OMR::ValuePropagation::EdgeConstraints *,TR::Node *);OMR;ValuePropagation;0;0
addGlobalConstraint;addGlobalConstraint(TR::Node *,TR::VPConstraint *,TR::Node *);OMR;ValuePropagation;0;0
addGlobalConstraint;addGlobalConstraint(TR::Node *,int32_t,TR::VPConstraint *,int32_t);OMR;ValuePropagation;0;0
addLoopDef;addLoopDef(TR::Node *);OMR;ValuePropagation;0;0
addToSortedList;addToSortedList(TR_LinkHead<struct OMR::ValuePropagation::ArrayLengthToVersion> *,struct OMR::ValuePropagation::ArrayLengthToVersion *);OMR;ValuePropagation;0;0
addUnsafeArrayAccessNode;addUnsafeArrayAccessNode(ncount_t);OMR;ValuePropagation;0;0
applyGlobalConstraints;applyGlobalConstraints(TR::Node *,int32_t,TR::VPConstraint *,int32_t);OMR;ValuePropagation;0;0
buildBoundCheckComparisonNodes;buildBoundCheckComparisonNodes(struct OMR::ValuePropagation::BlockVersionInfo *,List<TR::Node> *);OMR;ValuePropagation;0;0
buildInputConstraints;buildInputConstraints(TR::CFGNode *);TR;GlobalValuePropagation;0;0
buildSameLeafTest;buildSameLeafTest(TR::Node *,TR::Node *,TR::Node *);OMR;ValuePropagation;0;0
canRunTransformToArrayCopy;canRunTransformToArrayCopy();OMR;ValuePropagation;0;0
canTransformArrayCopyCallForSmall;canTransformArrayCopyCallForSmall(TR::Node *,int32_t &,int32_t &,int32_t &,TR::DataType &);OMR;ValuePropagation;0;0
chTableValidityChecked;chTableValidityChecked();OMR;ValuePropagation;0;0
chTableWasValid;chTableWasValid();OMR;ValuePropagation;0;0
checkAllUnsafeReferences;checkAllUnsafeReferences(TR::Node *,vcount_t);OMR;ValuePropagation;0;0
checkBackEdgeCoverage;checkBackEdgeCoverage();OMR;ValuePropagation;0;0
checkForInductionVariableIncrement;checkForInductionVariableIncrement(TR::Node *);OMR;ValuePropagation;0;0
checkForInductionVariableLoad;checkForInductionVariableLoad(TR::Node *);OMR;ValuePropagation;0;0
checkLoopTestBlock;checkLoopTestBlock(TR::Symbol *);OMR;ValuePropagation;0;0
checkTypeRelationship;checkTypeRelationship(TR::VPConstraint *,TR::VPConstraint *,int32_t &,_Bool,_Bool);OMR;ValuePropagation;0;0
checksWereRemoved;checksWereRemoved();OMR;ValuePropagation;0;0
collectBackEdgeConstraints;collectBackEdgeConstraints();OMR;ValuePropagation;0;0
collectDefSymRefs;collectDefSymRefs(TR::Node *,TR::Node *);OMR;ValuePropagation;0;0
collectInductionVariableEntryConstraints;collectInductionVariableEntryConstraints();OMR;ValuePropagation;0;0
computeDivRangeWhenDivisorCanBeZero;computeDivRangeWhenDivisorCanBeZero(TR::Node *);OMR;ValuePropagation;0;0
constrainRecognizedMethod;constrainRecognizedMethod(TR::Node *);OMR;ValuePropagation;0;1
copyRelationships;copyRelationships(struct OMR::ValuePropagation::Relationship *);OMR;ValuePropagation;0;0
copyStoreRelationships;copyStoreRelationships(struct OMR::ValuePropagation::StoreRelationship *);OMR;ValuePropagation;0;0
copyValueConstraints;copyValueConstraints(ValueConstraints &);OMR;ValuePropagation;0;0
create;create(TR::OptimizationManager *);TR;GlobalValuePropagation;0;0
createAndInsertStoresForArrayCopySpineCheck;createAndInsertStoresForArrayCopySpineCheck(struct OMR::ValuePropagation::TR_ArrayCopySpineCheck *);OMR;ValuePropagation;0;0
createArrayCopyCallForSpineCheck;createArrayCopyCallForSpineCheck(struct OMR::ValuePropagation::TR_ArrayCopySpineCheck *);OMR;ValuePropagation;0;0
createArrayCopyVCallNodeAfterStores;createArrayCopyVCallNodeAfterStores(TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);OMR;ValuePropagation;0;0
createArrayStoreCompareNode;createArrayStoreCompareNode(TR::Node *,TR::Node *);OMR;ValuePropagation;0;0
createConverterCallNodeAfterStores;createConverterCallNodeAfterStores(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);OMR;ValuePropagation;0;0
createEdgeConstraints;createEdgeConstraints(TR::CFGEdge *,_Bool);OMR;ValuePropagation;0;0
createExceptionEdgeConstraints;createExceptionEdgeConstraints(uint32_t,class OMR::ValuePropagation::ValueConstraint *,TR::Node *);OMR;ValuePropagation;0;0
createGlobalConstraint;createGlobalConstraint(int32_t);OMR;ValuePropagation;0;0
createNewBlockInfoForVersioning;createNewBlockInfoForVersioning(TR::Block *);OMR;ValuePropagation;0;0
createNewBucketForArrayIndex;createNewBucketForArrayIndex(struct OMR::ValuePropagation::ArrayLengthToVersion *,TR_LinkHead<struct OMR::ValuePropagation::ArrayLengthToVersion> *,int32_t,TR::Node *,TR::Node *,class TR_OpaqueClassBlock *);OMR;ValuePropagation;0;0
createPrimitiveArrayNodeWithoutFlags;createPrimitiveArrayNodeWithoutFlags(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool,_Bool);OMR;ValuePropagation;0;0
createPrimitiveOrReferenceCompareNode;createPrimitiveOrReferenceCompareNode(TR::Node *);OMR;ValuePropagation;0;0
createReferenceArrayNodeWithoutFlags;createReferenceArrayNodeWithoutFlags(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool);OMR;ValuePropagation;0;0
createRelationship;createRelationship(int32_t,TR::VPConstraint *);OMR;ValuePropagation;0;0
createSameLeafTestAfterStores;createSameLeafTestAfterStores(TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *);OMR;ValuePropagation;0;0
createSpineCheckNode;createSpineCheckNode(TR::Node *,TR::SymbolReference *);OMR;ValuePropagation;0;0
createStoreConstraints;createStoreConstraints(TR::Node *);OMR;ValuePropagation;0;0
createStoreRelationship;createStoreRelationship(TR::Symbol *,struct OMR::ValuePropagation::Relationship *);OMR;ValuePropagation;0;0
createValueConstraint;createValueConstraint(int32_t,struct OMR::ValuePropagation::Relationship *,struct OMR::ValuePropagation::StoreRelationship *);OMR;ValuePropagation;0;0
determineConstraints;determineConstraints();TR;GlobalValuePropagation;0;0
doDelayedTransformations;doDelayedTransformations();OMR;ValuePropagation;0;1
enablePreexistence;enablePreexistence();OMR;ValuePropagation;0;0
enableSimplifier;enableSimplifier();OMR;ValuePropagation;0;0
findConstraint;findConstraint(int32_t,int32_t);OMR;ValuePropagation;0;0
findConstraintInList;findConstraintInList(TR_LinkHead<struct OMR::ValuePropagation::Relationship> &,int32_t);OMR;ValuePropagation;0;0
findEdgeConstraint;findEdgeConstraint(int32_t,struct OMR::ValuePropagation::EdgeConstraints *,int32_t);OMR;ValuePropagation;0;0
findGlobalConstraint;findGlobalConstraint(int32_t,int32_t);OMR;ValuePropagation;0;0
findGlobalConstraint;findGlobalConstraint(int32_t);OMR;ValuePropagation;0;0
findLoopDef;findLoopDef(TR::Node *);OMR;ValuePropagation;0;0
findOutEdge;findOutEdge(TR::CFGEdgeList &,TR::CFGNode *);OMR;ValuePropagation;0;0
findStoreConstraint;findStoreConstraint(int32_t,TR::Symbol *);OMR;ValuePropagation;0;0
findStoreEdgeConstraint;findStoreEdgeConstraint(int32_t,TR::Symbol *,struct OMR::ValuePropagation::EdgeConstraints *);OMR;ValuePropagation;0;0
findStoreRelationship;findStoreRelationship(TR_LinkHead<struct OMR::ValuePropagation::StoreRelationship> &,TR::Symbol *);OMR;ValuePropagation;0;0
findStoreValueConstraint;findStoreValueConstraint(int32_t,TR::Symbol *,ValueConstraints &);OMR;ValuePropagation;0;0
findStoresInBlock;findStoresInBlock(TR::Block *,ValueConstraints &);OMR;ValuePropagation;0;0
findThrowInBlock;findThrowInBlock(TR::Block *,TR::TreeTop *&);OMR;ValuePropagation;0;0
findValueConstraint;findValueConstraint(int32_t,ValueConstraints &,int32_t);OMR;ValuePropagation;0;0
findVarOfSimpleForm;findVarOfSimpleForm(TR::Node *);OMR;ValuePropagation;0;0
findVarOfSimpleFormOld;findVarOfSimpleFormOld(TR::Node *);OMR;ValuePropagation;0;0
freeRelationship;freeRelationship(struct OMR::ValuePropagation::Relationship *);OMR;ValuePropagation;0;0
freeRelationships;freeRelationships(TR_LinkHead<struct OMR::ValuePropagation::Relationship> &);OMR;ValuePropagation;0;0
freeStoreRelationship;freeStoreRelationship(struct OMR::ValuePropagation::StoreRelationship *);OMR;ValuePropagation;0;0
freeStoreRelationships;freeStoreRelationships(TR_LinkHead<struct OMR::ValuePropagation::StoreRelationship> &);OMR;ValuePropagation;0;0
freeValueConstraint;freeValueConstraint(class OMR::ValuePropagation::ValueConstraint *);OMR;ValuePropagation;0;0
freeValueConstraints;freeValueConstraints(ValueConstraints &);OMR;ValuePropagation;0;0
generalizeStores;generalizeStores(ValueConstraints &,ValueConstraints *);OMR;ValuePropagation;0;0
generateRTArrayNodeWithoutFlags;generateRTArrayNodeWithoutFlags(struct OMR::ValuePropagation::TR_RealTimeArrayCopy *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool);OMR;ValuePropagation;0;0
getArraylengthNodes;getArraylengthNodes();OMR;ValuePropagation;0;0
getBestRun;getBestRun();OMR;ValuePropagation;0;0
getConstraint;getConstraint(TR::Node *,_Bool &,TR::Node *);OMR;ValuePropagation;0;0
getCurrentParent;getCurrentParent();OMR;ValuePropagation;0;0
getEdgeConstraints;getEdgeConstraints(TR::CFGEdge *);OMR;ValuePropagation;0;0
getImproperRegionStores;getImproperRegionStores(class TR_StructureSubGraphNode *,ValueConstraints &);TR;GlobalValuePropagation;0;0
getParmValues;getParmValues();OMR;ValuePropagation;0;1
getPrimitiveArrayType;getPrimitiveArrayType(char);OMR;ValuePropagation;0;0
getStoreConstraint;getStoreConstraint(TR::Node *,TR::Node *);OMR;ValuePropagation;0;0
getStringCacheRef;getStringCacheRef();OMR;ValuePropagation;0;0
getValueNumber;getValueNumber(TR::Node *);OMR;ValuePropagation;0;0
hasBeenStored;hasBeenStored(int32_t,TR::Symbol *,ValueConstraints &);OMR;ValuePropagation;0;0
hashGlobalConstraint;hashGlobalConstraint(int32_t);OMR;ValuePropagation;0;0
initialize;initialize();OMR;ValuePropagation;0;0
intersectionFailed;intersectionFailed();OMR;ValuePropagation;0;0
invalidateParmConstraintsIfNeeded;invalidateParmConstraintsIfNeeded(TR::Node *,TR::VPConstraint *);OMR;ValuePropagation;0;0
invalidateUseDefInfo;invalidateUseDefInfo();OMR;ValuePropagation;0;0
invalidateValueNumberInfo;invalidateValueNumberInfo();OMR;ValuePropagation;0;0
isCastClassObject;isCastClassObject(TR::VPClassType *);OMR;ValuePropagation;0;0
isDefInUnreachableBlock;isDefInUnreachableBlock(int32_t);OMR;ValuePropagation;0;0
isHighWordZero;isHighWordZero(TR::Node *);OMR;ValuePropagation;0;0
isParmInvariant;isParmInvariant(TR::Symbol *);OMR;ValuePropagation;0;0
isUnreachablePath;isUnreachablePath(struct OMR::ValuePropagation::EdgeConstraints *);OMR;ValuePropagation;0;0
isUnreachablePath;isUnreachablePath(ValueConstraints &);OMR;ValuePropagation;0;0
isUnreachableStore;isUnreachableStore(struct OMR::ValuePropagation::StoreRelationship *);OMR;ValuePropagation;0;0
lastTimeThrough;lastTimeThrough();OMR;ValuePropagation;0;0
launchNode;launchNode(TR::Node *,TR::Node *,int32_t);OMR;ValuePropagation;0;0
mergeBackEdgeConstraints;mergeBackEdgeConstraints(struct OMR::ValuePropagation::EdgeConstraints *);OMR;ValuePropagation;0;0
mergeConstraintIntoEdge;mergeConstraintIntoEdge(class OMR::ValuePropagation::ValueConstraint *,struct OMR::ValuePropagation::EdgeConstraints *);OMR;ValuePropagation;0;0
mergeDefConstraints;mergeDefConstraints(TR::Node *,int32_t,_Bool &,_Bool);OMR;ValuePropagation;0;0
mergeEdgeConstraints;mergeEdgeConstraints(struct OMR::ValuePropagation::EdgeConstraints *,struct OMR::ValuePropagation::EdgeConstraints *);OMR;ValuePropagation;0;0
mergeRelationships;mergeRelationships(TR_LinkHead<struct OMR::ValuePropagation::Relationship> &,TR_LinkHead<struct OMR::ValuePropagation::Relationship> &,int32_t,_Bool,struct OMR::ValuePropagation::StoreRelationship *,List<TR::Symbol> *,_Bool);OMR;ValuePropagation;0;0
mergeStoreRelationships;mergeStoreRelationships(class OMR::ValuePropagation::ValueConstraint *,class OMR::ValuePropagation::ValueConstraint *,_Bool);OMR;ValuePropagation;0;0
mergeValueConstraints;mergeValueConstraints(class OMR::ValuePropagation::ValueConstraint *,class OMR::ValuePropagation::ValueConstraint *,_Bool);OMR;ValuePropagation;0;0
mustTakeException;mustTakeException();OMR;ValuePropagation;0;0
operator=;operator=(class OMR::ValuePropagation &&);OMR;ValuePropagation;1;0
operator=;operator=(const class OMR::ValuePropagation &);OMR;ValuePropagation;1;0
operator=;operator=(const class TR::ValuePropagation &);TR;ValuePropagation;1;0
operator=;operator=(class TR::ValuePropagation &&);TR;ValuePropagation;1;0
operator=;operator=(class TR::GlobalValuePropagation &&);TR;GlobalValuePropagation;1;0
operator=;operator=(const class TR::GlobalValuePropagation &);TR;GlobalValuePropagation;1;0
optDetailString;optDetailString();TR;GlobalValuePropagation;0;1
perform;perform();TR;GlobalValuePropagation;0;1
prepareForBlockVersion;prepareForBlockVersion(TR_LinkHead<struct OMR::ValuePropagation::ArrayLengthToVersion> *);OMR;ValuePropagation;0;0
printEdgeConstraints;printEdgeConstraints(struct OMR::ValuePropagation::EdgeConstraints *);OMR;ValuePropagation;0;0
printGlobalConstraints;printGlobalConstraints();OMR;ValuePropagation;0;0
printParentStructure;printParentStructure(class TR_Structure *);OMR;ValuePropagation;0;0
printStructureInfo;printStructureInfo(class TR_Structure *,_Bool,_Bool);OMR;ValuePropagation;0;0
printValueConstraints;printValueConstraints(ValueConstraints &);OMR;ValuePropagation;0;0
processAcyclicRegion;processAcyclicRegion(class TR_StructureSubGraphNode *,_Bool,_Bool);TR;GlobalValuePropagation;0;0
processBlock;processBlock(class TR_StructureSubGraphNode *,_Bool,_Bool);TR;GlobalValuePropagation;0;0
processImproperLoop;processImproperLoop(class TR_StructureSubGraphNode *,_Bool,_Bool);TR;GlobalValuePropagation;0;0
processNaturalLoop;processNaturalLoop(class TR_StructureSubGraphNode *,_Bool,_Bool);TR;GlobalValuePropagation;0;0
processRegionNode;processRegionNode(class TR_StructureSubGraphNode *,_Bool,_Bool);TR;GlobalValuePropagation;0;0
processRegionSubgraph;processRegionSubgraph(class TR_StructureSubGraphNode *,_Bool,_Bool,_Bool);TR;GlobalValuePropagation;0;0
processStructure;processStructure(class TR_StructureSubGraphNode *,_Bool,_Bool);TR;GlobalValuePropagation;0;0
processTrees;processTrees(TR::TreeTop *,TR::TreeTop *);OMR;ValuePropagation;0;0
propagateConstraint;propagateConstraint(TR::Node *,int32_t,struct OMR::ValuePropagation::Relationship *,struct OMR::ValuePropagation::Relationship *,ValueConstraints *);OMR;ValuePropagation;0;0
propagateOutputConstraints;propagateOutputConstraints(class TR_StructureSubGraphNode *,_Bool,_Bool,List<TR::CFGEdge> &,List<TR::CFGEdge> *);TR;GlobalValuePropagation;0;0
registerPreXClass;registerPreXClass(TR::VPConstraint *);OMR;ValuePropagation;0;0
removeArrayCopyNode;removeArrayCopyNode(TR::TreeTop *);OMR;ValuePropagation;0;0
removeBndChecksFromFastVersion;removeBndChecksFromFastVersion(struct OMR::ValuePropagation::BlockVersionInfo *);OMR;ValuePropagation;0;0
removeChildren;removeChildren(TR::Node *,_Bool);OMR;ValuePropagation;0;0
removeConstraint;removeConstraint(int32_t,ValueConstraints &,int32_t);OMR;ValuePropagation;0;0
removeConstraints;removeConstraints();OMR;ValuePropagation;0;0
removeConstraints;removeConstraints(int32_t);OMR;ValuePropagation;0;0
removeConstraints;removeConstraints(int32_t,ValueConstraints *);OMR;ValuePropagation;0;0
removeConstraints;removeConstraints(int32_t,ValueConstraints *,_Bool);OMR;ValuePropagation;0;0
removeNode;removeNode(TR::Node *,_Bool);OMR;ValuePropagation;0;0
removeRestOfBlock;removeRestOfBlock();OMR;ValuePropagation;0;0
removeStoreConstraints;removeStoreConstraints(ValueConstraints *,int32_t,int32_t);OMR;ValuePropagation;0;0
replaceByConstant;replaceByConstant(TR::Node *,TR::VPConstraint *,_Bool);OMR;ValuePropagation;0;0
setChTableValidityChecked;setChTableValidityChecked(_Bool);OMR;ValuePropagation;0;0
setChTableWasValid;setChTableWasValid(_Bool);OMR;ValuePropagation;0;0
setChecksRemoved;setChecksRemoved();OMR;ValuePropagation;0;0
setCurrentParent;setCurrentParent(TR::Node *);OMR;ValuePropagation;0;0
setEnableSimplifier;setEnableSimplifier();OMR;ValuePropagation;0;0
setIntersectionFailed;setIntersectionFailed(_Bool);OMR;ValuePropagation;0;0
setUnreachablePath;setUnreachablePath();OMR;ValuePropagation;0;0
setUnreachablePath;setUnreachablePath(TR::CFGEdge *);OMR;ValuePropagation;0;0
setUnreachablePath;setUnreachablePath(ValueConstraints &);OMR;ValuePropagation;0;0
setUnreachableStore;setUnreachableStore(struct OMR::ValuePropagation::StoreRelationship *);OMR;ValuePropagation;0;0
setUpInductionVariables;setUpInductionVariables(class TR_StructureSubGraphNode *);OMR;ValuePropagation;0;0
transformArrayCopyCall;transformArrayCopyCall(TR::Node *);OMR;ValuePropagation;0;0
transformArrayCopySpineCheck;transformArrayCopySpineCheck(struct OMR::ValuePropagation::TR_ArrayCopySpineCheck *);OMR;ValuePropagation;0;0
transformRealTimeArrayCopy;transformRealTimeArrayCopy(struct OMR::ValuePropagation::TR_RealTimeArrayCopy *);OMR;ValuePropagation;0;0
transformReferenceArrayCopy;transformReferenceArrayCopy(struct OMR::ValuePropagation::TR_TreeTopWrtBarFlag *);OMR;ValuePropagation;0;0
transformReferenceArrayCopyWithoutCreatingStoreTrees;transformReferenceArrayCopyWithoutCreatingStoreTrees(struct OMR::ValuePropagation::TR_TreeTopWrtBarFlag *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);OMR;ValuePropagation;0;0
transformStringConcats;transformStringConcats(struct OMR::ValuePropagation::VPStringCached *);OMR;ValuePropagation;0;0
transformStringCtors;transformStringCtors(struct OMR::ValuePropagation::VPTreeTopPair *);OMR;ValuePropagation;0;0
transformUnknownTypeArrayCopy;transformUnknownTypeArrayCopy(struct OMR::ValuePropagation::TR_TreeTopWrtBarFlag *);OMR;ValuePropagation;0;0
transformUnsafeCopyMemoryCall;transformUnsafeCopyMemoryCall(TR::Node *);OMR;ValuePropagation;0;0
useDefInfoInvalid;useDefInfoInvalid();OMR;ValuePropagation;0;0
usePreexistence;usePreexistence();OMR;ValuePropagation;0;0
valueNumberInfoInvalid;valueNumberInfoInvalid();OMR;ValuePropagation;0;0
versionBlocks;versionBlocks();OMR;ValuePropagation;0;0
~GlobalValuePropagation;~GlobalValuePropagation();TR;GlobalValuePropagation;1;1
~ValuePropagation;~ValuePropagation();OMR;ValuePropagation;1;1
~ValuePropagation;~ValuePropagation();TR;ValuePropagation;1;1
LocalValuePropagation;LocalValuePropagation(class TR::LocalValuePropagation &&);TR;LocalValuePropagation;1;0
LocalValuePropagation;LocalValuePropagation(const class TR::LocalValuePropagation &);TR;LocalValuePropagation;1;0
LocalValuePropagation;LocalValuePropagation(TR::OptimizationManager *);TR;LocalValuePropagation;0;0
create;create(TR::OptimizationManager *);TR;LocalValuePropagation;0;0
operator=;operator=(class TR::LocalValuePropagation &&);TR;LocalValuePropagation;1;0
operator=;operator=(const class TR::LocalValuePropagation &);TR;LocalValuePropagation;1;0
optDetailString;optDetailString();TR;LocalValuePropagation;0;1
perform;perform();TR;LocalValuePropagation;0;1
performOnBlock;performOnBlock(TR::Block *);TR;LocalValuePropagation;0;1
postPerformOnBlocks;postPerformOnBlocks();TR;LocalValuePropagation;0;1
prePerformOnBlocks;prePerformOnBlocks();TR;LocalValuePropagation;0;1
processBlock;processBlock(TR::TreeTop *);TR;LocalValuePropagation;0;0
~LocalValuePropagation;~LocalValuePropagation();TR;LocalValuePropagation;1;1
OptimizationManager;OptimizationManager(const class TR::OptimizationManager &);TR;OptimizationManager;1;0
Optimizer;Optimizer(class TR::Optimizer &&);TR;Optimizer;1;0
Optimizer;Optimizer(const class TR::Optimizer &);TR;Optimizer;1;0
~Optimizer;~Optimizer();OMR;Optimizer;1;0
RegDepCopyRemoval;RegDepCopyRemoval(const class TR::RegDepCopyRemoval &);TR;RegDepCopyRemoval;1;0
RegDepCopyRemoval;RegDepCopyRemoval(class TR::RegDepCopyRemoval &&);TR;RegDepCopyRemoval;1;0
RegDepCopyRemoval;RegDepCopyRemoval(TR::OptimizationManager *);TR;RegDepCopyRemoval;0;0
clearRegDepInfo;clearRegDepInfo();TR;RegDepCopyRemoval;0;0
create;create(TR::OptimizationManager *);TR;RegDepCopyRemoval;0;0
discardAllNodeChoices;discardAllNodeChoices();TR;RegDepCopyRemoval;0;0
discardNodeChoice;discardNodeChoice(TR_GlobalRegisterNumber);TR;RegDepCopyRemoval;0;0
generateRegcopyDebugCounter;generateRegcopyDebugCounter(const char *);TR;RegDepCopyRemoval;0;0
getNodeChoice;getNodeChoice(TR_GlobalRegisterNumber);TR;RegDepCopyRemoval;0;0
getRegDepInfo;getRegDepInfo(TR_GlobalRegisterNumber);TR;RegDepCopyRemoval;0;0
ignoreRegister;ignoreRegister(TR_GlobalRegisterNumber);TR;RegDepCopyRemoval;0;0
makeFreshCopy;makeFreshCopy(TR_GlobalRegisterNumber);TR;RegDepCopyRemoval;0;0
operator=;operator=(class TR::RegDepCopyRemoval &&);TR;RegDepCopyRemoval;1;0
operator=;operator=(const class TR::RegDepCopyRemoval &);TR;RegDepCopyRemoval;1;0
optDetailString;optDetailString();TR;RegDepCopyRemoval;0;1
perform;perform();TR;RegDepCopyRemoval;0;1
processRegDeps;processRegDeps(TR::Node *,TR::TreeTop *);TR;RegDepCopyRemoval;0;0
rangeCheckRegister;rangeCheckRegister(TR_GlobalRegisterNumber);TR;RegDepCopyRemoval;0;0
readRegDeps;readRegDeps();TR;RegDepCopyRemoval;0;0
registerName;registerName(TR_GlobalRegisterNumber);TR;RegDepCopyRemoval;0;0
rememberNodeChoice;rememberNodeChoice(TR_GlobalRegisterNumber,TR::Node *);TR;RegDepCopyRemoval;0;0
reuseCopy;reuseCopy(TR_GlobalRegisterNumber);TR;RegDepCopyRemoval;0;0
selectNodesToCopy;selectNodesToCopy(TR::NodeChecklist &);TR;RegDepCopyRemoval;0;0
selectNodesToReuse;selectNodesToReuse(TR::NodeChecklist &);TR;RegDepCopyRemoval;0;0
updateRegDeps;updateRegDeps(TR::NodeChecklist &);TR;RegDepCopyRemoval;0;0
updateSingleRegDep;updateSingleRegDep(TR_GlobalRegisterNumber,TR::Node *);TR;RegDepCopyRemoval;0;0
~RegDepCopyRemoval;~RegDepCopyRemoval();TR;RegDepCopyRemoval;1;1
TR_ExceptionCheckMotion;TR_ExceptionCheckMotion(class TR_ExceptionCheckMotion &&);;TR_ExceptionCheckMotion;1;0
TR_ExceptionCheckMotion;TR_ExceptionCheckMotion(TR::Compilation *,TR::Optimizer *,class TR_PartialRedundancy *);;TR_ExceptionCheckMotion;0;0
allocateContainer;allocateContainer(int32_t);;TR_ExceptionCheckMotion;0;0
analyzeBlockStructure;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_ExceptionCheckMotion;0;1
analyzeNodeIfSuccessorsAnalyzed;analyzeNodeIfSuccessorsAnalyzed(TR::CFGNode *,class TR_RegionStructure *,ContainerType *,ContainerType *);;TR_ExceptionCheckMotion;0;0
analyzeNodeToInitializeGenAndKillSets;analyzeNodeToInitializeGenAndKillSets(TR::TreeTop *,vcount_t,class TR_BlockStructure *);;TR_ExceptionCheckMotion;0;0
analyzeRegionStructure;analyzeRegionStructure(class TR_RegionStructure *,_Bool);;TR_ExceptionCheckMotion;0;1
appendLists;appendLists(List<TR::Node> *,List<TR::Node> *);;TR_ExceptionCheckMotion;0;0
areExceptionSuccessorsIdentical;areExceptionSuccessorsIdentical(TR::CFGNode *,TR::CFGNode *);;TR_ExceptionCheckMotion;0;0
asExceptionCheckMotion;asExceptionCheckMotion();;TR_ExceptionCheckMotion;0;1
checkIfNodeCanSomehowSurvive;checkIfNodeCanSomehowSurvive(TR::Node *,ContainerType *);;TR_ExceptionCheckMotion;0;0
checkIfNodeCanSurvive;checkIfNodeCanSurvive(TR::Node *,ContainerType *);;TR_ExceptionCheckMotion;0;0
compareLists;compareLists(List<TR::Node> *,List<TR::Node> *);;TR_ExceptionCheckMotion;0;0
composeLists;composeLists(List<TR::Node> *,List<TR::Node> *,ContainerType *);;TR_ExceptionCheckMotion;0;0
copyListFromInto;copyListFromInto(List<TR::Node> *,List<TR::Node> *);;TR_ExceptionCheckMotion;0;0
createAnalysisInfo;createAnalysisInfo();;TR_ExceptionCheckMotion;0;0
createAndAddListElement;createAndAddListElement(TR::Node *,int32_t);;TR_ExceptionCheckMotion;0;0
getActualOptSetInfo;getActualOptSetInfo();;TR_ExceptionCheckMotion;0;0
getActualRednSetInfo;getActualRednSetInfo();;TR_ExceptionCheckMotion;0;0
getAnalysisInfo;getAnalysisInfo(class TR_Structure *);;TR_ExceptionCheckMotion;0;0
getExprsUnaffectedByOrder;getExprsUnaffectedByOrder();;TR_ExceptionCheckMotion;0;0
getGenSetList;getGenSetList();;TR_ExceptionCheckMotion;0;0
getKind;getKind();;TR_ExceptionCheckMotion;0;1
getOptimisticOptSetInfo;getOptimisticOptSetInfo();;TR_ExceptionCheckMotion;0;0
getOptimisticRednSetInfo;getOptimisticRednSetInfo();;TR_ExceptionCheckMotion;0;0
getOrderedOptList;getOrderedOptList();;TR_ExceptionCheckMotion;0;0
getOrderedOptNumbersList;getOrderedOptNumbersList();;TR_ExceptionCheckMotion;0;0
getPartialRedundancy;getPartialRedundancy();;TR_ExceptionCheckMotion;0;0
getTrySecondBestSolution;getTrySecondBestSolution();;TR_ExceptionCheckMotion;0;0
includeRelevantNodes;includeRelevantNodes(TR::Node *,vcount_t,int32_t);;TR_ExceptionCheckMotion;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,class TR_Structure *);;TR_ExceptionCheckMotion;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,class TR_RegionStructure *);;TR_ExceptionCheckMotion;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,TR::Block *);;TR_ExceptionCheckMotion;0;0
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo();;TR_ExceptionCheckMotion;0;0
initializeOutList;initializeOutList(List<TR::Node> *);;TR_ExceptionCheckMotion;0;0
initializeOutLists;initializeOutLists(List<TR::Node> **);;TR_ExceptionCheckMotion;0;0
isNodeKilledByChild;isNodeKilledByChild(TR::Node *,TR::Node *,int32_t);;TR_ExceptionCheckMotion;0;0
isNodeValueZero;isNodeValueZero(TR::Node *);;TR_ExceptionCheckMotion;0;0
markNodeAsSurvivor;markNodeAsSurvivor(TR::Node *,ContainerType *);;TR_ExceptionCheckMotion;0;0
operator=;operator=(const class TR_ExceptionCheckMotion &);;TR_ExceptionCheckMotion;1;0
operator=;operator=(class TR_ExceptionCheckMotion &&);;TR_ExceptionCheckMotion;1;0
perform;perform();;TR_ExceptionCheckMotion;0;1
removeFromList;removeFromList(ListElement<TR::Node> *,List<TR::Node> *,ListElement<TR::Node> *);;TR_ExceptionCheckMotion;0;0
setBlockFenceStatus;setBlockFenceStatus(TR::Block *);;TR_ExceptionCheckMotion;0;0
trace;trace();;TR_ExceptionCheckMotion;0;0
~TR_ExceptionCheckMotion;~TR_ExceptionCheckMotion();;TR_ExceptionCheckMotion;1;1
TR_GeneralSinkStores;TR_GeneralSinkStores(class TR_GeneralSinkStores &&);;TR_GeneralSinkStores;1;0
TR_GeneralSinkStores;TR_GeneralSinkStores(const class TR_GeneralSinkStores &);;TR_GeneralSinkStores;1;0
TR_GeneralSinkStores;TR_GeneralSinkStores(TR::OptimizationManager *);;TR_GeneralSinkStores;0;0
TR_SinkStores;TR_SinkStores(class TR_SinkStores &&);;TR_SinkStores;1;0
TR_SinkStores;TR_SinkStores(const class TR_SinkStores &);;TR_SinkStores;1;0
TR_SinkStores;TR_SinkStores(TR::OptimizationManager *);;TR_SinkStores;0;0
checkLiveMergingPaths;checkLiveMergingPaths(class TR_BlockListEntry *,int32_t);;TR_SinkStores;0;0
coalesceSimilarEdgePlacements;coalesceSimilarEdgePlacements();;TR_SinkStores;0;0
create;create(TR::OptimizationManager *);;TR_GeneralSinkStores;0;0
doSinking;doSinking();;TR_SinkStores;0;0
enablePreciseSymbolTracking;enablePreciseSymbolTracking();;TR_SinkStores;0;0
findEdgeInformation;findEdgeInformation(TR::CFGEdge *,List<class TR_EdgeInformation> &);;TR_SinkStores;0;0
findFirstUseOfLoad;findFirstUseOfLoad(TR::Node *);;TR_SinkStores;0;0
findTempSym;findTempSym(TR::Node *);;TR_SinkStores;0;0
genHandlerIndex;genHandlerIndex();;TR_SinkStores;0;0
genStoreToTempSyms;genStoreToTempSyms(TR::TreeTop *,TR::Node *,class TR_BitVector *,class TR_BitVector *,TR::Node *,List<class TR_MovableStore> &);;TR_SinkStores;0;0
getSinkableSymbol;getSinkableSymbol(TR::Node *);;TR_SinkStores;0;0
insertAnchoredNodes;insertAnchoredNodes(class TR_MovableStore *,TR::Node *,TR::Node *,TR::Node *,int32_t,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,TR::Block *,List<class TR_IndirectLoadAnchor> *,vcount_t);;TR_SinkStores;0;0
isCorrectCommonedLoad;isCorrectCommonedLoad(TR::Node *,TR::Node *);;TR_SinkStores;0;0
isExceptionFlagIsSticky;isExceptionFlagIsSticky();;TR_SinkStores;0;0
isSafeToSinkThruEdgePlacement;isSafeToSinkThruEdgePlacement(int,TR::CFGNode *,TR::CFGNode *,class TR_BitVector *);;TR_SinkStores;0;0
isSymUsedInEdgePlacement;isSymUsedInEdgePlacement(TR::CFGNode *,TR::CFGNode *);;TR_SinkStores;0;0
lookForSinkableStores;lookForSinkableStores();;TR_SinkStores;0;0
operator=;operator=(class TR_SinkStores &&);;TR_SinkStores;1;0
operator=;operator=(const class TR_SinkStores &);;TR_SinkStores;1;0
operator=;operator=(const class TR_GeneralSinkStores &);;TR_GeneralSinkStores;1;0
operator=;operator=(class TR_GeneralSinkStores &&);;TR_GeneralSinkStores;1;0
optDetailString;optDetailString();;TR_GeneralSinkStores;0;1
perform;perform();;TR_GeneralSinkStores;0;1
performStoreSinking;performStoreSinking();;TR_SinkStores;0;0
performThisTransformation;performThisTransformation();;TR_SinkStores;0;0
placeStoresAlongEdges;placeStoresAlongEdges(List<class TR_StoreInformation> &,List<class TR_EdgeInformation> &);;TR_SinkStores;0;0
placeStoresInBlock;placeStoresInBlock(List<class TR_StoreInformation> &,TR::Block *);;TR_SinkStores;0;0
recordPlacementForDefAlongEdge;recordPlacementForDefAlongEdge(class TR_EdgeStorePlacement *);;TR_SinkStores;0;0
recordPlacementForDefInBlock;recordPlacementForDefInBlock(class TR_BlockStorePlacement *);;TR_SinkStores;0;0
replaceLoadsWithTempSym;replaceLoadsWithTempSym(TR::Node *,TR::Node *,class TR_BitVector *);;TR_SinkStores;0;0
searchAndMarkFirstUses;searchAndMarkFirstUses(TR::Node *,TR::TreeTop *,class TR_MovableStore *,TR::Block *,class TR_BitVector *);;TR_SinkStores;0;0
setExceptionFlagIsSticky;setExceptionFlagIsSticky(_Bool);;TR_SinkStores;0;0
setSinkMethodMetaDataStores;setSinkMethodMetaDataStores(_Bool);;TR_SinkStores;0;0
setSinkStoresWithIndirectLoads;setSinkStoresWithIndirectLoads(_Bool);;TR_SinkStores;0;0
setSinkStoresWithStaticLoads;setSinkStoresWithStaticLoads(_Bool);;TR_SinkStores;0;0
setUsesDataFlowAnalysis;setUsesDataFlowAnalysis(_Bool);;TR_SinkStores;0;0
shouldSinkStoreAlongEdge;shouldSinkStoreAlongEdge(int,TR::CFGNode *,TR::CFGNode *,int32_t,_Bool,vcount_t,class TR_BitVector *);;TR_SinkStores;0;0
sinkMethodMetaDataStores;sinkMethodMetaDataStores();;TR_SinkStores;0;0
sinkStorePlacement;sinkStorePlacement(class TR_MovableStore *,_Bool);;TR_SinkStores;0;1
sinkStorePlacement;sinkStorePlacement(class TR_MovableStore *,_Bool);;TR_GeneralSinkStores;0;1
sinkStoresWithIndirectLoads;sinkStoresWithIndirectLoads();;TR_SinkStores;0;0
sinkStoresWithStaticLoads;sinkStoresWithStaticLoads();;TR_SinkStores;0;0
storeCanMoveThroughBlock;storeCanMoveThroughBlock(class TR_BitVector *,class TR_BitVector *,int32_t,class TR_BitVector *,class TR_BitVector *);;TR_SinkStores;0;1
storeIsSinkingCandidate;storeIsSinkingCandidate(TR::Block *,TR::Node *,int32_t,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t &,vcount_t &);;TR_SinkStores;0;1
storeIsSinkingCandidate;storeIsSinkingCandidate(TR::Block *,TR::Node *,int32_t,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t &,vcount_t &);;TR_GeneralSinkStores;0;1
treeIsSinkableStore;treeIsSinkableStore(TR::Node *,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t);;TR_SinkStores;0;0
usesDataFlowAnalysis;usesDataFlowAnalysis();;TR_SinkStores;0;0
~TR_GeneralSinkStores;~TR_GeneralSinkStores();;TR_GeneralSinkStores;1;1
~TR_SinkStores;~TR_SinkStores();;TR_SinkStores;1;1
TR_HashValueNumberInfo;TR_HashValueNumberInfo(class TR_HashValueNumberInfo &);;TR_HashValueNumberInfo;1;0
TR_IndexExprManipulator;TR_IndexExprManipulator(class TR_IndexExprManipulator &&);;TR_IndexExprManipulator;1;0
TR_IndexExprManipulator;TR_IndexExprManipulator(const class TR_IndexExprManipulator &);;TR_IndexExprManipulator;1;0
TR_IndexExprManipulator;TR_IndexExprManipulator(TR::OptimizationManager *);;TR_IndexExprManipulator;0;0
create;create(TR::OptimizationManager *);;TR_IndexExprManipulator;0;0
operator=;operator=(class TR_IndexExprManipulator &&);;TR_IndexExprManipulator;1;0
operator=;operator=(const class TR_IndexExprManipulator &);;TR_IndexExprManipulator;1;0
optDetailString;optDetailString();;TR_IndexExprManipulator;0;1
perform;perform();;TR_IndexExprManipulator;0;1
rewriteIndexExpression;rewriteIndexExpression(class TR_PrimaryInductionVariable *,TR::Node *,TR::Node *,_Bool);;TR_IndexExprManipulator;0;0
rewriteIndexExpression;rewriteIndexExpression(class TR_Structure *);;TR_IndexExprManipulator;0;0
~TR_IndexExprManipulator;~TR_IndexExprManipulator();;TR_IndexExprManipulator;1;1
TR_InnerPreexistence;TR_InnerPreexistence(const class TR_InnerPreexistence &);;TR_InnerPreexistence;1;0
TR_InnerPreexistence;TR_InnerPreexistence(class TR_InnerPreexistence &&);;TR_InnerPreexistence;1;0
TR_InnerPreexistence;TR_InnerPreexistence(TR::OptimizationManager *);;TR_InnerPreexistence;0;0
create;create(TR::OptimizationManager *);;TR_InnerPreexistence;0;0
devirtualize;devirtualize(class TR_InnerPreexistence::GuardInfo *);;TR_InnerPreexistence;0;0
initialize;initialize();;TR_InnerPreexistence;0;0
operator=;operator=(class TR_InnerPreexistence &&);;TR_InnerPreexistence;1;0
operator=;operator=(const class TR_InnerPreexistence &);;TR_InnerPreexistence;1;0
optDetailString;optDetailString();;TR_InnerPreexistence;0;1
perform;perform();;TR_InnerPreexistence;0;1
transform;transform();;TR_InnerPreexistence;0;0
~TR_InnerPreexistence;~TR_InnerPreexistence();;TR_InnerPreexistence;1;1
TR_OSRDefAnalysis;TR_OSRDefAnalysis(const class TR_OSRDefAnalysis &);;TR_OSRDefAnalysis;1;0
TR_OSRDefAnalysis;TR_OSRDefAnalysis(class TR_OSRDefAnalysis &&);;TR_OSRDefAnalysis;1;0
TR_OSRDefAnalysis;TR_OSRDefAnalysis(TR::OptimizationManager *);;TR_OSRDefAnalysis;0;0
create;create(TR::OptimizationManager *);;TR_OSRDefAnalysis;0;0
operator=;operator=(class TR_OSRDefAnalysis &&);;TR_OSRDefAnalysis;1;0
operator=;operator=(const class TR_OSRDefAnalysis &);;TR_OSRDefAnalysis;1;0
optDetailString;optDetailString();;TR_OSRDefAnalysis;0;1
perform;perform();;TR_OSRDefAnalysis;0;1
requiresAnalysis;requiresAnalysis();;TR_OSRDefAnalysis;0;0
~TR_OSRDefAnalysis;~TR_OSRDefAnalysis();;TR_OSRDefAnalysis;1;1
TR_OSRDefInfo;TR_OSRDefInfo(TR::OptimizationManager *);;TR_OSRDefInfo;0;0
TR_OSRDefInfo;TR_OSRDefInfo(class TR_OSRDefInfo &&);;TR_OSRDefInfo;1;0
TR_UseDefInfo;TR_UseDefInfo(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool,_Bool,_Bool,_Bool,_Bool,_Bool);;TR_UseDefInfo;0;0
TR_UseDefInfo;TR_UseDefInfo(const class TR_UseDefInfo &);;TR_UseDefInfo;1;0
_runReachingDefinitions;_runReachingDefinitions(class TR_ReachingDefinitions &,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
addSharingInfo;addSharingInfo(class TR_UseDefInfo::AuxiliaryData &);;TR_OSRDefInfo;0;0
allocator;allocator();;TR_UseDefInfo;0;0
assignAdjustedNodeIndex;assignAdjustedNodeIndex(TR::Block *,TR::Node *,TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &,_Bool);;TR_UseDefInfo;0;0
buildDefUseInfo;buildDefUseInfo(_Bool);;TR_UseDefInfo;0;0
buildOSRDefs;buildOSRDefs(TR::Node *,void *,class TR_OSRPoint *,class TR_OSRPoint *,TR::Node *,class TR_UseDefInfo::AuxiliaryData &);;TR_OSRDefInfo;0;0
buildOSRDefs;buildOSRDefs(void *,class TR_UseDefInfo::AuxiliaryData &);;TR_OSRDefInfo;0;0
buildUseDefs;buildUseDefs(TR::Node *,void *,class TR_BitVector &,TR::Node *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
buildUseDefs;buildUseDefs(void *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
buildValueNumbersToMemorySymbolsMap;buildValueNumbersToMemorySymbolsMap();;TR_UseDefInfo;0;0
canComputeReachingDefs;canComputeReachingDefs();;TR_UseDefInfo;0;0
childIndexIndicatesImplicitStore;childIndexIndicatesImplicitStore(TR::Node *,int32_t);;TR_UseDefInfo;0;0
clearNode;clearNode(int32_t);;TR_UseDefInfo;0;0
clearUseDef;clearUseDef(int32_t);;TR_UseDefInfo;0;0
comp;comp();;TR_UseDefInfo;0;0
dereferenceDef;dereferenceDef(BitVector &,int32_t,BitVector &);;TR_UseDefInfo;0;0
dereferenceDefs;dereferenceDefs(int32_t,BitVector &,BitVector &);;TR_UseDefInfo;0;0
excludedGlobals;excludedGlobals(TR::Symbol *);;TR_UseDefInfo;0;0
fillInDataStructures;fillInDataStructures(class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
findAndPopulateVolatileSymbolsIndex;findAndPopulateVolatileSymbolsIndex(TR::BitVector &);;TR_UseDefInfo;0;0
findMemorySymbols;findMemorySymbols(TR::Node *);;TR_UseDefInfo;0;0
findTrivialSymbolsToExclude;findTrivialSymbolsToExclude(TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
findUseDefNodes;findUseDefNodes(TR::Block *,TR::Node *,TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &,TR::deque<uint32_t, TR::Region &> &,_Bool);;TR_UseDefInfo;0;0
getBitVectorSize;getBitVectorSize();;TR_UseDefInfo;0;0
getDefiningLoads;getDefiningLoads(BitVector &,TR::Node *);;TR_UseDefInfo;0;0
getDefiningLoads_ref;getDefiningLoads_ref(TR::Node *);;TR_UseDefInfo;0;0
getDefsForSymbol;getDefsForSymbol(class TR_BitVector &,int32_t,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
getDefsForSymbolIsZero;getDefsForSymbolIsZero(int32_t,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
getExpandedTotalNodes;getExpandedTotalNodes();;TR_UseDefInfo;0;0
getFirstDefIndex;getFirstDefIndex();;TR_UseDefInfo;0;0
getFirstRealDefIndex;getFirstRealDefIndex();;TR_UseDefInfo;0;0
getFirstUseIndex;getFirstUseIndex();;TR_UseDefInfo;0;0
getLastDefIndex;getLastDefIndex();;TR_UseDefInfo;0;0
getLastUseIndex;getLastUseIndex();;TR_UseDefInfo;0;0
getMemorySymbolIndex;getMemorySymbolIndex(TR::Node *);;TR_UseDefInfo;0;0
getNode;getNode(int32_t);;TR_UseDefInfo;0;0
getNumAliases;getNumAliases(TR::SymbolReference *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
getNumDefNodes;getNumDefNodes();;TR_UseDefInfo;0;0
getNumDefOnlyNodes;getNumDefOnlyNodes();;TR_UseDefInfo;0;0
getNumDefsOnEntry;getNumDefsOnEntry();;TR_UseDefInfo;0;0
getNumExpandedDefNodes;getNumExpandedDefNodes();;TR_UseDefInfo;0;0
getNumExpandedDefsOnEntry;getNumExpandedDefsOnEntry();;TR_UseDefInfo;0;0
getNumExpandedUseNodes;getNumExpandedUseNodes();;TR_UseDefInfo;0;0
getNumIrrelevantStores;getNumIrrelevantStores();;TR_UseDefInfo;0;0
getNumSymbols;getNumSymbols();;TR_UseDefInfo;0;0
getNumUseNodes;getNumUseNodes();;TR_UseDefInfo;0;0
getSingleDefiningLoad;getSingleDefiningLoad(TR::Node *);;TR_UseDefInfo;0;0
getSymRefIndexFromUseDefIndex;getSymRefIndexFromUseDefIndex(int32_t);;TR_UseDefInfo;0;0
getTotalNodes;getTotalNodes();;TR_UseDefInfo;0;0
getTreeTop;getTreeTop(int32_t);;TR_UseDefInfo;0;0
getUseDef;getUseDef(BitVector &,int32_t);;TR_UseDefInfo;0;0
getUseDefIsZero;getUseDefIsZero(int32_t);;TR_UseDefInfo;0;0
getUseDef_noExpansion;getUseDef_noExpansion(BitVector &,int32_t);;TR_UseDefInfo;0;0
getUseDef_ref;getUseDef_ref(int32_t,BitVector *);;TR_UseDefInfo;0;0
getUseDef_ref_body;getUseDef_ref_body(int32_t,class TR_BitVector *,class TR_UseDefInfo::BitVector *);;TR_UseDefInfo;0;0
getUsesFromDef;getUsesFromDef(BitVector &,int32_t,_Bool);;TR_UseDefInfo;0;0
getUsesFromDefIsZero;getUsesFromDefIsZero(int32_t,_Bool);;TR_UseDefInfo;0;0
getUsesFromDef_ref;getUsesFromDef_ref(int32_t,_Bool);;TR_UseDefInfo;0;0
hasGlobalsUseDefs;hasGlobalsUseDefs();;TR_UseDefInfo;0;0
hasLoadsAsDefs;hasLoadsAsDefs();;TR_UseDefInfo;0;0
indexSymbolsAndNodes;indexSymbolsAndNodes(class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
infoIsValid;infoIsValid();;TR_UseDefInfo;0;0
insertData;insertData(TR::Block *,TR::Node *,TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &,TR::SparseBitVector &,_Bool);;TR_UseDefInfo;0;0
invalidateUseDefInfo;invalidateUseDefInfo();;TR_UseDefInfo;0;0
isChildUse;isChildUse(TR::Node *,int32_t);;TR_UseDefInfo;0;0
isDefIndex;isDefIndex(uint32_t);;TR_UseDefInfo;0;0
isExpandedDefIndex;isExpandedDefIndex(uint32_t);;TR_UseDefInfo;0;0
isExpandedUseDefIndex;isExpandedUseDefIndex(uint32_t);;TR_UseDefInfo;0;0
isExpandedUseIndex;isExpandedUseIndex(uint32_t);;TR_UseDefInfo;0;0
isLoadAddrUse;isLoadAddrUse(TR::Node *);;TR_UseDefInfo;0;0
isPreciseDef;isPreciseDef(TR::Node *,TR::Node *);;TR_UseDefInfo;0;0
isTrivialUseDefNode;isTrivialUseDefNode(TR::Node *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
isTrivialUseDefNodeImpl;isTrivialUseDefNodeImpl(TR::Node *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
isTrivialUseDefSymRef;isTrivialUseDefSymRef(TR::SymbolReference *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
isUseIndex;isUseIndex(uint32_t);;TR_UseDefInfo;0;0
isValidAutoOrParm;isValidAutoOrParm(TR::SymbolReference *);;TR_UseDefInfo;0;0
operator delete;operator delete(void *,size_t);;TR_UseDefInfo;0;0
operator new;operator new(size_t,TR::Allocator);;TR_UseDefInfo;0;0
operator=;operator=(const class TR_UseDefInfo &);;TR_UseDefInfo;1;0
operator=;operator=(class TR_OSRDefInfo &&);;TR_OSRDefInfo;1;0
operator=;operator=(const class TR_OSRDefInfo &);;TR_OSRDefInfo;1;0
optimizer;optimizer();;TR_UseDefInfo;0;0
performAnalysis;performAnalysis(class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;1
performAnalysis;performAnalysis(class TR_UseDefInfo::AuxiliaryData &);;TR_OSRDefInfo;0;1
performFurtherAnalysis;performFurtherAnalysis(class TR_UseDefInfo::AuxiliaryData &);;TR_OSRDefInfo;0;0
prepareUseDefInfo;prepareUseDefInfo(_Bool,_Bool,_Bool,_Bool);;TR_UseDefInfo;0;0
processReachingDefinition;processReachingDefinition(void *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;1
processReachingDefinition;processReachingDefinition(void *,class TR_UseDefInfo::AuxiliaryData &);;TR_OSRDefInfo;0;1
resetDefUseInfo;resetDefUseInfo();;TR_UseDefInfo;0;0
resetUseDef;resetUseDef(int32_t,int32_t);;TR_UseDefInfo;0;0
setSingleDefiningLoad;setSingleDefiningLoad(int32_t,BitVector &,BitVector &);;TR_UseDefInfo;0;0
setUseDef;setUseDef(int32_t,int32_t);;TR_UseDefInfo;0;0
setVolatileSymbolsIndexAndRecurse;setVolatileSymbolsIndexAndRecurse(TR::BitVector &,int32_t);;TR_UseDefInfo;0;0
shouldIndexVolatileSym;shouldIndexVolatileSym(TR::SymbolReference *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
skipAnalyzingForCompileTime;skipAnalyzingForCompileTime(TR::Node *,TR::Block *,TR::Compilation *,class TR_UseDefInfo::AuxiliaryData &);;TR_UseDefInfo;0;0
trHeapMemory;trHeapMemory();;TR_UseDefInfo;0;0
trMemory;trMemory();;TR_UseDefInfo;0;0
trStackMemory;trStackMemory();;TR_UseDefInfo;0;0
trace;trace();;TR_UseDefInfo;0;0
~TR_OSRDefInfo;~TR_OSRDefInfo();;TR_OSRDefInfo;1;1
~TR_UseDefInfo;~TR_UseDefInfo();;TR_UseDefInfo;0;1
TR_OSRExceptionEdgeRemoval;TR_OSRExceptionEdgeRemoval(TR::OptimizationManager *);;TR_OSRExceptionEdgeRemoval;0;0
TR_OSRExceptionEdgeRemoval;TR_OSRExceptionEdgeRemoval(class TR_OSRExceptionEdgeRemoval &&);;TR_OSRExceptionEdgeRemoval;1;0
TR_OSRExceptionEdgeRemoval;TR_OSRExceptionEdgeRemoval(const class TR_OSRExceptionEdgeRemoval &);;TR_OSRExceptionEdgeRemoval;1;0
addDeadStores;addDeadStores(TR::Block *,class TR_BitVector &,_Bool);;TR_OSRExceptionEdgeRemoval;0;0
create;create(TR::OptimizationManager *);;TR_OSRExceptionEdgeRemoval;0;0
operator=;operator=(const class TR_OSRExceptionEdgeRemoval &);;TR_OSRExceptionEdgeRemoval;1;0
operator=;operator=(class TR_OSRExceptionEdgeRemoval &&);;TR_OSRExceptionEdgeRemoval;1;0
optDetailString;optDetailString();;TR_OSRExceptionEdgeRemoval;0;1
perform;perform();;TR_OSRExceptionEdgeRemoval;0;1
removeDeadStores;removeDeadStores(TR::Block *,class TR_BitVector &);;TR_OSRExceptionEdgeRemoval;0;0
~TR_OSRExceptionEdgeRemoval;~TR_OSRExceptionEdgeRemoval();;TR_OSRExceptionEdgeRemoval;1;1
TR_OSRLiveRangeAnalysis;TR_OSRLiveRangeAnalysis(class TR_OSRLiveRangeAnalysis &&);;TR_OSRLiveRangeAnalysis;1;0
TR_OSRLiveRangeAnalysis;TR_OSRLiveRangeAnalysis(const class TR_OSRLiveRangeAnalysis &);;TR_OSRLiveRangeAnalysis;1;0
TR_OSRLiveRangeAnalysis;TR_OSRLiveRangeAnalysis(TR::OptimizationManager *);;TR_OSRLiveRangeAnalysis;0;0
buildDeadPendingPushSlotsInfo;buildDeadPendingPushSlotsInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *);;TR_OSRLiveRangeAnalysis;0;0
buildDeadSlotsInfo;buildDeadSlotsInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *,int32_t *,_Bool);;TR_OSRLiveRangeAnalysis;0;0
buildOSRLiveRangeInfo;buildOSRLiveRangeInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *,int32_t *,int32_t,class TR_OSRMethodData *,_Bool);;TR_OSRLiveRangeAnalysis;0;0
buildOSRSlotSharingInfo;buildOSRSlotSharingInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *,int32_t *,class TR_BitVector *);;TR_OSRLiveRangeAnalysis;0;0
collectPendingPush;collectPendingPush(TR_ByteCodeInfo,TR::TreeTop *,class TR_BitVector *);;TR_OSRLiveRangeAnalysis;0;0
create;create(TR::OptimizationManager *);;TR_OSRLiveRangeAnalysis;0;0
fullAnalysis;fullAnalysis(_Bool,_Bool);;TR_OSRLiveRangeAnalysis;0;0
intersectWithExistingDeadSlots;intersectWithExistingDeadSlots(class TR_OSRPoint *,class TR_BitVector *,class TR_BitVector *,_Bool);;TR_OSRLiveRangeAnalysis;0;0
maintainLiveness;maintainLiveness(TR::Node *,TR::Node *,int32_t,vcount_t,class TR_Liveness *,class TR_BitVector *,TR::Block *);;TR_OSRLiveRangeAnalysis;0;0
operator=;operator=(class TR_OSRLiveRangeAnalysis &&);;TR_OSRLiveRangeAnalysis;1;0
operator=;operator=(const class TR_OSRLiveRangeAnalysis &);;TR_OSRLiveRangeAnalysis;1;0
optDetailString;optDetailString();;TR_OSRLiveRangeAnalysis;0;1
partialAnalysis;partialAnalysis();;TR_OSRLiveRangeAnalysis;0;0
pendingPushLiveRangeInfo;pendingPushLiveRangeInfo(TR::Node *,class TR_BitVector *,class TR_BitVector *,class TR_OSRPoint *,class TR_OSRMethodData *);;TR_OSRLiveRangeAnalysis;0;0
pendingPushSlotSharingInfo;pendingPushSlotSharingInfo(TR::Node *,class TR_BitVector *,class TR_BitVector *,class TR_OSRPoint *);;TR_OSRLiveRangeAnalysis;0;0
perform;perform();;TR_OSRLiveRangeAnalysis;0;1
shouldPerformAnalysis;shouldPerformAnalysis();;TR_OSRLiveRangeAnalysis;0;0
~TR_OSRLiveRangeAnalysis;~TR_OSRLiveRangeAnalysis();;TR_OSRLiveRangeAnalysis;1;1
TR_PartialRedundancy;TR_PartialRedundancy(const class TR_PartialRedundancy &);;TR_PartialRedundancy;1;0
TR_PartialRedundancy;TR_PartialRedundancy(class TR_PartialRedundancy &&);;TR_PartialRedundancy;1;0
TR_PartialRedundancy;TR_PartialRedundancy(TR::OptimizationManager *);;TR_PartialRedundancy;0;0
allocateContainer;allocateContainer(int32_t);;TR_PartialRedundancy;0;0
calculateGlobalRegisterWeightsBasedOnStructure;calculateGlobalRegisterWeightsBasedOnStructure(class TR_Structure *,int32_t *);;TR_PartialRedundancy;0;0
collectAllNodesToBeAnchored;collectAllNodesToBeAnchored(List<TR::Node> *,TR::Node *,vcount_t);;TR_PartialRedundancy;0;0
create;create(TR::OptimizationManager *);;TR_PartialRedundancy;0;0
duplicateExact;duplicateExact(TR::Node *,List<TR::Node> *,List<TR::Node> *,vcount_t);;TR_PartialRedundancy;0;0
eliminateRedundantComputations;eliminateRedundantComputations(TR::Block *,TR::Node **,ContainerType **,TR::TreeTop *);;TR_PartialRedundancy;0;0
eliminateRedundantSupportedNodes;eliminateRedundantSupportedNodes(TR::Node *,TR::Node *,_Bool,TR::TreeTop *,int32_t,vcount_t,ContainerType *,ContainerType *,TR::Node **);;TR_PartialRedundancy;0;0
getAlreadyPresentOptimalNode;getAlreadyPresentOptimalNode(TR::Node *,int32_t,vcount_t,_Bool &);;TR_PartialRedundancy;0;0
getGlobalRegisterWeights;getGlobalRegisterWeights();;TR_PartialRedundancy;0;0
getNumNodes;getNumNodes();;TR_PartialRedundancy;0;0
getNumberOfBits;getNumberOfBits();;TR_PartialRedundancy;0;0
getOptSetInfo;getOptSetInfo();;TR_PartialRedundancy;0;0
getOrigOptSetInfo;getOrigOptSetInfo();;TR_PartialRedundancy;0;0
getRednSetInfo;getRednSetInfo();;TR_PartialRedundancy;0;0
getSymOptimalNodes;getSymOptimalNodes();;TR_PartialRedundancy;0;0
getUnavailableSetInfo;getUnavailableSetInfo();;TR_PartialRedundancy;0;0
ignoreNode;ignoreNode(TR::Node *);;TR_PartialRedundancy;0;0
invalidateOptimalComputation;invalidateOptimalComputation(int32_t);;TR_PartialRedundancy;0;0
isNodeAnImplicitNoOp;isNodeAnImplicitNoOp(TR::Node *);;TR_PartialRedundancy;0;0
isNotPrevTreeStoreIntoFloatTemp;isNotPrevTreeStoreIntoFloatTemp(TR::Symbol *);;TR_PartialRedundancy;0;0
isOpCodeAnImplicitNoOp;isOpCodeAnImplicitNoOp(TR::ILOpCode &);;TR_PartialRedundancy;0;0
isSupportedOpCode;isSupportedOpCode(TR::Node *,TR::Node *);;TR_PartialRedundancy;0;0
operator=;operator=(class TR_PartialRedundancy &&);;TR_PartialRedundancy;1;0
operator=;operator=(const class TR_PartialRedundancy &);;TR_PartialRedundancy;1;0
optDetailString;optDetailString();;TR_PartialRedundancy;0;1
perform;perform();;TR_PartialRedundancy;0;1
placeComputationsOptimally;placeComputationsOptimally(TR::Block *,TR::Node ***);;TR_PartialRedundancy;0;0
placeInGlobalRegisters;placeInGlobalRegisters(TR::Block *);;TR_PartialRedundancy;0;0
printTrees;printTrees();;TR_PartialRedundancy;0;0
processReusedNode;processReusedNode(TR::Node *,TR::ILOpCodes,TR::SymbolReference *,int);;TR_PartialRedundancy;0;0
replaceOptimalSubNodes;replaceOptimalSubNodes(TR::TreeTop *,TR::Node *,TR::Node *,int32_t,TR::Node *,TR::Node *,_Bool,int32_t,vcount_t);;TR_PartialRedundancy;0;0
~TR_PartialRedundancy;~TR_PartialRedundancy();;TR_PartialRedundancy;1;1
TR_PrefetchInsertion;TR_PrefetchInsertion(class TR_PrefetchInsertion &&);;TR_PrefetchInsertion;1;0
TR_PrefetchInsertion;TR_PrefetchInsertion(TR::OptimizationManager *);;TR_PrefetchInsertion;0;0
TR_PrefetchInsertion;TR_PrefetchInsertion(const class TR_PrefetchInsertion &);;TR_PrefetchInsertion;1;0
collectLoops;collectLoops(class TR_Structure *);;TR_PrefetchInsertion;0;0
create;create(TR::OptimizationManager *);;TR_PrefetchInsertion;0;0
createDeltaNode;createDeltaNode(TR::Node *,TR::Node *,int32_t);;TR_PrefetchInsertion;0;0
examineLoop;examineLoop(class TR_RegionStructure *);;TR_PrefetchInsertion;0;0
examineNode;examineNode(TR::TreeTop *,TR::Block *,TR::Node *,intptrj_t,class TR_RegionStructure *);;TR_PrefetchInsertion;0;0
getClosestPIV;getClosestPIV(TR::Block *);;TR_PrefetchInsertion;0;0
insertPrefetchInstructions;insertPrefetchInstructions();;TR_PrefetchInsertion;0;0
isBIV;isBIV(TR::SymbolReference *,TR::Block *,class TR_BasicInductionVariable *&);;TR_PrefetchInsertion;0;0
operator=;operator=(class TR_PrefetchInsertion &&);;TR_PrefetchInsertion;1;0
operator=;operator=(const class TR_PrefetchInsertion &);;TR_PrefetchInsertion;1;0
optDetailString;optDetailString();;TR_PrefetchInsertion;0;1
perform;perform();;TR_PrefetchInsertion;0;1
~TR_PrefetchInsertion;~TR_PrefetchInsertion();;TR_PrefetchInsertion;1;1
TR_RedundantAsyncCheckRemoval;TR_RedundantAsyncCheckRemoval(const class TR_RedundantAsyncCheckRemoval &);;TR_RedundantAsyncCheckRemoval;1;0
TR_RedundantAsyncCheckRemoval;TR_RedundantAsyncCheckRemoval(class TR_RedundantAsyncCheckRemoval &&);;TR_RedundantAsyncCheckRemoval;1;0
TR_RedundantAsyncCheckRemoval;TR_RedundantAsyncCheckRemoval(TR::OptimizationManager *);;TR_RedundantAsyncCheckRemoval;0;0
callDoesAnImplicitAsyncCheck;callDoesAnImplicitAsyncCheck(TR::Node *);;TR_RedundantAsyncCheckRemoval;0;0
computeCoverageInfo;computeCoverageInfo(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);;TR_RedundantAsyncCheckRemoval;0;0
containsImplicitInternalPointer;containsImplicitInternalPointer(TR::Node *);;TR_RedundantAsyncCheckRemoval;0;0
create;create(TR::OptimizationManager *);;TR_RedundantAsyncCheckRemoval;0;0
enqueueSinks;enqueueSinks(class TR_RegionStructure *,TR_Queue<class TR_StructureSubGraphNode> *,_Bool);;TR_RedundantAsyncCheckRemoval;0;0
estimateLoopIterations;estimateLoopIterations(class TR_RegionStructure *);;TR_RedundantAsyncCheckRemoval;0;0
findShallowestCommonCaller;findShallowestCommonCaller(int32_t,int32_t);;TR_RedundantAsyncCheckRemoval;0;0
findSmallestAncestor;findSmallestAncestor();;TR_RedundantAsyncCheckRemoval;0;0
getNearestAncestors;getNearestAncestors(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);;TR_RedundantAsyncCheckRemoval;0;0
hasEarlyExit;hasEarlyExit(class TR_RegionStructure *);;TR_RedundantAsyncCheckRemoval;0;0
initialize;initialize(class TR_Structure *);;TR_RedundantAsyncCheckRemoval;0;0
insertAsyncCheckOnSubTree;insertAsyncCheckOnSubTree(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);;TR_RedundantAsyncCheckRemoval;0;0
isMaxLoopIterationGuardedLoop;isMaxLoopIterationGuardedLoop(class TR_RegionStructure *);;TR_RedundantAsyncCheckRemoval;0;0
markAncestors;markAncestors(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);;TR_RedundantAsyncCheckRemoval;0;0
markExtendees;markExtendees(TR::Block *,_Bool);;TR_RedundantAsyncCheckRemoval;0;0
operator=;operator=(const class TR_RedundantAsyncCheckRemoval &);;TR_RedundantAsyncCheckRemoval;1;0
operator=;operator=(class TR_RedundantAsyncCheckRemoval &&);;TR_RedundantAsyncCheckRemoval;1;0
optDetailString;optDetailString();;TR_RedundantAsyncCheckRemoval;0;1
originatesFromShortRunningMethod;originatesFromShortRunningMethod(class TR_RegionStructure *);;TR_RedundantAsyncCheckRemoval;0;0
perform;perform();;TR_RedundantAsyncCheckRemoval;0;1
perform;perform(class TR_Structure *,_Bool);;TR_RedundantAsyncCheckRemoval;0;0
performRegionalBackwardAnalysis;performRegionalBackwardAnalysis(class TR_RegionStructure *,_Bool);;TR_RedundantAsyncCheckRemoval;0;0
processAcyclicRegion;processAcyclicRegion(class TR_RegionStructure *);;TR_RedundantAsyncCheckRemoval;0;0
processBlockStructure;processBlockStructure(class TR_BlockStructure *);;TR_RedundantAsyncCheckRemoval;0;0
processImproperRegion;processImproperRegion(class TR_RegionStructure *);;TR_RedundantAsyncCheckRemoval;0;0
processNaturalLoop;processNaturalLoop(class TR_RegionStructure *,_Bool);;TR_RedundantAsyncCheckRemoval;0;0
propagateBackwards;propagateBackwards(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);;TR_RedundantAsyncCheckRemoval;0;0
shouldPerform;shouldPerform();;TR_RedundantAsyncCheckRemoval;0;1
solidifySoftAsyncChecks;solidifySoftAsyncChecks(class TR_StructureSubGraphNode *);;TR_RedundantAsyncCheckRemoval;0;0
~TR_RedundantAsyncCheckRemoval;~TR_RedundantAsyncCheckRemoval();;TR_RedundantAsyncCheckRemoval;1;1
TR_RedundantExpressionAdjustment;TR_RedundantExpressionAdjustment(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_ExceptionCheckMotion *);;TR_RedundantExpressionAdjustment;0;0
analyzeBlockStructure;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_RedundantExpressionAdjustment;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,ContainerType *);;TR_RedundantExpressionAdjustment;0;1
asRedundantExpressionAdjustment;asRedundantExpressionAdjustment();;TR_RedundantExpressionAdjustment;0;1
getKind;getKind();;TR_RedundantExpressionAdjustment;0;1
getNumberOfBits;getNumberOfBits();;TR_RedundantExpressionAdjustment;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo();;TR_RedundantExpressionAdjustment;0;1
operator=;operator=(class TR_RedundantExpressionAdjustment &&);;TR_RedundantExpressionAdjustment;1;0
operator=;operator=(const class TR_RedundantExpressionAdjustment &);;TR_RedundantExpressionAdjustment;1;0
postInitializationProcessing;postInitializationProcessing();;TR_RedundantExpressionAdjustment;0;1
supportsGenAndKillSets;supportsGenAndKillSets();;TR_RedundantExpressionAdjustment;0;1
supportsGenAndKillSetsForStructures;supportsGenAndKillSetsForStructures();;TR_RedundantExpressionAdjustment;0;1
~TR_RedundantExpressionAdjustment;~TR_RedundantExpressionAdjustment();;TR_RedundantExpressionAdjustment;1;1
TR_ShrinkWrap;TR_ShrinkWrap(class TR_ShrinkWrap &&);;TR_ShrinkWrap;1;0
TR_ShrinkWrap;TR_ShrinkWrap(const class TR_ShrinkWrap &);;TR_ShrinkWrap;1;0
TR_ShrinkWrap;TR_ShrinkWrap(TR::OptimizationManager *);;TR_ShrinkWrap;0;0
analyzeInstructions;analyzeInstructions();;TR_ShrinkWrap;0;0
blockEndsInReturn;blockEndsInReturn(int32_t,_Bool &);;TR_ShrinkWrap;0;0
composeSavesRestores;composeSavesRestores();;TR_ShrinkWrap;0;0
computeSaveRestoreSets;computeSaveRestoreSets(class TR_RegisterAnticipatability &,class TR_RegisterAvailability &);;TR_ShrinkWrap;0;0
create;create(TR::OptimizationManager *);;TR_ShrinkWrap;0;0
doPlacement;doPlacement(class TR_RegisterAnticipatability &,class TR_RegisterAvailability &);;TR_ShrinkWrap;0;0
findEdgeInfo;findEdgeInfo(TR::CFGEdge *);;TR_ShrinkWrap;0;0
findJumpInstructionsInBlock;findJumpInstructionsInBlock(int32_t,TR::list<TR::Instruction *> *);;TR_ShrinkWrap;0;0
findJumpInstructionsInCodeRegion;findJumpInstructionsInCodeRegion(TR::Instruction *,TR::Instruction *,CS2::HashTable<TR::Instruction *, _Bool, TR::Allocator> &);;TR_ShrinkWrap;0;0
findMultiples;findMultiples(class TR_BitVector *,TR::Instruction *,_Bool,_Bool);;TR_ShrinkWrap;0;0
findPreservedRegisterInfo;findPreservedRegisterInfo(int32_t);;TR_ShrinkWrap;0;0
findReturnBlockInfo;findReturnBlockInfo(int32_t);;TR_ShrinkWrap;0;0
findReturnInBlock;findReturnInBlock(int32_t);;TR_ShrinkWrap;0;0
markInstrsInBlock;markInstrsInBlock(int32_t);;TR_ShrinkWrap;0;0
operator=;operator=(class TR_ShrinkWrap &&);;TR_ShrinkWrap;1;0
operator=;operator=(const class TR_ShrinkWrap &);;TR_ShrinkWrap;1;0
optDetailString;optDetailString();;TR_ShrinkWrap;0;1
perform;perform();;TR_ShrinkWrap;0;1
prePerformOnBlocks;prePerformOnBlocks();;TR_ShrinkWrap;0;1
processInstructionsInSnippet;processInstructionsInSnippet(TR::Instruction *,int32_t);;TR_ShrinkWrap;0;0
updateMapWithRSD;updateMapWithRSD(TR::Instruction *,int32_t);;TR_ShrinkWrap;0;0
~TR_ShrinkWrap;~TR_ShrinkWrap();;TR_ShrinkWrap;1;1
TR_StripMiner;TR_StripMiner(class TR_StripMiner &&);;TR_StripMiner;1;0
TR_StripMiner;TR_StripMiner(const class TR_StripMiner &);;TR_StripMiner;1;0
TR_StripMiner;TR_StripMiner(TR::OptimizationManager *);;TR_StripMiner;0;0
checkIfIncrementalIncreasesOfPIV;checkIfIncrementalIncreasesOfPIV(struct TR_StripMiner::LoopInfo *);;TR_StripMiner;0;0
collectLoops;collectLoops(class TR_Structure *);;TR_StripMiner;0;0
create;create(TR::OptimizationManager *);;TR_StripMiner;0;0
createGotoBlock;createGotoBlock(TR::Block *,TR::Block *);;TR_StripMiner;0;0
createLoopTest;createLoopTest(struct TR_StripMiner::LoopInfo *,TR_ClonedLoopType);;TR_StripMiner;0;0
createStartOffsetLoop;createStartOffsetLoop(struct TR_StripMiner::LoopInfo *,TR::Block *);;TR_StripMiner;0;0
duplicateLoop;duplicateLoop(struct TR_StripMiner::LoopInfo *,TR_ClonedLoopType);;TR_StripMiner;0;0
examineLoop;examineLoop(struct TR_StripMiner::LoopInfo *,TR_ClonedLoopType,_Bool);;TR_StripMiner;0;0
examineNode;examineNode(struct TR_StripMiner::LoopInfo *,TR::Node *,TR::Node *,TR::SymbolReference *,vcount_t,TR_ClonedLoopType,_Bool,int32_t);;TR_StripMiner;0;0
findLeavesInList;findLeavesInList();;TR_StripMiner;0;0
findPivInSimpleForm;findPivInSimpleForm(TR::Node *,TR::SymbolReference *);;TR_StripMiner;0;0
getLoopPreHeader;getLoopPreHeader(class TR_Structure *);;TR_StripMiner;0;0
getLoopTest;getLoopTest(class TR_Structure *,TR::Block *);;TR_StripMiner;0;0
operator=;operator=(class TR_StripMiner &&);;TR_StripMiner;1;0
operator=;operator=(const class TR_StripMiner &);;TR_StripMiner;1;0
optDetailString;optDetailString();;TR_StripMiner;0;1
perform;perform();;TR_StripMiner;0;1
redirect;redirect(TR::Block *,TR::Block *,TR::Block *);;TR_StripMiner;0;0
replaceLoopPivs;replaceLoopPivs(struct TR_StripMiner::LoopInfo *,TR::ILOpCodes,TR::Node *,TR::SymbolReference *,TR_ClonedLoopType);;TR_StripMiner;0;0
shouldPerform;shouldPerform();;TR_StripMiner;0;1
stripMineLoop;stripMineLoop(struct TR_StripMiner::LoopInfo *,TR::Block *);;TR_StripMiner;0;0
transformLoop;transformLoop(struct TR_StripMiner::LoopInfo *);;TR_StripMiner;0;0
transformLoops;transformLoops();;TR_StripMiner;0;0
~TR_StripMiner;~TR_StripMiner();;TR_StripMiner;1;1
TR_TrivialSinkStores;TR_TrivialSinkStores(class TR_TrivialSinkStores &&);;TR_TrivialSinkStores;1;0
TR_TrivialSinkStores;TR_TrivialSinkStores(const class TR_TrivialSinkStores &);;TR_TrivialSinkStores;1;0
TR_TrivialSinkStores;TR_TrivialSinkStores(TR::OptimizationManager *);;TR_TrivialSinkStores;0;0
create;create(TR::OptimizationManager *);;TR_TrivialSinkStores;0;0
duplicateNodeForSideExit;duplicateNodeForSideExit(TR::Node *);;TR_TrivialSinkStores;0;0
duplicateTreeForSideExit;duplicateTreeForSideExit(TR::TreeTop *);;TR_TrivialSinkStores;0;0
genSideExitTree;genSideExitTree(TR::TreeTop *,TR::Block *,_Bool);;TR_TrivialSinkStores;0;0
operator=;operator=(class TR_TrivialSinkStores &&);;TR_TrivialSinkStores;1;0
operator=;operator=(const class TR_TrivialSinkStores &);;TR_TrivialSinkStores;1;0
optDetailString;optDetailString();;TR_TrivialSinkStores;0;1
passesAnchoringTest;passesAnchoringTest(class TR_MovableStore *,_Bool,_Bool);;TR_TrivialSinkStores;0;0
perform;perform();;TR_TrivialSinkStores;0;1
sinkStorePlacement;sinkStorePlacement(class TR_MovableStore *,_Bool);;TR_TrivialSinkStores;0;1
storeCanMoveThroughBlock;storeCanMoveThroughBlock(class TR_BitVector *,class TR_BitVector *,int32_t);;TR_TrivialSinkStores;0;1
storeIsSinkingCandidate;storeIsSinkingCandidate(TR::Block *,TR::Node *,int32_t,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t &,vcount_t &);;TR_TrivialSinkStores;0;1
~TR_TrivialSinkStores;~TR_TrivialSinkStores();;TR_TrivialSinkStores;1;1
TR_VirtualGuardHeadMerger;TR_VirtualGuardHeadMerger(class TR_VirtualGuardHeadMerger &&);;TR_VirtualGuardHeadMerger;1;0
TR_VirtualGuardHeadMerger;TR_VirtualGuardHeadMerger(const class TR_VirtualGuardHeadMerger &);;TR_VirtualGuardHeadMerger;1;0
TR_VirtualGuardHeadMerger;TR_VirtualGuardHeadMerger(TR::OptimizationManager *);;TR_VirtualGuardHeadMerger;0;0
create;create(TR::OptimizationManager *);;TR_VirtualGuardHeadMerger;0;0
operator=;operator=(class TR_VirtualGuardHeadMerger &&);;TR_VirtualGuardHeadMerger;1;0
operator=;operator=(const class TR_VirtualGuardHeadMerger &);;TR_VirtualGuardHeadMerger;1;0
optDetailString;optDetailString();;TR_VirtualGuardHeadMerger;0;1
perform;perform();;TR_VirtualGuardHeadMerger;0;1
tailSplitBlock;tailSplitBlock(TR::Block *,TR::Block *);;TR_VirtualGuardHeadMerger;0;0
~TR_VirtualGuardHeadMerger;~TR_VirtualGuardHeadMerger();;TR_VirtualGuardHeadMerger;1;1
TR_VirtualGuardTailSplitter;TR_VirtualGuardTailSplitter(TR::OptimizationManager *);;TR_VirtualGuardTailSplitter;0;0
TR_VirtualGuardTailSplitter;TR_VirtualGuardTailSplitter(class TR_VirtualGuardTailSplitter &&);;TR_VirtualGuardTailSplitter;1;0
TR_VirtualGuardTailSplitter;TR_VirtualGuardTailSplitter(const class TR_VirtualGuardTailSplitter &);;TR_VirtualGuardTailSplitter;1;0
create;create(TR::OptimizationManager *);;TR_VirtualGuardTailSplitter;0;0
getFirstCallNode;getFirstCallNode(TR::Block *);;TR_VirtualGuardTailSplitter;0;0
getGuard;getGuard(TR::Node *);;TR_VirtualGuardTailSplitter;0;0
getGuard;getGuard(uint32_t);;TR_VirtualGuardTailSplitter;0;0
getGuard;getGuard(TR::Block *);;TR_VirtualGuardTailSplitter;0;0
getVirtualGuardInfo;getVirtualGuardInfo(TR::Block *);;TR_VirtualGuardTailSplitter;0;0
initializeDataStructures;initializeDataStructures();;TR_VirtualGuardTailSplitter;0;0
isBlockInInlinedCallTreeOf;isBlockInInlinedCallTreeOf(class TR_VirtualGuardTailSplitter::VGInfo *,TR::Block *);;TR_VirtualGuardTailSplitter;0;0
isKill;isKill(TR::Block *);;TR_VirtualGuardTailSplitter;0;0
isKill;isKill(TR::Node *);;TR_VirtualGuardTailSplitter;0;0
lookAheadAndSplit;lookAheadAndSplit(class TR_VirtualGuardTailSplitter::VGInfo *,List<TR::Block> *);;TR_VirtualGuardTailSplitter;0;0
operator=;operator=(const class TR_VirtualGuardTailSplitter &);;TR_VirtualGuardTailSplitter;1;0
operator=;operator=(class TR_VirtualGuardTailSplitter &&);;TR_VirtualGuardTailSplitter;1;0
optDetailString;optDetailString();;TR_VirtualGuardTailSplitter;0;1
perform;perform();;TR_VirtualGuardTailSplitter;0;1
putGuard;putGuard(uint32_t,class TR_VirtualGuardTailSplitter::VGInfo *);;TR_VirtualGuardTailSplitter;0;0
recognizeVirtualGuard;recognizeVirtualGuard(TR::Block *,class TR_VirtualGuardTailSplitter::VGInfo *);;TR_VirtualGuardTailSplitter;0;0
remergeGuard;remergeGuard(class TR_BlockCloner &,class TR_VirtualGuardTailSplitter::VGInfo *);;TR_VirtualGuardTailSplitter;0;0
splitLinear;splitLinear(TR::Block *,TR::Block *);;TR_VirtualGuardTailSplitter;0;0
transformLinear;transformLinear(TR::Block *,TR::Block *);;TR_VirtualGuardTailSplitter;0;0
~TR_VirtualGuardTailSplitter;~TR_VirtualGuardTailSplitter();;TR_VirtualGuardTailSplitter;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OrderBlocks.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OSRDefAnalysis.cpp
TR_OSRDefInfo;TR_OSRDefInfo(const class TR_OSRDefInfo &);;TR_OSRDefInfo;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/PartialRedundancy.cpp
TR_ExceptionCheckMotion;TR_ExceptionCheckMotion(const class TR_ExceptionCheckMotion &);;TR_ExceptionCheckMotion;1;0
TR_RedundantExpressionAdjustment;TR_RedundantExpressionAdjustment(class TR_RedundantExpressionAdjustment &&);;TR_RedundantExpressionAdjustment;1;0
TR_RedundantExpressionAdjustment;TR_RedundantExpressionAdjustment(const class TR_RedundantExpressionAdjustment &);;TR_RedundantExpressionAdjustment;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/PreExistence.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/PrefetchInsertion.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Reachability.cpp
TR_BackwardReachability;TR_BackwardReachability(class TR_BackwardReachability &&);;TR_BackwardReachability;1;0
TR_BackwardReachability;TR_BackwardReachability(const class TR_BackwardReachability &);;TR_BackwardReachability;1;0
TR_BackwardReachability;TR_BackwardReachability(TR::Compilation *);;TR_BackwardReachability;0;0
TR_CanReachGivenBlocks;TR_CanReachGivenBlocks(TR::Compilation *,class TR_BitVector *);;TR_CanReachGivenBlocks;0;0
TR_ReachabilityAnalysis;TR_ReachabilityAnalysis(class TR_ReachabilityAnalysis &&);;TR_ReachabilityAnalysis;1;0
TR_ReachabilityAnalysis;TR_ReachabilityAnalysis(const class TR_ReachabilityAnalysis &);;TR_ReachabilityAnalysis;1;0
TR_ReachabilityAnalysis;TR_ReachabilityAnalysis(TR::Compilation *);;TR_ReachabilityAnalysis;0;0
comp;comp();;TR_ReachabilityAnalysis;0;0
getBlock;getBlock(blocknum_t);;TR_ReachabilityAnalysis;0;0
isOrigin;isOrigin(TR::Block *);;TR_ReachabilityAnalysis;0;1
isOrigin;isOrigin(TR::Block *);;TR_CanReachGivenBlocks;0;1
operator=;operator=(class TR_ReachabilityAnalysis &&);;TR_ReachabilityAnalysis;1;0
operator=;operator=(const class TR_ReachabilityAnalysis &);;TR_ReachabilityAnalysis;1;0
operator=;operator=(const class TR_BackwardReachability &);;TR_BackwardReachability;1;0
operator=;operator=(class TR_BackwardReachability &&);;TR_BackwardReachability;1;0
operator=;operator=(const class TR_CanReachGivenBlocks &);;TR_CanReachGivenBlocks;1;0
operator=;operator=(class TR_CanReachGivenBlocks &&);;TR_CanReachGivenBlocks;1;0
perform;perform(class TR_BitVector *);;TR_ReachabilityAnalysis;0;0
propagateInputs;propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);;TR_ReachabilityAnalysis;0;1
propagateInputs;propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);;TR_BackwardReachability;0;1
propagateOneInput;propagateOneInput(blocknum_t,blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);;TR_ReachabilityAnalysis;0;0
traverse;traverse(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);;TR_ReachabilityAnalysis;0;0
~TR_BackwardReachability;~TR_BackwardReachability();;TR_BackwardReachability;1;0
~TR_CanReachGivenBlocks;~TR_CanReachGivenBlocks();;TR_CanReachGivenBlocks;1;0
~TR_ReachabilityAnalysis;~TR_ReachabilityAnalysis();;TR_ReachabilityAnalysis;1;0
TR_CanBeReachedFromCatchBlock;TR_CanBeReachedFromCatchBlock(TR::Compilation *);;TR_CanBeReachedFromCatchBlock;0;0
TR_ForwardReachability;TR_ForwardReachability(class TR_ForwardReachability &&);;TR_ForwardReachability;1;0
TR_ForwardReachability;TR_ForwardReachability(const class TR_ForwardReachability &);;TR_ForwardReachability;1;0
TR_ForwardReachability;TR_ForwardReachability(TR::Compilation *);;TR_ForwardReachability;0;0
isOrigin;isOrigin(TR::Block *);;TR_CanBeReachedFromCatchBlock;0;1
operator=;operator=(class TR_ForwardReachability &&);;TR_ForwardReachability;1;0
operator=;operator=(const class TR_ForwardReachability &);;TR_ForwardReachability;1;0
operator=;operator=(const class TR_CanBeReachedFromCatchBlock &);;TR_CanBeReachedFromCatchBlock;1;0
operator=;operator=(class TR_CanBeReachedFromCatchBlock &&);;TR_CanBeReachedFromCatchBlock;1;0
propagateInputs;propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);;TR_ForwardReachability;0;1
~TR_CanBeReachedFromCatchBlock;~TR_CanBeReachedFromCatchBlock();;TR_CanBeReachedFromCatchBlock;1;0
~TR_ForwardReachability;~TR_ForwardReachability();;TR_ForwardReachability;1;0
TR_CanBeReachedWithoutExceptionEdges;TR_CanBeReachedWithoutExceptionEdges(TR::Compilation *);;TR_CanBeReachedWithoutExceptionEdges;0;0
TR_ForwardReachabilityWithoutExceptionEdges;TR_ForwardReachabilityWithoutExceptionEdges(class TR_ForwardReachabilityWithoutExceptionEdges &&);;TR_ForwardReachabilityWithoutExceptionEdges;1;0
TR_ForwardReachabilityWithoutExceptionEdges;TR_ForwardReachabilityWithoutExceptionEdges(const class TR_ForwardReachabilityWithoutExceptionEdges &);;TR_ForwardReachabilityWithoutExceptionEdges;1;0
TR_ForwardReachabilityWithoutExceptionEdges;TR_ForwardReachabilityWithoutExceptionEdges(TR::Compilation *);;TR_ForwardReachabilityWithoutExceptionEdges;0;0
isOrigin;isOrigin(TR::Block *);;TR_CanBeReachedWithoutExceptionEdges;0;1
operator=;operator=(const class TR_ForwardReachabilityWithoutExceptionEdges &);;TR_ForwardReachabilityWithoutExceptionEdges;1;0
operator=;operator=(class TR_ForwardReachabilityWithoutExceptionEdges &&);;TR_ForwardReachabilityWithoutExceptionEdges;1;0
operator=;operator=(const class TR_CanBeReachedWithoutExceptionEdges &);;TR_CanBeReachedWithoutExceptionEdges;1;0
operator=;operator=(class TR_CanBeReachedWithoutExceptionEdges &&);;TR_CanBeReachedWithoutExceptionEdges;1;0
propagateInputs;propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);;TR_ForwardReachabilityWithoutExceptionEdges;0;1
~TR_CanBeReachedWithoutExceptionEdges;~TR_CanBeReachedWithoutExceptionEdges();;TR_CanBeReachedWithoutExceptionEdges;1;0
~TR_ForwardReachabilityWithoutExceptionEdges;~TR_ForwardReachabilityWithoutExceptionEdges();;TR_ForwardReachabilityWithoutExceptionEdges;1;0
TR_CanReachNonColdBlocks;TR_CanReachNonColdBlocks(TR::Compilation *);;TR_CanReachNonColdBlocks;0;0
isOrigin;isOrigin(TR::Block *);;TR_CanReachNonColdBlocks;0;1
operator=;operator=(const class TR_CanReachNonColdBlocks &);;TR_CanReachNonColdBlocks;1;0
operator=;operator=(class TR_CanReachNonColdBlocks &&);;TR_CanReachNonColdBlocks;1;0
~TR_CanReachNonColdBlocks;~TR_CanReachNonColdBlocks();;TR_CanReachNonColdBlocks;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ReachingDefinitions.cpp
TR_ReachingDefinitions;TR_ReachingDefinitions(class TR_ReachingDefinitions &&);;TR_ReachingDefinitions;1;0
TR_ReachingDefinitions;TR_ReachingDefinitions(const class TR_ReachingDefinitions &);;TR_ReachingDefinitions;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRRecognizedCallTransformer.cpp
RecognizedCallTransformer;RecognizedCallTransformer(const class TR::RecognizedCallTransformer &);TR;RecognizedCallTransformer;1;0
RecognizedCallTransformer;RecognizedCallTransformer(class TR::RecognizedCallTransformer &&);TR;RecognizedCallTransformer;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RedundantAsyncCheckRemoval.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RegisterAnticipatability.cpp
TR_RegisterAnticipatability;TR_RegisterAnticipatability(class TR_RegisterAnticipatability &&);;TR_RegisterAnticipatability;1;0
TR_RegisterAnticipatability;TR_RegisterAnticipatability(const class TR_RegisterAnticipatability &);;TR_RegisterAnticipatability;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RegisterAvailability.cpp
TR_RegisterAvailability;TR_RegisterAvailability(class TR_RegisterAvailability &&);;TR_RegisterAvailability;1;0
TR_RegisterAvailability;TR_RegisterAvailability(const class TR_RegisterAvailability &);;TR_RegisterAvailability;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RegisterCandidate.cpp
TR_RegisterCandidate;TR_RegisterCandidate(const class TR_RegisterCandidate &);;TR_RegisterCandidate;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ShrinkWrapping.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRSimplifier.cpp
Simplifier;Simplifier(class TR::Simplifier &&);TR;Simplifier;1;0
Simplifier;Simplifier(const class TR::Simplifier &);TR;Simplifier;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRSimplifierHelpers.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRSimplifierHandlers.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/StructuralAnalysis.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Structure.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/TranslateTable.cpp
TR_SetTranslateTable;TR_SetTranslateTable(class TR_SetTranslateTable &&);;TR_SetTranslateTable;1;0
TR_SetTranslateTable;TR_SetTranslateTable(const class TR_SetTranslateTable &);;TR_SetTranslateTable;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/UnionBitVectorAnalysis.cpp
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_UnionDFSetAnalysis;1;0
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(const class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_UnionDFSetAnalysis;1;0
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(const class TR_UnionDFSetAnalysis<class TR_BitVector *> &);;TR_UnionDFSetAnalysis;1;0
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(class TR_UnionDFSetAnalysis<class TR_BitVector *> &&);;TR_UnionDFSetAnalysis;1;0
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_UnionDFSetAnalysis;0;0
compose;compose(class TR_BitVector *,class TR_BitVector *);;TR_UnionDFSetAnalysis;0;1
compose;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_UnionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_SingleBitContainer *);;TR_UnionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);;TR_UnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_UnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);;TR_UnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_SingleBitContainer *);;TR_UnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);;TR_UnionDFSetAnalysis;0;1
operator=;operator=(class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &&);;TR_UnionDFSetAnalysis;1;0
operator=;operator=(const class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &);;TR_UnionDFSetAnalysis;1;0
operator=;operator=(const class TR_UnionDFSetAnalysis<class TR_BitVector *> &);;TR_UnionDFSetAnalysis;1;0
operator=;operator=(class TR_UnionDFSetAnalysis<class TR_BitVector *> &&);;TR_UnionDFSetAnalysis;1;0
~TR_UnionDFSetAnalysis;~TR_UnionDFSetAnalysis();;TR_UnionDFSetAnalysis;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/UseDefInfo.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ValueNumberInfo.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VirtualGuardCoalescer.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VirtualGuardHeadMerger.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RegDepCopyRemoval.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ReorderIndexExpr.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/SinkStores.cpp
TR_OrderedBlockList;TR_OrderedBlockList(class TR_OrderedBlockList &&);;TR_OrderedBlockList;1;0
TR_OrderedBlockList;TR_OrderedBlockList(const class TR_OrderedBlockList &);;TR_OrderedBlockList;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/StripMiner.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VPConstraint.cpp
VPArrayInfo;VPArrayInfo(class TR::VPArrayInfo &&);TR;VPArrayInfo;1;0
VPArrayInfo;VPArrayInfo(const class TR::VPArrayInfo &);TR;VPArrayInfo;1;0
VPClass;VPClass(const class TR::VPClass &);TR;VPClass;1;0
VPClass;VPClass(class TR::VPClass &&);TR;VPClass;1;0
VPEqual;VPEqual(class TR::VPEqual &&);TR;VPEqual;1;0
VPEqual;VPEqual(const class TR::VPEqual &);TR;VPEqual;1;0
VPGreaterThanOrEqual;VPGreaterThanOrEqual(const class TR::VPGreaterThanOrEqual &);TR;VPGreaterThanOrEqual;1;0
VPGreaterThanOrEqual;VPGreaterThanOrEqual(class TR::VPGreaterThanOrEqual &&);TR;VPGreaterThanOrEqual;1;0
VPIntConst;VPIntConst(class TR::VPIntConst &&);TR;VPIntConst;1;0
VPIntConst;VPIntConst(const class TR::VPIntConst &);TR;VPIntConst;1;0
VPLessThanOrEqual;VPLessThanOrEqual(const class TR::VPLessThanOrEqual &);TR;VPLessThanOrEqual;1;0
VPLessThanOrEqual;VPLessThanOrEqual(class TR::VPLessThanOrEqual &&);TR;VPLessThanOrEqual;1;0
VPLongConst;VPLongConst(class TR::VPLongConst &&);TR;VPLongConst;1;0
VPLongConst;VPLongConst(const class TR::VPLongConst &);TR;VPLongConst;1;0
VPMergedConstraints;VPMergedConstraints(class TR::VPMergedConstraints &&);TR;VPMergedConstraints;1;0
VPMergedConstraints;VPMergedConstraints(const class TR::VPMergedConstraints &);TR;VPMergedConstraints;1;0
VPNotEqual;VPNotEqual(class TR::VPNotEqual &&);TR;VPNotEqual;1;0
VPNotEqual;VPNotEqual(const class TR::VPNotEqual &);TR;VPNotEqual;1;0
VPObjectLocation;VPObjectLocation(const class TR::VPObjectLocation &);TR;VPObjectLocation;1;0
VPObjectLocation;VPObjectLocation(class TR::VPObjectLocation &&);TR;VPObjectLocation;1;0
VPPreexistentObject;VPPreexistentObject(class TR::VPPreexistentObject &&);TR;VPPreexistentObject;1;0
VPPreexistentObject;VPPreexistentObject(const class TR::VPPreexistentObject &);TR;VPPreexistentObject;1;0
VPShortConst;VPShortConst(const class TR::VPShortConst &);TR;VPShortConst;1;0
VPShortConst;VPShortConst(class TR::VPShortConst &&);TR;VPShortConst;1;0
VPShortRange;VPShortRange(class TR::VPShortRange &&);TR;VPShortRange;1;0
VPShortRange;VPShortRange(const class TR::VPShortRange &);TR;VPShortRange;1;0
VPSync;VPSync(class TR::VPSync &&);TR;VPSync;1;0
VPSync;VPSync(const class TR::VPSync &);TR;VPSync;1;0
VPUnresolvedClass;VPUnresolvedClass(class TR::VPUnresolvedClass &&);TR;VPUnresolvedClass;1;0
VPUnresolvedClass;VPUnresolvedClass(const class TR::VPUnresolvedClass &);TR;VPUnresolvedClass;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VPHandlers.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VPHandlersCommon.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRValuePropagation.cpp
TR_CanReachGivenBlocks;TR_CanReachGivenBlocks(class TR_CanReachGivenBlocks &&);;TR_CanReachGivenBlocks;1;0
TR_CanReachGivenBlocks;TR_CanReachGivenBlocks(const class TR_CanReachGivenBlocks &);;TR_CanReachGivenBlocks;1;0
TR_CanBeReachedWithoutExceptionEdges;TR_CanBeReachedWithoutExceptionEdges(class TR_CanBeReachedWithoutExceptionEdges &&);;TR_CanBeReachedWithoutExceptionEdges;1;0
TR_CanBeReachedWithoutExceptionEdges;TR_CanBeReachedWithoutExceptionEdges(const class TR_CanBeReachedWithoutExceptionEdges &);;TR_CanBeReachedWithoutExceptionEdges;1;0
TR_CanReachNonColdBlocks;TR_CanReachNonColdBlocks(const class TR_CanReachNonColdBlocks &);;TR_CanReachNonColdBlocks;1;0
TR_CanReachNonColdBlocks;TR_CanReachNonColdBlocks(class TR_CanReachNonColdBlocks &&);;TR_CanReachNonColdBlocks;1;0
TR_ClassLoadCheck;TR_ClassLoadCheck(class TR_ClassLoadCheck &&);;TR_ClassLoadCheck;1;0
TR_ClassLoadCheck;TR_ClassLoadCheck(const class TR_ClassLoadCheck &);;TR_ClassLoadCheck;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ValuePropagationCommon.cpp
ValueConstraint;ValueConstraint(class OMR::ValuePropagation::ValueConstraint &&);OMR::ValuePropagation;ValueConstraint;1;0
ValueConstraint;ValueConstraint(const class OMR::ValuePropagation::ValueConstraint &);OMR::ValuePropagation;ValueConstraint;1;0
ValueConstraintHandler;ValueConstraintHandler();OMR::ValuePropagation;ValueConstraintHandler;1;0
VPClassPresence;VPClassPresence(class TR::VPClassPresence &&);TR;VPClassPresence;1;0
VPClassPresence;VPClassPresence(const class TR::VPClassPresence &);TR;VPClassPresence;1;0
VPNonNullObject;VPNonNullObject(class TR::VPNonNullObject &&);TR;VPNonNullObject;1;0
VPNonNullObject;VPNonNullObject();TR;VPNonNullObject;1;0
VPNonNullObject;VPNonNullObject(const class TR::VPNonNullObject &);TR;VPNonNullObject;1;0
VPNullObject;VPNullObject(class TR::VPNullObject &&);TR;VPNullObject;1;0
VPNullObject;VPNullObject();TR;VPNullObject;1;0
VPNullObject;VPNullObject(const class TR::VPNullObject &);TR;VPNullObject;1;0
VPUnreachablePath;VPUnreachablePath(class TR::VPUnreachablePath &&);TR;VPUnreachablePath;1;0
VPUnreachablePath;VPUnreachablePath(const class TR::VPUnreachablePath &);TR;VPUnreachablePath;1;0
TR_Stats;TR_Stats(class TR_Stats &&);;TR_Stats;1;0
TR_Stats;TR_Stats(const class TR_Stats &);;TR_Stats;1;0
TR_Stats;TR_Stats(const char *);;TR_Stats;0;0
TR_Stats;TR_Stats();;TR_Stats;0;0
TR_StatsHisto<N>;TR_StatsHisto<N>(const char *,double,double);;TR_StatsHisto;0;0
getName;getName();;TR_Stats;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);;TR_Stats;0;0
jitPersistentFree;jitPersistentFree(void *);;TR_Stats;0;0
maxVal;maxVal();;TR_Stats;0;0
mean;mean();;TR_Stats;0;0
minVal;minVal();;TR_Stats;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Stats;0;0
operator delete;operator delete(void *,size_t);;TR_Stats;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_Stats;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Stats;0;0
operator delete;operator delete(void *,TR::Region &);;TR_Stats;0;0
operator delete[];operator delete[](void *,TR::Region &);;TR_Stats;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Stats;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_Stats;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Stats;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Stats;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Stats;0;0
operator new;operator new(size_t,TR::Region &);;TR_Stats;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);;TR_Stats;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);;TR_Stats;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);;TR_Stats;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Stats;0;0
operator new[];operator new[](size_t,TR::Region &);;TR_Stats;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_Stats;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);;TR_Stats;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_Stats;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);;TR_Stats;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_Stats;0;0
report;report(FILE *);;TR_Stats;0;0
report;report(FILE *);;TR_StatsHisto;0;0
report;report(char *);;TR_Stats;0;0
reset;reset();;TR_Stats;0;0
reset;reset();;TR_StatsHisto;0;0
samples;samples();;TR_Stats;0;0
setName;setName(const char *);;TR_Stats;0;0
stddev;stddev();;TR_Stats;0;0
sum;sum();;TR_Stats;0;0
update;update(double);;TR_Stats;0;0
update;update(double);;TR_StatsHisto;0;0
TR_StatsInterval;TR_StatsInterval(const char *);;TR_StatsInterval;0;0
intervals;intervals();;TR_StatsInterval;0;0
lastTime;lastTime();;TR_StatsInterval;0;0
lastValue;lastValue();;TR_StatsInterval;0;0
mean;mean();;TR_StatsInterval;0;0
report;report(FILE *);;TR_StatsInterval;0;0
stddev;stddev();;TR_StatsInterval;0;0
update;update(double,double);;TR_StatsInterval;0;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRAheadOfTimeCompile.cpp
AheadOfTimeCompile;AheadOfTimeCompile(class OMR::AheadOfTimeCompile &&);OMR;AheadOfTimeCompile;1;0
AheadOfTimeCompile;AheadOfTimeCompile(uint32_t *,TR::Compilation *);OMR;AheadOfTimeCompile;0;0
AheadOfTimeCompile;AheadOfTimeCompile(uint32_t *,TR::Compilation *);TR;AheadOfTimeCompile;0;0
AheadOfTimeCompile;AheadOfTimeCompile(const class OMR::AheadOfTimeCompile &);OMR;AheadOfTimeCompile;1;0
addToSizeOfAOTRelocations;addToSizeOfAOTRelocations(uint32_t);OMR;AheadOfTimeCompile;0;0
comp;comp();OMR;AheadOfTimeCompile;0;0
dumpRelocationData;dumpRelocationData();OMR;AheadOfTimeCompile;0;0
getAOTRelocationTargets;getAOTRelocationTargets();OMR;AheadOfTimeCompile;0;0
getDebug;getDebug();OMR;AheadOfTimeCompile;0;0
getRelocationData;getRelocationData();OMR;AheadOfTimeCompile;0;0
getSizeOfAOTRelocationHeader;getSizeOfAOTRelocationHeader(TR_ExternalRelocationTargetKind);OMR;AheadOfTimeCompile;0;0
getSizeOfAOTRelocations;getSizeOfAOTRelocations();OMR;AheadOfTimeCompile;0;0
initialiseAOTRelocationHeader;initialiseAOTRelocationHeader(TR::IteratedExternalRelocation *);OMR;AheadOfTimeCompile;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;AheadOfTimeCompile;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,size_t);OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,TR::Region &);OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,TR::Region &);OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;AheadOfTimeCompile;0;0
operator=;operator=(class OMR::AheadOfTimeCompile &&);OMR;AheadOfTimeCompile;1;0
operator=;operator=(const class OMR::AheadOfTimeCompile &);OMR;AheadOfTimeCompile;1;0
operator=;operator=(class TR::AheadOfTimeCompile &&);TR;AheadOfTimeCompile;1;0
operator=;operator=(const class TR::AheadOfTimeCompile &);TR;AheadOfTimeCompile;1;0
processRelocations;processRelocations();OMR;AheadOfTimeCompile;0;1
self;self();OMR;AheadOfTimeCompile;0;0
setAOTRelocationKindToHeaderSizeMap;setAOTRelocationKindToHeaderSizeMap(uint32_t *);OMR;AheadOfTimeCompile;0;0
setRelocationData;setRelocationData(uint8_t *);OMR;AheadOfTimeCompile;0;0
setSizeOfAOTRelocations;setSizeOfAOTRelocations(uint32_t);OMR;AheadOfTimeCompile;0;0
trMemory;trMemory();OMR;AheadOfTimeCompile;0;0
traceRelocationOffsets;traceRelocationOffsets(uint8_t *&,int32_t,const uint8_t *,_Bool);OMR;AheadOfTimeCompile;0;0
~AheadOfTimeCompile;~AheadOfTimeCompile();OMR;AheadOfTimeCompile;1;0
~AheadOfTimeCompile;~AheadOfTimeCompile();TR;AheadOfTimeCompile;1;0
BeforeBinaryEncodingExternalRelocation;BeforeBinaryEncodingExternalRelocation();TR;BeforeBinaryEncodingExternalRelocation;0;0
BeforeBinaryEncodingExternalRelocation;BeforeBinaryEncodingExternalRelocation(TR::Instruction *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);TR;BeforeBinaryEncodingExternalRelocation;0;0
BeforeBinaryEncodingExternalRelocation;BeforeBinaryEncodingExternalRelocation(TR::Instruction *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);TR;BeforeBinaryEncodingExternalRelocation;0;0
ExternalRelocation;ExternalRelocation(class TR::ExternalRelocation &&);TR;ExternalRelocation;1;0
ExternalRelocation;ExternalRelocation(const class TR::ExternalRelocation &);TR;ExternalRelocation;1;0
ExternalRelocation;ExternalRelocation(uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);TR;ExternalRelocation;0;0
ExternalRelocation;ExternalRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);TR;ExternalRelocation;0;0
ExternalRelocation;ExternalRelocation();TR;ExternalRelocation;0;0
Relocation;Relocation(class TR::Relocation &&);TR;Relocation;1;0
Relocation;Relocation(uint8_t *);TR;Relocation;0;0
Relocation;Relocation(const class TR::Relocation &);TR;Relocation;1;0
Relocation;Relocation();TR;Relocation;0;0
addAOTRelocation;addAOTRelocation(TR::CodeGenerator *);TR;Relocation;0;1
addAOTRelocation;addAOTRelocation(TR::CodeGenerator *);TR;ExternalRelocation;0;1
apply;apply(TR::CodeGenerator *);TR;Relocation;0;1
apply;apply(TR::CodeGenerator *);TR;ExternalRelocation;0;1
collectModifier;collectModifier();TR;ExternalRelocation;0;1
getDebugInfo;getDebugInfo();TR;Relocation;0;0
getGlobalValue;getGlobalValue(uint32_t);TR;ExternalRelocation;0;0
getName;getName(TR_ExternalRelocationTargetKind);TR;ExternalRelocation;0;0
getNarrowSize;getNarrowSize();TR;ExternalRelocation;0;1
getRelocationRecord;getRelocationRecord();TR;ExternalRelocation;0;0
getTargetAddress;getTargetAddress();TR;ExternalRelocation;0;0
getTargetAddress2;getTargetAddress2();TR;ExternalRelocation;0;0
getTargetKind;getTargetKind();TR;ExternalRelocation;0;0
getUpdateInstruction;getUpdateInstruction();TR;BeforeBinaryEncodingExternalRelocation;0;0
getUpdateLocation;getUpdateLocation();TR;Relocation;0;1
getUpdateLocation;getUpdateLocation();TR;BeforeBinaryEncodingExternalRelocation;0;1
getWideSize;getWideSize();TR;ExternalRelocation;0;1
isAOTRelocation;isAOTRelocation();TR;Relocation;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TR;Relocation;0;0
jitPersistentFree;jitPersistentFree(void *);TR;Relocation;0;0
nameOfGlobal;nameOfGlobal(uint32_t);TR;ExternalRelocation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;Relocation;0;0
operator delete;operator delete(void *,size_t);TR;Relocation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TR;Relocation;0;0
operator delete;operator delete(void *,TR::Region &);TR;Relocation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;Relocation;0;0
operator delete[];operator delete[](void *,TR::Region &);TR;Relocation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;Relocation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TR;Relocation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;Relocation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TR;Relocation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TR;Relocation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;Relocation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TR;Relocation;0;0
operator new;operator new(size_t,TR::Region &);TR;Relocation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;Relocation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TR;Relocation;0;0
operator new[];operator new[](size_t,TR::Region &);TR;Relocation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TR;Relocation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TR;Relocation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;Relocation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;Relocation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TR;Relocation;0;0
operator=;operator=(class TR::Relocation &&);TR;Relocation;1;0
operator=;operator=(const class TR::Relocation &);TR;Relocation;1;0
operator=;operator=(const class TR::ExternalRelocation &);TR;ExternalRelocation;1;0
operator=;operator=(class TR::ExternalRelocation &&);TR;ExternalRelocation;1;0
operator=;operator=(class TR::BeforeBinaryEncodingExternalRelocation &&);TR;BeforeBinaryEncodingExternalRelocation;1;0
operator=;operator=(const class TR::BeforeBinaryEncodingExternalRelocation &);TR;BeforeBinaryEncodingExternalRelocation;1;0
setDebugInfo;setDebugInfo(TR::RelocationDebugInfo *);TR;Relocation;0;0
setGlobalValue;setGlobalValue(uint32_t,uintptr_t);TR;ExternalRelocation;0;0
setTargetAddress;setTargetAddress(uint8_t *);TR;ExternalRelocation;0;0
setTargetKind;setTargetKind(TR_ExternalRelocationTargetKind);TR;ExternalRelocation;0;0
setUpdateLocation;setUpdateLocation(uint8_t *);TR;Relocation;0;0
trace;trace(TR::Compilation *);TR;Relocation;0;1
trace;trace(TR::Compilation *);TR;ExternalRelocation;0;1
~BeforeBinaryEncodingExternalRelocation;~BeforeBinaryEncodingExternalRelocation();TR;BeforeBinaryEncodingExternalRelocation;1;0
~ExternalRelocation;~ExternalRelocation();TR;ExternalRelocation;1;0
~Relocation;~Relocation();TR;Relocation;1;0
ExternalOrderedPair32BitRelocation;ExternalOrderedPair32BitRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);TR;ExternalOrderedPair32BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;ExternalOrderedPair32BitRelocation;0;1
collectModifier;collectModifier();TR;ExternalOrderedPair32BitRelocation;0;1
getLocation2;getLocation2();TR;ExternalOrderedPair32BitRelocation;0;0
getNarrowSize;getNarrowSize();TR;ExternalOrderedPair32BitRelocation;0;1
getWideSize;getWideSize();TR;ExternalOrderedPair32BitRelocation;0;1
operator=;operator=(class TR::ExternalOrderedPair32BitRelocation &&);TR;ExternalOrderedPair32BitRelocation;1;0
operator=;operator=(const class TR::ExternalOrderedPair32BitRelocation &);TR;ExternalOrderedPair32BitRelocation;1;0
setLocation2;setLocation2(uint8_t *);TR;ExternalOrderedPair32BitRelocation;0;0
~ExternalOrderedPair32BitRelocation;~ExternalOrderedPair32BitRelocation();TR;ExternalOrderedPair32BitRelocation;1;0
InstructionAbsoluteRelocation;InstructionAbsoluteRelocation(uint8_t *,TR::Instruction *,_Bool);TR;InstructionAbsoluteRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;InstructionAbsoluteRelocation;0;1
getInstruction;getInstruction();TR;InstructionAbsoluteRelocation;0;0
isAOTRelocation;isAOTRelocation();TR;InstructionAbsoluteRelocation;0;1
operator=;operator=(class TR::InstructionAbsoluteRelocation &&);TR;InstructionAbsoluteRelocation;1;0
operator=;operator=(const class TR::InstructionAbsoluteRelocation &);TR;InstructionAbsoluteRelocation;1;0
useEndAddress;useEndAddress();TR;InstructionAbsoluteRelocation;0;0
~InstructionAbsoluteRelocation;~InstructionAbsoluteRelocation();TR;InstructionAbsoluteRelocation;1;0
IteratedExternalRelocation;IteratedExternalRelocation();TR;IteratedExternalRelocation;0;0
IteratedExternalRelocation;IteratedExternalRelocation(uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,flags8_t,TR::CodeGenerator *);TR;IteratedExternalRelocation;0;0
IteratedExternalRelocation;IteratedExternalRelocation(uint8_t *,TR_ExternalRelocationTargetKind,flags8_t,TR::CodeGenerator *);TR;IteratedExternalRelocation;0;0
addRelocationEntry;addRelocationEntry(uint32_t);TR;IteratedExternalRelocation;0;0
addToSizeOfRelocationData;addToSizeOfRelocationData(uint16_t);TR;IteratedExternalRelocation;0;0
full;full();TR;IteratedExternalRelocation;0;0
getModifierValue;getModifierValue();TR;IteratedExternalRelocation;0;0
getNumberOfRelocationSites;getNumberOfRelocationSites();TR;IteratedExternalRelocation;0;0
getRelocationData;getRelocationData();TR;IteratedExternalRelocation;0;0
getRelocationDataCursor;getRelocationDataCursor();TR;IteratedExternalRelocation;0;0
getSizeOfRelocationData;getSizeOfRelocationData();TR;IteratedExternalRelocation;0;0
getTargetAddress;getTargetAddress();TR;IteratedExternalRelocation;0;0
getTargetAddress2;getTargetAddress2();TR;IteratedExternalRelocation;0;0
getTargetKind;getTargetKind();TR;IteratedExternalRelocation;0;0
initialiseRelocation;initialiseRelocation(TR::CodeGenerator *);TR;IteratedExternalRelocation;0;0
isOrderedPair;isOrderedPair();TR;IteratedExternalRelocation;0;0
needsWideOffsets;needsWideOffsets();TR;IteratedExternalRelocation;0;0
setFull;setFull();TR;IteratedExternalRelocation;0;0
setModifierValue;setModifierValue(uint8_t);TR;IteratedExternalRelocation;0;0
setNeedsWideOffsets;setNeedsWideOffsets();TR;IteratedExternalRelocation;0;0
setNumberOfRelocationSites;setNumberOfRelocationSites(uint32_t);TR;IteratedExternalRelocation;0;0
setOrderedPair;setOrderedPair();TR;IteratedExternalRelocation;0;0
setRelocationData;setRelocationData(uint8_t *);TR;IteratedExternalRelocation;0;0
setRelocationDataCursor;setRelocationDataCursor(uint8_t *);TR;IteratedExternalRelocation;0;0
setSizeOfRelocationData;setSizeOfRelocationData(uint16_t);TR;IteratedExternalRelocation;0;0
setTargetAddress;setTargetAddress(uint8_t *);TR;IteratedExternalRelocation;0;0
setTargetKind;setTargetKind(TR_ExternalRelocationTargetKind);TR;IteratedExternalRelocation;0;0
LabelAbsoluteRelocation;LabelAbsoluteRelocation();TR;LabelAbsoluteRelocation;0;0
LabelAbsoluteRelocation;LabelAbsoluteRelocation(uint8_t *,TR::LabelSymbol *);TR;LabelAbsoluteRelocation;0;0
LabelRelocation;LabelRelocation(class TR::LabelRelocation &&);TR;LabelRelocation;1;0
LabelRelocation;LabelRelocation(const class TR::LabelRelocation &);TR;LabelRelocation;1;0
LabelRelocation;LabelRelocation();TR;LabelRelocation;0;0
LabelRelocation;LabelRelocation(uint8_t *,TR::LabelSymbol *);TR;LabelRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LabelAbsoluteRelocation;0;1
getLabel;getLabel();TR;LabelRelocation;0;0
isAOTRelocation;isAOTRelocation();TR;LabelRelocation;0;1
operator=;operator=(class TR::LabelRelocation &&);TR;LabelRelocation;1;0
operator=;operator=(const class TR::LabelRelocation &);TR;LabelRelocation;1;0
operator=;operator=(class TR::LabelAbsoluteRelocation &&);TR;LabelAbsoluteRelocation;1;0
operator=;operator=(const class TR::LabelAbsoluteRelocation &);TR;LabelAbsoluteRelocation;1;0
setLabel;setLabel(TR::LabelSymbol *);TR;LabelRelocation;0;0
~LabelAbsoluteRelocation;~LabelAbsoluteRelocation();TR;LabelAbsoluteRelocation;1;0
~LabelRelocation;~LabelRelocation();TR;LabelRelocation;1;0
LabelRelative12BitRelocation;LabelRelative12BitRelocation();TR;LabelRelative12BitRelocation;0;0
LabelRelative12BitRelocation;LabelRelative12BitRelocation(uint8_t *,TR::LabelSymbol *,_Bool);TR;LabelRelative12BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LabelRelative12BitRelocation;0;1
isCheckDisp;isCheckDisp();TR;LabelRelative12BitRelocation;0;0
operator=;operator=(class TR::LabelRelative12BitRelocation &&);TR;LabelRelative12BitRelocation;1;0
operator=;operator=(const class TR::LabelRelative12BitRelocation &);TR;LabelRelative12BitRelocation;1;0
~LabelRelative12BitRelocation;~LabelRelative12BitRelocation();TR;LabelRelative12BitRelocation;1;0
LabelRelative16BitRelocation;LabelRelative16BitRelocation(uint8_t *,TR::LabelSymbol *,int8_t,_Bool);TR;LabelRelative16BitRelocation;0;0
LabelRelative16BitRelocation;LabelRelative16BitRelocation();TR;LabelRelative16BitRelocation;0;0
LabelRelative16BitRelocation;LabelRelative16BitRelocation(uint8_t *,TR::LabelSymbol *);TR;LabelRelative16BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LabelRelative16BitRelocation;0;1
getAddressDifferenceDivisor;getAddressDifferenceDivisor();TR;LabelRelative16BitRelocation;0;0
isInstructionOffset;isInstructionOffset();TR;LabelRelative16BitRelocation;0;0
operator=;operator=(const class TR::LabelRelative16BitRelocation &);TR;LabelRelative16BitRelocation;1;0
operator=;operator=(class TR::LabelRelative16BitRelocation &&);TR;LabelRelative16BitRelocation;1;0
setAddressDifferenceDivisor;setAddressDifferenceDivisor(int8_t);TR;LabelRelative16BitRelocation;0;0
setInstructionOffset;setInstructionOffset(_Bool);TR;LabelRelative16BitRelocation;0;0
~LabelRelative16BitRelocation;~LabelRelative16BitRelocation();TR;LabelRelative16BitRelocation;1;0
LabelRelative24BitRelocation;LabelRelative24BitRelocation();TR;LabelRelative24BitRelocation;0;0
LabelRelative24BitRelocation;LabelRelative24BitRelocation(uint8_t *,TR::LabelSymbol *);TR;LabelRelative24BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LabelRelative24BitRelocation;0;1
operator=;operator=(class TR::LabelRelative24BitRelocation &&);TR;LabelRelative24BitRelocation;1;0
operator=;operator=(const class TR::LabelRelative24BitRelocation &);TR;LabelRelative24BitRelocation;1;0
~LabelRelative24BitRelocation;~LabelRelative24BitRelocation();TR;LabelRelative24BitRelocation;1;0
LabelRelative32BitRelocation;LabelRelative32BitRelocation();TR;LabelRelative32BitRelocation;0;0
LabelRelative32BitRelocation;LabelRelative32BitRelocation(uint8_t *,TR::LabelSymbol *);TR;LabelRelative32BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LabelRelative32BitRelocation;0;1
operator=;operator=(class TR::LabelRelative32BitRelocation &&);TR;LabelRelative32BitRelocation;1;0
operator=;operator=(const class TR::LabelRelative32BitRelocation &);TR;LabelRelative32BitRelocation;1;0
~LabelRelative32BitRelocation;~LabelRelative32BitRelocation();TR;LabelRelative32BitRelocation;1;0
LabelRelative8BitRelocation;LabelRelative8BitRelocation();TR;LabelRelative8BitRelocation;0;0
LabelRelative8BitRelocation;LabelRelative8BitRelocation(uint8_t *,TR::LabelSymbol *);TR;LabelRelative8BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LabelRelative8BitRelocation;0;1
operator=;operator=(class TR::LabelRelative8BitRelocation &&);TR;LabelRelative8BitRelocation;1;0
operator=;operator=(const class TR::LabelRelative8BitRelocation &);TR;LabelRelative8BitRelocation;1;0
~LabelRelative8BitRelocation;~LabelRelative8BitRelocation();TR;LabelRelative8BitRelocation;1;0
LabelTable32BitRelocation;LabelTable32BitRelocation();TR;LabelTable32BitRelocation;0;0
LabelTable32BitRelocation;LabelTable32BitRelocation(uint8_t *,TR::LabelSymbol *);TR;LabelTable32BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LabelTable32BitRelocation;0;1
operator=;operator=(class TR::LabelTable32BitRelocation &&);TR;LabelTable32BitRelocation;1;0
operator=;operator=(const class TR::LabelTable32BitRelocation &);TR;LabelTable32BitRelocation;1;0
~LabelTable32BitRelocation;~LabelTable32BitRelocation();TR;LabelTable32BitRelocation;1;0
LoadLabelRelative16BitRelocation;LoadLabelRelative16BitRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);TR;LoadLabelRelative16BitRelocation;0;0
LoadLabelRelative16BitRelocation;LoadLabelRelative16BitRelocation();TR;LoadLabelRelative16BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LoadLabelRelative16BitRelocation;0;1
getDeltaToStartLabel;getDeltaToStartLabel();TR;LoadLabelRelative16BitRelocation;0;0
getEndLabel;getEndLabel();TR;LoadLabelRelative16BitRelocation;0;0
getLastInstruction;getLastInstruction();TR;LoadLabelRelative16BitRelocation;0;0
getStartLabel;getStartLabel();TR;LoadLabelRelative16BitRelocation;0;0
isAOTRelocation;isAOTRelocation();TR;LoadLabelRelative16BitRelocation;0;1
operator=;operator=(class TR::LoadLabelRelative16BitRelocation &&);TR;LoadLabelRelative16BitRelocation;1;0
operator=;operator=(const class TR::LoadLabelRelative16BitRelocation &);TR;LoadLabelRelative16BitRelocation;1;0
setDeltaToStartLabel;setDeltaToStartLabel(int32_t);TR;LoadLabelRelative16BitRelocation;0;0
setEndLabel;setEndLabel(TR::LabelSymbol *);TR;LoadLabelRelative16BitRelocation;0;0
setLastInstruction;setLastInstruction(TR::Instruction *);TR;LoadLabelRelative16BitRelocation;0;0
setStartLabel;setStartLabel(TR::LabelSymbol *);TR;LoadLabelRelative16BitRelocation;0;0
~LoadLabelRelative16BitRelocation;~LoadLabelRelative16BitRelocation();TR;LoadLabelRelative16BitRelocation;1;0
LoadLabelRelative32BitRelocation;LoadLabelRelative32BitRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);TR;LoadLabelRelative32BitRelocation;0;0
LoadLabelRelative32BitRelocation;LoadLabelRelative32BitRelocation();TR;LoadLabelRelative32BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LoadLabelRelative32BitRelocation;0;1
getDeltaToStartLabel;getDeltaToStartLabel();TR;LoadLabelRelative32BitRelocation;0;0
getEndLabel;getEndLabel();TR;LoadLabelRelative32BitRelocation;0;0
getLastInstruction;getLastInstruction();TR;LoadLabelRelative32BitRelocation;0;0
getStartLabel;getStartLabel();TR;LoadLabelRelative32BitRelocation;0;0
isAOTRelocation;isAOTRelocation();TR;LoadLabelRelative32BitRelocation;0;1
operator=;operator=(const class TR::LoadLabelRelative32BitRelocation &);TR;LoadLabelRelative32BitRelocation;1;0
operator=;operator=(class TR::LoadLabelRelative32BitRelocation &&);TR;LoadLabelRelative32BitRelocation;1;0
setDeltaToStartLabel;setDeltaToStartLabel(int32_t);TR;LoadLabelRelative32BitRelocation;0;0
setEndLabel;setEndLabel(TR::LabelSymbol *);TR;LoadLabelRelative32BitRelocation;0;0
setLastInstruction;setLastInstruction(TR::Instruction *);TR;LoadLabelRelative32BitRelocation;0;0
setStartLabel;setStartLabel(TR::LabelSymbol *);TR;LoadLabelRelative32BitRelocation;0;0
~LoadLabelRelative32BitRelocation;~LoadLabelRelative32BitRelocation();TR;LoadLabelRelative32BitRelocation;1;0
LoadLabelRelative64BitRelocation;LoadLabelRelative64BitRelocation();TR;LoadLabelRelative64BitRelocation;0;0
LoadLabelRelative64BitRelocation;LoadLabelRelative64BitRelocation(TR::Instruction *,TR::LabelSymbol *);TR;LoadLabelRelative64BitRelocation;0;0
apply;apply(TR::CodeGenerator *);TR;LoadLabelRelative64BitRelocation;0;1
getLastInstruction;getLastInstruction();TR;LoadLabelRelative64BitRelocation;0;0
operator=;operator=(class TR::LoadLabelRelative64BitRelocation &&);TR;LoadLabelRelative64BitRelocation;1;0
operator=;operator=(const class TR::LoadLabelRelative64BitRelocation &);TR;LoadLabelRelative64BitRelocation;1;0
setLastInstruction;setLastInstruction(TR::Instruction *);TR;LoadLabelRelative64BitRelocation;0;0
~LoadLabelRelative64BitRelocation;~LoadLabelRelative64BitRelocation();TR;LoadLabelRelative64BitRelocation;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/Analyser.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/CodeGenPrep.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/CodeGenGC.cpp
GCStackAtlas;GCStackAtlas(class TR::GCStackAtlas &&);TR;GCStackAtlas;1;0
GCStackAtlas;GCStackAtlas(const class TR::GCStackAtlas &);TR;GCStackAtlas;1;0
~GCStackAtlas;~GCStackAtlas();OMR;GCStackAtlas;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/CodeGenRA.cpp
operator=;operator=(const class TR_BitVectorIterator &);;TR_BitVectorIterator;1;0
operator=;operator=(class TR_BitVectorIterator &&);;TR_BitVectorIterator;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/FrontEnd.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRGCRegisterMap.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRGCStackAtlas.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRLinkage.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/LiveRegister.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OutOfLineCodeSection.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/Relocation.cpp
ExternalOrderedPair32BitRelocation;ExternalOrderedPair32BitRelocation(class TR::ExternalOrderedPair32BitRelocation &&);TR;ExternalOrderedPair32BitRelocation;1;0
ExternalOrderedPair32BitRelocation;ExternalOrderedPair32BitRelocation(const class TR::ExternalOrderedPair32BitRelocation &);TR;ExternalOrderedPair32BitRelocation;1;0
IteratedExternalRelocation;IteratedExternalRelocation(class TR::IteratedExternalRelocation &&);TR;IteratedExternalRelocation;1;0
IteratedExternalRelocation;IteratedExternalRelocation(const class TR::IteratedExternalRelocation &);TR;IteratedExternalRelocation;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/ScratchRegisterManager.cpp
RegisterDependencyConditions;RegisterDependencyConditions(const class OMR::RegisterDependencyConditions &);OMR;RegisterDependencyConditions;1;0
RegisterDependencyConditions;RegisterDependencyConditions(class OMR::RegisterDependencyConditions &&);OMR;RegisterDependencyConditions;1;0
RegisterDependencyConditions;RegisterDependencyConditions();OMR;RegisterDependencyConditions;0;0
RegisterDependencyConditions;RegisterDependencyConditions();OMR::X86;RegisterDependencyConditions;0;0
RegisterDependencyConditions;RegisterDependencyConditions();TR;RegisterDependencyConditions;0;0
RegisterDependencyConditions;RegisterDependencyConditions(const class OMR::X86::RegisterDependencyConditions &);OMR::X86;RegisterDependencyConditions;1;0
RegisterDependencyConditions;RegisterDependencyConditions(class TR_X86RegisterDependencyIndex,class TR_X86RegisterDependencyIndex,class TR_Memory *);OMR::X86;RegisterDependencyConditions;0;0
RegisterDependencyConditions;RegisterDependencyConditions(class TR_X86RegisterDependencyIndex,class TR_X86RegisterDependencyIndex,class TR_Memory *);TR;RegisterDependencyConditions;0;0
RegisterDependencyConditions;RegisterDependencyConditions(TR::Node *,TR::CodeGenerator *,class TR_X86RegisterDependencyIndex,List<TR::Register> *);OMR::X86;RegisterDependencyConditions;0;0
RegisterDependencyConditions;RegisterDependencyConditions(TR::Node *,TR::CodeGenerator *,class TR_X86RegisterDependencyIndex,List<TR::Register> *);TR;RegisterDependencyConditions;0;0
RegisterDependencyConditions;RegisterDependencyConditions(class OMR::X86::RegisterDependencyConditions &&);OMR::X86;RegisterDependencyConditions;1;0
addPostCondition;addPostCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);OMR::X86;RegisterDependencyConditions;0;0
addPreCondition;addPreCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);OMR::X86;RegisterDependencyConditions;0;0
assignPostConditionRegisters;assignPostConditionRegisters(TR::Instruction *,enum TR_RegisterKinds,TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
assignPreConditionRegisters;assignPreConditionRegisters(TR::Instruction *,enum TR_RegisterKinds,TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
blockPostConditionRealDependencyRegisters;blockPostConditionRealDependencyRegisters(TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
blockPostConditionRegisters;blockPostConditionRegisters();OMR::X86;RegisterDependencyConditions;0;0
blockPreConditionRealDependencyRegisters;blockPreConditionRealDependencyRegisters(TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
blockPreConditionRegisters;blockPreConditionRegisters();OMR::X86;RegisterDependencyConditions;0;0
clone;clone(TR::CodeGenerator *,class TR_X86RegisterDependencyIndex);OMR::X86;RegisterDependencyConditions;0;0
createRegisterAssociationDirective;createRegisterAssociationDirective(TR::Instruction *,TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
defsRegister;defsRegister(TR::Register *);OMR::X86;RegisterDependencyConditions;0;0
findPostCondition;findPostCondition(TR::Register *);OMR::X86;RegisterDependencyConditions;0;0
findPostCondition;findPostCondition(TR::class RealRegister::RegNum);OMR::X86;RegisterDependencyConditions;0;0
findPreCondition;findPreCondition(TR::class RealRegister::RegNum);OMR::X86;RegisterDependencyConditions;0;0
findPreCondition;findPreCondition(TR::Register *);OMR::X86;RegisterDependencyConditions;0;0
getAddCursorForPost;getAddCursorForPost();OMR::X86;RegisterDependencyConditions;0;0
getAddCursorForPre;getAddCursorForPre();OMR::X86;RegisterDependencyConditions;0;0
getNumPostConditions;getNumPostConditions();OMR::X86;RegisterDependencyConditions;0;0
getNumPreConditions;getNumPreConditions();OMR::X86;RegisterDependencyConditions;0;0
getPostConditions;getPostConditions();OMR::X86;RegisterDependencyConditions;0;0
getPreConditions;getPreConditions();OMR::X86;RegisterDependencyConditions;0;0
getRealRegisterFromVirtual;getRealRegisterFromVirtual(TR::Register *,TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;RegisterDependencyConditions;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR::X86;RegisterDependencyConditions;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;RegisterDependencyConditions;0;0
jitPersistentFree;jitPersistentFree(void *);OMR::X86;RegisterDependencyConditions;0;0
numReferencedFPRegisters;numReferencedFPRegisters(TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
numReferencedGPRegisters;numReferencedGPRegisters(TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,TR::Region &);OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,TR::Region &);OMR::X86;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,size_t);OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,size_t);OMR::X86;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR::X86;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR::X86;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR::X86;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR::X86;RegisterDependencyConditions;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR::X86;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR::X86;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86;RegisterDependencyConditions;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR::X86;RegisterDependencyConditions;0;0
operator new;operator new(size_t,TR::Region &);OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,TR::Region &);OMR::X86;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR::X86;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR::X86;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,TR::Region &);OMR::X86;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR::X86;RegisterDependencyConditions;0;0
printDependencyConditions;printDependencyConditions(class TR_X86RegisterDependencyGroup *,class TR_X86RegisterDependencyIndex,char *,FILE *);OMR::X86;RegisterDependencyConditions;0;0
printFullRegisterDependencyInfo;printFullRegisterDependencyInfo(FILE *);OMR::X86;RegisterDependencyConditions;0;0
refsRegister;refsRegister(TR::Register *);OMR::X86;RegisterDependencyConditions;0;0
setAddCursorForPost;setAddCursorForPost(class TR_X86RegisterDependencyIndex);OMR::X86;RegisterDependencyConditions;0;0
setAddCursorForPre;setAddCursorForPre(class TR_X86RegisterDependencyIndex);OMR::X86;RegisterDependencyConditions;0;0
setMayNeedToPopFPRegisters;setMayNeedToPopFPRegisters(_Bool);OMR::X86;RegisterDependencyConditions;0;0
setNeedToClearFPStack;setNeedToClearFPStack(_Bool);OMR::X86;RegisterDependencyConditions;0;0
setNumPostConditions;setNumPostConditions(class TR_X86RegisterDependencyIndex,class TR_Memory *);OMR::X86;RegisterDependencyConditions;0;0
setNumPreConditions;setNumPreConditions(class TR_X86RegisterDependencyIndex,class TR_Memory *);OMR::X86;RegisterDependencyConditions;0;0
stopAddingConditions;stopAddingConditions();OMR::X86;RegisterDependencyConditions;0;0
stopAddingPostConditions;stopAddingPostConditions();OMR::X86;RegisterDependencyConditions;0;0
stopAddingPreConditions;stopAddingPreConditions();OMR::X86;RegisterDependencyConditions;0;0
unblockPostConditionRealDependencyRegisters;unblockPostConditionRealDependencyRegisters(TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
unblockPostConditionRegisters;unblockPostConditionRegisters();OMR::X86;RegisterDependencyConditions;0;0
unblockPreConditionRealDependencyRegisters;unblockPreConditionRealDependencyRegisters(TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
unblockPreConditionRegisters;unblockPreConditionRegisters();OMR::X86;RegisterDependencyConditions;0;0
unionDependencies;unionDependencies(class TR_X86RegisterDependencyGroup *,class TR_X86RegisterDependencyIndex,TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);OMR::X86;RegisterDependencyConditions;0;0
unionNoRegPostCondition;unionNoRegPostCondition(TR::Register *,TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
unionPostCondition;unionPostCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);OMR::X86;RegisterDependencyConditions;0;0
unionPreCondition;unionPreCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);OMR::X86;RegisterDependencyConditions;0;0
unionRealDependencies;unionRealDependencies(class TR_X86RegisterDependencyGroup *,class TR_X86RegisterDependencyIndex,TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);OMR::X86;RegisterDependencyConditions;0;0
useRegisters;useRegisters(TR::Instruction *,TR::CodeGenerator *);OMR::X86;RegisterDependencyConditions;0;0
usesRegister;usesRegister(TR::Register *);OMR::X86;RegisterDependencyConditions;0;0
~RegisterDependencyConditions;~RegisterDependencyConditions();OMR;RegisterDependencyConditions;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/StorageInfo.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRTreeEvaluator.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/PreInstructionSelection.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/NodeEvaluation.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRSnippet.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRUnresolvedDataSnippet.cpp
Snippet;Snippet(class TR::Snippet &&);TR;Snippet;1;0
Snippet;Snippet(const class TR::Snippet &);TR;Snippet;1;0
UnresolvedDataSnippet;UnresolvedDataSnippet(class OMR::UnresolvedDataSnippet &&);OMR;UnresolvedDataSnippet;1;0
UnresolvedDataSnippet;UnresolvedDataSnippet(const class OMR::UnresolvedDataSnippet &);OMR;UnresolvedDataSnippet;1;0
UnresolvedDataSnippet;UnresolvedDataSnippet(TR::CodeGenerator *,TR::Node *,TR::SymbolReference *,_Bool,_Bool);OMR;UnresolvedDataSnippet;0;0
UnresolvedDataSnippet;UnresolvedDataSnippet(TR::CodeGenerator *,TR::Node *,TR::SymbolReference *,_Bool,_Bool);TR;UnresolvedDataSnippet;0;0
UnresolvedDataSnippet;UnresolvedDataSnippet(const class TR::UnresolvedDataSnippet &);TR;UnresolvedDataSnippet;1;0
UnresolvedDataSnippet;UnresolvedDataSnippet(class TR::UnresolvedDataSnippet &&);TR;UnresolvedDataSnippet;1;0
create;create(TR::CodeGenerator *,TR::Node *,TR::SymbolReference *,_Bool,_Bool);OMR;UnresolvedDataSnippet;0;0
emitSnippetBody;emitSnippetBody();OMR;UnresolvedDataSnippet;0;1
getAddressOfDataReference;getAddressOfDataReference();OMR;UnresolvedDataSnippet;0;0
getDataReferenceInstruction;getDataReferenceInstruction();OMR;UnresolvedDataSnippet;0;0
getDataSymbolReference;getDataSymbolReference();OMR;UnresolvedDataSnippet;0;0
getLength;getLength(int32_t);OMR;UnresolvedDataSnippet;0;1
isUnresolvedStore;isUnresolvedStore();OMR;UnresolvedDataSnippet;0;0
operator=;operator=(class OMR::UnresolvedDataSnippet &&);OMR;UnresolvedDataSnippet;1;0
operator=;operator=(const class OMR::UnresolvedDataSnippet &);OMR;UnresolvedDataSnippet;1;0
operator=;operator=(const class TR::UnresolvedDataSnippet &);TR;UnresolvedDataSnippet;1;0
operator=;operator=(class TR::UnresolvedDataSnippet &&);TR;UnresolvedDataSnippet;1;0
resetUnresolvedStore;resetUnresolvedStore();OMR;UnresolvedDataSnippet;0;0
self;self();OMR;UnresolvedDataSnippet;0;0
setAddressOfDataReference;setAddressOfDataReference(uint8_t *);OMR;UnresolvedDataSnippet;0;0
setDataReferenceInstruction;setDataReferenceInstruction(TR::Instruction *);OMR;UnresolvedDataSnippet;0;0
setDataSymbolReference;setDataSymbolReference(TR::SymbolReference *);OMR;UnresolvedDataSnippet;0;0
setUnresolvedStore;setUnresolvedStore();OMR;UnresolvedDataSnippet;0;0
~UnresolvedDataSnippet;~UnresolvedDataSnippet();OMR;UnresolvedDataSnippet;1;0
~UnresolvedDataSnippet;~UnresolvedDataSnippet();TR;UnresolvedDataSnippet;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRSnippetGCMap.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRCodeGenerator.cpp
RegisterPair;RegisterPair(class TR::RegisterPair &&);TR;RegisterPair;1;0
RegisterPair;RegisterPair(const class TR::RegisterPair &);TR;RegisterPair;1;0
Machine;Machine(class TR::Machine &&);TR;Machine;1;0
Machine;Machine(const class TR::Machine &);TR;Machine;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRCodeGenPhase.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRMemoryReference.cpp
MemoryReference;MemoryReference(class OMR::MemoryReference &&);OMR;MemoryReference;1;0
MemoryReference;MemoryReference();OMR;MemoryReference;0;0
MemoryReference;MemoryReference(const class OMR::MemoryReference &);OMR;MemoryReference;1;0
MemoryReference;MemoryReference(class OMR::X86::MemoryReference &&);OMR::X86;MemoryReference;1;0
MemoryReference;MemoryReference(TR::IA32DataSnippet *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::IA32DataSnippet *,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::IA32DataSnippet *,TR::CodeGenerator *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Node *,TR::CodeGenerator *,_Bool);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::Register *,uint8_t,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::Register *,uint8_t,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::Register *,uint8_t,TR::CodeGenerator *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,intptrj_t,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,intptrj_t,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,intptrj_t,TR::CodeGenerator *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(TR::LabelSymbol *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::LabelSymbol *,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::LabelSymbol *,TR::CodeGenerator *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(const class OMR::X86::MemoryReference &);OMR::X86;MemoryReference;1;0
MemoryReference;MemoryReference(intptrj_t,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::SymbolReference *,intptrj_t,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::SymbolReference *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::MemoryReference &,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::MemoryReference &,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::Register *,uint8_t,intptrj_t,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::Register *,uint8_t,intptrj_t,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::Register *,uint8_t,intptrj_t,TR::CodeGenerator *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::CodeGenerator *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::SymbolReference *,TR::Register *,uint8_t,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::SymbolReference *,TR::Register *,uint8_t,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::SymbolReference *,TR::Register *,uint8_t,TR::CodeGenerator *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(class OMR::X86::AMD64::MemoryReference &&);OMR::X86::AMD64;MemoryReference;1;0
MemoryReference;MemoryReference(const class OMR::X86::AMD64::MemoryReference &);OMR::X86::AMD64;MemoryReference;1;0
MemoryReference;MemoryReference(TR::Node *,TR::CodeGenerator *,_Bool,class TR_ScratchRegisterManager *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Node *,TR::CodeGenerator *,_Bool,class TR_ScratchRegisterManager *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(TR::SymbolReference *,TR::CodeGenerator *,class TR_ScratchRegisterManager *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::SymbolReference *,TR::CodeGenerator *,class TR_ScratchRegisterManager *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(TR::SymbolReference *,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::SymbolReference *,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);TR;MemoryReference;0;0
MemoryReference;MemoryReference(class TR::MemoryReference &,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);TR;MemoryReference;0;0
ModRM;ModRM(uint8_t *);OMR::X86;MemoryReference;0;0
SIB;SIB(uint8_t *);OMR::X86;MemoryReference;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint32_t,uint8_t *,TR::Node *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
addMetaDataForCodeAddressDisplacementOnly;addMetaDataForCodeAddressDisplacementOnly(intptrj_t,uint8_t *,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
addMetaDataForCodeAddressWithLoad;addMetaDataForCodeAddressWithLoad(uint8_t *,TR::Instruction *,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
assignRegisters;assignRegisters(TR::Instruction *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;1
assignRegisters;assignRegisters(TR::Instruction *,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;1
blockRegisters;blockRegisters();OMR::X86;MemoryReference;0;1
blockRegisters;blockRegisters();OMR::X86::AMD64;MemoryReference;0;1
checkAndDecReferenceCount;checkAndDecReferenceCount(TR::Node *,rcount_t,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
consolidateRegisters;consolidateRegisters(TR::Node *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
convertMultiplierToStride;convertMultiplierToStride(int32_t);OMR::X86;MemoryReference;0;0
decNodeReferenceCounts;decNodeReferenceCounts(TR::CodeGenerator *);OMR::X86;MemoryReference;0;1
decNodeReferenceCounts;decNodeReferenceCounts(TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;1
enlarge;enlarge(TR::CodeGenerator *,int32_t,int32_t,_Bool);OMR::X86;MemoryReference;0;1
estimateBinaryLength;estimateBinaryLength(TR::CodeGenerator *);OMR::X86;MemoryReference;0;1
estimateBinaryLength;estimateBinaryLength(TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;1
evaluate;evaluate(TR::Node *,TR::CodeGenerator *,TR::Node *);OMR::X86;MemoryReference;0;0
finishInitialization;finishInitialization(TR::CodeGenerator *,class TR_ScratchRegisterManager *);OMR::X86::AMD64;MemoryReference;0;0
generateBinaryEncoding;generateBinaryEncoding(uint8_t *,TR::Instruction *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;1
generateBinaryEncoding;generateBinaryEncoding(uint8_t *,TR::Instruction *,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;1
getAddressRegister;getAddressRegister();OMR::X86;MemoryReference;0;0
getAddressRegister;getAddressRegister();OMR::X86::AMD64;MemoryReference;0;0
getBaseNode;getBaseNode();OMR::X86;MemoryReference;0;0
getBaseRegister;getBaseRegister();OMR::X86;MemoryReference;0;0
getBinaryLengthLowerBound;getBinaryLengthLowerBound(TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
getDataSnippet;getDataSnippet();OMR::X86;MemoryReference;0;0
getDisplacement;getDisplacement();OMR::X86;MemoryReference;0;0
getFlags;getFlags();OMR::X86;MemoryReference;0;0
getIndexNode;getIndexNode();OMR::X86;MemoryReference;0;0
getIndexRegister;getIndexRegister();OMR::X86;MemoryReference;0;0
getLabel;getLabel();OMR::X86;MemoryReference;0;0
getNextRegister;getNextRegister(TR::Register *);OMR::X86;MemoryReference;0;0
getNumMRReferencedGPRegisters;getNumMRReferencedGPRegisters();OMR::X86;MemoryReference;0;0
getReloKind;getReloKind();OMR::X86;MemoryReference;0;0
getStride;getStride();OMR::X86;MemoryReference;0;0
getStrideForNode;getStrideForNode(TR::Node *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
getStrideMultiplier;getStrideMultiplier();OMR::X86;MemoryReference;0;0
getSymbolReference;getSymbolReference();OMR::X86;MemoryReference;0;0
getUnresolvedDataSnippet;getUnresolvedDataSnippet();OMR::X86;MemoryReference;0;0
hasUnresolvedDataSnippet;hasUnresolvedDataSnippet();OMR::X86;MemoryReference;0;0
hasUnresolvedVirtualCallSnippet;hasUnresolvedVirtualCallSnippet();OMR::X86;MemoryReference;0;0
ignoreVolatile;ignoreVolatile();OMR::X86;MemoryReference;0;0
inUpcastingMode;inUpcastingMode();OMR::X86;MemoryReference;0;0
initialize;initialize(TR::SymbolReference *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;0
isForceSIBByte;isForceSIBByte();OMR::X86;MemoryReference;0;0
isForceWideDisplacement;isForceWideDisplacement();OMR::X86;MemoryReference;0;0
isValidStrideMultiplier;isValidStrideMultiplier(int32_t);OMR::X86;MemoryReference;0;0
isValidStrideShift;isValidStrideShift(int32_t);OMR::X86;MemoryReference;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;MemoryReference;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR::X86;MemoryReference;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR::X86::AMD64;MemoryReference;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;MemoryReference;0;0
jitPersistentFree;jitPersistentFree(void *);OMR::X86;MemoryReference;0;0
jitPersistentFree;jitPersistentFree(void *);OMR::X86::AMD64;MemoryReference;0;0
needsAddressLoadInstruction;needsAddressLoadInstruction(intptrj_t,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;0
needsCodeAbsoluteExternalRelocation;needsCodeAbsoluteExternalRelocation();OMR::X86;MemoryReference;0;0
needsSIBByte;needsSIBByte();OMR::X86;MemoryReference;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MemoryReference;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86;MemoryReference;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86::AMD64;MemoryReference;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;MemoryReference;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR::X86;MemoryReference;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR::X86::AMD64;MemoryReference;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MemoryReference;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86;MemoryReference;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86::AMD64;MemoryReference;0;0
operator delete;operator delete(void *,size_t);OMR;MemoryReference;0;0
operator delete;operator delete(void *,size_t);OMR::X86;MemoryReference;0;0
operator delete;operator delete(void *,size_t);OMR::X86::AMD64;MemoryReference;0;0
operator delete;operator delete(void *,TR::Region &);OMR;MemoryReference;0;0
operator delete;operator delete(void *,TR::Region &);OMR::X86;MemoryReference;0;0
operator delete;operator delete(void *,TR::Region &);OMR::X86::AMD64;MemoryReference;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR::X86;MemoryReference;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR::X86::AMD64;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86::AMD64;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86::AMD64;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR::X86;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR::X86::AMD64;MemoryReference;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;MemoryReference;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR::X86;MemoryReference;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR::X86::AMD64;MemoryReference;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;MemoryReference;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR::X86;MemoryReference;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR::X86::AMD64;MemoryReference;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;MemoryReference;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR::X86;MemoryReference;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR::X86::AMD64;MemoryReference;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MemoryReference;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86;MemoryReference;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86::AMD64;MemoryReference;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;MemoryReference;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR::X86;MemoryReference;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR::X86::AMD64;MemoryReference;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MemoryReference;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86;MemoryReference;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86::AMD64;MemoryReference;0;0
operator new;operator new(size_t,TR::Region &);OMR;MemoryReference;0;0
operator new;operator new(size_t,TR::Region &);OMR::X86;MemoryReference;0;0
operator new;operator new(size_t,TR::Region &);OMR::X86::AMD64;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Region &);OMR::X86;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Region &);OMR::X86::AMD64;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR::X86;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR::X86::AMD64;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR::X86;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR::X86::AMD64;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::X86::AMD64;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::X86::AMD64;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR::X86;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR::X86::AMD64;MemoryReference;0;0
operator=;operator=(class OMR::MemoryReference &&);OMR;MemoryReference;1;0
operator=;operator=(const class OMR::MemoryReference &);OMR;MemoryReference;1;0
operator=;operator=(const class OMR::X86::MemoryReference &);OMR::X86;MemoryReference;1;0
operator=;operator=(class OMR::X86::MemoryReference &&);OMR::X86;MemoryReference;1;0
operator=;operator=(class OMR::X86::AMD64::MemoryReference &&);OMR::X86::AMD64;MemoryReference;1;0
operator=;operator=(const class OMR::X86::AMD64::MemoryReference &);OMR::X86::AMD64;MemoryReference;1;0
operator=;operator=(const class TR::MemoryReference &);TR;MemoryReference;1;0
operator=;operator=(class TR::MemoryReference &&);TR;MemoryReference;1;0
populateMemoryReference;populateMemoryReference(TR::Node *,TR::CodeGenerator *,TR::Node *);OMR::X86;MemoryReference;0;0
processAsFPVolatile;processAsFPVolatile();OMR::X86;MemoryReference;0;0
processAsLongVolatileHigh;processAsLongVolatileHigh();OMR::X86;MemoryReference;0;0
processAsLongVolatileLow;processAsLongVolatileLow();OMR::X86;MemoryReference;0;0
refsRegister;refsRegister(TR::Register *);OMR::X86;MemoryReference;0;0
requiresLockPrefix;requiresLockPrefix();OMR::X86;MemoryReference;0;0
rexBits;rexBits();OMR::X86;MemoryReference;0;0
self;self();OMR;MemoryReference;0;0
setBaseNode;setBaseNode(TR::Node *);OMR::X86;MemoryReference;0;0
setBaseRegister;setBaseRegister(TR::Register *);OMR::X86;MemoryReference;0;0
setConstantDataSnippet;setConstantDataSnippet(TR::IA32DataSnippet *);OMR::X86;MemoryReference;0;0
setFlags;setFlags(uint8_t);OMR::X86;MemoryReference;0;0
setForceSIBByte;setForceSIBByte();OMR::X86;MemoryReference;0;0
setForceWideDisplacement;setForceWideDisplacement();OMR::X86;MemoryReference;0;0
setHasUnresolvedDataSnippet;setHasUnresolvedDataSnippet();OMR::X86;MemoryReference;0;0
setHasUnresolvedVirtualCallSnippet;setHasUnresolvedVirtualCallSnippet();OMR::X86;MemoryReference;0;0
setIgnoreVolatile;setIgnoreVolatile();OMR::X86;MemoryReference;0;0
setInUpcastingMode;setInUpcastingMode(_Bool);OMR::X86;MemoryReference;0;0
setIndexNode;setIndexNode(TR::Node *);OMR::X86;MemoryReference;0;0
setIndexRegister;setIndexRegister(TR::Register *);OMR::X86;MemoryReference;0;0
setLabel;setLabel(TR::LabelSymbol *);OMR::X86;MemoryReference;0;0
setNeedsCodeAbsoluteExternalRelocation;setNeedsCodeAbsoluteExternalRelocation();OMR::X86;MemoryReference;0;0
setPreferRIPRelative;setPreferRIPRelative(_Bool);OMR::X86::AMD64;MemoryReference;0;0
setProcessAsFPVolatile;setProcessAsFPVolatile();OMR::X86;MemoryReference;0;0
setProcessAsLongVolatileHigh;setProcessAsLongVolatileHigh();OMR::X86;MemoryReference;0;0
setProcessAsLongVolatileLow;setProcessAsLongVolatileLow();OMR::X86;MemoryReference;0;0
setReloKind;setReloKind(int32_t);OMR::X86;MemoryReference;0;0
setRequiresLockPrefix;setRequiresLockPrefix();OMR::X86;MemoryReference;0;0
setStride;setStride(uint8_t);OMR::X86;MemoryReference;0;0
setStrideFieldInSIB;setStrideFieldInSIB(uint8_t *);OMR::X86;MemoryReference;0;0
setStrideFromMultiplier;setStrideFromMultiplier(uint8_t);OMR::X86;MemoryReference;0;0
setUnresolvedDataSnippet;setUnresolvedDataSnippet(TR::UnresolvedDataSnippet *);OMR::X86;MemoryReference;0;0
stopUsingRegisters;stopUsingRegisters(TR::CodeGenerator *);OMR::X86;MemoryReference;0;1
unblockRegisters;unblockRegisters();OMR::X86;MemoryReference;0;1
unblockRegisters;unblockRegisters();OMR::X86::AMD64;MemoryReference;0;1
useRegisters;useRegisters(TR::Instruction *,TR::CodeGenerator *);OMR::X86;MemoryReference;0;1
useRegisters;useRegisters(TR::Instruction *,TR::CodeGenerator *);OMR::X86::AMD64;MemoryReference;0;1
~MemoryReference;~MemoryReference();OMR;MemoryReference;1;0
~MemoryReference;~MemoryReference();OMR::X86;MemoryReference;1;0
~MemoryReference;~MemoryReference();OMR::X86::AMD64;MemoryReference;1;0
~MemoryReference;~MemoryReference();TR;MemoryReference;1;0
IA32ConstantDataSnippet;IA32ConstantDataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t);TR;IA32ConstantDataSnippet;0;0
IA32DataSnippet;IA32DataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t);TR;IA32DataSnippet;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;IA32DataSnippet;0;0
emitSnippetBody;emitSnippetBody();TR;IA32DataSnippet;0;1
getConstantSize;getConstantSize();TR;IA32ConstantDataSnippet;0;0
getDataAs2Bytes;getDataAs2Bytes();TR;IA32DataSnippet;0;0
getDataAs4Bytes;getDataAs4Bytes();TR;IA32DataSnippet;0;0
getDataAs8Bytes;getDataAs8Bytes();TR;IA32DataSnippet;0;0
getDataSize;getDataSize();TR;IA32DataSnippet;0;1
getKind;getKind();TR;IA32DataSnippet;0;1
getKind;getKind();TR;IA32ConstantDataSnippet;0;1
getLength;getLength(int32_t);TR;IA32DataSnippet;0;1
getValue;getValue();TR;IA32DataSnippet;0;0
operator=;operator=(const class TR::IA32DataSnippet &);TR;IA32DataSnippet;1;0
operator=;operator=(class TR::IA32DataSnippet &&);TR;IA32DataSnippet;1;0
operator=;operator=(class TR::IA32ConstantDataSnippet &&);TR;IA32ConstantDataSnippet;1;0
operator=;operator=(const class TR::IA32ConstantDataSnippet &);TR;IA32ConstantDataSnippet;1;0
setClassAddress;setClassAddress(_Bool);TR;IA32DataSnippet;0;1
~IA32ConstantDataSnippet;~IA32ConstantDataSnippet();TR;IA32ConstantDataSnippet;1;0
~IA32DataSnippet;~IA32DataSnippet();TR;IA32DataSnippet;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRMachine.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRRegister.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRRealRegister.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRRegisterPair.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRInstruction.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/ELFObjectFileGenerator.cpp
CacheListCriticalSection;CacheListCriticalSection(class OMR::CodeCacheManager::CacheListCriticalSection &&);OMR::CodeCacheManager;CacheListCriticalSection;1;0
CacheListCriticalSection;CacheListCriticalSection(TR::CodeCacheManager *);OMR::CodeCacheManager;CacheListCriticalSection;0;0
CriticalSection;CriticalSection(const class OMR::CriticalSection &);OMR;CriticalSection;0;0
CriticalSection;CriticalSection(TR::Monitor *);OMR;CriticalSection;0;0
operator=;operator=(class OMR::CriticalSection);OMR;CriticalSection;0;0
operator=;operator=(class OMR::CodeCacheManager::CacheListCriticalSection &&);OMR::CodeCacheManager;CacheListCriticalSection;1;0
~CacheListCriticalSection;~CacheListCriticalSection();OMR::CodeCacheManager;CacheListCriticalSection;1;0
~CriticalSection;~CriticalSection();OMR;CriticalSection;0;0
RepositoryMonitorCriticalSection;RepositoryMonitorCriticalSection(class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &&);OMR::CodeCacheManager;RepositoryMonitorCriticalSection;1;0
RepositoryMonitorCriticalSection;RepositoryMonitorCriticalSection(TR::CodeCacheManager *);OMR::CodeCacheManager;RepositoryMonitorCriticalSection;0;0
operator=;operator=(class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &&);OMR::CodeCacheManager;RepositoryMonitorCriticalSection;1;0
~RepositoryMonitorCriticalSection;~RepositoryMonitorCriticalSection();OMR::CodeCacheManager;RepositoryMonitorCriticalSection;1;0
ELFRelocationResolver;ELFRelocationResolver();OMR;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver();OMR::X86::AMD64;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver();TR;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(const class OMR::ELFRelocationResolver &);OMR;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(class OMR::ELFRelocationResolver &&);OMR;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(const class OMR::X86::AMD64::ELFRelocationResolver &);OMR::X86::AMD64;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(class OMR::X86::AMD64::ELFRelocationResolver &&);OMR::X86::AMD64;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(class TR::ELFRelocationResolver &&);TR;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(const class TR::ELFRelocationResolver &);TR;ELFRelocationResolver;1;0
resolveRelocationType;resolveRelocationType(const TR::StaticRelocation &);OMR;ELFRelocationResolver;0;0
resolveRelocationType;resolveRelocationType(const TR::StaticRelocation &);OMR::X86::AMD64;ELFRelocationResolver;0;0
~ELFRelocationResolver;~ELFRelocationResolver();OMR;ELFRelocationResolver;1;0
~ELFRelocationResolver;~ELFRelocationResolver();OMR::X86::AMD64;ELFRelocationResolver;1;0
~ELFRelocationResolver;~ELFRelocationResolver();TR;ELFRelocationResolver;1;0
CodeCacheConfig;CodeCacheConfig(class OMR::CodeCacheConfig &&);OMR;CodeCacheConfig;1;0
CodeCacheConfig;CodeCacheConfig();OMR;CodeCacheConfig;0;0
CodeCacheConfig;CodeCacheConfig();TR;CodeCacheConfig;0;0
CodeCacheConfig;CodeCacheConfig(const class OMR::CodeCacheConfig &);OMR;CodeCacheConfig;1;0
CodeCacheConfig;CodeCacheConfig(class TR::CodeCacheConfig &&);TR;CodeCacheConfig;1;0
CodeCacheConfig;CodeCacheConfig(const class TR::CodeCacheConfig &);TR;CodeCacheConfig;1;0
allowedToGrowCache;allowedToGrowCache();OMR;CodeCacheConfig;0;0
canChangeNumCodeCaches;canChangeNumCodeCaches();OMR;CodeCacheConfig;0;0
ccPreLoadedCodeSize;ccPreLoadedCodeSize();OMR;CodeCacheConfig;0;0
codeCacheAlignment;codeCacheAlignment();OMR;CodeCacheConfig;0;0
codeCacheFreeBlockRecylingEnabled;codeCacheFreeBlockRecylingEnabled();OMR;CodeCacheConfig;0;0
codeCacheHashEntryAllocatorSlabSize;codeCacheHashEntryAllocatorSlabSize();OMR;CodeCacheConfig;0;0
codeCacheHelperAlignment;codeCacheHelperAlignment();OMR;CodeCacheConfig;0;0
codeCacheHelperAlignmentMask;codeCacheHelperAlignmentMask();OMR;CodeCacheConfig;0;0
codeCacheKB;codeCacheKB();OMR;CodeCacheConfig;0;0
codeCacheMethodBodyAllocRetries;codeCacheMethodBodyAllocRetries();OMR;CodeCacheConfig;0;0
codeCachePadKB;codeCachePadKB();OMR;CodeCacheConfig;0;0
codeCacheTempTrampolineSyncArraySize;codeCacheTempTrampolineSyncArraySize();OMR;CodeCacheConfig;0;0
codeCacheTotalKB;codeCacheTotalKB();OMR;CodeCacheConfig;0;0
codeCacheTrampolineAlignmentBytes;codeCacheTrampolineAlignmentBytes();OMR;CodeCacheConfig;0;0
coldEyeCatcher;coldEyeCatcher();OMR;CodeCacheConfig;0;0
doSanityChecks;doSanityChecks();OMR;CodeCacheConfig;0;0
emitELFObjectFile;emitELFObjectFile();OMR;CodeCacheConfig;0;0
emitElfObject;emitElfObject();OMR;CodeCacheConfig;0;0
largeCodePageFlags;largeCodePageFlags();OMR;CodeCacheConfig;0;0
largeCodePageSize;largeCodePageSize();OMR;CodeCacheConfig;0;0
lowCodeCacheThreshold;lowCodeCacheThreshold();OMR;CodeCacheConfig;0;0
maxNumberOfCodeCaches;maxNumberOfCodeCaches();OMR;CodeCacheConfig;0;0
mccCallbacks;mccCallbacks();OMR;CodeCacheConfig;0;0
needsMethodTrampolines;needsMethodTrampolines();OMR;CodeCacheConfig;0;0
numRuntimeHelpers;numRuntimeHelpers();OMR;CodeCacheConfig;0;0
operator=;operator=(class OMR::CodeCacheConfig &&);OMR;CodeCacheConfig;1;0
operator=;operator=(const class OMR::CodeCacheConfig &);OMR;CodeCacheConfig;1;0
operator=;operator=(class TR::CodeCacheConfig &&);TR;CodeCacheConfig;1;0
operator=;operator=(const class TR::CodeCacheConfig &);TR;CodeCacheConfig;1;0
self;self();OMR;CodeCacheConfig;0;0
setCodeCacheHelperAlignment;setCodeCacheHelperAlignment(size_t);OMR;CodeCacheConfig;0;0
trampolineCodeSize;trampolineCodeSize();OMR;CodeCacheConfig;0;0
trampolineSpacePercentage;trampolineSpacePercentage();OMR;CodeCacheConfig;0;0
verboseCodeCache;verboseCodeCache();OMR;CodeCacheConfig;0;0
verbosePerformance;verbosePerformance();OMR;CodeCacheConfig;0;0
verboseReclamation;verboseReclamation();OMR;CodeCacheConfig;0;0
warmEyeCatcher;warmEyeCatcher();OMR;CodeCacheConfig;0;0
~CodeCacheConfig;~CodeCacheConfig();OMR;CodeCacheConfig;1;0
~CodeCacheConfig;~CodeCacheConfig();TR;CodeCacheConfig;1;0
CodeCacheManager;CodeCacheManager(const class OMR::CodeCacheManager &);OMR;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(class OMR::CodeCacheManager &&);OMR;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(TR::RawAllocator);OMR;CodeCacheManager;0;0
CodeCacheManager;CodeCacheManager(TR::RawAllocator);TestCompiler;CodeCacheManager;0;0
CodeCacheManager;CodeCacheManager(TR::RawAllocator);TR;CodeCacheManager;0;0
CodeCacheManager;CodeCacheManager(class TestCompiler::CodeCacheManager &&);TestCompiler;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(const class TestCompiler::CodeCacheManager &);TestCompiler;CodeCacheManager;1;0
addCodeCache;addCodeCache(TR::CodeCache *);OMR;CodeCacheManager;0;0
addFreeBlock;addFreeBlock(void *,uint8_t *);OMR;CodeCacheManager;0;0
allocateCodeCacheObject;allocateCodeCacheObject(TR::CodeCacheMemorySegment *,size_t,class OMR::CodeCacheHashEntrySlab *);OMR;CodeCacheManager;0;0
allocateCodeCacheRepository;allocateCodeCacheRepository(size_t);OMR;CodeCacheManager;0;0
allocateCodeCacheSegment;allocateCodeCacheSegment(size_t,size_t &,void *);TestCompiler;CodeCacheManager;0;0
allocateCodeMemory;allocateCodeMemory(size_t,size_t,TR::CodeCache **,uint8_t **,_Bool,_Bool);OMR;CodeCacheManager;0;0
allocateCodeMemoryWithRetries;allocateCodeMemoryWithRetries(size_t,size_t,TR::CodeCache **,int32_t,uint8_t **,_Bool,_Bool);OMR;CodeCacheManager;0;0
allocateRepositoryCodeCache;allocateRepositoryCodeCache();OMR;CodeCacheManager;0;0
almostOutOfCodeCache;almostOutOfCodeCache();OMR;CodeCacheManager;0;0
cacheListMutex;cacheListMutex();OMR;CodeCacheManager;0;0
canAddNewCodeCache;canAddNewCodeCache();OMR;CodeCacheManager;0;0
carveCodeCacheSpaceFromRepository;carveCodeCacheSpaceFromRepository(size_t,size_t &);OMR;CodeCacheManager;0;0
chooseCacheStartAddress;chooseCacheStartAddress(size_t);OMR;CodeCacheManager;0;0
codeCacheConfig;codeCacheConfig();OMR;CodeCacheManager;0;0
codeCacheIsFull;codeCacheIsFull();OMR;CodeCacheManager;0;0
decreaseFreeSpaceInCodeCacheRepository;decreaseFreeSpaceInCodeCacheRepository(size_t);OMR;CodeCacheManager;0;0
destroy;destroy();OMR;CodeCacheManager;0;0
dumpCodeCaches;dumpCodeCaches();OMR;CodeCacheManager;0;0
findCodeCacheFromPC;findCodeCacheFromPC(void *);OMR;CodeCacheManager;0;0
findHelperTrampoline;findHelperTrampoline(void *,int32_t);OMR;CodeCacheManager;0;0
findMethodTrampoline;findMethodTrampoline(class TR_OpaqueMethodBlock *,void *);OMR;CodeCacheManager;0;0
freeMemory;freeMemory(void *);OMR;CodeCacheManager;0;0
freeMemorySegment;freeMemorySegment(TR::CodeCacheMemorySegment *);OMR;CodeCacheManager;0;0
getCodeCacheRepositoryMonitor;getCodeCacheRepositoryMonitor();OMR;CodeCacheManager;0;0
getCurrentNumberOfCodeCaches;getCurrentNumberOfCodeCaches();OMR;CodeCacheManager;0;0
getFirstCodeCache;getFirstCodeCache();OMR;CodeCacheManager;0;0
getMemory;getMemory(size_t);OMR;CodeCacheManager;0;0
getNewCacheMemorySegment;getNewCacheMemorySegment(size_t,size_t &);OMR;CodeCacheManager;0;0
getNewCodeCache;getNewCodeCache(int32_t);OMR;CodeCacheManager;0;0
getRepositoryCodeCacheAddress;getRepositoryCodeCacheAddress();OMR;CodeCacheManager;0;0
increaseFreeSpaceInCodeCacheRepository;increaseFreeSpaceInCodeCacheRepository(size_t);OMR;CodeCacheManager;0;0
initialize;initialize(_Bool,uint32_t);OMR;CodeCacheManager;0;0
initializeELFHeader;initializeELFHeader();OMR;CodeCacheManager;0;0
initializeELFHeaderForPlatform;initializeELFHeaderForPlatform(struct OMR::ELFCodeCacheHeader *);OMR;CodeCacheManager;0;0
initializeELFTrailer;initializeELFTrailer();OMR;CodeCacheManager;0;0
initializeObjectFileGenerator;initializeObjectFileGenerator();OMR;CodeCacheManager;0;0
initialized;initialized();OMR;CodeCacheManager;0;0
instance;instance();TestCompiler;CodeCacheManager;0;0
lateInitialization;lateInitialization();OMR;CodeCacheManager;0;0
lowCodeCacheSpaceThresholdReached;lowCodeCacheSpaceThresholdReached();OMR;CodeCacheManager;0;0
operator new;operator new(size_t,TR::CodeCacheManager *);TestCompiler;CodeCacheManager;0;0
operator=;operator=(class OMR::CodeCacheManager &&);OMR;CodeCacheManager;1;0
performSizeAdjustments;performSizeAdjustments(size_t &,size_t &,_Bool,_Bool);OMR;CodeCacheManager;0;0
printMccStats;printMccStats();OMR;CodeCacheManager;0;0
printOccupancyStats;printOccupancyStats();OMR;CodeCacheManager;0;0
printRemainingSpaceInCodeCaches;printRemainingSpaceInCodeCaches();OMR;CodeCacheManager;0;0
registerCompiledMethod;registerCompiledMethod(const char *,uint8_t *,uint32_t);OMR;CodeCacheManager;0;0
registerStaticRelocation;registerStaticRelocation(const TR::StaticRelocation &);OMR;CodeCacheManager;0;0
replaceTrampoline;replaceTrampoline(class TR_OpaqueMethodBlock *,void *,void *,void *,void *,_Bool);OMR;CodeCacheManager;0;0
repositoryCodeCacheCreated;repositoryCodeCacheCreated();OMR;CodeCacheManager;0;0
reservationInterfaceCache;reservationInterfaceCache(void *,class TR_OpaqueMethodBlock *);OMR;CodeCacheManager;0;0
reserveCodeCache;reserveCodeCache(_Bool,size_t,int32_t,int32_t *);OMR;CodeCacheManager;0;0
self;self();OMR;CodeCacheManager;0;0
self;self();TestCompiler;CodeCacheManager;0;0
setCodeCacheFull;setCodeCacheFull();OMR;CodeCacheManager;0;0
setCodeCacheIsFull;setCodeCacheIsFull(_Bool);OMR;CodeCacheManager;0;0
setHasFailedCodeCacheAllocation;setHasFailedCodeCacheAllocation();OMR;CodeCacheManager;0;0
setupMemorySegmentFromRepository;setupMemorySegmentFromRepository(uint8_t *,uint8_t *,size_t &);OMR;CodeCacheManager;0;0
synchronizeTrampolines;synchronizeTrampolines();OMR;CodeCacheManager;0;0
undoCarvingFromRepository;undoCarvingFromRepository(TR::CodeCacheMemorySegment *);OMR;CodeCacheManager;0;0
unreserveCodeCache;unreserveCodeCache(TR::CodeCache *);OMR;CodeCacheManager;0;0
usingRepository;usingRepository();OMR;CodeCacheManager;0;0
~CodeCacheManager;~CodeCacheManager();OMR;CodeCacheManager;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRELFRelocationResolver.cpp
(Arch: AMD64): Compiling ../../../../compiler/x/amd64/codegen/OMRCodeGenerator.cpp
bitwise32;bitwise32(TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);;TR_X86ComputeCC;0;0
setCarryBorrow;setCarryBorrow(TR::Node *,_Bool,TR::CodeGenerator *);;TR_X86ComputeCC;0;0
(Arch: AMD64): Compiling ../../../../compiler/x/amd64/codegen/OMRMachine.cpp
(Arch: AMD64): Compiling ../../../../compiler/x/amd64/codegen/OMRMemoryReference.cpp
AMD64Imm64Instruction;AMD64Imm64Instruction(class TR::AMD64Imm64Instruction &&);TR;AMD64Imm64Instruction;1;0
AMD64Imm64Instruction;AMD64Imm64Instruction(const class TR::AMD64Imm64Instruction &);TR;AMD64Imm64Instruction;1;0
AMD64Imm64Instruction;AMD64Imm64Instruction(TR::RegisterDependencyConditions *,uint64_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::CodeGenerator *);TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(TR::RegisterDependencyConditions *,uint64_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(uint64_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::CodeGenerator *);TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(uint64_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;AMD64Imm64Instruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;AMD64Imm64SymInstruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::SymbolReference *,TR::CodeGenerator *);TR;AMD64Imm64SymInstruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;AMD64Imm64SymInstruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *,uint8_t *);TR;AMD64Imm64SymInstruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *);TR;AMD64Imm64SymInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;AMD64Imm64Instruction;0;1
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;AMD64Imm64SymInstruction;0;1
description;description();TR;AMD64Imm64Instruction;0;1
description;description();TR;AMD64Imm64SymInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;AMD64Imm64Instruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;AMD64Imm64SymInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;AMD64Imm64Instruction;0;1
generateOperand;generateOperand(uint8_t *);TR;AMD64Imm64SymInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;AMD64Imm64Instruction;0;1
getKind;getKind();TR;AMD64Imm64Instruction;0;1
getKind;getKind();TR;AMD64Imm64SymInstruction;0;1
getSourceImmediate;getSourceImmediate();TR;AMD64Imm64Instruction;0;0
getSymbolReference;getSymbolReference();TR;AMD64Imm64SymInstruction;0;0
operator=;operator=(class TR::AMD64Imm64Instruction &&);TR;AMD64Imm64Instruction;1;0
operator=;operator=(const class TR::AMD64Imm64Instruction &);TR;AMD64Imm64Instruction;1;0
operator=;operator=(class TR::AMD64Imm64SymInstruction &&);TR;AMD64Imm64SymInstruction;1;0
operator=;operator=(const class TR::AMD64Imm64SymInstruction &);TR;AMD64Imm64SymInstruction;1;0
setSourceImmediate;setSourceImmediate(uint64_t);TR;AMD64Imm64Instruction;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);TR;AMD64Imm64SymInstruction;0;0
~AMD64Imm64Instruction;~AMD64Imm64Instruction();TR;AMD64Imm64Instruction;1;0
~AMD64Imm64SymInstruction;~AMD64Imm64SymInstruction();TR;AMD64Imm64SymInstruction;1;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(uint64_t,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t);TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(uint64_t,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t);TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64SymInstruction;AMD64RegImm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *);TR;AMD64RegImm64SymInstruction;0;0
AMD64RegImm64SymInstruction;AMD64RegImm64SymInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *);TR;AMD64RegImm64SymInstruction;0;0
X86RegInstruction;X86RegInstruction(class TR::X86RegInstruction &&);TR;X86RegInstruction;1;0
X86RegInstruction;X86RegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::CodeGenerator *);TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *);TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::RegisterDependencyConditions *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(const class TR::X86RegInstruction &);TR;X86RegInstruction;1;0
X86RegInstruction;X86RegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86RegInstruction;0;0
aboutToAssignTargetRegister;aboutToAssignTargetRegister();TR;X86RegInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;AMD64RegImm64Instruction;0;1
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;AMD64RegImm64SymInstruction;0;1
applyTargetRegisterToModRMByte;applyTargetRegisterToModRMByte(uint8_t *);TR;X86RegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86RegInstruction;0;1
autoSetReloKind;autoSetReloKind();TR;AMD64RegImm64SymInstruction;0;0
defsRegister;defsRegister(TR::Register *);TR;X86RegInstruction;0;1
description;description();TR;X86RegInstruction;0;1
description;description();TR;AMD64RegImm64Instruction;0;1
description;description();TR;AMD64RegImm64SymInstruction;0;1
enlarge;enlarge(int32_t,int32_t,_Bool);TR;X86RegInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86RegInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;AMD64RegImm64Instruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86RegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;AMD64RegImm64Instruction;0;1
generateOperand;generateOperand(uint8_t *);TR;AMD64RegImm64SymInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86RegInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;AMD64RegImm64Instruction;0;1
getIA32RegInstruction;getIA32RegInstruction();TR;X86RegInstruction;0;1
getIA32RegMemInstruction;getIA32RegMemInstruction();TR;X86RegInstruction;0;1
getIA32RegRegInstruction;getIA32RegRegInstruction();TR;X86RegInstruction;0;1
getKind;getKind();TR;X86RegInstruction;0;1
getKind;getKind();TR;AMD64RegImm64Instruction;0;1
getKind;getKind();TR;AMD64RegImm64SymInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86RegInstruction;0;1
getReloKind;getReloKind();TR;AMD64RegImm64Instruction;0;0
getSourceImmediate;getSourceImmediate();TR;AMD64RegImm64Instruction;0;0
getSymbolReference;getSymbolReference();TR;AMD64RegImm64SymInstruction;0;0
getTargetRegister;getTargetRegister();TR;X86RegInstruction;0;1
operator=;operator=(class TR::X86RegInstruction &&);TR;X86RegInstruction;1;0
operator=;operator=(const class TR::X86RegInstruction &);TR;X86RegInstruction;1;0
operator=;operator=(class TR::AMD64RegImm64Instruction &&);TR;AMD64RegImm64Instruction;1;0
operator=;operator=(const class TR::AMD64RegImm64Instruction &);TR;AMD64RegImm64Instruction;1;0
operator=;operator=(class TR::AMD64RegImm64SymInstruction &&);TR;AMD64RegImm64SymInstruction;1;0
operator=;operator=(const class TR::AMD64RegImm64SymInstruction &);TR;AMD64RegImm64SymInstruction;1;0
refsRegister;refsRegister(TR::Register *);TR;X86RegInstruction;0;1
rexBits;rexBits();TR;X86RegInstruction;0;1
setReloKind;setReloKind(int32_t);TR;AMD64RegImm64Instruction;0;0
setSourceImmediate;setSourceImmediate(uint64_t);TR;AMD64RegImm64Instruction;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);TR;AMD64RegImm64SymInstruction;0;0
setTargetRegister;setTargetRegister(TR::Register *);TR;X86RegInstruction;0;0
targetRegisterRexBits;targetRegisterRexBits();TR;X86RegInstruction;0;0
usesRegister;usesRegister(TR::Register *);TR;X86RegInstruction;0;1
~AMD64RegImm64Instruction;~AMD64RegImm64Instruction();TR;AMD64RegImm64Instruction;1;0
~AMD64RegImm64SymInstruction;~AMD64RegImm64SymInstruction();TR;AMD64RegImm64SymInstruction;1;0
~X86RegInstruction;~X86RegInstruction();TR;X86RegInstruction;1;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Instruction *,uint8_t,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Instruction *,uint8_t,uint8_t,TR::CodeGenerator *);TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Instruction *,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *);TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Node *,uint8_t,TR::CodeGenerator *);TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Node *,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Node *,uint8_t,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Node *,uint8_t,uint8_t,TR::CodeGenerator *);TR;X86AlignmentInstruction;0;0
description;description();TR;X86AlignmentInstruction;0;1
enlarge;enlarge(int32_t,int32_t,_Bool);TR;X86AlignmentInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86AlignmentInstruction;0;1
generateBinaryEncoding;generateBinaryEncoding();TR;X86AlignmentInstruction;0;1
getBoundary;getBoundary();TR;X86AlignmentInstruction;0;0
getKind;getKind();TR;X86AlignmentInstruction;0;1
getMargin;getMargin();TR;X86AlignmentInstruction;0;0
operator=;operator=(const class TR::X86AlignmentInstruction &);TR;X86AlignmentInstruction;1;0
operator=;operator=(class TR::X86AlignmentInstruction &&);TR;X86AlignmentInstruction;1;0
~X86AlignmentInstruction;~X86AlignmentInstruction();TR;X86AlignmentInstruction;1;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(const class TR::X86BoundaryAvoidanceInstruction &);TR;X86BoundaryAvoidanceInstruction;1;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(int32_t,const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::Instruction *,TR::CodeGenerator *);TR;X86BoundaryAvoidanceInstruction;0;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(TR::Instruction *,const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::CodeGenerator *);TR;X86BoundaryAvoidanceInstruction;0;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::Instruction *,TR::CodeGenerator *);TR;X86BoundaryAvoidanceInstruction;0;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(class TR::X86BoundaryAvoidanceInstruction &&);TR;X86BoundaryAvoidanceInstruction;1;0
X86PatchableCodeAlignmentInstruction;X86PatchableCodeAlignmentInstruction(const struct TR_AtomicRegion *,TR::Instruction *,TR::CodeGenerator *);TR;X86PatchableCodeAlignmentInstruction;0;0
X86PatchableCodeAlignmentInstruction;X86PatchableCodeAlignmentInstruction(const struct TR_AtomicRegion *,TR::Instruction *,int32_t,TR::CodeGenerator *);TR;X86PatchableCodeAlignmentInstruction;0;0
X86PatchableCodeAlignmentInstruction;X86PatchableCodeAlignmentInstruction(TR::Instruction *,const struct TR_AtomicRegion *,TR::CodeGenerator *);TR;X86PatchableCodeAlignmentInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86BoundaryAvoidanceInstruction;0;1
betterPadLength;betterPadLength(int32_t,const struct TR_AtomicRegion *,int32_t);TR;X86BoundaryAvoidanceInstruction;0;1
betterPadLength;betterPadLength(int32_t,const struct TR_AtomicRegion *,int32_t);TR;X86PatchableCodeAlignmentInstruction;0;1
description;description();TR;X86BoundaryAvoidanceInstruction;0;1
description;description();TR;X86PatchableCodeAlignmentInstruction;0;1
enlarge;enlarge(int32_t,int32_t,_Bool);TR;X86BoundaryAvoidanceInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86BoundaryAvoidanceInstruction;0;1
generateBinaryEncoding;generateBinaryEncoding();TR;X86BoundaryAvoidanceInstruction;0;1
getAtomicRegions;getAtomicRegions();TR;X86BoundaryAvoidanceInstruction;0;0
getBoundarySpacing;getBoundarySpacing();TR;X86BoundaryAvoidanceInstruction;0;0
getKind;getKind();TR;X86BoundaryAvoidanceInstruction;0;1
getKind;getKind();TR;X86PatchableCodeAlignmentInstruction;0;1
getMaxPadding;getMaxPadding();TR;X86BoundaryAvoidanceInstruction;0;0
getPatchableCode;getPatchableCode();TR;X86PatchableCodeAlignmentInstruction;0;0
getSizeOfProtectiveNop;getSizeOfProtectiveNop();TR;X86BoundaryAvoidanceInstruction;0;0
getTargetCode;getTargetCode();TR;X86BoundaryAvoidanceInstruction;0;0
operator=;operator=(class TR::X86BoundaryAvoidanceInstruction &&);TR;X86BoundaryAvoidanceInstruction;1;0
operator=;operator=(const class TR::X86BoundaryAvoidanceInstruction &);TR;X86BoundaryAvoidanceInstruction;1;0
operator=;operator=(const class TR::X86PatchableCodeAlignmentInstruction &);TR;X86PatchableCodeAlignmentInstruction;1;0
operator=;operator=(class TR::X86PatchableCodeAlignmentInstruction &&);TR;X86PatchableCodeAlignmentInstruction;1;0
~X86BoundaryAvoidanceInstruction;~X86BoundaryAvoidanceInstruction();TR;X86BoundaryAvoidanceInstruction;1;0
~X86PatchableCodeAlignmentInstruction;~X86PatchableCodeAlignmentInstruction();TR;X86PatchableCodeAlignmentInstruction;1;0
X86CallMemInstruction;X86CallMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86CallMemInstruction;0;0
X86CallMemInstruction;X86CallMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86CallMemInstruction;0;0
X86CallMemInstruction;X86CallMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::CodeGenerator *);TR;X86CallMemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::CodeGenerator *,TR::Register *);TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::RegisterDependencyConditions *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,TR::Register *);TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::CodeGenerator *,TR::Register *);TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,TR::Register *);TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,TR::Register *);TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,TR::Register *);TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,TR::Register *);TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::RegisterDependencyConditions *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,TR::Register *);TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(const class TR::X86MemInstruction &);TR;X86MemInstruction;1;0
X86MemInstruction;X86MemInstruction(class TR::X86MemInstruction &&);TR;X86MemInstruction;1;0
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);TR;X86CallMemInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86MemInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86CallMemInstruction;0;1
defsRegister;defsRegister(TR::Register *);TR;X86MemInstruction;0;1
description;description();TR;X86MemInstruction;0;1
description;description();TR;X86CallMemInstruction;0;1
enlarge;enlarge(int32_t,int32_t,_Bool);TR;X86MemInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86MemInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86MemInstruction;0;1
getAdjustsFramePointerBy;getAdjustsFramePointerBy();TR;X86CallMemInstruction;0;0
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86MemInstruction;0;1
getKind;getKind();TR;X86MemInstruction;0;1
getKind;getKind();TR;X86CallMemInstruction;0;1
getMemoryReference;getMemoryReference();TR;X86MemInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86MemInstruction;0;1
getSnippetForGC;getSnippetForGC();TR;X86MemInstruction;0;1
needsLockPrefix;needsLockPrefix();TR;X86MemInstruction;0;1
operator=;operator=(class TR::X86MemInstruction &&);TR;X86MemInstruction;1;0
operator=;operator=(const class TR::X86MemInstruction &);TR;X86MemInstruction;1;0
operator=;operator=(class TR::X86CallMemInstruction &&);TR;X86CallMemInstruction;1;0
operator=;operator=(const class TR::X86CallMemInstruction &);TR;X86CallMemInstruction;1;0
refsRegister;refsRegister(TR::Register *);TR;X86MemInstruction;0;1
rexBits;rexBits();TR;X86MemInstruction;0;1
setAdjustsFramePointerBy;setAdjustsFramePointerBy(int32_t);TR;X86CallMemInstruction;0;0
setMemoryReference;setMemoryReference(TR::MemoryReference *,TR::CodeGenerator *);TR;X86MemInstruction;0;0
usesRegister;usesRegister(TR::Register *);TR;X86MemInstruction;0;1
~X86CallMemInstruction;~X86CallMemInstruction();TR;X86CallMemInstruction;1;0
~X86MemInstruction;~X86MemInstruction();TR;X86MemInstruction;1;0
X86FPArithmeticRegRegInstruction;X86FPArithmeticRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPArithmeticRegRegInstruction;0;0
X86FPArithmeticRegRegInstruction;X86FPArithmeticRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPArithmeticRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86FPRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86FPRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86FPRegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(class TR::X86RegRegInstruction &&);TR;X86RegRegInstruction;1;0
X86RegRegInstruction;X86RegRegInstruction(const class TR::X86RegRegInstruction &);TR;X86RegRegInstruction;1;0
X86RegRegInstruction;X86RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86RegRegInstruction;0;0
aboutToAssignSourceRegister;aboutToAssignSourceRegister();TR;X86RegRegInstruction;0;0
applyDestinationBitToOpCode;applyDestinationBitToOpCode(uint8_t *,TR::Machine *);TR;X86FPArithmeticRegRegInstruction;0;0
applyDirectionBitToOpCode;applyDirectionBitToOpCode(uint8_t *,TR::Machine *);TR;X86FPArithmeticRegRegInstruction;0;0
applyRegistersToOpCode;applyRegistersToOpCode(uint8_t *,TR::Machine *);TR;X86FPRegRegInstruction;0;0
applySourceRegisterToModRMByte;applySourceRegisterToModRMByte(uint8_t *);TR;X86RegRegInstruction;0;0
applySourceRegisterToOpCode;applySourceRegisterToOpCode(uint8_t *,TR::Machine *);TR;X86FPRegRegInstruction;0;0
applyTargetRegisterToOpCode;applyTargetRegisterToOpCode(uint8_t *,TR::Machine *);TR;X86FPRegRegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86RegRegInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPRegRegInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPArithmeticRegRegInstruction;0;1
assignTargetSourceRegisters;assignTargetSourceRegisters();TR;X86FPRegRegInstruction;0;0
defsRegister;defsRegister(TR::Register *);TR;X86RegRegInstruction;0;1
description;description();TR;X86RegRegInstruction;0;1
description;description();TR;X86FPRegRegInstruction;0;1
description;description();TR;X86FPArithmeticRegRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86RegRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86FPRegRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86FPArithmeticRegRegInstruction;0;1
getIA32RegRegInstruction;getIA32RegRegInstruction();TR;X86RegRegInstruction;0;1
getKind;getKind();TR;X86RegRegInstruction;0;1
getKind;getKind();TR;X86FPRegRegInstruction;0;1
getKind;getKind();TR;X86FPArithmeticRegRegInstruction;0;1
getNumOperandReferencedFPRegisters;getNumOperandReferencedFPRegisters();TR;X86FPRegRegInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86RegRegInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86FPRegRegInstruction;0;1
getSourceRegister;getSourceRegister();TR;X86RegRegInstruction;0;1
operator=;operator=(class TR::X86RegRegInstruction &&);TR;X86RegRegInstruction;1;0
operator=;operator=(const class TR::X86RegRegInstruction &);TR;X86RegRegInstruction;1;0
operator=;operator=(class TR::X86FPRegRegInstruction &&);TR;X86FPRegRegInstruction;1;0
operator=;operator=(const class TR::X86FPRegRegInstruction &);TR;X86FPRegRegInstruction;1;0
operator=;operator=(const class TR::X86FPArithmeticRegRegInstruction &);TR;X86FPArithmeticRegRegInstruction;1;0
operator=;operator=(class TR::X86FPArithmeticRegRegInstruction &&);TR;X86FPArithmeticRegRegInstruction;1;0
refsRegister;refsRegister(TR::Register *);TR;X86RegRegInstruction;0;1
rexBits;rexBits();TR;X86RegRegInstruction;0;1
setSourceRegister;setSourceRegister(TR::Register *);TR;X86RegRegInstruction;0;0
sourceRegisterRexBits;sourceRegisterRexBits();TR;X86RegRegInstruction;0;0
usesRegister;usesRegister(TR::Register *);TR;X86RegRegInstruction;0;1
~X86FPArithmeticRegRegInstruction;~X86FPArithmeticRegRegInstruction();TR;X86FPArithmeticRegRegInstruction;1;0
~X86FPRegRegInstruction;~X86FPRegRegInstruction();TR;X86FPRegRegInstruction;1;0
~X86RegRegInstruction;~X86RegRegInstruction();TR;X86RegRegInstruction;1;0
X86FPCompareEvalInstruction;X86FPCompareEvalInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86FPCompareEvalInstruction;0;0
X86FPCompareEvalInstruction;X86FPCompareEvalInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *);TR;X86FPCompareEvalInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPCompareEvalInstruction;0;1
description;description();TR;X86FPCompareEvalInstruction;0;1
getKind;getKind();TR;X86FPCompareEvalInstruction;0;1
operator=;operator=(class TR::X86FPCompareEvalInstruction &&);TR;X86FPCompareEvalInstruction;1;0
operator=;operator=(const class TR::X86FPCompareEvalInstruction &);TR;X86FPCompareEvalInstruction;1;0
~X86FPCompareEvalInstruction;~X86FPCompareEvalInstruction();TR;X86FPCompareEvalInstruction;1;0
X86FPCompareRegRegInstruction;X86FPCompareRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPCompareRegRegInstruction;0;0
X86FPCompareRegRegInstruction;X86FPCompareRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPCompareRegRegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPCompareRegRegInstruction;0;1
description;description();TR;X86FPCompareRegRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86FPCompareRegRegInstruction;0;1
getKind;getKind();TR;X86FPCompareRegRegInstruction;0;1
operator=;operator=(const class TR::X86FPCompareRegRegInstruction &);TR;X86FPCompareRegRegInstruction;1;0
operator=;operator=(class TR::X86FPCompareRegRegInstruction &&);TR;X86FPCompareRegRegInstruction;1;0
swapOperands;swapOperands();TR;X86FPCompareRegRegInstruction;0;0
~X86FPCompareRegRegInstruction;~X86FPCompareRegRegInstruction();TR;X86FPCompareRegRegInstruction;1;0
X86FPMemRegInstruction;X86FPMemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *);TR;X86FPMemRegInstruction;0;0
X86FPMemRegInstruction;X86FPMemRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *);TR;X86FPMemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(class TR::X86MemRegInstruction &&);TR;X86MemRegInstruction;1;0
X86MemRegInstruction;X86MemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *);TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(const class TR::X86MemRegInstruction &);TR;X86MemRegInstruction;1;0
X86MemRegInstruction;X86MemRegInstruction(TR::Register *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *);TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::Register *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86MemRegInstruction;0;0
aboutToAssignSourceRegister;aboutToAssignSourceRegister();TR;X86MemRegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86MemRegInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPMemRegInstruction;0;1
defsRegister;defsRegister(TR::Register *);TR;X86MemRegInstruction;0;1
description;description();TR;X86MemRegInstruction;0;1
description;description();TR;X86FPMemRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86MemRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86FPMemRegInstruction;0;1
getKind;getKind();TR;X86MemRegInstruction;0;1
getKind;getKind();TR;X86FPMemRegInstruction;0;1
getNumOperandReferencedFPRegisters;getNumOperandReferencedFPRegisters();TR;X86FPMemRegInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86MemRegInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86FPMemRegInstruction;0;1
getSourceRegister;getSourceRegister();TR;X86MemRegInstruction;0;1
operator=;operator=(const class TR::X86MemRegInstruction &);TR;X86MemRegInstruction;1;0
operator=;operator=(class TR::X86MemRegInstruction &&);TR;X86MemRegInstruction;1;0
operator=;operator=(const class TR::X86FPMemRegInstruction &);TR;X86FPMemRegInstruction;1;0
operator=;operator=(class TR::X86FPMemRegInstruction &&);TR;X86FPMemRegInstruction;1;0
refsRegister;refsRegister(TR::Register *);TR;X86MemRegInstruction;0;1
rexBits;rexBits();TR;X86MemRegInstruction;0;1
setSourceRegister;setSourceRegister(TR::Register *);TR;X86MemRegInstruction;0;0
usesRegister;usesRegister(TR::Register *);TR;X86MemRegInstruction;0;1
~X86FPMemRegInstruction;~X86FPMemRegInstruction();TR;X86FPMemRegInstruction;1;0
~X86MemRegInstruction;~X86MemRegInstruction();TR;X86MemRegInstruction;1;0
X86FPRegInstruction;X86FPRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::CodeGenerator *);TR;X86FPRegInstruction;0;0
X86FPRegInstruction;X86FPRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *);TR;X86FPRegInstruction;0;0
applyTargetRegisterToOpCode;applyTargetRegisterToOpCode(uint8_t *);TR;X86FPRegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86FPRegInstruction;0;1
getKind;getKind();TR;X86FPRegInstruction;0;1
getNumOperandReferencedFPRegisters;getNumOperandReferencedFPRegisters();TR;X86FPRegInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86FPRegInstruction;0;1
operator=;operator=(class TR::X86FPRegInstruction &&);TR;X86FPRegInstruction;1;0
operator=;operator=(const class TR::X86FPRegInstruction &);TR;X86FPRegInstruction;1;0
~X86FPRegInstruction;~X86FPRegInstruction();TR;X86FPRegInstruction;1;0
X86FPRegMemInstruction;X86FPRegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *);TR;X86FPRegMemInstruction;0;0
X86FPRegMemInstruction;X86FPRegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *);TR;X86FPRegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(class TR::X86RegMemInstruction &&);TR;X86RegMemInstruction;1;0
X86RegMemInstruction;X86RegMemInstruction(const class TR::X86RegMemInstruction &);TR;X86RegMemInstruction;1;0
X86RegMemInstruction;X86RegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(TR::MemoryReference *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(TR::MemoryReference *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *);TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *);TR;X86RegMemInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86RegMemInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPRegMemInstruction;0;1
description;description();TR;X86RegMemInstruction;0;1
description;description();TR;X86FPRegMemInstruction;0;1
enlarge;enlarge(int32_t,int32_t,_Bool);TR;X86RegMemInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86RegMemInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86RegMemInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86FPRegMemInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86RegMemInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86FPRegMemInstruction;0;1
getIA32RegMemInstruction;getIA32RegMemInstruction();TR;X86RegMemInstruction;0;1
getKind;getKind();TR;X86RegMemInstruction;0;1
getKind;getKind();TR;X86FPRegMemInstruction;0;1
getMemoryReference;getMemoryReference();TR;X86RegMemInstruction;0;1
getNumOperandReferencedFPRegisters;getNumOperandReferencedFPRegisters();TR;X86FPRegMemInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86RegMemInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86FPRegMemInstruction;0;1
getSnippetForGC;getSnippetForGC();TR;X86RegMemInstruction;0;1
needsLockPrefix;needsLockPrefix();TR;X86RegMemInstruction;0;1
operator=;operator=(const class TR::X86RegMemInstruction &);TR;X86RegMemInstruction;1;0
operator=;operator=(class TR::X86RegMemInstruction &&);TR;X86RegMemInstruction;1;0
operator=;operator=(class TR::X86FPRegMemInstruction &&);TR;X86FPRegMemInstruction;1;0
operator=;operator=(const class TR::X86FPRegMemInstruction &);TR;X86FPRegMemInstruction;1;0
refsRegister;refsRegister(TR::Register *);TR;X86RegMemInstruction;0;1
rexBits;rexBits();TR;X86RegMemInstruction;0;1
setMemoryReference;setMemoryReference(TR::MemoryReference *,TR::CodeGenerator *);TR;X86RegMemInstruction;0;0
usesRegister;usesRegister(TR::Register *);TR;X86RegMemInstruction;0;1
~X86FPRegMemInstruction;~X86FPRegMemInstruction();TR;X86FPRegMemInstruction;1;0
~X86RegMemInstruction;~X86RegMemInstruction();TR;X86RegMemInstruction;1;0
X86FPRemainderRegRegInstruction;X86FPRemainderRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86FPRemainderRegRegInstruction;0;0
X86FPRemainderRegRegInstruction;X86FPRemainderRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPRemainderRegRegInstruction;0;0
X86FPRemainderRegRegInstruction;X86FPRemainderRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPRemainderRegRegInstruction;0;0
X86FPST0ST1RegRegInstruction;X86FPST0ST1RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86FPST0ST1RegRegInstruction;0;0
X86FPST0ST1RegRegInstruction;X86FPST0ST1RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPST0ST1RegRegInstruction;0;0
X86FPST0ST1RegRegInstruction;X86FPST0ST1RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPST0ST1RegRegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPST0ST1RegRegInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPRemainderRegRegInstruction;0;1
description;description();TR;X86FPST0ST1RegRegInstruction;0;1
description;description();TR;X86FPRemainderRegRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86FPST0ST1RegRegInstruction;0;1
getKind;getKind();TR;X86FPST0ST1RegRegInstruction;0;1
getKind;getKind();TR;X86FPRemainderRegRegInstruction;0;1
operator=;operator=(const class TR::X86FPST0ST1RegRegInstruction &);TR;X86FPST0ST1RegRegInstruction;1;0
operator=;operator=(class TR::X86FPST0ST1RegRegInstruction &&);TR;X86FPST0ST1RegRegInstruction;1;0
operator=;operator=(class TR::X86FPRemainderRegRegInstruction &&);TR;X86FPRemainderRegRegInstruction;1;0
operator=;operator=(const class TR::X86FPRemainderRegRegInstruction &);TR;X86FPRemainderRegRegInstruction;1;0
~X86FPRemainderRegRegInstruction;~X86FPRemainderRegRegInstruction();TR;X86FPRemainderRegRegInstruction;1;0
~X86FPST0ST1RegRegInstruction;~X86FPST0ST1RegRegInstruction();TR;X86FPST0ST1RegRegInstruction;1;0
X86FPST0STiRegRegInstruction;X86FPST0STiRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPST0STiRegRegInstruction;0;0
X86FPST0STiRegRegInstruction;X86FPST0STiRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86FPST0STiRegRegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPST0STiRegRegInstruction;0;1
description;description();TR;X86FPST0STiRegRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86FPST0STiRegRegInstruction;0;1
getKind;getKind();TR;X86FPST0STiRegRegInstruction;0;1
operator=;operator=(class TR::X86FPST0STiRegRegInstruction &&);TR;X86FPST0STiRegRegInstruction;1;0
operator=;operator=(const class TR::X86FPST0STiRegRegInstruction &);TR;X86FPST0STiRegRegInstruction;1;0
~X86FPST0STiRegRegInstruction;~X86FPST0STiRegRegInstruction();TR;X86FPST0STiRegRegInstruction;1;0
X86FPSTiST0RegRegInstruction;X86FPSTiST0RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *,_Bool);TR;X86FPSTiST0RegRegInstruction;0;0
X86FPSTiST0RegRegInstruction;X86FPSTiST0RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *,_Bool);TR;X86FPSTiST0RegRegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86FPSTiST0RegRegInstruction;0;1
description;description();TR;X86FPSTiST0RegRegInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86FPSTiST0RegRegInstruction;0;1
getKind;getKind();TR;X86FPSTiST0RegRegInstruction;0;1
operator=;operator=(class TR::X86FPSTiST0RegRegInstruction &&);TR;X86FPSTiST0RegRegInstruction;1;0
operator=;operator=(const class TR::X86FPSTiST0RegRegInstruction &);TR;X86FPSTiST0RegRegInstruction;1;0
~X86FPSTiST0RegRegInstruction;~X86FPSTiST0RegRegInstruction();TR;X86FPSTiST0RegRegInstruction;1;0
X86FenceInstruction;X86FenceInstruction(enum TR_X86OpCodes,TR::Node *,TR::Node *,TR::CodeGenerator *);TR;X86FenceInstruction;0;0
X86FenceInstruction;X86FenceInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Node *,TR::CodeGenerator *);TR;X86FenceInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86FenceInstruction;0;1
description;description();TR;X86FenceInstruction;0;1
generateBinaryEncoding;generateBinaryEncoding();TR;X86FenceInstruction;0;1
getFenceNode;getFenceNode();TR;X86FenceInstruction;0;0
getKind;getKind();TR;X86FenceInstruction;0;1
operator=;operator=(class TR::X86FenceInstruction &&);TR;X86FenceInstruction;1;0
operator=;operator=(const class TR::X86FenceInstruction &);TR;X86FenceInstruction;1;0
~X86FenceInstruction;~X86FenceInstruction();TR;X86FenceInstruction;1;0
X86ImmInstruction;X86ImmInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(TR::RegisterDependencyConditions *,int32_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::CodeGenerator *,int32_t);TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::CodeGenerator *,int32_t);TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(int32_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(int32_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(TR::RegisterDependencyConditions *,int32_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);TR;X86ImmInstruction;0;0
X86ImmSnippetInstruction;X86ImmSnippetInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::UnresolvedDataSnippet *,TR::CodeGenerator *);TR;X86ImmSnippetInstruction;0;0
X86ImmSnippetInstruction;X86ImmSnippetInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::UnresolvedDataSnippet *,TR::CodeGenerator *);TR;X86ImmSnippetInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86ImmInstruction;0;1
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86ImmSnippetInstruction;0;1
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);TR;X86ImmInstruction;0;1
description;description();TR;X86ImmInstruction;0;1
description;description();TR;X86ImmSnippetInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86ImmInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86ImmInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86ImmSnippetInstruction;0;1
getAdjustsFramePointerBy;getAdjustsFramePointerBy();TR;X86ImmInstruction;0;0
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86ImmInstruction;0;1
getIA32ImmInstruction;getIA32ImmInstruction();TR;X86ImmInstruction;0;1
getKind;getKind();TR;X86ImmInstruction;0;1
getKind;getKind();TR;X86ImmSnippetInstruction;0;1
getReloKind;getReloKind();TR;X86ImmInstruction;0;0
getSnippetForGC;getSnippetForGC();TR;X86ImmSnippetInstruction;0;1
getSourceImmediate;getSourceImmediate();TR;X86ImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();TR;X86ImmInstruction;0;0
getUnresolvedSnippet;getUnresolvedSnippet();TR;X86ImmSnippetInstruction;0;0
operator=;operator=(class TR::X86ImmInstruction &&);TR;X86ImmInstruction;1;0
operator=;operator=(const class TR::X86ImmInstruction &);TR;X86ImmInstruction;1;0
operator=;operator=(class TR::X86ImmSnippetInstruction &&);TR;X86ImmSnippetInstruction;1;0
operator=;operator=(const class TR::X86ImmSnippetInstruction &);TR;X86ImmSnippetInstruction;1;0
setAdjustsFramePointerBy;setAdjustsFramePointerBy(int32_t);TR;X86ImmInstruction;0;0
setReloKind;setReloKind(int32_t);TR;X86ImmInstruction;0;0
setSourceImmediate;setSourceImmediate(int32_t);TR;X86ImmInstruction;0;0
setUnresolvedSnippet;setUnresolvedSnippet(TR::UnresolvedDataSnippet *);TR;X86ImmSnippetInstruction;0;0
~X86ImmInstruction;~X86ImmInstruction();TR;X86ImmInstruction;1;0
~X86ImmSnippetInstruction;~X86ImmSnippetInstruction();TR;X86ImmSnippetInstruction;1;0
X86ImmSymInstruction;X86ImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86ImmSymInstruction;0;0
X86ImmSymInstruction;X86ImmSymInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86ImmSymInstruction;0;0
X86ImmSymInstruction;X86ImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::SymbolReference *,TR::CodeGenerator *);TR;X86ImmSymInstruction;0;0
X86ImmSymInstruction;X86ImmSymInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);TR;X86ImmSymInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86ImmSymInstruction;0;1
description;description();TR;X86ImmSymInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86ImmSymInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86ImmSymInstruction;0;1
getKind;getKind();TR;X86ImmSymInstruction;0;1
getSymbolReference;getSymbolReference();TR;X86ImmSymInstruction;0;0
operator=;operator=(class TR::X86ImmSymInstruction &&);TR;X86ImmSymInstruction;1;0
operator=;operator=(const class TR::X86ImmSymInstruction &);TR;X86ImmSymInstruction;1;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);TR;X86ImmSymInstruction;0;0
~X86ImmSymInstruction;~X86ImmSymInstruction();TR;X86ImmSymInstruction;1;0
X86LabelInstruction;X86LabelInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::LabelSymbol *,TR::CodeGenerator *,_Bool);TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(TR::LabelSymbol *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,_Bool);TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(TR::LabelSymbol *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,_Bool);TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(enum TR_X86OpCodes,TR::Node *,TR::LabelSymbol *,TR::CodeGenerator *,_Bool);TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(enum TR_X86OpCodes,TR::Node *,TR::LabelSymbol *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,_Bool);TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::LabelSymbol *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,_Bool);TR;X86LabelInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86LabelInstruction;0;1
addPostDepsToOutlinedInstructionsBranch;addPostDepsToOutlinedInstructionsBranch();TR;X86LabelInstruction;0;0
assignOutlinedInstructions;assignOutlinedInstructions(enum TR_RegisterKinds,TR::X86LabelInstruction *);TR;X86LabelInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86LabelInstruction;0;1
description;description();TR;X86LabelInstruction;0;1
enlarge;enlarge(int32_t,int32_t,_Bool);TR;X86LabelInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86LabelInstruction;0;1
generateBinaryEncoding;generateBinaryEncoding();TR;X86LabelInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86LabelInstruction;0;1
getIA32LabelInstruction;getIA32LabelInstruction();TR;X86LabelInstruction;0;1
getKind;getKind();TR;X86LabelInstruction;0;1
getLabelSymbol;getLabelSymbol();TR;X86LabelInstruction;0;1
getNeedToClearFPStack;getNeedToClearFPStack();TR;X86LabelInstruction;0;0
getReloType;getReloType();TR;X86LabelInstruction;0;0
getSnippetForGC;getSnippetForGC();TR;X86LabelInstruction;0;1
isPatchBarrier;isPatchBarrier();TR;X86LabelInstruction;0;1
operator=;operator=(const class TR::X86LabelInstruction &);TR;X86LabelInstruction;1;0
operator=;operator=(class TR::X86LabelInstruction &&);TR;X86LabelInstruction;1;0
prohibitShortening;prohibitShortening();TR;X86LabelInstruction;0;0
setLabelSymbol;setLabelSymbol(TR::LabelSymbol *);TR;X86LabelInstruction;0;0
setNeedToClearFPStack;setNeedToClearFPStack(_Bool);TR;X86LabelInstruction;0;0
setOutlinedInstructionBranch;setOutlinedInstructionBranch(TR::X86LabelInstruction *);TR;X86LabelInstruction;0;0
setReloType;setReloType(uint8_t);TR;X86LabelInstruction;0;0
~X86LabelInstruction;~X86LabelInstruction();TR;X86LabelInstruction;1;0
X86MemImmInstruction;X86MemImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,int32_t,TR::CodeGenerator *,int32_t);TR;X86MemImmInstruction;0;0
X86MemImmInstruction;X86MemImmInstruction(int32_t,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);TR;X86MemImmInstruction;0;0
X86MemImmInstruction;X86MemImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,int32_t,TR::CodeGenerator *,int32_t);TR;X86MemImmInstruction;0;0
X86MemImmInstruction;X86MemImmInstruction(int32_t,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);TR;X86MemImmInstruction;0;0
X86MemImmSymInstruction;X86MemImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);TR;X86MemImmSymInstruction;0;0
X86MemImmSymInstruction;X86MemImmSymInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);TR;X86MemImmSymInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86MemImmInstruction;0;1
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86MemImmSymInstruction;0;1
description;description();TR;X86MemImmInstruction;0;1
description;description();TR;X86MemImmSymInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86MemImmInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86MemImmInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86MemImmSymInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86MemImmInstruction;0;1
getKind;getKind();TR;X86MemImmInstruction;0;1
getKind;getKind();TR;X86MemImmSymInstruction;0;1
getSourceImmediate;getSourceImmediate();TR;X86MemImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();TR;X86MemImmInstruction;0;0
getSymbolReference;getSymbolReference();TR;X86MemImmSymInstruction;0;0
operator=;operator=(class TR::X86MemImmInstruction &&);TR;X86MemImmInstruction;1;0
operator=;operator=(const class TR::X86MemImmInstruction &);TR;X86MemImmInstruction;1;0
operator=;operator=(const class TR::X86MemImmSymInstruction &);TR;X86MemImmSymInstruction;1;0
operator=;operator=(class TR::X86MemImmSymInstruction &&);TR;X86MemImmSymInstruction;1;0
setSourceImmediate;setSourceImmediate(int32_t);TR;X86MemImmInstruction;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);TR;X86MemImmSymInstruction;0;0
~X86MemImmInstruction;~X86MemImmInstruction();TR;X86MemImmInstruction;1;0
~X86MemImmSymInstruction;~X86MemImmSymInstruction();TR;X86MemImmSymInstruction;1;0
X86MemRegImmInstruction;X86MemRegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,int32_t,TR::CodeGenerator *);TR;X86MemRegImmInstruction;0;0
X86MemRegImmInstruction;X86MemRegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,int32_t,TR::CodeGenerator *);TR;X86MemRegImmInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86MemRegImmInstruction;0;1
description;description();TR;X86MemRegImmInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86MemRegImmInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86MemRegImmInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86MemRegImmInstruction;0;1
getKind;getKind();TR;X86MemRegImmInstruction;0;1
getSourceImmediate;getSourceImmediate();TR;X86MemRegImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();TR;X86MemRegImmInstruction;0;0
operator=;operator=(class TR::X86MemRegImmInstruction &&);TR;X86MemRegImmInstruction;1;0
operator=;operator=(const class TR::X86MemRegImmInstruction &);TR;X86MemRegImmInstruction;1;0
setSourceImmediate;setSourceImmediate(int32_t);TR;X86MemRegImmInstruction;0;0
~X86MemRegImmInstruction;~X86MemRegImmInstruction();TR;X86MemRegImmInstruction;1;0
X86MemRegRegInstruction;X86MemRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(TR::Register *,TR::Register *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(TR::Register *,TR::Register *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86MemRegRegInstruction;0;0
aboutToAssignSourceRightRegister;aboutToAssignSourceRightRegister();TR;X86MemRegRegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86MemRegRegInstruction;0;1
description;description();TR;X86MemRegRegInstruction;0;1
getKind;getKind();TR;X86MemRegRegInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86MemRegRegInstruction;0;1
getSourceRightRegister;getSourceRightRegister();TR;X86MemRegRegInstruction;0;1
operator=;operator=(class TR::X86MemRegRegInstruction &&);TR;X86MemRegRegInstruction;1;0
operator=;operator=(const class TR::X86MemRegRegInstruction &);TR;X86MemRegRegInstruction;1;0
refsRegister;refsRegister(TR::Register *);TR;X86MemRegRegInstruction;0;1
setSourceRightRegister;setSourceRightRegister(TR::Register *);TR;X86MemRegRegInstruction;0;0
usesRegister;usesRegister(TR::Register *);TR;X86MemRegRegInstruction;0;1
~X86MemRegRegInstruction;~X86MemRegRegInstruction();TR;X86MemRegRegInstruction;1;0
X86MemTableInstruction;X86MemTableInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,ncount_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86MemTableInstruction;0;0
X86MemTableInstruction;X86MemTableInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,ncount_t,TR::CodeGenerator *);TR;X86MemTableInstruction;0;0
addRelocation;addRelocation(TR::LabelRelocation *);TR;X86MemTableInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86MemTableInstruction;0;1
description;description();TR;X86MemTableInstruction;0;1
getKind;getKind();TR;X86MemTableInstruction;0;1
getNumRelocations;getNumRelocations();TR;X86MemTableInstruction;0;0
getRelocation;getRelocation(ncount_t);TR;X86MemTableInstruction;0;0
getRelocationCapacity;getRelocationCapacity();TR;X86MemTableInstruction;0;0
operator=;operator=(class TR::X86MemTableInstruction &&);TR;X86MemTableInstruction;1;0
operator=;operator=(const class TR::X86MemTableInstruction &);TR;X86MemTableInstruction;1;0
~X86MemTableInstruction;~X86MemTableInstruction();TR;X86MemTableInstruction;1;0
X86PaddingInstruction;X86PaddingInstruction(TR::Instruction *,uint8_t,enum TR_PaddingProperties,TR::CodeGenerator *);TR;X86PaddingInstruction;0;0
X86PaddingInstruction;X86PaddingInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *);TR;X86PaddingInstruction;0;0
X86PaddingInstruction;X86PaddingInstruction(class TR::X86PaddingInstruction &&);TR;X86PaddingInstruction;1;0
X86PaddingInstruction;X86PaddingInstruction(uint8_t,enum TR_PaddingProperties,TR::Node *,TR::CodeGenerator *);TR;X86PaddingInstruction;0;0
X86PaddingInstruction;X86PaddingInstruction(const class TR::X86PaddingInstruction &);TR;X86PaddingInstruction;1;0
X86PaddingInstruction;X86PaddingInstruction(uint8_t,TR::Node *,TR::CodeGenerator *);TR;X86PaddingInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(uint8_t,TR::Node *,TR::CodeGenerator *);TR;X86PaddingSnippetInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(TR::Instruction *,uint8_t,enum TR_PaddingProperties,TR::CodeGenerator *);TR;X86PaddingSnippetInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *);TR;X86PaddingSnippetInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(uint8_t,enum TR_PaddingProperties,TR::Node *,TR::CodeGenerator *);TR;X86PaddingSnippetInstruction;0;0
description;description();TR;X86PaddingInstruction;0;1
description;description();TR;X86PaddingSnippetInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86PaddingInstruction;0;1
generateBinaryEncoding;generateBinaryEncoding();TR;X86PaddingInstruction;0;1
getKind;getKind();TR;X86PaddingInstruction;0;1
getLength;getLength();TR;X86PaddingInstruction;0;0
getProperties;getProperties();TR;X86PaddingInstruction;0;0
getSnippetForGC;getSnippetForGC();TR;X86PaddingSnippetInstruction;0;1
getUnresolvedSnippet;getUnresolvedSnippet();TR;X86PaddingSnippetInstruction;0;0
operator=;operator=(class TR::X86PaddingInstruction &&);TR;X86PaddingInstruction;1;0
operator=;operator=(const class TR::X86PaddingInstruction &);TR;X86PaddingInstruction;1;0
operator=;operator=(const class TR::X86PaddingSnippetInstruction &);TR;X86PaddingSnippetInstruction;1;0
operator=;operator=(class TR::X86PaddingSnippetInstruction &&);TR;X86PaddingSnippetInstruction;1;0
setUnresolvedSnippet;setUnresolvedSnippet(TR::UnresolvedDataSnippet *);TR;X86PaddingSnippetInstruction;0;0
~X86PaddingInstruction;~X86PaddingInstruction();TR;X86PaddingInstruction;1;0
~X86PaddingSnippetInstruction;~X86PaddingSnippetInstruction();TR;X86PaddingSnippetInstruction;1;0
X86RegImmInstruction;X86RegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::CodeGenerator *,int32_t);TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::CodeGenerator *,int32_t);TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(int32_t,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(int32_t,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);TR;X86RegImmInstruction;0;0
X86RegImmSymInstruction;X86RegImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);TR;X86RegImmSymInstruction;0;0
X86RegImmSymInstruction;X86RegImmSymInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);TR;X86RegImmSymInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86RegImmInstruction;0;1
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86RegImmSymInstruction;0;1
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);TR;X86RegImmInstruction;0;1
autoSetReloKind;autoSetReloKind();TR;X86RegImmSymInstruction;0;0
description;description();TR;X86RegImmInstruction;0;1
description;description();TR;X86RegImmSymInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86RegImmInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86RegImmInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86RegImmSymInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86RegImmInstruction;0;1
getKind;getKind();TR;X86RegImmInstruction;0;1
getKind;getKind();TR;X86RegImmSymInstruction;0;1
getReloKind;getReloKind();TR;X86RegImmInstruction;0;0
getSourceImmediate;getSourceImmediate();TR;X86RegImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();TR;X86RegImmInstruction;0;0
getSymbolReference;getSymbolReference();TR;X86RegImmSymInstruction;0;0
operator=;operator=(class TR::X86RegImmInstruction &&);TR;X86RegImmInstruction;1;0
operator=;operator=(const class TR::X86RegImmInstruction &);TR;X86RegImmInstruction;1;0
operator=;operator=(class TR::X86RegImmSymInstruction &&);TR;X86RegImmSymInstruction;1;0
operator=;operator=(const class TR::X86RegImmSymInstruction &);TR;X86RegImmSymInstruction;1;0
setReloKind;setReloKind(int32_t);TR;X86RegImmInstruction;0;0
setSourceImmediate;setSourceImmediate(int32_t);TR;X86RegImmInstruction;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);TR;X86RegImmSymInstruction;0;0
~X86RegImmInstruction;~X86RegImmInstruction();TR;X86RegImmInstruction;1;0
~X86RegImmSymInstruction;~X86RegImmSymInstruction();TR;X86RegImmSymInstruction;1;0
X86RegMemImmInstruction;X86RegMemImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,int32_t,TR::CodeGenerator *);TR;X86RegMemImmInstruction;0;0
X86RegMemImmInstruction;X86RegMemImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,int32_t,TR::CodeGenerator *);TR;X86RegMemImmInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86RegMemImmInstruction;0;1
description;description();TR;X86RegMemImmInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86RegMemImmInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86RegMemImmInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86RegMemImmInstruction;0;1
getKind;getKind();TR;X86RegMemImmInstruction;0;1
getSourceImmediate;getSourceImmediate();TR;X86RegMemImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();TR;X86RegMemImmInstruction;0;0
operator=;operator=(class TR::X86RegMemImmInstruction &&);TR;X86RegMemImmInstruction;1;0
operator=;operator=(const class TR::X86RegMemImmInstruction &);TR;X86RegMemImmInstruction;1;0
setSourceImmediate;setSourceImmediate(int32_t);TR;X86RegMemImmInstruction;0;0
~X86RegMemImmInstruction;~X86RegMemImmInstruction();TR;X86RegMemImmInstruction;1;0
X86RegRegImmInstruction;X86RegRegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,int32_t,TR::CodeGenerator *);TR;X86RegRegImmInstruction;0;0
X86RegRegImmInstruction;X86RegRegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,int32_t,TR::CodeGenerator *);TR;X86RegRegImmInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);TR;X86RegRegImmInstruction;0;1
description;description();TR;X86RegRegImmInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86RegRegImmInstruction;0;1
generateOperand;generateOperand(uint8_t *);TR;X86RegRegImmInstruction;0;1
getBinaryLengthLowerBound;getBinaryLengthLowerBound();TR;X86RegRegImmInstruction;0;1
getKind;getKind();TR;X86RegRegImmInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86RegRegImmInstruction;0;1
getSourceImmediate;getSourceImmediate();TR;X86RegRegImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();TR;X86RegRegImmInstruction;0;0
operator=;operator=(class TR::X86RegRegImmInstruction &&);TR;X86RegRegImmInstruction;1;0
operator=;operator=(const class TR::X86RegRegImmInstruction &);TR;X86RegRegImmInstruction;1;0
setSourceImmediate;setSourceImmediate(int32_t);TR;X86RegRegImmInstruction;0;0
~X86RegRegImmInstruction;~X86RegRegImmInstruction();TR;X86RegRegImmInstruction;1;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::Register *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::Register *,TR::CodeGenerator *);TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::Register *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);TR;X86RegRegRegInstruction;0;0
aboutToAssignSourceRightRegister;aboutToAssignSourceRightRegister();TR;X86RegRegRegInstruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86RegRegRegInstruction;0;1
defsRegister;defsRegister(TR::Register *);TR;X86RegRegRegInstruction;0;1
description;description();TR;X86RegRegRegInstruction;0;1
getKind;getKind();TR;X86RegRegRegInstruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();TR;X86RegRegRegInstruction;0;1
getSourceRightRegister;getSourceRightRegister();TR;X86RegRegRegInstruction;0;1
operator=;operator=(class TR::X86RegRegRegInstruction &&);TR;X86RegRegRegInstruction;1;0
operator=;operator=(const class TR::X86RegRegRegInstruction &);TR;X86RegRegRegInstruction;1;0
refsRegister;refsRegister(TR::Register *);TR;X86RegRegRegInstruction;0;1
setSourceRightRegister;setSourceRightRegister(TR::Register *);TR;X86RegRegRegInstruction;0;0
usesRegister;usesRegister(TR::Register *);TR;X86RegRegRegInstruction;0;1
~X86RegRegRegInstruction;~X86RegRegRegInstruction();TR;X86RegRegRegInstruction;1;0
X86VFPCallCleanupInstruction;X86VFPCallCleanupInstruction(int32_t,TR::Node *,TR::CodeGenerator *);TR;X86VFPCallCleanupInstruction;0;0
X86VFPCallCleanupInstruction;X86VFPCallCleanupInstruction(TR::Instruction *,int32_t,TR::CodeGenerator *);TR;X86VFPCallCleanupInstruction;0;0
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);TR;X86VFPCallCleanupInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86VFPCallCleanupInstruction;0;1
description;description();TR;X86VFPCallCleanupInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86VFPCallCleanupInstruction;0;1
getKind;getKind();TR;X86VFPCallCleanupInstruction;0;1
getStackPointerAdjustment;getStackPointerAdjustment();TR;X86VFPCallCleanupInstruction;0;0
operator=;operator=(const class TR::X86VFPCallCleanupInstruction &);TR;X86VFPCallCleanupInstruction;1;0
operator=;operator=(class TR::X86VFPCallCleanupInstruction &&);TR;X86VFPCallCleanupInstruction;1;0
~X86VFPCallCleanupInstruction;~X86VFPCallCleanupInstruction();TR;X86VFPCallCleanupInstruction;1;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(class TR::X86VFPDedicateInstruction &&);TR;X86VFPDedicateInstruction;1;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(TR::Instruction *,TR::RealRegister *,TR::CodeGenerator *);TR;X86VFPDedicateInstruction;0;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(TR::RealRegister *,TR::Node *,TR::CodeGenerator *);TR;X86VFPDedicateInstruction;0;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(TR::Instruction *,TR::RealRegister *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86VFPDedicateInstruction;0;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(TR::RealRegister *,TR::Node *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);TR;X86VFPDedicateInstruction;0;0
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);TR;X86VFPDedicateInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86VFPDedicateInstruction;0;1
description;description();TR;X86VFPDedicateInstruction;0;1
getKind;getKind();TR;X86VFPDedicateInstruction;0;1
getSavedState;getSavedState();TR;X86VFPDedicateInstruction;0;0
memref;memref(TR::CodeGenerator *);TR;X86VFPDedicateInstruction;0;0
operator=;operator=(class TR::X86VFPDedicateInstruction &&);TR;X86VFPDedicateInstruction;1;0
operator=;operator=(const class TR::X86VFPDedicateInstruction &);TR;X86VFPDedicateInstruction;1;0
~X86VFPDedicateInstruction;~X86VFPDedicateInstruction();TR;X86VFPDedicateInstruction;1;0
X86VFPReleaseInstruction;X86VFPReleaseInstruction(TR::X86VFPDedicateInstruction *,TR::Node *,TR::CodeGenerator *);TR;X86VFPReleaseInstruction;0;0
X86VFPReleaseInstruction;X86VFPReleaseInstruction(TR::Instruction *,TR::X86VFPDedicateInstruction *,TR::CodeGenerator *);TR;X86VFPReleaseInstruction;0;0
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);TR;X86VFPReleaseInstruction;0;1
assignRegisters;assignRegisters(enum TR_RegisterKinds);TR;X86VFPReleaseInstruction;0;1
description;description();TR;X86VFPReleaseInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86VFPReleaseInstruction;0;1
getDedicateInstruction;getDedicateInstruction();TR;X86VFPReleaseInstruction;0;0
getKind;getKind();TR;X86VFPReleaseInstruction;0;1
operator=;operator=(const class TR::X86VFPReleaseInstruction &);TR;X86VFPReleaseInstruction;1;0
operator=;operator=(class TR::X86VFPReleaseInstruction &&);TR;X86VFPReleaseInstruction;1;0
~X86VFPReleaseInstruction;~X86VFPReleaseInstruction();TR;X86VFPReleaseInstruction;1;0
X86VFPRestoreInstruction;X86VFPRestoreInstruction(TR::Instruction *,TR::X86VFPSaveInstruction *,TR::CodeGenerator *);TR;X86VFPRestoreInstruction;0;0
X86VFPRestoreInstruction;X86VFPRestoreInstruction(TR::X86VFPSaveInstruction *,TR::Node *,TR::CodeGenerator *);TR;X86VFPRestoreInstruction;0;0
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);TR;X86VFPRestoreInstruction;0;1
description;description();TR;X86VFPRestoreInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86VFPRestoreInstruction;0;1
getKind;getKind();TR;X86VFPRestoreInstruction;0;1
getSaveInstruction;getSaveInstruction();TR;X86VFPRestoreInstruction;0;0
operator=;operator=(class TR::X86VFPRestoreInstruction &&);TR;X86VFPRestoreInstruction;1;0
operator=;operator=(const class TR::X86VFPRestoreInstruction &);TR;X86VFPRestoreInstruction;1;0
~X86VFPRestoreInstruction;~X86VFPRestoreInstruction();TR;X86VFPRestoreInstruction;1;0
X86VFPSaveInstruction;X86VFPSaveInstruction(TR::Node *,TR::CodeGenerator *);TR;X86VFPSaveInstruction;0;0
X86VFPSaveInstruction;X86VFPSaveInstruction(TR::Instruction *,TR::CodeGenerator *);TR;X86VFPSaveInstruction;0;0
X86VFPSaveInstruction;X86VFPSaveInstruction(class TR::X86VFPSaveInstruction &&);TR;X86VFPSaveInstruction;1;0
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);TR;X86VFPSaveInstruction;0;1
description;description();TR;X86VFPSaveInstruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);TR;X86VFPSaveInstruction;0;1
getKind;getKind();TR;X86VFPSaveInstruction;0;1
getSavedState;getSavedState();TR;X86VFPSaveInstruction;0;0
operator=;operator=(const class TR::X86VFPSaveInstruction &);TR;X86VFPSaveInstruction;1;0
operator=;operator=(class TR::X86VFPSaveInstruction &&);TR;X86VFPSaveInstruction;1;0
~X86VFPSaveInstruction;~X86VFPSaveInstruction();TR;X86VFPSaveInstruction;1;0
(Arch: AMD64): Compiling ../../../../compiler/x/amd64/codegen/OMRRealRegister.cpp
(Arch: AMD64): Compiling ../../../../compiler/x/amd64/codegen/OMRTreeEvaluator.cpp
(Arch: AMD64): Compiling ../../../../compiler/x/amd64/codegen/AMD64SystemLinkage.cpp
AMD64ABILinkage;AMD64ABILinkage(const class TR::AMD64ABILinkage &);TR;AMD64ABILinkage;1;0
AMD64ABILinkage;AMD64ABILinkage(class TR::AMD64ABILinkage &&);TR;AMD64ABILinkage;1;0
AMD64ABILinkage;AMD64ABILinkage(TR::CodeGenerator *);TR;AMD64ABILinkage;0;0
AMD64SystemLinkage;AMD64SystemLinkage(class TR::AMD64SystemLinkage &&);TR;AMD64SystemLinkage;1;0
AMD64SystemLinkage;AMD64SystemLinkage(const class TR::AMD64SystemLinkage &);TR;AMD64SystemLinkage;1;0
AMD64SystemLinkage;AMD64SystemLinkage(TR::CodeGenerator *);TR;AMD64SystemLinkage;0;0
Linkage;Linkage(class TR::Linkage &&);TR;Linkage;1;0
Linkage;Linkage(const class TR::Linkage &);TR;Linkage;1;0
X86SystemLinkage;X86SystemLinkage(const class TR::X86SystemLinkage &);TR;X86SystemLinkage;1;0
X86SystemLinkage;X86SystemLinkage(TR::CodeGenerator *);TR;X86SystemLinkage;0;0
X86SystemLinkage;X86SystemLinkage(class TR::X86SystemLinkage &&);TR;X86SystemLinkage;1;0
buildArgs;buildArgs(TR::Node *,TR::RegisterDependencyConditions *);TR;X86SystemLinkage;0;1
buildArgs;buildArgs(TR::Node *,TR::RegisterDependencyConditions *);TR;AMD64SystemLinkage;0;1
buildDirectDispatch;buildDirectDispatch(TR::Node *,_Bool);TR;X86SystemLinkage;0;1
buildDirectDispatch;buildDirectDispatch(TR::Node *,_Bool);TR;AMD64SystemLinkage;0;1
buildIndirectDispatch;buildIndirectDispatch(TR::Node *);TR;X86SystemLinkage;0;1
buildIndirectDispatch;buildIndirectDispatch(TR::Node *);TR;AMD64SystemLinkage;0;1
buildVolatileAndReturnDependencies;buildVolatileAndReturnDependencies(TR::Node *,TR::RegisterDependencyConditions *);TR;X86SystemLinkage;0;1
buildVolatileAndReturnDependencies;buildVolatileAndReturnDependencies(TR::Node *,TR::RegisterDependencyConditions *);TR;AMD64SystemLinkage;0;1
computeMemoryArgSize;computeMemoryArgSize(TR::Node *,int32_t,int32_t,int8_t);TR;X86SystemLinkage;0;0
copyGlRegDepsToParameterSymbols;copyGlRegDepsToParameterSymbols(TR::Node *,TR::CodeGenerator *);TR;X86SystemLinkage;0;1
copyLinkageInfoToParameterSymbols;copyLinkageInfoToParameterSymbols();TR;X86SystemLinkage;0;1
copyParametersToHomeLocation;copyParametersToHomeLocation(TR::Instruction *);TR;X86SystemLinkage;0;0
createEpilogue;createEpilogue(TR::Instruction *);TR;X86SystemLinkage;0;1
createPrologue;createPrologue(TR::Instruction *);TR;X86SystemLinkage;0;1
getAlignment;getAlignment(TR::DataType);TR;X86SystemLinkage;0;1
getAlignment;getAlignment(TR::DataType);TR;AMD64SystemLinkage;0;1
getParameterStartingPos;getParameterStartingPos(int32_t &,uint32_t);TR;X86SystemLinkage;0;0
getProperties;getProperties();TR;X86SystemLinkage;0;1
getSingleWordFrameAllocationRegister;getSingleWordFrameAllocationRegister();TR;X86SystemLinkage;0;1
getSingleWordFrameAllocationRegister;getSingleWordFrameAllocationRegister();TR;AMD64SystemLinkage;0;1
layoutParm;layoutParm(TR::Node *,int32_t &,uint16_t &,uint16_t &,TR::parmLayoutResult &);TR;X86SystemLinkage;0;1
layoutParm;layoutParm(TR::Node *,int32_t &,uint16_t &,uint16_t &,TR::parmLayoutResult &);TR;AMD64SystemLinkage;0;1
layoutParm;layoutParm(TR::ParameterSymbol *,int32_t &,uint16_t &,uint16_t &,TR::parmLayoutResult &);TR;X86SystemLinkage;0;1
layoutParm;layoutParm(TR::ParameterSymbol *,int32_t &,uint16_t &,uint16_t &,TR::parmLayoutResult &);TR;AMD64SystemLinkage;0;1
layoutTypeInRegs;layoutTypeInRegs(TR::DataType,uint16_t &,uint16_t &,TR::parmLayoutResult &);TR;AMD64SystemLinkage;0;0
layoutTypeOnStack;layoutTypeOnStack(TR::DataType,int32_t &,TR::parmLayoutResult &);TR;X86SystemLinkage;0;0
mapIncomingParms;mapIncomingParms(TR::ResolvedMethodSymbol *);TR;X86SystemLinkage;0;1
mapIncomingParms;mapIncomingParms(TR::ResolvedMethodSymbol *,uint32_t &);TR;X86SystemLinkage;0;1
mapIncomingParms;mapIncomingParms(TR::ResolvedMethodSymbol *,uint32_t &);TR;AMD64ABILinkage;0;1
operator=;operator=(class TR::X86SystemLinkage &&);TR;X86SystemLinkage;1;0
operator=;operator=(const class TR::X86SystemLinkage &);TR;X86SystemLinkage;1;0
operator=;operator=(class TR::AMD64SystemLinkage &&);TR;AMD64SystemLinkage;1;0
operator=;operator=(const class TR::AMD64SystemLinkage &);TR;AMD64SystemLinkage;1;0
operator=;operator=(const class TR::AMD64ABILinkage &);TR;AMD64ABILinkage;1;0
operator=;operator=(class TR::AMD64ABILinkage &&);TR;AMD64ABILinkage;1;0
restorePreservedRegisters;restorePreservedRegisters(TR::Instruction *);TR;X86SystemLinkage;0;0
savePreservedRegisters;savePreservedRegisters(TR::Instruction *);TR;X86SystemLinkage;0;0
setUpStackSizeForCallNode;setUpStackSizeForCallNode(TR::Node *);TR;X86SystemLinkage;0;1
setUpStackSizeForCallNode;setUpStackSizeForCallNode(TR::Node *);TR;AMD64SystemLinkage;0;1
~AMD64ABILinkage;~AMD64ABILinkage();TR;AMD64ABILinkage;1;0
~AMD64SystemLinkage;~AMD64SystemLinkage();TR;AMD64SystemLinkage;1;0
~X86SystemLinkage;~X86SystemLinkage();TR;X86SystemLinkage;1;0
AMD64Win64FastCallLinkage;AMD64Win64FastCallLinkage(class TR::AMD64Win64FastCallLinkage &&);TR;AMD64Win64FastCallLinkage;1;0
AMD64Win64FastCallLinkage;AMD64Win64FastCallLinkage(const class TR::AMD64Win64FastCallLinkage &);TR;AMD64Win64FastCallLinkage;1;0
AMD64Win64FastCallLinkage;AMD64Win64FastCallLinkage(TR::CodeGenerator *);TR;AMD64Win64FastCallLinkage;0;0
operator=;operator=(const class TR::AMD64Win64FastCallLinkage &);TR;AMD64Win64FastCallLinkage;1;0
operator=;operator=(class TR::AMD64Win64FastCallLinkage &&);TR;AMD64Win64FastCallLinkage;1;0
~AMD64Win64FastCallLinkage;~AMD64Win64FastCallLinkage();TR;AMD64Win64FastCallLinkage;1;0
(Arch: AMD64): Compiling ../../../../compiler/x/amd64/codegen/OMRELFRelocationResolver.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/BinaryOpIlInjector.cpp
CodeCache;CodeCache(class OMR::CodeCache &&);OMR;CodeCache;1;0
CodeCache;CodeCache(const class OMR::CodeCache &);OMR;CodeCache;1;0
CodeCache;CodeCache();OMR;CodeCache;0;0
CodeCache;CodeCache();TR;CodeCache;0;0
CodeCacheBase;CodeCacheBase(const class OMR::CodeCacheBase &);OMR;CodeCacheBase;1;0
CodeCacheBase;CodeCacheBase();OMR;CodeCacheBase;1;0
CodeCacheBase;CodeCacheBase(class OMR::CodeCacheBase &&);OMR;CodeCacheBase;1;0
addFlags;addFlags(uint32_t);OMR;CodeCache;0;0
addFreeBlock;addFreeBlock(void *);OMR;CodeCache;0;0
addFreeBlock2WithCallSite;addFreeBlock2WithCallSite(uint8_t *,uint8_t *,char *,uint32_t);OMR;CodeCache;0;0
addResolvedMethod;addResolvedMethod(class TR_OpaqueMethodBlock *);OMR;CodeCache;0;0
alignColdCodeAlloc;alignColdCodeAlloc(uint32_t);OMR;CodeCacheBase;0;0
alignWarmCodeAlloc;alignWarmCodeAlloc(uint32_t);OMR;CodeCacheBase;0;0
allocate;allocate(TR::CodeCacheManager *,size_t,int32_t);OMR;CodeCache;0;0
allocateCodeMemory;allocateCodeMemory(size_t,size_t,uint8_t **,_Bool,_Bool);OMR;CodeCache;0;0
allocateHashEntry;allocateHashEntry();OMR;CodeCache;0;0
allocateTempTrampoline;allocateTempTrampoline();OMR;CodeCache;0;0
allocateTempTrampolineSyncBlock;allocateTempTrampolineSyncBlock();OMR;CodeCache;0;0
allocateTrampoline;allocateTrampoline();OMR;CodeCache;0;0
almostFull;almostFull();OMR;CodeCache;0;0
checkForErrors;checkForErrors();OMR;CodeCache;0;0
createTrampoline;createTrampoline(CodeCacheTrampolineCode *,void *,class TR_OpaqueMethodBlock *);OMR;CodeCache;0;0
destroy;destroy(TR::CodeCacheManager *);OMR;CodeCache;0;0
dumpCodeCache;dumpCodeCache();OMR;CodeCache;0;0
findFreeBlock;findFreeBlock(size_t,_Bool,_Bool);OMR;CodeCache;0;0
findOrAddResolvedMethod;findOrAddResolvedMethod(class TR_OpaqueMethodBlock *);OMR;CodeCache;0;0
findResolvedMethod;findResolvedMethod(class TR_OpaqueMethodBlock *);OMR;CodeCache;0;0
findTrampoline;findTrampoline(class TR_OpaqueMethodBlock *);OMR;CodeCache;0;0
findTrampoline;findTrampoline(int32_t);OMR;CodeCache;0;0
flags;flags();OMR;CodeCache;0;0
freeHashEntry;freeHashEntry(struct OMR::CodeCacheHashEntry *);OMR;CodeCache;0;0
getCCPreLoadedCodeAddress;getCCPreLoadedCodeAddress(enum TR_CCPreLoadedCode,TR::CodeGenerator *);OMR;CodeCache;0;0
getCodeAlloc;getCodeAlloc();OMR;CodeCache;0;0
getCodeBase;getCodeBase();OMR;CodeCache;0;0
getCodeTop;getCodeTop();OMR;CodeCache;0;0
getColdCodeAlloc;getColdCodeAlloc();OMR;CodeCacheBase;0;0
getFreeContiguousSpace;getFreeContiguousSpace();OMR;CodeCache;0;0
getHelperBase;getHelperBase();OMR;CodeCache;0;0
getHelperTop;getHelperTop();OMR;CodeCache;0;0
getNextCodeCache;getNextCodeCache();OMR;CodeCache;0;0
getReservingCompThreadID;getReservingCompThreadID();OMR;CodeCache;0;0
getSizeOfLargestFreeColdBlock;getSizeOfLargestFreeColdBlock();OMR;CodeCache;0;0
getSizeOfLargestFreeWarmBlock;getSizeOfLargestFreeWarmBlock();OMR;CodeCache;0;0
getWarmCodeAlloc;getWarmCodeAlloc();OMR;CodeCacheBase;0;0
initialize;initialize(TR::CodeCacheManager *,TR::CodeCacheMemorySegment *,size_t,class OMR::CodeCacheHashEntrySlab *);OMR;CodeCache;0;0
isCCPreLoadedCodeInitialized;isCCPreLoadedCodeInitialized();OMR;CodeCache;0;0
isReserved;isReserved();OMR;CodeCache;0;0
linkTo;linkTo(TR::CodeCache *);OMR;CodeCache;0;0
next;next();OMR;CodeCache;0;0
operator new;operator new(size_t,TR::CodeCache *);OMR;CodeCache;0;0
patchCallPoint;patchCallPoint(class TR_OpaqueMethodBlock *,void *,void *,void *);OMR;CodeCache;0;0
printFreeBlocks;printFreeBlocks();OMR;CodeCache;0;0
printOccupancyStats;printOccupancyStats();OMR;CodeCache;0;0
removeFreeBlock;removeFreeBlock(size_t,struct OMR::CodeCacheFreeCacheBlock *,struct OMR::CodeCacheFreeCacheBlock *);OMR;CodeCache;0;0
replaceTrampoline;replaceTrampoline(class TR_OpaqueMethodBlock *,void *,void *,void *,_Bool);OMR;CodeCache;0;0
reserve;reserve(int32_t);OMR;CodeCache;0;0
reserveNTrampolines;reserveNTrampolines(int64_t);OMR;CodeCache;0;0
reserveResolvedTrampoline;reserveResolvedTrampoline(class TR_OpaqueMethodBlock *,_Bool);OMR;CodeCache;0;0
reserveTrampoline;reserveTrampoline();OMR;CodeCache;0;0
resizeCodeMemory;resizeCodeMemory(void *,size_t);OMR;CodeCache;0;0
saveTempTrampoline;saveTempTrampoline(struct OMR::CodeCacheHashEntry *);OMR;CodeCache;0;0
segment;segment();OMR;CodeCache;0;0
self;self();OMR;CodeCache;0;0
setAlmostFull;setAlmostFull(enum TR_YesNoMaybe);OMR;CodeCache;0;0
setCCPreLoadedCodeAddress;setCCPreLoadedCodeAddress(enum TR_CCPreLoadedCode,void *);OMR;CodeCache;0;0
setColdCodeAlloc;setColdCodeAlloc(uint8_t *);OMR;CodeCacheBase;0;0
setReservingCompThreadID;setReservingCompThreadID(int32_t);OMR;CodeCache;0;0
setWarmCodeAlloc;setWarmCodeAlloc(uint8_t *);OMR;CodeCacheBase;0;0
syncTempTrampolines;syncTempTrampolines();OMR;CodeCache;0;0
tempTrampolinesMax;tempTrampolinesMax();OMR;CodeCache;0;0
unreserve;unreserve();OMR;CodeCache;0;0
unreserveTrampoline;unreserveTrampoline();OMR;CodeCache;0;0
updateMaxSizeOfFreeBlocks;updateMaxSizeOfFreeBlocks(struct OMR::CodeCacheFreeCacheBlock *,size_t);OMR;CodeCache;0;0
writeMethodHeader;writeMethodHeader(void *,size_t,_Bool);OMR;CodeCache;0;0
~CodeCacheBase;~CodeCacheBase();OMR;CodeCacheBase;1;0
CacheCriticalSection;CacheCriticalSection(class OMR::CodeCache::CacheCriticalSection &&);OMR::CodeCache;CacheCriticalSection;1;0
CacheCriticalSection;CacheCriticalSection(TR::CodeCache *);OMR::CodeCache;CacheCriticalSection;0;0
operator=;operator=(class OMR::CodeCache::CacheCriticalSection &&);OMR::CodeCache;CacheCriticalSection;1;0
~CacheCriticalSection;~CacheCriticalSection();OMR::CodeCache;CacheCriticalSection;1;0
CodeCacheManager;CodeCacheManager(class TR::CodeCacheManager &&);TR;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(const class TR::CodeCacheManager &);TR;CodeCacheManager;1;0
~CodeCacheManager;~CodeCacheManager();TestCompiler;CodeCacheManager;1;0
~CodeCacheManager;~CodeCacheManager();TR;CodeCacheManager;1;0
FEBase<Derived>;FEBase<Derived>();TR;FEBase;0;0
FECommon;FECommon(const class TR::FECommon &);TR;FECommon;1;0
FECommon;FECommon();TR;FECommon;0;0
FECommon;FECommon(class TR::FECommon &&);TR;FECommon;1;0
FrontEnd;FrontEnd(const class TestCompiler::FrontEnd &);TestCompiler;FrontEnd;1;0
FrontEnd;FrontEnd();TestCompiler;FrontEnd;0;0
FrontEnd;FrontEnd();TR;FrontEnd;0;0
FrontEnd;FrontEnd(class TestCompiler::FrontEnd &&);TestCompiler;FrontEnd;1;0
FrontEnd;FrontEnd(class TR::FrontEnd &&);TR;FrontEnd;1;0
TR_FrontEnd;TR_FrontEnd(const class TR_FrontEnd &);;TR_FrontEnd;1;0
allocateCodeMemory;allocateCodeMemory(TR::Compilation *,uint32_t,uint32_t,uint8_t **,_Bool);TR;FEBase;0;1
allocateRelocationData;allocateRelocationData(TR::Compilation *,uint32_t);TR;FEBase;0;1
calculateSizeOfStackAtlas;calculateSizeOfStackAtlas(_Bool,uint32_t,uint32_t,TR::Compilation *);TestCompiler;FrontEnd;0;0
codeCacheManager;codeCacheManager();TR;FEBase;0;0
createDebug;createDebug(TR::Compilation *);TR;FECommon;0;1
createResolvedMethod;createResolvedMethod(class TR_Memory *,class TR_OpaqueMethodBlock *,class TR_ResolvedMethod *,class TR_OpaqueClassBlock *);TestCompiler;FrontEnd;0;1
createStackAtlas;createStackAtlas(_Bool,uint32_t,uint32_t,uint8_t *,uint32_t,TR::Compilation *);TestCompiler;FrontEnd;0;0
encodeStackMap;encodeStackMap(class TR_GCStackMap *,uint8_t *,_Bool,uint32_t,TR::Compilation *);TestCompiler;FrontEnd;0;0
getClassFromSignature;getClassFromSignature(const char *,int32_t,class TR_ResolvedMethod *,_Bool);TR;FECommon;0;1
getClassFromSignature;getClassFromSignature(const char *,int32_t,class TR_OpaqueMethodBlock *,_Bool);TR;FECommon;0;1
getDesignatedCodeCache;getDesignatedCodeCache(TR::Compilation *);TR;FEBase;0;1
getOffsetOfIndexableSizeField;getOffsetOfIndexableSizeField();TR;FECommon;0;1
getPersistentInfo;getPersistentInfo();TR;FEBase;0;1
getStartTime;getStartTime();TR;FEBase;0;0
indexedTrampolineLookup;indexedTrampolineLookup(int32_t,void *);TR;FEBase;0;1
instance;instance();TestCompiler;FrontEnd;0;0
jitConfig;jitConfig();TR;FEBase;0;0
mapsAreIdentical;mapsAreIdentical(class TR_GCStackMap *,class TR_GCStackMap *,TR::GCStackAtlas *,TR::Compilation *);TestCompiler;FrontEnd;0;0
methodTrampolineLookup;methodTrampolineLookup(TR::Compilation *,TR::SymbolReference *,void *);TestCompiler;FrontEnd;0;1
operator=;operator=(const class TR::FECommon &);TR;FECommon;1;0
operator=;operator=(class TR::FECommon &&);TR;FECommon;1;0
operator=;operator=(class TestCompiler::FrontEnd &&);TestCompiler;FrontEnd;1;0
operator=;operator=(const class TestCompiler::FrontEnd &);TestCompiler;FrontEnd;1;0
operator=;operator=(const class TR::FrontEnd &);TR;FrontEnd;1;0
operator=;operator=(class TR::FrontEnd &&);TR;FrontEnd;1;0
persistentMemory;persistentMemory();TR;FECommon;0;1
persistentMemory;persistentMemory();TR;FEBase;0;1
reserveTrampolineIfNecessary;reserveTrampolineIfNecessary(TR::Compilation *,TR::SymbolReference *,_Bool);TestCompiler;FrontEnd;0;1
resizeCodeMemory;resizeCodeMemory(TR::Compilation *,uint8_t *,uint32_t);TR;FEBase;0;1
sampleSignature;sampleSignature(class TR_OpaqueMethodBlock *,char *,int32_t,class TR_Memory *);TR;FECommon;0;1
singleton;singleton();TR;FEBase;0;0
switchCodeCache;switchCodeCache(TR::CodeCache *);TR;FEBase;0;1
~FECommon;~FECommon();TR;FECommon;1;0
~FrontEnd;~FrontEnd();TestCompiler;FrontEnd;1;0
~FrontEnd;~FrontEnd();TR;FrontEnd;1;0
~TR_PersistentMemory;~TR_PersistentMemory();;TR_PersistentMemory;1;0
BinaryOpIlInjector;BinaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;BinaryOpIlInjector;0;0
IlInjector;IlInjector(const class OMR::IlInjector &);OMR;IlInjector;1;0
IlInjector;IlInjector(TR::TypeDictionary *);OMR;IlInjector;0;0
IlInjector;IlInjector(TR::TypeDictionary *);TestCompiler;IlInjector;0;0
IlInjector;IlInjector(TR::TypeDictionary *);TR;IlInjector;0;0
IlInjector;IlInjector(TR::IlInjector *);OMR;IlInjector;0;0
IlInjector;IlInjector(TR::IlInjector *);TestCompiler;IlInjector;0;0
IlInjector;IlInjector(TR::IlInjector *);TR;IlInjector;0;0
IlInjector;IlInjector(const class TestCompiler::IlInjector &);TestCompiler;IlInjector;1;0
IlInjector;IlInjector(class TestCompiler::IlInjector &&);TestCompiler;IlInjector;1;0
IlInjector;IlInjector(TR::ResolvedMethod *,TR::TypeDictionary *,class TestCompiler::TestDriver *);TestCompiler;IlInjector;0;0
IlInjector;IlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);TestCompiler;IlInjector;0;0
IlInjector;IlInjector(const class TR::IlInjector &);TR;IlInjector;1;0
IlInjector;IlInjector(class TR::IlInjector &&);TR;IlInjector;1;0
IlInjector;IlInjector(TR::TypeDictionary *,TestCompiler::TestDriver *);TR;IlInjector;0;0
IlInjector;IlInjector(TR::ResolvedMethod *,TR::TypeDictionary *,TestCompiler::TestDriver *);TR;IlInjector;0;0
OpIlInjector;OpIlInjector(class TestCompiler::OpIlInjector &&);TestCompiler;OpIlInjector;1;0
OpIlInjector;OpIlInjector(const class TestCompiler::OpIlInjector &);TestCompiler;OpIlInjector;1;0
OpIlInjector;OpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;OpIlInjector;0;0
TR_IlGenerator;TR_IlGenerator(const class TR_IlGenerator &);;TR_IlGenerator;1;0
aconst;aconst(uintptrj_t);OMR;IlInjector;0;0
aconstParm;aconstParm(uint32_t,uintptrj_t);TestCompiler;OpIlInjector;0;1
allocateBlocks;allocateBlocks(int32_t);OMR;IlInjector;0;0
arrayLoad;arrayLoad(TR::Node *,TR::Node *,TR::IlType *);OMR;IlInjector;0;0
asMethodBuilder;asMethodBuilder();OMR;IlInjector;0;1
bconst;bconst(int8_t);OMR;IlInjector;0;0
bconstParm;bconstParm(uint32_t,int8_t);TestCompiler;OpIlInjector;0;1
block;block(int32_t);OMR;IlInjector;0;0
blocks;blocks();OMR;IlInjector;0;0
branchToBlock;branchToBlock(int32_t);OMR;IlInjector;0;0
callFunction;callFunction(TR::ResolvedMethod *,TR::IlType *,int32_t,TR::Node *);TestCompiler;IlInjector;0;0
cfg;cfg();OMR;IlInjector;0;0
comp;comp();OMR;IlInjector;0;0
createBlocks;createBlocks(int32_t);OMR;IlInjector;0;0
createWithoutSymRef;createWithoutSymRef(TR::ILOpCodes,uint16_t);OMR;IlInjector;0;0
currentByteCodeIndex;currentByteCodeIndex();;TR_IlGenerator;0;1
currentByteCodeIndex;currentByteCodeIndex();OMR;IlInjector;0;1
currentCallSiteIndex;currentCallSiteIndex();;TR_IlGenerator;0;1
dconst;dconst(double);OMR;IlInjector;0;0
dconstParm;dconstParm(uint32_t,double);TestCompiler;OpIlInjector;0;1
details;details();OMR;IlInjector;0;0
fconst;fconst(float);OMR;IlInjector;0;0
fconstParm;fconstParm(uint32_t,float);TestCompiler;OpIlInjector;0;1
fe;fe();OMR;IlInjector;0;0
genIL;genIL();;TR_IlGenerator;0;1
genIL;genIL();OMR;IlInjector;0;1
genTreeTop;genTreeTop(TR::Node *);OMR;IlInjector;0;0
generateFallThrough;generateFallThrough();OMR;IlInjector;0;0
generateToBlock;generateToBlock(int32_t);OMR;IlInjector;0;0
getCurrentBlock;getCurrentBlock();;TR_IlGenerator;0;1
getCurrentBlock;getCurrentBlock();OMR;IlInjector;0;1
gotoBlock;gotoBlock(TR::Block *);OMR;IlInjector;0;0
i2l;i2l(TR::Node *);OMR;IlInjector;0;0
iconst;iconst(int32_t);OMR;IlInjector;0;0
iconstParm;iconstParm(uint32_t,int32_t);TestCompiler;OpIlInjector;0;1
ifjump;ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,int32_t);OMR;IlInjector;0;0
ifjump;ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Block *);OMR;IlInjector;0;0
initOptArgs;initOptArgs(uint32_t);TestCompiler;OpIlInjector;0;0
initPrimitiveTypes;initPrimitiveTypes();OMR;IlInjector;0;1
initialize;initialize(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *);OMR;IlInjector;0;1
initialize;initialize(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *);TestCompiler;IlInjector;0;1
injectIL;injectIL();OMR;IlInjector;0;1
injectIL;injectIL();TestCompiler;OpIlInjector;0;1
injectIL;injectIL();TestCompiler;BinaryOpIlInjector;0;1
isMethodBuilder;isMethodBuilder();OMR;IlInjector;0;1
isOpCodeSupported;isOpCodeSupported();TestCompiler;OpIlInjector;0;0
iu2l;iu2l(TR::Node *);OMR;IlInjector;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;IlInjector;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;IlInjector;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;OpIlInjector;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;BinaryOpIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;IlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;IlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;OpIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;BinaryOpIlInjector;0;0
lconst;lconst(int64_t);OMR;IlInjector;0;0
lconstParm;lconstParm(uint32_t,int64_t);TestCompiler;OpIlInjector;0;1
loadTemp;loadTemp(TR::SymbolReference *);OMR;IlInjector;0;0
methodSymbol;methodSymbol();;TR_IlGenerator;0;1
methodSymbol;methodSymbol();OMR;IlInjector;0;1
multiplyBy;multiplyBy(TR::Node *,int64_t);OMR;IlInjector;0;0
newBlock;newBlock();OMR;IlInjector;0;0
newTemp;newTemp(TR::IlType *);OMR;IlInjector;0;0
numBlocks;numBlocks();OMR;IlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);OMR;IlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;IlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;OpIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;BinaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;OpIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BinaryOpIlInjector;0;0
operator delete;operator delete(void *,size_t);OMR;IlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;IlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;OpIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;BinaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;OpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BinaryOpIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;IlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;IlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;OpIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;BinaryOpIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;IlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;IlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;OpIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;BinaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;OpIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BinaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;IlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;IlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;OpIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;BinaryOpIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;IlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;IlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;OpIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;BinaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
operator new;operator new(size_t,TR::Region &);OMR;IlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;IlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;OpIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;BinaryOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;IlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;IlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;OpIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;BinaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;OpIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BinaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;IlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;IlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;OpIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;BinaryOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;IlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;IlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;OpIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;BinaryOpIlInjector;0;0
operator=;operator=(const class TR_IlGenerator &);;TR_IlGenerator;1;0
operator=;operator=(const class OMR::IlInjector &);OMR;IlInjector;1;0
operator=;operator=(class TestCompiler::IlInjector &&);TestCompiler;IlInjector;1;0
operator=;operator=(const class TestCompiler::IlInjector &);TestCompiler;IlInjector;1;0
operator=;operator=(const class TR::IlInjector &);TR;IlInjector;1;0
operator=;operator=(class TR::IlInjector &&);TR;IlInjector;1;0
operator=;operator=(class TestCompiler::OpIlInjector &&);TestCompiler;OpIlInjector;1;0
operator=;operator=(const class TestCompiler::OpIlInjector &);TestCompiler;OpIlInjector;1;0
operator=;operator=(const class TestCompiler::BinaryOpIlInjector &);TestCompiler;BinaryOpIlInjector;1;0
operator=;operator=(class TestCompiler::BinaryOpIlInjector &&);TestCompiler;BinaryOpIlInjector;1;0
parameter;parameter(int32_t,TR::IlType *);OMR;IlInjector;0;0
parm;parm(uint32_t);TestCompiler;OpIlInjector;0;0
resolvedMethod;resolvedMethod();TestCompiler;IlInjector;0;0
returnNoValue;returnNoValue();OMR;IlInjector;0;0
returnValue;returnValue(TR::Node *);OMR;IlInjector;0;0
sconst;sconst(int16_t);OMR;IlInjector;0;0
sconstParm;sconstParm(uint32_t,int16_t);TestCompiler;OpIlInjector;0;1
setCallerMethod;setCallerMethod(TR::ResolvedMethodSymbol *);;TR_IlGenerator;0;1
setDataType;setDataType();TestCompiler;OpIlInjector;0;0
setMethodAndTest;setMethodAndTest(TR::ResolvedMethod *,class TestCompiler::TestDriver *);TestCompiler;IlInjector;0;0
setMethodAndTest;setMethodAndTest(TR::IlInjector *);TestCompiler;IlInjector;0;0
shiftLeftBy;shiftLeftBy(TR::Node *,int32_t);OMR;IlInjector;0;0
staticAddress;staticAddress(void *);OMR;IlInjector;0;0
storeToTemp;storeToTemp(TR::SymbolReference *,TR::Node *);OMR;IlInjector;0;0
symRefTab;symRefTab();OMR;IlInjector;0;0
test;test();TestCompiler;IlInjector;0;0
typeDictionary;typeDictionary();OMR;IlInjector;0;0
validateTargetBlock;validateTargetBlock();OMR;IlInjector;0;0
~BinaryOpIlInjector;~BinaryOpIlInjector();TestCompiler;BinaryOpIlInjector;1;1
~IlInjector;~IlInjector();OMR;IlInjector;0;1
~IlInjector;~IlInjector();TestCompiler;IlInjector;0;1
~IlInjector;~IlInjector();TR;IlInjector;0;1
~OpIlInjector;~OpIlInjector();TestCompiler;OpIlInjector;1;1
~TR_IlGenerator;~TR_IlGenerator();;TR_IlGenerator;0;1
JitConfig;JitConfig();TR;JitConfig;0;0
JitConfig;JitConfig(class TR::JitConfig &&);TR;JitConfig;1;0
JitConfig;JitConfig(const class TR::JitConfig &);TR;JitConfig;1;0
getInterpreterTOC;getInterpreterTOC();TR;JitConfig;0;0
getProcessorInfo;getProcessorInfo();TR;JitConfig;0;0
getPseudoTOC;getPseudoTOC();TR;JitConfig;0;0
instance;instance();TR;JitConfig;0;0
setInterpreterTOC;setInterpreterTOC(size_t);TR;JitConfig;0;0
setProcessorInfo;setProcessorInfo(void *);TR;JitConfig;0;0
setPseudoTOC;setPseudoTOC(void *);TR;JitConfig;0;0
~JitConfig;~JitConfig();TR;JitConfig;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/ChildlessUnaryOpIlInjector.cpp
ChildlessUnaryOpIlInjector;ChildlessUnaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;ChildlessUnaryOpIlInjector;0;0
UnaryOpIlInjector;UnaryOpIlInjector(const class TestCompiler::UnaryOpIlInjector &);TestCompiler;UnaryOpIlInjector;1;0
UnaryOpIlInjector;UnaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;UnaryOpIlInjector;0;0
UnaryOpIlInjector;UnaryOpIlInjector(class TestCompiler::UnaryOpIlInjector &&);TestCompiler;UnaryOpIlInjector;1;0
injectIL;injectIL();TestCompiler;UnaryOpIlInjector;0;1
injectIL;injectIL();TestCompiler;ChildlessUnaryOpIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;UnaryOpIlInjector;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;ChildlessUnaryOpIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;UnaryOpIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;UnaryOpIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;UnaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;UnaryOpIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;UnaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;UnaryOpIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;UnaryOpIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;UnaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;UnaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;UnaryOpIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;UnaryOpIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;UnaryOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;UnaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;UnaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;UnaryOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;ChildlessUnaryOpIlInjector;0;0
operator=;operator=(const class TestCompiler::UnaryOpIlInjector &);TestCompiler;UnaryOpIlInjector;1;0
operator=;operator=(class TestCompiler::UnaryOpIlInjector &&);TestCompiler;UnaryOpIlInjector;1;0
operator=;operator=(const class TestCompiler::ChildlessUnaryOpIlInjector &);TestCompiler;ChildlessUnaryOpIlInjector;1;0
operator=;operator=(class TestCompiler::ChildlessUnaryOpIlInjector &&);TestCompiler;ChildlessUnaryOpIlInjector;1;0
~ChildlessUnaryOpIlInjector;~ChildlessUnaryOpIlInjector();TestCompiler;ChildlessUnaryOpIlInjector;1;1
~UnaryOpIlInjector;~UnaryOpIlInjector();TestCompiler;UnaryOpIlInjector;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/CmpBranchOpIlInjector.cpp
CmpBranchOpIlInjector;CmpBranchOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;CmpBranchOpIlInjector;0;0
injectIL;injectIL();TestCompiler;CmpBranchOpIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;CmpBranchOpIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;CmpBranchOpIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;CmpBranchOpIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CmpBranchOpIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;CmpBranchOpIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CmpBranchOpIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;CmpBranchOpIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;CmpBranchOpIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CmpBranchOpIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;CmpBranchOpIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;CmpBranchOpIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;CmpBranchOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;CmpBranchOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CmpBranchOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;CmpBranchOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;CmpBranchOpIlInjector;0;0
operator=;operator=(const class TestCompiler::CmpBranchOpIlInjector &);TestCompiler;CmpBranchOpIlInjector;1;0
operator=;operator=(class TestCompiler::CmpBranchOpIlInjector &&);TestCompiler;CmpBranchOpIlInjector;1;0
~CmpBranchOpIlInjector;~CmpBranchOpIlInjector();TestCompiler;CmpBranchOpIlInjector;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/OpIlInjector.cpp
Add;Add(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
AddWithOverflow;AddWithOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
AddWithUnsignedOverflow;AddWithUnsignedOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
And;And(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
AppendBuilder;AppendBuilder(TR::IlBuilder *);OMR;IlBuilder;0;0
AtomicAdd;AtomicAdd(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
Call;Call(const char *,int32_t);OMR;IlBuilder;0;0
Call;Call(const char *,int32_t,TR::IlValue **);OMR;IlBuilder;0;0
ComputedCall;ComputedCall(const char *,int32_t);OMR;IlBuilder;0;0
ComputedCall;ComputedCall(const char *,int32_t,TR::IlValue **);OMR;IlBuilder;0;0
Const;Const(double);OMR;IlBuilder;0;0
Const;Const(int16_t);OMR;IlBuilder;0;0
Const;Const(int64_t);OMR;IlBuilder;0;0
Const;Const(int32_t);OMR;IlBuilder;0;0
Const;Const(float);OMR;IlBuilder;0;0
Const;Const(int8_t);OMR;IlBuilder;0;0
Const;Const(const void *const);OMR;IlBuilder;0;0
ConstAddress;ConstAddress(const void *const);OMR;IlBuilder;0;0
ConstDouble;ConstDouble(double);OMR;IlBuilder;0;0
ConstFloat;ConstFloat(float);OMR;IlBuilder;0;0
ConstInt16;ConstInt16(int16_t);OMR;IlBuilder;0;0
ConstInt32;ConstInt32(int32_t);OMR;IlBuilder;0;0
ConstInt64;ConstInt64(int64_t);OMR;IlBuilder;0;0
ConstInt8;ConstInt8(int8_t);OMR;IlBuilder;0;0
ConstInteger;ConstInteger(TR::IlType *,int64_t);OMR;IlBuilder;0;0
ConstString;ConstString(const char *const);OMR;IlBuilder;0;0
ConvertTo;ConvertTo(TR::IlType *,TR::IlValue *);OMR;IlBuilder;0;0
Copy;Copy(TR::IlValue *);OMR;IlBuilder;0;0
CreateLocalArray;CreateLocalArray(int32_t,TR::IlType *);OMR;IlBuilder;0;0
CreateLocalStruct;CreateLocalStruct(TR::IlType *);OMR;IlBuilder;0;0
Div;Div(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
DoWhileLoop;DoWhileLoop(const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **);OMR;IlBuilder;0;1
DoWhileLoopWithBreak;DoWhileLoopWithBreak(const char *,TR::IlBuilder **,TR::IlBuilder **);OMR;IlBuilder;0;0
DoWhileLoopWithContinue;DoWhileLoopWithContinue(const char *,TR::IlBuilder **,TR::IlBuilder **);OMR;IlBuilder;0;0
EqualTo;EqualTo(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
ForLoop;ForLoop(_Bool,const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;1
ForLoopDown;ForLoopDown(const char *,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
ForLoopUp;ForLoopUp(const char *,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
ForLoopWithBreak;ForLoopWithBreak(_Bool,const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
ForLoopWithContinue;ForLoopWithContinue(_Bool,const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
Goto;Goto(TR::IlBuilder **);OMR;IlBuilder;0;0
Goto;Goto(TR::IlBuilder *);OMR;IlBuilder;0;0
GreaterOrEqualTo;GreaterOrEqualTo(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
GreaterThan;GreaterThan(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfAnd;IfAnd(TR::IlBuilder **,TR::IlBuilder **,int32_t);OMR;IlBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpEqualZero;IfCmpEqualZero(TR::IlBuilder **,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpEqualZero;IfCmpEqualZero(TR::IlBuilder *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::IlBuilder **,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::IlBuilder *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
IfOr;IfOr(TR::IlBuilder **,TR::IlBuilder **,int32_t);OMR;IlBuilder;0;0
IfThen;IfThen(TR::IlBuilder **,TR::IlValue *);OMR;IlBuilder;0;1
IfThenElse;IfThenElse(TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *);OMR;IlBuilder;0;0
IlBuilder;IlBuilder(const class OMR::IlBuilder &);OMR;IlBuilder;1;0
IlBuilder;IlBuilder(TR::MethodBuilder *,TR::TypeDictionary *);OMR;IlBuilder;0;0
IlBuilder;IlBuilder(TR::MethodBuilder *,TR::TypeDictionary *);TestCompiler;IlBuilder;0;0
IlBuilder;IlBuilder(TR::IlBuilder *);OMR;IlBuilder;0;0
IlBuilder;IlBuilder(TR::IlBuilder *);TestCompiler;IlBuilder;0;0
IlBuilder;IlBuilder(TR::IlBuilder *);TR;IlBuilder;0;0
IlBuilder;IlBuilder(const class TestCompiler::IlBuilder &);TestCompiler;IlBuilder;1;0
IlBuilder;IlBuilder(class TestCompiler::IlBuilder &&);TestCompiler;IlBuilder;1;0
IlBuilder;IlBuilder(class TestCompiler::TestDriver *,TR::MethodBuilder *,TR::TypeDictionary *);TestCompiler;IlBuilder;0;0
IlBuilder;IlBuilder(TR::MethodBuilder *,class TR::TypeDictionary *);TR;IlBuilder;0;0
IlBuilder;IlBuilder(TestCompiler::TestDriver *,TR::MethodBuilder *,TR::TypeDictionary *);TR;IlBuilder;0;0
IndexAt;IndexAt(TR::IlType *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
LessOrEqualTo;LessOrEqualTo(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
LessThan;LessThan(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
Load;Load(const char *);OMR;IlBuilder;0;0
LoadAt;LoadAt(TR::IlType *,TR::IlValue *);OMR;IlBuilder;0;0
LoadIndirect;LoadIndirect(const char *,const char *,TR::IlValue *);OMR;IlBuilder;0;0
Mul;Mul(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
MulWithOverflow;MulWithOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
NewValue;NewValue(TR::IlType *);OMR;IlBuilder;0;0
NotEqualTo;NotEqualTo(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
NullAddress;NullAddress();OMR;IlBuilder;0;0
Or;Or(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
OrphanBuilder;OrphanBuilder();OMR;IlBuilder;0;0
Rem;Rem(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
Return;Return();OMR;IlBuilder;0;0
Return;Return(TR::IlValue *);OMR;IlBuilder;0;0
ShiftL;ShiftL(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
ShiftL;ShiftL(TR::IlValue *,int8_t);OMR;IlBuilder;0;0
ShiftR;ShiftR(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
ShiftR;ShiftR(TR::IlValue *,int8_t);OMR;IlBuilder;0;0
Store;Store(const char *,TR::IlValue *);OMR;IlBuilder;0;0
StoreAt;StoreAt(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
StoreIndirect;StoreIndirect(const char *,const char *,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
StoreOver;StoreOver(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
StructFieldInstanceAddress;StructFieldInstanceAddress(const char *,const char *,TR::IlValue *);OMR;IlBuilder;0;0
Sub;Sub(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
SubWithOverflow;SubWithOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
SubWithUnsignedOverflow;SubWithUnsignedOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
Switch;Switch(const char *,TR::IlBuilder **,uint32_t,int32_t *,TR::IlBuilder **,_Bool *);OMR;IlBuilder;0;0
Switch;Switch(const char *,TR::IlBuilder **,uint32_t);OMR;IlBuilder;0;0
TraceEnabled_log;TraceEnabled_log();OMR;IlBuilder;0;0
TraceIL_log;TraceIL_log(const char *);OMR;IlBuilder;0;0
Transaction;Transaction(TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **);OMR;IlBuilder;0;0
TransactionAbort;TransactionAbort();OMR;IlBuilder;0;0
UnionFieldInstanceAddress;UnionFieldInstanceAddress(const char *,const char *,TR::IlValue *);OMR;IlBuilder;0;0
UnsignedConvertTo;UnsignedConvertTo(TR::IlType *,TR::IlValue *);OMR;IlBuilder;0;0
UnsignedGreaterOrEqualTo;UnsignedGreaterOrEqualTo(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
UnsignedGreaterThan;UnsignedGreaterThan(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
UnsignedLessOrEqualTo;UnsignedLessOrEqualTo(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
UnsignedLessThan;UnsignedLessThan(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
UnsignedShiftR;UnsignedShiftR(TR::IlValue *,int8_t);OMR;IlBuilder;0;0
UnsignedShiftR;UnsignedShiftR(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
VectorLoad;VectorLoad(const char *);OMR;IlBuilder;0;0
VectorLoadAt;VectorLoadAt(TR::IlType *,TR::IlValue *);OMR;IlBuilder;0;0
VectorStore;VectorStore(const char *,TR::IlValue *);OMR;IlBuilder;0;0
VectorStoreAt;VectorStoreAt(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
WhileDoLoop;WhileDoLoop(const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **);OMR;IlBuilder;0;1
WhileDoLoopWithBreak;WhileDoLoopWithBreak(const char *,TR::IlBuilder **,TR::IlBuilder **);OMR;IlBuilder;0;0
WhileDoLoopWithContinue;WhileDoLoopWithContinue(const char *,TR::IlBuilder **,TR::IlBuilder **);OMR;IlBuilder;0;0
Xor;Xor(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
appendBlock;appendBlock(TR::Block *,_Bool);OMR;IlBuilder;0;1
appendExceptionHandler;appendExceptionHandler(TR::Block *,TR::IlBuilder **,uint32_t);OMR;IlBuilder;0;0
appendGoto;appendGoto(TR::Block *);OMR;IlBuilder;0;0
appendNoFallThroughBlock;appendNoFallThroughBlock(TR::Block *);OMR;IlBuilder;0;0
asMethodBuilder;asMethodBuilder();OMR;IlBuilder;0;1
binaryOpFromNodes;binaryOpFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *);OMR;IlBuilder;0;0
binaryOpFromOpCode;binaryOpFromOpCode(TR::ILOpCodes,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
binaryOpFromOpMap;binaryOpFromOpMap(OpCodeMapper,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
binaryOpNodeFromNodes;binaryOpNodeFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *);OMR;IlBuilder;0;0
blockEntry;blockEntry(TR::Block *);OMR;IlBuilder;0;0
blocksHaveBeenCounted;blocksHaveBeenCounted();OMR;IlBuilder;0;0
buildIL;buildIL();OMR;IlBuilder;0;1
builderEntry;builderEntry(TR::IlBuilder *);OMR;IlBuilder;0;0
comesBack;comesBack();OMR;IlBuilder;0;0
compareOp;compareOp(enum TR_ComparisonTypes,_Bool,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
connectTrees;connectTrees(uint32_t *);OMR;IlBuilder;0;1
connectTrees;connectTrees();OMR;IlBuilder;0;1
convertTo;convertTo(TR::IlType *,TR::IlValue *,_Bool);OMR;IlBuilder;0;0
countBlocks;countBlocks();OMR;IlBuilder;0;1
createBuilderIfNeeded;createBuilderIfNeeded(TR::IlBuilder *);OMR;IlBuilder;0;0
defineSymbol;defineSymbol(const char *,TR::SymbolReference *);OMR;IlBuilder;0;0
defineValue;defineValue(const char *,TR::IlType *);OMR;IlBuilder;0;0
doVectorConversions;doVectorConversions(TR::Node **,TR::Node **);OMR;IlBuilder;0;0
emptyBlock;emptyBlock();OMR;IlBuilder;0;0
genCall;genCall(TR::SymbolReference *,int32_t,TR::IlValue **,_Bool);OMR;IlBuilder;0;0
genOperationWithOverflowCHK;genOperationWithOverflowCHK(TR::ILOpCodes,TR::Node *,TR::Node *,TR::IlBuilder **,TR::ILOpCodes);OMR;IlBuilder;0;0
genOverflowCHKTreeTop;genOverflowCHKTreeTop(TR::Node *,TR::ILOpCodes);OMR;IlBuilder;0;0
getEntry;getEntry();OMR;IlBuilder;0;0
getExit;getExit();OMR;IlBuilder;0;0
getFirstTree;getFirstTree();OMR;IlBuilder;0;0
getLastTree;getLastTree();OMR;IlBuilder;0;0
getOpCode;getOpCode(TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
ifCmpCondition;ifCmpCondition(enum TR_ComparisonTypes,_Bool,TR::IlValue *,TR::IlValue *,TR::Block *);OMR;IlBuilder;0;0
ifCmpEqualZero;ifCmpEqualZero(TR::IlValue *,TR::Block *);OMR;IlBuilder;0;0
ifCmpNotEqualZero;ifCmpNotEqualZero(TR::IlValue *,TR::Block *);OMR;IlBuilder;0;0
indirectLoadNode;indirectLoadNode(TR::IlType *,TR::Node *,_Bool);OMR;IlBuilder;0;0
indirectStoreNode;indirectStoreNode(TR::Node *,TR::Node *);OMR;IlBuilder;0;0
initSequence;initSequence();OMR;IlBuilder;0;0
injectIL;injectIL();OMR;IlBuilder;0;1
integerizeAddresses;integerizeAddresses(TR::IlValue **,TR::IlValue **);OMR;IlBuilder;0;0
isBytecodeBuilder;isBytecodeBuilder();OMR;IlBuilder;0;1
isMethodBuilder;isMethodBuilder();OMR;IlBuilder;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;IlBuilder;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;IlBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;IlBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;IlBuilder;0;0
loadValue;loadValue(TR::IlValue *);OMR;IlBuilder;0;0
lookupSymbol;lookupSymbol(const char *);OMR;IlBuilder;0;0
newValue;newValue(TR::DataType,TR::Node *);OMR;IlBuilder;0;0
newValue;newValue(TR::IlType *,TR::Node *);OMR;IlBuilder;0;0
operator delete;operator delete(void *,size_t);OMR;IlBuilder;0;0
operator delete;operator delete(void *,size_t);TestCompiler;IlBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
operator delete;operator delete(void *,TR::Region &);OMR;IlBuilder;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;IlBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;IlBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;IlBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlBuilder;0;0
operator new;operator new(size_t,TR::Region &);OMR;IlBuilder;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;IlBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;IlBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;IlBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;IlBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;IlBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;IlBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;IlBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;IlBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;IlBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;IlBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;IlBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;IlBuilder;0;0
operator=;operator=(const class OMR::IlBuilder &);OMR;IlBuilder;1;0
operator=;operator=(class TestCompiler::IlBuilder &&);TestCompiler;IlBuilder;1;0
operator=;operator=(const class TestCompiler::IlBuilder &);TestCompiler;IlBuilder;1;0
operator=;operator=(class TR::IlBuilder &&);TR;IlBuilder;1;0
operator=;operator=(const class TR::IlBuilder &);TR;IlBuilder;1;0
print;print(const char *,_Bool);OMR;IlBuilder;0;0
printBlock;printBlock(TR::Block *);OMR;IlBuilder;0;0
processCallArgs;processCallArgs(TR::Compilation *,int,va_list);OMR;IlBuilder;0;0
pullInBuilderTrees;pullInBuilderTrees(TR::IlBuilder *,uint32_t *,TR::TreeTop **,TR::TreeTop **);OMR;IlBuilder;0;0
setComesBack;setComesBack();OMR;IlBuilder;0;0
setDoesNotComeBack;setDoesNotComeBack();OMR;IlBuilder;0;0
setHandlerInfo;setHandlerInfo(uint32_t);OMR;IlBuilder;0;1
setupForBuildIL;setupForBuildIL();OMR;IlBuilder;0;1
shiftOpFromNodes;shiftOpFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *);OMR;IlBuilder;0;0
shiftOpFromOpMap;shiftOpFromOpMap(OpCodeMapper,TR::IlValue *,TR::IlValue *);OMR;IlBuilder;0;0
shiftOpNodeFromNodes;shiftOpNodeFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *);OMR;IlBuilder;0;0
storeNode;storeNode(TR::SymbolReference *,TR::Node *);OMR;IlBuilder;0;0
unaryOp;unaryOp(TR::ILOpCodes,TR::IlValue *);OMR;IlBuilder;0;0
widenIntegerTo32Bits;widenIntegerTo32Bits(TR::IlValue *);OMR;IlBuilder;0;0
zero;zero(TR::DataType);OMR;IlBuilder;0;0
zero;zero(TR::IlType *);OMR;IlBuilder;0;0
zeroForValue;zeroForValue(TR::IlValue *);OMR;IlBuilder;0;0
zeroNodeForValue;zeroNodeForValue(TR::IlValue *);OMR;IlBuilder;0;0
~IlBuilder;~IlBuilder();OMR;IlBuilder;0;1
~IlBuilder;~IlBuilder();TestCompiler;IlBuilder;0;1
~IlBuilder;~IlBuilder();TR;IlBuilder;0;1
IlType;IlType(const class OMR::IlType &);OMR;IlType;1;0
IlType;IlType();OMR;IlType;0;0
IlType;IlType();TR;IlType;0;0
IlType;IlType(const char *);OMR;IlType;0;0
IlType;IlType(const char *);TR;IlType;0;0
IlType;IlType(class TR::IlType &&);TR;IlType;1;0
baseType;baseType();OMR;IlType;0;1
getName;getName();OMR;IlType;0;0
getPrimitiveType;getPrimitiveType();OMR;IlType;0;1
getSignatureName;getSignatureName();OMR;IlType;0;1
getSize;getSize();OMR;IlType;0;1
isArray;isArray();OMR;IlType;0;1
isPointer;isPointer();OMR;IlType;0;1
isStruct;isStruct();OMR;IlType;0;1
isUnion;isUnion();OMR;IlType;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;IlType;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;IlType;0;0
operator delete;operator delete(void *,size_t);OMR;IlType;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlType;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlType;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlType;0;0
operator delete;operator delete(void *,TR::Region &);OMR;IlType;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;IlType;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlType;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlType;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlType;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlType;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;IlType;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;IlType;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlType;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlType;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;IlType;0;0
operator new;operator new(size_t,TR::Region &);OMR;IlType;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;IlType;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlType;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlType;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;IlType;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlType;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;IlType;0;0
operator=;operator=(const class OMR::IlType &);OMR;IlType;1;0
operator=;operator=(class TR::IlType &&);TR;IlType;1;0
operator=;operator=(const class TR::IlType &);TR;IlType;1;0
~IlType;~IlType();OMR;IlType;0;1
~IlType;~IlType();TR;IlType;0;1
IlValue;IlValue(TR::Node *,TR::TreeTop *,TR::Block *,TR::MethodBuilder *);OMR;IlValue;0;0
IlValue;IlValue(TR::Node *,TR::TreeTop *,TR::Block *,TR::MethodBuilder *);TR;IlValue;0;0
IlValue;IlValue(class OMR::IlValue &&);OMR;IlValue;1;0
IlValue;IlValue(const class OMR::IlValue &);OMR;IlValue;1;0
getDataType;getDataType();OMR;IlValue;0;0
getID;getID();OMR;IlValue;0;0
getSymbolReference;getSymbolReference();OMR;IlValue;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;IlValue;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;IlValue;0;0
load;load(TR::Block *);OMR;IlValue;0;0
operator delete;operator delete(void *,size_t);OMR;IlValue;0;0
operator delete;operator delete(void *,TR::Region &);OMR;IlValue;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlValue;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlValue;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlValue;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;IlValue;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlValue;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlValue;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlValue;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;IlValue;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlValue;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;IlValue;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlValue;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlValue;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;IlValue;0;0
operator new;operator new(size_t,TR::Region &);OMR;IlValue;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;IlValue;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;IlValue;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlValue;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlValue;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;IlValue;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlValue;0;0
storeOver;storeOver(TR::IlValue *,TR::Block *);OMR;IlValue;0;0
storeToAuto;storeToAuto();OMR;IlValue;0;0
CloseStruct;CloseStruct(const char *);OMR;TypeDictionary;0;0
CloseStruct;CloseStruct(const char *,size_t);OMR;TypeDictionary;0;0
CloseUnion;CloseUnion(const char *);OMR;TypeDictionary;0;0
DefineField;DefineField(const char *,const char *,TR::IlType *,size_t);OMR;TypeDictionary;0;0
DefineField;DefineField(const char *,const char *,TR::IlType *);OMR;TypeDictionary;0;0
DefineStruct;DefineStruct(const char *);OMR;TypeDictionary;0;0
DefineUnion;DefineUnion(const char *);OMR;TypeDictionary;0;0
FieldReference;FieldReference(const char *,const char *);OMR;TypeDictionary;0;0
GetFieldType;GetFieldType(const char *,const char *);OMR;TypeDictionary;0;0
LookupStruct;LookupStruct(const char *);OMR;TypeDictionary;0;0
LookupUnion;LookupUnion(const char *);OMR;TypeDictionary;0;0
NotifyCompilationDone;NotifyCompilationDone();OMR;TypeDictionary;0;0
OffsetOf;OffsetOf(const char *,const char *);OMR;TypeDictionary;0;0
PointerTo;PointerTo(const char *);OMR;TypeDictionary;0;0
PointerTo;PointerTo(TR::IlType *);OMR;TypeDictionary;0;0
PointerTo;PointerTo(TR::DataType);OMR;TypeDictionary;0;0
PrimitiveType;PrimitiveType(TR::DataType);OMR;TypeDictionary;0;0
TypeDictionary;TypeDictionary();OMR;TypeDictionary;0;0
TypeDictionary;TypeDictionary();TR;TypeDictionary;0;0
TypeDictionary;TypeDictionary(const class OMR::TypeDictionary &);OMR;TypeDictionary;0;0
TypeDictionary;TypeDictionary(class TR::TypeDictionary &&);TR;TypeDictionary;1;0
UnionField;UnionField(const char *,const char *,TR::IlType *);OMR;TypeDictionary;0;0
UnionFieldType;UnionFieldType(const char *,const char *);OMR;TypeDictionary;0;0
getStruct;getStruct(const char *);OMR;TypeDictionary;0;0
getUnion;getUnion(const char *);OMR;TypeDictionary;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;TypeDictionary;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;TypeDictionary;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;TypeDictionary;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;TypeDictionary;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;TypeDictionary;0;0
operator delete;operator delete(void *,TR::Region &);OMR;TypeDictionary;0;0
operator delete;operator delete(void *,size_t);OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;TypeDictionary;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;TypeDictionary;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;TypeDictionary;0;0
operator new;operator new(size_t,TR::Region &);OMR;TypeDictionary;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;TypeDictionary;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;TypeDictionary;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;TypeDictionary;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;TypeDictionary;0;0
operator=;operator=(const class OMR::TypeDictionary &);OMR;TypeDictionary;1;0
operator=;operator=(class TR::TypeDictionary &&);TR;TypeDictionary;1;0
trMemory;trMemory();OMR;TypeDictionary;0;0
~TypeDictionary;~TypeDictionary();OMR;TypeDictionary;0;0
~TypeDictionary;~TypeDictionary();TR;TypeDictionary;0;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/StoreOpIlInjector.cpp
StoreOpIlInjector;StoreOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;StoreOpIlInjector;0;0
injectIL;injectIL();TestCompiler;StoreOpIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;StoreOpIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;StoreOpIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;StoreOpIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;StoreOpIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;StoreOpIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;StoreOpIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;StoreOpIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;StoreOpIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;StoreOpIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;StoreOpIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;StoreOpIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;StoreOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;StoreOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;StoreOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;StoreOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;StoreOpIlInjector;0;0
operator=;operator=(const class TestCompiler::StoreOpIlInjector &);TestCompiler;StoreOpIlInjector;1;0
operator=;operator=(class TestCompiler::StoreOpIlInjector &&);TestCompiler;StoreOpIlInjector;1;0
~StoreOpIlInjector;~StoreOpIlInjector();TestCompiler;StoreOpIlInjector;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/TernaryOpIlInjector.cpp
TernaryOpIlInjector;TernaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;TernaryOpIlInjector;0;0
injectIL;injectIL();TestCompiler;TernaryOpIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;TernaryOpIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;TernaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;TernaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;TernaryOpIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;TernaryOpIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;TernaryOpIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;TernaryOpIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;TernaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;TernaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;TernaryOpIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;TernaryOpIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;TernaryOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;TernaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;TernaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;TernaryOpIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;TernaryOpIlInjector;0;0
operator=;operator=(class TestCompiler::TernaryOpIlInjector &&);TestCompiler;TernaryOpIlInjector;1;0
operator=;operator=(const class TestCompiler::TernaryOpIlInjector &);TestCompiler;TernaryOpIlInjector;1;0
~TernaryOpIlInjector;~TernaryOpIlInjector();TestCompiler;TernaryOpIlInjector;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/UnaryOpIlInjector.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/BarIlInjector.cpp
BarIlInjector;BarIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);TestCompiler;BarIlInjector;0;0
indexParameter;indexParameter();TestCompiler;BarIlInjector;0;0
injectIL;injectIL();TestCompiler;BarIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;BarIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;BarIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;BarIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BarIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;BarIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BarIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;BarIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;BarIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;BarIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BarIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;BarIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;BarIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BarIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;BarIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;BarIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;BarIlInjector;0;0
operator=;operator=(class TestCompiler::BarIlInjector &&);TestCompiler;BarIlInjector;1;0
operator=;operator=(const class TestCompiler::BarIlInjector &);TestCompiler;BarIlInjector;1;0
~BarIlInjector;~BarIlInjector();TestCompiler;BarIlInjector;1;1
RunTest;RunTest();TestCompiler;TestDriver;0;0
bar;bar(int32_t);TestCompiler;FooBarTest;0;0
barMethod;barMethod();TestCompiler;FooBarTest;0;0
compileMethodBuilder;compileMethodBuilder(TR::MethodBuilder *,uint8_t **);TestCompiler;TestDriver;0;0
compileTestMethods;compileTestMethods();TestCompiler;TestDriver;0;1
compileTestMethods;compileTestMethods();TestCompiler;FooBarTest;0;1
dataArray;dataArray();TestCompiler;FooBarTest;0;0
dataArraySize;dataArraySize();TestCompiler;FooBarTest;0;0
foo;foo(int32_t);TestCompiler;FooBarTest;0;0
invokeTests;invokeTests();TestCompiler;TestDriver;0;1
invokeTests;invokeTests();TestCompiler;FooBarTest;0;1
operator=;operator=(class TestCompiler::TestDriver &&);TestCompiler;TestDriver;1;0
operator=;operator=(const class TestCompiler::TestDriver &);TestCompiler;TestDriver;1;0
operator=;operator=(const class TestCompiler::FooBarTest &);TestCompiler;FooBarTest;1;0
operator=;operator=(class TestCompiler::FooBarTest &&);TestCompiler;FooBarTest;1;0
~FooBarTest;~FooBarTest();TestCompiler;FooBarTest;1;0
~TestDriver;~TestDriver();TestCompiler;TestDriver;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/CallIlInjector.cpp
ResolvedMethod;ResolvedMethod(class TR::ResolvedMethod &&);TR;ResolvedMethod;1;0
ResolvedMethod;ResolvedMethod(const class TR::ResolvedMethod &);TR;ResolvedMethod;1;0
TypeDictionary;TypeDictionary(const class TR::TypeDictionary &);TR;TypeDictionary;1;0
BinaryOpIlInjector;BinaryOpIlInjector(const class TestCompiler::BinaryOpIlInjector &);TestCompiler;BinaryOpIlInjector;1;0
BinaryOpIlInjector;BinaryOpIlInjector(class TestCompiler::BinaryOpIlInjector &&);TestCompiler;BinaryOpIlInjector;1;0
IndirectStoreIlInjector;IndirectStoreIlInjector(class TestCompiler::IndirectStoreIlInjector &&);TestCompiler;IndirectStoreIlInjector;1;0
IndirectStoreIlInjector;IndirectStoreIlInjector(const class TestCompiler::IndirectStoreIlInjector &);TestCompiler;IndirectStoreIlInjector;1;0
IndirectStoreIlInjector;IndirectStoreIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;IndirectStoreIlInjector;0;0
injectIL;injectIL();TestCompiler;IndirectStoreIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;IndirectStoreIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;IndirectStoreIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;IndirectStoreIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectStoreIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;IndirectStoreIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectStoreIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;IndirectStoreIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;IndirectStoreIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectStoreIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;IndirectStoreIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;IndirectStoreIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;IndirectStoreIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;IndirectStoreIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectStoreIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;IndirectStoreIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;IndirectStoreIlInjector;0;0
operator=;operator=(class TestCompiler::IndirectStoreIlInjector &&);TestCompiler;IndirectStoreIlInjector;1;0
operator=;operator=(const class TestCompiler::IndirectStoreIlInjector &);TestCompiler;IndirectStoreIlInjector;1;0
~IndirectStoreIlInjector;~IndirectStoreIlInjector();TestCompiler;IndirectStoreIlInjector;1;1
CallIlInjector;CallIlInjector(const class TestCompiler::CallIlInjector &);TestCompiler;CallIlInjector;1;0
CallIlInjector;CallIlInjector(class TestCompiler::CallIlInjector &&);TestCompiler;CallIlInjector;1;0
CallIlInjector;CallIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;CallIlInjector;0;0
injectIL;injectIL();TestCompiler;CallIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;CallIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;CallIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;CallIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CallIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;CallIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CallIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;CallIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;CallIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CallIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;CallIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;CallIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;CallIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;CallIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CallIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;CallIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;CallIlInjector;0;0
operator=;operator=(const class TestCompiler::CallIlInjector &);TestCompiler;CallIlInjector;1;0
operator=;operator=(class TestCompiler::CallIlInjector &&);TestCompiler;CallIlInjector;1;0
~CallIlInjector;~CallIlInjector();TestCompiler;CallIlInjector;1;1
ChildlessUnaryOpIlInjector;ChildlessUnaryOpIlInjector(class TestCompiler::ChildlessUnaryOpIlInjector &&);TestCompiler;ChildlessUnaryOpIlInjector;1;0
ChildlessUnaryOpIlInjector;ChildlessUnaryOpIlInjector(const class TestCompiler::ChildlessUnaryOpIlInjector &);TestCompiler;ChildlessUnaryOpIlInjector;1;0
CmpBranchOpIlInjector;CmpBranchOpIlInjector(class TestCompiler::CmpBranchOpIlInjector &&);TestCompiler;CmpBranchOpIlInjector;1;0
CmpBranchOpIlInjector;CmpBranchOpIlInjector(const class TestCompiler::CmpBranchOpIlInjector &);TestCompiler;CmpBranchOpIlInjector;1;0
IndirectLoadIlInjector;IndirectLoadIlInjector(class TestCompiler::IndirectLoadIlInjector &&);TestCompiler;IndirectLoadIlInjector;1;0
IndirectLoadIlInjector;IndirectLoadIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);TestCompiler;IndirectLoadIlInjector;0;0
IndirectLoadIlInjector;IndirectLoadIlInjector(const class TestCompiler::IndirectLoadIlInjector &);TestCompiler;IndirectLoadIlInjector;1;0
injectIL;injectIL();TestCompiler;IndirectLoadIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;IndirectLoadIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;IndirectLoadIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;IndirectLoadIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectLoadIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;IndirectLoadIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectLoadIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;IndirectLoadIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;IndirectLoadIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectLoadIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;IndirectLoadIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;IndirectLoadIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;IndirectLoadIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;IndirectLoadIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectLoadIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;IndirectLoadIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;IndirectLoadIlInjector;0;0
operator=;operator=(const class TestCompiler::IndirectLoadIlInjector &);TestCompiler;IndirectLoadIlInjector;1;0
operator=;operator=(class TestCompiler::IndirectLoadIlInjector &&);TestCompiler;IndirectLoadIlInjector;1;0
~IndirectLoadIlInjector;~IndirectLoadIlInjector();TestCompiler;IndirectLoadIlInjector;1;1
UnsupportedOpCodesTests;UnsupportedOpCodesTests();TestCompiler;OpCodesTest;0;1
addUnsupportedOpCodeTest;addUnsupportedOpCodeTest(int32_t,TR::ILOpCodes,char *,TR::DataType *,TR::DataType);TestCompiler;OpCodesTest;0;0
byteswap;byteswap(int32_t);TestCompiler;OpCodesTest;0;0
byteswap;byteswap(int64_t);TestCompiler;OpCodesTest;0;0
byteswap;byteswap(uint16_t);TestCompiler;OpCodesTest;0;0
byteswap;byteswap(uint64_t);TestCompiler;OpCodesTest;0;0
byteswap;byteswap(uint32_t);TestCompiler;OpCodesTest;0;0
byteswap;byteswap(int16_t);TestCompiler;OpCodesTest;0;0
compileAddressTestMethods;compileAddressTestMethods();TestCompiler;OpCodesTest;0;1
compileBitwiseMethods;compileBitwiseMethods();TestCompiler;OpCodesTest;0;1
compileCompareTestMethods;compileCompareTestMethods();TestCompiler;OpCodesTest;0;1
compileDisabledOpCodesTests;compileDisabledOpCodesTests();TestCompiler;OpCodesTest;0;1
compileIntegerArithmeticTestMethods;compileIntegerArithmeticTestMethods();TestCompiler;OpCodesTest;0;1
compileMemoryOperationTestMethods;compileMemoryOperationTestMethods();TestCompiler;OpCodesTest;0;1
compileTernaryTestMethods;compileTernaryTestMethods();TestCompiler;OpCodesTest;0;1
compileTestMethods;compileTestMethods();TestCompiler;OpCodesTest;0;1
compileUnaryTestMethods;compileUnaryTestMethods();TestCompiler;OpCodesTest;0;1
invokeAddressTests;invokeAddressTests();TestCompiler;OpCodesTest;0;1
invokeBitwiseTests;invokeBitwiseTests();TestCompiler;OpCodesTest;0;1
invokeCompareTests;invokeCompareTests();TestCompiler;OpCodesTest;0;1
invokeDisabledOpCodesTests;invokeDisabledOpCodesTests();TestCompiler;OpCodesTest;0;1
invokeIntegerArithmeticTests;invokeIntegerArithmeticTests();TestCompiler;OpCodesTest;0;1
invokeMemoryOperationTests;invokeMemoryOperationTests();TestCompiler;OpCodesTest;0;1
invokeNoHelperUnaryTests;invokeNoHelperUnaryTests();TestCompiler;OpCodesTest;0;1
invokeTernaryTests;invokeTernaryTests();TestCompiler;OpCodesTest;0;1
invokeTests;invokeTests();TestCompiler;OpCodesTest;0;1
invokeUnaryTests;invokeUnaryTests();TestCompiler;OpCodesTest;0;1
operator=;operator=(class TestCompiler::OpCodesTest &&);TestCompiler;OpCodesTest;1;0
operator=;operator=(const class TestCompiler::OpCodesTest &);TestCompiler;OpCodesTest;1;0
resolvedMethod;resolvedMethod(TR::DataType);TestCompiler;OpCodesTest;0;0
~OpCodesTest;~OpCodesTest();TestCompiler;OpCodesTest;1;0
StoreOpIlInjector;StoreOpIlInjector(class TestCompiler::StoreOpIlInjector &&);TestCompiler;StoreOpIlInjector;1;0
StoreOpIlInjector;StoreOpIlInjector(const class TestCompiler::StoreOpIlInjector &);TestCompiler;StoreOpIlInjector;1;0
TernaryOpIlInjector;TernaryOpIlInjector(class TestCompiler::TernaryOpIlInjector &&);TestCompiler;TernaryOpIlInjector;1;0
TernaryOpIlInjector;TernaryOpIlInjector(const class TestCompiler::TernaryOpIlInjector &);TestCompiler;TernaryOpIlInjector;1;0
EmptyTestEventListener;EmptyTestEventListener(class testing::EmptyTestEventListener &&);testing;EmptyTestEventListener;1;0
OnEnvironmentsSetUpEnd;OnEnvironmentsSetUpEnd(const class testing::UnitTest &);testing;TestEventListener;0;1
OnEnvironmentsSetUpEnd;OnEnvironmentsSetUpEnd(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
OnEnvironmentsSetUpStart;OnEnvironmentsSetUpStart(const class testing::UnitTest &);testing;TestEventListener;0;1
OnEnvironmentsSetUpStart;OnEnvironmentsSetUpStart(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
OnEnvironmentsTearDownEnd;OnEnvironmentsTearDownEnd(const class testing::UnitTest &);testing;TestEventListener;0;1
OnEnvironmentsTearDownEnd;OnEnvironmentsTearDownEnd(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
OnEnvironmentsTearDownStart;OnEnvironmentsTearDownStart(const class testing::UnitTest &);testing;TestEventListener;0;1
OnEnvironmentsTearDownStart;OnEnvironmentsTearDownStart(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
OnTestCaseEnd;OnTestCaseEnd(const class testing::TestCase &);testing;TestEventListener;0;1
OnTestCaseEnd;OnTestCaseEnd(const class testing::TestCase &);testing;EmptyTestEventListener;0;1
OnTestCaseStart;OnTestCaseStart(const class testing::TestCase &);testing;TestEventListener;0;1
OnTestCaseStart;OnTestCaseStart(const class testing::TestCase &);testing;EmptyTestEventListener;0;1
OnTestEnd;OnTestEnd(const class testing::TestInfo &);testing;TestEventListener;0;1
OnTestEnd;OnTestEnd(const class testing::TestInfo &);testing;EmptyTestEventListener;0;1
OnTestIterationEnd;OnTestIterationEnd(const class testing::UnitTest &,int);testing;TestEventListener;0;1
OnTestIterationEnd;OnTestIterationEnd(const class testing::UnitTest &,int);testing;EmptyTestEventListener;0;1
OnTestIterationStart;OnTestIterationStart(const class testing::UnitTest &,int);testing;TestEventListener;0;1
OnTestIterationStart;OnTestIterationStart(const class testing::UnitTest &,int);testing;EmptyTestEventListener;0;1
OnTestPartResult;OnTestPartResult(const class testing::TestPartResult &);testing;TestEventListener;0;1
OnTestPartResult;OnTestPartResult(const class testing::TestPartResult &);testing;EmptyTestEventListener;0;1
OnTestProgramEnd;OnTestProgramEnd(const class testing::UnitTest &);testing;TestEventListener;0;1
OnTestProgramEnd;OnTestProgramEnd(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
OnTestProgramStart;OnTestProgramStart(const class testing::UnitTest &);testing;TestEventListener;0;1
OnTestProgramStart;OnTestProgramStart(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
OnTestStart;OnTestStart(const class testing::TestInfo &);testing;TestEventListener;0;1
OnTestStart;OnTestStart(const class testing::TestInfo &);testing;EmptyTestEventListener;0;1
TestEventListener;TestEventListener(const class testing::TestEventListener &);testing;TestEventListener;1;0
operator=;operator=(const class testing::TestEventListener &);testing;TestEventListener;1;0
operator=;operator=(class testing::EmptyTestEventListener &&);testing;EmptyTestEventListener;1;0
operator=;operator=(const class testing::EmptyTestEventListener &);testing;EmptyTestEventListener;1;0
~EmptyTestEventListener;~EmptyTestEventListener();testing;EmptyTestEventListener;1;1
~TestEventListener;~TestEventListener();testing;TestEventListener;0;1
DeleteSelf_;DeleteSelf_();testing;Test;0;0
HasFailure;HasFailure();testing;Test;0;0
HasFatalFailure;HasFatalFailure();testing;Test;0;0
HasNonfatalFailure;HasNonfatalFailure();testing;Test;0;0
HasSameFixtureClass;HasSameFixtureClass();testing;Test;0;0
Run;Run();testing;Test;0;0
SetUp;SetUp();testing;Test;0;1
SetUpTestCase;SetUpTestCase();testing;Test;0;0
Setup;Setup();testing;Test;0;1
TearDown;TearDown();testing;Test;0;1
TearDownTestCase;TearDownTestCase();testing;Test;0;0
Test;Test(const class testing::Test &);testing;Test;0;0
Test;Test();testing;Test;0;0
TestBody;TestBody();testing;Test;0;1
operator=;operator=(const class testing::Test &);testing;Test;0;0
~Test;~Test();testing;Test;0;1
Create;Create(const char *,const class testing::internal::RE *,const char *,int,class testing::internal::DeathTest **);testing::internal;DeathTestFactory;0;1
Create;Create(const char *,const class testing::internal::RE *,const char *,int,class testing::internal::DeathTest **);testing::internal;DefaultDeathTestFactory;0;1
DeathTestFactory;DeathTestFactory(const class testing::internal::DeathTestFactory &);testing::internal;DeathTestFactory;1;0
DefaultDeathTestFactory;DefaultDeathTestFactory(class testing::internal::DefaultDeathTestFactory &&);testing::internal;DefaultDeathTestFactory;1;0
operator=;operator=(const class testing::internal::DeathTestFactory &);testing::internal;DeathTestFactory;1;0
operator=;operator=(const class testing::internal::DefaultDeathTestFactory &);testing::internal;DefaultDeathTestFactory;1;0
operator=;operator=(class testing::internal::DefaultDeathTestFactory &&);testing::internal;DefaultDeathTestFactory;1;0
~DeathTestFactory;~DeathTestFactory();testing::internal;DeathTestFactory;0;1
~DefaultDeathTestFactory;~DefaultDeathTestFactory();testing::internal;DefaultDeathTestFactory;1;1
HasNewFatalFailureHelper;HasNewFatalFailureHelper(const class testing::internal::HasNewFatalFailureHelper &);testing::internal;HasNewFatalFailureHelper;0;0
HasNewFatalFailureHelper;HasNewFatalFailureHelper();testing::internal;HasNewFatalFailureHelper;0;0
ReportTestPartResult;ReportTestPartResult(const class testing::TestPartResult &);testing;TestPartResultReporterInterface;0;1
ReportTestPartResult;ReportTestPartResult(const class testing::TestPartResult &);testing::internal;HasNewFatalFailureHelper;0;1
has_new_fatal_failure;has_new_fatal_failure();testing::internal;HasNewFatalFailureHelper;0;0
operator=;operator=(const class testing::TestPartResultReporterInterface &);testing;TestPartResultReporterInterface;1;0
operator=;operator=(const class testing::internal::HasNewFatalFailureHelper &);testing::internal;HasNewFatalFailureHelper;0;0
~HasNewFatalFailureHelper;~HasNewFatalFailureHelper();testing::internal;HasNewFatalFailureHelper;0;1
~TestPartResultReporterInterface;~TestPartResultReporterInterface();testing;TestPartResultReporterInterface;0;1
AssertHeld;AssertHeld();testing::internal;MutexBase;0;0
Lock;Lock();testing::internal;MutexBase;0;0
Mutex;Mutex(const class testing::internal::Mutex &);testing::internal;Mutex;0;0
Mutex;Mutex();testing::internal;Mutex;0;0
MutexBase;MutexBase(class testing::internal::MutexBase &&);testing::internal;MutexBase;1;0
MutexBase;MutexBase(const class testing::internal::MutexBase &);testing::internal;MutexBase;1;0
MutexBase;MutexBase();testing::internal;MutexBase;1;0
Unlock;Unlock();testing::internal;MutexBase;0;0
operator=;operator=(const class testing::internal::Mutex &);testing::internal;Mutex;0;0
~Mutex;~Mutex();testing::internal;Mutex;0;0
~MutexBase;~MutexBase();testing::internal;MutexBase;1;0
AddTestCaseInstantiation;AddTestCaseInstantiation(const string &,GeneratorCreationFunc *,ParamNameGeneratorFunc *,const char *,int);testing::internal;ParameterizedTestCaseInfo;0;0
AddTestPattern;AddTestPattern(const char *,const char *,TestMetaFactoryBase<ParamType> *);testing::internal;ParameterizedTestCaseInfo;0;0
GetTestCaseName;GetTestCaseName();testing::internal;ParameterizedTestCaseInfoBase;0;1
GetTestCaseName;GetTestCaseName();testing::internal;ParameterizedTestCaseInfo;0;1
GetTestCaseTypeId;GetTestCaseTypeId();testing::internal;ParameterizedTestCaseInfoBase;0;1
GetTestCaseTypeId;GetTestCaseTypeId();testing::internal;ParameterizedTestCaseInfo;0;1
ParameterizedTestCaseInfo<TestCase>;ParameterizedTestCaseInfo<TestCase>(const char *,struct testing::internal::CodeLocation);testing::internal;ParameterizedTestCaseInfo;0;0
ParameterizedTestCaseInfo<TestCase>;ParameterizedTestCaseInfo<TestCase>(const ParameterizedTestCaseInfo<TestCase> &);testing::internal;ParameterizedTestCaseInfo;0;0
ParameterizedTestCaseInfoBase;ParameterizedTestCaseInfoBase(const class testing::internal::ParameterizedTestCaseInfoBase &);testing::internal;ParameterizedTestCaseInfoBase;0;0
ParameterizedTestCaseInfoBase;ParameterizedTestCaseInfoBase();testing::internal;ParameterizedTestCaseInfoBase;0;0
RegisterTests;RegisterTests();testing::internal;ParameterizedTestCaseInfoBase;0;1
RegisterTests;RegisterTests();testing::internal;ParameterizedTestCaseInfo;0;1
operator=;operator=(const class testing::internal::ParameterizedTestCaseInfoBase &);testing::internal;ParameterizedTestCaseInfoBase;0;0
operator=;operator=(const ParameterizedTestCaseInfo<TestCase> &);testing::internal;ParameterizedTestCaseInfo;0;0
~ParameterizedTestCaseInfoBase;~ParameterizedTestCaseInfoBase();testing::internal;ParameterizedTestCaseInfoBase;0;1
CreateTest;CreateTest();testing::internal;TestFactoryBase;0;1
CreateTest;CreateTest();testing::internal;ParameterizedTestFactory;0;1
ParameterizedTestFactory<TestClass>;ParameterizedTestFactory<TestClass>(const ParameterizedTestFactory<TestClass> &);testing::internal;ParameterizedTestFactory;0;0
ParameterizedTestFactory<TestClass>;ParameterizedTestFactory<TestClass>(ParamType);testing::internal;ParameterizedTestFactory;0;0
TestFactoryBase;TestFactoryBase();testing::internal;TestFactoryBase;0;0
TestFactoryBase;TestFactoryBase(const class testing::internal::TestFactoryBase &);testing::internal;TestFactoryBase;0;0
operator=;operator=(const class testing::internal::TestFactoryBase &);testing::internal;TestFactoryBase;0;0
operator=;operator=(const ParameterizedTestFactory<TestClass> &);testing::internal;ParameterizedTestFactory;0;0
~TestFactoryBase;~TestFactoryBase();testing::internal;TestFactoryBase;0;1
CreateTest;CreateTest();testing::internal;TestFactoryImpl;0;1
DefaultValueHolderFactory;DefaultValueHolderFactory(const class testing::internal::ThreadLocal::DefaultValueHolderFactory &);testing::internal::ThreadLocal;DefaultValueHolderFactory;0;0
DefaultValueHolderFactory;DefaultValueHolderFactory();testing::internal::ThreadLocal;DefaultValueHolderFactory;0;0
MakeNewHolder;MakeNewHolder();testing::internal::ThreadLocal;ValueHolderFactory;0;1
MakeNewHolder;MakeNewHolder();testing::internal::ThreadLocal;DefaultValueHolderFactory;0;1
ValueHolderFactory;ValueHolderFactory();testing::internal::ThreadLocal;ValueHolderFactory;0;0
ValueHolderFactory;ValueHolderFactory(const class testing::internal::ThreadLocal::ValueHolderFactory &);testing::internal::ThreadLocal;ValueHolderFactory;0;0
operator=;operator=(const class testing::internal::ThreadLocal::ValueHolderFactory &);testing::internal::ThreadLocal;ValueHolderFactory;0;0
operator=;operator=(const class testing::internal::ThreadLocal::DefaultValueHolderFactory &);testing::internal::ThreadLocal;DefaultValueHolderFactory;0;0
~ValueHolderFactory;~ValueHolderFactory();testing::internal::ThreadLocal;ValueHolderFactory;0;1
InstanceValueHolderFactory;InstanceValueHolderFactory(const class testing::internal::ThreadLocal::InstanceValueHolderFactory &);testing::internal::ThreadLocal;InstanceValueHolderFactory;0;0
InstanceValueHolderFactory;InstanceValueHolderFactory(const T &);testing::internal::ThreadLocal;InstanceValueHolderFactory;0;0
MakeNewHolder;MakeNewHolder();testing::internal::ThreadLocal;InstanceValueHolderFactory;0;1
operator=;operator=(const class testing::internal::ThreadLocal::InstanceValueHolderFactory &);testing::internal::ThreadLocal;InstanceValueHolderFactory;0;0
ValueHolder;ValueHolder();testing::internal::ThreadLocal;ValueHolder;0;0
ValueHolder;ValueHolder(const T &);testing::internal::ThreadLocal;ValueHolder;0;0
ValueHolder;ValueHolder(const class testing::internal::ThreadLocal::ValueHolder &);testing::internal::ThreadLocal;ValueHolder;0;0
operator=;operator=(const class testing::internal::ThreadLocalValueHolderBase &);testing::internal;ThreadLocalValueHolderBase;1;0
operator=;operator=(const class testing::internal::ThreadLocal::ValueHolder &);testing::internal::ThreadLocal;ValueHolder;0;0
pointer;pointer();testing::internal::ThreadLocal;ValueHolder;0;0
~ThreadLocalValueHolderBase;~ThreadLocalValueHolderBase();testing::internal;ThreadLocalValueHolderBase;0;1
Join;Join();testing::internal;ThreadWithParam;0;0
Run;Run();testing::internal;ThreadWithParamBase;0;1
Run;Run();testing::internal;ThreadWithParam;0;1
ThreadWithParam<T>;ThreadWithParam<T>(const ThreadWithParam<T> &);testing::internal;ThreadWithParam;0;0
ThreadWithParam<T>;ThreadWithParam<T>(UserThreadFunc *,T,class testing::internal::Notification *);testing::internal;ThreadWithParam;0;0
operator=;operator=(const class testing::internal::ThreadWithParamBase &);testing::internal;ThreadWithParamBase;1;0
operator=;operator=(const ThreadWithParam<T> &);testing::internal;ThreadWithParam;0;0
~ThreadWithParam<T>;~ThreadWithParam<T>();testing::internal;ThreadWithParam;0;1
~ThreadWithParamBase;~ThreadWithParamBase();testing::internal;ThreadWithParamBase;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/IndirectLoadIlInjector.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/IndirectStoreIlInjector.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/FooIlInjector.cpp
FooIlInjector;FooIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);TestCompiler;FooIlInjector;0;0
indexParameter;indexParameter();TestCompiler;FooIlInjector;0;0
injectIL;injectIL();TestCompiler;FooIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;FooIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;FooIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;FooIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;FooIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;FooIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;FooIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;FooIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;FooIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;FooIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;FooIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;FooIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;FooIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;FooIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;FooIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;FooIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;FooIlInjector;0;0
operator=;operator=(class TestCompiler::FooIlInjector &&);TestCompiler;FooIlInjector;1;0
operator=;operator=(const class TestCompiler::FooIlInjector &);TestCompiler;FooIlInjector;1;0
~FooIlInjector;~FooIlInjector();TestCompiler;FooIlInjector;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/Qux2IlInjector.cpp
Qux2IlInjector;Qux2IlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);TestCompiler;Qux2IlInjector;0;0
injectIL;injectIL();TestCompiler;Qux2IlInjector;0;1
intParameter;intParameter();TestCompiler;Qux2IlInjector;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;Qux2IlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;Qux2IlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;Qux2IlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Qux2IlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;Qux2IlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Qux2IlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;Qux2IlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;Qux2IlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Qux2IlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;Qux2IlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;Qux2IlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;Qux2IlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;Qux2IlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Qux2IlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;Qux2IlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;Qux2IlInjector;0;0
operator=;operator=(const class TestCompiler::Qux2IlInjector &);TestCompiler;Qux2IlInjector;1;0
operator=;operator=(class TestCompiler::Qux2IlInjector &&);TestCompiler;Qux2IlInjector;1;0
~Qux2IlInjector;~Qux2IlInjector();TestCompiler;Qux2IlInjector;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/BuilderTest.cpp
JITILBuilderTest_ControlFlowTest_Test;JITILBuilderTest_ControlFlowTest_Test();;JITILBuilderTest_ControlFlowTest_Test;0;0
JITILBuilderTest_ControlFlowTest_Test;JITILBuilderTest_ControlFlowTest_Test(const class JITILBuilderTest_ControlFlowTest_Test &);;JITILBuilderTest_ControlFlowTest_Test;0;0
TestBody;TestBody();;JITILBuilderTest_ControlFlowTest_Test;0;1
operator=;operator=(const class JITILBuilderTest_ControlFlowTest_Test &);;JITILBuilderTest_ControlFlowTest_Test;0;0
~JITILBuilderTest_ControlFlowTest_Test;~JITILBuilderTest_ControlFlowTest_Test();;JITILBuilderTest_ControlFlowTest_Test;1;1
JITILBuilderTest_NestedControlFlowLoopTest_Test;JITILBuilderTest_NestedControlFlowLoopTest_Test();;JITILBuilderTest_NestedControlFlowLoopTest_Test;0;0
JITILBuilderTest_NestedControlFlowLoopTest_Test;JITILBuilderTest_NestedControlFlowLoopTest_Test(const class JITILBuilderTest_NestedControlFlowLoopTest_Test &);;JITILBuilderTest_NestedControlFlowLoopTest_Test;0;0
TestBody;TestBody();;JITILBuilderTest_NestedControlFlowLoopTest_Test;0;1
operator=;operator=(const class JITILBuilderTest_NestedControlFlowLoopTest_Test &);;JITILBuilderTest_NestedControlFlowLoopTest_Test;0;0
~JITILBuilderTest_NestedControlFlowLoopTest_Test;~JITILBuilderTest_NestedControlFlowLoopTest_Test();;JITILBuilderTest_NestedControlFlowLoopTest_Test;1;1
JITTest_BuilderTest_Test;JITTest_BuilderTest_Test();;JITTest_BuilderTest_Test;0;0
JITTest_BuilderTest_Test;JITTest_BuilderTest_Test(const class JITTest_BuilderTest_Test &);;JITTest_BuilderTest_Test;0;0
TestBody;TestBody();;JITTest_BuilderTest_Test;0;1
operator=;operator=(const class JITTest_BuilderTest_Test &);;JITTest_BuilderTest_Test;0;0
~JITTest_BuilderTest_Test;~JITTest_BuilderTest_Test();;JITTest_BuilderTest_Test;1;1
AbsDiffIfThenElseMethod;AbsDiffIfThenElseMethod(class TestCompiler::AbsDiffIfThenElseMethod &&);TestCompiler;AbsDiffIfThenElseMethod;1;0
AbsDiffIfThenElseMethod;AbsDiffIfThenElseMethod(const class TestCompiler::AbsDiffIfThenElseMethod &);TestCompiler;AbsDiffIfThenElseMethod;1;0
AbsDiffIfThenElseMethod;AbsDiffIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;AbsDiffIfThenElseMethod;0;0
AllLocalsHaveBeenDefined;AllLocalsHaveBeenDefined();OMR;MethodBuilder;0;0
AppendBuilder;AppendBuilder(TR::IlBuilder *);OMR;MethodBuilder;0;0
AppendBuilder;AppendBuilder(TR::BytecodeBuilder *);OMR;MethodBuilder;0;0
AppendBytecodeBuilder;AppendBytecodeBuilder(TR::BytecodeBuilder *);OMR;MethodBuilder;0;0
DefineArrayParameter;DefineArrayParameter(const char *,TR::IlType *);OMR;MethodBuilder;0;0
DefineFile;DefineFile(const char *);OMR;MethodBuilder;0;0
DefineFunction;DefineFunction(const char *const,const char *const,const char *const,void *,TR::IlType *,int32_t,TR::IlType **);OMR;MethodBuilder;0;0
DefineFunction;DefineFunction(const char *const,const char *const,const char *const,void *,TR::IlType *,int32_t);OMR;MethodBuilder;0;0
DefineLine;DefineLine(const char *);OMR;MethodBuilder;0;0
DefineLine;DefineLine(int);OMR;MethodBuilder;0;0
DefineLocal;DefineLocal(const char *,TR::IlType *);OMR;MethodBuilder;0;0
DefineMemory;DefineMemory(const char *,TR::IlType *,void *);OMR;MethodBuilder;0;0
DefineName;DefineName(const char *);OMR;MethodBuilder;0;0
DefineParameter;DefineParameter(const char *,TR::IlType *);OMR;MethodBuilder;0;0
DefineReturnType;DefineReturnType(TR::IlType *);OMR;MethodBuilder;0;0
GetNextBytecodeFromWorklist;GetNextBytecodeFromWorklist();OMR;MethodBuilder;0;0
MethodBuilder;MethodBuilder(TR::TypeDictionary *,OMR::VirtualMachineState *);OMR;MethodBuilder;0;0
MethodBuilder;MethodBuilder(const class OMR::MethodBuilder &);OMR;MethodBuilder;0;0
MethodBuilder;MethodBuilder(TR::TypeDictionary *);TestCompiler;MethodBuilder;0;0
MethodBuilder;MethodBuilder(TR::TypeDictionary *);TR;MethodBuilder;0;0
MethodBuilder;MethodBuilder(class TestCompiler::MethodBuilder &&);TestCompiler;MethodBuilder;1;0
MethodBuilder;MethodBuilder(const class TestCompiler::MethodBuilder &);TestCompiler;MethodBuilder;1;0
MethodBuilder;MethodBuilder(TR::TypeDictionary *,class TestCompiler::TestDriver *);TestCompiler;MethodBuilder;0;0
MethodBuilder;MethodBuilder(class TR::MethodBuilder &&);TR;MethodBuilder;1;0
MethodBuilder;MethodBuilder(TR::TypeDictionary *,TestCompiler::TestDriver *);TR;MethodBuilder;0;0
MethodBuilder;MethodBuilder(const class TR::MethodBuilder &);TR;MethodBuilder;1;0
OrphanBytecodeBuilder;OrphanBytecodeBuilder(int32_t,char *);OMR;MethodBuilder;0;0
RequestFunction;RequestFunction(const char *);OMR;MethodBuilder;0;1
addBytecodeBuilderToWorklist;addBytecodeBuilderToWorklist(TR::BytecodeBuilder *);OMR;MethodBuilder;0;0
addToAllBytecodeBuildersList;addToAllBytecodeBuildersList(TR::BytecodeBuilder *);OMR;MethodBuilder;0;0
addToBlockCountingWorklist;addToBlockCountingWorklist(TR::BytecodeBuilder *);OMR;MethodBuilder;0;0
addToTreeConnectingWorklist;addToTreeConnectingWorklist(TR::BytecodeBuilder *);OMR;MethodBuilder;0;0
asMethodBuilder;asMethodBuilder();OMR;MethodBuilder;0;1
buildIL;buildIL();TestCompiler;AbsDiffIfThenElseMethod;0;1
connectTrees;connectTrees();OMR;MethodBuilder;0;1
countBlocks;countBlocks();OMR;MethodBuilder;0;1
defineSymbol;defineSymbol(const char *,TR::SymbolReference *);OMR;MethodBuilder;0;0
getDefiningFile;getDefiningFile();OMR;MethodBuilder;0;0
getDefiningLine;getDefiningLine();OMR;MethodBuilder;0;0
getMethodName;getMethodName();OMR;MethodBuilder;0;0
getNextValueID;getNextValueID();OMR;MethodBuilder;0;0
getNumParameters;getNumParameters();OMR;MethodBuilder;0;0
getParameterTypes;getParameterTypes();OMR;MethodBuilder;0;0
getReturnType;getReturnType();OMR;MethodBuilder;0;0
getSignature;getSignature(TR::IlType **);OMR;MethodBuilder;0;0
getSignature;getSignature(int32_t,TR::IlType **);OMR;MethodBuilder;0;0
getSymbolName;getSymbolName(int32_t);OMR;MethodBuilder;0;0
injectIL;injectIL();OMR;MethodBuilder;0;1
isMethodBuilder;isMethodBuilder();OMR;MethodBuilder;0;1
isSymbolAnArray;isSymbolAnArray(const char *);OMR;MethodBuilder;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;MethodBuilder;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;MethodBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;MethodBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;MethodBuilder;0;0
lookupFunction;lookupFunction(const char *);OMR;MethodBuilder;0;0
lookupSymbol;lookupSymbol(const char *);OMR;MethodBuilder;0;0
operator delete;operator delete(void *,size_t);OMR;MethodBuilder;0;0
operator delete;operator delete(void *,size_t);TestCompiler;MethodBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;MethodBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;MethodBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
operator delete;operator delete(void *,TR::Region &);OMR;MethodBuilder;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;MethodBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;MethodBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;MethodBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;MethodBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;MethodBuilder;0;0
operator new;operator new(size_t,TR::Region &);OMR;MethodBuilder;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;MethodBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;MethodBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;MethodBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;MethodBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;MethodBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;MethodBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;MethodBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;MethodBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;MethodBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;MethodBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;MethodBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;MethodBuilder;0;0
operator=;operator=(const class OMR::MethodBuilder &);OMR;MethodBuilder;1;0
operator=;operator=(const class TestCompiler::MethodBuilder &);TestCompiler;MethodBuilder;1;0
operator=;operator=(class TestCompiler::MethodBuilder &&);TestCompiler;MethodBuilder;1;0
operator=;operator=(class TR::MethodBuilder &&);TR;MethodBuilder;1;0
operator=;operator=(const class TR::MethodBuilder &);TR;MethodBuilder;1;0
operator=;operator=(const class TestCompiler::AbsDiffIfThenElseMethod &);TestCompiler;AbsDiffIfThenElseMethod;1;0
operator=;operator=(class TestCompiler::AbsDiffIfThenElseMethod &&);TestCompiler;AbsDiffIfThenElseMethod;1;0
setUseBytecodeBuilders;setUseBytecodeBuilders();OMR;MethodBuilder;0;0
setVMState;setVMState(OMR::VirtualMachineState *);OMR;MethodBuilder;0;0
setupForBuildIL;setupForBuildIL();OMR;MethodBuilder;0;1
symbolDefined;symbolDefined(const char *);OMR;MethodBuilder;0;0
typeDictionary;typeDictionary();OMR;MethodBuilder;0;0
usesBytecodeBuilders;usesBytecodeBuilders();OMR;MethodBuilder;0;0
vmState;vmState();OMR;MethodBuilder;0;0
~AbsDiffIfThenElseMethod;~AbsDiffIfThenElseMethod();TestCompiler;AbsDiffIfThenElseMethod;1;1
~MethodBuilder;~MethodBuilder();OMR;MethodBuilder;0;1
~MethodBuilder;~MethodBuilder();TestCompiler;MethodBuilder;0;1
~MethodBuilder;~MethodBuilder();TR;MethodBuilder;0;1
BasicForLoopDownMethod;BasicForLoopDownMethod(const class TestCompiler::BasicForLoopDownMethod &);TestCompiler;BasicForLoopDownMethod;1;0
BasicForLoopDownMethod;BasicForLoopDownMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;BasicForLoopDownMethod;0;0
BasicForLoopDownMethod;BasicForLoopDownMethod(class TestCompiler::BasicForLoopDownMethod &&);TestCompiler;BasicForLoopDownMethod;1;0
buildIL;buildIL();TestCompiler;BasicForLoopDownMethod;0;1
operator=;operator=(const class TestCompiler::BasicForLoopDownMethod &);TestCompiler;BasicForLoopDownMethod;1;0
operator=;operator=(class TestCompiler::BasicForLoopDownMethod &&);TestCompiler;BasicForLoopDownMethod;1;0
~BasicForLoopDownMethod;~BasicForLoopDownMethod();TestCompiler;BasicForLoopDownMethod;1;1
BasicForLoopUpMethod;BasicForLoopUpMethod(class TestCompiler::BasicForLoopUpMethod &&);TestCompiler;BasicForLoopUpMethod;1;0
BasicForLoopUpMethod;BasicForLoopUpMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;BasicForLoopUpMethod;0;0
BasicForLoopUpMethod;BasicForLoopUpMethod(const class TestCompiler::BasicForLoopUpMethod &);TestCompiler;BasicForLoopUpMethod;1;0
buildIL;buildIL();TestCompiler;BasicForLoopUpMethod;0;1
operator=;operator=(const class TestCompiler::BasicForLoopUpMethod &);TestCompiler;BasicForLoopUpMethod;1;0
operator=;operator=(class TestCompiler::BasicForLoopUpMethod &&);TestCompiler;BasicForLoopUpMethod;1;0
~BasicForLoopUpMethod;~BasicForLoopUpMethod();TestCompiler;BasicForLoopUpMethod;1;1
BuilderTest;BuilderTest(const class TestCompiler::BuilderTest &);TestCompiler;BuilderTest;1;0
BuilderTest;BuilderTest();TestCompiler;BuilderTest;1;0
BuilderTest;BuilderTest(class TestCompiler::BuilderTest &&);TestCompiler;BuilderTest;1;0
TestDriver;TestDriver(class TestCompiler::TestDriver &&);TestCompiler;TestDriver;1;0
TestDriver;TestDriver(const class TestCompiler::TestDriver &);TestCompiler;TestDriver;1;0
TestDriver;TestDriver();TestCompiler;TestDriver;1;0
absDiff;absDiff(int32_t,int32_t);TestCompiler;BuilderTest;0;0
basicForLoop;basicForLoop(int32_t,int32_t,int32_t,_Bool);TestCompiler;BuilderTest;0;0
compileControlFlowTestMethods;compileControlFlowTestMethods();TestCompiler;BuilderTest;0;1
compileNestedControlFlowLoopTestMethods;compileNestedControlFlowLoopTestMethods();TestCompiler;BuilderTest;0;1
compileTestMethods;compileTestMethods();TestCompiler;BuilderTest;0;1
doWhileFib;doWhileFib(int32_t);TestCompiler;BuilderTest;0;0
doWhileIfThenElse;doWhileIfThenElse(int32_t,int32_t,int32_t,int32_t);TestCompiler;BuilderTest;0;0
doWhileWithBreak;doWhileWithBreak(int32_t);TestCompiler;BuilderTest;0;0
doWhileWithBreakAndContinue;doWhileWithBreakAndContinue(int32_t);TestCompiler;BuilderTest;0;0
doWhileWithContinue;doWhileWithContinue(int32_t);TestCompiler;BuilderTest;0;0
forLoopBreak;forLoopBreak(int32_t);TestCompiler;BuilderTest;0;0
forLoopBreakAndContinue;forLoopBreakAndContinue(int32_t);TestCompiler;BuilderTest;0;0
forLoopContinue;forLoopContinue(int32_t);TestCompiler;BuilderTest;0;0
forLoopIfThenElse;forLoopIfThenElse(int32_t,int32_t,int32_t,int32_t,_Bool);TestCompiler;BuilderTest;0;0
ifThenElseLoop;ifThenElseLoop(int32_t,int32_t);TestCompiler;BuilderTest;0;0
invokeControlFlowTests;invokeControlFlowTests();TestCompiler;BuilderTest;0;1
invokeNestedControlFlowLoopTests;invokeNestedControlFlowLoopTests();TestCompiler;BuilderTest;0;1
invokeTests;invokeTests();TestCompiler;BuilderTest;0;1
iterativeFib;iterativeFib(int32_t);TestCompiler;BuilderTest;0;0
maxIfThen;maxIfThen(int32_t,int32_t);TestCompiler;BuilderTest;0;0
operator=;operator=(class TestCompiler::BuilderTest &&);TestCompiler;BuilderTest;1;0
operator=;operator=(const class TestCompiler::BuilderTest &);TestCompiler;BuilderTest;1;0
recursiveFib;recursiveFib(int32_t);TestCompiler;BuilderTest;0;0
shootoutNestedLoop;shootoutNestedLoop(int32_t);TestCompiler;BuilderTest;0;0
subIfFalseThen;subIfFalseThen(int64_t,int64_t);TestCompiler;BuilderTest;0;0
traceEnabledLocation;traceEnabledLocation();TestCompiler;BuilderTest;0;0
whileDoFib;whileDoFib(int32_t);TestCompiler;BuilderTest;0;0
whileDoIfThenElse;whileDoIfThenElse(int32_t,int32_t,int32_t,int32_t);TestCompiler;BuilderTest;0;0
whileDoWithBreak;whileDoWithBreak(int32_t);TestCompiler;BuilderTest;0;0
whileDoWithBreakAndContinue;whileDoWithBreakAndContinue(int32_t);TestCompiler;BuilderTest;0;0
whileDoWithContinue;whileDoWithContinue(int32_t);TestCompiler;BuilderTest;0;0
~BuilderTest;~BuilderTest();TestCompiler;BuilderTest;1;0
DoWhileFibonnaciMethod;DoWhileFibonnaciMethod(class TestCompiler::DoWhileFibonnaciMethod &&);TestCompiler;DoWhileFibonnaciMethod;1;0
DoWhileFibonnaciMethod;DoWhileFibonnaciMethod(const class TestCompiler::DoWhileFibonnaciMethod &);TestCompiler;DoWhileFibonnaciMethod;1;0
DoWhileFibonnaciMethod;DoWhileFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;DoWhileFibonnaciMethod;0;0
buildIL;buildIL();TestCompiler;DoWhileFibonnaciMethod;0;1
operator=;operator=(const class TestCompiler::DoWhileFibonnaciMethod &);TestCompiler;DoWhileFibonnaciMethod;1;0
operator=;operator=(class TestCompiler::DoWhileFibonnaciMethod &&);TestCompiler;DoWhileFibonnaciMethod;1;0
~DoWhileFibonnaciMethod;~DoWhileFibonnaciMethod();TestCompiler;DoWhileFibonnaciMethod;1;1
DoWhileIfThenElseMethod;DoWhileIfThenElseMethod(class TestCompiler::DoWhileIfThenElseMethod &&);TestCompiler;DoWhileIfThenElseMethod;1;0
DoWhileIfThenElseMethod;DoWhileIfThenElseMethod(const class TestCompiler::DoWhileIfThenElseMethod &);TestCompiler;DoWhileIfThenElseMethod;1;0
DoWhileIfThenElseMethod;DoWhileIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;DoWhileIfThenElseMethod;0;0
buildIL;buildIL();TestCompiler;DoWhileIfThenElseMethod;0;1
operator=;operator=(const class TestCompiler::DoWhileIfThenElseMethod &);TestCompiler;DoWhileIfThenElseMethod;1;0
operator=;operator=(class TestCompiler::DoWhileIfThenElseMethod &&);TestCompiler;DoWhileIfThenElseMethod;1;0
~DoWhileIfThenElseMethod;~DoWhileIfThenElseMethod();TestCompiler;DoWhileIfThenElseMethod;1;1
DoWhileWithBreakAndContinueMethod;DoWhileWithBreakAndContinueMethod(class TestCompiler::DoWhileWithBreakAndContinueMethod &&);TestCompiler;DoWhileWithBreakAndContinueMethod;1;0
DoWhileWithBreakAndContinueMethod;DoWhileWithBreakAndContinueMethod(const class TestCompiler::DoWhileWithBreakAndContinueMethod &);TestCompiler;DoWhileWithBreakAndContinueMethod;1;0
DoWhileWithBreakAndContinueMethod;DoWhileWithBreakAndContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;DoWhileWithBreakAndContinueMethod;0;0
buildIL;buildIL();TestCompiler;DoWhileWithBreakAndContinueMethod;0;1
operator=;operator=(const class TestCompiler::DoWhileWithBreakAndContinueMethod &);TestCompiler;DoWhileWithBreakAndContinueMethod;1;0
operator=;operator=(class TestCompiler::DoWhileWithBreakAndContinueMethod &&);TestCompiler;DoWhileWithBreakAndContinueMethod;1;0
~DoWhileWithBreakAndContinueMethod;~DoWhileWithBreakAndContinueMethod();TestCompiler;DoWhileWithBreakAndContinueMethod;1;1
DoWhileWithBreakMethod;DoWhileWithBreakMethod(class TestCompiler::DoWhileWithBreakMethod &&);TestCompiler;DoWhileWithBreakMethod;1;0
DoWhileWithBreakMethod;DoWhileWithBreakMethod(const class TestCompiler::DoWhileWithBreakMethod &);TestCompiler;DoWhileWithBreakMethod;1;0
DoWhileWithBreakMethod;DoWhileWithBreakMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;DoWhileWithBreakMethod;0;0
buildIL;buildIL();TestCompiler;DoWhileWithBreakMethod;0;1
operator=;operator=(const class TestCompiler::DoWhileWithBreakMethod &);TestCompiler;DoWhileWithBreakMethod;1;0
operator=;operator=(class TestCompiler::DoWhileWithBreakMethod &&);TestCompiler;DoWhileWithBreakMethod;1;0
~DoWhileWithBreakMethod;~DoWhileWithBreakMethod();TestCompiler;DoWhileWithBreakMethod;1;1
DoWhileWithContinueMethod;DoWhileWithContinueMethod(class TestCompiler::DoWhileWithContinueMethod &&);TestCompiler;DoWhileWithContinueMethod;1;0
DoWhileWithContinueMethod;DoWhileWithContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;DoWhileWithContinueMethod;0;0
DoWhileWithContinueMethod;DoWhileWithContinueMethod(const class TestCompiler::DoWhileWithContinueMethod &);TestCompiler;DoWhileWithContinueMethod;1;0
buildIL;buildIL();TestCompiler;DoWhileWithContinueMethod;0;1
operator=;operator=(const class TestCompiler::DoWhileWithContinueMethod &);TestCompiler;DoWhileWithContinueMethod;1;0
operator=;operator=(class TestCompiler::DoWhileWithContinueMethod &&);TestCompiler;DoWhileWithContinueMethod;1;0
~DoWhileWithContinueMethod;~DoWhileWithContinueMethod();TestCompiler;DoWhileWithContinueMethod;1;1
ForLoopBreakAndContinueMethod;ForLoopBreakAndContinueMethod(class TestCompiler::ForLoopBreakAndContinueMethod &&);TestCompiler;ForLoopBreakAndContinueMethod;1;0
ForLoopBreakAndContinueMethod;ForLoopBreakAndContinueMethod(const class TestCompiler::ForLoopBreakAndContinueMethod &);TestCompiler;ForLoopBreakAndContinueMethod;1;0
ForLoopBreakAndContinueMethod;ForLoopBreakAndContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;ForLoopBreakAndContinueMethod;0;0
buildIL;buildIL();TestCompiler;ForLoopBreakAndContinueMethod;0;1
operator=;operator=(const class TestCompiler::ForLoopBreakAndContinueMethod &);TestCompiler;ForLoopBreakAndContinueMethod;1;0
operator=;operator=(class TestCompiler::ForLoopBreakAndContinueMethod &&);TestCompiler;ForLoopBreakAndContinueMethod;1;0
~ForLoopBreakAndContinueMethod;~ForLoopBreakAndContinueMethod();TestCompiler;ForLoopBreakAndContinueMethod;1;1
ForLoopBreakMethod;ForLoopBreakMethod(class TestCompiler::ForLoopBreakMethod &&);TestCompiler;ForLoopBreakMethod;1;0
ForLoopBreakMethod;ForLoopBreakMethod(const class TestCompiler::ForLoopBreakMethod &);TestCompiler;ForLoopBreakMethod;1;0
ForLoopBreakMethod;ForLoopBreakMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;ForLoopBreakMethod;0;0
buildIL;buildIL();TestCompiler;ForLoopBreakMethod;0;1
operator=;operator=(const class TestCompiler::ForLoopBreakMethod &);TestCompiler;ForLoopBreakMethod;1;0
operator=;operator=(class TestCompiler::ForLoopBreakMethod &&);TestCompiler;ForLoopBreakMethod;1;0
~ForLoopBreakMethod;~ForLoopBreakMethod();TestCompiler;ForLoopBreakMethod;1;1
ForLoopContinueMethod;ForLoopContinueMethod(const class TestCompiler::ForLoopContinueMethod &);TestCompiler;ForLoopContinueMethod;1;0
ForLoopContinueMethod;ForLoopContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;ForLoopContinueMethod;0;0
ForLoopContinueMethod;ForLoopContinueMethod(class TestCompiler::ForLoopContinueMethod &&);TestCompiler;ForLoopContinueMethod;1;0
buildIL;buildIL();TestCompiler;ForLoopContinueMethod;0;1
operator=;operator=(const class TestCompiler::ForLoopContinueMethod &);TestCompiler;ForLoopContinueMethod;1;0
operator=;operator=(class TestCompiler::ForLoopContinueMethod &&);TestCompiler;ForLoopContinueMethod;1;0
~ForLoopContinueMethod;~ForLoopContinueMethod();TestCompiler;ForLoopContinueMethod;1;1
ForLoopUPIfThenElseMethod;ForLoopUPIfThenElseMethod(class TestCompiler::ForLoopUPIfThenElseMethod &&);TestCompiler;ForLoopUPIfThenElseMethod;1;0
ForLoopUPIfThenElseMethod;ForLoopUPIfThenElseMethod(const class TestCompiler::ForLoopUPIfThenElseMethod &);TestCompiler;ForLoopUPIfThenElseMethod;1;0
ForLoopUPIfThenElseMethod;ForLoopUPIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;ForLoopUPIfThenElseMethod;0;0
buildIL;buildIL();TestCompiler;ForLoopUPIfThenElseMethod;0;1
operator=;operator=(class TestCompiler::ForLoopUPIfThenElseMethod &&);TestCompiler;ForLoopUPIfThenElseMethod;1;0
operator=;operator=(const class TestCompiler::ForLoopUPIfThenElseMethod &);TestCompiler;ForLoopUPIfThenElseMethod;1;0
~ForLoopUPIfThenElseMethod;~ForLoopUPIfThenElseMethod();TestCompiler;ForLoopUPIfThenElseMethod;1;1
IfThenElseLoopMethod;IfThenElseLoopMethod(class TestCompiler::IfThenElseLoopMethod &&);TestCompiler;IfThenElseLoopMethod;1;0
IfThenElseLoopMethod;IfThenElseLoopMethod(const class TestCompiler::IfThenElseLoopMethod &);TestCompiler;IfThenElseLoopMethod;1;0
IfThenElseLoopMethod;IfThenElseLoopMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;IfThenElseLoopMethod;0;0
buildIL;buildIL();TestCompiler;IfThenElseLoopMethod;0;1
operator=;operator=(const class TestCompiler::IfThenElseLoopMethod &);TestCompiler;IfThenElseLoopMethod;1;0
operator=;operator=(class TestCompiler::IfThenElseLoopMethod &&);TestCompiler;IfThenElseLoopMethod;1;0
~IfThenElseLoopMethod;~IfThenElseLoopMethod();TestCompiler;IfThenElseLoopMethod;1;1
IterativeFibonnaciMethod;IterativeFibonnaciMethod(class TestCompiler::IterativeFibonnaciMethod &&);TestCompiler;IterativeFibonnaciMethod;1;0
IterativeFibonnaciMethod;IterativeFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;IterativeFibonnaciMethod;0;0
IterativeFibonnaciMethod;IterativeFibonnaciMethod(const class TestCompiler::IterativeFibonnaciMethod &);TestCompiler;IterativeFibonnaciMethod;1;0
buildIL;buildIL();TestCompiler;IterativeFibonnaciMethod;0;1
operator=;operator=(const class TestCompiler::IterativeFibonnaciMethod &);TestCompiler;IterativeFibonnaciMethod;1;0
operator=;operator=(class TestCompiler::IterativeFibonnaciMethod &&);TestCompiler;IterativeFibonnaciMethod;1;0
~IterativeFibonnaciMethod;~IterativeFibonnaciMethod();TestCompiler;IterativeFibonnaciMethod;1;1
MaxIfThenMethod;MaxIfThenMethod(class TestCompiler::MaxIfThenMethod &&);TestCompiler;MaxIfThenMethod;1;0
MaxIfThenMethod;MaxIfThenMethod(const class TestCompiler::MaxIfThenMethod &);TestCompiler;MaxIfThenMethod;1;0
MaxIfThenMethod;MaxIfThenMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;MaxIfThenMethod;0;0
buildIL;buildIL();TestCompiler;MaxIfThenMethod;0;1
operator=;operator=(const class TestCompiler::MaxIfThenMethod &);TestCompiler;MaxIfThenMethod;1;0
operator=;operator=(class TestCompiler::MaxIfThenMethod &&);TestCompiler;MaxIfThenMethod;1;0
~MaxIfThenMethod;~MaxIfThenMethod();TestCompiler;MaxIfThenMethod;1;1
RecursiveFibonnaciMethod;RecursiveFibonnaciMethod(class TestCompiler::RecursiveFibonnaciMethod &&);TestCompiler;RecursiveFibonnaciMethod;1;0
RecursiveFibonnaciMethod;RecursiveFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;RecursiveFibonnaciMethod;0;0
RecursiveFibonnaciMethod;RecursiveFibonnaciMethod(const class TestCompiler::RecursiveFibonnaciMethod &);TestCompiler;RecursiveFibonnaciMethod;1;0
buildIL;buildIL();TestCompiler;RecursiveFibonnaciMethod;0;1
operator=;operator=(const class TestCompiler::RecursiveFibonnaciMethod &);TestCompiler;RecursiveFibonnaciMethod;1;0
operator=;operator=(class TestCompiler::RecursiveFibonnaciMethod &&);TestCompiler;RecursiveFibonnaciMethod;1;0
~RecursiveFibonnaciMethod;~RecursiveFibonnaciMethod();TestCompiler;RecursiveFibonnaciMethod;1;1
ShootoutNestedLoopMethod;ShootoutNestedLoopMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;ShootoutNestedLoopMethod;0;0
ShootoutNestedLoopMethod;ShootoutNestedLoopMethod(const class TestCompiler::ShootoutNestedLoopMethod &);TestCompiler;ShootoutNestedLoopMethod;1;0
ShootoutNestedLoopMethod;ShootoutNestedLoopMethod(class TestCompiler::ShootoutNestedLoopMethod &&);TestCompiler;ShootoutNestedLoopMethod;1;0
buildIL;buildIL();TestCompiler;ShootoutNestedLoopMethod;0;1
operator=;operator=(const class TestCompiler::ShootoutNestedLoopMethod &);TestCompiler;ShootoutNestedLoopMethod;1;0
operator=;operator=(class TestCompiler::ShootoutNestedLoopMethod &&);TestCompiler;ShootoutNestedLoopMethod;1;0
~ShootoutNestedLoopMethod;~ShootoutNestedLoopMethod();TestCompiler;ShootoutNestedLoopMethod;1;1
WhileDoFibonnaciMethod;WhileDoFibonnaciMethod(class TestCompiler::WhileDoFibonnaciMethod &&);TestCompiler;WhileDoFibonnaciMethod;1;0
WhileDoFibonnaciMethod;WhileDoFibonnaciMethod(const class TestCompiler::WhileDoFibonnaciMethod &);TestCompiler;WhileDoFibonnaciMethod;1;0
WhileDoFibonnaciMethod;WhileDoFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;WhileDoFibonnaciMethod;0;0
buildIL;buildIL();TestCompiler;WhileDoFibonnaciMethod;0;1
operator=;operator=(class TestCompiler::WhileDoFibonnaciMethod &&);TestCompiler;WhileDoFibonnaciMethod;1;0
operator=;operator=(const class TestCompiler::WhileDoFibonnaciMethod &);TestCompiler;WhileDoFibonnaciMethod;1;0
~WhileDoFibonnaciMethod;~WhileDoFibonnaciMethod();TestCompiler;WhileDoFibonnaciMethod;1;1
WhileDoIfThenElseMethod;WhileDoIfThenElseMethod(const class TestCompiler::WhileDoIfThenElseMethod &);TestCompiler;WhileDoIfThenElseMethod;1;0
WhileDoIfThenElseMethod;WhileDoIfThenElseMethod(class TestCompiler::WhileDoIfThenElseMethod &&);TestCompiler;WhileDoIfThenElseMethod;1;0
WhileDoIfThenElseMethod;WhileDoIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;WhileDoIfThenElseMethod;0;0
buildIL;buildIL();TestCompiler;WhileDoIfThenElseMethod;0;1
operator=;operator=(const class TestCompiler::WhileDoIfThenElseMethod &);TestCompiler;WhileDoIfThenElseMethod;1;0
operator=;operator=(class TestCompiler::WhileDoIfThenElseMethod &&);TestCompiler;WhileDoIfThenElseMethod;1;0
~WhileDoIfThenElseMethod;~WhileDoIfThenElseMethod();TestCompiler;WhileDoIfThenElseMethod;1;1
WhileDoWithBreakAndContinueMethod;WhileDoWithBreakAndContinueMethod(class TestCompiler::WhileDoWithBreakAndContinueMethod &&);TestCompiler;WhileDoWithBreakAndContinueMethod;1;0
WhileDoWithBreakAndContinueMethod;WhileDoWithBreakAndContinueMethod(const class TestCompiler::WhileDoWithBreakAndContinueMethod &);TestCompiler;WhileDoWithBreakAndContinueMethod;1;0
WhileDoWithBreakAndContinueMethod;WhileDoWithBreakAndContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;WhileDoWithBreakAndContinueMethod;0;0
buildIL;buildIL();TestCompiler;WhileDoWithBreakAndContinueMethod;0;1
operator=;operator=(const class TestCompiler::WhileDoWithBreakAndContinueMethod &);TestCompiler;WhileDoWithBreakAndContinueMethod;1;0
operator=;operator=(class TestCompiler::WhileDoWithBreakAndContinueMethod &&);TestCompiler;WhileDoWithBreakAndContinueMethod;1;0
~WhileDoWithBreakAndContinueMethod;~WhileDoWithBreakAndContinueMethod();TestCompiler;WhileDoWithBreakAndContinueMethod;1;1
WhileDoWithBreakMethod;WhileDoWithBreakMethod(class TestCompiler::WhileDoWithBreakMethod &&);TestCompiler;WhileDoWithBreakMethod;1;0
WhileDoWithBreakMethod;WhileDoWithBreakMethod(const class TestCompiler::WhileDoWithBreakMethod &);TestCompiler;WhileDoWithBreakMethod;1;0
WhileDoWithBreakMethod;WhileDoWithBreakMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;WhileDoWithBreakMethod;0;0
buildIL;buildIL();TestCompiler;WhileDoWithBreakMethod;0;1
operator=;operator=(class TestCompiler::WhileDoWithBreakMethod &&);TestCompiler;WhileDoWithBreakMethod;1;0
operator=;operator=(const class TestCompiler::WhileDoWithBreakMethod &);TestCompiler;WhileDoWithBreakMethod;1;0
~WhileDoWithBreakMethod;~WhileDoWithBreakMethod();TestCompiler;WhileDoWithBreakMethod;1;1
WhileDoWithContinueMethod;WhileDoWithContinueMethod(class TestCompiler::WhileDoWithContinueMethod &&);TestCompiler;WhileDoWithContinueMethod;1;0
WhileDoWithContinueMethod;WhileDoWithContinueMethod(const class TestCompiler::WhileDoWithContinueMethod &);TestCompiler;WhileDoWithContinueMethod;1;0
WhileDoWithContinueMethod;WhileDoWithContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);TestCompiler;WhileDoWithContinueMethod;0;0
buildIL;buildIL();TestCompiler;WhileDoWithContinueMethod;0;1
operator=;operator=(class TestCompiler::WhileDoWithContinueMethod &&);TestCompiler;WhileDoWithContinueMethod;1;0
operator=;operator=(const class TestCompiler::WhileDoWithContinueMethod &);TestCompiler;WhileDoWithContinueMethod;1;0
~WhileDoWithContinueMethod;~WhileDoWithContinueMethod();TestCompiler;WhileDoWithContinueMethod;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/FooBarTest.cpp
JITTest_FooBarTest_Test;JITTest_FooBarTest_Test();;JITTest_FooBarTest_Test;0;0
JITTest_FooBarTest_Test;JITTest_FooBarTest_Test(const class JITTest_FooBarTest_Test &);;JITTest_FooBarTest_Test;0;0
TestBody;TestBody();;JITTest_FooBarTest_Test;0;1
operator=;operator=(const class JITTest_FooBarTest_Test &);;JITTest_FooBarTest_Test;0;0
~JITTest_FooBarTest_Test;~JITTest_FooBarTest_Test();;JITTest_FooBarTest_Test;1;1
BarIlInjector;BarIlInjector(class TestCompiler::BarIlInjector &&);TestCompiler;BarIlInjector;1;0
BarIlInjector;BarIlInjector(const class TestCompiler::BarIlInjector &);TestCompiler;BarIlInjector;1;0
FooBarTest;FooBarTest(class TestCompiler::FooBarTest &&);TestCompiler;FooBarTest;1;0
FooBarTest;FooBarTest();TestCompiler;FooBarTest;1;0
FooBarTest;FooBarTest(const class TestCompiler::FooBarTest &);TestCompiler;FooBarTest;1;0
FooIlInjector;FooIlInjector(class TestCompiler::FooIlInjector &&);TestCompiler;FooIlInjector;1;0
FooIlInjector;FooIlInjector(const class TestCompiler::FooIlInjector &);TestCompiler;FooIlInjector;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/LimitFileTest.cpp
LimitFileTest;LimitFileTest(const class TestCompiler::LimitFileTest &);TestCompiler;LimitFileTest;1;0
LimitFileTest;LimitFileTest();TestCompiler;LimitFileTest;0;0
LimitFileTest_CheckVLogTest_Test;LimitFileTest_CheckVLogTest_Test();TestCompiler;LimitFileTest_CheckVLogTest_Test;0;0
LimitFileTest_CheckVLogTest_Test;LimitFileTest_CheckVLogTest_Test(const class TestCompiler::LimitFileTest_CheckVLogTest_Test &);TestCompiler;LimitFileTest_CheckVLogTest_Test;0;0
TestBody;TestBody();TestCompiler;LimitFileTest_CheckVLogTest_Test;0;1
checkVLogForMethod;checkVLogForMethod(const char *,const char *,const char *,int *);TestCompiler;LimitFileTest;0;0
compileTests;compileTests();TestCompiler;LimitFileTest;0;0
createAndCheckVLog;createAndCheckVLog(const char *,const char *,int *);TestCompiler;LimitFileTest;0;0
createVLog;createVLog(const char *,const char *);TestCompiler;LimitFileTest;0;0
delayUnlink;delayUnlink(const char *);TestCompiler;LimitFileTest;0;0
fileExists;fileExists(const char *);TestCompiler;LimitFileTest;0;0
generateVLog;generateVLog(const char *,const char *);TestCompiler;LimitFileTest;0;0
operator=;operator=(const class TestCompiler::LimitFileTest &);TestCompiler;LimitFileTest;1;0
operator=;operator=(const class TestCompiler::LimitFileTest_CheckVLogTest_Test &);TestCompiler;LimitFileTest_CheckVLogTest_Test;0;0
~LimitFileTest;~LimitFileTest();TestCompiler;LimitFileTest;0;1
~LimitFileTest_CheckVLogTest_Test;~LimitFileTest_CheckVLogTest_Test();TestCompiler;LimitFileTest_CheckVLogTest_Test;1;1
LimitFileTest_CreateVLogTest_Test;LimitFileTest_CreateVLogTest_Test(const class TestCompiler::LimitFileTest_CreateVLogTest_Test &);TestCompiler;LimitFileTest_CreateVLogTest_Test;0;0
LimitFileTest_CreateVLogTest_Test;LimitFileTest_CreateVLogTest_Test();TestCompiler;LimitFileTest_CreateVLogTest_Test;0;0
TestBody;TestBody();TestCompiler;LimitFileTest_CreateVLogTest_Test;0;1
operator=;operator=(const class TestCompiler::LimitFileTest_CreateVLogTest_Test &);TestCompiler;LimitFileTest_CreateVLogTest_Test;0;0
~LimitFileTest_CreateVLogTest_Test;~LimitFileTest_CreateVLogTest_Test();TestCompiler;LimitFileTest_CreateVLogTest_Test;1;1
LimitFileTest_UseLimitFileBoundTest_Test;LimitFileTest_UseLimitFileBoundTest_Test();TestCompiler;LimitFileTest_UseLimitFileBoundTest_Test;0;0
LimitFileTest_UseLimitFileBoundTest_Test;LimitFileTest_UseLimitFileBoundTest_Test(const class TestCompiler::LimitFileTest_UseLimitFileBoundTest_Test &);TestCompiler;LimitFileTest_UseLimitFileBoundTest_Test;0;0
TestBody;TestBody();TestCompiler;LimitFileTest_UseLimitFileBoundTest_Test;0;1
operator=;operator=(const class TestCompiler::LimitFileTest_UseLimitFileBoundTest_Test &);TestCompiler;LimitFileTest_UseLimitFileBoundTest_Test;0;0
~LimitFileTest_UseLimitFileBoundTest_Test;~LimitFileTest_UseLimitFileBoundTest_Test();TestCompiler;LimitFileTest_UseLimitFileBoundTest_Test;1;1
LimitFileTest_UseLimitFileRangeTest_Test;LimitFileTest_UseLimitFileRangeTest_Test();TestCompiler;LimitFileTest_UseLimitFileRangeTest_Test;0;0
LimitFileTest_UseLimitFileRangeTest_Test;LimitFileTest_UseLimitFileRangeTest_Test(const class TestCompiler::LimitFileTest_UseLimitFileRangeTest_Test &);TestCompiler;LimitFileTest_UseLimitFileRangeTest_Test;0;0
TestBody;TestBody();TestCompiler;LimitFileTest_UseLimitFileRangeTest_Test;0;1
operator=;operator=(const class TestCompiler::LimitFileTest_UseLimitFileRangeTest_Test &);TestCompiler;LimitFileTest_UseLimitFileRangeTest_Test;0;0
~LimitFileTest_UseLimitFileRangeTest_Test;~LimitFileTest_UseLimitFileRangeTest_Test();TestCompiler;LimitFileTest_UseLimitFileRangeTest_Test;1;1
LimitFileTest_UseLimitFileTest_Test;LimitFileTest_UseLimitFileTest_Test(const class TestCompiler::LimitFileTest_UseLimitFileTest_Test &);TestCompiler;LimitFileTest_UseLimitFileTest_Test;0;0
LimitFileTest_UseLimitFileTest_Test;LimitFileTest_UseLimitFileTest_Test();TestCompiler;LimitFileTest_UseLimitFileTest_Test;0;0
TestBody;TestBody();TestCompiler;LimitFileTest_UseLimitFileTest_Test;0;1
operator=;operator=(const class TestCompiler::LimitFileTest_UseLimitFileTest_Test &);TestCompiler;LimitFileTest_UseLimitFileTest_Test;0;0
~LimitFileTest_UseLimitFileTest_Test;~LimitFileTest_UseLimitFileTest_Test();TestCompiler;LimitFileTest_UseLimitFileTest_Test;1;1
Environment;Environment(const class testing::Environment &);testing;Environment;1;0
OMRTestEnv;OMRTestEnv(class TestCompiler::OMRTestEnv &&);TestCompiler;OMRTestEnv;1;0
SetUp;SetUp();testing;Environment;0;1
SetUp;SetUp();TestCompiler;OMRTestEnv;0;1
Setup;Setup();testing;Environment;0;1
TearDown;TearDown();testing;Environment;0;1
TearDown;TearDown();TestCompiler;OMRTestEnv;0;1
initialize;initialize(char *);TestCompiler;OMRTestEnv;0;0
operator=;operator=(const class testing::Environment &);testing;Environment;1;0
operator=;operator=(class TestCompiler::OMRTestEnv &&);TestCompiler;OMRTestEnv;1;0
operator=;operator=(const class TestCompiler::OMRTestEnv &);TestCompiler;OMRTestEnv;1;0
shutdown;shutdown();TestCompiler;OMRTestEnv;0;0
~Environment;~Environment();testing;Environment;0;1
~OMRTestEnv;~OMRTestEnv();TestCompiler;OMRTestEnv;1;1
OpCodesTest;OpCodesTest(const class TestCompiler::OpCodesTest &);TestCompiler;OpCodesTest;1;0
OpCodesTest;OpCodesTest();TestCompiler;OpCodesTest;1;0
OpCodesTest;OpCodesTest(class TestCompiler::OpCodesTest &&);TestCompiler;OpCodesTest;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/LogFileTest.cpp
LogFileTest;LogFileTest(const class TestCompiler::LogFileTest &);TestCompiler;LogFileTest;1;0
LogFileTest;LogFileTest();TestCompiler;LogFileTest;0;0
LogFileTest_CreateTFLogTest_Test;LogFileTest_CreateTFLogTest_Test(const class TestCompiler::LogFileTest_CreateTFLogTest_Test &);TestCompiler;LogFileTest_CreateTFLogTest_Test;0;0
LogFileTest_CreateTFLogTest_Test;LogFileTest_CreateTFLogTest_Test();TestCompiler;LogFileTest_CreateTFLogTest_Test;0;0
TestBody;TestBody();TestCompiler;LogFileTest_CreateTFLogTest_Test;0;1
compileTests;compileTests();TestCompiler;LogFileTest;0;0
operator=;operator=(const class TestCompiler::LogFileTest &);TestCompiler;LogFileTest;1;0
operator=;operator=(const class TestCompiler::LogFileTest_CreateTFLogTest_Test &);TestCompiler;LogFileTest_CreateTFLogTest_Test;0;0
~LogFileTest;~LogFileTest();TestCompiler;LogFileTest;0;1
~LogFileTest_CreateTFLogTest_Test;~LogFileTest_CreateTFLogTest_Test();TestCompiler;LogFileTest_CreateTFLogTest_Test;1;1
LogFileTest_EmptyTFLogTest_Test;LogFileTest_EmptyTFLogTest_Test();TestCompiler;LogFileTest_EmptyTFLogTest_Test;0;0
LogFileTest_EmptyTFLogTest_Test;LogFileTest_EmptyTFLogTest_Test(const class TestCompiler::LogFileTest_EmptyTFLogTest_Test &);TestCompiler;LogFileTest_EmptyTFLogTest_Test;0;0
TestBody;TestBody();TestCompiler;LogFileTest_EmptyTFLogTest_Test;0;1
operator=;operator=(const class TestCompiler::LogFileTest_EmptyTFLogTest_Test &);TestCompiler;LogFileTest_EmptyTFLogTest_Test;0;0
~LogFileTest_EmptyTFLogTest_Test;~LogFileTest_EmptyTFLogTest_Test();TestCompiler;LogFileTest_EmptyTFLogTest_Test;1;1
LogFileTest_KeywordsLogTest_Test;LogFileTest_KeywordsLogTest_Test(const class TestCompiler::LogFileTest_KeywordsLogTest_Test &);TestCompiler;LogFileTest_KeywordsLogTest_Test;0;0
LogFileTest_KeywordsLogTest_Test;LogFileTest_KeywordsLogTest_Test();TestCompiler;LogFileTest_KeywordsLogTest_Test;0;0
TestBody;TestBody();TestCompiler;LogFileTest_KeywordsLogTest_Test;0;1
operator=;operator=(const class TestCompiler::LogFileTest_KeywordsLogTest_Test &);TestCompiler;LogFileTest_KeywordsLogTest_Test;0;0
~LogFileTest_KeywordsLogTest_Test;~LogFileTest_KeywordsLogTest_Test();TestCompiler;LogFileTest_KeywordsLogTest_Test;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/OMRTestEnv.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/OptionSetTest.cpp
OptionSetTest;OptionSetTest(const class TestCompiler::OptionSetTest &);TestCompiler;OptionSetTest;1;0
OptionSetTest;OptionSetTest();TestCompiler;OptionSetTest;1;0
OptionSetTest;OptionSetTest(class TestCompiler::OptionSetTest &&);TestCompiler;OptionSetTest;1;0
OptionSetTest_UseOptionSets_Test;OptionSetTest_UseOptionSets_Test();TestCompiler;OptionSetTest_UseOptionSets_Test;0;0
OptionSetTest_UseOptionSets_Test;OptionSetTest_UseOptionSets_Test(const class TestCompiler::OptionSetTest_UseOptionSets_Test &);TestCompiler;OptionSetTest_UseOptionSets_Test;0;0
TestBody;TestBody();TestCompiler;OptionSetTest_UseOptionSets_Test;0;1
applyOptionSets;applyOptionSets(const char *,const char *,const TestCompiler::MethodSets &);TestCompiler;OptionSetTest;0;0
operator=;operator=(class TestCompiler::OptionSetTest &&);TestCompiler;OptionSetTest;1;0
operator=;operator=(const class TestCompiler::OptionSetTest &);TestCompiler;OptionSetTest;1;0
operator=;operator=(const class TestCompiler::OptionSetTest_UseOptionSets_Test &);TestCompiler;OptionSetTest_UseOptionSets_Test;0;0
~OptionSetTest;~OptionSetTest();TestCompiler;OptionSetTest;1;1
~OptionSetTest_UseOptionSets_Test;~OptionSetTest_UseOptionSets_Test();TestCompiler;OptionSetTest_UseOptionSets_Test;1;1
OptionSetTest_WithDefault_Test;OptionSetTest_WithDefault_Test(const class TestCompiler::OptionSetTest_WithDefault_Test &);TestCompiler;OptionSetTest_WithDefault_Test;0;0
OptionSetTest_WithDefault_Test;OptionSetTest_WithDefault_Test();TestCompiler;OptionSetTest_WithDefault_Test;0;0
TestBody;TestBody();TestCompiler;OptionSetTest_WithDefault_Test;0;1
operator=;operator=(const class TestCompiler::OptionSetTest_WithDefault_Test &);TestCompiler;OptionSetTest_WithDefault_Test;0;0
~OptionSetTest_WithDefault_Test;~OptionSetTest_WithDefault_Test();TestCompiler;OptionSetTest_WithDefault_Test;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/OpCodesTest.cpp
JITCrossPlatformsOpCodesTest_AddressTest_Test;JITCrossPlatformsOpCodesTest_AddressTest_Test();;JITCrossPlatformsOpCodesTest_AddressTest_Test;0;0
JITCrossPlatformsOpCodesTest_AddressTest_Test;JITCrossPlatformsOpCodesTest_AddressTest_Test(const class JITCrossPlatformsOpCodesTest_AddressTest_Test &);;JITCrossPlatformsOpCodesTest_AddressTest_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_AddressTest_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_AddressTest_Test &);;JITCrossPlatformsOpCodesTest_AddressTest_Test;0;0
~JITCrossPlatformsOpCodesTest_AddressTest_Test;~JITCrossPlatformsOpCodesTest_AddressTest_Test();;JITCrossPlatformsOpCodesTest_AddressTest_Test;1;1
JITCrossPlatformsOpCodesTest_BitwiseTest_Test;JITCrossPlatformsOpCodesTest_BitwiseTest_Test();;JITCrossPlatformsOpCodesTest_BitwiseTest_Test;0;0
JITCrossPlatformsOpCodesTest_BitwiseTest_Test;JITCrossPlatformsOpCodesTest_BitwiseTest_Test(const class JITCrossPlatformsOpCodesTest_BitwiseTest_Test &);;JITCrossPlatformsOpCodesTest_BitwiseTest_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_BitwiseTest_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_BitwiseTest_Test &);;JITCrossPlatformsOpCodesTest_BitwiseTest_Test;0;0
~JITCrossPlatformsOpCodesTest_BitwiseTest_Test;~JITCrossPlatformsOpCodesTest_BitwiseTest_Test();;JITCrossPlatformsOpCodesTest_BitwiseTest_Test;1;1
JITCrossPlatformsOpCodesTest_CompareTest_Test;JITCrossPlatformsOpCodesTest_CompareTest_Test();;JITCrossPlatformsOpCodesTest_CompareTest_Test;0;0
JITCrossPlatformsOpCodesTest_CompareTest_Test;JITCrossPlatformsOpCodesTest_CompareTest_Test(const class JITCrossPlatformsOpCodesTest_CompareTest_Test &);;JITCrossPlatformsOpCodesTest_CompareTest_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_CompareTest_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_CompareTest_Test &);;JITCrossPlatformsOpCodesTest_CompareTest_Test;0;0
~JITCrossPlatformsOpCodesTest_CompareTest_Test;~JITCrossPlatformsOpCodesTest_CompareTest_Test();;JITCrossPlatformsOpCodesTest_CompareTest_Test;1;1
JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test;JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test();;JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test;0;0
JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test;JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test(const class JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test &);;JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test &);;JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test;0;0
~JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test;~JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test();;JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test;1;1
JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test;JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test();;JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test;0;0
JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test;JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test(const class JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test &);;JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test &);;JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test;0;0
~JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test;~JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test();;JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test;1;1
JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test;JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test();;JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test;0;0
JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test;JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test(const class JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test &);;JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test &);;JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test;0;0
~JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test;~JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test();;JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test;1;1
JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test;JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test();;JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test;0;0
JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test;JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test(const class JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test &);;JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test &);;JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test;0;0
~JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test;~JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test();;JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test;1;1
JITCrossPlatformsOpCodesTest_TernaryTest_Test;JITCrossPlatformsOpCodesTest_TernaryTest_Test();;JITCrossPlatformsOpCodesTest_TernaryTest_Test;0;0
JITCrossPlatformsOpCodesTest_TernaryTest_Test;JITCrossPlatformsOpCodesTest_TernaryTest_Test(const class JITCrossPlatformsOpCodesTest_TernaryTest_Test &);;JITCrossPlatformsOpCodesTest_TernaryTest_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_TernaryTest_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_TernaryTest_Test &);;JITCrossPlatformsOpCodesTest_TernaryTest_Test;0;0
~JITCrossPlatformsOpCodesTest_TernaryTest_Test;~JITCrossPlatformsOpCodesTest_TernaryTest_Test();;JITCrossPlatformsOpCodesTest_TernaryTest_Test;1;1
JITCrossPlatformsOpCodesTest_UnaryTest_Test;JITCrossPlatformsOpCodesTest_UnaryTest_Test();;JITCrossPlatformsOpCodesTest_UnaryTest_Test;0;0
JITCrossPlatformsOpCodesTest_UnaryTest_Test;JITCrossPlatformsOpCodesTest_UnaryTest_Test(const class JITCrossPlatformsOpCodesTest_UnaryTest_Test &);;JITCrossPlatformsOpCodesTest_UnaryTest_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_UnaryTest_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_UnaryTest_Test &);;JITCrossPlatformsOpCodesTest_UnaryTest_Test;0;0
~JITCrossPlatformsOpCodesTest_UnaryTest_Test;~JITCrossPlatformsOpCodesTest_UnaryTest_Test();;JITCrossPlatformsOpCodesTest_UnaryTest_Test;1;1
JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test;JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test();;JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test;0;0
JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test;JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test(const class JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test &);;JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test;0;0
TestBody;TestBody();;JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test;0;1
operator=;operator=(const class JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test &);;JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test;0;0
~JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test;~JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test();;JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test;1;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/PPCOpCodesTest.cpp
UnsupportedOpCodesTests;UnsupportedOpCodesTests();TestCompiler;PPCOpCodesTest;0;1
compileAddressTestMethods;compileAddressTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileBitwiseTestMethods;compileBitwiseTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileCompareTestMethods;compileCompareTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileDisabledBitwiseTestMethods;compileDisabledBitwiseTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileDisabledCompareTestMethods;compileDisabledCompareTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileDisabledConvertTestMethods;compileDisabledConvertTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileDisabledDirectCallTestMethods;compileDisabledDirectCallTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileDisabledFloatArithmeticTestMethods;compileDisabledFloatArithmeticTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileDisabledIntegerArithmeticTestMethods;compileDisabledIntegerArithmeticTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileDisabledMemoryOperationTestMethods;compileDisabledMemoryOperationTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileDisabledTernaryTestMethods;compileDisabledTernaryTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileDisabledUnaryTestMethods;compileDisabledUnaryTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileMemoryOperationTestMethods;compileMemoryOperationTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileTernaryTestMethods;compileTernaryTestMethods();TestCompiler;PPCOpCodesTest;0;1
compileUnaryTestMethods;compileUnaryTestMethods();TestCompiler;PPCOpCodesTest;0;1
invokeAddressTests;invokeAddressTests();TestCompiler;PPCOpCodesTest;0;1
invokeBitwiseTests;invokeBitwiseTests();TestCompiler;PPCOpCodesTest;0;1
invokeCompareTests;invokeCompareTests();TestCompiler;PPCOpCodesTest;0;1
invokeDisabledBitwiseTests;invokeDisabledBitwiseTests();TestCompiler;PPCOpCodesTest;0;1
invokeDisabledCompareTests;invokeDisabledCompareTests();TestCompiler;PPCOpCodesTest;0;1
invokeDisabledConvertTests;invokeDisabledConvertTests();TestCompiler;PPCOpCodesTest;0;1
invokeDisabledDirectCallTest;invokeDisabledDirectCallTest();TestCompiler;PPCOpCodesTest;0;1
invokeDisabledFloatArithmeticTests;invokeDisabledFloatArithmeticTests();TestCompiler;PPCOpCodesTest;0;1
invokeDisabledIntegerArithmeticTests;invokeDisabledIntegerArithmeticTests();TestCompiler;PPCOpCodesTest;0;1
invokeDisabledMemoryOperationTests;invokeDisabledMemoryOperationTests();TestCompiler;PPCOpCodesTest;0;1
invokeDisabledTernaryTest;invokeDisabledTernaryTest();TestCompiler;PPCOpCodesTest;0;1
invokeDisabledUnaryTests;invokeDisabledUnaryTests();TestCompiler;PPCOpCodesTest;0;1
invokeMemoryOperationTests;invokeMemoryOperationTests();TestCompiler;PPCOpCodesTest;0;1
invokeTernaryTests;invokeTernaryTests();TestCompiler;PPCOpCodesTest;0;1
invokeUnaryTests;invokeUnaryTests();TestCompiler;PPCOpCodesTest;0;1
operator=;operator=(const class TestCompiler::PPCOpCodesTest &);TestCompiler;PPCOpCodesTest;1;0
operator=;operator=(class TestCompiler::PPCOpCodesTest &&);TestCompiler;PPCOpCodesTest;1;0
~PPCOpCodesTest;~PPCOpCodesTest();TestCompiler;PPCOpCodesTest;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/Qux2Test.cpp
JITQuxTest_QuxTest2_Test;JITQuxTest_QuxTest2_Test();;JITQuxTest_QuxTest2_Test;0;0
JITQuxTest_QuxTest2_Test;JITQuxTest_QuxTest2_Test(const class JITQuxTest_QuxTest2_Test &);;JITQuxTest_QuxTest2_Test;0;0
TestBody;TestBody();;JITQuxTest_QuxTest2_Test;0;1
operator=;operator=(const class JITQuxTest_QuxTest2_Test &);;JITQuxTest_QuxTest2_Test;0;0
~JITQuxTest_QuxTest2_Test;~JITQuxTest_QuxTest2_Test();;JITQuxTest_QuxTest2_Test;1;1
Qux2IlInjector;Qux2IlInjector(const class TestCompiler::Qux2IlInjector &);TestCompiler;Qux2IlInjector;1;0
Qux2IlInjector;Qux2IlInjector(class TestCompiler::Qux2IlInjector &&);TestCompiler;Qux2IlInjector;1;0
Qux2Test;Qux2Test(const class TestCompiler::Qux2Test &);TestCompiler;Qux2Test;1;0
Qux2Test;Qux2Test();TestCompiler;Qux2Test;1;0
Qux2Test;Qux2Test(class TestCompiler::Qux2Test &&);TestCompiler;Qux2Test;1;0
compileTestMethods;compileTestMethods();TestCompiler;Qux2Test;0;1
invokeTests;invokeTests();TestCompiler;Qux2Test;0;1
operator=;operator=(class TestCompiler::Qux2Test &&);TestCompiler;Qux2Test;1;0
operator=;operator=(const class TestCompiler::Qux2Test &);TestCompiler;Qux2Test;1;0
qux2;qux2(int32_t);TestCompiler;Qux2Test;0;0
~Qux2Test;~Qux2Test();TestCompiler;Qux2Test;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/SimplifierFoldAndTest.cpp
OptTestDriver;OptTestDriver();TestCompiler;OptTestDriver;1;0
OptTestDriver;OptTestDriver(const class TestCompiler::OptTestDriver &);TestCompiler;OptTestDriver;1;0
SetupStrategy;SetupStrategy();TestCompiler;OptTestDriver;0;0
SimplifierFoldAndTest;SimplifierFoldAndTest(const class TestCompiler::SimplifierFoldAndTest &);TestCompiler;SimplifierFoldAndTest;1;0
SimplifierFoldAndTest;SimplifierFoldAndTest();TestCompiler;SimplifierFoldAndTest;0;0
SimplifierFoldAndTest;SimplifierFoldAndTest(class TestCompiler::SimplifierFoldAndTest &&);TestCompiler;SimplifierFoldAndTest;1;0
SimplifierFoldAndTest_SimplifierFoldAndTest_Test;SimplifierFoldAndTest_SimplifierFoldAndTest_Test();TestCompiler;SimplifierFoldAndTest_SimplifierFoldAndTest_Test;0;0
SimplifierFoldAndTest_SimplifierFoldAndTest_Test;SimplifierFoldAndTest_SimplifierFoldAndTest_Test(const class TestCompiler::SimplifierFoldAndTest_SimplifierFoldAndTest_Test &);TestCompiler;SimplifierFoldAndTest_SimplifierFoldAndTest_Test;0;0
TestBody;TestBody();TestCompiler;SimplifierFoldAndTest_SimplifierFoldAndTest_Test;0;1
Verify;Verify();TestCompiler;OptTestDriver;0;0
VerifyAndInvoke;VerifyAndInvoke();TestCompiler;OptTestDriver;0;0
addOptimization;addOptimization(OMR::Optimizations);TestCompiler;OptTestDriver;0;0
addOptimizations;addOptimizations(const struct OptimizationStrategy *);TestCompiler;OptTestDriver;0;0
compileTestMethods;compileTestMethods();TestCompiler;OptTestDriver;0;1
invokeTests;invokeTests();TestCompiler;SimplifierFoldAndTest;0;1
makeOptimizationStrategyArray;makeOptimizationStrategyArray(struct OptimizationStrategy *);TestCompiler;OptTestDriver;0;0
operator=;operator=(const class TestCompiler::OptTestDriver &);TestCompiler;OptTestDriver;1;0
operator=;operator=(class TestCompiler::SimplifierFoldAndTest &&);TestCompiler;SimplifierFoldAndTest;1;0
operator=;operator=(const class TestCompiler::SimplifierFoldAndTest &);TestCompiler;SimplifierFoldAndTest;1;0
operator=;operator=(const class TestCompiler::SimplifierFoldAndTest_SimplifierFoldAndTest_Test &);TestCompiler;SimplifierFoldAndTest_SimplifierFoldAndTest_Test;0;0
setIlVerifier;setIlVerifier(TR::IlVerifier *);TestCompiler;OptTestDriver;0;0
setMethodInfo;setMethodInfo(TestCompiler::MethodInfo *);TestCompiler;OptTestDriver;0;0
~OptTestDriver;~OptTestDriver();TestCompiler;OptTestDriver;0;1
~SimplifierFoldAndTest;~SimplifierFoldAndTest();TestCompiler;SimplifierFoldAndTest;1;1
~SimplifierFoldAndTest_SimplifierFoldAndTest_Test;~SimplifierFoldAndTest_SimplifierFoldAndTest_Test();TestCompiler;SimplifierFoldAndTest_SimplifierFoldAndTest_Test;1;1
SimplifierFoldAndIlInjector;SimplifierFoldAndIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);TestCompiler;SimplifierFoldAndIlInjector;0;0
SimplifierFoldAndIlInjector;SimplifierFoldAndIlInjector(class TestCompiler::SimplifierFoldAndIlInjector &&);TestCompiler;SimplifierFoldAndIlInjector;1;0
SimplifierFoldAndIlInjector;SimplifierFoldAndIlInjector(const class TestCompiler::SimplifierFoldAndIlInjector &);TestCompiler;SimplifierFoldAndIlInjector;1;0
injectIL;injectIL();TestCompiler;SimplifierFoldAndIlInjector;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TestCompiler;SimplifierFoldAndIlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator delete;operator delete(void *,TR::Region &);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator delete;operator delete(void *,size_t);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new;operator new(size_t,TR::Region &);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);TestCompiler;SimplifierFoldAndIlInjector;0;0
operator=;operator=(const class TestCompiler::SimplifierFoldAndIlInjector &);TestCompiler;SimplifierFoldAndIlInjector;1;0
operator=;operator=(class TestCompiler::SimplifierFoldAndIlInjector &&);TestCompiler;SimplifierFoldAndIlInjector;1;0
~SimplifierFoldAndIlInjector;~SimplifierFoldAndIlInjector();TestCompiler;SimplifierFoldAndIlInjector;1;1
IlVerifier;IlVerifier(class TR::IlVerifier &&);TR;IlVerifier;1;0
IlVerifier;IlVerifier(const class TR::IlVerifier &);TR;IlVerifier;1;0
IlVerifier;IlVerifier();TR;IlVerifier;1;0
SimplifierFoldAndIlVerifier;SimplifierFoldAndIlVerifier(class TestCompiler::SimplifierFoldAndIlVerifier &&);TestCompiler;SimplifierFoldAndIlVerifier;1;0
SimplifierFoldAndIlVerifier;SimplifierFoldAndIlVerifier(const class TestCompiler::SimplifierFoldAndIlVerifier &);TestCompiler;SimplifierFoldAndIlVerifier;1;0
SimplifierFoldAndIlVerifier;SimplifierFoldAndIlVerifier();TestCompiler;SimplifierFoldAndIlVerifier;1;0
operator=;operator=(const class TR::IlVerifier &);TR;IlVerifier;1;0
operator=;operator=(class TR::IlVerifier &&);TR;IlVerifier;1;0
operator=;operator=(class TestCompiler::SimplifierFoldAndIlVerifier &&);TestCompiler;SimplifierFoldAndIlVerifier;1;0
operator=;operator=(const class TestCompiler::SimplifierFoldAndIlVerifier &);TestCompiler;SimplifierFoldAndIlVerifier;1;0
verify;verify(TR::ResolvedMethodSymbol *);TR;IlVerifier;0;1
verify;verify(TR::ResolvedMethodSymbol *);TestCompiler;SimplifierFoldAndIlVerifier;0;1
verifyNode;verifyNode(TR::Node *);TestCompiler;SimplifierFoldAndIlVerifier;0;0
~IlVerifier;~IlVerifier();TR;IlVerifier;1;0
~SimplifierFoldAndIlVerifier;~SimplifierFoldAndIlVerifier();TestCompiler;SimplifierFoldAndIlVerifier;1;0
DefineFunction;DefineFunction(char *,char *,char *,int32_t,TR::IlType **,TR::IlType *);TestCompiler;MethodInfo;0;0
DefineILInjector;DefineILInjector(TR::IlInjector *);TestCompiler;MethodInfo;0;0
MethodInfo;MethodInfo(class TestCompiler::MethodInfo &&);TestCompiler;MethodInfo;1;0
MethodInfo;MethodInfo(const class TestCompiler::MethodInfo &);TestCompiler;MethodInfo;1;0
MethodInfo;MethodInfo();TestCompiler;MethodInfo;0;0
ResolvedMethod;ResolvedMethod();TestCompiler;MethodInfo;0;0
SimplifierFoldAndInfo;SimplifierFoldAndInfo(const class TestCompiler::SimplifierFoldAndInfo &);TestCompiler;SimplifierFoldAndInfo;1;0
SimplifierFoldAndInfo;SimplifierFoldAndInfo(class TestCompiler::SimplifierFoldAndInfo &&);TestCompiler;SimplifierFoldAndInfo;1;0
SimplifierFoldAndInfo;SimplifierFoldAndInfo(class TestCompiler::TestDriver *);TestCompiler;SimplifierFoldAndInfo;0;0
~MethodInfo;~MethodInfo();TestCompiler;MethodInfo;1;0
~SimplifierFoldAndInfo;~SimplifierFoldAndInfo();TestCompiler;SimplifierFoldAndInfo;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/S390OpCodesTest.cpp
compileAddressTestMethods;compileAddressTestMethods();TestCompiler;S390OpCodesTest;0;1
compileBitwiseTestMethods;compileBitwiseTestMethods();TestCompiler;S390OpCodesTest;0;1
compileCompareTestMethods;compileCompareTestMethods();TestCompiler;S390OpCodesTest;0;1
compileDirectCallTestMethods;compileDirectCallTestMethods();TestCompiler;S390OpCodesTest;0;1
compileDisabledBitwiseTestMethods;compileDisabledBitwiseTestMethods();TestCompiler;S390OpCodesTest;0;1
compileDisabledCompareOpCodesTestMethods;compileDisabledCompareOpCodesTestMethods();TestCompiler;S390OpCodesTest;0;1
compileDisabledDirectCallTestMethods;compileDisabledDirectCallTestMethods();TestCompiler;S390OpCodesTest;0;1
compileDisabledIntegerArithmeticTestMethods;compileDisabledIntegerArithmeticTestMethods();TestCompiler;S390OpCodesTest;0;1
compileDisabledMemoryOperationTestMethods;compileDisabledMemoryOperationTestMethods();TestCompiler;S390OpCodesTest;0;1
compileDisabledS390ConvertToAddressOpCodesTests;compileDisabledS390ConvertToAddressOpCodesTests();TestCompiler;S390OpCodesTest;0;1
compileDisabledTernaryTestMethods;compileDisabledTernaryTestMethods();TestCompiler;S390OpCodesTest;0;1
compileDisabledUnaryTestMethods;compileDisabledUnaryTestMethods();TestCompiler;S390OpCodesTest;0;1
compileFloatArithmeticTestMethods;compileFloatArithmeticTestMethods();TestCompiler;S390OpCodesTest;0;1
compileIntegerArithmeticTestMethods;compileIntegerArithmeticTestMethods();TestCompiler;S390OpCodesTest;0;1
compileMemoryOperationTestMethods;compileMemoryOperationTestMethods();TestCompiler;S390OpCodesTest;0;1
compileTernaryTestMethods;compileTernaryTestMethods();TestCompiler;S390OpCodesTest;0;1
compileUnaryTestMethods;compileUnaryTestMethods();TestCompiler;S390OpCodesTest;0;1
invokeAddressTests;invokeAddressTests();TestCompiler;S390OpCodesTest;0;1
invokeBitwiseTests;invokeBitwiseTests();TestCompiler;S390OpCodesTest;0;1
invokeCompareTests;invokeCompareTests();TestCompiler;S390OpCodesTest;0;1
invokeDirectCallTests;invokeDirectCallTests();TestCompiler;S390OpCodesTest;0;1
invokeDisabledBitwiseTests;invokeDisabledBitwiseTests();TestCompiler;S390OpCodesTest;0;1
invokeDisabledCompareOpCodesTests;invokeDisabledCompareOpCodesTests();TestCompiler;S390OpCodesTest;0;1
invokeDisabledDirectCallTests;invokeDisabledDirectCallTests();TestCompiler;S390OpCodesTest;0;1
invokeDisabledIntegerArithmeticTests;invokeDisabledIntegerArithmeticTests();TestCompiler;S390OpCodesTest;0;1
invokeDisabledMemoryOperationTests;invokeDisabledMemoryOperationTests();TestCompiler;S390OpCodesTest;0;1
invokeDisabledS390ConvertToAddressOpCodesTests;invokeDisabledS390ConvertToAddressOpCodesTests();TestCompiler;S390OpCodesTest;0;1
invokeDisabledTernaryTests;invokeDisabledTernaryTests();TestCompiler;S390OpCodesTest;0;1
invokeDisabledUnaryTests;invokeDisabledUnaryTests();TestCompiler;S390OpCodesTest;0;1
invokeFloatArithmeticTests;invokeFloatArithmeticTests();TestCompiler;S390OpCodesTest;0;1
invokeIntegerArithmeticTests;invokeIntegerArithmeticTests();TestCompiler;S390OpCodesTest;0;1
invokeMemoryOperationTests;invokeMemoryOperationTests();TestCompiler;S390OpCodesTest;0;1
invokeTernaryTests;invokeTernaryTests();TestCompiler;S390OpCodesTest;0;1
invokeUnaryTests;invokeUnaryTests();TestCompiler;S390OpCodesTest;0;1
operator=;operator=(class TestCompiler::S390OpCodesTest &&);TestCompiler;S390OpCodesTest;1;0
operator=;operator=(const class TestCompiler::S390OpCodesTest &);TestCompiler;S390OpCodesTest;1;0
~S390OpCodesTest;~S390OpCodesTest();TestCompiler;S390OpCodesTest;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/OptTestDriver.cpp
AllIlVerifier;AllIlVerifier(class TR::AllIlVerifier &&);TR;AllIlVerifier;1;0
add;add(TR::IlVerifier *);TR;AllIlVerifier;0;0
operator=;operator=(class TR::AllIlVerifier &&);TR;AllIlVerifier;1;0
operator=;operator=(const class TR::AllIlVerifier &);TR;AllIlVerifier;1;0
verify;verify(TR::ResolvedMethodSymbol *);TR;AllIlVerifier;0;1
~AllIlVerifier;~AllIlVerifier();TR;AllIlVerifier;1;0
NoCodegenVerifier;NoCodegenVerifier(const class TR::NoCodegenVerifier &);TR;NoCodegenVerifier;1;0
NoCodegenVerifier;NoCodegenVerifier(TR::IlVerifier *);TR;NoCodegenVerifier;0;0
NoCodegenVerifier;NoCodegenVerifier(class TR::NoCodegenVerifier &&);TR;NoCodegenVerifier;1;0
getReturnCode;getReturnCode();TR;NoCodegenVerifier;0;0
hasRun;hasRun();TR;NoCodegenVerifier;0;0
operator=;operator=(class TR::NoCodegenVerifier &&);TR;NoCodegenVerifier;1;0
operator=;operator=(const class TR::NoCodegenVerifier &);TR;NoCodegenVerifier;1;0
verify;verify(TR::ResolvedMethodSymbol *);TR;NoCodegenVerifier;0;1
~NoCodegenVerifier;~NoCodegenVerifier();TR;NoCodegenVerifier;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/TestDriver.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/X86OpCodesTest.cpp
JITX86OpCodesTest_BitwiseTest_Test;JITX86OpCodesTest_BitwiseTest_Test();;JITX86OpCodesTest_BitwiseTest_Test;0;0
JITX86OpCodesTest_BitwiseTest_Test;JITX86OpCodesTest_BitwiseTest_Test(const class JITX86OpCodesTest_BitwiseTest_Test &);;JITX86OpCodesTest_BitwiseTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_BitwiseTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_BitwiseTest_Test &);;JITX86OpCodesTest_BitwiseTest_Test;0;0
~JITX86OpCodesTest_BitwiseTest_Test;~JITX86OpCodesTest_BitwiseTest_Test();;JITX86OpCodesTest_BitwiseTest_Test;1;1
JITX86OpCodesTest_CompareTest_Test;JITX86OpCodesTest_CompareTest_Test();;JITX86OpCodesTest_CompareTest_Test;0;0
JITX86OpCodesTest_CompareTest_Test;JITX86OpCodesTest_CompareTest_Test(const class JITX86OpCodesTest_CompareTest_Test &);;JITX86OpCodesTest_CompareTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_CompareTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_CompareTest_Test &);;JITX86OpCodesTest_CompareTest_Test;0;0
~JITX86OpCodesTest_CompareTest_Test;~JITX86OpCodesTest_CompareTest_Test();;JITX86OpCodesTest_CompareTest_Test;1;1
JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test;JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test();;JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test;0;0
JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test;JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test(const class JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test &);;JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test &);;JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test;0;0
~JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test;~JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test();;JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test;1;1
JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test;JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test();;JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test;0;0
JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test;JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test(const class JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test &);;JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test &);;JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test;0;0
~JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test;~JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test();;JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test;1;1
JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test;JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test();;JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test;0;0
JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test;JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test(const class JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test &);;JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test &);;JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test;0;0
~JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test;~JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test();;JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test;1;1
JITX86OpCodesTest_DISABLED_X86UnaryTest_Test;JITX86OpCodesTest_DISABLED_X86UnaryTest_Test();;JITX86OpCodesTest_DISABLED_X86UnaryTest_Test;0;0
JITX86OpCodesTest_DISABLED_X86UnaryTest_Test;JITX86OpCodesTest_DISABLED_X86UnaryTest_Test(const class JITX86OpCodesTest_DISABLED_X86UnaryTest_Test &);;JITX86OpCodesTest_DISABLED_X86UnaryTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_DISABLED_X86UnaryTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_DISABLED_X86UnaryTest_Test &);;JITX86OpCodesTest_DISABLED_X86UnaryTest_Test;0;0
~JITX86OpCodesTest_DISABLED_X86UnaryTest_Test;~JITX86OpCodesTest_DISABLED_X86UnaryTest_Test();;JITX86OpCodesTest_DISABLED_X86UnaryTest_Test;1;1
JITX86OpCodesTest_DirectCallTest_Test;JITX86OpCodesTest_DirectCallTest_Test();;JITX86OpCodesTest_DirectCallTest_Test;0;0
JITX86OpCodesTest_DirectCallTest_Test;JITX86OpCodesTest_DirectCallTest_Test(const class JITX86OpCodesTest_DirectCallTest_Test &);;JITX86OpCodesTest_DirectCallTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_DirectCallTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_DirectCallTest_Test &);;JITX86OpCodesTest_DirectCallTest_Test;0;0
~JITX86OpCodesTest_DirectCallTest_Test;~JITX86OpCodesTest_DirectCallTest_Test();;JITX86OpCodesTest_DirectCallTest_Test;1;1
JITX86OpCodesTest_FloatArithmeticTest_Test;JITX86OpCodesTest_FloatArithmeticTest_Test();;JITX86OpCodesTest_FloatArithmeticTest_Test;0;0
JITX86OpCodesTest_FloatArithmeticTest_Test;JITX86OpCodesTest_FloatArithmeticTest_Test(const class JITX86OpCodesTest_FloatArithmeticTest_Test &);;JITX86OpCodesTest_FloatArithmeticTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_FloatArithmeticTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_FloatArithmeticTest_Test &);;JITX86OpCodesTest_FloatArithmeticTest_Test;0;0
~JITX86OpCodesTest_FloatArithmeticTest_Test;~JITX86OpCodesTest_FloatArithmeticTest_Test();;JITX86OpCodesTest_FloatArithmeticTest_Test;1;1
JITX86OpCodesTest_IntegerArithmeticTest_Test;JITX86OpCodesTest_IntegerArithmeticTest_Test();;JITX86OpCodesTest_IntegerArithmeticTest_Test;0;0
JITX86OpCodesTest_IntegerArithmeticTest_Test;JITX86OpCodesTest_IntegerArithmeticTest_Test(const class JITX86OpCodesTest_IntegerArithmeticTest_Test &);;JITX86OpCodesTest_IntegerArithmeticTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_IntegerArithmeticTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_IntegerArithmeticTest_Test &);;JITX86OpCodesTest_IntegerArithmeticTest_Test;0;0
~JITX86OpCodesTest_IntegerArithmeticTest_Test;~JITX86OpCodesTest_IntegerArithmeticTest_Test();;JITX86OpCodesTest_IntegerArithmeticTest_Test;1;1
JITX86OpCodesTest_MemoryOperationTest_Test;JITX86OpCodesTest_MemoryOperationTest_Test();;JITX86OpCodesTest_MemoryOperationTest_Test;0;0
JITX86OpCodesTest_MemoryOperationTest_Test;JITX86OpCodesTest_MemoryOperationTest_Test(const class JITX86OpCodesTest_MemoryOperationTest_Test &);;JITX86OpCodesTest_MemoryOperationTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_MemoryOperationTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_MemoryOperationTest_Test &);;JITX86OpCodesTest_MemoryOperationTest_Test;0;0
~JITX86OpCodesTest_MemoryOperationTest_Test;~JITX86OpCodesTest_MemoryOperationTest_Test();;JITX86OpCodesTest_MemoryOperationTest_Test;1;1
JITX86OpCodesTest_TernaryTest_Test;JITX86OpCodesTest_TernaryTest_Test();;JITX86OpCodesTest_TernaryTest_Test;0;0
JITX86OpCodesTest_TernaryTest_Test;JITX86OpCodesTest_TernaryTest_Test(const class JITX86OpCodesTest_TernaryTest_Test &);;JITX86OpCodesTest_TernaryTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_TernaryTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_TernaryTest_Test &);;JITX86OpCodesTest_TernaryTest_Test;0;0
~JITX86OpCodesTest_TernaryTest_Test;~JITX86OpCodesTest_TernaryTest_Test();;JITX86OpCodesTest_TernaryTest_Test;1;1
JITX86OpCodesTest_UnaryTest_Test;JITX86OpCodesTest_UnaryTest_Test();;JITX86OpCodesTest_UnaryTest_Test;0;0
JITX86OpCodesTest_UnaryTest_Test;JITX86OpCodesTest_UnaryTest_Test(const class JITX86OpCodesTest_UnaryTest_Test &);;JITX86OpCodesTest_UnaryTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_UnaryTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_UnaryTest_Test &);;JITX86OpCodesTest_UnaryTest_Test;0;0
~JITX86OpCodesTest_UnaryTest_Test;~JITX86OpCodesTest_UnaryTest_Test();;JITX86OpCodesTest_UnaryTest_Test;1;1
JITX86OpCodesTest_UnsupportedOpCodesTest_Test;JITX86OpCodesTest_UnsupportedOpCodesTest_Test();;JITX86OpCodesTest_UnsupportedOpCodesTest_Test;0;0
JITX86OpCodesTest_UnsupportedOpCodesTest_Test;JITX86OpCodesTest_UnsupportedOpCodesTest_Test(const class JITX86OpCodesTest_UnsupportedOpCodesTest_Test &);;JITX86OpCodesTest_UnsupportedOpCodesTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_UnsupportedOpCodesTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_UnsupportedOpCodesTest_Test &);;JITX86OpCodesTest_UnsupportedOpCodesTest_Test;0;0
~JITX86OpCodesTest_UnsupportedOpCodesTest_Test;~JITX86OpCodesTest_UnsupportedOpCodesTest_Test();;JITX86OpCodesTest_UnsupportedOpCodesTest_Test;1;1
JITX86OpCodesTest_X86AddressTest_Test;JITX86OpCodesTest_X86AddressTest_Test();;JITX86OpCodesTest_X86AddressTest_Test;0;0
JITX86OpCodesTest_X86AddressTest_Test;JITX86OpCodesTest_X86AddressTest_Test(const class JITX86OpCodesTest_X86AddressTest_Test &);;JITX86OpCodesTest_X86AddressTest_Test;0;0
TestBody;TestBody();;JITX86OpCodesTest_X86AddressTest_Test;0;1
operator=;operator=(const class JITX86OpCodesTest_X86AddressTest_Test &);;JITX86OpCodesTest_X86AddressTest_Test;0;0
~JITX86OpCodesTest_X86AddressTest_Test;~JITX86OpCodesTest_X86AddressTest_Test();;JITX86OpCodesTest_X86AddressTest_Test;1;1
UnsupportedOpCodesTests;UnsupportedOpCodesTests();TestCompiler;X86OpCodesTest;0;1
X86OpCodesTest;X86OpCodesTest(const class TestCompiler::X86OpCodesTest &);TestCompiler;X86OpCodesTest;1;0
X86OpCodesTest;X86OpCodesTest();TestCompiler;X86OpCodesTest;1;0
X86OpCodesTest;X86OpCodesTest(class TestCompiler::X86OpCodesTest &&);TestCompiler;X86OpCodesTest;1;0
compileAddressTestMethods;compileAddressTestMethods();TestCompiler;X86OpCodesTest;0;1
compileBitwiseTestMethods;compileBitwiseTestMethods();TestCompiler;X86OpCodesTest;0;1
compileCompareTestMethods;compileCompareTestMethods();TestCompiler;X86OpCodesTest;0;1
compileDirectCallTestMethods;compileDirectCallTestMethods();TestCompiler;X86OpCodesTest;0;1
compileDisabledConvertOpCodesTest;compileDisabledConvertOpCodesTest();TestCompiler;X86OpCodesTest;0;1
compileDisabledIntegerArithmeticTestMethods;compileDisabledIntegerArithmeticTestMethods();TestCompiler;X86OpCodesTest;0;1
compileDisabledMemoryOpCodesTest;compileDisabledMemoryOpCodesTest();TestCompiler;X86OpCodesTest;0;1
compileFloatArithmeticTestMethods;compileFloatArithmeticTestMethods();TestCompiler;X86OpCodesTest;0;1
compileIntegerArithmeticTestMethods;compileIntegerArithmeticTestMethods();TestCompiler;X86OpCodesTest;0;1
compileMemoryOperationTestMethods;compileMemoryOperationTestMethods();TestCompiler;X86OpCodesTest;0;1
compileTernaryTestMethods;compileTernaryTestMethods();TestCompiler;X86OpCodesTest;0;1
compileUnaryTestMethods;compileUnaryTestMethods();TestCompiler;X86OpCodesTest;0;1
invokeAddressTests;invokeAddressTests();TestCompiler;X86OpCodesTest;0;1
invokeBitwiseTests;invokeBitwiseTests();TestCompiler;X86OpCodesTest;0;1
invokeCompareTests;invokeCompareTests();TestCompiler;X86OpCodesTest;0;1
invokeDirectCallTests;invokeDirectCallTests();TestCompiler;X86OpCodesTest;0;1
invokeDisabledConvertOpCodesTest;invokeDisabledConvertOpCodesTest();TestCompiler;X86OpCodesTest;0;1
invokeDisabledIntegerArithmeticTests;invokeDisabledIntegerArithmeticTests();TestCompiler;X86OpCodesTest;0;1
invokeDisabledMemoryOpCodesTest;invokeDisabledMemoryOpCodesTest();TestCompiler;X86OpCodesTest;0;1
invokeFloatArithmeticTests;invokeFloatArithmeticTests();TestCompiler;X86OpCodesTest;0;1
invokeIntegerArithmeticTests;invokeIntegerArithmeticTests();TestCompiler;X86OpCodesTest;0;1
invokeMemoryOperationTests;invokeMemoryOperationTests();TestCompiler;X86OpCodesTest;0;1
invokeNoHelperUnaryTests;invokeNoHelperUnaryTests();TestCompiler;X86OpCodesTest;0;1
invokeTernaryTests;invokeTernaryTests();TestCompiler;X86OpCodesTest;0;1
invokeUnaryTests;invokeUnaryTests();TestCompiler;X86OpCodesTest;0;1
operator=;operator=(const class TestCompiler::X86OpCodesTest &);TestCompiler;X86OpCodesTest;1;0
operator=;operator=(class TestCompiler::X86OpCodesTest &&);TestCompiler;X86OpCodesTest;1;0
~X86OpCodesTest;~X86OpCodesTest();TestCompiler;X86OpCodesTest;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/main.cpp
Environment;Environment();testing;Environment;1;0
OMRTestEnv;OMRTestEnv(const class TestCompiler::OMRTestEnv &);TestCompiler;OMRTestEnv;1;0
OMRTestEnv;OMRTestEnv();TestCompiler;OMRTestEnv;1;0
(Arch: AMD64): Compiling ../../../../compiler/env/FEBase.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/JitConfig.cpp
(Arch: AMD64): Compiling ../../../../compiler/control/CompilationController.cpp
CompilationStrategy;CompilationStrategy(const class TR::CompilationStrategy &);TR;CompilationStrategy;1;0
CompilationStrategy;CompilationStrategy(class TR::CompilationStrategy &&);TR;CompilationStrategy;1;0
CompilationStrategy;CompilationStrategy();TR;CompilationStrategy;1;0
DefaultCompilationStrategy;DefaultCompilationStrategy(class TR::DefaultCompilationStrategy &&);TR;DefaultCompilationStrategy;1;0
DefaultCompilationStrategy;DefaultCompilationStrategy(const class TR::DefaultCompilationStrategy &);TR;DefaultCompilationStrategy;1;0
DefaultCompilationStrategy;DefaultCompilationStrategy();TR;DefaultCompilationStrategy;0;0
adjustOptimizationPlan;adjustOptimizationPlan(struct TR_MethodToBeCompiled *,int32_t);TR;CompilationStrategy;0;1
beforeCodeGen;beforeCodeGen(class TR_OptimizationPlan *,TR::Recompilation *);TR;CompilationStrategy;0;1
enableSwitchToProfiling;enableSwitchToProfiling();TR;CompilationStrategy;0;1
enableSwitchToProfiling;enableSwitchToProfiling();TR;DefaultCompilationStrategy;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);TR;DefaultCompilationStrategy;0;0
jitPersistentFree;jitPersistentFree(void *);TR;DefaultCompilationStrategy;0;0
operator delete;operator delete(void *,size_t);TR;DefaultCompilationStrategy;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);TR;DefaultCompilationStrategy;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);TR;DefaultCompilationStrategy;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);TR;DefaultCompilationStrategy;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);TR;DefaultCompilationStrategy;0;0
operator=;operator=(class TR::CompilationStrategy &&);TR;CompilationStrategy;1;0
operator=;operator=(const class TR::CompilationStrategy &);TR;CompilationStrategy;1;0
operator=;operator=(class TR::DefaultCompilationStrategy &&);TR;DefaultCompilationStrategy;1;0
operator=;operator=(const class TR::DefaultCompilationStrategy &);TR;DefaultCompilationStrategy;1;0
postCompilation;postCompilation(class TR_OptimizationPlan *,TR::Recompilation *);TR;CompilationStrategy;0;1
processEvent;processEvent(class TR_MethodEvent *,_Bool *);TR;CompilationStrategy;0;1
processEvent;processEvent(class TR_MethodEvent *,_Bool *);TR;DefaultCompilationStrategy;0;1
shutdown;shutdown();TR;CompilationStrategy;0;1
shutdown;shutdown();TR;DefaultCompilationStrategy;0;1
~CompilationStrategy;~CompilationStrategy();TR;CompilationStrategy;1;0
~DefaultCompilationStrategy;~DefaultCompilationStrategy();TR;DefaultCompilationStrategy;1;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/FEInliner.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/Runtime.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/Trampoline.cpp
(Arch: AMD64): Compiling ../../../../compiler/control/CompileMethod.cpp
Compilation;Compilation(class TR::Compilation &);TR;Compilation;1;0
CompileIlGenRequest;CompileIlGenRequest(class TR::CompileIlGenRequest &&);TR;CompileIlGenRequest;1;0
CompileIlGenRequest;CompileIlGenRequest(const class TR::CompileIlGenRequest &);TR;CompileIlGenRequest;1;0
(Arch: AMD64): Compiling ../../../../compiler/env/OMRIO.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRKnownObjectTable.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/Globals.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRCompilerEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/PersistentAllocator.cpp
(Arch: AMD64): Compiling ../../../../compiler/ilgen/IlBuilder.cpp
AddFallThroughBuilder;AddFallThroughBuilder(TR::BytecodeBuilder *);OMR;BytecodeBuilder;0;0
AddSuccessorBuilder;AddSuccessorBuilder(TR::BytecodeBuilder **);OMR;BytecodeBuilder;0;0
AddSuccessorBuilders;AddSuccessorBuilders(uint32_t);OMR;BytecodeBuilder;0;0
BytecodeBuilder;BytecodeBuilder(class OMR::BytecodeBuilder &&);OMR;BytecodeBuilder;1;0
BytecodeBuilder;BytecodeBuilder(const class OMR::BytecodeBuilder &);OMR;BytecodeBuilder;1;0
BytecodeBuilder;BytecodeBuilder(TR::MethodBuilder *,int32_t,char *);OMR;BytecodeBuilder;0;0
BytecodeBuilder;BytecodeBuilder(TR::MethodBuilder *,int32_t,char *);TR;BytecodeBuilder;0;0
Goto;Goto(TR::BytecodeBuilder **);OMR;BytecodeBuilder;0;0
Goto;Goto(TR::BytecodeBuilder *);OMR;BytecodeBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpEqualZero;IfCmpEqualZero(TR::BytecodeBuilder **,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpEqualZero;IfCmpEqualZero(TR::BytecodeBuilder *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::BytecodeBuilder *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::BytecodeBuilder **,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);OMR;BytecodeBuilder;0;0
IlBuilder;IlBuilder(const class TR::IlBuilder &);TR;IlBuilder;1;0
IlBuilder;IlBuilder(class TR::IlBuilder &&);TR;IlBuilder;1;0
SetCurrentIlGenerator;SetCurrentIlGenerator();OMR;BytecodeBuilder;0;0
addAllSuccessorBuildersToWorklist;addAllSuccessorBuildersToWorklist();OMR;BytecodeBuilder;0;0
appendBlock;appendBlock(TR::Block *,_Bool);OMR;BytecodeBuilder;0;1
bcIndex;bcIndex();OMR;BytecodeBuilder;0;0
connectTrees;connectTrees();OMR;BytecodeBuilder;0;1
countBlocks;countBlocks();OMR;BytecodeBuilder;0;1
currentByteCodeIndex;currentByteCodeIndex();OMR;BytecodeBuilder;0;1
initialVMState;initialVMState();OMR;BytecodeBuilder;0;0
initialize;initialize(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *);TR;BytecodeBuilder;0;1
isBytecodeBuilder;isBytecodeBuilder();OMR;BytecodeBuilder;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;BytecodeBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;BytecodeBuilder;0;0
name;name();OMR;BytecodeBuilder;0;0
operator delete;operator delete(void *,TR::Region &);OMR;BytecodeBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
operator delete;operator delete(void *,size_t);OMR;BytecodeBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;BytecodeBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;BytecodeBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,TR::Region &);OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;BytecodeBuilder;0;0
operator=;operator=(class OMR::BytecodeBuilder &&);OMR;BytecodeBuilder;1;0
operator=;operator=(const class OMR::BytecodeBuilder &);OMR;BytecodeBuilder;1;0
operator=;operator=(const class TR::BytecodeBuilder &);TR;BytecodeBuilder;1;0
operator=;operator=(class TR::BytecodeBuilder &&);TR;BytecodeBuilder;1;0
propagateVMState;propagateVMState(OMR::VirtualMachineState *);OMR;BytecodeBuilder;0;0
setHandlerInfo;setHandlerInfo(uint32_t);OMR;BytecodeBuilder;0;1
setVMState;setVMState(OMR::VirtualMachineState *);OMR;BytecodeBuilder;0;0
transferVMState;transferVMState(TR::BytecodeBuilder **);OMR;BytecodeBuilder;0;0
vmState;vmState();OMR;BytecodeBuilder;0;0
~BytecodeBuilder;~BytecodeBuilder();OMR;BytecodeBuilder;1;1
~BytecodeBuilder;~BytecodeBuilder();TR;BytecodeBuilder;1;1
IlValue;IlValue(class TR::IlValue &&);TR;IlValue;1;0
IlValue;IlValue(const class TR::IlValue &);TR;IlValue;1;0
~IlValue;~IlValue();OMR;IlValue;1;0
(Arch: AMD64): Compiling ../../../../compiler/ilgen/IlValue.cpp
(Arch: AMD64): Compiling ../../../../compiler/ilgen/IlInjector.cpp
TR_IlGenerator;TR_IlGenerator();;TR_IlGenerator;1;0
(Arch: AMD64): Compiling ../../../../compiler/ilgen/MethodBuilder.cpp
BytecodeBuilder;BytecodeBuilder(class TR::BytecodeBuilder &&);TR;BytecodeBuilder;1;0
BytecodeBuilder;BytecodeBuilder(const class TR::BytecodeBuilder &);TR;BytecodeBuilder;1;0
~TR_Memory;~TR_Memory();;TR_Memory;1;0
(Arch: AMD64): Compiling ../../../../compiler/ilgen/BytecodeBuilder.cpp
(Arch: AMD64): Compiling ../../../../compiler/ilgen/TypeDictionary.cpp
IlType;IlType(const class TR::IlType &);TR;IlType;1;0
PointerType;PointerType(const class OMR::PointerType &);OMR;PointerType;1;0
PointerType;PointerType(TR::IlType *);OMR;PointerType;0;0
PointerType;PointerType(class OMR::PointerType &&);OMR;PointerType;1;0
baseType;baseType();OMR;PointerType;0;1
getName;getName();OMR;PointerType;0;0
getPrimitiveType;getPrimitiveType();OMR;PointerType;0;1
getSize;getSize();OMR;PointerType;0;1
isPointer;isPointer();OMR;PointerType;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;PointerType;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;PointerType;0;0
operator delete;operator delete(void *,size_t);OMR;PointerType;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;PointerType;0;0
operator delete;operator delete(void *,TR::Region &);OMR;PointerType;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;PointerType;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;PointerType;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;PointerType;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;PointerType;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;PointerType;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;PointerType;0;0
operator new;operator new(size_t,TR::Region &);OMR;PointerType;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;PointerType;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;PointerType;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;PointerType;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;PointerType;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
operator=;operator=(class OMR::PointerType &&);OMR;PointerType;1;0
operator=;operator=(const class OMR::PointerType &);OMR;PointerType;1;0
~PointerType;~PointerType();OMR;PointerType;1;1
PrimitiveType;PrimitiveType(const class OMR::PrimitiveType &);OMR;PrimitiveType;1;0
PrimitiveType;PrimitiveType(const char *,TR::DataType);OMR;PrimitiveType;0;0
getPrimitiveType;getPrimitiveType();OMR;PrimitiveType;0;1
getSignatureName;getSignatureName();OMR;PrimitiveType;0;1
getSize;getSize();OMR;PrimitiveType;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;PrimitiveType;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;PrimitiveType;0;0
operator delete;operator delete(void *,size_t);OMR;PrimitiveType;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;PrimitiveType;0;0
operator delete;operator delete(void *,TR::Region &);OMR;PrimitiveType;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;PrimitiveType;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;PrimitiveType;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;PrimitiveType;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;PrimitiveType;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;PrimitiveType;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;PrimitiveType;0;0
operator new;operator new(size_t,TR::Region &);OMR;PrimitiveType;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;PrimitiveType;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;PrimitiveType;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;PrimitiveType;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;PrimitiveType;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
operator=;operator=(const class OMR::PrimitiveType &);OMR;PrimitiveType;1;0
~PrimitiveType;~PrimitiveType();OMR;PrimitiveType;0;1
AddField;AddField(const char *,TR::IlType *);OMR;StructType;0;0
AddField;AddField(const char *,TR::IlType *,size_t);OMR;StructType;0;0
Close;Close();OMR;StructType;0;0
Close;Close(size_t);OMR;StructType;0;0
StructType;StructType(const char *);OMR;StructType;0;0
StructType;StructType(const class OMR::StructType &);OMR;StructType;1;0
clearSymRefs;clearSymRefs();OMR;StructType;0;0
findField;findField(const char *);OMR;StructType;0;0
getFieldOffset;getFieldOffset(const char *);OMR;StructType;0;0
getFieldSymRef;getFieldSymRef(const char *);OMR;StructType;0;0
getFieldType;getFieldType(const char *);OMR;StructType;0;0
getPrimitiveType;getPrimitiveType();OMR;StructType;0;1
getSize;getSize();OMR;StructType;0;1
isStruct;isStruct();OMR;StructType;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;StructType;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;StructType;0;0
operator delete;operator delete(void *,size_t);OMR;StructType;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;StructType;0;0
operator delete;operator delete(void *,TR::Region &);OMR;StructType;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;StructType;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;StructType;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;StructType;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;StructType;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;StructType;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;StructType;0;0
operator new;operator new(size_t,TR::Region &);OMR;StructType;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;StructType;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;StructType;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;StructType;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;StructType;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
operator=;operator=(const class OMR::StructType &);OMR;StructType;1;0
~StructType;~StructType();OMR;StructType;0;1
AddField;AddField(const char *,TR::IlType *);OMR;UnionType;0;0
Close;Close();OMR;UnionType;0;0
UnionType;UnionType(const class OMR::UnionType &);OMR;UnionType;1;0
UnionType;UnionType(const char *,class TR_Memory *);OMR;UnionType;0;0
clearSymRefs;clearSymRefs();OMR;UnionType;0;0
findField;findField(const char *);OMR;UnionType;0;0
getFieldSymRef;getFieldSymRef(const char *);OMR;UnionType;0;0
getFieldType;getFieldType(const char *);OMR;UnionType;0;0
getPrimitiveType;getPrimitiveType();OMR;UnionType;0;1
getSize;getSize();OMR;UnionType;0;1
isUnion;isUnion();OMR;UnionType;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);OMR;UnionType;0;0
jitPersistentFree;jitPersistentFree(void *);OMR;UnionType;0;0
operator delete;operator delete(void *,size_t);OMR;UnionType;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;UnionType;0;0
operator delete;operator delete(void *,TR::Region &);OMR;UnionType;0;0
operator delete[];operator delete[](void *,TR::Region &);OMR;UnionType;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;UnionType;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);OMR;UnionType;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);OMR;UnionType;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);OMR;UnionType;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;UnionType;0;0
operator new;operator new(size_t,TR::Region &);OMR;UnionType;0;0
operator new[];operator new[](size_t,TR::Region &);OMR;UnionType;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);OMR;UnionType;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);OMR;UnionType;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;UnionType;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
operator=;operator=(const class OMR::UnionType &);OMR;UnionType;1;0
~UnionType;~UnionType();OMR;UnionType;0;1
(Arch: AMD64): Compiling ../../../../compiler/runtime/Alignment.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/CodeCacheTypes.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/OMRCodeCache.cpp
CacheCriticalSection;CacheCriticalSection(const class OMR::CodeCache::CacheCriticalSection &);OMR::CodeCache;CacheCriticalSection;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment(const class OMR::CodeCacheMemorySegment &);OMR;CodeCacheMemorySegment;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment(uint8_t *,uint8_t *);OMR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment(uint8_t *,uint8_t *);TR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment(uint8_t *,size_t);OMR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment(uint8_t *,size_t);TR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment();OMR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment();TR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment(class OMR::CodeCacheMemorySegment &&);OMR;CodeCacheMemorySegment;1;0
adjustAlloc;adjustAlloc(int64_t);OMR;CodeCacheMemorySegment;0;0
free;free(TR::CodeCacheManager *);OMR;CodeCacheMemorySegment;0;0
operator new;operator new(size_t,TR::CodeCacheMemorySegment *);OMR;CodeCacheMemorySegment;0;0
segmentAlloc;segmentAlloc();OMR;CodeCacheMemorySegment;0;0
segmentBase;segmentBase();OMR;CodeCacheMemorySegment;0;0
segmentTop;segmentTop();OMR;CodeCacheMemorySegment;0;0
self;self();OMR;CodeCacheMemorySegment;0;0
setSegmentAlloc;setSegmentAlloc(uint8_t *);OMR;CodeCacheMemorySegment;0;0
setSegmentBase;setSegmentBase(uint8_t *);OMR;CodeCacheMemorySegment;0;0
setSegmentTop;setSegmentTop(uint8_t *);OMR;CodeCacheMemorySegment;0;0
(Arch: AMD64): Compiling ../../../../compiler/runtime/OMRCodeCacheManager.cpp
CodeCache;CodeCache(class TR::CodeCache &&);TR;CodeCache;1;0
CodeCache;CodeCache(const class TR::CodeCache &);TR;CodeCache;1;0
~CodeCache;~CodeCache();OMR;CodeCache;1;0
CacheListCriticalSection;CacheListCriticalSection(const class OMR::CodeCacheManager::CacheListCriticalSection &);OMR::CodeCacheManager;CacheListCriticalSection;1;0
RepositoryMonitorCriticalSection;RepositoryMonitorCriticalSection(const class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &);OMR::CodeCacheManager;RepositoryMonitorCriticalSection;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment(class TR::CodeCacheMemorySegment &&);TR;CodeCacheMemorySegment;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment(const class TR::CodeCacheMemorySegment &);TR;CodeCacheMemorySegment;1;0
~CodeCacheMemorySegment;~CodeCacheMemorySegment();OMR;CodeCacheMemorySegment;1;0
(Arch: AMD64): Compiling ../../../../compiler/runtime/OMRCodeCacheMemorySegment.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/OMRCodeCacheConfig.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/compile/Method.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/control/TestJit.cpp
CompilerEnv;CompilerEnv(const class TR::CompilerEnv &);TR;CompilerEnv;1;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/env/FrontEnd.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/ilgen/IlInjector.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/ilgen/TestIlGeneratorMethodDetails.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/runtime/TestCodeCacheManager.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/runtime/TestJitConfig.cpp
