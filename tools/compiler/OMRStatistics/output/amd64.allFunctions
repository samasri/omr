FunctionName; FunctionSignature; IsFirstOccurence; Namespace; ClassName; isImplicit; isVirtual
Cursor;Cursor(const ABitVector<Allocator> &);1;CS2::ABitVector;Cursor;0;0
Cursor;Cursor(const class CS2::ABitVector::Cursor &);0;CS2::ABitVector;Cursor;0;0
SetToFirstOne;SetToFirstOne();1;CS2::ABitVector;Cursor;0;0
SetToFirstZero;SetToFirstZero();1;CS2::ABitVector;Cursor;0;0
SetToNextOne;SetToNextOne();1;CS2::ABitVector;Cursor;0;0
SetToNextOneAfter;SetToNextOneAfter(uint32_t);1;CS2::ABitVector;Cursor;0;0
SetToNextZero;SetToNextZero();1;CS2::ABitVector;Cursor;0;0
Valid;Valid();1;CS2::ABitVector;Cursor;0;0
iterator;iterator(const ABitVector<Allocator> &,BitIndex);1;CS2::ABitVector;iterator;0;0
operator unsigned int;operator unsigned int();1;CS2::ABitVector;Cursor;0;0
operator!=;operator!=(const class CS2::ABitVector::iterator &);1;CS2::ABitVector;iterator;0;0
operator*;operator*();1;CS2::ABitVector;iterator;0;0
operator++;operator++();1;CS2::ABitVector;iterator;0;0
operator=;operator=(const class CS2::ABitVector::Cursor &);1;CS2::ABitVector;Cursor;0;0
operator==;operator==(const class CS2::ABitVector::iterator &);1;CS2::ABitVector;iterator;0;0
Name;Name(_Bool);1;CS2;Timer;0;0
Read;Read();1;CS2;BSDTimer;0;0
Reset;Reset();1;CS2;BSDTimer;0;0
Start;Start();1;CS2;BSDTimer;0;0
Stop;Stop();1;CS2;BSDTimer;0;0
UnitsText;UnitsText(_Bool);1;CS2;Timer;0;0
sprintfMetric;sprintfMetric(char *,Metric,Metric,_Bool,_Bool);1;CS2;Timer;0;0
GlobalSingletonAllocator;GlobalSingletonAllocator(const GlobalBaseAllocator &);1;TR;GlobalSingletonAllocator;0;0
GlobalSingletonAllocator;GlobalSingletonAllocator(class TR::GlobalSingletonAllocator &&);0;TR;GlobalSingletonAllocator;1;0
TRPersistentMemoryAllocator;TRPersistentMemoryAllocator(class TR_Memory *);1;TR;PersistentMemoryAllocator;0;0
TRPersistentMemoryAllocator;TRPersistentMemoryAllocator(class TR_PersistentMemory *);0;TR;PersistentMemoryAllocator;0;0
TRPersistentMemoryAllocator;TRPersistentMemoryAllocator(const class TRPersistentMemoryAllocator &);0;TR;PersistentMemoryAllocator;0;0
allocate;allocate(size_t,const char *,int);1;TR;PersistentMemoryAllocator;0;0
allocate;allocate(size_t,const char *);0;CS2;stat_allocator;0;0
createInstance;createInstance();1;TR;GlobalSingletonAllocator;0;0
deallocate;deallocate(void *,size_t,const char *,int);1;TR;PersistentMemoryAllocator;0;0
deallocate;deallocate(void *,size_t,const char *);0;CS2;stat_allocator;0;0
instance;instance();1;TR;GlobalSingletonAllocator;0;0
operator=;operator=(const class TRPersistentMemoryAllocator &);1;TR;PersistentMemoryAllocator;1;0
operator=;operator=(class TR::GlobalSingletonAllocator &&);0;TR;GlobalSingletonAllocator;1;0
reallocate;reallocate(size_t,void *,size_t,const char *,int);1;TR;PersistentMemoryAllocator;0;0
reallocate;reallocate(size_t,void *,size_t,const char *);0;CS2;stat_allocator;0;0
stat_allocator<base_allocator>;stat_allocator<base_allocator>(const base_allocator &,_Bool);1;CS2;stat_allocator;0;0
~GlobalSingletonAllocator;~GlobalSingletonAllocator();1;TR;GlobalSingletonAllocator;1;0
~TRPersistentMemoryAllocator;~TRPersistentMemoryAllocator();1;TR;PersistentMemoryAllocator;1;0
~stat_allocator<base_allocator>;~stat_allocator<base_allocator>();1;CS2;stat_allocator;0;0
AutomaticSymbol;AutomaticSymbol(class OMR::AutomaticSymbol &&);1;OMR;AutomaticSymbol;1;0
AutomaticSymbol;AutomaticSymbol(TR::DataType,uint32_t);0;OMR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol();0;OMR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol(TR::DataType);0;OMR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol(TR::DataType,uint32_t,const char *);0;OMR;AutomaticSymbol;0;0
AutomaticSymbol;AutomaticSymbol(const class OMR::AutomaticSymbol &);0;OMR;AutomaticSymbol;1;0
AutomaticSymbol;AutomaticSymbol(int32_t);0;TR;AutomaticSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(class OMR::RegisterMappedSymbol &&);1;OMR;RegisterMappedSymbol;1;0
RegisterMappedSymbol;RegisterMappedSymbol(const class OMR::RegisterMappedSymbol &);0;OMR;RegisterMappedSymbol;1;0
RegisterMappedSymbol;RegisterMappedSymbol(TR::DataType,uint32_t);0;OMR;RegisterMappedSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(TR::DataType);0;OMR;RegisterMappedSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(int32_t);0;OMR;RegisterMappedSymbol;0;0
RegisterMappedSymbol;RegisterMappedSymbol(const class TR::RegisterMappedSymbol &);0;TR;RegisterMappedSymbol;1;0
RegisterMappedSymbol;RegisterMappedSymbol(class TR::RegisterMappedSymbol &&);0;TR;RegisterMappedSymbol;1;0
Symbol;Symbol(const class OMR::Symbol &);1;OMR;Symbol;1;0
Symbol;Symbol(TR::DataType);0;OMR;Symbol;0;0
Symbol;Symbol();0;OMR;Symbol;0;0
Symbol;Symbol(TR::DataType,uint32_t);0;OMR;Symbol;0;0
Symbol;Symbol(const class TR::Symbol &);0;TR;Symbol;1;0
Symbol;Symbol(class TR::Symbol &&);0;TR;Symbol;1;0
addressIsCPIndexOfStatic;addressIsCPIndexOfStatic();1;OMR;Symbol;0;0
behaveLikeNonTemp;behaveLikeNonTemp();1;OMR;Symbol;0;0
castToAutoMarkerSymbol;castToAutoMarkerSymbol();1;OMR;Symbol;0;0
castToAutoSymbol;castToAutoSymbol();1;OMR;Symbol;0;0
castToCallSiteTableEntrySymbol;castToCallSiteTableEntrySymbol();1;OMR;Symbol;0;0
castToInternalPointerAutoSymbol;castToInternalPointerAutoSymbol();1;OMR;Symbol;0;0
castToJittedMethodSymbol;castToJittedMethodSymbol();1;OMR;Symbol;0;0
castToLabelSymbol;castToLabelSymbol();1;OMR;Symbol;0;0
castToLocalObjectSymbol;castToLocalObjectSymbol();1;OMR;Symbol;0;0
castToMethodMetaDataSymbol;castToMethodMetaDataSymbol();1;OMR;Symbol;0;0
castToMethodSymbol;castToMethodSymbol();1;OMR;Symbol;0;0
castToMethodTypeTableEntrySymbol;castToMethodTypeTableEntrySymbol();1;OMR;Symbol;0;0
castToNamedStaticSymbol;castToNamedStaticSymbol();1;OMR;Symbol;0;0
castToParmSymbol;castToParmSymbol();1;OMR;Symbol;0;0
castToRegisterMappedSymbol;castToRegisterMappedSymbol();1;OMR;Symbol;0;0
castToResolvedMethodSymbol;castToResolvedMethodSymbol();1;OMR;Symbol;0;0
castToShadowSymbol;castToShadowSymbol();1;OMR;Symbol;0;0
castToStaticSymbol;castToStaticSymbol();1;OMR;Symbol;0;0
castToVariableSizeSymbol;castToVariableSizeSymbol();1;OMR;Symbol;0;0
convertSigCharToType;convertSigCharToType(char);1;OMR;Symbol;0;0
convertTypeToNumberOfSlots;convertTypeToNumberOfSlots(TR::DataType);1;OMR;Symbol;0;0
convertTypeToSize;convertTypeToSize(TR::DataType);1;OMR;Symbol;0;0
decReferenceCount;decReferenceCount();1;OMR;AutomaticSymbol;0;0
dontEliminateStores;dontEliminateStores(TR::Compilation *,_Bool);1;OMR;Symbol;0;0
getActiveSize;getActiveSize();1;OMR;AutomaticSymbol;0;0
getArrayType;getArrayType();1;OMR;AutomaticSymbol;0;0
getAutoSymbol;getAutoSymbol();1;OMR;Symbol;0;0
getCallSiteTableEntrySymbol;getCallSiteTableEntrySymbol();1;OMR;Symbol;0;0
getClassSymbolReference;getClassSymbolReference();1;OMR;AutomaticSymbol;0;0
getDataType;getDataType();1;OMR;Symbol;0;0
getFlags;getFlags();1;OMR;Symbol;0;0
getFlags2;getFlags2();1;OMR;Symbol;0;0
getGCMapIndex;getGCMapIndex();1;OMR;RegisterMappedSymbol;0;0
getInternalPointerAutoSymbol;getInternalPointerAutoSymbol();1;OMR;Symbol;0;0
getJittedMethodSymbol;getJittedMethodSymbol();1;OMR;Symbol;0;0
getKind;getKind();1;OMR;Symbol;0;1
getLabelSymbol;getLabelSymbol();1;OMR;Symbol;0;0
getLiveLocalIndex;getLiveLocalIndex();1;OMR;RegisterMappedSymbol;0;0
getLocalIndex;getLocalIndex();1;OMR;Symbol;0;0
getLocalObjectSymbol;getLocalObjectSymbol();1;OMR;Symbol;0;0
getMethodMetaDataSymbol;getMethodMetaDataSymbol();1;OMR;Symbol;0;0
getMethodMetaDataType;getMethodMetaDataType();1;OMR;RegisterMappedSymbol;0;0
getMethodSymbol;getMethodSymbol();1;OMR;Symbol;0;0
getMethodTypeTableEntrySymbol;getMethodTypeTableEntrySymbol();1;OMR;Symbol;0;0
getName;getName();1;OMR;Symbol;0;0
getNamedShadowSymbol;getNamedShadowSymbol();1;OMR;Symbol;0;0
getNodeToFreeAfter;getNodeToFreeAfter();1;OMR;AutomaticSymbol;0;0
getNumberOfSlots;getNumberOfSlots();1;OMR;Symbol;0;0
getOffset;getOffset();1;OMR;Symbol;0;0
getParmSymbol;getParmSymbol();1;OMR;Symbol;0;0
getPinningArrayPointer;getPinningArrayPointer();1;OMR;AutomaticSymbol;0;0
getRecognizedStaticSymbol;getRecognizedStaticSymbol();1;OMR;Symbol;0;0
getReferenceCount;getReferenceCount();1;OMR;AutomaticSymbol;0;0
getReferenceSlots;getReferenceSlots();1;OMR;AutomaticSymbol;0;0
getRegisterMappedSymbol;getRegisterMappedSymbol();1;OMR;Symbol;0;0
getResolvedMethodSymbol;getResolvedMethodSymbol();1;OMR;Symbol;0;0
getRestrictedRegisterNumber;getRestrictedRegisterNumber();1;OMR;Symbol;0;0
getRoundedSize;getRoundedSize();1;OMR;Symbol;0;0
getShadowSymbol;getShadowSymbol();1;OMR;Symbol;0;0
getSize;getSize();1;OMR;Symbol;0;0
getStaticSymbol;getStaticSymbol();1;OMR;Symbol;0;0
getType;getType();1;OMR;Symbol;0;0
getVariableSizeSymbol;getVariableSizeSymbol();1;OMR;Symbol;0;0
holdsMonitoredObject;holdsMonitoredObject();1;OMR;Symbol;0;0
incReferenceCount;incReferenceCount();1;OMR;AutomaticSymbol;0;0
init;init();1;OMR;AutomaticSymbol;0;0
isAddressOfClassObject;isAddressOfClassObject();1;OMR;Symbol;0;0
isAddressTaken;isAddressTaken();1;OMR;AutomaticSymbol;0;0
isArrayShadowSymbol;isArrayShadowSymbol();1;OMR;Symbol;0;0
isArrayletShadowSymbol;isArrayletShadowSymbol();1;OMR;Symbol;0;0
isAuto;isAuto();1;OMR;Symbol;0;0
isAutoAddressTaken;isAutoAddressTaken();1;OMR;Symbol;0;0
isAutoField;isAutoField();1;OMR;Symbol;0;0
isAutoMarkerSymbol;isAutoMarkerSymbol();1;OMR;Symbol;0;0
isAutoOrParm;isAutoOrParm();1;OMR;Symbol;0;0
isCallSiteTableEntry;isCallSiteTableEntry();1;OMR;Symbol;0;0
isClassObject;isClassObject();1;OMR;Symbol;0;0
isCollectedReference;isCollectedReference();1;OMR;Symbol;0;0
isCompiledMethod;isCompiledMethod();1;OMR;Symbol;0;0
isConst;isConst();1;OMR;Symbol;0;0
isConstMethodHandle;isConstMethodHandle();1;OMR;Symbol;0;0
isConstMethodType;isConstMethodType();1;OMR;Symbol;0;0
isConstObjectRef;isConstObjectRef();1;OMR;Symbol;0;0
isConstString;isConstString();1;OMR;Symbol;0;0
isCountForRecompile;isCountForRecompile();1;OMR;Symbol;0;0
isEndInternalControlFlow;isEndInternalControlFlow();1;OMR;Symbol;0;0
isEndOfColdInstructionStream;isEndOfColdInstructionStream();1;OMR;Symbol;0;0
isFinal;isFinal();1;OMR;Symbol;0;1
isFixedObjectRef;isFixedObjectRef();1;OMR;Symbol;0;0
isGCRPatchPoint;isGCRPatchPoint();1;OMR;Symbol;0;0
isGlobalFragmentShadowSymbol;isGlobalFragmentShadowSymbol();1;OMR;Symbol;0;0
isGlobalLabel;isGlobalLabel();1;OMR;Symbol;0;0
isHasAddrTaken;isHasAddrTaken();1;OMR;Symbol;0;0
isImmutableField;isImmutableField();1;OMR;Symbol;0;0
isInGlobalRegister;isInGlobalRegister();1;OMR;Symbol;0;0
isInitializedReference;isInitializedReference();1;OMR;Symbol;0;0
isInternalControlFlowMerge;isInternalControlFlowMerge();1;OMR;Symbol;0;0
isInternalPointer;isInternalPointer();1;OMR;Symbol;0;0
isInternalPointerAuto;isInternalPointerAuto();1;OMR;Symbol;0;0
isJittedMethod;isJittedMethod();1;OMR;Symbol;0;0
isLabel;isLabel();1;OMR;Symbol;0;0
isLiveLocalIndexUninitialized;isLiveLocalIndexUninitialized();1;OMR;RegisterMappedSymbol;0;0
isLocalObject;isLocalObject();1;OMR;Symbol;0;0
isMemoryTypeShadowSymbol;isMemoryTypeShadowSymbol();1;OMR;Symbol;0;0
isMethod;isMethod();1;OMR;Symbol;0;0
isMethodMetaData;isMethodMetaData();1;OMR;Symbol;0;0
isMethodTypeTableEntry;isMethodTypeTableEntry();1;OMR;Symbol;0;0
isNamed;isNamed();1;OMR;Symbol;0;0
isNamedShadowSymbol;isNamedShadowSymbol();1;OMR;Symbol;0;0
isNonLinear;isNonLinear();1;OMR;Symbol;0;0
isNotCollected;isNotCollected();1;OMR;Symbol;0;0
isNotDataAddress;isNotDataAddress();1;OMR;Symbol;0;0
isOrdered;isOrdered();1;OMR;Symbol;0;0
isParm;isParm();1;OMR;Symbol;0;0
isParmField;isParmField();1;OMR;Symbol;0;0
isParmHasToBeOnStack;isParmHasToBeOnStack();1;OMR;Symbol;0;0
isPendingPush;isPendingPush();1;OMR;Symbol;0;0
isPinningArrayPointer;isPinningArrayPointer();1;OMR;Symbol;0;0
isPrivate;isPrivate();1;OMR;Symbol;0;1
isPythonConstantShadowSymbol;isPythonConstantShadowSymbol();1;OMR;Symbol;0;0
isPythonLocalVariableShadowSymbol;isPythonLocalVariableShadowSymbol();1;OMR;Symbol;0;0
isPythonNameShadowSymbol;isPythonNameShadowSymbol();1;OMR;Symbol;0;0
isRecognizedShadow;isRecognizedShadow();1;OMR;Symbol;0;0
isRecognizedStatic;isRecognizedStatic();1;OMR;Symbol;0;0
isRecompilationCounter;isRecompilationCounter();1;OMR;Symbol;0;0
isReferenced;isReferenced();1;OMR;Symbol;0;0
isReferencedParameter;isReferencedParameter();1;OMR;Symbol;0;0
isRegisterMappedSymbol;isRegisterMappedSymbol();1;OMR;Symbol;0;0
isRegularShadow;isRegularShadow();1;OMR;Symbol;0;0
isReinstatedReceiver;isReinstatedReceiver();1;OMR;Symbol;0;0
isRelativeLabel;isRelativeLabel();1;OMR;Symbol;0;0
isResolvedMethod;isResolvedMethod();1;OMR;Symbol;0;0
isShadow;isShadow();1;OMR;Symbol;0;0
isSingleUse;isSingleUse();1;OMR;AutomaticSymbol;0;0
isSlotSharedByRefAndNonRef;isSlotSharedByRefAndNonRef();1;OMR;Symbol;0;0
isSpillTempAuto;isSpillTempAuto();1;OMR;Symbol;0;0
isSpillTempLoaded;isSpillTempLoaded();1;OMR;Symbol;0;0
isStartInternalControlFlow;isStartInternalControlFlow();1;OMR;Symbol;0;0
isStartOfColdInstructionStream;isStartOfColdInstructionStream();1;OMR;Symbol;0;0
isStartPC;isStartPC();1;OMR;Symbol;0;0
isStatic;isStatic();1;OMR;Symbol;0;1
isStaticField;isStaticField();1;OMR;Symbol;0;0
isSyncVolatile;isSyncVolatile();1;OMR;Symbol;0;0
isThisTempForObjectCtor;isThisTempForObjectCtor();1;OMR;Symbol;0;0
isUnsafeShadowSymbol;isUnsafeShadowSymbol();1;OMR;Symbol;0;0
isVariableSizeSymbol;isVariableSizeSymbol();1;OMR;Symbol;0;0
isVolatile;isVolatile();1;OMR;Symbol;0;0
isWeakSymbol;isWeakSymbol();1;OMR;Symbol;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Symbol;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Symbol;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Symbol;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Symbol;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Symbol;0;0
operator delete;operator delete(void *,size_t);0;OMR;Symbol;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Symbol;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Symbol;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;Symbol;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Symbol;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Symbol;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Symbol;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Symbol;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Symbol;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Symbol;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Symbol;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Symbol;0;0
operator=;operator=(const class OMR::Symbol &);1;OMR;Symbol;1;0
operator=;operator=(class TR::Symbol &&);0;TR;Symbol;1;0
operator=;operator=(const class TR::Symbol &);0;TR;Symbol;1;0
operator=;operator=(const class OMR::RegisterMappedSymbol &);0;OMR;RegisterMappedSymbol;1;0
operator=;operator=(class OMR::RegisterMappedSymbol &&);0;OMR;RegisterMappedSymbol;1;0
operator=;operator=(class TR::RegisterMappedSymbol &&);0;TR;RegisterMappedSymbol;1;0
operator=;operator=(const class TR::RegisterMappedSymbol &);0;TR;RegisterMappedSymbol;1;0
operator=;operator=(class OMR::AutomaticSymbol &&);0;OMR;AutomaticSymbol;1;0
operator=;operator=(const class OMR::AutomaticSymbol &);0;OMR;AutomaticSymbol;1;0
operator=;operator=(class TR::AutomaticSymbol &&);0;TR;AutomaticSymbol;1;0
operator=;operator=(const class TR::AutomaticSymbol &);0;TR;AutomaticSymbol;1;0
resetReferencedParameter;resetReferencedParameter();1;OMR;Symbol;0;0
resetVolatile;resetVolatile();1;OMR;Symbol;0;0
self;self();1;OMR;Symbol;0;0
setActiveSize;setActiveSize(uint32_t);1;OMR;AutomaticSymbol;0;0
setAddressIsCPIndexOfStatic;setAddressIsCPIndexOfStatic(_Bool);1;OMR;Symbol;0;0
setAddressOfClassObject;setAddressOfClassObject();1;OMR;Symbol;0;0
setArrayShadowSymbol;setArrayShadowSymbol();1;OMR;Symbol;0;0
setArrayletShadowSymbol;setArrayletShadowSymbol();1;OMR;Symbol;0;0
setAutoAddressTaken;setAutoAddressTaken();1;OMR;Symbol;0;0
setAutoMarkerSymbol;setAutoMarkerSymbol();1;OMR;Symbol;0;0
setBehaveLikeNonTemp;setBehaveLikeNonTemp();1;OMR;Symbol;0;0
setCallSiteTableEntry;setCallSiteTableEntry();1;OMR;Symbol;0;0
setClassObject;setClassObject();1;OMR;Symbol;0;0
setClassSymbolReference;setClassSymbolReference(TR::SymbolReference *);1;OMR;AutomaticSymbol;0;0
setCompiledMethod;setCompiledMethod();1;OMR;Symbol;0;0
setConst;setConst();1;OMR;Symbol;0;0
setConstMethodHandle;setConstMethodHandle();1;OMR;Symbol;0;0
setConstMethodType;setConstMethodType();1;OMR;Symbol;0;0
setConstString;setConstString();1;OMR;Symbol;0;0
setCountForRecompile;setCountForRecompile();1;OMR;Symbol;0;0
setDataType;setDataType(TR::DataType);1;OMR;Symbol;0;0
setEndInternalControlFlow;setEndInternalControlFlow();1;OMR;Symbol;0;0
setEndOfColdInstructionStream;setEndOfColdInstructionStream();1;OMR;Symbol;0;0
setFinal;setFinal();1;OMR;Symbol;0;0
setFlagValue;setFlagValue(uint32_t,_Bool);1;OMR;Symbol;0;0
setGCMapIndex;setGCMapIndex(int32_t);1;OMR;RegisterMappedSymbol;0;0
setGCRPatchPoint;setGCRPatchPoint();1;OMR;Symbol;0;0
setGlobalFragmentShadowSymbol;setGlobalFragmentShadowSymbol();1;OMR;Symbol;0;0
setGlobalLabel;setGlobalLabel();1;OMR;Symbol;0;0
setHasAddrTaken;setHasAddrTaken();1;OMR;Symbol;0;0
setHoldsMonitoredObject;setHoldsMonitoredObject();1;OMR;Symbol;0;0
setImmutableField;setImmutableField();1;OMR;Symbol;0;0
setInitializedReference;setInitializedReference();1;OMR;Symbol;0;0
setInternalControlFlowMerge;setInternalControlFlowMerge();1;OMR;Symbol;0;0
setInternalPointer;setInternalPointer();1;OMR;Symbol;0;0
setIsAddressTaken;setIsAddressTaken(_Bool);1;OMR;AutomaticSymbol;0;0
setIsInGlobalRegister;setIsInGlobalRegister(_Bool);1;OMR;Symbol;0;0
setIsLabel;setIsLabel();1;OMR;Symbol;0;0
setIsPendingPush;setIsPendingPush();1;OMR;Symbol;0;0
setIsReferenced;setIsReferenced(_Bool);1;OMR;AutomaticSymbol;0;0
setIsSingleUse;setIsSingleUse(_Bool);1;OMR;AutomaticSymbol;0;0
setLiveLocalIndex;setLiveLocalIndex(uint16_t,class TR_FrontEnd *);1;OMR;RegisterMappedSymbol;0;0
setLiveLocalIndexUninitialized;setLiveLocalIndexUninitialized();1;OMR;RegisterMappedSymbol;0;0
setLocalIndex;setLocalIndex(uint16_t);1;OMR;Symbol;0;0
setLocalObject;setLocalObject();1;OMR;Symbol;0;0
setMemoryTypeShadowSymbol;setMemoryTypeShadowSymbol();1;OMR;Symbol;0;0
setMethodMetaDataType;setMethodMetaDataType(enum TR_MethodMetaDataType);1;OMR;RegisterMappedSymbol;0;0
setMethodTypeTableEntry;setMethodTypeTableEntry();1;OMR;Symbol;0;0
setName;setName(const char *);1;OMR;Symbol;0;0
setNamedShadowSymbol;setNamedShadowSymbol();1;OMR;Symbol;0;0
setNodeToFreeAfter;setNodeToFreeAfter(TR::Node *);1;OMR;AutomaticSymbol;0;0
setNonLinear;setNonLinear();1;OMR;Symbol;0;0
setNotCollected;setNotCollected();1;OMR;Symbol;0;0
setNotDataAddress;setNotDataAddress();1;OMR;Symbol;0;0
setOffset;setOffset(int32_t);1;OMR;RegisterMappedSymbol;0;0
setOrdered;setOrdered();1;OMR;Symbol;0;0
setParmHasToBeOnStack;setParmHasToBeOnStack();1;OMR;Symbol;0;0
setPinningArrayPointer;setPinningArrayPointer();1;OMR;Symbol;0;0
setPinningArrayPointer;setPinningArrayPointer(TR::AutomaticSymbol *);0;OMR;AutomaticSymbol;0;0
setPrivate;setPrivate();1;OMR;Symbol;0;0
setPythonConstantShadowSymbol;setPythonConstantShadowSymbol();1;OMR;Symbol;0;0
setPythonLocalVariableShadowSymbol;setPythonLocalVariableShadowSymbol();1;OMR;Symbol;0;0
setPythonNameShadowSymbol;setPythonNameShadowSymbol();1;OMR;Symbol;0;0
setRecompilationCounter;setRecompilationCounter();1;OMR;Symbol;0;0
setReferenceCount;setReferenceCount(rcount_t);1;OMR;AutomaticSymbol;0;0
setReferenceSlots;setReferenceSlots(int32_t *);1;OMR;AutomaticSymbol;0;0
setReferencedParameter;setReferencedParameter();1;OMR;Symbol;0;0
setReinstatedReceiver;setReinstatedReceiver();1;OMR;Symbol;0;0
setRelativeLabel;setRelativeLabel();1;OMR;Symbol;0;0
setSize;setSize(size_t);1;OMR;Symbol;0;0
setSlotSharedByRefAndNonRef;setSlotSharedByRefAndNonRef(_Bool);1;OMR;Symbol;0;0
setSpillTempAuto;setSpillTempAuto();1;OMR;Symbol;0;0
setSpillTempLoaded;setSpillTempLoaded();1;OMR;Symbol;0;0
setStartInternalControlFlow;setStartInternalControlFlow();1;OMR;Symbol;0;0
setStartOfColdInstructionStream;setStartOfColdInstructionStream();1;OMR;Symbol;0;0
setStartPC;setStartPC();1;OMR;Symbol;0;0
setThisTempForObjectCtor;setThisTempForObjectCtor();1;OMR;Symbol;0;0
setUninitializedReference;setUninitializedReference();1;OMR;Symbol;0;0
setUnsafeShadowSymbol;setUnsafeShadowSymbol();1;OMR;Symbol;0;0
setVariableSizeSymbol;setVariableSizeSymbol();1;OMR;Symbol;0;0
setVolatile;setVolatile();1;OMR;Symbol;0;0
~AutomaticSymbol;~AutomaticSymbol();1;OMR;AutomaticSymbol;1;1
~RegisterMappedSymbol;~RegisterMappedSymbol();1;OMR;RegisterMappedSymbol;1;1
~Symbol;~Symbol();1;OMR;Symbol;0;1
Block;Block(const class OMR::Block &);1;OMR;Block;1;0
Block;Block(TR::TreeTop *,TR::TreeTop *,class TR_Memory *);0;OMR;Block;0;0
Block;Block(class TR_Memory *);0;OMR;Block;0;0
Block;Block(TR::Block &,TR::TreeTop *,TR::TreeTop *);0;OMR;Block;0;0
Block;Block(class TR::Block &,TR::TreeTop *,TR::TreeTop *);0;TR;Block;0;0
Block;Block(class TR::Block &&);0;TR;Block;1;0
CFGNode;CFGNode(class TR::CFGNode &&);1;TR;CFGNode;1;0
CFGNode;CFGNode(int32_t,TR::Region &);0;TR;CFGNode;0;0
CFGNode;CFGNode(int32_t,class TR_Memory *);0;TR;CFGNode;0;0
CFGNode;CFGNode(class TR_Memory *);0;TR;CFGNode;0;0
CFGNode;CFGNode(TR::Region &);0;TR;CFGNode;0;0
CFGNode;CFGNode(const class TR::CFGNode &);0;TR;CFGNode;1;0
TR_Link1<T>;TR_Link1<T>(T *);1;TR;Link1;0;0
addExceptionPredecessor;addExceptionPredecessor(class TR::CFGEdge *,enum TR_AllocationKind);1;TR;CFGNode;0;0
addExceptionPredecessor;addExceptionPredecessor(class TR::CFGEdge *);0;TR;CFGNode;0;0
addExceptionRangeForSnippet;addExceptionRangeForSnippet(uint32_t,uint32_t);1;OMR;Block;0;0
addExceptionSuccessor;addExceptionSuccessor(class TR::CFGEdge *,enum TR_AllocationKind);1;TR;CFGNode;0;0
addExceptionSuccessor;addExceptionSuccessor(class TR::CFGEdge *);0;TR;CFGNode;0;0
addPredecessor;addPredecessor(class TR::CFGEdge *);1;TR;CFGNode;0;0
addPredecessor;addPredecessor(class TR::CFGEdge *,enum TR_AllocationKind);0;TR;CFGNode;0;0
addSuccessor;addSuccessor(class TR::CFGEdge *);1;TR;CFGNode;0;0
addSuccessor;addSuccessor(class TR::CFGEdge *,enum TR_AllocationKind);0;TR;CFGNode;0;0
append;append(TR::TreeTop *);1;OMR;Block;0;0
asBlock;asBlock();1;TR;CFGNode;0;1
asStructureSubGraphNode;asStructureSubGraphNode();1;TR;CFGNode;0;1
branchesBackwards;branchesBackwards();1;OMR;Block;0;0
breakFallThrough;breakFallThrough(TR::Compilation *,TR::Block *,TR::Block *);1;OMR;Block;0;0
canCatchExceptions;canCatchExceptions(uint32_t);1;OMR;Block;0;0
canFallThroughToNextBlock;canFallThroughToNextBlock();1;OMR;Block;0;0
changeBranchDestination;changeBranchDestination(TR::TreeTop *,TR::CFG *);1;OMR;Block;0;0
clearGlobalRegisters;clearGlobalRegisters();1;OMR;Block;0;0
collectReferencedAutoSymRefsIn;collectReferencedAutoSymRefsIn(TR::Compilation *,TR::Node *,class TR_BitVector *,vcount_t);1;OMR;Block;0;0
collectReferencedAutoSymRefsIn;collectReferencedAutoSymRefsIn(TR::Compilation *,class TR_BitVector *,vcount_t);0;OMR;Block;0;0
containsCall;containsCall();1;OMR;Block;0;0
createConditionalBlocksBeforeTree;createConditionalBlocksBeforeTree(TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::CFG *,_Bool,_Bool);1;OMR;Block;0;0
createConditionalSideExitBeforeTree;createConditionalSideExitBeforeTree(TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::CFG *,_Bool);1;OMR;Block;0;0
createEmptyBlock;createEmptyBlock(TR::Compilation *,int32_t,TR::Block *);1;OMR;Block;0;0
createEmptyBlock;createEmptyBlock(TR::Node *,TR::Compilation *,int32_t,TR::Block *);0;OMR;Block;0;0
denormalizeFrequency;denormalizeFrequency(int32_t);1;TR;CFGNode;0;0
denormalizedFrequency;denormalizedFrequency(int32_t,int32_t);1;TR;CFGNode;0;0
doNotProfile;doNotProfile();1;OMR;Block;0;0
doesNotNeedLabelAtStart;doesNotNeedLabelAtStart();1;OMR;Block;0;0
endsInBranch;endsInBranch();1;OMR;Block;0;0
endsInGoto;endsInGoto();1;OMR;Block;0;0
ensureCatchBlockExtensionExists;ensureCatchBlockExtensionExists(TR::Compilation *);1;OMR;Block;0;0
findFirstReference;findFirstReference(TR::Symbol *,vcount_t);1;OMR;Block;0;0
findVirtualGuardBlock;findVirtualGuardBlock(TR::CFG *);1;OMR;Block;0;0
firstBlockInLoop;firstBlockInLoop();1;OMR;Block;0;0
fromBlockGetter;fromBlockGetter(class TR::CFGEdge *);1;TR;CFGNode;0;0
getBackwardTraversalIndex;getBackwardTraversalIndex();1;TR;CFGNode;0;0
getBlockBCIndex;getBlockBCIndex();1;OMR;Block;0;0
getBlockSize;getBlockSize();1;OMR;Block;0;0
getByteCodeInfo;getByteCodeInfo();1;OMR;Block;0;0
getCatchBlockExtension;getCatchBlockExtension();1;OMR;Block;0;0
getCatchType;getCatchType();1;OMR;Block;0;0
getCommonParentStructureIfExists;getCommonParentStructureIfExists(TR::Block *,TR::CFG *);1;OMR;Block;0;0
getDebugCounters;getDebugCounters();1;OMR;Block;0;0
getEdge;getEdge(class TR::CFGNode *);1;TR;CFGNode;0;0
getEntry;getEntry();1;OMR;Block;0;0
getExceptingTree;getExceptingTree();1;OMR;Block;0;0
getExceptionClass;getExceptionClass();1;OMR;Block;0;0
getExceptionClassNameChars;getExceptionClassNameChars();1;OMR;Block;0;0
getExceptionClassNameLength;getExceptionClassNameLength();1;OMR;Block;0;0
getExceptionPredecessorEdge;getExceptionPredecessorEdge(class TR::CFGNode *);1;TR;CFGNode;0;0
getExceptionPredecessors;getExceptionPredecessors();1;TR;CFGNode;0;0
getExceptionSuccessorEdge;getExceptionSuccessorEdge(class TR::CFGNode *);1;TR;CFGNode;0;0
getExceptionSuccessors;getExceptionSuccessors();1;TR;CFGNode;0;0
getExit;getExit();1;OMR;Block;0;0
getFallThroughEdgeInEBB;getFallThroughEdgeInEBB();1;OMR;Block;0;0
getFirstInstruction;getFirstInstruction();1;OMR;Block;0;0
getFirstRealTreeTop;getFirstRealTreeTop();1;OMR;Block;0;0
getFirstSnippetBoundaries;getFirstSnippetBoundaries();1;OMR;Block;0;0
getForwardTraversalIndex;getForwardTraversalIndex();1;TR;CFGNode;0;0
getFrequency;getFrequency();1;TR;CFGNode;0;0
getGlobalNormalizedFrequency;getGlobalNormalizedFrequency(TR::CFG *);1;OMR;Block;0;0
getGlobalRegisters;getGlobalRegisters(TR::Compilation *);1;OMR;Block;0;0
getHandlerIndex;getHandlerIndex();1;OMR;Block;0;0
getInlineDepth;getInlineDepth();1;OMR;Block;0;0
getInstructionBoundaries;getInstructionBoundaries();1;OMR;Block;0;0
getJ9EstimateCodeSizeMethod;getJ9EstimateCodeSizeMethod();1;OMR;Block;0;0
getLastInstruction;getLastInstruction();1;OMR;Block;0;0
getLastNonControlFlowTreeTop;getLastNonControlFlowTreeTop();1;OMR;Block;0;0
getLastRealTreeTop;getLastRealTreeTop();1;OMR;Block;0;0
getLiveLocals;getLiveLocals();1;OMR;Block;0;0
getMaxColdFrequency;getMaxColdFrequency(TR::Block *,TR::Block *);1;OMR;Block;0;0
getMinColdFrequency;getMinColdFrequency(TR::Block *,TR::Block *);1;OMR;Block;0;0
getName;getName(class TR_Debug *);1;OMR;Block;0;0
getNestingDepth;getNestingDepth();1;OMR;Block;0;0
getNext;getNext();1;TR;Link1;0;0
getNextBlock;getNextBlock();1;OMR;Block;0;0
getNextExtendedBlock;getNextExtendedBlock();1;OMR;Block;0;0
getNormalizedFrequency;getNormalizedFrequency(TR::CFG *);1;OMR;Block;0;0
getNumber;getNumber();1;TR;CFGNode;0;0
getNumberOfRealTreeTops;getNumberOfRealTreeTops();1;OMR;Block;0;0
getOwningMethod;getOwningMethod();1;OMR;Block;0;0
getParentStructureIfExists;getParentStructureIfExists(TR::CFG *);1;OMR;Block;0;0
getPartialFlags;getPartialFlags();1;OMR;Block;0;0
getPredecessorEdge;getPredecessorEdge(class TR::CFGNode *);1;TR;CFGNode;0;0
getPredecessors;getPredecessors();1;TR;CFGNode;0;0
getPrevBlock;getPrevBlock();1;OMR;Block;0;0
getRegisterSaveDescriptionBits;getRegisterSaveDescriptionBits();1;OMR;Block;0;0
getScaledSpecializedFrequency;getScaledSpecializedFrequency(int32_t);1;OMR;Block;0;0
getStructureOf;getStructureOf();1;OMR;Block;0;0
getSuccessorEdge;getSuccessorEdge(class TR::CFGNode *);1;TR;CFGNode;0;0
getSuccessors;getSuccessors();1;TR;CFGNode;0;0
getUnrollFactor;getUnrollFactor();1;OMR;Block;0;0
getVisitCount;getVisitCount();1;TR;CFGNode;0;0
hasBeenVisited;hasBeenVisited();1;OMR;Block;0;0
hasCallToSuperCold;hasCallToSuperCold();1;OMR;Block;0;0
hasCalls;hasCalls();1;OMR;Block;0;0
hasExceptionPredecessor;hasExceptionPredecessor(class TR::CFGNode *);1;TR;CFGNode;0;0
hasExceptionPredecessors;hasExceptionPredecessors();1;OMR;Block;0;0
hasExceptionSuccessor;hasExceptionSuccessor(class TR::CFGNode *);1;TR;CFGNode;0;0
hasExceptionSuccessors;hasExceptionSuccessors();1;OMR;Block;0;0
hasPredecessor;hasPredecessor(class TR::CFGNode *);1;TR;CFGNode;0;0
hasSuccessor;hasSuccessor(class TR::CFGNode *);1;TR;CFGNode;0;0
incVisitCount;incVisitCount();1;TR;CFGNode;0;0
inheritBlockInfo;inheritBlockInfo(TR::Block *,_Bool);1;OMR;Block;0;0
insertBlockAsFallThrough;insertBlockAsFallThrough(TR::Compilation *,TR::Block *,TR::Block *);1;OMR;Block;0;0
isAdded;isAdded();1;OMR;Block;0;0
isCatchBlock;isCatchBlock();1;OMR;Block;0;0
isCold;isCold();1;OMR;Block;0;0
isCreatedAtCodeGen;isCreatedAtCodeGen();1;OMR;Block;0;0
isCreatedByVersioning;isCreatedByVersioning();1;OMR;Block;0;0
isDifficultBlock;isDifficultBlock();1;OMR;Block;0;0
isEmptyBlock;isEmptyBlock();1;OMR;Block;0;0
isEndBlock;isEndBlock();1;OMR;Block;0;0
isEntryOfShortRunningLoop;isEntryOfShortRunningLoop();1;OMR;Block;0;0
isExtensionOfPreviousBlock;isExtensionOfPreviousBlock();1;OMR;Block;0;0
isGotoBlock;isGotoBlock(TR::Compilation *,_Bool);1;OMR;Block;0;0
isLoopInvariantBlock;isLoopInvariantBlock();1;OMR;Block;0;0
isOSRCatchBlock;isOSRCatchBlock();1;OMR;Block;0;0
isOSRCodeBlock;isOSRCodeBlock();1;OMR;Block;0;0
isOSRInduceBlock;isOSRInduceBlock();1;OMR;Block;0;0
isPRECandidate;isPRECandidate();1;OMR;Block;0;0
isPartialInlineBlock;isPartialInlineBlock();1;OMR;Block;0;0
isRestartBlock;isRestartBlock();1;OMR;Block;0;0
isSpecialized;isSpecialized();1;OMR;Block;0;0
isSuperCold;isSuperCold();1;OMR;Block;0;0
isSynchronizedHandler;isSynchronizedHandler();1;OMR;Block;0;0
isTargetOfJumpWhoseTargetCanBeChanged;isTargetOfJumpWhoseTargetCanBeChanged(TR::Compilation *);1;OMR;Block;0;0
isUnreachable;isUnreachable();1;TR;CFGNode;0;0
isUnsanitizeable;isUnsanitizeable();1;OMR;Block;0;0
isValid;isValid();1;TR;Link1;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;CFGNode;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;CFGNode;0;0
movePredecessors;movePredecessors(class TR::CFGNode *);1;TR;CFGNode;0;0
moveSuccessors;moveSuccessors(class TR::CFGNode *);1;TR;CFGNode;0;0
nodeIsRemoved;nodeIsRemoved();1;TR;CFGNode;0;0
normalizeFrequency;normalizeFrequency(int32_t,int32_t);1;TR;CFGNode;0;0
normalizeFrequency;normalizeFrequency(int32_t);0;TR;CFGNode;0;0
normalizedFrequency;normalizedFrequency(int32_t,int32_t);1;TR;CFGNode;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;CFGNode;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;CFGNode;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;CFGNode;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;CFGNode;0;0
operator delete;operator delete(void *,size_t);0;TR;CFGNode;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;CFGNode;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;CFGNode;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;CFGNode;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;CFGNode;0;0
operator new;operator new(size_t,TR::Region &);1;TR;CFGNode;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;CFGNode;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;CFGNode;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;CFGNode;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;CFGNode;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;CFGNode;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;CFGNode;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;CFGNode;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;CFGNode;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;CFGNode;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;CFGNode;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;CFGNode;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;CFGNode;0;0
operator=;operator=(class TR::CFGNode &&);1;TR;CFGNode;1;0
operator=;operator=(const class TR::CFGNode &);0;TR;CFGNode;1;0
operator=;operator=(const class OMR::Block &);0;OMR;Block;1;0
operator=;operator=(class TR::Block &&);0;TR;Block;1;0
operator=;operator=(const class TR::Block &);0;TR;Block;1;0
prepend;prepend(TR::TreeTop *);1;OMR;Block;0;0
redirectFlowToNewDestination;redirectFlowToNewDestination(TR::Compilation *,TR::CFGEdge *,TR::Block *,_Bool);1;OMR;Block;0;0
removeBranch;removeBranch(TR::Compilation *);1;OMR;Block;0;0
removeExceptionPredecessor;removeExceptionPredecessor(class TR::CFGEdge *);1;TR;CFGNode;0;0
removeExceptionSuccessor;removeExceptionSuccessor(class TR::CFGEdge *);1;TR;CFGNode;0;0
removeFromCFG;removeFromCFG(TR::Compilation *);1;TR;CFGNode;0;1
removeNode;removeNode();1;TR;CFGNode;0;0
removePredecessor;removePredecessor(class TR::CFGEdge *);1;TR;CFGNode;0;0
removeSuccessor;removeSuccessor(class TR::CFGEdge *);1;TR;CFGNode;0;0
self;self();1;OMR;Block;0;0
setAsLoopInvariantBlock;setAsLoopInvariantBlock(_Bool);1;OMR;Block;0;0
setBackwardTraversalIndex;setBackwardTraversalIndex(int32_t);1;TR;CFGNode;0;0
setBlockBCIndex;setBlockBCIndex(int32_t);1;OMR;Block;0;0
setBlockSize;setBlockSize(int32_t);1;OMR;Block;0;0
setBranchesBackwards;setBranchesBackwards();1;OMR;Block;0;0
setByteCodeIndex;setByteCodeIndex(int32_t,TR::Compilation *);1;OMR;Block;0;0
setCatchBlockExtension;setCatchBlockExtension(class OMR::Block::TR_CatchBlockExtension *);1;OMR;Block;0;0
setContainsCall;setContainsCall(_Bool);1;OMR;Block;0;0
setCreatedByVersioning;setCreatedByVersioning(_Bool);1;OMR;Block;0;0
setDebugCounters;setDebugCounters(TR::DebugCounterAggregation *);1;OMR;Block;0;0
setDoNotProfile;setDoNotProfile();1;OMR;Block;0;0
setEntry;setEntry(TR::TreeTop *);1;OMR;Block;0;0
setExceptionClassName;setExceptionClassName(char *,int32_t,TR::Compilation *);1;OMR;Block;0;0
setExit;setExit(TR::TreeTop *);1;OMR;Block;0;0
setFirstBlockInLoop;setFirstBlockInLoop();1;OMR;Block;0;0
setFirstInstruction;setFirstInstruction(TR::Instruction *);1;OMR;Block;0;0
setForwardTraversalIndex;setForwardTraversalIndex(int32_t);1;TR;CFGNode;0;0
setFrequency;setFrequency(int32_t);1;TR;CFGNode;0;0
setHandlerInfo;setHandlerInfo(uint32_t,uint8_t,uint16_t,class TR_ResolvedMethod *,TR::Compilation *);1;OMR;Block;0;0
setHandlerInfoWithOutBCInfo;setHandlerInfoWithOutBCInfo(uint32_t,uint8_t,uint16_t,class TR_ResolvedMethod *,TR::Compilation *);1;OMR;Block;0;0
setHasBeenVisited;setHasBeenVisited(_Bool);1;OMR;Block;0;0
setHasCallToSuperCold;setHasCallToSuperCold(_Bool);1;OMR;Block;0;0
setHasCalls;setHasCalls(_Bool);1;OMR;Block;0;0
setInstructionBoundaries;setInstructionBoundaries(uint32_t,uint32_t);1;OMR;Block;0;0
setIsAdded;setIsAdded();1;OMR;Block;0;0
setIsCold;setIsCold(_Bool);1;OMR;Block;0;0
setIsCreatedAtCodeGen;setIsCreatedAtCodeGen(_Bool);1;OMR;Block;0;0
setIsDifficultBlock;setIsDifficultBlock(_Bool);1;OMR;Block;0;0
setIsEndBlock;setIsEndBlock(_Bool);1;OMR;Block;0;0
setIsEntryOfShortRunningLoop;setIsEntryOfShortRunningLoop();1;OMR;Block;0;0
setIsExtensionOfPreviousBlock;setIsExtensionOfPreviousBlock(_Bool);1;OMR;Block;0;0
setIsOSRCatchBlock;setIsOSRCatchBlock();1;OMR;Block;0;0
setIsOSRCodeBlock;setIsOSRCodeBlock();1;OMR;Block;0;0
setIsOSRInduceBlock;setIsOSRInduceBlock();1;OMR;Block;0;0
setIsPRECandidate;setIsPRECandidate(_Bool);1;OMR;Block;0;0
setIsSpecialized;setIsSpecialized(_Bool);1;OMR;Block;0;0
setIsSuperCold;setIsSuperCold(_Bool);1;OMR;Block;0;0
setIsSynchronizedHandler;setIsSynchronizedHandler();1;OMR;Block;0;0
setIsUnsanitizeable;setIsUnsanitizeable(_Bool);1;OMR;Block;0;0
setJ9EstimateCodeSizeMethod;setJ9EstimateCodeSizeMethod(class TR_ResolvedMethod *);1;OMR;Block;0;0
setLastInstruction;setLastInstruction(TR::Instruction *);1;OMR;Block;0;0
setLiveLocals;setLiveLocals(class TR_BitVector *);1;OMR;Block;0;0
setNext;setNext(T *);1;TR;Link1;0;0
setNumber;setNumber(int32_t);1;TR;CFGNode;0;0
setPartialInlineBlock;setPartialInlineBlock(_Bool);1;OMR;Block;0;0
setRegisterSaveDescriptionBits;setRegisterSaveDescriptionBits(class TR_BitVector *);1;OMR;Block;0;0
setRestartBlock;setRestartBlock(_Bool);1;OMR;Block;0;0
setSpecializedDesyncCatchBlock;setSpecializedDesyncCatchBlock();1;OMR;Block;0;0
setStructureOf;setStructureOf(class TR_BlockStructure *);1;OMR;Block;0;0
setUnrollFactor;setUnrollFactor(int);1;OMR;Block;0;0
setValid;setValid(_Bool);1;TR;Link1;0;0
setVisitCount;setVisitCount(vcount_t);1;TR;CFGNode;0;0
setWasHeaderOfCanonicalizedLoop;setWasHeaderOfCanonicalizedLoop(_Bool);1;OMR;Block;0;0
specializedDesyncCatchBlock;specializedDesyncCatchBlock();1;OMR;Block;0;0
split;split(TR::TreeTop *,TR::CFG *,_Bool,_Bool,TR::ResolvedMethodSymbol *);1;OMR;Block;0;0
splitBlockAndAddConditional;splitBlockAndAddConditional(TR::TreeTop *,TR::TreeTop *,TR::CFG *,_Bool);1;OMR;Block;0;0
splitEdge;splitEdge(TR::Block *,TR::Block *,TR::Compilation *,TR::TreeTop **,_Bool);1;OMR;Block;0;0
splitWithGivenMethodSymbol;splitWithGivenMethodSymbol(TR::ResolvedMethodSymbol *,TR::TreeTop *,TR::CFG *,_Bool,_Bool);1;OMR;Block;0;0
startOfExtendedBlock;startOfExtendedBlock();1;OMR;Block;0;0
takeGlRegDeps;takeGlRegDeps(TR::Compilation *,TR::Node *);1;OMR;Block;0;0
toBlockGetter;toBlockGetter(class TR::CFGEdge *);1;TR;CFGNode;0;0
uncommonNodesBetweenBlocks;uncommonNodesBetweenBlocks(TR::Compilation *,TR::Block *,TR::ResolvedMethodSymbol *);1;OMR;Block;0;0
verifyOSRInduceBlock;verifyOSRInduceBlock(TR::Compilation *);1;OMR;Block;0;0
wasHeaderOfCanonicalizedLoop;wasHeaderOfCanonicalizedLoop();1;OMR;Block;0;0
~Block;~Block();1;OMR;Block;0;0
~CFGNode;~CFGNode();1;TR;CFGNode;1;0
LabelSymbol;LabelSymbol();1;OMR;LabelSymbol;0;0
LabelSymbol;LabelSymbol(class OMR::LabelSymbol &&);0;OMR;LabelSymbol;1;0
LabelSymbol;LabelSymbol(TR::CodeGenerator *);0;OMR;LabelSymbol;0;0
LabelSymbol;LabelSymbol(const class OMR::LabelSymbol &);0;OMR;LabelSymbol;1;0
LabelSymbol;LabelSymbol(TR::CodeGenerator *,TR::Block *);0;OMR;LabelSymbol;0;0
getCodeLocation;getCodeLocation();1;OMR;LabelSymbol;0;0
getDistance;getDistance();1;OMR;LabelSymbol;0;0
getEstimatedCodeLocation;getEstimatedCodeLocation();1;OMR;LabelSymbol;0;0
getInstruction;getInstruction();1;OMR;LabelSymbol;0;0
getName;getName(class TR_Debug *);0;OMR;LabelSymbol;0;0
getSnippet;getSnippet();1;OMR;LabelSymbol;0;0
isTargeted;isTargeted();1;OMR;LabelSymbol;0;0
makeRelativeLabelSymbol;makeRelativeLabelSymbol(intptr_t);1;OMR;LabelSymbol;0;0
operator=;operator=(class OMR::LabelSymbol &&);0;OMR;LabelSymbol;1;0
operator=;operator=(const class OMR::LabelSymbol &);0;OMR;LabelSymbol;1;0
operator=;operator=(class TR::LabelSymbol &&);0;TR;LabelSymbol;1;0
operator=;operator=(const class TR::LabelSymbol &);0;TR;LabelSymbol;1;0
setCodeLocation;setCodeLocation(uint8_t *);1;OMR;LabelSymbol;0;0
setDirectlyTargeted;setDirectlyTargeted();1;OMR;LabelSymbol;0;0
setEstimatedCodeLocation;setEstimatedCodeLocation(int32_t);1;OMR;LabelSymbol;0;1
setInstruction;setInstruction(TR::Instruction *);1;OMR;LabelSymbol;0;0
setSnippet;setSnippet(TR::Snippet *);1;OMR;LabelSymbol;0;0
~LabelSymbol;~LabelSymbol();1;OMR;LabelSymbol;1;1
MethodSymbol;MethodSymbol(class OMR::MethodSymbol &&);1;OMR;MethodSymbol;1;0
MethodSymbol;MethodSymbol(const class OMR::MethodSymbol &);0;OMR;MethodSymbol;1;0
MethodSymbol;MethodSymbol(enum TR_LinkageConventions,class TR_Method *);0;OMR;MethodSymbol;0;0
MethodSymbol;MethodSymbol(const class TR::MethodSymbol &);0;TR;MethodSymbol;1;0
MethodSymbol;MethodSymbol(class TR::MethodSymbol &&);0;TR;MethodSymbol;1;0
ResolvedMethodSymbol;ResolvedMethodSymbol(const class OMR::ResolvedMethodSymbol &);1;OMR;ResolvedMethodSymbol;1;0
ResolvedMethodSymbol;ResolvedMethodSymbol(class OMR::ResolvedMethodSymbol &&);0;OMR;ResolvedMethodSymbol;1;0
ResolvedMethodSymbol;ResolvedMethodSymbol(class TR_ResolvedMethod *,TR::Compilation *);0;OMR;ResolvedMethodSymbol;0;0
addAutomatic;addAutomatic(TR::AutomaticSymbol *);1;OMR;ResolvedMethodSymbol;0;0
addMethodMetaDataSymbol;addMethodMetaDataSymbol(TR::RegisterMappedSymbol *);1;OMR;ResolvedMethodSymbol;0;0
addOSRPoint;addOSRPoint(class TR_OSRPoint *);1;OMR;ResolvedMethodSymbol;0;0
addProfilingOffsetInfo;addProfilingOffsetInfo(int32_t,int32_t);1;OMR;ResolvedMethodSymbol;0;0
addTrivialDeadTreeBlock;addTrivialDeadTreeBlock(TR::Block *);1;OMR;ResolvedMethodSymbol;0;0
addVariableSizeSymbol;addVariableSizeSymbol(TR::AutomaticSymbol *);1;OMR;ResolvedMethodSymbol;0;0
canDirectNativeCall;canDirectNativeCall();1;OMR;ResolvedMethodSymbol;0;0
canInjectInduceOSR;canInjectInduceOSR(TR::Node *);1;OMR;ResolvedMethodSymbol;0;0
canReplaceWithHWInstr;canReplaceWithHWInstr();1;OMR;ResolvedMethodSymbol;0;0
cannotAttemptOSRAt;cannotAttemptOSRAt(TR_ByteCodeInfo &,TR::Block *,TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
cannotAttemptOSRDuring;cannotAttemptOSRDuring(int32_t,TR::Compilation *,_Bool);1;OMR;ResolvedMethodSymbol;0;0
catchBlocksHaveRealPredecessors;catchBlocksHaveRealPredecessors(TR::CFG *,TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
cleanupUnreachableOSRBlocks;cleanupUnreachableOSRBlocks(int32_t,TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
clearProfilingOffsetInfo;clearProfilingOffsetInfo();1;OMR;ResolvedMethodSymbol;0;0
comp;comp();1;OMR;ResolvedMethodSymbol;0;0
containsOnlySinglePrecision;containsOnlySinglePrecision();1;OMR;ResolvedMethodSymbol;0;0
detectInternalCycles;detectInternalCycles(TR::CFG *,TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
doJSR292PerfTweaks;doJSR292PerfTweaks();1;OMR;ResolvedMethodSymbol;0;0
dumpProfilingOffsetInfo;dumpProfilingOffsetInfo(TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
findOSRPoint;findOSRPoint(TR_ByteCodeInfo &);1;OMR;ResolvedMethodSymbol;0;0
firstArgumentIsReceiver;firstArgumentIsReceiver();1;OMR;MethodSymbol;0;0
genAndAttachOSRCodeBlocks;genAndAttachOSRCodeBlocks(int32_t);1;OMR;ResolvedMethodSymbol;0;0
genIL;genIL(class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *,TR::IlGenRequest &);1;OMR;ResolvedMethodSymbol;0;0
genInduceOSRCall;genInduceOSRCall(TR::TreeTop *,int32_t,class TR_OSRMethodData *,int32_t,_Bool,_Bool,TR::CFG *);1;OMR;ResolvedMethodSymbol;0;0
genInduceOSRCall;genInduceOSRCall(TR::TreeTop *,int32_t,int32_t,_Bool,_Bool,TR::CFG *);0;OMR;ResolvedMethodSymbol;0;0
genInduceOSRCallAndCleanUpFollowingTreesImmediately;genInduceOSRCallAndCleanUpFollowingTreesImmediately(TR::TreeTop *,TR_ByteCodeInfo,_Bool,TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
genInduceOSRCallNode;genInduceOSRCallNode(TR::TreeTop *,int32_t,_Bool,_Bool,TR::CFG *);1;OMR;ResolvedMethodSymbol;0;0
genOSRHelperCall;genOSRHelperCall(int32_t,TR::SymbolReferenceTable *,TR::CFG *);1;OMR;ResolvedMethodSymbol;0;0
genPartialIL;genPartialIL(class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *,_Bool,class TR_InlineBlocks *);1;OMR;ResolvedMethodSymbol;0;0
generateAccurateNodeCount;generateAccurateNodeCount();1;OMR;ResolvedMethodSymbol;0;0
getArrayCopyTempSlot;getArrayCopyTempSlot(class TR_FrontEnd *);1;OMR;ResolvedMethodSymbol;0;0
getAutoSymRefs;getAutoSymRefs(int32_t);1;OMR;ResolvedMethodSymbol;0;0
getAutoSymRefs;getAutoSymRefs();0;OMR;ResolvedMethodSymbol;0;0
getAutomaticList;getAutomaticList();1;OMR;ResolvedMethodSymbol;0;0
getFirstJitTempIndex;getFirstJitTempIndex();1;OMR;ResolvedMethodSymbol;0;0
getFirstTreeTop;getFirstTreeTop();1;OMR;ResolvedMethodSymbol;0;0
getFlowGraph;getFlowGraph();1;OMR;ResolvedMethodSymbol;0;0
getLastTreeTop;getLastTreeTop(TR::Block *);1;OMR;ResolvedMethodSymbol;0;0
getLinkageConvention;getLinkageConvention();1;OMR;MethodSymbol;0;0
getLocalMappingCursor;getLocalMappingCursor();1;OMR;ResolvedMethodSymbol;0;0
getLogicalParameterList;getLogicalParameterList(TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
getMandatoryRecognizedMethod;getMandatoryRecognizedMethod();1;OMR;MethodSymbol;0;0
getMethod;getMethod();1;OMR;MethodSymbol;0;0
getMethodAddress;getMethodAddress();1;OMR;MethodSymbol;0;0
getMethodKind;getMethodKind();1;OMR;MethodSymbol;0;0
getMethodMetaDataList;getMethodMetaDataList();1;OMR;ResolvedMethodSymbol;0;0
getNumOSRPoints;getNumOSRPoints();1;OMR;ResolvedMethodSymbol;0;0
getNumPPSlots;getNumPPSlots();1;OMR;ResolvedMethodSymbol;0;0
getNumParameterSlots;getNumParameterSlots();1;OMR;ResolvedMethodSymbol;0;0
getNumberOfBackEdges;getNumberOfBackEdges();1;OMR;ResolvedMethodSymbol;0;0
getOSRByteCodeInfo;getOSRByteCodeInfo(TR::Node *);1;OMR;ResolvedMethodSymbol;0;0
getOSRPoints;getOSRPoints();1;OMR;ResolvedMethodSymbol;0;0
getOSRTransitionTreeTop;getOSRTransitionTreeTop(TR::TreeTop *);1;OMR;ResolvedMethodSymbol;0;0
getObjectTempSlots;getObjectTempSlots();1;OMR;ResolvedMethodSymbol;0;0
getParameterList;getParameterList();1;OMR;ResolvedMethodSymbol;0;0
getParmSymRef;getParmSymRef(int32_t);1;OMR;ResolvedMethodSymbol;0;0
getPendingPushSymRefs;getPendingPushSymRefs();1;OMR;ResolvedMethodSymbol;0;0
getPendingPushSymRefs;getPendingPushSymRefs(int32_t);0;OMR;ResolvedMethodSymbol;0;0
getProfilerFrequency;getProfilerFrequency(int32_t);1;OMR;ResolvedMethodSymbol;0;0
getProfilingByteCodeIndex;getProfilingByteCodeIndex(int32_t);1;OMR;ResolvedMethodSymbol;0;0
getProloguePushSlots;getProloguePushSlots();1;OMR;ResolvedMethodSymbol;0;0
getPythonConstsSymbolRef;getPythonConstsSymbolRef();1;OMR;ResolvedMethodSymbol;0;0
getRecognizedMethod;getRecognizedMethod();1;OMR;MethodSymbol;0;0
getResolvedMethod;getResolvedMethod();1;OMR;ResolvedMethodSymbol;0;0
getResolvedMethodIndex;getResolvedMethodIndex();1;OMR;ResolvedMethodSymbol;0;0
getScalarTempSlots;getScalarTempSlots();1;OMR;ResolvedMethodSymbol;0;0
getSyncObjectTemp;getSyncObjectTemp();1;OMR;ResolvedMethodSymbol;0;0
getSyncObjectTempIndex;getSyncObjectTempIndex();1;OMR;ResolvedMethodSymbol;0;0
getTempIndex;getTempIndex();1;OMR;ResolvedMethodSymbol;0;0
getThisTempForObjectCtor;getThisTempForObjectCtor();1;OMR;ResolvedMethodSymbol;0;0
getThisTempForObjectCtorIndex;getThisTempForObjectCtorIndex();1;OMR;ResolvedMethodSymbol;0;0
getTrivialDeadTreeBlocksList;getTrivialDeadTreeBlocksList();1;OMR;ResolvedMethodSymbol;0;0
getVariableSizeSymbolList;getVariableSizeSymbolList();1;OMR;ResolvedMethodSymbol;0;0
hasBranches;hasBranches();1;OMR;ResolvedMethodSymbol;0;0
hasCheckCasts;hasCheckCasts();1;OMR;ResolvedMethodSymbol;0;0
hasCheckcastsOrInstanceOfs;hasCheckcastsOrInstanceOfs();1;OMR;ResolvedMethodSymbol;0;0
hasDememoizationOpportunities;hasDememoizationOpportunities();1;OMR;ResolvedMethodSymbol;0;0
hasEscapeAnalysisOpportunities;hasEscapeAnalysisOpportunities();1;OMR;ResolvedMethodSymbol;0;0
hasInstanceOfs;hasInstanceOfs();1;OMR;ResolvedMethodSymbol;0;0
hasMethodHandleInvokes;hasMethodHandleInvokes();1;OMR;ResolvedMethodSymbol;0;0
hasNews;hasNews();1;OMR;ResolvedMethodSymbol;0;0
hasOSRProhibitions;hasOSRProhibitions();1;OMR;ResolvedMethodSymbol;0;0
hasSnapshots;hasSnapshots();1;OMR;ResolvedMethodSymbol;0;0
hasThisCalls;hasThisCalls();1;OMR;ResolvedMethodSymbol;0;0
hasUnkilledTemps;hasUnkilledTemps();1;OMR;ResolvedMethodSymbol;0;0
hasVeryRefinedAliasSets;hasVeryRefinedAliasSets();1;OMR;MethodSymbol;0;0
incTempIndex;incTempIndex(class TR_FrontEnd *);1;OMR;ResolvedMethodSymbol;0;0
induceImmediateOSRWithoutChecksBefore;induceImmediateOSRWithoutChecksBefore(TR::TreeTop *);1;OMR;ResolvedMethodSymbol;0;0
induceOSRAfter;induceOSRAfter(TR::TreeTop *,TR_ByteCodeInfo,TR::TreeTop *,_Bool,int32_t,TR::TreeTop **);1;OMR;ResolvedMethodSymbol;0;0
initForCompilation;initForCompilation(TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
insertRematableStoresFromCallSites;insertRematableStoresFromCallSites(TR::Compilation *,int32_t,TR::TreeTop *);1;OMR;ResolvedMethodSymbol;0;0
insertStoresForDeadStackSlots;insertStoresForDeadStackSlots(TR::Compilation *,TR_ByteCodeInfo &,TR::TreeTop *,_Bool);1;OMR;ResolvedMethodSymbol;0;0
insertStoresForDeadStackSlotsBeforeInducingOSR;insertStoresForDeadStackSlotsBeforeInducingOSR(TR::Compilation *,int32_t,TR_ByteCodeInfo &,TR::TreeTop *);1;OMR;ResolvedMethodSymbol;0;0
isComputed;isComputed();1;OMR;MethodSymbol;0;0
isComputedStatic;isComputedStatic();1;OMR;MethodSymbol;0;0
isComputedVirtual;isComputedVirtual();1;OMR;MethodSymbol;0;0
isEHAware;isEHAware();1;OMR;MethodSymbol;0;0
isHelper;isHelper();1;OMR;MethodSymbol;0;0
isInlinedByCG;isInlinedByCG();1;OMR;MethodSymbol;0;0
isInterface;isInterface();1;OMR;MethodSymbol;0;0
isInterpreted;isInterpreted();1;OMR;MethodSymbol;0;1
isJITInternalNative;isJITInternalNative();1;OMR;MethodSymbol;0;1
isJNI;isJNI();1;OMR;MethodSymbol;0;0
isNative;isNative();1;OMR;MethodSymbol;0;1
isNoTemps;isNoTemps();1;OMR;ResolvedMethodSymbol;0;0
isNonReturning;isNonReturning();1;OMR;MethodSymbol;0;0
isOSRRelatedNode;isOSRRelatedNode(TR::Node *,TR_ByteCodeInfo &);1;OMR;ResolvedMethodSymbol;0;0
isOSRRelatedNode;isOSRRelatedNode(TR::Node *);0;OMR;ResolvedMethodSymbol;0;0
isPureFunction;isPureFunction();1;OMR;MethodSymbol;0;0
isSideEffectFree;isSideEffectFree();1;OMR;ResolvedMethodSymbol;0;0
isSpecial;isSpecial();1;OMR;MethodSymbol;0;0
isSynchronised;isSynchronised();1;OMR;MethodSymbol;0;0
isSystemLinkageDispatch;isSystemLinkageDispatch();1;OMR;MethodSymbol;0;0
isVMInternalNative;isVMInternalNative();1;OMR;MethodSymbol;0;0
isVirtual;isVirtual();1;OMR;MethodSymbol;0;0
matchInduceOSRCall;matchInduceOSRCall(TR::TreeTop *,int16_t,int16_t,const char *);1;OMR;ResolvedMethodSymbol;0;0
mayContainMonitors;mayContainMonitors();1;OMR;ResolvedMethodSymbol;0;0
mayHaveIndirectCalls;mayHaveIndirectCalls();1;OMR;ResolvedMethodSymbol;0;0
mayHaveInlineableCall;mayHaveInlineableCall();1;OMR;ResolvedMethodSymbol;0;0
mayHaveLongOps;mayHaveLongOps();1;OMR;ResolvedMethodSymbol;0;0
mayHaveLoops;mayHaveLoops();1;OMR;ResolvedMethodSymbol;0;0
mayHaveNestedLoops;mayHaveNestedLoops();1;OMR;ResolvedMethodSymbol;0;0
operator=;operator=(class OMR::MethodSymbol &&);0;OMR;MethodSymbol;1;0
operator=;operator=(const class OMR::MethodSymbol &);0;OMR;MethodSymbol;1;0
operator=;operator=(const class TR::MethodSymbol &);0;TR;MethodSymbol;1;0
operator=;operator=(class TR::MethodSymbol &&);0;TR;MethodSymbol;1;0
operator=;operator=(class OMR::ResolvedMethodSymbol &&);0;OMR;ResolvedMethodSymbol;1;0
operator=;operator=(const class OMR::ResolvedMethodSymbol &);0;OMR;ResolvedMethodSymbol;1;0
operator=;operator=(class TR::ResolvedMethodSymbol &&);0;TR;ResolvedMethodSymbol;1;0
operator=;operator=(const class TR::ResolvedMethodSymbol &);0;TR;ResolvedMethodSymbol;1;0
prependEmptyFirstBlock;prependEmptyFirstBlock();1;OMR;ResolvedMethodSymbol;0;0
preservesAllRegisters;preservesAllRegisters();1;OMR;MethodSymbol;0;0
recursivelyCountChildren;recursivelyCountChildren(TR::Node *);1;OMR;ResolvedMethodSymbol;0;0
removeTree;removeTree(TR::TreeTop *);1;OMR;ResolvedMethodSymbol;0;0
removeUnusedLocals;removeUnusedLocals();1;OMR;ResolvedMethodSymbol;0;0
resetLiveLocalIndices;resetLiveLocalIndices();1;OMR;ResolvedMethodSymbol;0;0
safeToSkipArrayStoreChecks;safeToSkipArrayStoreChecks();1;OMR;MethodSymbol;0;0
safeToSkipBoundChecks;safeToSkipBoundChecks();1;OMR;MethodSymbol;0;0
safeToSkipCheckCasts;safeToSkipCheckCasts();1;OMR;MethodSymbol;0;0
safeToSkipChecksOnArrayCopies;safeToSkipChecksOnArrayCopies();1;OMR;MethodSymbol;0;0
safeToSkipDivChecks;safeToSkipDivChecks();1;OMR;MethodSymbol;0;0
safeToSkipNullChecks;safeToSkipNullChecks();1;OMR;MethodSymbol;0;0
safeToSkipZeroInitializationOnNewarrays;safeToSkipZeroInitializationOnNewarrays();1;OMR;MethodSymbol;0;0
setAutoSymRefs;setAutoSymRefs(TR_Array<List<TR::SymbolReference> > *);1;OMR;ResolvedMethodSymbol;0;0
setAutomaticList;setAutomaticList(List<TR::AutomaticSymbol>);1;OMR;ResolvedMethodSymbol;0;0
setCanDirectNativeCall;setCanDirectNativeCall(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setCanReplaceWithHWInstr;setCanReplaceWithHWInstr(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setCannotAttemptOSR;setCannotAttemptOSR(int32_t);1;OMR;ResolvedMethodSymbol;0;0
setComp;setComp(TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
setContainsOnlySinglePrecision;setContainsOnlySinglePrecision(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setEHAware;setEHAware();1;OMR;MethodSymbol;0;0
setFirstJitTempIndex;setFirstJitTempIndex(int32_t);1;OMR;ResolvedMethodSymbol;0;0
setFirstTreeTop;setFirstTreeTop(TR::TreeTop *);1;OMR;ResolvedMethodSymbol;0;0
setFlowGraph;setFlowGraph(TR::CFG *);1;OMR;ResolvedMethodSymbol;0;0
setHasBranches;setHasBranches(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setHasCheckCasts;setHasCheckCasts(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setHasDememoizationOpportunities;setHasDememoizationOpportunities(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setHasInstanceOfs;setHasInstanceOfs(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setHasMethodHandleInvokes;setHasMethodHandleInvokes(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setHasNews;setHasNews(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setHasSnapshots;setHasSnapshots(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setHasThisCalls;setHasThisCalls(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setHasUnkilledTemps;setHasUnkilledTemps(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setHasVeryRefinedAliasSets;setHasVeryRefinedAliasSets(_Bool);1;OMR;MethodSymbol;0;0
setHelper;setHelper();1;OMR;MethodSymbol;0;0
setInterface;setInterface();1;OMR;MethodSymbol;0;0
setInterpreted;setInterpreted(_Bool);1;OMR;MethodSymbol;0;0
setIsInlinedByCG;setIsInlinedByCG();1;OMR;MethodSymbol;0;0
setIsSideEffectFree;setIsSideEffectFree(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setJITInternalNative;setJITInternalNative(_Bool);1;OMR;MethodSymbol;0;0
setJNI;setJNI();1;OMR;MethodSymbol;0;0
setLinkage;setLinkage(enum TR_LinkageConventions);1;OMR;MethodSymbol;0;0
setLocalMappingCursor;setLocalMappingCursor(uint32_t);1;OMR;ResolvedMethodSymbol;0;0
setMayContainMonitors;setMayContainMonitors(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setMayHaveIndirectCalls;setMayHaveIndirectCalls(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setMayHaveInlineableCall;setMayHaveInlineableCall(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setMayHaveLongOps;setMayHaveLongOps(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setMayHaveLoops;setMayHaveLoops(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setMayHaveNestedLoops;setMayHaveNestedLoops(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setMethod;setMethod(class TR_Method *);1;OMR;MethodSymbol;0;0
setMethodAddress;setMethodAddress(void *);1;OMR;MethodSymbol;0;0
setMethodKind;setMethodKind(int32_t);1;OMR;MethodSymbol;0;0
setNoTemps;setNoTemps(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setNonReturning;setNonReturning();1;OMR;MethodSymbol;0;0
setObjectTempSlots;setObjectTempSlots(uint32_t);1;OMR;ResolvedMethodSymbol;0;0
setParameterList;setParameterList();1;OMR;ResolvedMethodSymbol;0;0
setParmSymRef;setParmSymRef(int32_t,TR::SymbolReference *);1;OMR;ResolvedMethodSymbol;0;0
setPendingPushSymRefs;setPendingPushSymRefs(TR_Array<List<TR::SymbolReference> > *);1;OMR;ResolvedMethodSymbol;0;0
setPreservesAllRegisters;setPreservesAllRegisters();1;OMR;MethodSymbol;0;0
setProfilerFrequency;setProfilerFrequency(int32_t,int32_t);1;OMR;ResolvedMethodSymbol;0;0
setProloguePushSlots;setProloguePushSlots(uint32_t);1;OMR;ResolvedMethodSymbol;0;0
setResolvedMethod;setResolvedMethod(class TR_ResolvedMethod *);1;OMR;ResolvedMethodSymbol;0;0
setResolvedMethodIndex;setResolvedMethodIndex(class mcount_t);1;OMR;ResolvedMethodSymbol;0;0
setScalarTempSlots;setScalarTempSlots(uint32_t);1;OMR;ResolvedMethodSymbol;0;0
setSpecial;setSpecial();1;OMR;MethodSymbol;0;0
setStatic;setStatic();1;OMR;MethodSymbol;0;0
setSyncObjectTemp;setSyncObjectTemp(TR::SymbolReference *);1;OMR;ResolvedMethodSymbol;0;0
setSynchronised;setSynchronised();1;OMR;MethodSymbol;0;0
setSystemLinkageDispatch;setSystemLinkageDispatch();1;OMR;MethodSymbol;0;0
setTempIndex;setTempIndex(int32_t,class TR_FrontEnd *);1;OMR;ResolvedMethodSymbol;0;0
setThisTempForObjectCtor;setThisTempForObjectCtor(TR::SymbolReference *);0;OMR;ResolvedMethodSymbol;0;0
setTreatAsAlwaysExpandBIF;setTreatAsAlwaysExpandBIF(_Bool);1;OMR;MethodSymbol;0;0
setUnimplementedOpcode;setUnimplementedOpcode(uint8_t);1;OMR;ResolvedMethodSymbol;0;0
setUnsynchronised;setUnsynchronised();1;OMR;MethodSymbol;0;0
setUsesSinglePrecisionMode;setUsesSinglePrecisionMode(_Bool);1;OMR;ResolvedMethodSymbol;0;0
setVMInternalNative;setVMInternalNative(_Bool);1;OMR;MethodSymbol;0;0
setVirtual;setVirtual();1;OMR;MethodSymbol;0;0
sharesStackSlot;sharesStackSlot(TR::SymbolReference *);1;OMR;ResolvedMethodSymbol;0;0
sharesStackSlots;sharesStackSlots(TR::Compilation *);1;OMR;ResolvedMethodSymbol;0;0
signature;signature(class TR_Memory *);1;OMR;ResolvedMethodSymbol;0;0
skipArrayStoreChecks;skipArrayStoreChecks();1;OMR;ResolvedMethodSymbol;0;0
skipBoundChecks;skipBoundChecks();1;OMR;ResolvedMethodSymbol;0;0
skipCheckCasts;skipCheckCasts();1;OMR;ResolvedMethodSymbol;0;0
skipChecksOnArrayCopies;skipChecksOnArrayCopies();1;OMR;ResolvedMethodSymbol;0;0
skipDivChecks;skipDivChecks();1;OMR;ResolvedMethodSymbol;0;0
skipNullChecks;skipNullChecks();1;OMR;ResolvedMethodSymbol;0;0
skipZeroInitializationOnNewarrays;skipZeroInitializationOnNewarrays();1;OMR;ResolvedMethodSymbol;0;0
supportsInduceOSR;supportsInduceOSR(TR_ByteCodeInfo &,TR::Block *,TR::Compilation *,_Bool);1;OMR;ResolvedMethodSymbol;0;0
treatAsAlwaysExpandBIF;treatAsAlwaysExpandBIF();1;OMR;MethodSymbol;0;0
uncheckedSetTempIndex;uncheckedSetTempIndex(int32_t);1;OMR;ResolvedMethodSymbol;0;0
unimplementedOpcode;unimplementedOpcode();1;OMR;ResolvedMethodSymbol;0;0
usesSinglePrecisionMode;usesSinglePrecisionMode();1;OMR;ResolvedMethodSymbol;0;0
~MethodSymbol;~MethodSymbol();1;OMR;MethodSymbol;1;1
~ResolvedMethodSymbol;~ResolvedMethodSymbol();1;OMR;ResolvedMethodSymbol;1;1
StaticSymbol;StaticSymbol(class OMR::StaticSymbol &&);1;OMR;StaticSymbol;1;0
StaticSymbol;StaticSymbol(const class OMR::StaticSymbol &);0;OMR;StaticSymbol;1;0
StaticSymbol;StaticSymbol(TR::DataType,uint32_t);0;OMR;StaticSymbol;0;0
StaticSymbol;StaticSymbol(TR::DataType,void *);0;OMR;StaticSymbol;0;0
StaticSymbol;StaticSymbol(TR::DataType);0;OMR;StaticSymbol;0;0
getStaticAddress;getStaticAddress();1;OMR;StaticSymbol;0;0
getTOCIndex;getTOCIndex();1;OMR;StaticSymbol;0;0
makeNamed;makeNamed(const char *);1;OMR;StaticSymbol;0;0
operator=;operator=(const class OMR::StaticSymbol &);0;OMR;StaticSymbol;1;0
operator=;operator=(class OMR::StaticSymbol &&);0;OMR;StaticSymbol;1;0
operator=;operator=(class TR::StaticSymbol &&);0;TR;StaticSymbol;1;0
operator=;operator=(const class TR::StaticSymbol &);0;TR;StaticSymbol;1;0
setStaticAddress;setStaticAddress(void *);1;OMR;StaticSymbol;0;0
setTOCIndex;setTOCIndex(uint32_t);1;OMR;StaticSymbol;0;0
setUpDLPFlags;setUpDLPFlags(int32_t);1;OMR;StaticSymbol;0;0
~StaticSymbol;~StaticSymbol();1;OMR;StaticSymbol;1;1
Machine;Machine(class OMR::Machine &&);1;OMR;Machine;1;0
Machine;Machine(uint8_t,uint8_t,uint8_t);0;OMR;Machine;0;0
Machine;Machine();0;OMR;Machine;0;0
Machine;Machine(const class OMR::Machine &);0;OMR;Machine;1;0
Machine;Machine(class OMR::X86::Machine &&);0;OMR::X86;Machine;1;0
Machine;Machine(const class OMR::X86::Machine &);0;OMR::X86;Machine;1;0
Machine;Machine(uint8_t,uint8_t,TR::CodeGenerator *,TR::RealRegister **,TR::Register **,uint8_t,uint8_t,uint8_t,TR::Register **,uint32_t *);0;OMR::X86;Machine;0;0
Machine;Machine(class OMR::X86::AMD64::Machine &&);0;OMR::X86::AMD64;Machine;1;0
Machine;Machine(const class OMR::X86::AMD64::Machine &);0;OMR::X86::AMD64;Machine;1;0
Machine;Machine(TR::CodeGenerator *);0;OMR::X86::AMD64;Machine;0;0
adjustRegisterUseCountsDown;adjustRegisterUseCountsDown(TR::list<OMR::RegisterUsage *> *,_Bool);1;OMR::X86;Machine;0;0
adjustRegisterUseCountsUp;adjustRegisterUseCountsUp(TR::list<OMR::RegisterUsage *> *,_Bool);1;OMR::X86;Machine;0;0
captureRegisterAssociations;captureRegisterAssociations();1;OMR::X86;Machine;0;0
captureRegisterFile;captureRegisterFile();1;OMR::X86;Machine;0;0
captureSpilledRegistersList;captureSpilledRegistersList();1;OMR::X86;Machine;0;0
cg;cg();1;OMR::X86;Machine;0;0
clearRegisterAssociations;clearRegisterAssociations();1;OMR::X86;Machine;0;0
cloneRegisterFile;cloneRegisterFile(TR::RealRegister **,enum TR_AllocationKind);1;OMR::X86;Machine;0;0
coerceGPRegisterAssignment;coerceGPRegisterAssignment(TR::Instruction *,TR::Register *,enum TR_RegisterSizes);1;OMR::X86;Machine;0;0
coerceGPRegisterAssignment;coerceGPRegisterAssignment(TR::Instruction *,TR::Register *,TR::class RealRegister::RegNum,_Bool);0;OMR::X86;Machine;0;0
coerceXMMRegisterAssignment;coerceXMMRegisterAssignment(TR::Instruction *,TR::Register *,TR::class RealRegister::RegNum,_Bool);1;OMR::X86;Machine;0;0
createCondForLiveAndSpilledGPRs;createCondForLiveAndSpilledGPRs(_Bool,TR::list<TR::Register *> *);1;OMR::X86;Machine;0;0
createDepCondForLiveGPRs;createDepCondForLiveGPRs();1;OMR::X86;Machine;0;0
createRegisterAssociationDirective;createRegisterAssociationDirective(TR::Instruction *);1;OMR::X86;Machine;0;0
disableNewPickRegister;disableNewPickRegister();1;OMR::X86::AMD64;Machine;0;0
disassociateUnspilledBackingStorage;disassociateUnspilledBackingStorage();1;OMR::X86;Machine;0;0
enableNewPickRegister;enableNewPickRegister();1;OMR::X86::AMD64;Machine;0;0
findBestFreeGPRegister;findBestFreeGPRegister(TR::Instruction *,TR::Register *,enum TR_RegisterSizes,_Bool);1;OMR::X86;Machine;0;0
findFreeFPRegister;findFreeFPRegister();1;OMR::X86;Machine;0;0
fpCoerceRegistersToTopOfStack;fpCoerceRegistersToTopOfStack(TR::Instruction *,TR::Register *,TR::Register *,_Bool);1;OMR::X86;Machine;0;0
fpDeterminePopOpCode;fpDeterminePopOpCode(enum TR_X86OpCodes);1;OMR::X86;Machine;0;0
fpDetermineReverseOpCode;fpDetermineReverseOpCode(enum TR_X86OpCodes);1;OMR::X86;Machine;0;0
fpGetNumberOfLiveFPRs;fpGetNumberOfLiveFPRs();1;OMR::X86;Machine;0;0
fpGetNumberOfLiveXMMRs;fpGetNumberOfLiveXMMRs();1;OMR::X86;Machine;0;0
fpMapToStackRelativeRegister;fpMapToStackRelativeRegister(int32_t);1;OMR::X86;Machine;0;0
fpMapToStackRelativeRegister;fpMapToStackRelativeRegister(TR::Register *);0;OMR::X86;Machine;0;0
fpSpillFPR;fpSpillFPR(TR::Instruction *,TR::Register *);1;OMR::X86;Machine;0;0
fpSpillStack;fpSpillStack(TR::Instruction *);1;OMR::X86;Machine;0;0
fpStackCoerce;fpStackCoerce(TR::Register *,int32_t);1;OMR::X86;Machine;0;0
fpStackFXCH;fpStackFXCH(TR::Instruction *,int32_t);1;OMR::X86;Machine;0;0
fpStackFXCH;fpStackFXCH(TR::Instruction *,TR::Register *,_Bool);0;OMR::X86;Machine;0;0
fpStackPop;fpStackPop();1;OMR::X86;Machine;0;0
fpStackPush;fpStackPush(TR::Register *);1;OMR::X86;Machine;0;0
freeBestFPRegister;freeBestFPRegister(TR::Instruction *);1;OMR::X86;Machine;0;0
freeBestGPRegister;freeBestGPRegister(TR::Instruction *,TR::Register *,enum TR_RegisterSizes,TR::class RealRegister::RegNum,_Bool);1;OMR::X86;Machine;0;0
getCopiedFPStackRegister;getCopiedFPStackRegister(int32_t);1;OMR::X86;Machine;0;0
getDebug;getDebug();1;OMR::X86;Machine;0;0
getDummyLocalMR;getDummyLocalMR(TR::DataType);1;OMR::X86;Machine;0;0
getFPStackLocationPtr;getFPStackLocationPtr(int32_t);1;OMR::X86;Machine;0;0
getFPStackRegister;getFPStackRegister(int32_t);1;OMR::X86;Machine;0;0
getFPStackRegisterNode;getFPStackRegisterNode(int32_t);1;OMR::X86;Machine;0;0
getFPStackShape;getFPStackShape();1;OMR::X86;Machine;0;0
getFPTopOfStack;getFPTopOfStack();1;OMR::X86;Machine;0;0
getFPTopOfStackPtr;getFPTopOfStackPtr();1;OMR::X86;Machine;0;0
getFirstGlobalRegisterNumber;getFirstGlobalRegisterNumber(enum TR_RegisterKinds);1;OMR;Machine;0;0
getGlobalFPRPartitionLimit;getGlobalFPRPartitionLimit();1;OMR::X86;Machine;0;0
getGlobalGPRPartitionLimit;getGlobalGPRPartitionLimit();1;OMR::X86;Machine;0;0
getGlobalReg;getGlobalReg(TR::class RealRegister::RegNum);1;OMR::X86;Machine;0;0
getGlobalRegisterTable;getGlobalRegisterTable(const struct TR::X86LinkageProperties &);1;OMR::X86;Machine;0;0
getLast8BitGlobalGPRRegisterNumber;getLast8BitGlobalGPRRegisterNumber();1;OMR::X86;Machine;0;0
getLastGlobalFPRRegisterNumber;getLastGlobalFPRRegisterNumber();1;OMR::X86;Machine;0;0
getLastGlobalGPRRegisterNumber;getLastGlobalGPRRegisterNumber();1;OMR::X86;Machine;0;0
getLastGlobalRegisterNumber;getLastGlobalRegisterNumber(enum TR_RegisterKinds);1;OMR;Machine;0;0
getLastGlobalRegisterNumber;getLastGlobalRegisterNumber();0;OMR;Machine;0;0
getLastRealRegisterGlobalRegisterNumber;getLastRealRegisterGlobalRegisterNumber();1;OMR;Machine;0;0
getNextGlobalRegisterNumber;getNextGlobalRegisterNumber();1;OMR;Machine;0;0
getNumGlobalGPRs;getNumGlobalGPRs();1;OMR::X86;Machine;0;0
getNumberOfFPRs;getNumberOfFPRs();1;OMR;Machine;0;0
getNumberOfGPRs;getNumberOfGPRs();1;OMR;Machine;0;0
getNumberOfRegisters;getNumberOfRegisters(enum TR_RegisterKinds);1;OMR;Machine;0;0
getRealRegister;getRealRegister(TR_GlobalRegisterNumber);1;OMR;Machine;0;1
getRegisterAssociations;getRegisterAssociations();1;OMR::X86;Machine;0;0
getRegisterFile;getRegisterFile();1;OMR::X86;Machine;0;0
getSpilledRegistersList;getSpilledRegistersList();1;OMR::X86;Machine;0;0
getVirtualAssociatedWithReal;getVirtualAssociatedWithReal(TR::class RealRegister::RegNum);1;OMR::X86;Machine;0;0
getX86RealRegister;getX86RealRegister(TR::class RealRegister::RegNum);1;OMR::X86;Machine;0;0
getXMMGlobalRegister;getXMMGlobalRegister(int32_t);1;OMR::X86;Machine;0;0
initialiseFPStackRegisterFile;initialiseFPStackRegisterFile();1;OMR::X86;Machine;0;0
initialiseRegisterFile;initialiseRegisterFile(const struct TR::X86LinkageProperties &);1;OMR::X86;Machine;0;0
installRegisterFile;installRegisterFile(TR::RealRegister **);1;OMR::X86;Machine;0;0
isFPRTopOfStack;isFPRTopOfStack(TR::Register *);1;OMR::X86;Machine;0;0
isFPStackFull;isFPStackFull();1;OMR::X86;Machine;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Machine;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Machine;0;0
numGPRRegsWithheld;numGPRRegsWithheld(TR::CodeGenerator *);1;OMR::X86::AMD64;Machine;0;0
numRegsWithheld;numRegsWithheld(TR::CodeGenerator *);1;OMR::X86::AMD64;Machine;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Machine;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Machine;0;0
operator delete;operator delete(void *,size_t);0;OMR;Machine;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Machine;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Machine;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Machine;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Machine;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Machine;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Machine;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;Machine;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Machine;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Machine;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Machine;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Machine;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Machine;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Machine;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Machine;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Machine;0;0
operator=;operator=(class OMR::Machine &&);1;OMR;Machine;1;0
operator=;operator=(const class OMR::Machine &);0;OMR;Machine;1;0
operator=;operator=(const class OMR::X86::Machine &);0;OMR::X86;Machine;1;0
operator=;operator=(class OMR::X86::Machine &&);0;OMR::X86;Machine;1;0
operator=;operator=(class OMR::X86::AMD64::Machine &&);0;OMR::X86::AMD64;Machine;1;0
operator=;operator=(const class OMR::X86::AMD64::Machine &);0;OMR::X86::AMD64;Machine;1;0
operator=;operator=(class TR::Machine &&);0;TR;Machine;1;0
operator=;operator=(const class TR::Machine &);0;TR;Machine;1;0
popEntireStack;popEntireStack();1;OMR::X86;Machine;0;0
printFPRegisterStatus;printFPRegisterStatus(class TR_FrontEnd *,TR::FILE *);1;OMR::X86;Machine;0;0
printGPRegisterStatus;printGPRegisterStatus(class TR_FrontEnd *,TR::RealRegister **,TR::FILE *);1;OMR::X86;Machine;0;0
purgeDeadRegistersFromRegisterFile;purgeDeadRegistersFromRegisterFile();1;OMR::X86;Machine;0;0
resetFPStackRegisters;resetFPStackRegisters();1;OMR::X86;Machine;0;0
resetXMMGlobalRegisters;resetXMMGlobalRegisters();1;OMR::X86;Machine;0;0
reverseFPRSpillState;reverseFPRSpillState(TR::Instruction *,TR::Register *);1;OMR::X86;Machine;0;0
reverseGPRSpillState;reverseGPRSpillState(TR::Instruction *,TR::Register *,TR::RealRegister *,enum TR_RegisterSizes);1;OMR::X86;Machine;0;0
self;self();1;OMR;Machine;0;0
setCopiedFPStackRegister;setCopiedFPStackRegister(int32_t,class TR_X86FPStackRegister *);1;OMR::X86;Machine;0;0
setFPStackRegister;setFPStackRegister(int32_t,class TR_X86FPStackRegister *);1;OMR::X86;Machine;0;0
setFPStackRegisterNode;setFPStackRegisterNode(int32_t,TR::Node *);1;OMR::X86;Machine;0;0
setFPTopOfStack;setFPTopOfStack(TR::Register *);1;OMR::X86;Machine;0;0
setFirstGlobalRegisterNumber;setFirstGlobalRegisterNumber(enum TR_RegisterKinds,TR_GlobalRegisterNumber);1;OMR;Machine;0;0
setGPRWeightsFromAssociations;setGPRWeightsFromAssociations();1;OMR::X86;Machine;0;0
setLastGlobalRegisterNumber;setLastGlobalRegisterNumber(enum TR_RegisterKinds,TR_GlobalRegisterNumber);1;OMR;Machine;0;0
setLastRealRegisterGlobalRegisterNumber;setLastRealRegisterGlobalRegisterNumber(TR_GlobalRegisterNumber);1;OMR;Machine;0;0
setNumberOfFPRs;setNumberOfFPRs(uint8_t);1;OMR;Machine;0;0
setNumberOfGPRs;setNumberOfGPRs(uint8_t);1;OMR;Machine;0;0
setNumberOfRegisters;setNumberOfRegisters(enum TR_RegisterKinds,uint8_t);1;OMR;Machine;0;0
setRegisterAssociations;setRegisterAssociations(TR::Register **);1;OMR::X86;Machine;0;0
setRegisterFile;setRegisterFile(TR::RealRegister **);1;OMR::X86;Machine;0;0
setSpilledRegistersList;setSpilledRegistersList(List<TR::Register> *);1;OMR::X86;Machine;0;0
setVirtualAssociatedWithReal;setVirtualAssociatedWithReal(TR::class RealRegister::RegNum,TR::Register *);1;OMR::X86;Machine;0;0
setXMMGlobalRegister;setXMMGlobalRegister(int32_t,TR::Register *);1;OMR::X86;Machine;0;0
swapGPRegisters;swapGPRegisters(TR::Instruction *,TR::class RealRegister::RegNum,TR::class RealRegister::RegNum);1;OMR::X86;Machine;0;0
~Machine;~Machine();1;OMR;Machine;1;0
RealRegister;RealRegister(class OMR::RealRegister &&);1;OMR;RealRegister;1;0
RealRegister;RealRegister(const class OMR::RealRegister &);0;OMR;RealRegister;1;0
RealRegister;RealRegister(enum TR_RegisterKinds,uint16_t,RegState,uint16_t,RegNum,RegMask,TR::CodeGenerator *);0;OMR;RealRegister;0;0
RealRegister;RealRegister(TR::CodeGenerator *,RegNum);0;OMR;RealRegister;0;0
RealRegister;RealRegister(const class OMR::X86::RealRegister &);0;OMR::X86;RealRegister;1;0
RealRegister;RealRegister(TR::CodeGenerator *);0;OMR::X86;RealRegister;0;0
RealRegister;RealRegister(class OMR::X86::RealRegister &&);0;OMR::X86;RealRegister;1;0
RealRegister;RealRegister(enum TR_RegisterKinds,uint16_t,RegState,RegNum,RegMask,TR::CodeGenerator *);0;OMR::X86;RealRegister;0;0
RealRegister;RealRegister(class OMR::X86::AMD64::RealRegister &&);0;OMR::X86::AMD64;RealRegister;1;0
RealRegister;RealRegister(const class OMR::X86::AMD64::RealRegister &);0;OMR::X86::AMD64;RealRegister;1;0
RealRegister;RealRegister(const class TR::RealRegister &);0;TR;RealRegister;1;0
RealRegister;RealRegister(enum TR_RegisterKinds,uint16_t,RegState,TR::class RealRegister::RegNum,TR::class RealRegister::RegMask,TR::CodeGenerator *);0;TR;RealRegister;0;0
RealRegister;RealRegister(class TR::RealRegister &&);0;TR;RealRegister;1;0
Register;Register(class OMR::Register &&);1;OMR;Register;1;0
Register;Register(enum TR_RegisterKinds,uint16_t);0;OMR;Register;0;0
Register;Register(enum TR_RegisterKinds);0;OMR;Register;0;0
Register;Register(uint32_t);0;OMR;Register;0;0
Register;Register(const class OMR::Register &);0;OMR;Register;1;0
Register;Register(class OMR::X86::Register &&);0;OMR::X86;Register;1;0
Register;Register(const class OMR::X86::Register &);0;OMR::X86;Register;1;0
Register;Register(class TR::Register &&);0;TR;Register;1;0
Register;Register(const class TR::Register &);0;TR;Register;1;0
TR_X86FPStackRegister;TR_X86FPStackRegister(RegState,TR_X86FPStackRegisters,TR::class RealRegister::RegNum,TR::CodeGenerator *);1;TR;X86FPStackRegister;0;0
areUpperBitsZero;areUpperBitsZero();1;OMR::X86;Register;0;0
block;block();1;OMR;Register;0;1
containsCollectedReference;containsCollectedReference();1;OMR;Register;0;0
containsInternalPointer;containsInternalPointer();1;OMR;Register;0;0
decFutureUseCount;decFutureUseCount(ncount_t);1;OMR;Register;0;0
decOutOfLineUseCount;decOutOfLineUseCount(ncount_t);1;OMR;Register;0;0
decTotalUseCount;decTotalUseCount(ncount_t);1;OMR;Register;0;0
fprMask;fprMask(RegNum);1;OMR::X86::AMD64;RealRegister;0;0
getAssignedRealRegister;getAssignedRealRegister();1;OMR;Register;0;0
getAssignedRegister;getAssignedRegister();1;OMR;Register;0;0
getAssociation;getAssociation();1;OMR;Register;0;0
getAvailableRegistersMask;getAvailableRegistersMask(enum TR_RegisterKinds);1;OMR;RealRegister;0;0
getBackingStorage;getBackingStorage();1;OMR;Register;0;0
getBitPosInMask;getBitPosInMask(TR_RegisterMask);1;OMR;RealRegister;0;0
getCCRegister;getCCRegister();1;OMR;Register;0;0
getColouredRegister;getColouredRegister();1;OMR;Register;0;0
getEndOfRange;getEndOfRange();1;OMR;Register;0;0
getFPStackRegisterNumber;getFPStackRegisterNumber();1;TR;X86FPStackRegister;0;0
getFlags;getFlags();1;OMR;Register;0;0
getFutureUseCount;getFutureUseCount();1;OMR;Register;0;0
getHasBeenAssignedInMethod;getHasBeenAssignedInMethod();1;OMR;RealRegister;0;0
getHighOrder;getHighOrder();1;OMR;Register;0;1
getIndex;getIndex();1;OMR;Register;0;0
getInterference;getInterference();1;OMR::X86;Register;0;0
getIsAssignedMoreThanOnce;getIsAssignedMoreThanOnce();1;OMR;RealRegister;0;0
getIsAssignedOnce;getIsAssignedOnce();1;OMR;RealRegister;0;0
getIsFreeOnExit;getIsFreeOnExit();1;OMR;RealRegister;0;0
getIsSpillExtendedOutOfLoop;getIsSpillExtendedOutOfLoop();1;OMR;RealRegister;0;0
getKind;getKind();1;OMR;Register;0;1
getKindAsMask;getKindAsMask();1;OMR;Register;0;0
getLiveRegisterInfo;getLiveRegisterInfo();1;OMR::X86;Register;0;0
getLowOrder;getLowOrder();1;OMR;Register;0;1
getMemRef;getMemRef();1;OMR::X86;Register;0;0
getOutOfLineUseCount;getOutOfLineUseCount();1;OMR;Register;0;0
getPinningArrayPointer;getPinningArrayPointer();1;OMR;Register;0;0
getRealRegister;getRealRegister();1;OMR;Register;0;1
getRealRegisterMask;getRealRegisterMask();1;OMR;RealRegister;0;0
getRealRegisterMask;getRealRegisterMask(enum TR_RegisterKinds,RegNum);0;OMR::X86;RealRegister;0;0
getRegister;getRegister();1;OMR;Register;0;0
getRegisterKindName;getRegisterKindName(TR::Compilation *,enum TR_RegisterKinds);1;OMR;Register;0;0
getRegisterName;getRegisterName(TR::Compilation *,enum TR_RegisterSizes);1;OMR;Register;0;1
getRegisterNumber;getRegisterNumber();1;OMR;RealRegister;0;0
getRegisterPair;getRegisterPair();1;OMR;Register;0;1
getRematerializationInfo;getRematerializationInfo();1;OMR::X86;Register;0;0
getSiblingRegister;getSiblingRegister();1;OMR;Register;0;0
getStartOfRange;getStartOfRange();1;OMR;Register;0;0
getStartOfRangeNode;getStartOfRangeNode();1;OMR;Register;0;0
getState;getState();1;OMR;RealRegister;0;0
getTotalUseCount;getTotalUseCount();1;OMR;Register;0;0
getWeight;getWeight();1;OMR;RealRegister;0;0
gprMask;gprMask(RegNum);1;OMR::X86::AMD64;RealRegister;0;0
hasBetterSpillPlacement;hasBetterSpillPlacement();1;OMR::X86;Register;0;0
incFutureUseCount;incFutureUseCount(ncount_t);1;OMR;Register;0;0
incOutOfLineUseCount;incOutOfLineUseCount(ncount_t);1;OMR;Register;0;0
incTotalUseCount;incTotalUseCount(ncount_t);1;OMR;Register;0;0
isAssignedAsByteRegister;isAssignedAsByteRegister();1;OMR::X86;Register;0;0
isDiscardable;isDiscardable();1;OMR::X86;Register;0;0
isLive;isLive();1;OMR;Register;0;0
isPlaceholderReg;isPlaceholderReg();1;OMR;Register;0;0
isSinglePrecision;isSinglePrecision();1;OMR;Register;0;0
isSpilledToSecondHalf;isSpilledToSecondHalf();1;OMR::X86;Register;0;0
isUpperHalfDead;isUpperHalfDead();1;OMR;Register;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Register;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Register;0;0
mayNeedPrecisionAdjustment;mayNeedPrecisionAdjustment();1;OMR::X86;Register;0;0
mmIndex;mmIndex(uint8_t);1;OMR::X86::AMD64;RealRegister;0;0
mmrMask;mmrMask(RegNum);1;OMR::X86::AMD64;RealRegister;0;0
needsDisp;needsDisp();1;OMR::X86::AMD64;RealRegister;0;0
needsLazyClobbering;needsLazyClobbering();1;OMR::X86;Register;0;0
needsPrecisionAdjustment;needsPrecisionAdjustment();1;OMR::X86;Register;0;0
needsSIB;needsSIB();1;OMR::X86::AMD64;RealRegister;0;0
operator delete;operator delete(void *,size_t);1;OMR;Register;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Register;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Register;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Register;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Register;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Register;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Register;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Register;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Register;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Register;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Register;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Register;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Register;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Register;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Register;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Register;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Register;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Register;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Register;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Register;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Register;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Register;0;0
operator=;operator=(const class OMR::Register &);1;OMR;Register;1;0
operator=;operator=(class OMR::Register &&);0;OMR;Register;1;0
operator=;operator=(class OMR::X86::Register &&);0;OMR::X86;Register;1;0
operator=;operator=(const class OMR::X86::Register &);0;OMR::X86;Register;1;0
operator=;operator=(class TR::Register &&);0;TR;Register;1;0
operator=;operator=(const class TR::Register &);0;TR;Register;1;0
operator=;operator=(class OMR::RealRegister &&);0;OMR;RealRegister;1;0
operator=;operator=(const class OMR::RealRegister &);0;OMR;RealRegister;1;0
operator=;operator=(const class OMR::X86::RealRegister &);0;OMR::X86;RealRegister;1;0
operator=;operator=(class OMR::X86::RealRegister &&);0;OMR::X86;RealRegister;1;0
operator=;operator=(const class OMR::X86::AMD64::RealRegister &);0;OMR::X86::AMD64;RealRegister;1;0
operator=;operator=(class OMR::X86::AMD64::RealRegister &&);0;OMR::X86::AMD64;RealRegister;1;0
operator=;operator=(const class TR::RealRegister &);0;TR;RealRegister;1;0
operator=;operator=(class TR::RealRegister &&);0;TR;RealRegister;1;0
operator=;operator=(class TR_X86FPStackRegister &&);0;TR;X86FPStackRegister;1;0
operator=;operator=(const class TR_X86FPStackRegister &);0;TR;X86FPStackRegister;1;0
print;print(TR::Compilation *,TR::FILE *,enum TR_RegisterSizes);1;OMR;Register;0;1
rIndex;rIndex(uint8_t);1;OMR::X86::AMD64;RealRegister;0;0
regMaskToRealRegister;regMaskToRealRegister(TR_RegisterMask,enum TR_RegisterKinds,TR::CodeGenerator *);1;OMR;RealRegister;0;0
resetIsDiscardable;resetIsDiscardable();1;OMR::X86;Register;0;0
resetIsLive;resetIsLive();1;OMR;Register;0;0
resetMayNeedPrecisionAdjustment;resetMayNeedPrecisionAdjustment();1;OMR::X86;Register;0;0
resetNeedsPrecisionAdjustment;resetNeedsPrecisionAdjustment();1;OMR::X86;Register;0;0
resetPlaceholderReg;resetPlaceholderReg();1;OMR;Register;0;0
resetState;resetState(RegState);1;OMR;RealRegister;0;0
rexBits;rexBits(uint8_t,_Bool);1;OMR::X86::AMD64;RealRegister;0;0
self;self();1;OMR;Register;0;0
setAssignedAsByteRegister;setAssignedAsByteRegister(_Bool);1;OMR::X86;Register;0;0
setAssignedRegister;setAssignedRegister(TR::Register *);1;OMR;Register;0;0
setAssociation;setAssociation(uint32_t);1;OMR;Register;0;0
setBackingStorage;setBackingStorage(class TR_BackingStore *);1;OMR;Register;0;0
setBaseRegisterFieldInSIB;setBaseRegisterFieldInSIB(uint8_t *);1;OMR::X86::AMD64;RealRegister;0;0
setCCRegister;setCCRegister(TR::Register *);1;OMR;Register;0;0
setColouredRegister;setColouredRegister(TR::Register *);1;OMR;Register;0;0
setContainsCollectedReference;setContainsCollectedReference();1;OMR;Register;0;0
setContainsInternalPointer;setContainsInternalPointer();1;OMR;Register;0;0
setEndOfRange;setEndOfRange(TR::Instruction *);1;OMR;Register;0;0
setFPStackRegisterNumber;setFPStackRegisterNumber(TR_X86FPStackRegisters);1;TR;X86FPStackRegister;0;0
setFlags;setFlags(uint32_t);1;OMR;Register;0;0
setFutureUseCount;setFutureUseCount(ncount_t);1;OMR;Register;0;0
setHasBeenAssignedInMethod;setHasBeenAssignedInMethod(_Bool);1;OMR;RealRegister;0;0
setHasBetterSpillPlacement;setHasBetterSpillPlacement(_Bool);1;OMR::X86;Register;0;0
setIndex;setIndex(uint32_t);1;OMR;Register;0;0
setIndexRegisterFieldInSIB;setIndexRegisterFieldInSIB(uint8_t *);1;OMR::X86::AMD64;RealRegister;0;0
setInterference;setInterference(uint32_t);1;OMR::X86;Register;0;0
setIsAssignedMoreThanOnce;setIsAssignedMoreThanOnce(_Bool);1;OMR;RealRegister;0;0
setIsAssignedOnce;setIsAssignedOnce(_Bool);1;OMR;RealRegister;0;0
setIsDiscardable;setIsDiscardable();1;OMR::X86;Register;0;0
setIsFreeOnExit;setIsFreeOnExit(_Bool);1;OMR;RealRegister;0;0
setIsLive;setIsLive();1;OMR;Register;0;0
setIsSinglePrecision;setIsSinglePrecision(_Bool);1;OMR;Register;0;0
setIsSpillExtendedOutOfLoop;setIsSpillExtendedOutOfLoop(_Bool);1;OMR;RealRegister;0;0
setIsSpilledToSecondHalf;setIsSpilledToSecondHalf(_Bool);1;OMR::X86;Register;0;0
setIsUpperHalfDead;setIsUpperHalfDead(_Bool);1;OMR;Register;0;0
setKind;setKind(enum TR_RegisterKinds);1;OMR;Register;0;0
setLiveRegisterInfo;setLiveRegisterInfo(class TR_LiveRegisterInfo *);1;OMR::X86;Register;0;0
setMayNeedPrecisionAdjustment;setMayNeedPrecisionAdjustment();1;OMR::X86;Register;0;0
setMemRef;setMemRef(TR::MemoryReference *);1;OMR::X86;Register;0;0
setNeedsLazyClobbering;setNeedsLazyClobbering(_Bool);1;OMR::X86;Register;0;0
setNeedsPrecisionAdjustment;setNeedsPrecisionAdjustment();1;OMR::X86;Register;0;0
setOutOfLineUseCount;setOutOfLineUseCount(ncount_t);1;OMR;Register;0;0
setPinningArrayPointer;setPinningArrayPointer(TR::AutomaticSymbol *);1;OMR;Register;0;0
setPlaceholderReg;setPlaceholderReg();1;OMR;Register;0;0
setRMRegisterFieldInModRM;setRMRegisterFieldInModRM(uint8_t *);1;OMR::X86::AMD64;RealRegister;0;0
setRealRegisterMask;setRealRegisterMask(RegMask);1;OMR;RealRegister;0;0
setRegisterFieldInModRM;setRegisterFieldInModRM(uint8_t *);1;OMR::X86::AMD64;RealRegister;0;0
setRegisterFieldInOpcode;setRegisterFieldInOpcode(uint8_t *);1;OMR::X86::AMD64;RealRegister;0;0
setRegisterNumber;setRegisterNumber(RegNum);1;OMR;RealRegister;0;0
setRegisterNumber;setRegisterNumber();0;OMR::X86::AMD64;RealRegister;0;0
setRematerializationInfo;setRematerializationInfo(class TR_RematerializationInfo *);1;OMR::X86;Register;0;0
setSiblingRegister;setSiblingRegister(TR::Register *);1;OMR;Register;0;0
setStartOfRange;setStartOfRange(TR::Instruction *);1;OMR;Register;0;0
setStartOfRangeNode;setStartOfRangeNode(TR::Node *);1;OMR;Register;0;0
setState;setState(RegState,_Bool);1;OMR;RealRegister;0;0
setTotalUseCount;setTotalUseCount(ncount_t);1;OMR;Register;0;0
setUpperBitsAreZero;setUpperBitsAreZero(_Bool);1;OMR::X86;Register;0;0
setWeight;setWeight(uint16_t);1;OMR;RealRegister;0;0
unblock;unblock();1;OMR;Register;0;1
xmmIndex;xmmIndex(uint8_t);1;OMR::X86::AMD64;RealRegister;0;0
xmmrMask;xmmrMask(RegNum);1;OMR::X86::AMD64;RealRegister;0;0
~RealRegister;~RealRegister();1;OMR;RealRegister;1;0
~Register;~Register();1;OMR;Register;1;0
~TR_X86FPStackRegister;~TR_X86FPStackRegister();1;TR;X86FPStackRegister;1;0
BBEndEvaluator;BBEndEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
BBStartEvaluator;BBStartEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
FloatingPointAndVectorBinaryArithmeticEvaluator;FloatingPointAndVectorBinaryArithmeticEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
GlRegDepsEvaluator;GlRegDepsEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
NOPEvaluator;NOPEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
PrefetchEvaluator;PrefetchEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
SIMDRegLoadEvaluator;SIMDRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
SIMDRegStoreEvaluator;SIMDRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
SIMDgetvelemEvaluator;SIMDgetvelemEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
SIMDloadEvaluator;SIMDloadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
SIMDsplatsEvaluator;SIMDsplatsEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
SIMDstoreEvaluator;SIMDstoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
SSE2ArraycmpEvaluator;SSE2ArraycmpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
SSE2ArraycmpLenEvaluator;SSE2ArraycmpLenEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
SSE2IfArraycmpEvaluator;SSE2IfArraycmpEvaluator(TR::Node *,TR::LabelSymbol *,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
VMarrayStoreCheckArrayCopyEvaluator;VMarrayStoreCheckArrayCopyEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
VMifArrayCmpEvaluator;VMifArrayCmpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
VMifInstanceOfEvaluator;VMifInstanceOfEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
VMinlineCallEvaluator;VMinlineCallEvaluator(TR::Node *,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
VMmergenewEvaluator;VMmergenewEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
VMtestForReferenceArray;VMtestForReferenceArray(TR::Node *,TR::Register *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
a2lEvaluator;a2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
aRegLoadEvaluator;aRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
acmpeqEvaluator;acmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
aconstEvaluator;aconstEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
aiaddEvaluator;aiaddEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
aloadEvaluator;aloadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
analyseAddForLEA;analyseAddForLEA(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
analyseSubForLEA;analyseSubForLEA(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
arraycmpEvaluator;arraycmpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
arraycopyEvaluator;arraycopyEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
arraysetEvaluator;arraysetEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
arraytranslateAndTestEvaluator;arraytranslateAndTestEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
arraytranslateEvaluator;arraytranslateEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
atomicorEvaluator;atomicorEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
b2iEvaluator;b2iEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
b2lEvaluator;b2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
b2sEvaluator;b2sEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
badILOpEvaluator;badILOpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
baddEvaluator;baddEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bandEvaluator;bandEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bcmpEvaluator;bcmpEvaluator(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bcmpEvaluator;bcmpEvaluator(TR::Node *,TR::CodeGenerator *);0;OMR::X86;TreeEvaluator;0;0
bcmpeqEvaluator;bcmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bcmpgeEvaluator;bcmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bcmpgtEvaluator;bcmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bcmpleEvaluator;bcmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bcmpltEvaluator;bcmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bconstEvaluator;bconstEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bitpermuteEvaluator;bitpermuteEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bloadEvaluator;bloadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bnegEvaluator;bnegEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
borEvaluator;borEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bshlEvaluator;bshlEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bshrEvaluator;bshrEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bstoreEvaluator;bstoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bsubEvaluator;bsubEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bu2iEvaluator;bu2iEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bu2lEvaluator;bu2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
bu2sEvaluator;bu2sEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bucmpEvaluator;bucmpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bushrEvaluator;bushrEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
butestEvaluator;butestEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bxorEvaluator;bxorEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
bztestnsetEvaluator;bztestnsetEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
c2iEvaluator;c2iEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
c2lEvaluator;c2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
caddEvaluator;caddEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
canUseFCOMIInstructions;canUseFCOMIInstructions(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
candEvaluator;candEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
cconstEvaluator;cconstEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
cdivEvaluator;cdivEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
checkNonNegativePowerOfTwo;checkNonNegativePowerOfTwo(int64_t);1;OMR;TreeEvaluator;0;0
checkNonNegativePowerOfTwo;checkNonNegativePowerOfTwo(int32_t);0;OMR;TreeEvaluator;0;0
checkPositiveOrNegativePowerOfTwo;checkPositiveOrNegativePowerOfTwo(int32_t);1;OMR;TreeEvaluator;0;0
checkPositiveOrNegativePowerOfTwo;checkPositiveOrNegativePowerOfTwo(int64_t);0;OMR;TreeEvaluator;0;0
classDepth;classDepth(TR::Node *,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
cmp2BytesEvaluator;cmp2BytesEvaluator(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
cmulEvaluator;cmulEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
coerceFPOperandsToXMMRs;coerceFPOperandsToXMMRs(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
coerceFPRToXMMR;coerceFPRToXMMR(TR::Node *,TR::Register *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
coerceXMMRToFPR;coerceXMMRToFPR(TR::Node *,TR::Register *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
commonFPRemEvaluator;commonFPRemEvaluator(TR::Node *,TR::CodeGenerator *,_Bool);1;OMR::X86;TreeEvaluator;0;0
compare2BytesForOrder;compare2BytesForOrder(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareBytesForOrder;compareBytesForOrder(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareDoubleAndBranchEvaluator;compareDoubleAndBranchEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareDoubleAndSetEvaluator;compareDoubleAndSetEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareDoubleEvaluator;compareDoubleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareFloatAndBranchEvaluator;compareFloatAndBranchEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareFloatAndSetEvaluator;compareFloatAndSetEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareFloatEvaluator;compareFloatEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareFloatOrDoubleForOrder;compareFloatOrDoubleForOrder(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareGPMemoryToImmediate;compareGPMemoryToImmediate(TR::Node *,TR::MemoryReference *,int32_t,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareGPRegisterToConstantForEquality;compareGPRegisterToConstantForEquality(TR::Node *,int32_t,TR::Register *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareGPRegisterToImmediate;compareGPRegisterToImmediate(TR::Node *,TR::Register *,int32_t,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareGPRegisterToImmediateForEquality;compareGPRegisterToImmediateForEquality(TR::Node *,TR::Register *,int32_t,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareIntegersForEquality;compareIntegersForEquality(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareIntegersForOrder;compareIntegersForOrder(TR::Node *,TR::Node *,TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
compareIntegersForOrder;compareIntegersForOrder(TR::Node *,TR::CodeGenerator *);0;OMR::X86;TreeEvaluator;0;0
compressedRefsEvaluator;compressedRefsEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
computeCCEvaluator;computeCCEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
conditionalHelperEvaluator;conditionalHelperEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
constNodeValueIs32BitSigned;constNodeValueIs32BitSigned(TR::Node *,intptrj_t *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
conversionAnalyser;conversionAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
corEvaluator;corEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
cremEvaluator;cremEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
cshlEvaluator;cshlEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
cstoreEvaluator;cstoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
csubEvaluator;csubEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
cushrEvaluator;cushrEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
cxorEvaluator;cxorEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
d2bEvaluator;d2bEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
d2cEvaluator;d2cEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
d2fEvaluator;d2fEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
d2lEvaluator;d2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
d2sEvaluator;d2sEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
dRegLoadEvaluator;dRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
dRegStoreEvaluator;dRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
daddEvaluator;daddEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
dbits2lEvaluator;dbits2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
dconstEvaluator;dconstEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ddivEvaluator;ddivEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
directCallEvaluator;directCallEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
dloadEvaluator;dloadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
dmulEvaluator;dmulEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
dnegEvaluator;dnegEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
dstoreEvaluatorHelper;dstoreEvaluatorHelper(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
dsubEvaluator;dsubEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
evaluateNULLCHKWithPossibleResolve;evaluateNULLCHKWithPossibleResolve(TR::Node *,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
evaluateNodesWithFutureUses;evaluateNodesWithFutureUses(TR::Node *,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
f2bEvaluator;f2bEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
f2cEvaluator;f2cEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
f2dEvaluator;f2dEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
f2iEvaluator;f2iEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
f2lEvaluator;f2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
f2sEvaluator;f2sEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fRegLoadEvaluator;fRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fRegStoreEvaluator;fRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
faddEvaluator;faddEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fbits2iEvaluator;fbits2iEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fconstEvaluator;fconstEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fdivEvaluator;fdivEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fenceEvaluator;fenceEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
floadEvaluator;floadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
floatingPointStoreEvaluator;floatingPointStoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fmulEvaluator;fmulEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fnegEvaluator;fnegEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fpBinaryArithmeticEvaluator;fpBinaryArithmeticEvaluator(TR::Node *,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fpConvertToInt;fpConvertToInt(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fpConvertToLong;fpConvertToLong(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fpRemEvaluator;fpRemEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fpReturnEvaluator;fpReturnEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
fsubEvaluator;fsubEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
genArithmeticInstructionsForOverflowCHK;genArithmeticInstructionsForOverflowCHK(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
genNullTestSequence;genNullTestSequence(TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
generateBranchOrSetOnFPCompare;generateBranchOrSetOnFPCompare(TR::Node *,TR::Register *,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
generateFPCompareResult;generateFPCompareResult(TR::Node *,TR::Register *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
generateIAddOrSubForOverflowCheck;generateIAddOrSubForOverflowCheck(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
generateLAddOrSubForOverflowCheck;generateLAddOrSubForOverflowCheck(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
generateLEAForLoadAddr;generateLEAForLoadAddr(TR::Node *,TR::MemoryReference *,TR::SymbolReference *,TR::CodeGenerator *,_Bool);1;OMR::X86;TreeEvaluator;0;0
generateMemoryShift;generateMemoryShift(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
generateRegisterShift;generateRegisterShift(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
getHighGlobalRegisterNumberIfAny;getHighGlobalRegisterNumberIfAny(TR::Node *,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
getNodeIs64Bit;getNodeIs64Bit(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
getOverflowCatchBlock;getOverflowCatchBlock(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
gotoEvaluator;gotoEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
i2aEvaluator;i2aEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
i2bEvaluator;i2bEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
i2dEvaluator;i2dEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
i2fEvaluator;i2fEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
i2lEvaluator;i2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
iRegStoreEvaluator;iRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
iandEvaluator;iandEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ibits2fEvaluator;ibits2fEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ibyteswapEvaluator;ibyteswapEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
icmpEvaluator;icmpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
icmpsetEvaluator;icmpsetEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
iconstEvaluator;iconstEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifacmpeqEvaluator;ifacmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
ifbcmpeqEvaluator;ifbcmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifbcmpgeEvaluator;ifbcmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifbcmpgtEvaluator;ifbcmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifbcmpleEvaluator;ifbcmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifbcmpltEvaluator;ifbcmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifbucmpgeEvaluator;ifbucmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifbucmpgtEvaluator;ifbucmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifbucmpleEvaluator;ifbucmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifbucmpltEvaluator;ifbucmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
iflcmpeqEvaluator;iflcmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpgeEvaluator;iflcmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpgtEvaluator;iflcmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpleEvaluator;iflcmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpltEvaluator;iflcmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
iflcmpneEvaluator;iflcmpneEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
ifscmpeqEvaluator;ifscmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifscmpgeEvaluator;ifscmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifscmpgtEvaluator;ifscmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifscmpleEvaluator;ifscmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifscmpltEvaluator;ifscmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifsucmpeqEvaluator;ifsucmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifsucmpgeEvaluator;ifsucmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifsucmpgtEvaluator;ifsucmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifsucmpleEvaluator;ifsucmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifsucmpltEvaluator;ifsucmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ifxcmpoEvaluator;ifxcmpoEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
igotoEvaluator;igotoEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
iloadEvaluator;iloadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ilstoreEvaluator;ilstoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
indirectCallEvaluator;indirectCallEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
initializeStrictlyFutureUseCounts;initializeStrictlyFutureUseCounts(TR::Node *,vcount_t,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
insertLoadConstant;insertLoadConstant(TR::Node *,TR::Register *,intptrj_t,enum TR_RematerializableTypes,TR::CodeGenerator *,TR::Instruction *);1;OMR::X86;TreeEvaluator;0;0
insertLoadMemory;insertLoadMemory(TR::Node *,TR::Register *,TR::MemoryReference *,enum TR_RematerializableTypes,TR::CodeGenerator *,TR::Instruction *);1;OMR::X86;TreeEvaluator;0;0
insertPrecisionAdjustment;insertPrecisionAdjustment(TR::Register *,TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
instanceOfOrCheckCastNeedEqualityTest;instanceOfOrCheckCastNeedEqualityTest(TR::Node *,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
instanceOfOrCheckCastNeedSuperTest;instanceOfOrCheckCastNeedSuperTest(TR::Node *,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
intOrLongClobberEvaluate;intOrLongClobberEvaluate(TR::Node *,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerAbsEvaluator;integerAbsEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerAddEvaluator;integerAddEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerCmpeqEvaluator;integerCmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerCmpgeEvaluator;integerCmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerCmpgtEvaluator;integerCmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerCmpleEvaluator;integerCmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerCmpltEvaluator;integerCmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerCmpneEvaluator;integerCmpneEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerConstNodeValue;integerConstNodeValue(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerDivOrRemEvaluator;integerDivOrRemEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerDualAddOrSubEvaluator;integerDualAddOrSubEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerDualMulEvaluator;integerDualMulEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerEqualityHelper;integerEqualityHelper(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerIfCmpeqEvaluator;integerIfCmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerIfCmpgeEvaluator;integerIfCmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerIfCmpgtEvaluator;integerIfCmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerIfCmpleEvaluator;integerIfCmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerIfCmpltEvaluator;integerIfCmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerIfCmpneEvaluator;integerIfCmpneEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerMulEvaluator;integerMulEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerMulhEvaluator;integerMulhEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerNegEvaluator;integerNegEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerOrderHelper;integerOrderHelper(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerRegLoadEvaluator;integerRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerReturnEvaluator;integerReturnEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerRolEvaluator;integerRolEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerShlEvaluator;integerShlEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerShrEvaluator;integerShrEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerStoreEvaluator;integerStoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerSubEvaluator;integerSubEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
integerUshrEvaluator;integerUshrEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
iorEvaluator;iorEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
isStaticClassSymRef;isStaticClassSymRef(TR::SymbolReference *);1;OMR;TreeEvaluator;0;0
istoreEvaluator;istoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
iternaryEvaluator;iternaryEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
iu2lEvaluator;iu2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
iucmpEvaluator;iucmpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ixorEvaluator;ixorEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
l2aEvaluator;l2aEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
l2dEvaluator;l2dEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
l2fEvaluator;l2fEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
l2iEvaluator;l2iEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lRegLoadEvaluator;lRegLoadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lRegStoreEvaluator;lRegStoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
laddEvaluator;laddEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
landEvaluator;landEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lbits2dEvaluator;lbits2dEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lcmpEvaluator;lcmpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lcmpeqEvaluator;lcmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lcmpgeEvaluator;lcmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lcmpgtEvaluator;lcmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lcmpleEvaluator;lcmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lcmpltEvaluator;lcmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lcmpneEvaluator;lcmpneEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lconstEvaluator;lconstEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lloadEvaluator;lloadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
loadConstant;loadConstant(TR::Node *,intptrj_t,enum TR_RematerializableTypes,TR::CodeGenerator *,TR::Register *);1;OMR::X86;TreeEvaluator;0;0
loadMemory;loadMemory(TR::Node *,TR::MemoryReference *,enum TR_RematerializableTypes,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
loadaddrEvaluator;loadaddrEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
logicalEvaluator;logicalEvaluator(TR::Node *,enum TR_X86OpCodes [],TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
longStoreEvaluator;longStoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lookupEvaluator;lookupEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
lorEvaluator;lorEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lstoreEvaluator;lstoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lsubEvaluator;lsubEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
lxorEvaluator;lxorEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
minmaxEvaluator;minmaxEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
negEvaluatorHelper;negEvaluatorHelper(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
nodeIsIAddOverflowCheck;nodeIsIAddOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);1;OMR;TreeEvaluator;0;0
nodeIsIArithmeticOverflowCheck;nodeIsIArithmeticOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);1;OMR;TreeEvaluator;0;0
nodeIsISubOverflowCheck;nodeIsISubOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);1;OMR;TreeEvaluator;0;0
nodeIsLAddOverflowCheck;nodeIsLAddOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);1;OMR;TreeEvaluator;0;0
nodeIsLArithmeticOverflowCheck;nodeIsLArithmeticOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);1;OMR;TreeEvaluator;0;0
nodeIsLSubOverflowCheck;nodeIsLSubOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *);1;OMR;TreeEvaluator;0;0
overflowCHKEvaluator;overflowCHKEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
padUnresolvedDataReferences;padUnresolvedDataReferences(TR::Node *,TR::SymbolReference &,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
passThroughEvaluator;passThroughEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
performCall;performCall(TR::Node *,_Bool,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
performDload;performDload(TR::Node *,TR::MemoryReference *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
performFload;performFload(TR::Node *,TR::MemoryReference *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
performHelperCall;performHelperCall(TR::Node *,TR::SymbolReference *,TR::ILOpCodes,_Bool,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
performIload;performIload(TR::Node *,TR::MemoryReference *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
performSimpleAtomicMemoryUpdate;performSimpleAtomicMemoryUpdate(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
removeLiveDiscardableStatics;removeLiveDiscardableStatics(TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
returnEvaluator;returnEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
reverseLoadEvaluator;reverseLoadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
reverseStoreEvaluator;reverseStoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
rotateMask;rotateMask(_Bool);1;OMR::X86;TreeEvaluator;0;0
s2iEvaluator;s2iEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
s2lEvaluator;s2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
saddEvaluator;saddEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sandEvaluator;sandEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sbyteswapEvaluator;sbyteswapEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
scmpEvaluator;scmpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
scmpeqEvaluator;scmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
scmpgeEvaluator;scmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
scmpgtEvaluator;scmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
scmpleEvaluator;scmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
scmpltEvaluator;scmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sconstEvaluator;sconstEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
setupProfiledGuardRelocation;setupProfiledGuardRelocation(TR::X86RegImmInstruction *,TR::Node *,TR_ExternalRelocationTargetKind);1;OMR::X86;TreeEvaluator;0;0
shiftMask;shiftMask(_Bool);1;OMR::X86;TreeEvaluator;0;0
signedIntegerDivOrRemAnalyser;signedIntegerDivOrRemAnalyser(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sloadEvaluator;sloadEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
snegEvaluator;snegEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sorEvaluator;sorEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sshlEvaluator;sshlEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sshrEvaluator;sshrEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sstoreEvaluator;sstoreEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
ssubEvaluator;ssubEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
stopUsingCopyRegAddr;stopUsingCopyRegAddr(TR::Node *,TR::Register *&,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
stopUsingCopyRegInteger;stopUsingCopyRegInteger(TR::Node *,TR::Register *&,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
su2iEvaluator;su2iEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
su2lEvaluator;su2lEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86::AMD64;TreeEvaluator;0;0
sucmpEvaluator;sucmpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sucmpeqEvaluator;sucmpeqEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sucmpgeEvaluator;sucmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sucmpgtEvaluator;sucmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sucmpleEvaluator;sucmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sucmpltEvaluator;sucmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sushrEvaluator;sushrEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sutestEvaluator;sutestEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
sxorEvaluator;sxorEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
tableEvaluator;tableEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
tabortEvaluator;tabortEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
tfinishEvaluator;tfinishEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
treetopEvaluator;treetopEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
tstartEvaluator;tstartEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
unImpOpEvaluator;unImpOpEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR;TreeEvaluator;0;0
unsignedIntegerCmpgeEvaluator;unsignedIntegerCmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
unsignedIntegerCmpgtEvaluator;unsignedIntegerCmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
unsignedIntegerCmpleEvaluator;unsignedIntegerCmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
unsignedIntegerCmpltEvaluator;unsignedIntegerCmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
unsignedIntegerIfCmpgeEvaluator;unsignedIntegerIfCmpgeEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
unsignedIntegerIfCmpgtEvaluator;unsignedIntegerIfCmpgtEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
unsignedIntegerIfCmpleEvaluator;unsignedIntegerIfCmpleEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
unsignedIntegerIfCmpltEvaluator;unsignedIntegerIfCmpltEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
zccAddSubEvaluator;zccAddSubEvaluator(TR::Node *,TR::CodeGenerator *);1;OMR::X86;TreeEvaluator;0;0
CPU;CPU(class OMR::CPU &&);1;OMR;CPU;1;0
CPU;CPU(const class OMR::CPU &);0;OMR;CPU;1;0
CPU;CPU();0;OMR;CPU;0;0
CPU;CPU(const class OMR::X86::CPU &);0;OMR::X86;CPU;1;0
CPU;CPU(class OMR::X86::CPU &&);0;OMR::X86;CPU;1;0
CPU;CPU(const class TR::CPU &);0;TR;CPU;1;0
CPU;CPU(class TR::CPU &&);0;TR;CPU;1;0
endianness;endianness();1;OMR;CPU;0;0
getSupportsHardwareCopySign;getSupportsHardwareCopySign();1;OMR;CPU;0;0
getSupportsHardwareRound;getSupportsHardwareRound();1;OMR;CPU;0;0
getSupportsHardwareSQRT;getSupportsHardwareSQRT();1;OMR;CPU;0;0
getX86ProcessorFeatureFlags;getX86ProcessorFeatureFlags(TR::Compilation *);1;OMR::X86;CPU;0;0
getX86ProcessorFeatureFlags2;getX86ProcessorFeatureFlags2(TR::Compilation *);1;OMR::X86;CPU;0;0
getX86ProcessorFeatureFlags8;getX86ProcessorFeatureFlags8(TR::Compilation *);1;OMR::X86;CPU;0;0
getX86ProcessorSignature;getX86ProcessorSignature(TR::Compilation *);1;OMR::X86;CPU;0;0
getX86ProcessorVendorId;getX86ProcessorVendorId(TR::Compilation *);1;OMR::X86;CPU;0;0
hasFPU;hasFPU();1;OMR;CPU;0;0
hasPopulationCountInstruction;hasPopulationCountInstruction();1;OMR;CPU;0;0
id;id();1;OMR;CPU;0;0
initializeByHostQuery;initializeByHostQuery();1;OMR;CPU;0;0
is;is(enum TR_Processor);1;OMR;CPU;0;0
isAMD64;isAMD64();1;OMR;CPU;0;0
isARM;isARM();1;OMR;CPU;0;0
isAtLeast;isAtLeast(enum TR_Processor);1;OMR;CPU;0;0
isAtMost;isAtMost(enum TR_Processor);1;OMR;CPU;0;0
isBigEndian;isBigEndian();1;OMR;CPU;0;0
isEarlierThan;isEarlierThan(enum TR_Processor);1;OMR;CPU;0;0
isI386;isI386();1;OMR;CPU;0;0
isLaterThan;isLaterThan(enum TR_Processor);1;OMR;CPU;0;0
isLittleEndian;isLittleEndian();1;OMR;CPU;0;0
isNot;isNot(enum TR_Processor);1;OMR;CPU;0;0
isPower;isPower();1;OMR;CPU;0;0
isX86;isX86();1;OMR;CPU;0;0
isZ;isZ();1;OMR;CPU;0;0
majorArch;majorArch();1;OMR;CPU;0;0
minorArch;minorArch();1;OMR;CPU;0;0
operator=;operator=(class OMR::CPU &&);1;OMR;CPU;1;0
operator=;operator=(const class OMR::CPU &);0;OMR;CPU;1;0
operator=;operator=(class OMR::X86::CPU &&);0;OMR::X86;CPU;1;0
operator=;operator=(const class OMR::X86::CPU &);0;OMR::X86;CPU;1;0
operator=;operator=(class TR::CPU &&);0;TR;CPU;1;0
operator=;operator=(const class TR::CPU &);0;TR;CPU;1;0
queryX86TargetCPUID;queryX86TargetCPUID(TR::Compilation *);1;OMR::X86;CPU;0;0
self;self();1;OMR;CPU;0;0
setEndianness;setEndianness(TR::Endianness);1;OMR;CPU;0;0
setMajorArch;setMajorArch(TR::MajorArchitecture);1;OMR;CPU;0;0
setMinorArch;setMinorArch(TR::MinorArchitecture);1;OMR;CPU;0;0
setProcessor;setProcessor(enum TR_Processor);1;OMR;CPU;0;0
supportsDecimalFloatingPoint;supportsDecimalFloatingPoint();1;OMR;CPU;0;0
testOSForSSESupport;testOSForSSESupport(TR::Compilation *);1;OMR::X86;CPU;0;0
~CPU;~CPU();1;OMR;CPU;1;0
DebugEnv;DebugEnv();1;OMR;DebugEnv;0;0
DebugEnv;DebugEnv(const class OMR::DebugEnv &);0;OMR;DebugEnv;1;0
DebugEnv;DebugEnv(class OMR::DebugEnv &&);0;OMR;DebugEnv;1;0
DebugEnv;DebugEnv(const class OMR::X86::DebugEnv &);0;OMR::X86;DebugEnv;1;0
DebugEnv;DebugEnv(class OMR::X86::DebugEnv &&);0;OMR::X86;DebugEnv;1;0
DebugEnv;DebugEnv(const class TR::DebugEnv &);0;TR;DebugEnv;1;0
DebugEnv;DebugEnv(class TR::DebugEnv &&);0;TR;DebugEnv;1;0
breakPoint;breakPoint();1;OMR;DebugEnv;0;0
codeByteColumnWidth;codeByteColumnWidth();1;OMR;DebugEnv;0;0
extraAssertMessage;extraAssertMessage(TR::Compilation *);1;OMR;DebugEnv;0;0
hexAddressFieldWidthInChars;hexAddressFieldWidthInChars();1;OMR;DebugEnv;0;0
hexAddressWidthInChars;hexAddressWidthInChars();1;OMR;DebugEnv;0;0
operator=;operator=(class OMR::DebugEnv &&);1;OMR;DebugEnv;1;0
operator=;operator=(const class OMR::DebugEnv &);0;OMR;DebugEnv;1;0
operator=;operator=(class OMR::X86::DebugEnv &&);0;OMR::X86;DebugEnv;1;0
operator=;operator=(const class OMR::X86::DebugEnv &);0;OMR::X86;DebugEnv;1;0
operator=;operator=(class TR::DebugEnv &&);0;TR;DebugEnv;1;0
operator=;operator=(const class TR::DebugEnv &);0;TR;DebugEnv;1;0
pointerPrintfMaxLenInChars;pointerPrintfMaxLenInChars();1;OMR;DebugEnv;0;0
~DebugEnv;~DebugEnv();1;OMR;DebugEnv;1;0
Instruction;Instruction(class OMR::Instruction &&);1;OMR;Instruction;1;0
Instruction;Instruction(const class OMR::Instruction &);0;OMR;Instruction;1;0
Instruction;Instruction(TR::CodeGenerator *,TR::class InstOpCode::Mnemonic,TR::Node *);0;OMR;Instruction;0;0
Instruction;Instruction(TR::CodeGenerator *,TR::Instruction *,TR::class InstOpCode::Mnemonic,TR::Node *);0;OMR;Instruction;0;0
Instruction;Instruction();0;OMR;Instruction;0;0
Instruction;Instruction(class OMR::X86::Instruction &&);0;OMR::X86;Instruction;1;0
Instruction;Instruction(const class OMR::X86::Instruction &);0;OMR::X86;Instruction;1;0
Instruction;Instruction(class TR::Instruction &&);0;TR;Instruction;1;0
Instruction;Instruction(const class TR::Instruction &);0;TR;Instruction;1;0
Instruction;Instruction(TR::RegisterDependencyConditions *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;Instruction;0;0
Instruction;Instruction(enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;Instruction;0;0
Instruction;Instruction(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;Instruction;0;0
Instruction;Instruction(TR::RegisterDependencyConditions *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;Instruction;0;0
aboutToAssignDefdRegister;aboutToAssignDefdRegister(TR::Register *,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);1;OMR::X86;Instruction;0;0
aboutToAssignMemRef;aboutToAssignMemRef(TR::MemoryReference *);1;OMR::X86;Instruction;0;0
aboutToAssignRegDeps;aboutToAssignRegDeps(enum OMR::X86::Instruction::TR_UpperHalfRefConditions,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);1;OMR::X86;Instruction;0;0
aboutToAssignRegister;aboutToAssignRegister(TR::Register *,enum OMR::X86::Instruction::TR_UpperHalfRefConditions,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);1;OMR::X86;Instruction;0;0
aboutToAssignUsedRegister;aboutToAssignUsedRegister(TR::Register *,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);1;OMR::X86;Instruction;0;0
adjustVFPState;adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *);1;OMR::X86;Instruction;0;1
adjustVFPStateForCall;adjustVFPStateForCall(struct TR_VFPState *,int32_t,TR::CodeGenerator *);1;OMR::X86;Instruction;0;0
assignRegisters;assignRegisters(enum TR_RegisterKinds);1;OMR;Instruction;0;1
assumeValidInstruction;assumeValidInstruction();1;OMR::X86;Instruction;0;0
cg;cg();1;OMR;Instruction;0;0
clobberRegsForRematerialisation;clobberRegsForRematerialisation();1;OMR::X86;Instruction;0;0
defsRegister;defsRegister(TR::Register *);1;OMR;Instruction;0;1
dependencyRefsRegister;dependencyRefsRegister(TR::Register *);1;OMR;Instruction;0;1
description;description();1;OMR::X86;Instruction;0;1
enlarge;enlarge(int32_t,int32_t,_Bool);1;OMR::X86;Instruction;0;1
estimateBinaryLength;estimateBinaryLength(int32_t);1;OMR;Instruction;0;1
generateBinaryEncoding;generateBinaryEncoding();1;OMR;Instruction;0;1
generateOperand;generateOperand(uint8_t *);1;OMR::X86;Instruction;0;1
generateRepeatedRexPrefix;generateRepeatedRexPrefix(uint8_t *);1;OMR::X86;Instruction;0;0
getBinaryEncoding;getBinaryEncoding();1;OMR;Instruction;0;0
getBinaryLength;getBinaryLength();1;OMR;Instruction;0;0
getBinaryLengthLowerBound;getBinaryLengthLowerBound();1;OMR;Instruction;0;1
getDependencyConditions;getDependencyConditions();1;OMR::X86;Instruction;0;0
getEstimatedBinaryLength;getEstimatedBinaryLength();1;OMR;Instruction;0;0
getGCMap;getGCMap();1;OMR;Instruction;0;0
getGCRegisterMask;getGCRegisterMask();1;OMR;Instruction;0;0
getIA32ImmInstruction;getIA32ImmInstruction();1;OMR::X86;Instruction;0;1
getIA32LabelInstruction;getIA32LabelInstruction();1;OMR::X86;Instruction;0;1
getIA32RegInstruction;getIA32RegInstruction();1;OMR::X86;Instruction;0;1
getIndex;getIndex();1;OMR;Instruction;0;0
getKind;getKind();1;OMR;Instruction;0;1
getLabelSymbol;getLabelSymbol();1;OMR;Instruction;0;0
getLiveLocals;getLiveLocals();1;OMR;Instruction;0;0
getLiveMonitors;getLiveMonitors();1;OMR;Instruction;0;0
getMaxPatchableInstructionLength;getMaxPatchableInstructionLength();1;OMR;Instruction;0;0
getMemoryReference;getMemoryReference();1;OMR::X86;Instruction;0;1
getNext;getNext();1;OMR;Instruction;0;0
getNode;getNode();1;OMR;Instruction;0;0
getNumOperandReferencedFPRegisters;getNumOperandReferencedFPRegisters();1;OMR::X86;Instruction;0;1
getNumOperandReferencedGPRegisters;getNumOperandReferencedGPRegisters();1;OMR::X86;Instruction;0;1
getOpCode;getOpCode();1;OMR;Instruction;0;0
getOpCodeValue;getOpCodeValue();1;OMR;Instruction;0;0
getPrev;getPrev();1;OMR;Instruction;0;0
getRegisterSaveDescription;getRegisterSaveDescription();1;OMR;Instruction;0;0
getSnippetForGC;getSnippetForGC();1;OMR;Instruction;0;1
getSourceRegister;getSourceRegister();1;OMR::X86;Instruction;0;1
getSourceRightRegister;getSourceRightRegister();1;OMR::X86;Instruction;0;1
getTargetRegister;getTargetRegister();1;OMR::X86;Instruction;0;1
initialize;initialize(TR::CodeGenerator *,TR::RegisterDependencyConditions *,enum TR_X86OpCodes,_Bool);1;OMR::X86;Instruction;0;0
isBranchOp;isBranchOp();1;OMR::X86;Instruction;0;0
isLabel;isLabel();1;OMR::X86;Instruction;0;0
isMergeableGuard;isMergeableGuard();1;OMR;Instruction;0;0
isPatchBarrier;isPatchBarrier();1;OMR;Instruction;0;1
isRegRegMove;isRegRegMove();1;OMR::X86;Instruction;0;1
isVirtualGuardNOPInstruction;isVirtualGuardNOPInstruction();1;OMR;Instruction;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Instruction;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Instruction;0;0
move;move(TR::Instruction *);1;OMR;Instruction;0;0
needsAOTRelocation;needsAOTRelocation();1;OMR;Instruction;0;0
needsGCMap;needsGCMap();1;OMR;Instruction;0;0
needsLockPrefix;needsLockPrefix();1;OMR::X86;Instruction;0;0
needsRepPrefix;needsRepPrefix();1;OMR::X86;Instruction;0;0
operandSizeRexBits;operandSizeRexBits();1;OMR::X86;Instruction;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Instruction;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Instruction;0;0
operator delete;operator delete(void *,size_t);0;OMR;Instruction;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Instruction;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Instruction;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Instruction;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Instruction;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Instruction;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Instruction;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Instruction;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Instruction;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Instruction;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Instruction;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Instruction;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Instruction;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Instruction;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;Instruction;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Instruction;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Instruction;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Instruction;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Instruction;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Instruction;0;0
operator=;operator=(const class OMR::Instruction &);1;OMR;Instruction;1;0
operator=;operator=(class OMR::Instruction &&);0;OMR;Instruction;1;0
operator=;operator=(class OMR::X86::Instruction &&);0;OMR::X86;Instruction;1;0
operator=;operator=(const class OMR::X86::Instruction &);0;OMR::X86;Instruction;1;0
operator=;operator=(class TR::Instruction &&);0;TR;Instruction;1;0
operator=;operator=(const class TR::Instruction &);0;TR;Instruction;1;0
refsRegister;refsRegister(TR::Register *);1;OMR;Instruction;0;1
registerRefKindApplies;registerRefKindApplies(enum OMR::X86::Instruction::TR_UpperHalfRefConditions);1;OMR::X86;Instruction;0;0
remove;remove();1;OMR;Instruction;0;0
requiresAtomicPatching;requiresAtomicPatching();1;OMR;Instruction;0;0
rexBits;rexBits();1;OMR::X86;Instruction;0;1
rexRepeatCount;rexRepeatCount();1;OMR::X86;Instruction;0;0
self;self();1;OMR;Instruction;0;0
setBinaryEncoding;setBinaryEncoding(uint8_t *);1;OMR;Instruction;0;0
setBinaryLength;setBinaryLength(uint8_t);1;OMR;Instruction;0;0
setDependencyConditions;setDependencyConditions(TR::RegisterDependencyConditions *);1;OMR::X86;Instruction;0;0
setEstimatedBinaryLength;setEstimatedBinaryLength(uint8_t);1;OMR;Instruction;0;0
setGCMap;setGCMap(class TR_GCStackMap *);1;OMR;Instruction;0;0
setIndex;setIndex(TIndex);1;OMR;Instruction;0;0
setIsUpperHalfDead;setIsUpperHalfDead(TR::Register *,_Bool,enum OMR::X86::Instruction::TR_UpperHalfRefConditions);1;OMR::X86;Instruction;0;0
setLiveLocals;setLiveLocals(class TR_BitVector *);1;OMR;Instruction;0;0
setLiveMonitors;setLiveMonitors(class TR_BitVector *);1;OMR;Instruction;0;0
setNeedsAOTRelocation;setNeedsAOTRelocation(_Bool);1;OMR;Instruction;0;0
setNeedsGCMap;setNeedsGCMap(TCollectableReferenceMask);1;OMR;Instruction;0;0
setNext;setNext(TR::Instruction *);1;OMR;Instruction;0;0
setNode;setNode(TR::Node *);1;OMR;Instruction;0;0
setOpCodeValue;setOpCodeValue(TR::class InstOpCode::Mnemonic);1;OMR;Instruction;0;0
setOpCodeValue;setOpCodeValue(enum TR_X86OpCodes);0;OMR::X86;Instruction;0;0
setPrev;setPrev(TR::Instruction *);1;OMR;Instruction;0;0
setRegisterSaveDescription;setRegisterSaveDescription(int32_t);1;OMR;Instruction;0;0
setRexRepeatCount;setRexRepeatCount(uint8_t);1;OMR::X86;Instruction;0;0
totalReferencedFPRegisters;totalReferencedFPRegisters(TR::CodeGenerator *);1;OMR::X86;Instruction;0;0
totalReferencedGPRegisters;totalReferencedGPRegisters(TR::CodeGenerator *);1;OMR::X86;Instruction;0;0
useRegister;useRegister(TR::Register *);1;OMR;Instruction;0;0
usesRegister;usesRegister(TR::Register *);1;OMR;Instruction;0;1
~Instruction;~Instruction();1;OMR;Instruction;1;0
Snippet;Snippet(class OMR::Snippet &&);1;OMR;Snippet;1;0
Snippet;Snippet(const class OMR::Snippet &);0;OMR;Snippet;1;0
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,_Bool);0;OMR;Snippet;0;0
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *);0;OMR;Snippet;0;0
Snippet;Snippet(class OMR::X86::Snippet &&);0;OMR::X86;Snippet;1;0
Snippet;Snippet(const class OMR::X86::Snippet &);0;OMR::X86;Snippet;1;0
cg;cg();1;OMR;Snippet;0;0
emitSnippet;emitSnippet();1;OMR;Snippet;0;1
emitSnippetBody;emitSnippetBody();1;OMR;Snippet;0;1
gcMap;gcMap();1;OMR;Snippet;0;0
getBlock;getBlock();1;OMR;Snippet;0;0
getKind;getKind();1;OMR::X86;Snippet;0;1
getLength;getLength(int32_t);1;OMR;Snippet;0;1
getNode;getNode();1;OMR;Snippet;0;0
getSnippetLabel;getSnippetLabel();1;OMR;Snippet;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Snippet;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Snippet;0;0
needsExceptionTableEntry;needsExceptionTableEntry();1;OMR;Snippet;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Snippet;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Snippet;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Snippet;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Snippet;0;0
operator delete;operator delete(void *,size_t);0;OMR;Snippet;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Snippet;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Snippet;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Snippet;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Snippet;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Snippet;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Snippet;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Snippet;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Snippet;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Snippet;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Snippet;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Snippet;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Snippet;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Snippet;0;0
operator=;operator=(class OMR::Snippet &&);1;OMR;Snippet;1;0
operator=;operator=(const class OMR::Snippet &);0;OMR;Snippet;1;0
operator=;operator=(class OMR::X86::Snippet &&);0;OMR::X86;Snippet;1;0
operator=;operator=(const class OMR::X86::Snippet &);0;OMR::X86;Snippet;1;0
operator=;operator=(const class TR::Snippet &);0;TR;Snippet;1;0
operator=;operator=(class TR::Snippet &&);0;TR;Snippet;1;0
prepareSnippetForGCSafePoint;prepareSnippetForGCSafePoint();1;OMR;Snippet;0;0
print;print(TR::FILE *,class TR_Debug *);1;OMR;Snippet;0;1
resetNeedsExceptionTableEntry;resetNeedsExceptionTableEntry();1;OMR;Snippet;0;0
self;self();1;OMR;Snippet;0;0
setBlock;setBlock(TR::Block *);1;OMR;Snippet;0;0
setCodeGenerator;setCodeGenerator(TR::CodeGenerator *);1;OMR;Snippet;0;0
setEstimatedCodeLocation;setEstimatedCodeLocation(int32_t);1;OMR;Snippet;0;1
setNeedsExceptionTableEntry;setNeedsExceptionTableEntry();1;OMR;Snippet;0;0
setNode;setNode(TR::Node *);1;OMR;Snippet;0;0
setSnippetLabel;setSnippetLabel(TR::LabelSymbol *);1;OMR;Snippet;0;0
~Snippet;~Snippet();1;OMR;Snippet;1;0
AliasBuilder;AliasBuilder(const class OMR::AliasBuilder &);1;OMR;AliasBuilder;1;0
AliasBuilder;AliasBuilder(class OMR::AliasBuilder &&);0;OMR;AliasBuilder;1;0
AliasBuilder;AliasBuilder(TR::SymbolReferenceTable *,size_t,TR::Compilation *);0;OMR;AliasBuilder;0;0
AliasBuilder;AliasBuilder(const class TR::AliasBuilder &);0;TR;AliasBuilder;1;0
AliasBuilder;AliasBuilder(class TR::AliasBuilder &&);0;TR;AliasBuilder;1;0
addAddressArrayShadows;addAddressArrayShadows(class TR_BitVector *);1;OMR;AliasBuilder;0;0
addIntArrayShadows;addIntArrayShadows(class TR_BitVector *);1;OMR;AliasBuilder;0;0
addNonIntPrimitiveArrayShadows;addNonIntPrimitiveArrayShadows(class TR_BitVector *);1;OMR;AliasBuilder;0;0
addressShadowSymRefs;addressShadowSymRefs();1;OMR;AliasBuilder;0;0
addressStaticSymRefs;addressStaticSymRefs();1;OMR;AliasBuilder;0;0
arrayElementSymRefs;arrayElementSymRefs();1;OMR;AliasBuilder;0;0
arrayletElementSymRefs;arrayletElementSymRefs();1;OMR;AliasBuilder;0;0
catchLocalUseSymRefs;catchLocalUseSymRefs();1;OMR;AliasBuilder;0;0
comp;comp();1;OMR;AliasBuilder;0;0
conservativeGenericIntShadowAliasing;conservativeGenericIntShadowAliasing();1;OMR;AliasBuilder;0;0
cpConstantSymRefs;cpConstantSymRefs();1;OMR;AliasBuilder;0;0
cpSymRefs;cpSymRefs();1;OMR;AliasBuilder;0;0
createAliasInfo;createAliasInfo();1;OMR;AliasBuilder;0;0
defaultMethodDefAliases;defaultMethodDefAliases();1;OMR;AliasBuilder;0;0
defaultMethodDefAliasesWithoutImmutable;defaultMethodDefAliasesWithoutImmutable();1;OMR;AliasBuilder;0;0
defaultMethodDefAliasesWithoutUserField;defaultMethodDefAliasesWithoutUserField();1;OMR;AliasBuilder;0;0
defaultMethodUseAliases;defaultMethodUseAliases();1;OMR;AliasBuilder;0;0
gatherLocalUseInfo;gatherLocalUseInfo(TR::Block *,_Bool);1;OMR;AliasBuilder;0;0
gatherLocalUseInfo;gatherLocalUseInfo(TR::Node *,class TR_BitVector &,vcount_t,_Bool);0;OMR;AliasBuilder;0;0
gatherLocalUseInfo;gatherLocalUseInfo(TR::Block *,class TR_BitVector &,TR_ScratchList<TR_Pair<TR::Block, class TR_BitVector> > *,vcount_t,_Bool);0;OMR;AliasBuilder;0;0
gcSafePointSymRefNumbers;gcSafePointSymRefNumbers();1;OMR;AliasBuilder;0;0
genericIntArrayShadowSymRefs;genericIntArrayShadowSymRefs();1;OMR;AliasBuilder;0;0
genericIntNonArrayShadowSymRefs;genericIntNonArrayShadowSymRefs();1;OMR;AliasBuilder;0;0
genericIntShadowSymRefs;genericIntShadowSymRefs();1;OMR;AliasBuilder;0;0
getSymRefForAliasing;getSymRefForAliasing(TR::Node *,TR::Node *);1;OMR;AliasBuilder;0;0
getVeryRefinedCallAliasSets;getVeryRefinedCallAliasSets(TR::ResolvedMethodSymbol *);1;OMR;AliasBuilder;0;0
hasUseonlyAliasesOnlyDueToOSRCatchBlocks;hasUseonlyAliasesOnlyDueToOSRCatchBlocks(TR::SymbolReference *);1;OMR;AliasBuilder;0;0
immutableArrayElementSymRefs;immutableArrayElementSymRefs();1;OMR;AliasBuilder;0;0
intShadowSymRefs;intShadowSymRefs();1;OMR;AliasBuilder;0;0
intStaticSymRefs;intStaticSymRefs();1;OMR;AliasBuilder;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;AliasBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;AliasBuilder;0;0
litPoolGenericIntShadowHasBeenCreated;litPoolGenericIntShadowHasBeenCreated();1;OMR;AliasBuilder;0;0
methodAliases;methodAliases(TR::SymbolReference *);1;OMR;AliasBuilder;0;0
methodSymRefs;methodSymRefs();1;OMR;AliasBuilder;0;0
methodsThatMayThrow;methodsThatMayThrow();1;OMR;AliasBuilder;0;0
mutableGenericIntShadowHasBeenCreated;mutableGenericIntShadowHasBeenCreated();1;OMR;AliasBuilder;0;0
nonIntPrimitiveShadowSymRefs;nonIntPrimitiveShadowSymRefs();1;OMR;AliasBuilder;0;0
nonIntPrimitiveStaticSymRefs;nonIntPrimitiveStaticSymRefs();1;OMR;AliasBuilder;0;0
notOsrCatchLocalUseSymRefs;notOsrCatchLocalUseSymRefs();1;OMR;AliasBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;AliasBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;AliasBuilder;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;AliasBuilder;0;0
operator delete;operator delete(void *,size_t);0;OMR;AliasBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;AliasBuilder;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;AliasBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;AliasBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;AliasBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;AliasBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;AliasBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;AliasBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;AliasBuilder;0;0
operator=;operator=(class OMR::AliasBuilder &&);1;OMR;AliasBuilder;1;0
operator=;operator=(const class OMR::AliasBuilder &);0;OMR;AliasBuilder;1;0
operator=;operator=(class TR::AliasBuilder &&);0;TR;AliasBuilder;1;0
operator=;operator=(const class TR::AliasBuilder &);0;TR;AliasBuilder;1;0
refinedAddressArrayShadows;refinedAddressArrayShadows();1;OMR;AliasBuilder;0;0
refinedIntArrayShadows;refinedIntArrayShadows();1;OMR;AliasBuilder;0;0
refinedNonIntPrimitiveArrayShadows;refinedNonIntPrimitiveArrayShadows();1;OMR;AliasBuilder;0;0
self;self();1;OMR;AliasBuilder;0;0
setCatchLocalUseSymRefs;setCatchLocalUseSymRefs();1;OMR;AliasBuilder;0;0
setConservativeGenericIntShadowAliasing;setConservativeGenericIntShadowAliasing(_Bool);1;OMR;AliasBuilder;0;0
setLitPoolGenericIntShadowHasBeenCreated;setLitPoolGenericIntShadowHasBeenCreated();1;OMR;AliasBuilder;0;0
setMutableGenericIntShadowHasBeenCreated;setMutableGenericIntShadowHasBeenCreated(_Bool);1;OMR;AliasBuilder;0;0
setVeryRefinedCallAliasSets;setVeryRefinedCallAliasSets(TR::ResolvedMethodSymbol *,class TR_BitVector *);1;OMR;AliasBuilder;0;0
symRefTab;symRefTab();1;OMR;AliasBuilder;0;0
trHeapMemory;trHeapMemory();1;OMR;AliasBuilder;0;0
trMemory;trMemory();1;OMR;AliasBuilder;0;0
trStackMemory;trStackMemory();1;OMR;AliasBuilder;0;0
unsafeArrayElementSymRefs;unsafeArrayElementSymRefs();1;OMR;AliasBuilder;0;0
unsafeSymRefNumbers;unsafeSymRefNumbers();1;OMR;AliasBuilder;0;0
updateSubSets;updateSubSets(TR::SymbolReference *);1;OMR;AliasBuilder;0;0
~AliasBuilder;~AliasBuilder();1;OMR;AliasBuilder;1;0
ArithEnv;ArithEnv(const class OMR::ArithEnv &);1;OMR;ArithEnv;1;0
ArithEnv;ArithEnv();0;OMR;ArithEnv;1;0
ArithEnv;ArithEnv(class OMR::ArithEnv &&);0;OMR;ArithEnv;1;0
ArithEnv;ArithEnv(const class TR::ArithEnv &);0;TR;ArithEnv;1;0
ArithEnv;ArithEnv(class TR::ArithEnv &&);0;TR;ArithEnv;1;0
doubleAddDouble;doubleAddDouble(double,double);1;OMR;ArithEnv;0;0
doubleDivideDouble;doubleDivideDouble(double,double);1;OMR;ArithEnv;0;0
doubleMultiplyDouble;doubleMultiplyDouble(double,double);1;OMR;ArithEnv;0;0
doubleNegate;doubleNegate(double);1;OMR;ArithEnv;0;0
doubleRemainderDouble;doubleRemainderDouble(double,double);1;OMR;ArithEnv;0;0
doubleSubtractDouble;doubleSubtractDouble(double,double);1;OMR;ArithEnv;0;0
doubleToFloat;doubleToFloat(double);1;OMR;ArithEnv;0;0
floatAddFloat;floatAddFloat(float,float);1;OMR;ArithEnv;0;0
floatDivideFloat;floatDivideFloat(float,float);1;OMR;ArithEnv;0;0
floatMultiplyFloat;floatMultiplyFloat(float,float);1;OMR;ArithEnv;0;0
floatNegate;floatNegate(float);1;OMR;ArithEnv;0;0
floatRemainderFloat;floatRemainderFloat(float,float);1;OMR;ArithEnv;0;0
floatSubtractFloat;floatSubtractFloat(float,float);1;OMR;ArithEnv;0;0
floatToDouble;floatToDouble(float);1;OMR;ArithEnv;0;0
longDivideLong;longDivideLong(int64_t,int64_t);1;OMR;ArithEnv;0;0
longMultiplyLong;longMultiplyLong(int64_t,int64_t);1;OMR;ArithEnv;0;0
longRemainderLong;longRemainderLong(int64_t,int64_t);1;OMR;ArithEnv;0;0
operator=;operator=(const class OMR::ArithEnv &);1;OMR;ArithEnv;1;0
operator=;operator=(class OMR::ArithEnv &&);0;OMR;ArithEnv;1;0
operator=;operator=(class TR::ArithEnv &&);0;TR;ArithEnv;1;0
operator=;operator=(const class TR::ArithEnv &);0;TR;ArithEnv;1;0
self;self();1;OMR;ArithEnv;0;0
~ArithEnv;~ArithEnv();1;OMR;ArithEnv;1;0
BlockChecklist;BlockChecklist(TR::Compilation *);1;TR;BlockChecklist;0;0
BlockChecklist;BlockChecklist(class TR::BlockChecklist &&);0;TR;BlockChecklist;1;0
Checklist;Checklist(const class TR::Checklist &);1;TR;Checklist;1;0
Checklist;Checklist(TR::Compilation *);0;TR;Checklist;0;0
add;add(TR::Block *);1;TR;BlockChecklist;0;0
add;add(class TR::BlockChecklist &);0;TR;BlockChecklist;0;0
contains;contains(TR::Block *);1;TR;BlockChecklist;0;0
operator!=;operator!=(const class TR::BlockChecklist &);1;TR;BlockChecklist;0;0
operator=;operator=(const class TR::Checklist &);1;TR;Checklist;1;0
operator=;operator=(class TR::BlockChecklist &&);0;TR;BlockChecklist;1;0
operator==;operator==(const class TR::BlockChecklist &);1;TR;BlockChecklist;0;0
remove;remove(TR::Block *);1;TR;BlockChecklist;0;0
remove;remove(class TR::BlockChecklist &);0;TR;BlockChecklist;0;0
~BlockChecklist;~BlockChecklist();1;TR;BlockChecklist;1;0
~Checklist;~Checklist();1;TR;Checklist;0;0
CFG;CFG(const class OMR::CFG &);1;OMR;CFG;1;0
CFG;CFG(TR::Compilation *,TR::ResolvedMethodSymbol *);0;OMR;CFG;0;0
CFG;CFG(class OMR::CFG &&);0;OMR;CFG;1;0
addEdge;addEdge(TR::CFGEdge *);1;OMR;CFG;0;0
addEdge;addEdge(TR::CFGNode *,TR::CFGNode *,enum TR_AllocationKind);0;OMR;CFG;0;0
addExceptionEdge;addExceptionEdge(TR::CFGNode *,TR::CFGNode *,enum TR_AllocationKind);1;OMR;CFG;0;0
addNode;addNode(TR::CFGNode *,class TR_RegionStructure *,_Bool);1;OMR;CFG;0;0
addStructureSubGraphNodes;addStructureSubGraphNodes(class TR_StructureSubGraphNode *);1;OMR;CFG;0;0
addSuccessorEdges;addSuccessorEdges(TR::Block *);1;OMR;CFG;0;0
allocateNodeNumber;allocateNodeNumber();1;OMR;CFG;0;0
clone;clone();1;OMR;CFG;0;0
comp;comp();1;OMR;CFG;0;0
compareExceptionSuccessors;compareExceptionSuccessors(TR::CFGNode *,TR::CFGNode *);1;OMR;CFG;0;0
computeEntryFactorsAcyclic;computeEntryFactorsAcyclic(class TR_RegionStructure *);1;OMR;CFG;0;0
computeEntryFactorsFrom;computeEntryFactorsFrom(class TR_Structure *,float &);1;OMR;CFG;0;0
computeEntryFactorsLoop;computeEntryFactorsLoop(class TR_RegionStructure *);1;OMR;CFG;0;0
computeInsideEdgeFactor;computeInsideEdgeFactor(TR::CFGEdge *,TR::CFGNode *);1;OMR;CFG;0;0
computeOutsideEdgeFactor;computeOutsideEdgeFactor(TR::CFGEdge *,TR::CFGNode *);1;OMR;CFG;0;0
consumePseudoRandomFrequencies;consumePseudoRandomFrequencies();1;OMR;CFG;0;0
copyExceptionSuccessors;copyExceptionSuccessors(TR::CFGNode *,TR::CFGNode *,_Bool (*)(TR::CFGEdge *));1;OMR;CFG;0;0
createArrayOfBlocks;createArrayOfBlocks(enum TR_AllocationKind);1;OMR;CFG;0;0
createTraversalOrder;createTraversalOrder(_Bool,enum TR_AllocationKind,class TR_BitVector *);1;OMR;CFG;0;0
findLastTreeTop;findLastTreeTop();1;OMR;CFG;0;0
findLoopingBlocks;findLoopingBlocks(class TR_BitVector &);1;OMR;CFG;0;0
findReachableBlocks;findReachableBlocks(class TR_BitVector *);1;OMR;CFG;0;0
getAvgFrequency;getAvgFrequency();1;OMR;CFG;0;0
getBackwardTraversalElement;getBackwardTraversalElement(int32_t);1;OMR;CFG;0;0
getBackwardTraversalLength;getBackwardTraversalLength();1;OMR;CFG;0;0
getBranchCounters;getBranchCounters(TR::Node *,TR::Block *,int32_t *,int32_t *,TR::Compilation *);1;OMR;CFG;0;0
getBranchCountersFromProfilingData;getBranchCountersFromProfilingData(TR::Node *,TR::Block *,int32_t *,int32_t *);1;OMR;CFG;0;0
getEdgeProbability;getEdgeProbability(TR::CFGEdge *);1;OMR;CFG;0;0
getEnd;getEnd();1;OMR;CFG;0;0
getFirstNode;getFirstNode();1;OMR;CFG;0;0
getForwardTraversalElement;getForwardTraversalElement(int32_t);1;OMR;CFG;0;0
getForwardTraversalLength;getForwardTraversalLength();1;OMR;CFG;0;0
getFrequencySet;getFrequencySet();1;OMR;CFG;0;0
getHasUnreachableBlocks;getHasUnreachableBlocks();1;OMR;CFG;0;0
getIgnoreUnreachableBlocks;getIgnoreUnreachableBlocks();1;OMR;CFG;0;0
getInitialBlockFrequency;getInitialBlockFrequency();1;OMR;CFG;0;0
getLowFrequency;getLowFrequency();1;OMR;CFG;0;0
getMaxEdgeFrequency;getMaxEdgeFrequency();1;OMR;CFG;0;0
getMaxFrequency;getMaxFrequency();1;OMR;CFG;0;0
getMethodSymbol;getMethodSymbol();1;OMR;CFG;0;0
getMightHaveUnreachableBlocks;getMightHaveUnreachableBlocks();1;OMR;CFG;0;0
getNextNodeNumber;getNextNodeNumber();1;OMR;CFG;0;0
getNodes;getNodes();1;OMR;CFG;0;0
getNumberOfNodes;getNumberOfNodes();1;OMR;CFG;0;0
getOldMaxEdgeFrequency;getOldMaxEdgeFrequency();1;OMR;CFG;0;0
getStart;getStart();1;OMR;CFG;0;0
getStructure;getStructure();1;OMR;CFG;0;0
hasBranchProfilingData;hasBranchProfilingData();1;OMR;CFG;0;0
insertBefore;insertBefore(TR::Block *,TR::Block *);1;OMR;CFG;0;0
invalidateStructure;invalidateStructure();1;OMR;CFG;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;CFG;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;CFG;0;0
join;join(TR::Block *,TR::Block *);1;OMR;CFG;0;0
normalizeEdgeFrequencies;normalizeEdgeFrequencies(TR_Array<TR::CFGEdge *> *);1;OMR;CFG;0;0
normalizeFrequencies;normalizeFrequencies(class TR_BitVector *);1;OMR;CFG;0;0
normalizeNodeFrequencies;normalizeNodeFrequencies(class TR_BitVector *,TR_Array<TR::CFGEdge *> *);1;OMR;CFG;0;0
operator delete;operator delete(void *,size_t);1;OMR;CFG;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;CFG;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;CFG;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;CFG;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;CFG;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;CFG;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;CFG;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;CFG;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;CFG;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;CFG;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;CFG;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;CFG;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;CFG;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;CFG;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;CFG;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;CFG;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;CFG;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;CFG;0;0
operator=;operator=(class OMR::CFG &&);1;OMR;CFG;1;0
operator=;operator=(const class OMR::CFG &);0;OMR;CFG;1;0
operator=;operator=(class TR::CFG &&);0;TR;CFG;1;0
processAcyclicRegion;processAcyclicRegion(class TR_RegionStructure *);1;OMR;CFG;0;0
processNaturalLoop;processNaturalLoop(class TR_RegionStructure *);1;OMR;CFG;0;0
propagateColdInfo;propagateColdInfo(_Bool);1;OMR;CFG;0;0
propagateEntryFactorsFrom;propagateEntryFactorsFrom(class TR_Structure *,float);1;OMR;CFG;0;0
propagateFrequencyInfoFrom;propagateFrequencyInfoFrom(class TR_Structure *);1;OMR;CFG;0;0
removeBlock;removeBlock(TR::Block *);1;OMR;CFG;0;0
removeEdge;removeEdge(TR::CFGNode *,TR::CFGNode *);1;OMR;CFG;0;0
removeEdge;removeEdge(TR::CFGEdge *);0;OMR;CFG;0;0
removeEdge;removeEdge(TR::CFGEdgeList &,int32_t,int32_t);0;OMR;CFG;0;0
removeEdge;removeEdge(TR::CFGEdge *,_Bool);0;OMR;CFG;0;0
removeNode;removeNode(TR::CFGNode *);1;OMR;CFG;0;0
removeStructureSubGraphNodes;removeStructureSubGraphNodes(class TR_StructureSubGraphNode *);1;OMR;CFG;0;0
removeUnreachableBlocks;removeUnreachableBlocks();1;OMR;CFG;0;0
resetFrequencies;resetFrequencies();1;OMR;CFG;0;0
resetVisitCounts;resetVisitCounts(vcount_t);1;OMR;CFG;0;0
scaleEdgeFrequencies;scaleEdgeFrequencies();1;OMR;CFG;0;0
self;self();1;OMR;CFG;0;0
setBlockAndEdgeFrequenciesBasedOnStructure;setBlockAndEdgeFrequenciesBasedOnStructure();1;OMR;CFG;0;0
setEdgeFrequenciesFrom;setEdgeFrequenciesFrom();1;OMR;CFG;0;0
setEdgeFrequenciesOnNode;setEdgeFrequenciesOnNode(TR::CFGNode *,int32_t,int32_t,TR::Compilation *);1;OMR;CFG;0;0
setEdgeProbability;setEdgeProbability(TR::CFGEdge *,double);1;OMR;CFG;0;0
setEnd;setEnd(TR::CFGNode *);1;OMR;CFG;0;0
setFrequencies;setFrequencies();1;OMR;CFG;0;0
setHasUnreachableBlocks;setHasUnreachableBlocks();1;OMR;CFG;0;0
setIgnoreUnreachableBlocks;setIgnoreUnreachableBlocks(_Bool);1;OMR;CFG;0;0
setMaxEdgeFrequency;setMaxEdgeFrequency(int32_t);1;OMR;CFG;0;0
setMaxFrequency;setMaxFrequency(int32_t);1;OMR;CFG;0;0
setNextNodeNumber;setNextNodeNumber(int32_t);1;OMR;CFG;0;0
setStart;setStart(TR::CFGNode *);1;OMR;CFG;0;0
setStartAndEnd;setStartAndEnd(TR::CFGNode *,TR::CFGNode *);1;OMR;CFG;0;0
setStructure;setStructure(class TR_Structure *);1;OMR;CFG;0;0
setUniformEdgeFrequenciesOnNode;setUniformEdgeFrequenciesOnNode(TR::CFGNode *,int32_t,_Bool,TR::Compilation *);1;OMR;CFG;0;0
structureRegion;structureRegion();1;OMR;CFG;0;0
trHeapMemory;trHeapMemory();1;OMR;CFG;0;0
trMemory;trMemory();1;OMR;CFG;0;0
trStackMemory;trStackMemory();1;OMR;CFG;0;0
updateBlockFrequency;updateBlockFrequency(TR::Block *,int32_t);1;OMR;CFG;0;0
updateBlockFrequencyFromEdges;updateBlockFrequencyFromEdges(TR::Block *);1;OMR;CFG;0;0
walkStructure;walkStructure(class TR_RegionStructure *);1;OMR;CFG;0;0
~CFG;~CFG();1;OMR;CFG;1;0
CFGEdge;CFGEdge();1;TR;CFGEdge;0;0
CFGEdge;CFGEdge(class TR::CFGNode *,class TR::CFGNode *);0;TR;CFGEdge;0;0
TR_Link0<T>;TR_Link0<T>(T *);1;TR;Link0;0;0
TR_Link<T>;TR_Link<T>(T *);1;TR;Link;0;0
createEdge;createEdge(class TR::CFGNode *,class TR::CFGNode *,class TR_Memory *,enum TR_AllocationKind);1;TR;CFGEdge;0;0
createEdge;createEdge(class TR::CFGNode *,class TR::CFGNode *,TR::Region &);0;TR;CFGEdge;0;0
createExceptionEdge;createExceptionEdge(class TR::CFGNode *,class TR::CFGNode *,class TR_Memory *,enum TR_AllocationKind);1;TR;CFGEdge;0;0
createExceptionEdge;createExceptionEdge(class TR::CFGNode *,class TR::CFGNode *,TR::Region &);0;TR;CFGEdge;0;0
getCreatedByTailRecursionElimination;getCreatedByTailRecursionElimination();1;TR;CFGEdge;0;0
getFrequency;getFrequency();1;TR;CFGEdge;0;0
getFrom;getFrom();1;TR;CFGEdge;0;0
getId;getId();1;TR;CFGEdge;0;0
getNext;getNext();1;TR;Link0;0;0
getTo;getTo();1;TR;CFGEdge;0;0
getVisitCount;getVisitCount();1;TR;CFGEdge;0;0
incVisitCount;incVisitCount();1;TR;CFGEdge;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;Link;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;Link;0;0
mustRestoreVMThreadRegister;mustRestoreVMThreadRegister();1;TR;CFGEdge;0;0
normalizeFrequency;normalizeFrequency(int32_t);1;TR;CFGEdge;0;0
operator delete;operator delete(void *,size_t);1;TR;Link;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;Link;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Link;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Link;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Link;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;Link;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Link;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Link;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Link;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Link;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;Link;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Link;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;Link;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;Link;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Link;0;0
operator new;operator new(size_t,TR::Region &);0;TR;Link;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;TR;Link;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;Link;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;Link;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Link;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Link;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Link;0;0
setCreatedByTailRecursionElimination;setCreatedByTailRecursionElimination(_Bool);1;TR;CFGEdge;0;0
setExceptionFrom;setExceptionFrom(class TR::CFGNode *);1;TR;CFGEdge;0;0
setExceptionFromTo;setExceptionFromTo(class TR::CFGNode *,class TR::CFGNode *);1;TR;CFGEdge;0;0
setExceptionTo;setExceptionTo(class TR::CFGNode *);1;TR;CFGEdge;0;0
setFrequency;setFrequency(int32_t);1;TR;CFGEdge;0;0
setFrom;setFrom(class TR::CFGNode *);1;TR;CFGEdge;0;0
setFromTo;setFromTo(class TR::CFGNode *,class TR::CFGNode *);1;TR;CFGEdge;0;0
setId;setId(int32_t);1;TR;CFGEdge;0;0
setMustRestoreVMThreadRegister;setMustRestoreVMThreadRegister(_Bool);1;TR;CFGEdge;0;0
setNext;setNext(T *);1;TR;Link0;0;0
setTo;setTo(class TR::CFGNode *);1;TR;CFGEdge;0;0
setVisitCount;setVisitCount(vcount_t);1;TR;CFGEdge;0;0
ClassEnv;ClassEnv(class OMR::ClassEnv &&);1;OMR;ClassEnv;1;0
ClassEnv;ClassEnv();0;OMR;ClassEnv;1;0
ClassEnv;ClassEnv(const class OMR::ClassEnv &);0;OMR;ClassEnv;1;0
ClassEnv;ClassEnv(class TR::ClassEnv &&);0;TR;ClassEnv;1;0
ClassEnv;ClassEnv(const class TR::ClassEnv &);0;TR;ClassEnv;1;0
classDepthOf;classDepthOf(class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
classFromJavaLangClass;classFromJavaLangClass(TR::Compilation *,uintptrj_t);1;OMR;ClassEnv;0;0
classNameChars;classNameChars(TR::Compilation *,TR::SymbolReference *,int32_t &);1;OMR;ClassEnv;0;0
classNameChars;classNameChars(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t &);0;OMR;ClassEnv;0;0
classObjectsMayBeCollected;classObjectsMayBeCollected();1;OMR;ClassEnv;0;0
classOfObject;classOfObject(TR::Compilation *,uintptrj_t);1;OMR;ClassEnv;0;0
classOfObject;classOfObject(struct OMR_VMThread *,uintptrj_t);0;OMR;ClassEnv;0;0
classSignature;classSignature(TR::Compilation *,class TR_OpaqueClassBlock *,class TR_Memory *);1;OMR;ClassEnv;0;0
classSignature_DEPRECATED;classSignature_DEPRECATED(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t &,class TR_Memory *);1;OMR;ClassEnv;0;0
classesOnHeap;classesOnHeap();1;OMR;ClassEnv;0;0
flagValueForArrayCheck;flagValueForArrayCheck(TR::Compilation *);1;OMR;ClassEnv;0;0
flagValueForFinalizerCheck;flagValueForFinalizerCheck(TR::Compilation *);1;OMR;ClassEnv;0;0
flagValueForPrimitiveTypeCheck;flagValueForPrimitiveTypeCheck(TR::Compilation *);1;OMR;ClassEnv;0;0
getArrayElementWidthInBytes;getArrayElementWidthInBytes(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
getStringCharacter;getStringCharacter(TR::Compilation *,uintptrj_t,int32_t);1;OMR;ClassEnv;0;0
getStringFieldByName;getStringFieldByName(TR::Compilation *,TR::SymbolReference *,TR::SymbolReference *,void *&);1;OMR;ClassEnv;0;0
hasFinalFieldsInClass;hasFinalFieldsInClass(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
hasFinalizer;hasFinalizer(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isAbstractClass;isAbstractClass(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isAnonymousClass;isAnonymousClass(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isClassArray;isClassArray(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isClassFinal;isClassFinal(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isClassInitialized;isClassInitialized(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isInterfaceClass;isInterfaceClass(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isPrimitiveArray;isPrimitiveArray(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isPrimitiveClass;isPrimitiveClass(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isReferenceArray;isReferenceArray(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isString;isString(TR::Compilation *,uintptrj_t);1;OMR;ClassEnv;0;0
isString;isString(TR::Compilation *,class TR_OpaqueClassBlock *);0;OMR;ClassEnv;0;0
isStringClass;isStringClass(class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
isStringClass;isStringClass(uintptrj_t);0;OMR;ClassEnv;0;0
jitFieldsAreSame;jitFieldsAreSame(TR::Compilation *,class TR_ResolvedMethod *,int32_t,class TR_ResolvedMethod *,int32_t,int32_t);1;OMR;ClassEnv;0;0
jitStaticsAreSame;jitStaticsAreSame(TR::Compilation *,class TR_ResolvedMethod *,int32_t,class TR_ResolvedMethod *,int32_t);1;OMR;ClassEnv;0;0
objectClass;objectClass(TR::Compilation *,uintptrj_t);1;OMR;ClassEnv;0;0
operator=;operator=(class OMR::ClassEnv &&);1;OMR;ClassEnv;1;0
operator=;operator=(const class OMR::ClassEnv &);0;OMR;ClassEnv;1;0
operator=;operator=(class TR::ClassEnv &&);0;TR;ClassEnv;1;0
operator=;operator=(const class TR::ClassEnv &);0;TR;ClassEnv;1;0
persistentClassPointerFromClassPointer;persistentClassPointerFromClassPointer(TR::Compilation *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
sameClassLoaders;sameClassLoaders(TR::Compilation *,class TR_OpaqueClassBlock *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
vTableSlot;vTableSlot(TR::Compilation *,class TR_OpaqueMethodBlock *,class TR_OpaqueClassBlock *);1;OMR;ClassEnv;0;0
~ClassEnv;~ClassEnv();1;OMR;ClassEnv;1;0
CodeGenPhase;CodeGenPhase(TR::CodeGenerator *);1;OMR;CodeGenPhase;0;0
CodeGenPhase;CodeGenPhase(const class OMR::CodeGenPhase &);0;OMR;CodeGenPhase;1;0
CodeGenPhase;CodeGenPhase(class OMR::CodeGenPhase &&);0;OMR;CodeGenPhase;1;0
CodeGenPhase;CodeGenPhase(class TR::CodeGenPhase &&);0;TR;CodeGenPhase;1;0
CodeGenPhase;CodeGenPhase(const class TR::CodeGenPhase &);0;TR;CodeGenPhase;1;0
getListSize;getListSize();1;OMR;CodeGenPhase;0;0
getName;getName(enum OMR::CodeGenPhase::PhaseValue);1;OMR;CodeGenPhase;0;0
getName;getName();0;OMR;CodeGenPhase;0;0
getNumPhases;getNumPhases();1;OMR;CodeGenPhase;0;0
operator int;operator int();1;OMR;CodeGenPhase;0;0
operator=;operator=(class OMR::CodeGenPhase &&);1;OMR;CodeGenPhase;1;0
operator=;operator=(const class OMR::CodeGenPhase &);0;OMR;CodeGenPhase;1;0
operator=;operator=(class TR::CodeGenPhase &&);0;TR;CodeGenPhase;1;0
operator=;operator=(const class TR::CodeGenPhase &);0;TR;CodeGenPhase;1;0
performAll;performAll();1;OMR;CodeGenPhase;0;0
performBinaryEncodingPhase;performBinaryEncodingPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performCleanUpFlagsPhase;performCleanUpFlagsPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performCreateStackAtlasPhase;performCreateStackAtlasPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performEmitSnippetsPhase;performEmitSnippetsPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performFindAndFixCommonedReferencesPhase;performFindAndFixCommonedReferencesPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performInliningReportPhase;performInliningReportPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performInsertDebugCountersPhase;performInsertDebugCountersPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performInstructionSelectionPhase;performInstructionSelectionPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performLowerTreesPhase;performLowerTreesPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performMapStackPhase;performMapStackPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performPeepholePhase;performPeepholePhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performProcessRelocationsPhase;performProcessRelocationsPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performRegisterAssigningPhase;performRegisterAssigningPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performRemoveUnusedLocalsPhase;performRemoveUnusedLocalsPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performReserveCodeCachePhase;performReserveCodeCachePhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performSetupForInstructionSelectionPhase;performSetupForInstructionSelectionPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performShrinkWrappingPhase;performShrinkWrappingPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
performUncommonCallConstNodesPhase;performUncommonCallConstNodesPhase(TR::CodeGenerator *,TR::CodeGenPhase *);1;OMR;CodeGenPhase;0;0
reportPhase;reportPhase(enum OMR::CodeGenPhase::PhaseValue);1;OMR;CodeGenPhase;0;0
self;self();1;OMR;CodeGenPhase;0;0
~CodeGenPhase;~CodeGenPhase();1;OMR;CodeGenPhase;1;0
AddArtificiallyInflatedNodeToStack;AddArtificiallyInflatedNodeToStack(TR::Node *);1;OMR;CodeGenerator;0;0
CodeGenerator;CodeGenerator(class OMR::CodeGenerator &&);1;OMR;CodeGenerator;1;0
CodeGenerator;CodeGenerator(const class OMR::CodeGenerator &);0;OMR;CodeGenerator;1;0
CodeGenerator;CodeGenerator();0;OMR;CodeGenerator;0;0
CodeGenerator;CodeGenerator(const class OMR::X86::CodeGenerator &);0;OMR::X86;CodeGenerator;1;0
CodeGenerator;CodeGenerator(class OMR::X86::CodeGenerator &&);0;OMR::X86;CodeGenerator;1;0
CodeGenerator;CodeGenerator(const class OMR::X86::AMD64::CodeGenerator &);0;OMR::X86::AMD64;CodeGenerator;1;0
CodeGenerator;CodeGenerator(class OMR::X86::AMD64::CodeGenerator &&);0;OMR::X86::AMD64;CodeGenerator;1;0
CodeGenerator;CodeGenerator(class TestCompiler::CodeGenerator &&);0;TestCompiler;CodeGenerator;1;0
CodeGenerator;CodeGenerator(const class TestCompiler::CodeGenerator &);0;TestCompiler;CodeGenerator;1;0
IntJ;IntJ();1;OMR;CodeGenerator;0;0
IsInMemoryType;IsInMemoryType(TR::DataType);1;OMR;CodeGenerator;0;0
addAOTRelocation;addAOTRelocation(TR::Relocation *,TR::RelocationDebugInfo *);1;OMR;CodeGenerator;0;0
addAOTRelocation;addAOTRelocation(TR::Relocation *,const char *,uintptr_t,TR::Node *);0;OMR;CodeGenerator;0;0
addAccumulatedInstructionLengthError;addAccumulatedInstructionLengthError(int32_t);1;OMR;CodeGenerator;0;0
addAllocatedRegister;addAllocatedRegister(TR::Register *);1;OMR;CodeGenerator;0;0
addAllocatedRegisterPair;addAllocatedRegisterPair(TR::RegisterPair *);1;OMR;CodeGenerator;0;0
addBreakPointAddress;addBreakPointAddress(uint8_t *);1;OMR;CodeGenerator;0;0
addClobberingInstruction;addClobberingInstruction(TR::ClobberingInstruction *);1;OMR::X86;CodeGenerator;0;0
addCountersToEdges;addCountersToEdges(TR::Block *);1;OMR;CodeGenerator;0;0
addDependentDiscardableRegister;addDependentDiscardableRegister(TR::Register *);1;OMR::X86;CodeGenerator;0;0
addLiveDiscardableRegister;addLiveDiscardableRegister(TR::Register *);1;OMR::X86;CodeGenerator;0;0
addMetaDataForBranchTableAddress;addMetaDataForBranchTableAddress(uint8_t *,TR::Node *,TR::X86MemTableInstruction *);1;OMR::X86;CodeGenerator;0;0
addMonClass;addMonClass(TR::Node *,class TR_OpaqueClassBlock *);1;OMR;CodeGenerator;0;0
addProjectSpecializedPairRelocation;addProjectSpecializedPairRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *);1;OMR;CodeGenerator;0;0
addProjectSpecializedRelocation;addProjectSpecializedRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *);1;OMR;CodeGenerator;0;0
addProjectSpecializedRelocation;addProjectSpecializedRelocation(TR::Instruction *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *);0;OMR;CodeGenerator;0;0
addRelocation;addRelocation(TR::Relocation *);1;OMR;CodeGenerator;0;0
addSnippet;addSnippet(TR::Snippet *);1;OMR;CodeGenerator;0;0
addStaticRelocation;addStaticRelocation(const TR::StaticRelocation &);1;OMR;CodeGenerator;0;0
addSupportedLiveRegisterKind;addSupportedLiveRegisterKind(enum TR_RegisterKinds);1;OMR;CodeGenerator;0;0
addSymbolAndDataTypeToMap;addSymbolAndDataTypeToMap(TR::Symbol *,TR::DataType);1;OMR;CodeGenerator;0;0
addToAtlas;addToAtlas(TR::Instruction *);1;OMR;CodeGenerator;0;0
addToOSRTable;addToOSRTable(TR::Instruction *);1;OMR;CodeGenerator;0;0
addToOSRTable;addToOSRTable(int32_t,TR_ByteCodeInfo &);0;OMR;CodeGenerator;0;0
addToUnlatchedRegisterList;addToUnlatchedRegisterList(TR::RealRegister *);1;OMR;CodeGenerator;0;0
additionsMatch;additionsMatch(TR::Node *,TR::Node *,_Bool);1;OMR;CodeGenerator;0;0
addressesMatch;addressesMatch(TR::Node *,TR::Node *,_Bool);1;OMR;CodeGenerator;0;0
afterRA;afterRA();1;OMR;CodeGenerator;0;0
alignBinaryBufferCursor;alignBinaryBufferCursor();1;OMR;CodeGenerator;0;0
alignment;alignment(intptrj_t,intptrj_t,intptrj_t);1;OMR::X86;CodeGenerator;0;0
alignment;alignment(void *,intptrj_t,intptrj_t);0;OMR::X86;CodeGenerator;0;0
allocate64bitRegister;allocate64bitRegister();1;OMR;CodeGenerator;0;0
allocate64bitRegisterPair;allocate64bitRegisterPair(TR::Register *,TR::Register *);1;OMR;CodeGenerator;0;0
allocateCodeMemory;allocateCodeMemory(uint32_t,_Bool,_Bool);1;OMR;CodeGenerator;0;0
allocateCodeMemory;allocateCodeMemory(uint32_t,uint32_t,uint8_t **,_Bool);0;OMR;CodeGenerator;0;0
allocateCollectedReferenceRegister;allocateCollectedReferenceRegister();1;OMR;CodeGenerator;0;0
allocateFloatingPointRegisterPair;allocateFloatingPointRegisterPair(TR::Register *,TR::Register *);1;OMR;CodeGenerator;0;0
allocateInternalPointerSpill;allocateInternalPointerSpill(TR::AutomaticSymbol *);1;OMR;CodeGenerator;0;0
allocateLocalTemp;allocateLocalTemp(TR::DataType,_Bool);1;OMR;CodeGenerator;0;0
allocateRecompilationInfo;allocateRecompilationInfo();1;OMR;CodeGenerator;0;0
allocateRegister;allocateRegister(enum TR_RegisterKinds);1;OMR;CodeGenerator;0;0
allocateRegisterPair;allocateRegisterPair(TR::Register *,TR::Register *);1;OMR;CodeGenerator;0;0
allocateSinglePrecisionRegister;allocateSinglePrecisionRegister(enum TR_RegisterKinds);1;OMR;CodeGenerator;0;0
allocateSinglePrecisionRegisterPair;allocateSinglePrecisionRegisterPair(TR::Register *,TR::Register *);1;OMR;CodeGenerator;0;0
allocateSpill;allocateSpill(int32_t,_Bool,int32_t *,_Bool);1;OMR;CodeGenerator;0;0
allocateSpill;allocateSpill(_Bool,int32_t *,_Bool);0;OMR;CodeGenerator;0;0
allocateVMThreadSpill;allocateVMThreadSpill();1;OMR;CodeGenerator;0;0
allowGlobalRegisterAcrossBranch;allowGlobalRegisterAcrossBranch(class TR_RegisterCandidate *,TR::Node *);1;OMR;CodeGenerator;0;0
allowGuardMerging;allowGuardMerging();1;OMR::X86;CodeGenerator;0;0
allowSplitWarmAndColdBlocks;allowSplitWarmAndColdBlocks();1;OMR;CodeGenerator;0;0
allowVMThreadRematerialization;allowVMThreadRematerialization();1;OMR::X86;CodeGenerator;0;1
alwaysUseTrampolines;alwaysUseTrampolines();1;OMR;CodeGenerator;0;0
apply12BitLabelRelativeRelocation;apply12BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,_Bool);1;OMR;CodeGenerator;0;0
apply16BitLabelRelativeRelocation;apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);1;OMR;CodeGenerator;0;0
apply16BitLabelRelativeRelocation;apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,int8_t,_Bool);0;OMR;CodeGenerator;0;0
apply16BitLoadLabelRelativeRelocation;apply16BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);1;OMR;CodeGenerator;0;0
apply24BitLabelRelativeRelocation;apply24BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);1;OMR;CodeGenerator;0;0
apply32BitLabelRelativeRelocation;apply32BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);1;OMR;CodeGenerator;0;0
apply32BitLabelTableRelocation;apply32BitLabelTableRelocation(int32_t *,TR::LabelSymbol *);1;OMR;CodeGenerator;0;0
apply32BitLoadLabelRelativeRelocation;apply32BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);1;OMR;CodeGenerator;0;0
apply64BitLoadLabelRelativeRelocation;apply64BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *);1;OMR;CodeGenerator;0;0
apply8BitLabelRelativeRelocation;apply8BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);1;OMR;CodeGenerator;0;0
areAssignableGPRsScarce;areAssignableGPRsScarce();1;OMR;CodeGenerator;0;0
areMergeableGuards;areMergeableGuards(TR::Instruction *,TR::Instruction *);1;OMR;CodeGenerator;0;0
arithmeticNeedsLiteralFromPool;arithmeticNeedsLiteralFromPool(TR::Node *);1;OMR;CodeGenerator;0;0
arrayInitMinimumNumberOfBytes;arrayInitMinimumNumberOfBytes();1;OMR;CodeGenerator;0;0
arrayTranslateAndTestMinimumNumberOfIterations;arrayTranslateAndTestMinimumNumberOfIterations();1;OMR;CodeGenerator;0;0
arrayTranslateMinimumNumberOfElements;arrayTranslateMinimumNumberOfElements(_Bool,_Bool);1;OMR;CodeGenerator;0;0
arrayTranslateTableRequiresAlignment;arrayTranslateTableRequiresAlignment(_Bool,_Bool);1;OMR;CodeGenerator;0;0
beginInstructionSelection;beginInstructionSelection();1;OMR;CodeGenerator;0;0
bitwiseOpNeedsLiteralFromPool;bitwiseOpNeedsLiteralFromPool(TR::Node *,TR::Node *);1;OMR;CodeGenerator;0;0
bndsChkNeedsLiteralFromPool;bndsChkNeedsLiteralFromPool(TR::Node *);1;OMR;CodeGenerator;0;0
branchDisplacementToHelperOrTrampoline;branchDisplacementToHelperOrTrampoline(uint8_t *,TR::SymbolReference *);1;OMR::X86;CodeGenerator;0;0
branchesAreExpensive;branchesAreExpensive();1;OMR;CodeGenerator;0;0
buildGCMapForInstruction;buildGCMapForInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
buildGCMapsForInstructionAndSnippet;buildGCMapsForInstructionAndSnippet(TR::Instruction *);1;OMR;CodeGenerator;0;0
buildInterpreterEntryPoint;buildInterpreterEntryPoint();1;OMR;CodeGenerator;0;0
buildRegisterMapForInstruction;buildRegisterMapForInstruction(class TR_GCStackMap *);1;OMR;CodeGenerator;0;0
calculateRegisterPressure;calculateRegisterPressure();1;OMR;CodeGenerator;0;1
canBeAffectedByStoreTagStalls;canBeAffectedByStoreTagStalls();1;OMR;CodeGenerator;0;0
canClobberNodesRegister;canClobberNodesRegister(TR::Node *,uint16_t,class TR_ClobberEvalData *,_Bool);1;OMR;CodeGenerator;0;0
canFoldLargeOffsetInAddressing;canFoldLargeOffsetInAddressing();1;OMR;CodeGenerator;0;0
canNullChkBeImplicit;canNullChkBeImplicit(TR::Node *,_Bool);1;OMR;CodeGenerator;0;0
canNullChkBeImplicit;canNullChkBeImplicit(TR::Node *);0;OMR;CodeGenerator;0;0
canTransformUnsafeCopyToArrayCopy;canTransformUnsafeCopyToArrayCopy();1;OMR;CodeGenerator;0;0
canTransformUnsafeSetMemory;canTransformUnsafeSetMemory();1;OMR;CodeGenerator;0;0
canUseImmedInstruction;canUseImmedInstruction(int64_t);1;OMR;CodeGenerator;0;0
checkForLiveRegisters;checkForLiveRegisters(class TR_LiveRegisters *);1;OMR;CodeGenerator;0;0
cleanupFlags;cleanupFlags(TR::Node *);1;OMR;CodeGenerator;0;0
clearRegisterAssignmentFlags;clearRegisterAssignmentFlags();1;OMR;CodeGenerator;0;0
clobberLiveDependentDiscardableRegisters;clobberLiveDependentDiscardableRegisters(TR::ClobberingInstruction *,TR::Register *);1;OMR::X86;CodeGenerator;0;0
clobberLiveDiscardableRegisters;clobberLiveDiscardableRegisters(TR::Instruction *,TR::MemoryReference *);1;OMR::X86;CodeGenerator;0;0
codegenMulDecomposition;codegenMulDecomposition(int64_t);1;OMR;CodeGenerator;0;0
codegenSupportsLoadlessBNDCheck;codegenSupportsLoadlessBNDCheck();1;OMR;CodeGenerator;0;0
codegenSupportsUnsignedIntegerDivide;codegenSupportsUnsignedIntegerDivide();1;OMR;CodeGenerator;0;0
commitToCodeCache;commitToCodeCache();1;OMR;CodeGenerator;0;0
committedToCodeCache;committedToCodeCache();1;OMR;CodeGenerator;0;0
comp;comp();1;OMR;CodeGenerator;0;0
compute32BitMagicValues;compute32BitMagicValues(int32_t,int32_t *,int32_t *);1;OMR;CodeGenerator;0;0
compute64BitMagicValues;compute64BitMagicValues(int64_t,int64_t *,int64_t *);1;OMR;CodeGenerator;0;0
computeBlocksWithCalls;computeBlocksWithCalls();1;OMR;CodeGenerator;0;0
computeRegisterSaveDescription;computeRegisterSaveDescription(class TR_BitVector *,_Bool);1;OMR;CodeGenerator;0;0
computeSimulatedSpilledRegs;computeSimulatedSpilledRegs(class TR_BitVector *,int32_t,TR::SymbolReference *);1;OMR;CodeGenerator;0;0
computeSpilledRegsForAllPresentLinkages;computeSpilledRegsForAllPresentLinkages(class TR_BitVector *,struct OMR::CodeGenerator::TR_RegisterPressureSummary &);1;OMR;CodeGenerator;0;0
computeUnsigned64BitMagicValues;computeUnsigned64BitMagicValues(uint64_t,int32_t *,int32_t *);1;OMR;CodeGenerator;0;0
computesCarry;computesCarry();1;OMR;CodeGenerator;0;0
considerAllAutosAsTacticalGlobalRegisterCandidates;considerAllAutosAsTacticalGlobalRegisterCandidates();1;OMR;CodeGenerator;0;0
considerTypeForGRA;considerTypeForGRA(TR::DataType);1;OMR;CodeGenerator;0;0
considerTypeForGRA;considerTypeForGRA(TR::SymbolReference *);0;OMR;CodeGenerator;0;0
considerTypeForGRA;considerTypeForGRA(TR::Node *);0;OMR;CodeGenerator;0;0
constLoadNeedsLiteralFromPool;constLoadNeedsLiteralFromPool(TR::Node *);1;OMR;CodeGenerator;0;0
constantAddressesCanChangeSize;constantAddressesCanChangeSize(TR::Node *);1;OMR;CodeGenerator;0;0
convertMultiplyToShift;convertMultiplyToShift(TR::Node *);1;OMR;CodeGenerator;0;0
create16ByteData;create16ByteData(TR::Node *,void *);1;OMR::X86;CodeGenerator;0;0
create2ByteData;create2ByteData(TR::Node *,int16_t);1;OMR::X86;CodeGenerator;0;0
create4ByteData;create4ByteData(TR::Node *,int32_t);1;OMR::X86;CodeGenerator;0;0
create8ByteData;create8ByteData(TR::Node *,int64_t);1;OMR::X86;CodeGenerator;0;0
createHWPRecords;createHWPRecords();1;OMR;CodeGenerator;0;0
createLinkage;createLinkage(enum TR_LinkageConventions);1;OMR;CodeGenerator;0;0
createLinkageForCompilation;createLinkageForCompilation();1;OMR;CodeGenerator;0;0
createOrFindClonedNode;createOrFindClonedNode(TR::Node *,int32_t);1;OMR;CodeGenerator;0;0
createStackAtlas;createStackAtlas();1;OMR;CodeGenerator;0;0
deactivateDependentDiscardableRegisters;deactivateDependentDiscardableRegisters(TR::Register *);1;OMR::X86;CodeGenerator;0;0
decInternalControlFlowNestingDepth;decInternalControlFlowNestingDepth();1;OMR;CodeGenerator;0;0
decOutOfLineColdPathNestedDepth;decOutOfLineColdPathNestedDepth();1;OMR;CodeGenerator;0;0
decReferenceCount;decReferenceCount(TR::Node *);1;OMR;CodeGenerator;0;0
defaultArrayTranslateMinimumNumberOfIterations;defaultArrayTranslateMinimumNumberOfIterations(const char *);1;OMR;CodeGenerator;0;0
doBackwardsRegisterAssignment;doBackwardsRegisterAssignment(enum TR_RegisterKinds,TR::Instruction *,TR::Instruction *);1;OMR::X86;CodeGenerator;0;0
doBinaryEncoding;doBinaryEncoding();1;OMR;CodeGenerator;0;0
doInstructionSelection;doInstructionSelection();1;OMR;CodeGenerator;0;0
doPeephole;doPeephole();1;OMR;CodeGenerator;0;0
doRegisterAssignment;doRegisterAssignment(enum TR_RegisterKinds);1;OMR;CodeGenerator;0;0
doRematerialization;doRematerialization();1;OMR;CodeGenerator;0;0
doubleClobberEvaluate;doubleClobberEvaluate(TR::Node *);1;OMR::X86;CodeGenerator;0;0
dumpDataSnippets;dumpDataSnippets(TR::FILE *);1;OMR;CodeGenerator;0;0
dumpPostFPRegisterAssignment;dumpPostFPRegisterAssignment(TR::Instruction *,TR::Instruction *);1;OMR::X86;CodeGenerator;0;0
dumpPostGPRegisterAssignment;dumpPostGPRegisterAssignment(TR::Instruction *,TR::Instruction *);1;OMR::X86;CodeGenerator;0;0
dumpPreFPRegisterAssignment;dumpPreFPRegisterAssignment(TR::Instruction *);1;OMR::X86;CodeGenerator;0;0
dumpPreGPRegisterAssignment;dumpPreGPRegisterAssignment(TR::Instruction *);1;OMR::X86;CodeGenerator;0;0
dumpSpillStats;dumpSpillStats(class TR_FrontEnd *);1;OMR;CodeGenerator;0;0
dumpTargetAddressSnippets;dumpTargetAddressSnippets(TR::FILE *);1;OMR;CodeGenerator;0;0
eliminateLoadsOfLocalsThatAreNotStored;eliminateLoadsOfLocalsThatAreNotStored(TR::Node *,int32_t);1;OMR;CodeGenerator;0;0
emitDataSnippets;emitDataSnippets();1;OMR;CodeGenerator;0;0
emitSnippets;emitSnippets();1;OMR;CodeGenerator;0;0
emitTargetAddressSnippets;emitTargetAddressSnippets();1;OMR;CodeGenerator;0;0
enableBetterSpillPlacements;enableBetterSpillPlacements();1;OMR::X86;CodeGenerator;0;0
enableImplicitDivideCheck;enableImplicitDivideCheck();1;OMR::X86;CodeGenerator;0;0
enableLiteralPoolRegisterForGRA;enableLiteralPoolRegisterForGRA();1;OMR;CodeGenerator;0;0
enableRefinedAliasSets;enableRefinedAliasSets();1;OMR;CodeGenerator;0;0
enableRegisterAssociations;enableRegisterAssociations();1;OMR::X86;CodeGenerator;0;0
enableRegisterInterferences;enableRegisterInterferences();1;OMR::X86;CodeGenerator;0;0
enableRegisterWeights;enableRegisterWeights();1;OMR::X86;CodeGenerator;0;0
enableRematerialisation;enableRematerialisation();1;OMR::X86;CodeGenerator;0;0
enableSinglePrecisionMethods;enableSinglePrecisionMethods();1;OMR::X86;CodeGenerator;0;0
enableTLHPrefetching;enableTLHPrefetching();1;OMR::X86;CodeGenerator;0;0
endInstructionSelection;endInstructionSelection();1;OMR;CodeGenerator;0;0
endInternalControlFlow;endInternalControlFlow(TR::Instruction *);1;OMR;CodeGenerator;0;0
estimateBinaryLength;estimateBinaryLength(TR::MemoryReference *);1;OMR;CodeGenerator;0;0
estimateRegisterPressure;estimateRegisterPressure(TR::Block *,vcount_t,int32_t,int32_t,_Bool &,int32_t,class TR_BitVector *,TR::SymbolReference *,_Bool);1;OMR;CodeGenerator;0;0
estimateRegisterPressure;estimateRegisterPressure(TR::Node *,int32_t &,int32_t &,int32_t,class TR_BitVector *,_Bool,vcount_t,TR::SymbolReference *,_Bool &,_Bool,_Bool &);0;OMR;CodeGenerator;0;0
evaluate;evaluate(TR::Node *);1;OMR;CodeGenerator;0;0
evaluateChildrenWithMultipleRefCount;evaluateChildrenWithMultipleRefCount(TR::Node *);1;OMR;CodeGenerator;0;0
excludeInvariantsFromGRAEnabled;excludeInvariantsFromGRAEnabled();1;OMR;CodeGenerator;0;0
expandExponentiation;expandExponentiation();1;OMR;CodeGenerator;0;0
fe;fe();1;OMR;CodeGenerator;0;0
findAndFixCommonedReferences;findAndFixCommonedReferences();1;OMR;CodeGenerator;0;0
findBetterSpillPlacement;findBetterSpillPlacement(TR::Register *,int32_t);1;OMR::X86;CodeGenerator;0;0
findCoalescenceForRegisterCopy;findCoalescenceForRegisterCopy(TR::Node *,class TR_RegisterCandidate *,_Bool *);1;OMR;CodeGenerator;0;0
findCoalescenceRegisterForParameter;findCoalescenceRegisterForParameter(TR::Node *,class TR_RegisterCandidate *,uint32_t,_Bool *);1;OMR;CodeGenerator;0;0
findCommonedReferences;findCommonedReferences(TR::Node *,TR::TreeTop *);1;OMR;CodeGenerator;0;0
findOrCreate16ByteConstant;findOrCreate16ByteConstant(TR::Node *,void *);1;OMR::X86;CodeGenerator;0;0
findOrCreate2ByteConstant;findOrCreate2ByteConstant(TR::Node *,int16_t);1;OMR::X86;CodeGenerator;0;0
findOrCreate4ByteConstant;findOrCreate4ByteConstant(TR::Node *,int32_t);1;OMR::X86;CodeGenerator;0;0
findOrCreate8ByteConstant;findOrCreate8ByteConstant(TR::Node *,int64_t);1;OMR::X86;CodeGenerator;0;0
findOrCreateConstant;findOrCreateConstant(TR::Node *,void *,uint8_t);1;OMR::X86;CodeGenerator;0;0
findOrCreateCurrentTimeMillisTempSymRef;findOrCreateCurrentTimeMillisTempSymRef();1;OMR::X86;CodeGenerator;0;0
findOutlinedInstructionsFromLabel;findOutlinedInstructionsFromLabel(TR::LabelSymbol *);1;OMR::X86;CodeGenerator;0;0
findOutlinedInstructionsFromLabelForShrinkWrapping;findOutlinedInstructionsFromLabelForShrinkWrapping(TR::LabelSymbol *);1;OMR::X86;CodeGenerator;0;0
findOutlinedInstructionsFromMergeLabel;findOutlinedInstructionsFromMergeLabel(TR::LabelSymbol *);1;OMR::X86;CodeGenerator;0;0
findUsedCandidate;findUsedCandidate(TR::Node *,class TR_RegisterCandidate *,class TR_BitVector *);1;OMR;CodeGenerator;0;0
floatClobberEvaluate;floatClobberEvaluate(TR::Node *);1;OMR::X86;CodeGenerator;0;0
fprCount;fprCount(TR::DataType);1;OMR;CodeGenerator;0;0
freeSpill;freeSpill(class TR_BackingStore *,int32_t,int32_t);1;OMR;CodeGenerator;0;0
freeUnlatchedRegisters;freeUnlatchedRegisters();1;OMR;CodeGenerator;0;0
genLiveRealRegisters;genLiveRealRegisters(enum TR_RegisterKinds,TR_RegisterMask);1;OMR;CodeGenerator;0;0
genStoreForSymListArray;genStoreForSymListArray(TR_Array<List<TR::SymbolReference> > *,class TR_OSRMethodData *,TR::TreeTop *&,TR::Node *,TR::Node *,TR::Node *,TR::Node *,int32_t &);1;OMR;CodeGenerator;0;0
generateCatchBlockBBStartPrologue;generateCatchBlockBBStartPrologue(TR::Node *,TR::Instruction *);1;OMR;CodeGenerator;0;0
generateCode;generateCode();1;OMR;CodeGenerator;0;0
generateCodeFromIL;generateCodeFromIL();1;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::Register *,class TR_ScratchRegisterManager &,int8_t,int32_t,TR::Instruction *);1;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,class TR_ScratchRegisterManager &,int32_t,int8_t,int32_t,TR::Instruction *);0;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::RegisterDependencyConditions &,int32_t,int8_t,int32_t,TR::Instruction *);0;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(TR::Instruction *,const char *,TR::Register *,int8_t,int32_t);0;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(TR::Instruction *,const char *,int32_t,int8_t,int32_t);0;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::Register *,TR::RegisterDependencyConditions &,int8_t,int32_t,TR::Instruction *);0;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,int32_t,int8_t);0;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::Register *,int8_t);0;OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,class TR_ScratchRegisterManager &);1;OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,class TR_ScratchRegisterManager &);0;OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,TR::RegisterDependencyConditions *);0;OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,TR::RegisterDependencyConditions *);0;OMR;CodeGenerator;0;0
generateMasmListingSyntax;generateMasmListingSyntax();1;OMR::X86;CodeGenerator;0;0
generateNop;generateNop(TR::Node *,TR::Instruction *,enum TR_NOPKind);1;OMR;CodeGenerator;0;0
generatePadding;generatePadding(uint8_t *,intptrj_t,TR::Instruction *,enum TR_PaddingProperties,_Bool);1;OMR::X86;CodeGenerator;0;1
generateScratchRegisterManager;generateScratchRegisterManager(int32_t);1;OMR::X86;CodeGenerator;0;0
generateSwitchToInterpreterPrePrologue;generateSwitchToInterpreterPrePrologue(TR::Instruction *,uint8_t,uint8_t);1;OMR::X86;CodeGenerator;0;0
getAOTRelocationList;getAOTRelocationList();1;OMR;CodeGenerator;0;0
getAccessStaticsIndirectly;getAccessStaticsIndirectly();1;OMR;CodeGenerator;0;0
getAccumulatedInstructionLengthError;getAccumulatedInstructionLengthError();1;OMR;CodeGenerator;0;0
getAheadOfTimeCompile;getAheadOfTimeCompile();1;OMR;CodeGenerator;0;0
getAllSpillList;getAllSpillList();1;OMR;CodeGenerator;0;0
getAppendInstruction;getAppendInstruction();1;OMR;CodeGenerator;0;0
getAssignmentDirection;getAssignmentDirection();1;OMR::X86;CodeGenerator;0;0
getBinaryBufferCursor;getBinaryBufferCursor();1;OMR;CodeGenerator;0;0
getBinaryBufferLength;getBinaryBufferLength();1;OMR;CodeGenerator;0;0
getBinaryBufferStart;getBinaryBufferStart();1;OMR;CodeGenerator;0;0
getBlocksWithCalls;getBlocksWithCalls();1;OMR;CodeGenerator;0;0
getBreakPointList;getBreakPointList();1;OMR;CodeGenerator;0;0
getClobberingInstructions;getClobberingInstructions();1;OMR::X86;CodeGenerator;0;0
getCodeCache;getCodeCache();1;OMR;CodeGenerator;0;0
getCodeEnd;getCodeEnd();1;OMR;CodeGenerator;0;0
getCodeGeneratorPhase;getCodeGeneratorPhase();1;OMR;CodeGenerator;0;0
getCodeLength;getCodeLength();1;OMR;CodeGenerator;0;0
getCodeStart;getCodeStart();1;OMR;CodeGenerator;0;0
getCollectedSpillList;getCollectedSpillList();1;OMR;CodeGenerator;0;0
getCurrentBlock;getCurrentBlock();1;OMR;CodeGenerator;0;0
getCurrentBlockIndex;getCurrentBlockIndex();1;OMR;CodeGenerator;0;0
getCurrentEvaluationBlock;getCurrentEvaluationBlock();1;OMR;CodeGenerator;0;0
getCurrentEvaluationTreeTop;getCurrentEvaluationTreeTop();1;OMR;CodeGenerator;0;0
getCurrentPathDepth;getCurrentPathDepth();1;OMR;CodeGenerator;0;0
getDataTypeFromSymbolMap;getDataTypeFromSymbolMap(TR::Symbol *);1;OMR;CodeGenerator;0;0
getDebug;getDebug();1;OMR;CodeGenerator;0;0
getDependentDiscardableRegisters;getDependentDiscardableRegisters();1;OMR::X86;CodeGenerator;0;0
getDisableFpGRA;getDisableFpGRA();1;OMR;CodeGenerator;0;0
getDisableLongGRA;getDisableLongGRA();1;OMR;CodeGenerator;0;0
getDisableNullCheckOfArrayLength;getDisableNullCheckOfArrayLength();1;OMR;CodeGenerator;0;0
getDoubleWordConversionTemp;getDoubleWordConversionTemp();1;OMR::X86;CodeGenerator;0;0
getEnableRegisterUsageTracking;getEnableRegisterUsageTracking();1;OMR;CodeGenerator;0;0
getEnforceStoreOrder;getEnforceStoreOrder();1;OMR;CodeGenerator;0;0
getEstimatedCodeLength;getEstimatedCodeLength();1;OMR;CodeGenerator;0;0
getEstimatedSnippetStart;getEstimatedSnippetStart();1;OMR;CodeGenerator;0;0
getEstimatedWarmLength;getEstimatedWarmLength();1;OMR;CodeGenerator;0;0
getEvaluationPriority;getEvaluationPriority(TR::Node *);1;OMR;CodeGenerator;0;0
getExtendedToInt64GlobalRegisters;getExtendedToInt64GlobalRegisters();1;OMR;CodeGenerator;0;0
getFPRegisterIterator;getFPRegisterIterator();1;OMR;CodeGenerator;0;0
getFirstBit;getFirstBit(class TR_BitVector &);1;OMR;CodeGenerator;0;0
getFirstGlobalAR;getFirstGlobalAR();1;OMR;CodeGenerator;0;0
getFirstGlobalFPR;getFirstGlobalFPR();1;OMR;CodeGenerator;0;0
getFirstGlobalGPR;getFirstGlobalGPR();1;OMR;CodeGenerator;0;0
getFirstGlobalHPR;getFirstGlobalHPR();1;OMR;CodeGenerator;0;0
getFirstGlobalVRF;getFirstGlobalVRF();1;OMR;CodeGenerator;0;0
getFirstInstruction;getFirstInstruction();1;OMR;CodeGenerator;0;0
getFirstOverlappedGlobalFPR;getFirstOverlappedGlobalFPR();1;OMR;CodeGenerator;0;0
getFirstOverlappedGlobalVRF;getFirstOverlappedGlobalVRF();1;OMR;CodeGenerator;0;0
getFirstTimeLiveOOLRegisterList;getFirstTimeLiveOOLRegisterList();1;OMR;CodeGenerator;0;0
getFrameRegister;getFrameRegister();1;OMR::X86;CodeGenerator;0;0
getFrameSizeInBytes;getFrameSizeInBytes();1;OMR;CodeGenerator;0;0
getGPRegisterIterator;getGPRegisterIterator();1;OMR;CodeGenerator;0;0
getGRACompleted;getGRACompleted();1;OMR;CodeGenerator;0;0
getGlobalFPRPartitionLimit;getGlobalFPRPartitionLimit();1;OMR;CodeGenerator;0;0
getGlobalFPRsPreservedAcrossCalls;getGlobalFPRsPreservedAcrossCalls();1;OMR;CodeGenerator;0;0
getGlobalGPRFromHPR;getGlobalGPRFromHPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
getGlobalGPRPartitionLimit;getGlobalGPRPartitionLimit();1;OMR;CodeGenerator;0;0
getGlobalGPRsPreservedAcrossCalls;getGlobalGPRsPreservedAcrossCalls();1;OMR;CodeGenerator;0;0
getGlobalHPRFromGPR;getGlobalHPRFromGPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
getGlobalRegister;getGlobalRegister(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
getGlobalRegisterNumber;getGlobalRegisterNumber(uint32_t);1;OMR;CodeGenerator;0;0
getGlobalRegisters;getGlobalRegisters(enum TR_SpillKinds,enum TR_LinkageConventions);1;OMR;CodeGenerator;0;1
getHasDoubleWordAlignedStack;getHasDoubleWordAlignedStack();1;OMR;CodeGenerator;0;0
getHasResumableTrapHandler;getHasResumableTrapHandler();1;OMR;CodeGenerator;0;0
getImplicitExceptionPoint;getImplicitExceptionPoint();1;OMR;CodeGenerator;0;0
getInlinedGetCurrentThreadMethod;getInlinedGetCurrentThreadMethod();1;OMR;CodeGenerator;0;0
getInstructionAtEndInternalControlFlow;getInstructionAtEndInternalControlFlow();1;OMR;CodeGenerator;0;0
getInstructionPatchAlignmentBoundary;getInstructionPatchAlignmentBoundary();1;OMR::X86;CodeGenerator;0;0
getInstructionToBePatched;getInstructionToBePatched(TR::Instruction *);1;OMR;CodeGenerator;0;0
getInternalPointerSpillFreeList;getInternalPointerSpillFreeList();1;OMR;CodeGenerator;0;0
getInternalPtrMapBit;getInternalPtrMapBit();1;OMR;CodeGenerator;0;0
getIsInOOLSection;getIsInOOLSection();1;OMR;CodeGenerator;0;0
getJNICallSites;getJNICallSites();1;OMR;CodeGenerator;0;0
getJNILinkageCalleeCleanup;getJNILinkageCalleeCleanup();1;OMR;CodeGenerator;0;0
getJitMethodEntryPaddingSize;getJitMethodEntryPaddingSize();1;OMR;CodeGenerator;0;0
getLargestNegConstThatMustBeMaterialized;getLargestNegConstThatMustBeMaterialized();1;OMR::X86;CodeGenerator;0;0
getLargestOutgoingArgSize;getLargestOutgoingArgSize();1;OMR;CodeGenerator;0;0
getLastCatchAppendInstruction;getLastCatchAppendInstruction();1;OMR::X86;CodeGenerator;0;0
getLastGlobalAR;getLastGlobalAR();1;OMR;CodeGenerator;0;0
getLastGlobalFPR;getLastGlobalFPR();1;OMR;CodeGenerator;0;0
getLastGlobalGPR;getLastGlobalGPR();1;OMR;CodeGenerator;0;0
getLastGlobalHPR;getLastGlobalHPR();1;OMR;CodeGenerator;0;0
getLastGlobalVRF;getLastGlobalVRF();1;OMR;CodeGenerator;0;0
getLastOverlappedGlobalFPR;getLastOverlappedGlobalFPR();1;OMR;CodeGenerator;0;0
getLastOverlappedGlobalVRF;getLastOverlappedGlobalVRF();1;OMR;CodeGenerator;0;0
getLinkage;getLinkage(enum TR_LinkageConventions);1;OMR;CodeGenerator;0;0
getLinkage;getLinkage();0;OMR;CodeGenerator;0;0
getLinkageGlobalRegisterNumber;getLinkageGlobalRegisterNumber(int8_t,TR::DataType);1;OMR;CodeGenerator;0;0
getLiveButMaybeUnreferencedLocals;getLiveButMaybeUnreferencedLocals();1;OMR;CodeGenerator;0;0
getLiveDiscardableRegisters;getLiveDiscardableRegisters();1;OMR::X86;CodeGenerator;0;0
getLiveLocals;getLiveLocals();1;OMR;CodeGenerator;0;0
getLiveRealRegisters;getLiveRealRegisters(enum TR_RegisterKinds);1;OMR;CodeGenerator;0;0
getLiveRegisters;getLiveRegisters(enum TR_RegisterKinds);1;OMR;CodeGenerator;0;0
getLocalsIG;getLocalsIG();1;OMR;CodeGenerator;0;0
getLowestCommonCodePatchingAlignmentBoundary;getLowestCommonCodePatchingAlignmentBoundary();1;OMR::X86;CodeGenerator;0;0
getLowestSavedRegister;getLowestSavedRegister();1;OMR;CodeGenerator;0;0
getMappingAutomatics;getMappingAutomatics();1;OMR;CodeGenerator;0;0
getMaxObjectSizeGuaranteedNotToOverflow;getMaxObjectSizeGuaranteedNotToOverflow();1;OMR;CodeGenerator;0;0
getMaximumNumberOfFPRsAllowedAcrossEdge;getMaximumNumberOfFPRsAllowedAcrossEdge(TR::Node *);1;OMR;CodeGenerator;0;0
getMaximumNumberOfGPRsAllowedAcrossEdge;getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Block *);1;OMR;CodeGenerator;0;0
getMaximumNumberOfGPRsAllowedAcrossEdge;getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Node *);0;OMR;CodeGenerator;0;0
getMaximumNumberOfVRFsAllowedAcrossEdge;getMaximumNumberOfVRFsAllowedAcrossEdge(TR::Node *);1;OMR;CodeGenerator;0;0
getMaximumNumbersOfAssignableFPRs;getMaximumNumbersOfAssignableFPRs();1;OMR;CodeGenerator;0;0
getMaximumNumbersOfAssignableGPRs;getMaximumNumbersOfAssignableGPRs();1;OMR;CodeGenerator;0;0
getMaximumNumbersOfAssignableVRs;getMaximumNumbersOfAssignableVRs();1;OMR;CodeGenerator;0;0
getMethodContainsBinaryCodedDecimal;getMethodContainsBinaryCodedDecimal();1;OMR;CodeGenerator;0;0
getMethodMetaDataRegister;getMethodMetaDataRegister();1;OMR::X86;CodeGenerator;0;0
getMethodModifiedByRA;getMethodModifiedByRA();1;OMR;CodeGenerator;0;0
getMethodStackMap;getMethodStackMap();1;OMR;CodeGenerator;0;0
getMinByteForLongCompareNarrower;getMinByteForLongCompareNarrower();1;OMR;CodeGenerator;0;0
getMinShortForLongCompareNarrower;getMinShortForLongCompareNarrower();1;OMR;CodeGenerator;0;0
getMonClass;getMonClass(TR::Node *);1;OMR;CodeGenerator;0;0
getNanoTimeTemp;getNanoTimeTemp();1;OMR::X86;CodeGenerator;0;0
getNextAvailableBlockIndex;getNextAvailableBlockIndex();1;OMR;CodeGenerator;0;0
getNumberBytesReadInaccessible;getNumberBytesReadInaccessible();1;OMR;CodeGenerator;0;0
getNumberBytesWriteInaccessible;getNumberBytesWriteInaccessible();1;OMR;CodeGenerator;0;0
getNumberOfGlobalFPRs;getNumberOfGlobalFPRs();1;OMR;CodeGenerator;0;0
getNumberOfGlobalGPRs;getNumberOfGlobalGPRs();1;OMR;CodeGenerator;0;0
getNumberOfGlobalRegisters;getNumberOfGlobalRegisters();1;OMR;CodeGenerator;0;0
getNumberOfGlobalVRFs;getNumberOfGlobalVRFs();1;OMR;CodeGenerator;0;0
getNumberOfTemporaryRegistersUsedByCall;getNumberOfTemporaryRegistersUsedByCall(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,uint32_t &,uint32_t &,uint32_t &);1;OMR;CodeGenerator;0;1
getOptimizationPhaseIsComplete;getOptimizationPhaseIsComplete();1;OMR;CodeGenerator;0;0
getOutlinedInstructionsList;getOutlinedInstructionsList();1;OMR::X86;CodeGenerator;0;0
getOverlapOffsetBetweenAliasedGRNs;getOverlapOffsetBetweenAliasedGRNs();1;OMR;CodeGenerator;0;0
getOverlappedAliasForGRN;getOverlappedAliasForGRN(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
getPicSlotCount;getPicSlotCount();1;OMR::X86;CodeGenerator;0;0
getPreJitMethodEntrySize;getPreJitMethodEntrySize();1;OMR;CodeGenerator;0;0
getPrePrologueSize;getPrePrologueSize();1;OMR;CodeGenerator;0;0
getPreferredLoopUnrollFactor;getPreferredLoopUnrollFactor();1;OMR;CodeGenerator;0;0
getPreservedRegsInPrologue;getPreservedRegsInPrologue();1;OMR;CodeGenerator;0;0
getProperties;getProperties();1;OMR::X86;CodeGenerator;0;0
getRealVMThreadRegister;getRealVMThreadRegister();1;OMR;CodeGenerator;0;0
getReferencedRegisterList;getReferencedRegisterList();1;OMR;CodeGenerator;0;0
getRegisterArray;getRegisterArray();1;OMR;CodeGenerator;0;0
getRegisterMapInfoBitsMask;getRegisterMapInfoBitsMask();1;OMR;CodeGenerator;0;0
getRegisterSaveDescription;getRegisterSaveDescription();1;OMR;CodeGenerator;0;0
getRelocationList;getRelocationList();1;OMR;CodeGenerator;0;0
getReturnTypeInfoInstruction;getReturnTypeInfoInstruction();1;OMR::X86;CodeGenerator;0;0
getShrinkWrappingDone;getShrinkWrappingDone();1;OMR;CodeGenerator;0;0
getSizeOfCombinedBuffer;getSizeOfCombinedBuffer();1;OMR;CodeGenerator;0;0
getSmallestPosConstThatMustBeMaterialized;getSmallestPosConstThatMustBeMaterialized();1;OMR::X86;CodeGenerator;0;0
getSnippetList;getSnippetList();1;OMR;CodeGenerator;0;0
getSpill16FreeList;getSpill16FreeList();1;OMR;CodeGenerator;0;0
getSpill4FreeList;getSpill4FreeList();1;OMR;CodeGenerator;0;0
getSpill8FreeList;getSpill8FreeList();1;OMR;CodeGenerator;0;0
getSpilledIntRegisters;getSpilledIntRegisters();1;OMR::X86;CodeGenerator;0;0
getSpilledRegisterList;getSpilledRegisterList();1;OMR;CodeGenerator;0;0
getStackAtlas;getStackAtlas();1;OMR;CodeGenerator;0;0
getStaticRelocations;getStaticRelocations();1;OMR;CodeGenerator;0;0
getSupportedLiveRegisterKinds;getSupportedLiveRegisterKinds();1;OMR;CodeGenerator;0;0
getSupportsAlignedAccessOnly;getSupportsAlignedAccessOnly();1;OMR;CodeGenerator;0;0
getSupportsArrayCmp;getSupportsArrayCmp();1;OMR;CodeGenerator;0;0
getSupportsArrayCmpSign;getSupportsArrayCmpSign();1;OMR;CodeGenerator;0;0
getSupportsArraySet;getSupportsArraySet();1;OMR;CodeGenerator;0;0
getSupportsArrayTranslateAndTest;getSupportsArrayTranslateAndTest();1;OMR;CodeGenerator;0;0
getSupportsArrayTranslateTROT;getSupportsArrayTranslateTROT();1;OMR;CodeGenerator;0;0
getSupportsArrayTranslateTROTNoBreak;getSupportsArrayTranslateTROTNoBreak();1;OMR;CodeGenerator;0;0
getSupportsArrayTranslateTRTO;getSupportsArrayTranslateTRTO();1;OMR;CodeGenerator;0;0
getSupportsArrayTranslateTRTO255;getSupportsArrayTranslateTRTO255();1;OMR;CodeGenerator;0;0
getSupportsArrayTranslateTRxx;getSupportsArrayTranslateTRxx();1;OMR;CodeGenerator;0;0
getSupportsAtomicLoadAndAdd;getSupportsAtomicLoadAndAdd();1;OMR;CodeGenerator;0;0
getSupportsAutoSIMD;getSupportsAutoSIMD();1;OMR;CodeGenerator;0;0
getSupportsBCDToDFPReduction;getSupportsBCDToDFPReduction();1;OMR;CodeGenerator;0;0
getSupportsBDLLHardwareOverflowCheck;getSupportsBDLLHardwareOverflowCheck();1;OMR;CodeGenerator;0;0
getSupportsBigDecimalLongLookasideVersioning;getSupportsBigDecimalLongLookasideVersioning();1;OMR;CodeGenerator;0;0
getSupportsBitOpCodes;getSupportsBitOpCodes();1;OMR;CodeGenerator;0;0
getSupportsBitPermute;getSupportsBitPermute();1;OMR;CodeGenerator;0;1
getSupportsCompactedLocals;getSupportsCompactedLocals();1;OMR;CodeGenerator;0;0
getSupportsConstantOffsetInAddressing;getSupportsConstantOffsetInAddressing();1;OMR;CodeGenerator;0;0
getSupportsConstantOffsetInAddressing;getSupportsConstantOffsetInAddressing(int64_t);0;OMR;CodeGenerator;0;0
getSupportsCurrentTimeMaxPrecision;getSupportsCurrentTimeMaxPrecision();1;OMR;CodeGenerator;0;0
getSupportsDirectJNICalls;getSupportsDirectJNICalls();1;OMR;CodeGenerator;0;0
getSupportsDivCheck;getSupportsDivCheck();1;OMR;CodeGenerator;0;0
getSupportsDoubleWordCAS;getSupportsDoubleWordCAS();1;OMR;CodeGenerator;0;0
getSupportsDoubleWordSet;getSupportsDoubleWordSet();1;OMR;CodeGenerator;0;0
getSupportsEfficientNarrowIntComputation;getSupportsEfficientNarrowIntComputation();1;OMR;CodeGenerator;0;0
getSupportsEfficientNarrowUnsignedIntComputation;getSupportsEfficientNarrowUnsignedIntComputation();1;OMR;CodeGenerator;0;0
getSupportsEncodeUtf16BigWithSurrogateTest;getSupportsEncodeUtf16BigWithSurrogateTest();1;OMR;CodeGenerator;0;0
getSupportsEncodeUtf16LittleWithSurrogateTest;getSupportsEncodeUtf16LittleWithSurrogateTest();1;OMR;CodeGenerator;0;0
getSupportsFastCTM;getSupportsFastCTM();1;OMR;CodeGenerator;0;0
getSupportsGlRegDepOnFirstBlock;getSupportsGlRegDepOnFirstBlock();1;OMR;CodeGenerator;0;0
getSupportsGlRegDeps;getSupportsGlRegDeps();1;OMR;CodeGenerator;0;0
getSupportsIDivAndIRemWithThreeChildren;getSupportsIDivAndIRemWithThreeChildren();1;OMR;CodeGenerator;0;0
getSupportsIbyteswap;getSupportsIbyteswap();1;OMR;CodeGenerator;0;1
getSupportsInlinedAtomicLongVolatiles;getSupportsInlinedAtomicLongVolatiles();1;OMR;CodeGenerator;0;0
getSupportsInliningOfTypeCoersionMethods;getSupportsInliningOfTypeCoersionMethods();1;OMR;CodeGenerator;0;0
getSupportsJavaFloatSemantics;getSupportsJavaFloatSemantics();1;OMR;CodeGenerator;0;0
getSupportsLDivAndLRemWithThreeChildren;getSupportsLDivAndLRemWithThreeChildren();1;OMR;CodeGenerator;0;0
getSupportsLM;getSupportsLM();1;OMR;CodeGenerator;0;0
getSupportsLoweringConstIDiv;getSupportsLoweringConstIDiv();1;OMR;CodeGenerator;0;0
getSupportsLoweringConstLDiv;getSupportsLoweringConstLDiv();1;OMR;CodeGenerator;0;0
getSupportsLoweringConstLDivPower2;getSupportsLoweringConstLDivPower2();1;OMR;CodeGenerator;0;0
getSupportsMergedAllocations;getSupportsMergedAllocations();1;OMR;CodeGenerator;0;0
getSupportsNewInstanceImplOpt;getSupportsNewInstanceImplOpt();1;OMR;CodeGenerator;0;0
getSupportsNewObjectAlignment;getSupportsNewObjectAlignment();1;OMR;CodeGenerator;0;0
getSupportsOpCodeForAutoSIMD;getSupportsOpCodeForAutoSIMD(TR::ILOpCode,TR::DataType);1;OMR;CodeGenerator;0;0
getSupportsPartialInlineOfMethodHooks;getSupportsPartialInlineOfMethodHooks();1;OMR;CodeGenerator;0;0
getSupportsPostProcessArrayCopy;getSupportsPostProcessArrayCopy();1;OMR;CodeGenerator;0;0
getSupportsPrimitiveArrayCopy;getSupportsPrimitiveArrayCopy();1;OMR;CodeGenerator;0;0
getSupportsProfiledInlining;getSupportsProfiledInlining();1;OMR;CodeGenerator;0;0
getSupportsReadOnlyLocks;getSupportsReadOnlyLocks();1;OMR;CodeGenerator;0;0
getSupportsReferenceArrayCopy;getSupportsReferenceArrayCopy();1;OMR;CodeGenerator;0;0
getSupportsReverseLoadAndStore;getSupportsReverseLoadAndStore();1;OMR;CodeGenerator;0;0
getSupportsRuntimeInstrumentation;getSupportsRuntimeInstrumentation();1;OMR;CodeGenerator;0;0
getSupportsScaledIndexAddressing;getSupportsScaledIndexAddressing();1;OMR;CodeGenerator;0;0
getSupportsSearchCharString;getSupportsSearchCharString();1;OMR;CodeGenerator;0;0
getSupportsShrinkWrapping;getSupportsShrinkWrapping();1;OMR;CodeGenerator;0;0
getSupportsStackAllocationOfArraylets;getSupportsStackAllocationOfArraylets();1;OMR;CodeGenerator;0;0
getSupportsTLE;getSupportsTLE();1;OMR;CodeGenerator;0;1
getSupportsTM;getSupportsTM();1;OMR;CodeGenerator;0;0
getSupportsTMDoubleWordCASORSet;getSupportsTMDoubleWordCASORSet();1;OMR;CodeGenerator;0;0
getSupportsTMHashMapAndLinkedQueue;getSupportsTMHashMapAndLinkedQueue();1;OMR;CodeGenerator;0;0
getSupportsTenuredObjectAlignment;getSupportsTenuredObjectAlignment();1;OMR;CodeGenerator;0;0
getSupportsTestCharComparisonControl;getSupportsTestCharComparisonControl();1;OMR;CodeGenerator;0;0
getSupportsTestUnderMask;getSupportsTestUnderMask();1;OMR;CodeGenerator;0;0
getSupportsTranslateAndTestCharString;getSupportsTranslateAndTestCharString();1;OMR;CodeGenerator;0;0
getSupportsVMThreadGRA;getSupportsVMThreadGRA();1;OMR;CodeGenerator;0;0
getSupportsVectorRegisters;getSupportsVectorRegisters();1;OMR;CodeGenerator;0;0
getSupportsVirtualGuardNOPing;getSupportsVirtualGuardNOPing();1;OMR;CodeGenerator;0;0
getSwitchToInterpreterLabel;getSwitchToInterpreterLabel();1;OMR::X86;CodeGenerator;0;0
getSymRef;getSymRef(enum TR_RuntimeHelper);1;OMR;CodeGenerator;0;0
getSymRefTab;getSymRefTab();1;OMR;CodeGenerator;0;0
getTraceRAOption;getTraceRAOption(uint32_t);1;OMR;CodeGenerator;0;0
getTreeEvaluatorTable;getTreeEvaluatorTable();1;OMR;CodeGenerator;0;0
getUseNonLinearRegisterAssigner;getUseNonLinearRegisterAssigner();1;OMR;CodeGenerator;0;0
getUsesLoadStoreMultiple;getUsesLoadStoreMultiple();1;OMR;CodeGenerator;0;0
getVMThreadGlobalRegisterNumber;getVMThreadGlobalRegisterNumber();1;OMR;CodeGenerator;0;0
getVMThreadRegister;getVMThreadRegister();1;OMR;CodeGenerator;0;0
getVMThreadRequired;getVMThreadRequired();1;OMR;CodeGenerator;0;0
getVMThreadSpillInstruction;getVMThreadSpillInstruction();1;OMR;CodeGenerator;0;0
getVirtualGuardForPatching;getVirtualGuardForPatching(TR::Instruction *);1;OMR;CodeGenerator;0;0
getWordConversionTemp;getWordConversionTemp();1;OMR::X86;CodeGenerator;0;0
getX86ProcessorInfo;getX86ProcessorInfo();1;OMR::X86;CodeGenerator;0;0
getX87RegisterIterator;getX87RegisterIterator();1;OMR::X86;CodeGenerator;0;0
getXMMDoubleLoadOpCode;getXMMDoubleLoadOpCode();1;OMR::X86;CodeGenerator;0;0
gprClobberEvaluate;gprClobberEvaluate(TR::Node *,enum TR_X86OpCodes);1;OMR::X86;CodeGenerator;0;0
gprCount;gprCount(TR::DataType,int32_t);1;OMR;CodeGenerator;0;0
hasCCCarry;hasCCCarry();1;OMR;CodeGenerator;0;0
hasCCCompare;hasCCCompare();1;OMR;CodeGenerator;0;0
hasCCInfo;hasCCInfo();1;OMR;CodeGenerator;0;0
hasCCOverflow;hasCCOverflow();1;OMR;CodeGenerator;0;0
hasCCSigned;hasCCSigned();1;OMR;CodeGenerator;0;0
hasCCZero;hasCCZero();1;OMR;CodeGenerator;0;0
hasComplexAddressingMode;hasComplexAddressingMode();1;OMR;CodeGenerator;0;0
hasDataSnippets;hasDataSnippets();1;OMR;CodeGenerator;0;0
hasGlobalVRF;hasGlobalVRF();1;OMR;CodeGenerator;0;0
hasRegisterPressureInfo;hasRegisterPressureInfo();1;OMR;CodeGenerator;0;0
hasTMEvaluator;hasTMEvaluator();1;OMR;CodeGenerator;0;0
hasTargetAddressSnippets;hasTargetAddressSnippets();1;OMR;CodeGenerator;0;0
hiValue;hiValue(intptrj_t);1;OMR;CodeGenerator;0;0
identifyUnneededByteConvNodes;identifyUnneededByteConvNodes(TR::Node *,TR::TreeTop *,vcount_t,TR::DataType);1;OMR;CodeGenerator;0;0
identifyUnneededByteConvNodes;identifyUnneededByteConvNodes();0;OMR;CodeGenerator;0;0
ilOpCodeIsSupported;ilOpCodeIsSupported(TR::ILOpCodes);1;OMR;CodeGenerator;0;0
incInternalControlFlowNestingDepth;incInternalControlFlowNestingDepth();1;OMR;CodeGenerator;0;0
incNumRematerializedAddresses;incNumRematerializedAddresses();1;OMR;CodeGenerator;0;0
incNumRematerializedConstants;incNumRematerializedConstants();1;OMR;CodeGenerator;0;0
incNumRematerializedIndirects;incNumRematerializedIndirects();1;OMR;CodeGenerator;0;0
incNumRematerializedLocals;incNumRematerializedLocals();1;OMR;CodeGenerator;0;0
incNumRematerializedStatics;incNumRematerializedStatics();1;OMR;CodeGenerator;0;0
incNumRematerializedXMMRs;incNumRematerializedXMMRs();1;OMR;CodeGenerator;0;0
incNumSpilledRegisters;incNumSpilledRegisters();1;OMR;CodeGenerator;0;0
incOutOfLineColdPathNestedDepth;incOutOfLineColdPathNestedDepth();1;OMR;CodeGenerator;0;0
incPicSlotCountBy;incPicSlotCountBy(int32_t);1;OMR::X86;CodeGenerator;0;0
incRefCountForOpaquePseudoRegister;incRefCountForOpaquePseudoRegister(TR::Node *,TR::CodeGenerator *,TR::Compilation *);1;OMR;CodeGenerator;0;0
incReferenceCount;incReferenceCount(TR::Node *);1;OMR;CodeGenerator;0;0
incrementEventCounter;incrementEventCounter(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *);1;OMR;CodeGenerator;0;0
initLinkageToGlobalRegisterMap;initLinkageToGlobalRegisterMap();1;OMR::X86::AMD64;CodeGenerator;0;0
initialize;initialize(TR::Compilation *);1;OMR::X86;CodeGenerator;0;0
initializeLinkage;initializeLinkage();1;OMR;CodeGenerator;0;0
initializeRegisterPressureSimulator;initializeRegisterPressureSimulator();1;OMR;CodeGenerator;0;0
initializeVFPState;initializeVFPState(TR::class RealRegister::RegNum,int32_t);1;OMR::X86;CodeGenerator;0;0
inlineDirectCall;inlineDirectCall(TR::Node *,TR::Register *&);1;OMR;CodeGenerator;0;0
insertDebugCounters;insertDebugCounters();1;OMR;CodeGenerator;0;0
insideInternalControlFlow;insideInternalControlFlow();1;OMR;CodeGenerator;0;0
intClobberEvaluate;intClobberEvaluate(TR::Node *);1;OMR::X86;CodeGenerator;0;0
internalControlFlowNestingDepth;internalControlFlowNestingDepth();1;OMR;CodeGenerator;0;0
internalControlFlowSafeNestingDepth;internalControlFlowSafeNestingDepth();1;OMR;CodeGenerator;0;0
internalPointerSupportImplemented;internalPointerSupportImplemented();1;OMR;CodeGenerator;0;0
is8BitGlobalGPR;is8BitGlobalGPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
isAddressScaleIndexSupported;isAddressScaleIndexSupported(int32_t);1;OMR;CodeGenerator;0;0
isAliasedGRN;isAliasedGRN(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
isAlignmentInstruction;isAlignmentInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
isBranchInstruction;isBranchInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
isCandidateLoad;isCandidateLoad(TR::Node *,TR::SymbolReference *);1;OMR;CodeGenerator;0;0
isCandidateLoad;isCandidateLoad(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);0;OMR;CodeGenerator;0;0
isFenceInstruction;isFenceInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
isFreeSpillListLocked;isFreeSpillListLocked();1;OMR;CodeGenerator;0;0
isGlobalFPR;isGlobalFPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
isGlobalGPR;isGlobalGPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
isGlobalHPR;isGlobalHPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
isGlobalRegisterAvailable;isGlobalRegisterAvailable(TR_GlobalRegisterNumber,TR::DataType);1;OMR;CodeGenerator;0;0
isGlobalVRF;isGlobalVRF(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
isInMemoryInstructionCandidate;isInMemoryInstructionCandidate(TR::Node *);1;OMR;CodeGenerator;0;0
isInternalControlFlowReg;isInternalControlFlowReg(TR::Register *);1;OMR;CodeGenerator;0;0
isLabelInstruction;isLabelInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
isLeafMethod;isLeafMethod();1;OMR;CodeGenerator;0;0
isLiteralPoolOnDemandOn;isLiteralPoolOnDemandOn();1;OMR;CodeGenerator;0;0
isLoadAlreadyAssignedOnEntry;isLoadAlreadyAssignedOnEntry(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;0
isMaterialized;isMaterialized(TR::Node *);1;OMR;CodeGenerator;0;0
isMemoryUpdate;isMemoryUpdate(TR::Node *);1;OMR;CodeGenerator;0;0
isObjectOfSizeWorthAligning;isObjectOfSizeWorthAligning(uint32_t);1;OMR;CodeGenerator;0;0
isOutOfLineColdPath;isOutOfLineColdPath();1;OMR;CodeGenerator;0;0
isOutOfLineHotPath;isOutOfLineHotPath();1;OMR;CodeGenerator;0;0
isPreservedRegister;isPreservedRegister(int32_t);1;OMR;CodeGenerator;0;0
isRegisterClobberable;isRegisterClobberable(TR::Register *,uint16_t);1;OMR;CodeGenerator;0;0
isReturnInstruction;isReturnInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
isRotateAndMask;isRotateAndMask(TR::Node *);1;OMR;CodeGenerator;0;0
isSnippetMatched;isSnippetMatched(TR::Snippet *,int32_t,TR::SymbolReference *);1;OMR;CodeGenerator;0;0
isSupportedAdd;isSupportedAdd(TR::Node *);1;OMR;CodeGenerator;0;0
isTargetSnippetOrOutOfLine;isTargetSnippetOrOutOfLine(TR::Instruction *,TR::Instruction **,TR::Instruction **);1;OMR;CodeGenerator;0;0
jettisonAllSpills;jettisonAllSpills();1;OMR;CodeGenerator;0;0
jitAdd32BitPicToPatchOnClassRedefinition;jitAdd32BitPicToPatchOnClassRedefinition(void *,void *,_Bool);1;OMR;CodeGenerator;0;0
jitAdd32BitPicToPatchOnClassUnload;jitAdd32BitPicToPatchOnClassUnload(void *,void *);1;OMR;CodeGenerator;0;0
jitAddPicToPatchOnClassRedefinition;jitAddPicToPatchOnClassRedefinition(void *,void *,_Bool);1;OMR;CodeGenerator;0;0
jitAddPicToPatchOnClassUnload;jitAddPicToPatchOnClassUnload(void *,void *);1;OMR;CodeGenerator;0;0
jitAddUnresolvedAddressMaterializationToPatchOnClassRedefinition;jitAddUnresolvedAddressMaterializationToPatchOnClassRedefinition(void *);1;OMR;CodeGenerator;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;CodeGenerator;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;CodeGenerator;0;0
killLiveRealRegisters;killLiveRealRegisters(enum TR_RegisterKinds,TR_RegisterMask);1;OMR;CodeGenerator;0;0
lastInstructionBeforeCurrentEvaluationTreeTop;lastInstructionBeforeCurrentEvaluationTreeTop();1;OMR;CodeGenerator;0;0
linkage;linkage();1;OMR;CodeGenerator;0;0
lockFreeSpillList;lockFreeSpillList();1;OMR;CodeGenerator;0;0
longClobberEvaluate;longClobberEvaluate(TR::Node *);1;OMR::X86;CodeGenerator;0;1
lookUpSnippet;lookUpSnippet(int32_t,TR::SymbolReference *);1;OMR;CodeGenerator;0;0
lowerTree;lowerTree(TR::Node *,TR::TreeTop *);1;OMR;CodeGenerator;0;0
lowerTreeIfNeeded;lowerTreeIfNeeded(TR::Node *,int32_t,TR::Node *,TR::TreeTop *);1;OMR;CodeGenerator;0;0
lowerTrees;lowerTrees();1;OMR;CodeGenerator;0;0
lowerTreesPostChildrenVisit;lowerTreesPostChildrenVisit(TR::Node *,TR::TreeTop *,vcount_t);1;OMR;CodeGenerator;0;0
lowerTreesPostTreeTopVisit;lowerTreesPostTreeTopVisit(TR::TreeTop *,vcount_t);1;OMR;CodeGenerator;0;0
lowerTreesPreChildrenVisit;lowerTreesPreChildrenVisit(TR::Node *,TR::TreeTop *,vcount_t);1;OMR;CodeGenerator;0;0
lowerTreesPreTreeTopVisit;lowerTreesPreTreeTopVisit(TR::TreeTop *,vcount_t);1;OMR;CodeGenerator;0;0
lowerTreesPropagateBlockToNode;lowerTreesPropagateBlockToNode(TR::Node *);1;OMR;CodeGenerator;0;0
lowerTreesWalk;lowerTreesWalk(TR::Node *,TR::TreeTop *,vcount_t);1;OMR;CodeGenerator;0;0
machine;machine();1;OMR;CodeGenerator;0;0
mapAutosTo8ByteSlots;mapAutosTo8ByteSlots();1;OMR::X86;CodeGenerator;0;0
materializesHeapBase;materializesHeapBase();1;OMR;CodeGenerator;0;0
materializesLargeConstants;materializesLargeConstants();1;OMR;CodeGenerator;0;0
methodEnterExitTracingEnabled;methodEnterExitTracingEnabled();1;OMR::X86;CodeGenerator;0;0
mulDecompositionCostIsJustified;mulDecompositionCostIsJustified(int,char [],char [],int64_t);1;OMR;CodeGenerator;0;0
multiplyIsDestructive;multiplyIsDestructive();1;OMR;CodeGenerator;0;0
mustGenerateSwitchToInterpreterPrePrologue;mustGenerateSwitchToInterpreterPrePrologue();1;OMR;CodeGenerator;0;0
needClassAndMethodPointerRelocations;needClassAndMethodPointerRelocations();1;OMR;CodeGenerator;0;0
needGuardSitesEvenWhenGuardRemoved;needGuardSitesEvenWhenGuardRemoved();1;OMR;CodeGenerator;0;0
needRelocationsForStatics;needRelocationsForStatics();1;OMR;CodeGenerator;0;0
needSpillTemp;needSpillTemp(class TR_LiveReference *,TR::Node *,TR::TreeTop *);1;OMR;CodeGenerator;0;0
needToAvoidCommoningInGRA;needToAvoidCommoningInGRA();1;OMR;CodeGenerator;0;0
needsNormalizationBeforeShifts;needsNormalizationBeforeShifts();1;OMR;CodeGenerator;0;0
nodeCanBeFoldedIntoMemref;nodeCanBeFoldedIntoMemref(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;1
nodeIsFoldableMemOperand;nodeIsFoldableMemOperand(TR::Node *,TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR::X86;CodeGenerator;0;0
nodeMatches;nodeMatches(TR::Node *,TR::Node *,_Bool);1;OMR;CodeGenerator;0;0
nodeMayCauseException;nodeMayCauseException(TR::Node *);1;OMR;CodeGenerator;0;0
nodeResultARCount;nodeResultARCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;1
nodeResultConsumesNoRegisters;nodeResultConsumesNoRegisters(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;0
nodeResultFPRCount;nodeResultFPRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;1
nodeResultGPRCount;nodeResultGPRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;1
nodeResultSSRCount;nodeResultSSRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;1
nodeResultVRFCount;nodeResultVRFCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;1
nodeWillBeRematerialized;nodeWillBeRematerialized(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;1
nopsAlsoProcessedByRelocations;nopsAlsoProcessedByRelocations();1;OMR::X86;CodeGenerator;0;0
opCodeIsNoOp;opCodeIsNoOp(TR::ILOpCode &);1;OMR;CodeGenerator;0;0
opCodeIsNoOpOnThisPlatform;opCodeIsNoOpOnThisPlatform(TR::ILOpCode &);1;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,size_t);0;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;CodeGenerator;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;CodeGenerator;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;CodeGenerator;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;CodeGenerator;0;0
operator=;operator=(class OMR::CodeGenerator &&);1;OMR;CodeGenerator;1;0
operator=;operator=(const class OMR::CodeGenerator &);0;OMR;CodeGenerator;1;0
operator=;operator=(const class OMR::X86::CodeGenerator &);0;OMR::X86;CodeGenerator;1;0
operator=;operator=(class OMR::X86::CodeGenerator &&);0;OMR::X86;CodeGenerator;1;0
operator=;operator=(class OMR::X86::AMD64::CodeGenerator &&);0;OMR::X86::AMD64;CodeGenerator;1;0
operator=;operator=(const class OMR::X86::AMD64::CodeGenerator &);0;OMR::X86::AMD64;CodeGenerator;1;0
operator=;operator=(class TestCompiler::CodeGenerator &&);0;TestCompiler;CodeGenerator;1;0
operator=;operator=(const class TestCompiler::CodeGenerator &);0;TestCompiler;CodeGenerator;1;0
operator=;operator=(const class TR::CodeGenerator &);0;TR;CodeGenerator;1;0
operator=;operator=(class TR::CodeGenerator &&);0;TR;CodeGenerator;1;0
patchableRangeNeedsAlignment;patchableRangeNeedsAlignment(void *,intptrj_t,intptrj_t,intptrj_t);1;OMR::X86;CodeGenerator;0;0
performNonLinearRegisterAssignmentAtBranch;performNonLinearRegisterAssignmentAtBranch(TR::X86LabelInstruction *,enum TR_RegisterKinds);1;OMR::X86;CodeGenerator;0;0
performsChecksExplicitly;performsChecksExplicitly();1;OMR;CodeGenerator;0;0
pickNOPRegister;pickNOPRegister(TR::Instruction *);1;OMR::X86;CodeGenerator;0;0
pickRegister;pickRegister(class TR_RegisterCandidate *,TR::Block **,class TR_BitVector &,TR_GlobalRegisterNumber &,TR_LinkHead<class TR_RegisterCandidate> *);1;OMR;CodeGenerator;0;0
postLowerTrees;postLowerTrees();1;OMR;CodeGenerator;0;0
preLowerTrees;preLowerTrees();1;OMR;CodeGenerator;0;0
prepareForGRA;prepareForGRA();1;OMR;CodeGenerator;0;0
prepareForNonLinearRegisterAssignmentAtMerge;prepareForNonLinearRegisterAssignmentAtMerge(TR::X86LabelInstruction *);1;OMR::X86;CodeGenerator;0;0
prepareNodeForInstructionSelection;prepareNodeForInstructionSelection(TR::Node *);1;OMR;CodeGenerator;0;0
prepareRegistersForAssignment;prepareRegistersForAssignment();1;OMR;CodeGenerator;0;0
processClobberingInstructions;processClobberingInstructions(TR::ClobberingInstruction *,TR::Instruction *);1;OMR::X86;CodeGenerator;0;0
processIncomingParameterUsage;processIncomingParameterUsage(class TR_BitVector **,int32_t);1;OMR;CodeGenerator;0;0
processInstruction;processInstruction(TR::Instruction *,class TR_BitVector **,int32_t &,int32_t &,_Bool);1;OMR;CodeGenerator;0;0
processReference;processReference(TR::Node *,TR::Node *,TR::TreeTop *);1;OMR;CodeGenerator;0;0
processRelocations;processRelocations();1;OMR;CodeGenerator;0;0
profiledPointersRequireRelocation;profiledPointersRequireRelocation();1;OMR;CodeGenerator;0;0
propagateSignThroughBCDLeftShift;propagateSignThroughBCDLeftShift(TR::DataType);1;OMR;CodeGenerator;0;0
pushPreservedRegisters;pushPreservedRegisters();1;OMR::X86;CodeGenerator;0;0
reactivateDependentDiscardableRegisters;reactivateDependentDiscardableRegisters(TR::Register *);1;OMR::X86;CodeGenerator;0;0
recordSingleRegisterUse;recordSingleRegisterUse(TR::Register *);1;OMR;CodeGenerator;0;0
recursivelyDecReferenceCount;recursivelyDecReferenceCount(TR::Node *);1;OMR;CodeGenerator;0;0
registerAssumptions;registerAssumptions();1;OMR;CodeGenerator;0;0
remapGCIndicesInInternalPtrFormat;remapGCIndicesInInternalPtrFormat();1;OMR;CodeGenerator;0;0
rematerializeCmpUnderTernary;rematerializeCmpUnderTernary(TR::Node *);1;OMR;CodeGenerator;0;0
removeBetterSpillPlacementCandidate;removeBetterSpillPlacementCandidate(TR::RealRegister *);1;OMR::X86;CodeGenerator;0;0
removeLiveDiscardableRegister;removeLiveDiscardableRegister(TR::Register *);1;OMR::X86;CodeGenerator;0;0
removeRegisterHogsInLowerTreesWalk;removeRegisterHogsInLowerTreesWalk();1;OMR;CodeGenerator;0;0
removeUnavailableRegisters;removeUnavailableRegisters(class TR_RegisterCandidate *,TR::Block **,class TR_BitVector &);1;OMR;CodeGenerator;0;0
removeUnusedLocals;removeUnusedLocals();1;OMR;CodeGenerator;0;0
requiresCarry;requiresCarry();1;OMR;CodeGenerator;0;0
reserveCodeCache;reserveCodeCache();1;OMR;CodeGenerator;0;0
reserveNTrampolines;reserveNTrampolines(int32_t);1;OMR::X86;CodeGenerator;0;0
resetEnableBetterSpillPlacements;resetEnableBetterSpillPlacements();1;OMR::X86;CodeGenerator;0;0
resetEnableRegisterUsageTracking;resetEnableRegisterUsageTracking();1;OMR;CodeGenerator;0;0
resetEnableRematerialisation;resetEnableRematerialisation();1;OMR::X86;CodeGenerator;0;0
resetIsLeafMethod;resetIsLeafMethod();1;OMR;CodeGenerator;0;0
resetLiveRealRegisters;resetLiveRealRegisters(enum TR_RegisterKinds);1;OMR;CodeGenerator;0;0
resetMethodModifiedByRA;resetMethodModifiedByRA();1;OMR;CodeGenerator;0;0
resetRegisterAssignmentFlag;resetRegisterAssignmentFlag(enum TR_RegisterAssignmentFlagBits);1;OMR;CodeGenerator;0;0
resetRemoveRegisterHogsInLowerTreesWalk;resetRemoveRegisterHogsInLowerTreesWalk();1;OMR;CodeGenerator;0;0
resetSupportsVMThreadGRA;resetSupportsVMThreadGRA();1;OMR;CodeGenerator;0;0
resetTrackingInMemoryKilledLoads;resetTrackingInMemoryKilledLoads();1;OMR;CodeGenerator;0;0
resizeCodeMemory;resizeCodeMemory();1;OMR;CodeGenerator;0;0
saveBetterSpillPlacements;saveBetterSpillPlacements(TR::Instruction *);1;OMR::X86;CodeGenerator;0;0
saveOrRestoreRegisters;saveOrRestoreRegisters(class TR_BitVector *,TR::Instruction *,_Bool);1;OMR;CodeGenerator;0;0
self;self();1;OMR;CodeGenerator;0;0
setAccessStaticsIndirectly;setAccessStaticsIndirectly(_Bool);1;OMR;CodeGenerator;0;0
setAccumulatedInstructionLengthError;setAccumulatedInstructionLengthError(int32_t);1;OMR;CodeGenerator;0;0
setAheadOfTimeCompile;setAheadOfTimeCompile(TR::AheadOfTimeCompile *);1;OMR;CodeGenerator;0;0
setAlwaysUseTrampolines;setAlwaysUseTrampolines();1;OMR;CodeGenerator;0;0
setAppendInstruction;setAppendInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
setAssignmentDirection;setAssignmentDirection(RegisterAssignmentDirection);1;OMR::X86;CodeGenerator;0;0
setBinaryBufferCursor;setBinaryBufferCursor(uint8_t *);1;OMR;CodeGenerator;0;0
setBinaryBufferStart;setBinaryBufferStart(uint8_t *);1;OMR;CodeGenerator;0;0
setCodeCache;setCodeCache(TR::CodeCache *);1;OMR;CodeGenerator;0;0
setComputesCarry;setComputesCarry(_Bool);1;OMR;CodeGenerator;0;0
setConsiderAllAutosAsTacticalGlobalRegisterCandidates;setConsiderAllAutosAsTacticalGlobalRegisterCandidates();1;OMR;CodeGenerator;0;0
setCurrentBlock;setCurrentBlock(TR::Block *);1;OMR;CodeGenerator;0;0
setCurrentBlockIndex;setCurrentBlockIndex(int32_t);1;OMR;CodeGenerator;0;0
setCurrentEvaluationBlock;setCurrentEvaluationBlock(TR::Block *);1;OMR;CodeGenerator;0;0
setCurrentEvaluationTreeTop;setCurrentEvaluationTreeTop(TR::TreeTop *);1;OMR;CodeGenerator;0;0
setCurrentPathDepth;setCurrentPathDepth(int32_t);1;OMR;CodeGenerator;0;0
setDisableFpGRA;setDisableFpGRA();1;OMR;CodeGenerator;0;0
setDisableLongGRA;setDisableLongGRA();1;OMR;CodeGenerator;0;0
setDisableNullCheckOfArrayLength;setDisableNullCheckOfArrayLength();1;OMR;CodeGenerator;0;0
setEnableBetterSpillPlacements;setEnableBetterSpillPlacements();1;OMR::X86;CodeGenerator;0;0
setEnableImplicitDivideCheck;setEnableImplicitDivideCheck();1;OMR::X86;CodeGenerator;0;0
setEnableRefinedAliasSets;setEnableRefinedAliasSets();1;OMR;CodeGenerator;0;0
setEnableRegisterAssociations;setEnableRegisterAssociations();1;OMR::X86;CodeGenerator;0;0
setEnableRegisterInterferences;setEnableRegisterInterferences();1;OMR::X86;CodeGenerator;0;0
setEnableRegisterUsageTracking;setEnableRegisterUsageTracking();1;OMR;CodeGenerator;0;0
setEnableRegisterWeights;setEnableRegisterWeights();1;OMR::X86;CodeGenerator;0;0
setEnableRematerialisation;setEnableRematerialisation();1;OMR::X86;CodeGenerator;0;0
setEnableSinglePrecisionMethods;setEnableSinglePrecisionMethods();1;OMR::X86;CodeGenerator;0;0
setEnableTLHPrefetching;setEnableTLHPrefetching();1;OMR::X86;CodeGenerator;0;0
setEnforceStoreOrder;setEnforceStoreOrder();1;OMR;CodeGenerator;0;0
setEstimatedCodeLength;setEstimatedCodeLength(uint32_t);1;OMR;CodeGenerator;0;0
setEstimatedLocationsForDataSnippetLabels;setEstimatedLocationsForDataSnippetLabels(int32_t);1;OMR;CodeGenerator;0;0
setEstimatedLocationsForSnippetLabels;setEstimatedLocationsForSnippetLabels(int32_t);1;OMR;CodeGenerator;0;0
setEstimatedLocationsForTargetAddressSnippetLabels;setEstimatedLocationsForTargetAddressSnippetLabels(int32_t);1;OMR;CodeGenerator;0;0
setEstimatedSnippetStart;setEstimatedSnippetStart(int32_t);1;OMR;CodeGenerator;0;0
setEstimatedWarmLength;setEstimatedWarmLength(uint32_t);1;OMR;CodeGenerator;0;0
setExpandExponentiation;setExpandExponentiation();1;OMR;CodeGenerator;0;0
setFPRegisterIterator;setFPRegisterIterator(TR::RegisterIterator *);1;OMR;CodeGenerator;0;0
setFirstGlobalAR;setFirstGlobalAR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setFirstGlobalFPR;setFirstGlobalFPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setFirstGlobalHPR;setFirstGlobalHPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setFirstGlobalVRF;setFirstGlobalVRF(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setFirstInstruction;setFirstInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
setFirstOverlappedGlobalFPR;setFirstOverlappedGlobalFPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setFirstOverlappedGlobalVRF;setFirstOverlappedGlobalVRF(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setFirstTimeLiveOOLRegisterList;setFirstTimeLiveOOLRegisterList(TR::list<TR::Register *> *);1;OMR;CodeGenerator;0;0
setFrameSizeInBytes;setFrameSizeInBytes(int32_t);1;OMR;CodeGenerator;0;0
setGPRegisterIterator;setGPRegisterIterator(TR::RegisterIterator *);1;OMR;CodeGenerator;0;0
setGRACompleted;setGRACompleted();1;OMR;CodeGenerator;0;0
setGenerateMasmListingSyntax;setGenerateMasmListingSyntax();1;OMR::X86;CodeGenerator;0;0
setGlobalFPRPartitionLimit;setGlobalFPRPartitionLimit(uint8_t);1;OMR;CodeGenerator;0;0
setGlobalGPRPartitionLimit;setGlobalGPRPartitionLimit(uint8_t);1;OMR;CodeGenerator;0;0
setGlobalRegisterTable;setGlobalRegisterTable(uint32_t *);1;OMR;CodeGenerator;0;0
setHasCCCarry;setHasCCCarry(_Bool);1;OMR;CodeGenerator;0;0
setHasCCCompare;setHasCCCompare(_Bool);1;OMR;CodeGenerator;0;0
setHasCCInfo;setHasCCInfo(_Bool);1;OMR;CodeGenerator;0;0
setHasCCOverflow;setHasCCOverflow(_Bool);1;OMR;CodeGenerator;0;0
setHasCCSigned;setHasCCSigned(_Bool);1;OMR;CodeGenerator;0;0
setHasCCZero;setHasCCZero(_Bool);1;OMR;CodeGenerator;0;0
setHasDoubleWordAlignedStack;setHasDoubleWordAlignedStack();1;OMR;CodeGenerator;0;0
setHasResumableTrapHandler;setHasResumableTrapHandler();1;OMR;CodeGenerator;0;0
setImplicitExceptionPoint;setImplicitExceptionPoint(TR::Instruction *);1;OMR;CodeGenerator;0;0
setInlinedGetCurrentThreadMethod;setInlinedGetCurrentThreadMethod();1;OMR;CodeGenerator;0;0
setInstructionPatchAlignmentBoundary;setInstructionPatchAlignmentBoundary(int32_t);1;OMR::X86;CodeGenerator;0;0
setInternalControlFlowNestingDepth;setInternalControlFlowNestingDepth(int32_t);1;OMR;CodeGenerator;0;0
setInternalControlFlowSafeNestingDepth;setInternalControlFlowSafeNestingDepth(int32_t);1;OMR;CodeGenerator;0;0
setIsLeafMethod;setIsLeafMethod();1;OMR;CodeGenerator;0;0
setJNILinkageCalleeCleanup;setJNILinkageCalleeCleanup();1;OMR;CodeGenerator;0;0
setJitMethodEntryPaddingSize;setJitMethodEntryPaddingSize(uint32_t);1;OMR;CodeGenerator;0;0
setLargestOutgoingArgSize;setLargestOutgoingArgSize(uint32_t);1;OMR;CodeGenerator;0;0
setLast8BitGlobalGPR;setLast8BitGlobalGPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setLastCatchAppendInstruction;setLastCatchAppendInstruction(TR::Instruction *);1;OMR::X86;CodeGenerator;0;0
setLastGlobalAR;setLastGlobalAR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setLastGlobalFPR;setLastGlobalFPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setLastGlobalGPR;setLastGlobalGPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setLastGlobalHPR;setLastGlobalHPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setLastGlobalVRF;setLastGlobalVRF(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setLastInstructionBeforeCurrentEvaluationTreeTop;setLastInstructionBeforeCurrentEvaluationTreeTop(TR::Instruction *);1;OMR;CodeGenerator;0;0
setLastOverlappedGlobalFPR;setLastOverlappedGlobalFPR(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setLastOverlappedGlobalVRF;setLastOverlappedGlobalVRF(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setLinkage;setLinkage(enum TR_LinkageConventions,TR::Linkage *);1;OMR;CodeGenerator;0;0
setLinkage;setLinkage(TR::Linkage *);0;OMR;CodeGenerator;0;0
setLiveButMaybeUnreferencedLocals;setLiveButMaybeUnreferencedLocals(class TR_BitVector *);1;OMR;CodeGenerator;0;0
setLiveLocals;setLiveLocals(class TR_BitVector *);1;OMR;CodeGenerator;0;0
setLiveRegisters;setLiveRegisters(class TR_LiveRegisters *,enum TR_RegisterKinds);1;OMR;CodeGenerator;0;0
setLmmdFailed;setLmmdFailed();1;OMR;CodeGenerator;0;0
setLocalsIG;setLocalsIG(class TR_InterferenceGraph *);1;OMR;CodeGenerator;0;0
setLowestCommonCodePatchingAlignmentBoundary;setLowestCommonCodePatchingAlignmentBoundary(int32_t);1;OMR::X86;CodeGenerator;0;0
setLowestSavedRegister;setLowestSavedRegister(int32_t);1;OMR;CodeGenerator;0;0
setMapAutosTo8ByteSlots;setMapAutosTo8ByteSlots();1;OMR::X86;CodeGenerator;0;0
setMappingAutomatics;setMappingAutomatics();1;OMR;CodeGenerator;0;0
setMethodContainsBinaryCodedDecimal;setMethodContainsBinaryCodedDecimal();1;OMR;CodeGenerator;0;0
setMethodEnterExitTracingEnabled;setMethodEnterExitTracingEnabled();1;OMR::X86;CodeGenerator;0;0
setMethodModifiedByRA;setMethodModifiedByRA();1;OMR;CodeGenerator;0;0
setMethodStackMap;setMethodStackMap(class TR_GCStackMap *);1;OMR;CodeGenerator;0;0
setMultiplyIsDestructive;setMultiplyIsDestructive();1;OMR;CodeGenerator;0;0
setNextAvailableBlockIndex;setNextAvailableBlockIndex(int32_t);1;OMR;CodeGenerator;0;0
setOnDemandLiteralPoolRun;setOnDemandLiteralPoolRun(_Bool);1;OMR;CodeGenerator;0;0
setOptimizationPhaseIsComplete;setOptimizationPhaseIsComplete();1;OMR;CodeGenerator;0;0
setOverlapOffsetBetweenAliasedGRNs;setOverlapOffsetBetweenAliasedGRNs(TR_GlobalRegisterNumber);1;OMR;CodeGenerator;0;0
setPerformsChecksExplicitly;setPerformsChecksExplicitly();1;OMR;CodeGenerator;0;0
setPicSlotCount;setPicSlotCount(int32_t);1;OMR::X86;CodeGenerator;0;0
setPreJitMethodEntrySize;setPreJitMethodEntrySize(uint32_t);1;OMR;CodeGenerator;0;0
setPrePrologueSize;setPrePrologueSize(uint32_t);1;OMR;CodeGenerator;0;0
setPreservedRegsInPrologue;setPreservedRegsInPrologue(class TR_BitVector *);1;OMR;CodeGenerator;0;0
setPushPreservedRegisters;setPushPreservedRegisters();1;OMR::X86;CodeGenerator;0;0
setRealVMThreadRegister;setRealVMThreadRegister(TR::RealRegister *);1;OMR;CodeGenerator;0;0
setReferencedRegisterList;setReferencedRegisterList(TR::list<OMR::RegisterUsage *> *);1;OMR;CodeGenerator;0;0
setRegisterAssignmentFlag;setRegisterAssignmentFlag(enum TR_RegisterAssignmentFlagBits);1;OMR;CodeGenerator;0;0
setRegisterSaveDescription;setRegisterSaveDescription(int32_t);1;OMR;CodeGenerator;0;0
setRemoveRegisterHogsInLowerTreesWalk;setRemoveRegisterHogsInLowerTreesWalk();1;OMR;CodeGenerator;0;0
setRequiresCarry;setRequiresCarry(_Bool);1;OMR;CodeGenerator;0;0
setShouldBuildStructure;setShouldBuildStructure();1;OMR;CodeGenerator;0;0
setShrinkWrappingDone;setShrinkWrappingDone();1;OMR;CodeGenerator;0;0
setSpilledRegisterList;setSpilledRegisterList(TR::list<TR::Register *> *);1;OMR;CodeGenerator;0;0
setSpilledRegsForAllPresentLinkages;setSpilledRegsForAllPresentLinkages(class TR_BitVector *,struct OMR::CodeGenerator::TR_RegisterPressureSummary &,enum TR_SpillKinds);1;OMR;CodeGenerator;0;0
setSpillsFPRegistersAcrossCalls;setSpillsFPRegistersAcrossCalls();1;OMR;CodeGenerator;0;0
setStackAtlas;setStackAtlas(TR::GCStackAtlas *);1;OMR;CodeGenerator;0;0
setSupportsAlignedAccessOnly;setSupportsAlignedAccessOnly();1;OMR;CodeGenerator;0;0
setSupportsArrayCmp;setSupportsArrayCmp();1;OMR;CodeGenerator;0;0
setSupportsArrayCmpSign;setSupportsArrayCmpSign();1;OMR;CodeGenerator;0;0
setSupportsArraySet;setSupportsArraySet();1;OMR;CodeGenerator;0;0
setSupportsArrayTranslateAndTest;setSupportsArrayTranslateAndTest();1;OMR;CodeGenerator;0;0
setSupportsArrayTranslateTROT;setSupportsArrayTranslateTROT();1;OMR;CodeGenerator;0;0
setSupportsArrayTranslateTROTNoBreak;setSupportsArrayTranslateTROTNoBreak();1;OMR;CodeGenerator;0;0
setSupportsArrayTranslateTRTO;setSupportsArrayTranslateTRTO();1;OMR;CodeGenerator;0;0
setSupportsArrayTranslateTRTO255;setSupportsArrayTranslateTRTO255();1;OMR;CodeGenerator;0;0
setSupportsArrayTranslateTRxx;setSupportsArrayTranslateTRxx();1;OMR;CodeGenerator;0;0
setSupportsAtomicLoadAndAdd;setSupportsAtomicLoadAndAdd();1;OMR;CodeGenerator;0;0
setSupportsAutoSIMD;setSupportsAutoSIMD();1;OMR;CodeGenerator;0;0
setSupportsBCDToDFPReduction;setSupportsBCDToDFPReduction();1;OMR;CodeGenerator;0;0
setSupportsBDLLHardwareOverflowCheck;setSupportsBDLLHardwareOverflowCheck();1;OMR;CodeGenerator;0;0
setSupportsBigDecimalLongLookasideVersioning;setSupportsBigDecimalLongLookasideVersioning();1;OMR;CodeGenerator;0;0
setSupportsCompactedLocals;setSupportsCompactedLocals();1;OMR;CodeGenerator;0;0
setSupportsConstantOffsetInAddressing;setSupportsConstantOffsetInAddressing();1;OMR;CodeGenerator;0;0
setSupportsCurrentTimeMaxPrecision;setSupportsCurrentTimeMaxPrecision();1;OMR;CodeGenerator;0;0
setSupportsDirectJNICalls;setSupportsDirectJNICalls();1;OMR;CodeGenerator;0;0
setSupportsDivCheck;setSupportsDivCheck();1;OMR;CodeGenerator;0;0
setSupportsDoubleWordCAS;setSupportsDoubleWordCAS();1;OMR;CodeGenerator;0;0
setSupportsDoubleWordSet;setSupportsDoubleWordSet();1;OMR;CodeGenerator;0;0
setSupportsEfficientNarrowIntComputation;setSupportsEfficientNarrowIntComputation();1;OMR;CodeGenerator;0;0
setSupportsEfficientNarrowUnsignedIntComputation;setSupportsEfficientNarrowUnsignedIntComputation();1;OMR;CodeGenerator;0;0
setSupportsFastCTM;setSupportsFastCTM();1;OMR;CodeGenerator;0;0
setSupportsFastPackedDFPConversions;setSupportsFastPackedDFPConversions();1;OMR;CodeGenerator;0;0
setSupportsGlRegDepOnFirstBlock;setSupportsGlRegDepOnFirstBlock();1;OMR;CodeGenerator;0;0
setSupportsGlRegDeps;setSupportsGlRegDeps();1;OMR;CodeGenerator;0;0
setSupportsIDivAndIRemWithThreeChildren;setSupportsIDivAndIRemWithThreeChildren();1;OMR;CodeGenerator;0;0
setSupportsInlinedAtomicLongVolatiles;setSupportsInlinedAtomicLongVolatiles();1;OMR;CodeGenerator;0;0
setSupportsInliningOfTypeCoersionMethods;setSupportsInliningOfTypeCoersionMethods();1;OMR;CodeGenerator;0;0
setSupportsIntDFPConversions;setSupportsIntDFPConversions();1;OMR;CodeGenerator;0;0
setSupportsJavaFloatSemantics;setSupportsJavaFloatSemantics();1;OMR;CodeGenerator;0;0
setSupportsLDivAndLRemWithThreeChildren;setSupportsLDivAndLRemWithThreeChildren();1;OMR;CodeGenerator;0;0
setSupportsLM;setSupportsLM();1;OMR;CodeGenerator;0;0
setSupportsLoweringConstIDiv;setSupportsLoweringConstIDiv();1;OMR;CodeGenerator;0;0
setSupportsLoweringConstLDiv;setSupportsLoweringConstLDiv();1;OMR;CodeGenerator;0;0
setSupportsLoweringConstLDivPower2;setSupportsLoweringConstLDivPower2();1;OMR;CodeGenerator;0;0
setSupportsMergedAllocations;setSupportsMergedAllocations();1;OMR;CodeGenerator;0;0
setSupportsNewInstanceImplOpt;setSupportsNewInstanceImplOpt();1;OMR;CodeGenerator;0;0
setSupportsPartialInlineOfMethodHooks;setSupportsPartialInlineOfMethodHooks();1;OMR;CodeGenerator;0;0
setSupportsPostProcessArrayCopy;setSupportsPostProcessArrayCopy();1;OMR;CodeGenerator;0;0
setSupportsPrimitiveArrayCopy;setSupportsPrimitiveArrayCopy();1;OMR;CodeGenerator;0;0
setSupportsProfiledInlining;setSupportsProfiledInlining();1;OMR;CodeGenerator;0;0
setSupportsReadOnlyLocks;setSupportsReadOnlyLocks();1;OMR;CodeGenerator;0;0
setSupportsReferenceArrayCopy;setSupportsReferenceArrayCopy();1;OMR;CodeGenerator;0;0
setSupportsReverseLoadAndStore;setSupportsReverseLoadAndStore();1;OMR;CodeGenerator;0;0
setSupportsRuntimeInstrumentation;setSupportsRuntimeInstrumentation();1;OMR;CodeGenerator;0;0
setSupportsScaledIndexAddressing;setSupportsScaledIndexAddressing();1;OMR;CodeGenerator;0;0
setSupportsSearchCharString;setSupportsSearchCharString();1;OMR;CodeGenerator;0;0
setSupportsShrinkWrapping;setSupportsShrinkWrapping();1;OMR;CodeGenerator;0;0
setSupportsStackAllocationOfArraylets;setSupportsStackAllocationOfArraylets();1;OMR;CodeGenerator;0;0
setSupportsTM;setSupportsTM();1;OMR;CodeGenerator;0;0
setSupportsTMDoubleWordCASORSet;setSupportsTMDoubleWordCASORSet();1;OMR;CodeGenerator;0;0
setSupportsTMHashMapAndLinkedQueue;setSupportsTMHashMapAndLinkedQueue();1;OMR;CodeGenerator;0;0
setSupportsTestCharComparisonControl;setSupportsTestCharComparisonControl();1;OMR;CodeGenerator;0;0
setSupportsTestUnderMask;setSupportsTestUnderMask();1;OMR;CodeGenerator;0;0
setSupportsTranslateAndTestCharString;setSupportsTranslateAndTestCharString();1;OMR;CodeGenerator;0;0
setSupportsVMThreadGRA;setSupportsVMThreadGRA();1;OMR;CodeGenerator;0;0
setSupportsVectorRegisters;setSupportsVectorRegisters();1;OMR;CodeGenerator;0;0
setSupportsVirtualGuardNOPing;setSupportsVirtualGuardNOPing();1;OMR;CodeGenerator;0;0
setSupportsZonedDFPConversions;setSupportsZonedDFPConversions();1;OMR;CodeGenerator;0;0
setSwitchToInterpreterLabel;setSwitchToInterpreterLabel(TR::LabelSymbol *);1;OMR::X86;CodeGenerator;0;0
setTargetSupportsSoftwarePrefetches;setTargetSupportsSoftwarePrefetches();1;OMR::X86;CodeGenerator;0;0
setTrackingInMemoryKilledLoads;setTrackingInMemoryKilledLoads();1;OMR;CodeGenerator;0;0
setUnavailableRegistersUsage;setUnavailableRegistersUsage(TR_Array<class TR_BitVector> &,TR_Array<class TR_BitVector> &);1;OMR;CodeGenerator;0;0
setUpForInstructionSelection;setUpForInstructionSelection();1;OMR;CodeGenerator;0;0
setUpStackSizeForCallNode;setUpStackSizeForCallNode(TR::Node *);1;OMR;CodeGenerator;0;0
setUseGPRsForWin32CTMConversion;setUseGPRsForWin32CTMConversion();1;OMR::X86;CodeGenerator;0;0
setUseLongDivideHelperForWin32CTMConversion;setUseLongDivideHelperForWin32CTMConversion();1;OMR::X86;CodeGenerator;0;0
setUseNonLinearRegisterAssigner;setUseNonLinearRegisterAssigner();1;OMR;CodeGenerator;0;0
setUseSSEForDoublePrecision;setUseSSEForDoublePrecision();1;OMR::X86;CodeGenerator;0;0
setUseSSEForSinglePrecision;setUseSSEForSinglePrecision();1;OMR::X86;CodeGenerator;0;0
setUsesLoadStoreMultiple;setUsesLoadStoreMultiple();1;OMR;CodeGenerator;0;0
setUsesRegisterMaps;setUsesRegisterMaps();1;OMR;CodeGenerator;0;0
setUsesRegisterPairsForLongs;setUsesRegisterPairsForLongs();1;OMR;CodeGenerator;0;0
setVFPState;setVFPState(const struct TR_VFPState &);1;OMR::X86;CodeGenerator;0;0
setVMThreadRegister;setVMThreadRegister(TR::Register *);1;OMR;CodeGenerator;0;0
setVMThreadRequired;setVMThreadRequired(_Bool);1;OMR;CodeGenerator;0;0
setVMThreadSpillInstruction;setVMThreadSpillInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
setX87RegisterIterator;setX87RegisterIterator(TR::RegisterIterator *);1;OMR::X86;CodeGenerator;0;0
setXMMDoubleLoadOpCode;setXMMDoubleLoadOpCode(enum TR_X86OpCodes);1;OMR::X86;CodeGenerator;0;0
shortClobberEvaluate;shortClobberEvaluate(TR::Node *);1;OMR::X86;CodeGenerator;0;0
shouldBuildStructure;shouldBuildStructure();1;OMR;CodeGenerator;0;0
shouldValueBeInACommonedNode;shouldValueBeInACommonedNode(int64_t);1;OMR;CodeGenerator;0;0
shouldYankCompressedRefs;shouldYankCompressedRefs();1;OMR;CodeGenerator;0;0
shutdown;shutdown(class TR_FrontEnd *,TR::FILE *);1;OMR;CodeGenerator;0;0
simulateBlockEvaluation;simulateBlockEvaluation(TR::Block *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);1;OMR;CodeGenerator;0;0
simulateDecReferenceCount;simulateDecReferenceCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;0
simulateMemoryReference;simulateMemoryReference(struct OMR::CodeGenerator::TR_SimulatedMemoryReference *,TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);1;OMR;CodeGenerator;0;0
simulateNodeEvaluation;simulateNodeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);1;OMR;CodeGenerator;0;1
simulateNodeGoingDead;simulateNodeGoingDead(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;0
simulateNodeGoingLive;simulateNodeGoingLive(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;0
simulateNodeInitialization;simulateNodeInitialization(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;0
simulateSkippedTreeEvaluation;simulateSkippedTreeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *,char);1;OMR;CodeGenerator;0;0
simulateTreeEvaluation;simulateTreeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);1;OMR;CodeGenerator;0;0
simulatedNodeState;simulatedNodeState(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);1;OMR;CodeGenerator;0;0
simulatedNodeState;simulatedNodeState(TR::Node *);0;OMR;CodeGenerator;0;0
simulationPrePass;simulationPrePass(TR::TreeTop *,TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);1;OMR;CodeGenerator;0;0
sizeOfInstructionToBePatched;sizeOfInstructionToBePatched(TR::Instruction *);1;OMR;CodeGenerator;0;0
sizeOfInstructionToBePatchedHCRGuard;sizeOfInstructionToBePatchedHCRGuard(TR::Instruction *);1;OMR;CodeGenerator;0;0
spillsFPRegistersAcrossCalls;spillsFPRegistersAcrossCalls();1;OMR;CodeGenerator;0;0
splitBlockEntry;splitBlockEntry(TR::Instruction *);1;OMR;CodeGenerator;0;0
splitEdge;splitEdge(TR::Instruction *,_Bool,_Bool,TR::Instruction *,TR::list<TR::Instruction *> *,_Bool);1;OMR;CodeGenerator;0;0
startInternalControlFlow;startInternalControlFlow(TR::Instruction *);1;OMR;CodeGenerator;0;0
startRecordingRegisterUsage;startRecordingRegisterUsage();1;OMR;CodeGenerator;0;0
startUsingRegister;startUsingRegister(TR::Register *);1;OMR;CodeGenerator;0;0
stopRecordingRegisterUsage;stopRecordingRegisterUsage();1;OMR;CodeGenerator;0;0
stopUsingRegister;stopUsingRegister(TR::Register *);1;OMR;CodeGenerator;0;0
storageMayOverlap;storageMayOverlap(TR::Node *,size_t,TR::Node *,size_t);1;OMR;CodeGenerator;0;0
supportVMInternalNatives;supportVMInternalNatives();1;OMR;CodeGenerator;0;0
supports32bitAiadd;supports32bitAiadd();1;OMR;CodeGenerator;0;0
supportsAddressRematerialization;supportsAddressRematerialization();1;OMR::X86;CodeGenerator;0;0
supportsAtomicAdd;supportsAtomicAdd();1;OMR;CodeGenerator;0;0
supportsCMOV;supportsCMOV();1;OMR::X86;CodeGenerator;0;0
supportsComplexAddressing;supportsComplexAddressing();1;OMR;CodeGenerator;0;0
supportsConstantRematerialization;supportsConstantRematerialization();1;OMR::X86;CodeGenerator;0;0
supportsDebugCounters;supportsDebugCounters(TR::DebugCounterInjectionPoint);1;OMR;CodeGenerator;0;0
supportsDirectIntegralLoadStoresFromLiteralPool;supportsDirectIntegralLoadStoresFromLiteralPool();1;OMR;CodeGenerator;0;0
supportsDirectJNICallsForAOT;supportsDirectJNICallsForAOT();1;OMR;CodeGenerator;0;0
supportsFS0VMThreadRematerialization;supportsFS0VMThreadRematerialization();1;OMR::X86;CodeGenerator;0;0
supportsFastPackedDFPConversions;supportsFastPackedDFPConversions();1;OMR;CodeGenerator;0;0
supportsFusedMultiplyAdd;supportsFusedMultiplyAdd();1;OMR;CodeGenerator;0;0
supportsHighWordFacility;supportsHighWordFacility();1;OMR;CodeGenerator;0;0
supportsIndirectMemoryRematerialization;supportsIndirectMemoryRematerialization();1;OMR::X86;CodeGenerator;0;0
supportsInliningOfIsInstance;supportsInliningOfIsInstance();1;OMR;CodeGenerator;0;0
supportsIntDFPConversions;supportsIntDFPConversions();1;OMR;CodeGenerator;0;0
supportsInternalPointers;supportsInternalPointers();1;OMR;CodeGenerator;0;0
supportsLengthMinusOneForMemoryOpts;supportsLengthMinusOneForMemoryOpts();1;OMR;CodeGenerator;0;0
supportsLocalMemoryRematerialization;supportsLocalMemoryRematerialization();1;OMR::X86;CodeGenerator;0;0
supportsLongRegAllocation;supportsLongRegAllocation();1;OMR;CodeGenerator;0;0
supportsMergingGuards;supportsMergingGuards();1;OMR;CodeGenerator;0;0
supportsMethodEntryPadding;supportsMethodEntryPadding();1;OMR;CodeGenerator;0;0
supportsNativeLongOperations;supportsNativeLongOperations();1;OMR;CodeGenerator;0;0
supportsNegativeFusedMultiplyAdd;supportsNegativeFusedMultiplyAdd();1;OMR;CodeGenerator;0;0
supportsOnDemandLiteralPool;supportsOnDemandLiteralPool();1;OMR;CodeGenerator;0;0
supportsPassThroughCopyToNewVirtualRegister;supportsPassThroughCopyToNewVirtualRegister();1;OMR;CodeGenerator;0;0
supportsSinglePrecisionSQRT;supportsSinglePrecisionSQRT();1;OMR;CodeGenerator;0;0
supportsStaticMemoryRematerialization;supportsStaticMemoryRematerialization();1;OMR::X86;CodeGenerator;0;0
supportsTrapsInTMRegion;supportsTrapsInTMRegion();1;OMR;CodeGenerator;0;0
supportsUnneededLabelRemoval;supportsUnneededLabelRemoval();1;OMR;CodeGenerator;0;0
supportsXMMRRematerialization;supportsXMMRRematerialization();1;OMR::X86;CodeGenerator;0;0
supportsZonedDFPConversions;supportsZonedDFPConversions();1;OMR;CodeGenerator;0;0
suppressInliningOfRecognizedMethod;suppressInliningOfRecognizedMethod(TR::RecognizedMethod);1;OMR;CodeGenerator;0;0
symRefTab;symRefTab();1;OMR;CodeGenerator;0;0
syncCode;syncCode(uint8_t *,uint32_t);1;OMR;CodeGenerator;0;0
targetSupportsSoftwarePrefetches;targetSupportsSoftwarePrefetches();1;OMR::X86;CodeGenerator;0;0
terseSimulateTreeEvaluation;terseSimulateTreeEvaluation();1;OMR;CodeGenerator;0;0
testAnyRegisterAssignmentFlags;testAnyRegisterAssignmentFlags(enum TR_RegisterAssignmentFlagBits);1;OMR;CodeGenerator;0;0
toggleIsInOOLSection;toggleIsInOOLSection();1;OMR;CodeGenerator;0;0
trHeapMemory;trHeapMemory();1;OMR;CodeGenerator;0;0
trMemory;trMemory();1;OMR;CodeGenerator;0;0
trPersistentMemory;trPersistentMemory();1;OMR;CodeGenerator;0;0
trStackMemory;trStackMemory();1;OMR;CodeGenerator;0;0
traceBCDCodeGen;traceBCDCodeGen();1;OMR;CodeGenerator;0;0
traceBCDEntry;traceBCDEntry(char *,TR::Node *);1;OMR;CodeGenerator;0;0
traceBCDExit;traceBCDExit(char *,TR::Node *);1;OMR;CodeGenerator;0;0
tracePostRAInstruction;tracePostRAInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
tracePreRAInstruction;tracePreRAInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
traceRAInstruction;traceRAInstruction(TR::Instruction *);1;OMR;CodeGenerator;0;0
traceRegAssigned;traceRegAssigned(TR::Register *,TR::Register *);1;OMR;CodeGenerator;0;0
traceRegAssigned;traceRegAssigned(TR::Register *,TR::Register *,TR_RegisterAssignmentFlags);0;OMR;CodeGenerator;0;0
traceRegFreed;traceRegFreed(TR::Register *,TR::Register *);1;OMR;CodeGenerator;0;0
traceRegInterference;traceRegInterference(TR::Register *,TR::Register *,int32_t);1;OMR;CodeGenerator;0;0
traceRegWeight;traceRegWeight(TR::Register *,uint32_t);1;OMR;CodeGenerator;0;0
traceRegisterAssignment;traceRegisterAssignment(const char *);1;OMR;CodeGenerator;0;0
traceSimulateTreeEvaluation;traceSimulateTreeEvaluation();1;OMR;CodeGenerator;0;0
trackingInMemoryKilledLoads;trackingInMemoryKilledLoads();1;OMR;CodeGenerator;0;0
treeContainsCall;treeContainsCall(TR::TreeTop *);1;OMR;CodeGenerator;0;0
uncommonCallConstNodes;uncommonCallConstNodes();1;OMR;CodeGenerator;0;0
uniqueAddressOccurrence;uniqueAddressOccurrence(TR::Node *,TR::Node *,_Bool);1;OMR;CodeGenerator;0;0
unlockFreeSpillList;unlockFreeSpillList();1;OMR;CodeGenerator;0;0
updateSnippetMapWithRSD;updateSnippetMapWithRSD(TR::Instruction *,int32_t);1;OMR;CodeGenerator;0;0
use64BitRegsOn32Bit;use64BitRegsOn32Bit();1;OMR;CodeGenerator;0;0
useClobberEvaluate;useClobberEvaluate();1;OMR;CodeGenerator;0;0
useGPRsForWin32CTMConversion;useGPRsForWin32CTMConversion();1;OMR::X86;CodeGenerator;0;0
useLongDivideHelperForWin32CTMConversion;useLongDivideHelperForWin32CTMConversion();1;OMR::X86;CodeGenerator;0;0
useOldArrayTranslateMinimumNumberOfIterations;useOldArrayTranslateMinimumNumberOfIterations();1;OMR;CodeGenerator;0;0
useSSEFor;useSSEFor(TR::DataType);1;OMR::X86;CodeGenerator;0;0
useSSEForDoublePrecision;useSSEForDoublePrecision();1;OMR::X86;CodeGenerator;0;0
useSSEForSingleAndDoublePrecision;useSSEForSingleAndDoublePrecision();1;OMR::X86;CodeGenerator;0;0
useSSEForSinglePrecision;useSSEForSinglePrecision();1;OMR::X86;CodeGenerator;0;0
usesImplicit64BitGPRs;usesImplicit64BitGPRs(TR::Node *);1;OMR;CodeGenerator;0;0
usesRegisterMaps;usesRegisterMaps();1;OMR;CodeGenerator;0;0
usesRegisterPairsForLongs;usesRegisterPairsForLongs();1;OMR;CodeGenerator;0;0
vfpResetInstruction;vfpResetInstruction();1;OMR::X86;CodeGenerator;0;0
vfpState;vfpState();1;OMR::X86;CodeGenerator;0;0
vrfCount;vrfCount(TR::DataType);1;OMR;CodeGenerator;0;0
wantToPatchClassPointer;wantToPatchClassPointer(const class TR_OpaqueClassBlock *,const uint8_t *);1;OMR;CodeGenerator;0;0
wantToPatchClassPointer;wantToPatchClassPointer(const class TR_OpaqueClassBlock *,const TR::Node *);0;OMR;CodeGenerator;0;0
whichChildToEvaluate;whichChildToEvaluate(TR::Node *);1;OMR;CodeGenerator;0;0
whichNodeToEvaluate;whichNodeToEvaluate(TR::Node *,TR::Node *);1;OMR;CodeGenerator;0;0
willBeEvaluatedAsCallByCodeGen;willBeEvaluatedAsCallByCodeGen(TR::Node *,TR::Compilation *);1;OMR;CodeGenerator;0;1
yankIndexScalingOp;yankIndexScalingOp();1;OMR;CodeGenerator;0;0
zeroOutAutoOnEdge;zeroOutAutoOnEdge(TR::SymbolReference *,TR::Block *,TR::Block *,TR::list<TR::Block *> *,TR_ScratchList<TR::Node> *);1;OMR;CodeGenerator;0;0
~CodeGenerator;~CodeGenerator();1;OMR;CodeGenerator;1;0
AddCopyPropagationRematerializationCandidate;AddCopyPropagationRematerializationCandidate(TR::SymbolReference *);1;OMR;Compilation;0;0
Compilation;Compilation(class OMR::Compilation &);1;OMR;Compilation;1;0
Compilation;Compilation(int32_t,OMR_VMThread *,class TR_FrontEnd *,class TR_ResolvedMethod *,TR::IlGenRequest &,TR::Options &,TR::Region &,class TR_Memory *,class TR_OptimizationPlan *);0;OMR;Compilation;0;0
IsCopyPropagationRematerializationCandidate;IsCopyPropagationRematerializationCandidate(TR::SymbolReference *);1;OMR;Compilation;0;0
RemoveCopyPropagationRematerializationCandidate;RemoveCopyPropagationRematerializationCandidate(TR::SymbolReference *);1;OMR;Compilation;0;0
addGenILSym;addGenILSym(TR::ResolvedMethodSymbol *);1;OMR;Compilation;0;0
addOwningMethod;addOwningMethod(TR::ResolvedMethodSymbol *);1;OMR;Compilation;0;0
addPeekingArgInfo;addPeekingArgInfo(struct TR_PeekingArgInfo *);1;OMR;Compilation;0;0
addVirtualGuard;addVirtualGuard(class TR_VirtualGuard *);1;OMR;Compilation;0;0
adhocRandom;adhocRandom();1;OMR;Compilation;0;0
adjustInlineDepth;adjustInlineDepth(TR_ByteCodeInfo &);1;OMR;Compilation;0;0
aliasRegion;aliasRegion();1;OMR;Compilation;0;0
allocateAtThisOptLevel;allocateAtThisOptLevel();1;OMR;Compilation;0;0
allocator;allocator(const char *);1;OMR;Compilation;0;0
allowRecompilation;allowRecompilation();1;OMR;Compilation;0;0
areSlotsSharedByRefAndNonRef;areSlotsSharedByRefAndNonRef();1;OMR;Compilation;0;0
arenaAllocator;arenaAllocator();1;OMR;Compilation;0;0
canAffordOSRControlFlow;canAffordOSRControlFlow();1;OMR;Compilation;0;0
canTransformUnsafeCopyToArrayCopy;canTransformUnsafeCopyToArrayCopy();1;OMR;Compilation;0;0
canTransformUnsafeSetMemory;canTransformUnsafeSetMemory();1;OMR;Compilation;0;0
cannotAttemptOSRDuring;cannotAttemptOSRDuring(uint32_t);1;OMR;Compilation;0;0
cg;cg();1;OMR;Compilation;0;0
compilationShouldBeInterrupted;compilationShouldBeInterrupted(enum TR_CallingContext);1;OMR;Compilation;0;0
compile;compile();1;OMR;Compilation;0;0
compileRelocatableCode;compileRelocatableCode();1;OMR;Compilation;0;0
containsBigDecimalLoad;containsBigDecimalLoad();1;OMR;Compilation;0;0
convertNonDeterministicInput;convertNonDeterministicInput(int32_t,int32_t,class TR_RandomGenerator *,int32_t,_Bool);1;OMR;Compilation;0;0
couldBeRecompiled;couldBeRecompiled();1;OMR;Compilation;0;0
createAOTGuard;createAOTGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *,enum TR_VirtualGuardKind);1;OMR;Compilation;0;0
createAOTInliningGuard;createAOTInliningGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *,enum TR_VirtualGuardKind);1;OMR;Compilation;0;0
createDevirtualizedCall;createDevirtualizedCall(TR::Node *,class TR_OpaqueClassBlock *);1;OMR;Compilation;0;0
createDummyGuard;createDummyGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *);1;OMR;Compilation;0;0
createDummyOrSideEffectGuard;createDummyOrSideEffectGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *);1;OMR;Compilation;0;0
createJittedMethodSymbol;createJittedMethodSymbol(class TR_ResolvedMethod *);1;OMR;Compilation;0;0
createSideEffectGuard;createSideEffectGuard(TR::Compilation *,TR::Node *,TR::TreeTop *);1;OMR;Compilation;0;0
decInlineDepth;decInlineDepth(_Bool);1;OMR;Compilation;0;0
diagnosticImpl;diagnosticImpl(const char *);1;OMR;Compilation;0;0
diagnosticImplVA;diagnosticImplVA(const char *,va_list);1;OMR;Compilation;0;0
dumpFlowGraph;dumpFlowGraph(TR::CFG *);1;OMR;Compilation;0;0
dumpMethodGraph;dumpMethodGraph(int,TR::ResolvedMethodSymbol *);1;OMR;Compilation;0;0
dumpMethodTrees;dumpMethodTrees(char *,TR::ResolvedMethodSymbol *);1;OMR;Compilation;0;0
dumpMethodTrees;dumpMethodTrees(char *,const char *,TR::ResolvedMethodSymbol *);0;OMR;Compilation;0;0
externalName;externalName();1;OMR;Compilation;0;0
fe;fe();1;OMR;Compilation;0;0
findDevirtualizedCall;findDevirtualizedCall(TR::Node *);1;OMR;Compilation;0;0
findExtraPrefetchInfo;findExtraPrefetchInfo(TR::Node *,_Bool);1;OMR;Compilation;0;0
findLastTree;findLastTree();1;OMR;Compilation;0;0
findOrCreateDebug;findOrCreateDebug();1;OMR;Compilation;0;0
findOrCreateDevirtualizedCall;findOrCreateDevirtualizedCall(TR::Node *,class TR_OpaqueClassBlock *);1;OMR;Compilation;0;0
findPrefetchInfo;findPrefetchInfo(TR::Node *);1;OMR;Compilation;0;0
findVirtualGuardInfo;findVirtualGuardInfo(TR::Node *);1;OMR;Compilation;0;0
foundOnTheStack;foundOnTheStack(class TR_ResolvedMethod *,int32_t);1;OMR;Compilation;0;0
freeKnownObjectTable;freeKnownObjectTable();1;OMR;Compilation;0;0
generateAccurateNodeCount;generateAccurateNodeCount();1;OMR;Compilation;0;0
generateArraylets;generateArraylets();1;OMR;Compilation;0;0
getAccurateNodeCount;getAccurateNodeCount();1;OMR;Compilation;0;0
getAddressEnumerationOption;getAddressEnumerationOption(enum TR_CompilationOptions);1;OMR;Compilation;0;0
getAotMethodCodeStart;getAotMethodCodeStart();1;OMR;Compilation;0;0
getBitVectorPool;getBitVectorPool();1;OMR;Compilation;0;0
getCheckcastNullChkInfo;getCheckcastNullChkInfo();1;OMR;Compilation;0;0
getClassesThatShouldNotBeLoaded;getClassesThatShouldNotBeLoaded();1;OMR;Compilation;0;0
getClassesThatShouldNotBeNewlyExtended;getClassesThatShouldNotBeNewlyExtended();1;OMR;Compilation;0;0
getCodeCacheSwitched;getCodeCacheSwitched();1;OMR;Compilation;0;0
getCompThreadID;getCompThreadID();1;OMR;Compilation;0;0
getCpuTimeSpentInCompilation;getCpuTimeSpentInCompilation();1;OMR;Compilation;0;0
getCurrentBlock;getCurrentBlock();1;OMR;Compilation;0;0
getCurrentCodeCache;getCurrentCodeCache();1;OMR;Compilation;0;0
getCurrentIlGenerator;getCurrentIlGenerator();1;OMR;Compilation;0;0
getCurrentInlinedCallArgInfo;getCurrentInlinedCallArgInfo();1;OMR;Compilation;0;0
getCurrentInlinedCallSite;getCurrentInlinedCallSite();1;OMR;Compilation;0;0
getCurrentInlinedSiteIndex;getCurrentInlinedSiteIndex();1;OMR;Compilation;0;0
getCurrentMethod;getCurrentMethod();1;OMR;Compilation;0;0
getCurrentPeekingArgInfo;getCurrentPeekingArgInfo();1;OMR;Compilation;0;0
getCurrentSymRefTab;getCurrentSymRefTab();1;OMR;Compilation;0;0
getDebug;getDebug();1;OMR;Compilation;0;0
getErrorCode;getErrorCode();1;OMR;Compilation;0;0
getExtraPrefetchInfo;getExtraPrefetchInfo();1;OMR;Compilation;0;0
getFailCHTableCommit;getFailCHTableCommit();1;OMR;Compilation;0;0
getFirstDevirtualizedCall;getFirstDevirtualizedCall();1;OMR;Compilation;0;0
getFlowGraph;getFlowGraph();1;OMR;Compilation;0;0
getGPUBlockDimX;getGPUBlockDimX();1;OMR;Compilation;0;0
getGPUKernelLineNumberList;getGPUKernelLineNumberList();1;OMR;Compilation;0;0
getGPUParms;getGPUParms();1;OMR;Compilation;0;0
getGPUPtxCount;getGPUPtxCount();1;OMR;Compilation;0;0
getGPUPtxList;getGPUPtxList();1;OMR;Compilation;0;0
getGlobalRegisterCandidates;getGlobalRegisterCandidates();1;OMR;Compilation;0;0
getHCRMode;getHCRMode();1;OMR;Compilation;0;0
getHasMethodHandleInvoke;getHasMethodHandleInvoke();1;OMR;Compilation;0;0
getHotnessName;getHotnessName();1;OMR;Compilation;0;0
getHotnessName;getHotnessName(enum TR_Hotness);0;OMR;Compilation;0;0
getILValidator;getILValidator();1;OMR;Compilation;0;0
getInlineDepth;getInlineDepth();1;OMR;Compilation;0;0
getInlinedCallArgInfoStack;getInlinedCallArgInfoStack();1;OMR;Compilation;0;0
getInlinedCallSite;getInlinedCallSite(uint32_t);1;OMR;Compilation;0;0
getInlinedCallStack;getInlinedCallStack();1;OMR;Compilation;0;0
getInlinedCallerSymRef;getInlinedCallerSymRef(uint32_t);1;OMR;Compilation;0;0
getInlinedCalls;getInlinedCalls();1;OMR;Compilation;0;0
getInlinedResolvedMethod;getInlinedResolvedMethod(uint32_t);1;OMR;Compilation;0;0
getInlinedResolvedMethodSymbol;getInlinedResolvedMethodSymbol(uint32_t);1;OMR;Compilation;0;0
getJittedMethodSymbol;getJittedMethodSymbol();1;OMR;Compilation;0;0
getKnownObjectTable;getKnownObjectTable();1;OMR;Compilation;0;0
getLastBegunOptIndex;getLastBegunOptIndex();1;OMR;Compilation;0;0
getLastPerformedOptIndex;getLastPerformedOptIndex();1;OMR;Compilation;0;0
getLastPerformedOptSubIndex;getLastPerformedOptSubIndex();1;OMR;Compilation;0;0
getLineNumber;getLineNumber(TR::Node *);1;OMR;Compilation;0;0
getLineNumberInCurrentMethod;getLineNumberInCurrentMethod(TR::Node *);1;OMR;Compilation;0;0
getLoopWasVersionedWrtAsyncChecks;getLoopWasVersionedWrtAsyncChecks();1;OMR;Compilation;0;0
getMaxAliasIndex;getMaxAliasIndex();1;OMR;Compilation;0;0
getMaxInlineDepth;getMaxInlineDepth();1;OMR;Compilation;0;0
getMaxPeekedBytecodeSize;getMaxPeekedBytecodeSize();1;OMR;Compilation;0;0
getMethodFromNode;getMethodFromNode(TR::Node *);1;OMR;Compilation;0;0
getMethodHotness;getMethodHotness();1;OMR;Compilation;0;0
getMethodSnippetsToBePatchedOnClassUnload;getMethodSnippetsToBePatchedOnClassUnload();1;OMR;Compilation;0;0
getMethodSymbol;getMethodSymbol();1;OMR;Compilation;0;0
getNextOptLevel;getNextOptLevel();1;OMR;Compilation;0;0
getNodeCount;getNodeCount();1;OMR;Compilation;0;0
getNodeOpCodeLength;getNodeOpCodeLength();1;OMR;Compilation;0;0
getNodePool;getNodePool();1;OMR;Compilation;0;0
getNodesThatShouldPrefetchOffset;getNodesThatShouldPrefetchOffset();1;OMR;Compilation;0;0
getNumInlinedCallSites;getNumInlinedCallSites();1;OMR;Compilation;0;0
getNumLivePendingPushSlots;getNumLivePendingPushSlots();1;OMR;Compilation;0;0
getNumLoopNestingLevels;getNumLoopNestingLevels();1;OMR;Compilation;0;0
getNumReservedIPICTrampolines;getNumReservedIPICTrampolines();1;OMR;Compilation;0;0
getOSRCallSiteRemat;getOSRCallSiteRemat(uint32_t,uint32_t,TR::SymbolReference *&,TR::SymbolReference *&);1;OMR;Compilation;0;0
getOSRCallSiteRematSize;getOSRCallSiteRematSize(uint32_t);1;OMR;Compilation;0;0
getOSRCompilationData;getOSRCompilationData();1;OMR;Compilation;0;0
getOSRInductionOffset;getOSRInductionOffset(TR::Node *);1;OMR;Compilation;0;0
getOSRMode;getOSRMode();1;OMR;Compilation;0;0
getOSRTransitionTarget;getOSRTransitionTarget();1;OMR;Compilation;0;0
getOptIndex;getOptIndex();1;OMR;Compilation;0;0
getOptLevel;getOptLevel();1;OMR;Compilation;0;0
getOptSubIndex;getOptSubIndex();1;OMR;Compilation;0;0
getOptimizationPlan;getOptimizationPlan();1;OMR;Compilation;0;0
getOptimizer;getOptimizer();1;OMR;Compilation;0;0
getOption;getOption(enum TR_CompilationOptions);1;OMR;Compilation;0;0
getOptions;getOptions();1;OMR;Compilation;0;0
getOrCreateKnownObjectTable;getOrCreateKnownObjectTable();1;OMR;Compilation;0;0
getOutFile;getOutFile();1;OMR;Compilation;0;0
getOwningMethodSymbol;getOwningMethodSymbol(class TR_OpaqueMethodBlock *);1;OMR;Compilation;0;0
getOwningMethodSymbol;getOwningMethodSymbol(class TR_ResolvedMethod *);0;OMR;Compilation;0;0
getOwningMethodSymbol;getOwningMethodSymbol(class mcount_t);0;OMR;Compilation;0;0
getPeekingArgInfo;getPeekingArgInfo();1;OMR;Compilation;0;0
getPeekingSymRefTab;getPeekingSymRefTab();1;OMR;Compilation;0;0
getPersistentInfo;getPersistentInfo();1;OMR;Compilation;0;0
getPrevSymRefTabSize;getPrevSymRefTabSize();1;OMR;Compilation;0;0
getProfilingMode;getProfilingMode();1;OMR;Compilation;0;0
getRecompilationInfo;getRecompilationInfo();1;OMR;Compilation;0;0
getResolvedMethodSymbolReference;getResolvedMethodSymbolReference(class mcount_t);1;OMR;Compilation;0;0
getReturnInfo;getReturnInfo();1;OMR;Compilation;0;0
getScratchSpaceLimit;getScratchSpaceLimit();1;OMR;Compilation;0;0
getSnippetsToBePatchedOnClassRedefinition;getSnippetsToBePatchedOnClassRedefinition();1;OMR;Compilation;0;0
getSnippetsToBePatchedOnClassUnload;getSnippetsToBePatchedOnClassUnload();1;OMR;Compilation;0;0
getSnippetsToBePatchedOnRegisterNative;getSnippetsToBePatchedOnRegisterNative();1;OMR;Compilation;0;0
getStartBlock;getStartBlock();1;OMR;Compilation;0;0
getStartTree;getStartTree();1;OMR;Compilation;0;0
getStaticHCRPICSites;getStaticHCRPICSites();1;OMR;Compilation;0;0
getStaticMethodPICSites;getStaticMethodPICSites();1;OMR;Compilation;0;0
getStaticPICSites;getStaticPICSites();1;OMR;Compilation;0;0
getSymRefCount;getSymRefCount();1;OMR;Compilation;0;0
getSymRefTab;getSymRefTab();1;OMR;Compilation;0;0
getSymbolReferenceByReferenceNumber;getSymbolReferenceByReferenceNumber(int32_t);1;OMR;Compilation;0;0
getToCommentMap;getToCommentMap();1;OMR;Compilation;0;0
getToNumberMap;getToNumberMap();1;OMR;Compilation;0;0
getToStringMap;getToStringMap();1;OMR;Compilation;0;0
getUsesBlockFrequencyInGRA;getUsesBlockFrequencyInGRA();1;OMR;Compilation;0;0
getVerboseOptTransformationCount;getVerboseOptTransformationCount();1;OMR;Compilation;0;0
getVirtualGuards;getVirtualGuards();1;OMR;Compilation;0;0
getVisitCount;getVisitCount();1;OMR;Compilation;0;0
hasBlockFrequencyInfo;hasBlockFrequencyInfo();1;OMR;Compilation;0;0
hasClassExtendAssumptions;hasClassExtendAssumptions();1;OMR;Compilation;0;0
hasClassPreInitializeAssumptions;hasClassPreInitializeAssumptions();1;OMR;Compilation;0;0
hasClassRedefinitionAssumptions;hasClassRedefinitionAssumptions();1;OMR;Compilation;0;0
hasClassUnloadAssumptions;hasClassUnloadAssumptions();1;OMR;Compilation;0;0
hasColdBlocks;hasColdBlocks();1;OMR;Compilation;0;0
hasLargeNumberOfLoops;hasLargeNumberOfLoops();1;OMR;Compilation;0;0
hasMethodOverrideAssumptions;hasMethodOverrideAssumptions();1;OMR;Compilation;0;0
hasNativeCall;hasNativeCall();1;OMR;Compilation;0;0
hasNews;hasNews();1;OMR;Compilation;0;0
hasUnsafeSymbol;hasUnsafeSymbol();1;OMR;Compilation;0;0
haveCommittedCallSiteInfo;haveCommittedCallSiteInfo();1;OMR;Compilation;0;0
ilGenRequest;ilGenRequest();1;OMR;Compilation;0;0
ilGenTrace;ilGenTrace();1;OMR;Compilation;0;0
incGPUPtxCount;incGPUPtxCount();1;OMR;Compilation;0;0
incInlineDepth;incInlineDepth(class TR_OpaqueMethodBlock *,TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *);1;OMR;Compilation;0;0
incInlineDepth;incInlineDepth(TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,int32_t,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *);0;OMR;Compilation;0;0
incInlinedCalls;incInlinedCalls();1;OMR;Compilation;0;0
incNumLivePendingPushSlots;incNumLivePendingPushSlots(int32_t);1;OMR;Compilation;0;0
incNumLoopNestingLevels;incNumLoopNestingLevels(int32_t);1;OMR;Compilation;0;0
incOptIndex;incOptIndex();1;OMR;Compilation;0;0
incOptSubIndex;incOptSubIndex();1;OMR;Compilation;0;0
incOrResetVisitCount;incOrResetVisitCount();1;OMR;Compilation;0;0
incVerboseOptTransformationCount;incVerboseOptTransformationCount(int32_t);1;OMR;Compilation;0;0
incVisitCount;incVisitCount();1;OMR;Compilation;0;0
incrNodeOpCodeLength;incrNodeOpCodeLength(int32_t);1;OMR;Compilation;0;0
invalidateAliasRegion;invalidateAliasRegion();1;OMR;Compilation;0;0
isCpuExpensiveCompilation;isCpuExpensiveCompilation(int64_t);1;OMR;Compilation;0;0
isDLT;isDLT();1;OMR;Compilation;0;0
isDisabled;isDisabled(OMR::Optimizations);1;OMR;Compilation;0;0
isGPUCompilation;isGPUCompilation();1;OMR;Compilation;0;0
isGPUCompileCPUCode;isGPUCompileCPUCode();1;OMR;Compilation;0;0
isInlinedDirectCall;isInlinedDirectCall(uint32_t);1;OMR;Compilation;0;0
isJProfilingCompilation;isJProfilingCompilation();1;OMR;Compilation;0;0
isLoopTransferDone;isLoopTransferDone();1;OMR;Compilation;0;0
isOSRTransitionTarget;isOSRTransitionTarget(TR::OSRTransitionTarget);1;OMR;Compilation;0;0
isOptServer;isOptServer();1;OMR;Compilation;0;0
isOutermostMethod;isOutermostMethod();1;OMR;Compilation;0;0
isPICSite;isPICSite(TR::Instruction *);1;OMR;Compilation;0;0
isPeekingMethod;isPeekingMethod();1;OMR;Compilation;0;0
isPotentialOSRPoint;isPotentialOSRPoint(TR::Node *,TR::Node **,_Bool);1;OMR;Compilation;0;0
isPotentialOSRPointWithSupport;isPotentialOSRPointWithSupport(TR::TreeTop *);1;OMR;Compilation;0;0
isProfilingCompilation;isProfilingCompilation();1;OMR;Compilation;0;0
isRecompilationEnabled;isRecompilationEnabled();1;OMR;Compilation;0;0
isServerInlining;isServerInlining();1;OMR;Compilation;0;0
isShortRunningMethod;isShortRunningMethod(int32_t);1;OMR;Compilation;0;0
isVirtualGuardNOPingRequired;isVirtualGuardNOPingRequired(class TR_VirtualGuard *);1;OMR;Compilation;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Compilation;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Compilation;0;0
matchingCallStackPrefixLength;matchingCallStackPrefixLength(TR_ByteCodeInfo &);1;OMR;Compilation;0;0
maxInternalPointers;maxInternalPointers();1;OMR;Compilation;0;0
mayHaveLoops;mayHaveLoops();1;OMR;Compilation;0;0
mustNotBeRecompiled;mustNotBeRecompiled();1;OMR;Compilation;0;0
notYetRunMeansCold;notYetRunMeansCold();1;OMR;Compilation;0;0
omrVMThread;omrVMThread();1;OMR;Compilation;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;Compilation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Compilation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Compilation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Compilation;0;0
operator delete;operator delete(void *,size_t);0;OMR;Compilation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Compilation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Compilation;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Compilation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Compilation;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;Compilation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Compilation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Compilation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Compilation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Compilation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Compilation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Compilation;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Compilation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Compilation;0;0
osrInfrastructureRemoved;osrInfrastructureRemoved();1;OMR;Compilation;0;0
osrStateIsReliable;osrStateIsReliable();1;OMR;Compilation;0;0
penalizePredsOfOSRCatchBlocksInGRA;penalizePredsOfOSRCatchBlocksInGRA();1;OMR;Compilation;0;0
pendingPushLivenessDuringIlgen;pendingPushLivenessDuringIlgen();1;OMR;Compilation;0;0
performOptimizations;performOptimizations();1;OMR;Compilation;0;0
performVirtualGuardNOPing;performVirtualGuardNOPing();1;OMR;Compilation;0;0
phaseMemProfiler;phaseMemProfiler();1;OMR;Compilation;0;0
phaseTimer;phaseTimer();1;OMR;Compilation;0;0
primaryRandom;primaryRandom();1;OMR;Compilation;0;0
recordBegunOpt;recordBegunOpt();1;OMR;Compilation;0;0
recordPerformedOptTransformation;recordPerformedOptTransformation();1;OMR;Compilation;0;0
region;region();1;OMR;Compilation;0;0
registerResolvedMethodSymbolReference;registerResolvedMethodSymbolReference(TR::SymbolReference *);1;OMR;Compilation;0;0
removeExtraPrefetchInfo;removeExtraPrefetchInfo(TR::Node *);1;OMR;Compilation;0;0
removePeekingArgInfo;removePeekingArgInfo();1;OMR;Compilation;0;0
removeVirtualGuard;removeVirtualGuard(class TR_VirtualGuard *);1;OMR;Compilation;0;0
reportAnalysisPhase;reportAnalysisPhase(uint8_t);1;OMR;Compilation;0;0
reportFailure;reportFailure(const char *);1;OMR;Compilation;0;0
reportILGeneratorPhase;reportILGeneratorPhase();1;OMR;Compilation;0;0
reportOptimizationPhase;reportOptimizationPhase(OMR::Optimizations);1;OMR;Compilation;0;0
reportOptimizationPhaseForSnap;reportOptimizationPhaseForSnap(OMR::Optimizations);1;OMR;Compilation;0;0
requiresAnalysisOSRPoint;requiresAnalysisOSRPoint(TR::Node *);1;OMR;Compilation;0;0
requiresSpineChecks;requiresSpineChecks();1;OMR;Compilation;0;0
resetInlineDepth;resetInlineDepth();1;OMR;Compilation;0;0
resetVisitCounts;resetVisitCounts(vcount_t);1;OMR;Compilation;0;0
resetVisitCounts;resetVisitCounts(vcount_t,TR::TreeTop *);0;OMR;Compilation;0;0
resetVisitCounts;resetVisitCounts(vcount_t,TR::ResolvedMethodSymbol *);0;OMR;Compilation;0;0
restoreCompilationPhase;restoreCompilationPhase(CompilationPhase);1;OMR;Compilation;0;0
restoreInlineDepth;restoreInlineDepth(TR_ByteCodeInfo &);1;OMR;Compilation;0;0
restoreInlineDepthUntil;restoreInlineDepthUntil(int32_t,TR_ByteCodeInfo &);1;OMR;Compilation;0;0
saveCompilationPhase;saveCompilationPhase();1;OMR;Compilation;0;0
self;self();1;OMR;Compilation;0;0
setAllocatorName;setAllocatorName(const char *);1;OMR;Compilation;0;0
setAotMethodCodeStart;setAotMethodCodeStart(void *);1;OMR;Compilation;0;0
setCanAffordOSRControlFlow;setCanAffordOSRControlFlow(_Bool);1;OMR;Compilation;0;0
setCannotAttemptOSRDuring;setCannotAttemptOSRDuring(uint32_t,_Bool);1;OMR;Compilation;0;0
setCommittedCallSiteInfo;setCommittedCallSiteInfo(_Bool);1;OMR;Compilation;0;0
setContainsBigDecimalLoad;setContainsBigDecimalLoad(_Bool);1;OMR;Compilation;0;0
setCurrentBlock;setCurrentBlock(TR::Block *);1;OMR;Compilation;0;0
setCurrentCodeCache;setCurrentCodeCache(TR::CodeCache *);1;OMR;Compilation;0;0
setCurrentIlGenerator;setCurrentIlGenerator(class TR_IlGenerator *);1;OMR;Compilation;0;0
setCurrentSymRefTab;setCurrentSymRefTab(TR::SymbolReferenceTable *);1;OMR;Compilation;0;0
setDebug;setDebug(class TR_Debug *);1;OMR;Compilation;0;0
setErrorCode;setErrorCode(int32_t);1;OMR;Compilation;0;0
setFailCHTableCommit;setFailCHTableCommit(_Bool);1;OMR;Compilation;0;0
setGPUBlockDimX;setGPUBlockDimX(int32_t);1;OMR;Compilation;0;0
setGPUParms;setGPUParms(void *);1;OMR;Compilation;0;0
setGlobalRegisterCandidates;setGlobalRegisterCandidates(class TR_RegisterCandidates *);1;OMR;Compilation;0;0
setHasClassExtendAssumptions;setHasClassExtendAssumptions(_Bool);1;OMR;Compilation;0;0
setHasClassPreInitializeAssumptions;setHasClassPreInitializeAssumptions(_Bool);1;OMR;Compilation;0;0
setHasClassRedefinitionAssumptions;setHasClassRedefinitionAssumptions(_Bool);1;OMR;Compilation;0;0
setHasClassUnloadAssumptions;setHasClassUnloadAssumptions(_Bool);1;OMR;Compilation;0;0
setHasColdBlocks;setHasColdBlocks();1;OMR;Compilation;0;0
setHasMethodHandleInvoke;setHasMethodHandleInvoke();1;OMR;Compilation;0;0
setHasMethodOverrideAssumptions;setHasMethodOverrideAssumptions(_Bool);1;OMR;Compilation;0;0
setHasNativeCall;setHasNativeCall();1;OMR;Compilation;0;0
setHasUnsafeSymbol;setHasUnsafeSymbol();1;OMR;Compilation;0;0
setILValidator;setILValidator(TR::ILValidator *);1;OMR;Compilation;0;0
setIlVerifier;setIlVerifier(TR::IlVerifier *);1;OMR;Compilation;0;0
setLoopTransferDone;setLoopTransferDone();1;OMR;Compilation;0;0
setLoopWasVersionedWrtAsyncChecks;setLoopWasVersionedWrtAsyncChecks(_Bool);1;OMR;Compilation;0;0
setNextOptLevel;setNextOptLevel(enum TR_Hotness);1;OMR;Compilation;0;0
setNodeOpCodeLength;setNodeOpCodeLength(int32_t);1;OMR;Compilation;0;0
setNumReservedIPICTrampolines;setNumReservedIPICTrampolines(int32_t);1;OMR;Compilation;0;0
setOSRCallSiteRemat;setOSRCallSiteRemat(uint32_t,TR::SymbolReference *,TR::SymbolReference *);1;OMR;Compilation;0;0
setOSRInfrastructureRemoved;setOSRInfrastructureRemoved(_Bool);1;OMR;Compilation;0;0
setOptIndex;setOptIndex(int16_t);1;OMR;Compilation;0;0
setOptimizationPlan;setOptimizationPlan(class TR_OptimizationPlan *);1;OMR;Compilation;0;0
setOptimizer;setOptimizer(TR::Optimizer *);1;OMR;Compilation;0;0
setOption;setOption(enum TR_CompilationOptions);1;OMR;Compilation;0;0
setOsrStateIsReliable;setOsrStateIsReliable(_Bool);1;OMR;Compilation;0;0
setOutFile;setOutFile(TR::FILE *);1;OMR;Compilation;0;0
setPeekingSymRefTab;setPeekingSymRefTab(TR::SymbolReferenceTable *);1;OMR;Compilation;0;0
setPrevSymRefTabSize;setPrevSymRefTabSize(int32_t);1;OMR;Compilation;0;0
setRecompilationInfo;setRecompilationInfo(TR::Recompilation *);1;OMR;Compilation;0;0
setReturnInfo;setReturnInfo(enum TR_ReturnInfo);1;OMR;Compilation;0;0
setScratchSpaceLimit;setScratchSpaceLimit(size_t);1;OMR;Compilation;0;0
setSeenClassPreventingInducedOSR;setSeenClassPreventingInducedOSR();1;OMR;Compilation;0;0
setSlotsSharedByRefAndNonRef;setSlotsSharedByRefAndNonRef(_Bool);1;OMR;Compilation;0;0
setStartTree;setStartTree(TR::TreeTop *);1;OMR;Compilation;0;0
setSupressEarlyInlining;setSupressEarlyInlining(_Bool);1;OMR;Compilation;0;0
setSyncsMarked;setSyncsMarked();1;OMR;Compilation;0;0
setUseLongRegAllocation;setUseLongRegAllocation(_Bool);1;OMR;Compilation;0;0
setUsesBlockFrequencyInGRA;setUsesBlockFrequencyInGRA();1;OMR;Compilation;0;0
setUsesPreexistence;setUsesPreexistence(_Bool);1;OMR;Compilation;0;0
setVisitCount;setVisitCount(vcount_t);1;OMR;Compilation;0;0
shouldBeRecompiled;shouldBeRecompiled();1;OMR;Compilation;0;0
shutdown;shutdown(class TR_FrontEnd *);1;OMR;Compilation;0;0
signature;signature();1;OMR;Compilation;0;0
supportsInduceOSR;supportsInduceOSR();1;OMR;Compilation;0;0
suppressAllocationInlining;suppressAllocationInlining();1;OMR;Compilation;0;0
supressEarlyInlining;supressEarlyInlining();1;OMR;Compilation;0;0
switchCodeCache;switchCodeCache(TR::CodeCache *);1;OMR;Compilation;0;0
syncsMarked;syncsMarked();1;OMR;Compilation;0;0
trHeapMemory;trHeapMemory();1;OMR;Compilation;0;0
trMemory;trMemory();1;OMR;Compilation;0;0
trPersistentMemory;trPersistentMemory();1;OMR;Compilation;0;0
trStackMemory;trStackMemory();1;OMR;Compilation;0;0
trace;trace(OMR::Optimizations);1;OMR;Compilation;0;0
useAnchors;useAnchors();1;OMR;Compilation;0;0
useCompressedPointers;useCompressedPointers();1;OMR;Compilation;0;0
useLongRegAllocation;useLongRegAllocation();1;OMR;Compilation;0;0
useRegisterMaps;useRegisterMaps();1;OMR;Compilation;0;0
usesPreexistence;usesPreexistence();1;OMR;Compilation;0;0
validateIL;validateIL(TR::ILValidationContext);1;OMR;Compilation;0;0
verifyBlocks;verifyBlocks(TR::ResolvedMethodSymbol *);1;OMR;Compilation;0;1
verifyCFG;verifyCFG(TR::ResolvedMethodSymbol *);1;OMR;Compilation;0;1
verifyTrees;verifyTrees(TR::ResolvedMethodSymbol *);1;OMR;Compilation;0;1
~Compilation;~Compilation();1;OMR;Compilation;0;0
CompilerEnv;CompilerEnv(class OMR::CompilerEnv &&);1;OMR;CompilerEnv;1;0
CompilerEnv;CompilerEnv(TR::RawAllocator,const TR::PersistentAllocatorKit &);0;OMR;CompilerEnv;0;0
CompilerEnv;CompilerEnv(const class OMR::CompilerEnv &);0;OMR;CompilerEnv;1;0
CompilerEnv;CompilerEnv(class TR::CompilerEnv &&);0;TR;CompilerEnv;1;0
initialize;initialize();1;OMR;CompilerEnv;0;0
initializeHostEnvironment;initializeHostEnvironment();1;OMR;CompilerEnv;0;0
initializeTargetEnvironment;initializeTargetEnvironment();1;OMR;CompilerEnv;0;0
isInitialized;isInitialized();1;OMR;CompilerEnv;0;0
operator=;operator=(const class OMR::CompilerEnv &);1;OMR;CompilerEnv;1;0
operator=;operator=(class OMR::CompilerEnv &&);0;OMR;CompilerEnv;1;0
operator=;operator=(class TR::CompilerEnv &&);0;TR;CompilerEnv;1;0
persistentAllocator;persistentAllocator();1;OMR;CompilerEnv;0;0
self;self();1;OMR;CompilerEnv;0;0
DataType;DataType(class OMR::DataType &&);1;OMR;DataType;1;0
DataType;DataType(TR::DataTypes);0;OMR;DataType;0;0
DataType;DataType();0;OMR;DataType;0;0
DataType;DataType(const class OMR::DataType &);0;OMR;DataType;1;0
DataType;DataType(class TR::DataType &&);0;TR;DataType;1;0
DataType;DataType(const class TR::DataType &);0;TR;DataType;1;0
canGetMaxPrecisionFromType;canGetMaxPrecisionFromType();1;OMR;DataType;0;0
getDataType;getDataType();1;OMR;DataType;0;0
getDataTypeConversion;getDataTypeConversion(TR::DataType,TR::DataType);1;OMR;DataType;0;0
getFloatTypeFromSize;getFloatTypeFromSize(int32_t);1;OMR;DataType;0;0
getIntegralTypeFromPrecision;getIntegralTypeFromPrecision(int32_t);1;OMR;DataType;0;0
getMaxPrecisionFromType;getMaxPrecisionFromType();1;OMR;DataType;0;0
getName;getName(TR::DataType);1;OMR;DataType;0;0
getPrefix;getPrefix(TR::DataType);1;OMR;DataType;0;0
getSize;getSize(TR::DataType);1;OMR;DataType;0;0
getVectorElementType;getVectorElementType();1;OMR;DataType;0;0
getVectorIntegralType;getVectorIntegralType();1;OMR;DataType;0;0
isAddress;isAddress();1;OMR;DataType;0;0
isAggregate;isAggregate();1;OMR;DataType;0;0
isBFPorHFP;isBFPorHFP();1;OMR;DataType;0;0
isDouble;isDouble();1;OMR;DataType;0;0
isFloatingPoint;isFloatingPoint();1;OMR;DataType;0;0
isInt16;isInt16();1;OMR;DataType;0;0
isInt32;isInt32();1;OMR;DataType;0;0
isInt64;isInt64();1;OMR;DataType;0;0
isInt8;isInt8();1;OMR;DataType;0;0
isIntegral;isIntegral();1;OMR;DataType;0;0
isVector;isVector();1;OMR;DataType;0;0
operator int;operator int();1;OMR;DataType;0;0
operator!=;operator!=(TR::DataTypes);1;OMR;DataType;0;0
operator!=;operator!=(const TR::DataType &);0;OMR;DataType;0;0
operator<;operator<(TR::DataTypes);1;OMR;DataType;0;0
operator<;operator<(const TR::DataType &);0;OMR;DataType;0;0
operator<=;operator<=(const TR::DataType &);1;OMR;DataType;0;0
operator<=;operator<=(TR::DataTypes);0;OMR;DataType;0;0
operator=;operator=(const class OMR::DataType &);1;OMR;DataType;1;0
operator=;operator=(class OMR::DataType &&);0;OMR;DataType;1;0
operator=;operator=(TR::DataTypes);0;OMR;DataType;0;0
operator=;operator=(const TR::DataType &);0;OMR;DataType;0;0
operator==;operator==(const TR::DataType &);1;OMR;DataType;0;0
operator==;operator==(TR::DataTypes);0;OMR;DataType;0;0
operator>;operator>(TR::DataTypes);1;OMR;DataType;0;0
operator>;operator>(const TR::DataType &);0;OMR;DataType;0;0
operator>=;operator>=(TR::DataTypes);1;OMR;DataType;0;0
operator>=;operator>=(const TR::DataType &);0;OMR;DataType;0;0
scalarToVector;scalarToVector();1;OMR;DataType;0;0
self;self();1;OMR;DataType;0;0
setSize;setSize(TR::DataType,int32_t);1;OMR;DataType;0;0
toString;toString();1;OMR;DataType;0;0
vectorToScalar;vectorToScalar();1;OMR;DataType;0;0
~DataType;~DataType();1;OMR;DataType;1;0
DebugCounter;DebugCounter(const char *,int8_t,class TR::DebugCounter *,int8_t);1;TR;DebugCounter;0;0
DebugCounterBase;DebugCounterBase(const class TR::DebugCounterBase &);1;TR;DebugCounterBase;1;0
DebugCounterBase;DebugCounterBase(class TR::DebugCounterBase &&);0;TR;DebugCounterBase;1;0
DebugCounterBase;DebugCounterBase();0;TR;DebugCounterBase;1;0
accumulate;accumulate();1;TR;DebugCounterBase;0;1
accumulate;accumulate(int64_t);0;TR;DebugCounter;0;0
contributesToDenominator;contributesToDenominator();1;TR;DebugCounter;0;0
createBumpCounterNode;createBumpCounterNode(TR::Compilation *,TR::Node *);1;TR;DebugCounterBase;0;0
debugCounterBucketName;debugCounterBucketName(TR::Compilation *,int32_t,const char *);1;TR;DebugCounter;0;0
debugCounterName;debugCounterName(TR::Compilation *,const char *);1;TR;DebugCounter;0;0
getBumpCountAddress;getBumpCountAddress();1;TR;DebugCounterBase;0;1
getBumpCountSymRef;getBumpCountSymRef(TR::Compilation *);1;TR;DebugCounterBase;0;1
getCount;getCount();1;TR;DebugCounter;0;0
getDebugCounter;getDebugCounter(TR::Compilation *,const char *,int8_t,int32_t);1;TR;DebugCounter;0;0
getDenominator;getDenominator();1;TR;DebugCounter;0;0
getFidelity;getFidelity();1;TR;DebugCounter;0;0
getInsertionCounterNames;getInsertionCounterNames(TR::Compilation *,TR::Node *,const char *(&)[3]);1;TR;DebugCounter;0;0
getName;getName();1;TR;DebugCounter;0;0
incStaticDebugCounter;incStaticDebugCounter(TR::Compilation *,const char *,int32_t);1;TR;DebugCounter;0;0
increment;increment(int64_t);1;TR;DebugCounter;0;0
isDenominator;isDenominator();1;TR;DebugCounter;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;DebugCounter;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;DebugCounter;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;DebugCounter;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounter;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;DebugCounter;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounter;0;0
operator delete;operator delete(void *,size_t);0;TR;DebugCounter;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;DebugCounter;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;DebugCounter;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounter;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;DebugCounter;0;0
operator new;operator new(size_t,TR::Region &);1;TR;DebugCounter;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;DebugCounter;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounter;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;DebugCounter;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;DebugCounter;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounter;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;DebugCounter;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;DebugCounter;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounter;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;DebugCounter;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounter;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;DebugCounter;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;DebugCounter;0;0
operator=;operator=(const class TR::DebugCounterBase &);1;TR;DebugCounterBase;1;0
operator=;operator=(class TR::DebugCounterBase &&);0;TR;DebugCounterBase;1;0
operator=;operator=(class TR::DebugCounter &&);0;TR;DebugCounter;1;0
operator=;operator=(const class TR::DebugCounter &);0;TR;DebugCounter;1;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,int32_t,int8_t);1;TR;DebugCounter;0;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,TR::Node *,int8_t,int32_t);0;TR;DebugCounter;0;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,TR::Node *,int8_t);0;TR;DebugCounter;0;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,int32_t,int8_t,int32_t);0;TR;DebugCounter;0;0
prependDebugCounterBump;prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,int32_t);1;TR;DebugCounter;0;0
prependDebugCounterBump;prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,TR::Node *);0;TR;DebugCounter;0;0
reset;reset();1;TR;DebugCounter;0;0
~DebugCounter;~DebugCounter();1;TR;DebugCounter;1;0
~DebugCounterBase;~DebugCounterBase();1;TR;DebugCounterBase;1;0
DebugCounterAggregation;DebugCounterAggregation(class TR_Memory *);1;TR;DebugCounterAggregation;0;0
aggregate;aggregate(class TR::DebugCounter *,int32_t);1;TR;DebugCounterAggregation;0;0
aggregateDebugCounterHistogram;aggregateDebugCounterHistogram(TR::Compilation *,TR::Node *,class TR::DebugCounter *,int32_t,int8_t,int32_t);1;TR;DebugCounterAggregation;0;0
aggregateDebugCounterInsertions;aggregateDebugCounterInsertions(TR::Compilation *,TR::Node *,class TR::DebugCounter *,int32_t,int8_t,int32_t);1;TR;DebugCounterAggregation;0;0
aggregateStandardCounters;aggregateStandardCounters(TR::Compilation *,TR::Node *,const char *,int32_t,int8_t,int32_t);1;TR;DebugCounterAggregation;0;0
hasAnyCounters;hasAnyCounters();1;TR;DebugCounterAggregation;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;DebugCounterAggregation;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,size_t);0;TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;DebugCounterAggregation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounterAggregation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;DebugCounterAggregation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounterAggregation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounterAggregation;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,TR::Region &);0;TR;DebugCounterAggregation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounterAggregation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounterAggregation;0;0
operator=;operator=(const class TR::DebugCounterAggregation &);0;TR;DebugCounterAggregation;1;0
operator=;operator=(class TR::DebugCounterAggregation &&);0;TR;DebugCounterAggregation;1;0
~DebugCounterAggregation;~DebugCounterAggregation();1;TR;DebugCounterAggregation;1;0
Environment;Environment(TR::MajorOperatingSystem,TR::Bitness);1;OMR;Environment;0;0
Environment;Environment();0;OMR;Environment;0;0
Environment;Environment(const class OMR::Environment &);0;OMR;Environment;1;0
Environment;Environment(class OMR::Environment &&);0;OMR;Environment;1;0
Environment;Environment(const class TR::Environment &);0;TR;Environment;1;0
Environment;Environment(class TR::Environment &&);0;TR;Environment;1;0
bitness;bitness();1;OMR;Environment;0;0
is32Bit;is32Bit();1;OMR;Environment;0;0
is64Bit;is64Bit();1;OMR;Environment;0;0
isAIX;isAIX();1;OMR;Environment;0;0
isLinux;isLinux();1;OMR;Environment;0;0
isOSX;isOSX();1;OMR;Environment;0;0
isSMP;isSMP();1;OMR;Environment;0;0
isUnix;isUnix();1;OMR;Environment;0;0
isWindows;isWindows();1;OMR;Environment;0;0
isZOS;isZOS();1;OMR;Environment;0;0
majorOS;majorOS();1;OMR;Environment;0;0
numberOfProcessors;numberOfProcessors();1;OMR;Environment;0;0
operator=;operator=(class OMR::Environment &&);1;OMR;Environment;1;0
operator=;operator=(const class OMR::Environment &);0;OMR;Environment;1;0
operator=;operator=(const class TR::Environment &);0;TR;Environment;1;0
operator=;operator=(class TR::Environment &&);0;TR;Environment;1;0
setBitness;setBitness(TR::Bitness);1;OMR;Environment;0;0
setMajorOS;setMajorOS(TR::MajorOperatingSystem);1;OMR;Environment;0;0
setNumberOfProcessors;setNumberOfProcessors(uint32_t);1;OMR;Environment;0;0
setSMP;setSMP(_Bool);1;OMR;Environment;0;0
~Environment;~Environment();1;OMR;Environment;1;0
GCRegisterMap;GCRegisterMap();1;OMR;GCRegisterMap;0;0
GCRegisterMap;GCRegisterMap(const class OMR::GCRegisterMap &);0;OMR;GCRegisterMap;1;0
GCRegisterMap;GCRegisterMap(class OMR::GCRegisterMap &&);0;OMR;GCRegisterMap;1;0
GCRegisterMap;GCRegisterMap(class TR::GCRegisterMap &&);0;TR;GCRegisterMap;1;0
GCRegisterMap;GCRegisterMap(const class TR::GCRegisterMap &);0;TR;GCRegisterMap;1;0
empty;empty();1;OMR;GCRegisterMap;0;0
emptyHPR;emptyHPR();1;OMR;GCRegisterMap;0;0
getHPRMap;getHPRMap();1;OMR;GCRegisterMap;0;0
getMap;getMap();1;OMR;GCRegisterMap;0;0
getRegisterSaveDescription;getRegisterSaveDescription();1;OMR;GCRegisterMap;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;GCRegisterMap;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;GCRegisterMap;0;0
maskRegisters;maskRegisters(uint32_t);1;OMR;GCRegisterMap;0;0
maskRegistersWithInfoBits;maskRegistersWithInfoBits(uint32_t,uint32_t);1;OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,size_t);1;OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;GCRegisterMap;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;GCRegisterMap;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;GCRegisterMap;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;GCRegisterMap;0;0
resetHighWordRegisterBits;resetHighWordRegisterBits(uint32_t);1;OMR;GCRegisterMap;0;0
resetRegisterBits;resetRegisterBits(uint32_t);1;OMR;GCRegisterMap;0;0
self;self();1;OMR;GCRegisterMap;0;0
setHighWordRegisterBits;setHighWordRegisterBits(uint32_t);1;OMR;GCRegisterMap;0;0
setInfoBits;setInfoBits(uint32_t);1;OMR;GCRegisterMap;0;0
setRegisterBits;setRegisterBits(uint32_t);1;OMR;GCRegisterMap;0;0
setRegisterSaveDescription;setRegisterSaveDescription(uint32_t);1;OMR;GCRegisterMap;0;0
~GCRegisterMap;~GCRegisterMap();1;OMR;GCRegisterMap;1;0
GCStackAtlas;GCStackAtlas(const class OMR::GCStackAtlas &);1;OMR;GCStackAtlas;1;0
GCStackAtlas;GCStackAtlas(class OMR::GCStackAtlas &&);0;OMR;GCStackAtlas;1;0
GCStackAtlas;GCStackAtlas(uint32_t,uint32_t,class TR_Memory *);0;OMR;GCStackAtlas;0;0
addPinningArrayPtrForInternalPtrReg;addPinningArrayPtrForInternalPtrReg(TR::AutomaticSymbol *);1;OMR;GCStackAtlas;0;0
addStackMap;addStackMap(class TR_GCStackMap *);1;OMR;GCStackAtlas;0;0
assignGCIndex;assignGCIndex();1;OMR;GCStackAtlas;0;0
close;close(TR::CodeGenerator *);1;OMR;GCStackAtlas;0;0
decNumberOfMaps;decNumberOfMaps();1;OMR;GCStackAtlas;0;0
getAtlasBits;getAtlasBits();1;OMR;GCStackAtlas;0;0
getIndexOfFirstInternalPointer;getIndexOfFirstInternalPointer();1;OMR;GCStackAtlas;0;0
getIndexOfFirstSpillTemp;getIndexOfFirstSpillTemp();1;OMR;GCStackAtlas;0;0
getInternalPointerMap;getInternalPointerMap();1;OMR;GCStackAtlas;0;0
getLocalBaseOffset;getLocalBaseOffset();1;OMR;GCStackAtlas;0;0
getLocalMap;getLocalMap();1;OMR;GCStackAtlas;0;0
getNumberOfDistinctPinningArrays;getNumberOfDistinctPinningArrays();1;OMR;GCStackAtlas;0;0
getNumberOfLocalSlotsMapped;getNumberOfLocalSlotsMapped();1;OMR;GCStackAtlas;0;0
getNumberOfMaps;getNumberOfMaps();1;OMR;GCStackAtlas;0;0
getNumberOfParmSlotsMapped;getNumberOfParmSlotsMapped();1;OMR;GCStackAtlas;0;0
getNumberOfPendingPushSlots;getNumberOfPendingPushSlots();1;OMR;GCStackAtlas;0;0
getNumberOfSlotsMapped;getNumberOfSlotsMapped();1;OMR;GCStackAtlas;0;0
getNumberOfSlotsToBeInitialized;getNumberOfSlotsToBeInitialized();1;OMR;GCStackAtlas;0;0
getOffsetOfFirstInternalPointer;getOffsetOfFirstInternalPointer();1;OMR;GCStackAtlas;0;0
getParameterMap;getParameterMap();1;OMR;GCStackAtlas;0;0
getParmBaseOffset;getParmBaseOffset();1;OMR;GCStackAtlas;0;0
getPinningArrayPtrsForInternalPtrRegs;getPinningArrayPtrsForInternalPtrRegs();1;OMR;GCStackAtlas;0;0
getStackAllocMap;getStackAllocMap();1;OMR;GCStackAtlas;0;0
getStackMapList;getStackMapList();1;OMR;GCStackAtlas;0;0
hasUninitializedPinningArrayPointer;hasUninitializedPinningArrayPointer();1;OMR;GCStackAtlas;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;GCStackAtlas;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,size_t);0;OMR;GCStackAtlas;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;GCStackAtlas;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;GCStackAtlas;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;GCStackAtlas;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;GCStackAtlas;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;GCStackAtlas;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;GCStackAtlas;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;GCStackAtlas;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;GCStackAtlas;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;GCStackAtlas;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;GCStackAtlas;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;GCStackAtlas;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;GCStackAtlas;0;0
removePinningArrayPtrForInternalPtrReg;removePinningArrayPtrForInternalPtrReg(TR::AutomaticSymbol *);1;OMR;GCStackAtlas;0;0
self;self();1;OMR;GCStackAtlas;0;0
setAtlasBits;setAtlasBits(uint8_t *);1;OMR;GCStackAtlas;0;0
setHasUninitializedPinningArrayPointer;setHasUninitializedPinningArrayPointer(_Bool);1;OMR;GCStackAtlas;0;0
setIndexOfFirstInternalPointer;setIndexOfFirstInternalPointer(int32_t);1;OMR;GCStackAtlas;0;0
setIndexOfFirstSpillTemp;setIndexOfFirstSpillTemp(uint32_t);1;OMR;GCStackAtlas;0;0
setInternalPointerMap;setInternalPointerMap(class TR_InternalPointerMap *);1;OMR;GCStackAtlas;0;0
setLocalBaseOffset;setLocalBaseOffset(int32_t);1;OMR;GCStackAtlas;0;0
setLocalMap;setLocalMap(class TR_GCStackMap *);1;OMR;GCStackAtlas;0;0
setNumberOfMaps;setNumberOfMaps(uint32_t);1;OMR;GCStackAtlas;0;0
setNumberOfPendingPushSlots;setNumberOfPendingPushSlots(uint32_t);1;OMR;GCStackAtlas;0;0
setNumberOfSlotsMapped;setNumberOfSlotsMapped(uint32_t);1;OMR;GCStackAtlas;0;0
setNumberOfSlotsToBeInitialized;setNumberOfSlotsToBeInitialized(uint32_t);1;OMR;GCStackAtlas;0;0
setOffsetOfFirstInternalPointer;setOffsetOfFirstInternalPointer(int32_t);1;OMR;GCStackAtlas;0;0
setParameterMap;setParameterMap(class TR_GCStackMap *);1;OMR;GCStackAtlas;0;0
setParmBaseOffset;setParmBaseOffset(int32_t);1;OMR;GCStackAtlas;0;0
setStackAllocMap;setStackAllocMap(class TR_GCStackAllocMap *);1;OMR;GCStackAtlas;0;0
trMemory;trMemory();1;OMR;GCStackAtlas;0;0
IL;IL(const class OMR::IL &);1;OMR;IL;1;0
IL;IL(class OMR::IL &&);0;OMR;IL;1;0
IL;IL(class TR::IL &&);0;TR;IL;1;0
IL;IL(const class TR::IL &);0;TR;IL;1;0
opCodeForCompareEquals;opCodeForCompareEquals(TR::DataType);1;OMR;IL;0;0
opCodeForCompareGreaterOrEquals;opCodeForCompareGreaterOrEquals(TR::DataType);1;OMR;IL;0;0
opCodeForCompareGreaterThan;opCodeForCompareGreaterThan(TR::DataType);1;OMR;IL;0;0
opCodeForCompareLessOrEquals;opCodeForCompareLessOrEquals(TR::DataType);1;OMR;IL;0;0
opCodeForCompareLessThan;opCodeForCompareLessThan(TR::DataType);1;OMR;IL;0;0
opCodeForCompareNotEquals;opCodeForCompareNotEquals(TR::DataType);1;OMR;IL;0;0
opCodeForConst;opCodeForConst(TR::DataType);1;OMR;IL;0;0
opCodeForCorrespondingIndirectLoad;opCodeForCorrespondingIndirectLoad(TR::ILOpCodes);1;OMR;IL;0;0
opCodeForCorrespondingIndirectStore;opCodeForCorrespondingIndirectStore(TR::ILOpCodes);1;OMR;IL;0;0
opCodeForDirectLoad;opCodeForDirectLoad(TR::DataType);1;OMR;IL;0;0
opCodeForDirectStore;opCodeForDirectStore(TR::DataType);1;OMR;IL;0;0
opCodeForIfCompareEquals;opCodeForIfCompareEquals(TR::DataType);1;OMR;IL;0;0
opCodeForIfCompareGreaterOrEquals;opCodeForIfCompareGreaterOrEquals(TR::DataType);1;OMR;IL;0;0
opCodeForIfCompareGreaterThan;opCodeForIfCompareGreaterThan(TR::DataType);1;OMR;IL;0;0
opCodeForIfCompareLessOrEquals;opCodeForIfCompareLessOrEquals(TR::DataType);1;OMR;IL;0;0
opCodeForIfCompareLessThan;opCodeForIfCompareLessThan(TR::DataType);1;OMR;IL;0;0
opCodeForIfCompareNotEquals;opCodeForIfCompareNotEquals(TR::DataType);1;OMR;IL;0;0
opCodeForIndirectArrayLoad;opCodeForIndirectArrayLoad(TR::DataType);1;OMR;IL;0;0
opCodeForIndirectArrayStore;opCodeForIndirectArrayStore(TR::DataType);1;OMR;IL;0;0
opCodeForIndirectLoad;opCodeForIndirectLoad(TR::DataType);1;OMR;IL;0;0
opCodeForIndirectStore;opCodeForIndirectStore(TR::DataType);1;OMR;IL;0;0
opCodeForRegisterLoad;opCodeForRegisterLoad(TR::DataType);1;OMR;IL;0;0
opCodeForRegisterStore;opCodeForRegisterStore(TR::DataType);1;OMR;IL;0;0
~IL;~IL();1;OMR;IL;1;0
ILOpCode;ILOpCode(class OMR::ILOpCode &&);1;OMR;ILOpCode;1;0
ILOpCode;ILOpCode(const class OMR::ILOpCode &);0;OMR;ILOpCode;1;0
ILOpCode;ILOpCode(TR::ILOpCodes);0;OMR;ILOpCode;0;0
ILOpCode;ILOpCode();0;OMR;ILOpCode;0;0
ILOpCode;ILOpCode(class TR::ILOpCode &&);0;TR;ILOpCode;1;0
ILOpCode;ILOpCode(const class TR::ILOpCode &);0;TR;ILOpCode;1;0
absOpCode;absOpCode(TR::DataType);1;OMR;ILOpCode;0;0
addOpCode;addOpCode(TR::DataType,_Bool);1;OMR;ILOpCode;0;0
andOpCode;andOpCode(TR::DataType);1;OMR;ILOpCode;0;0
canHaveGlRegDeps;canHaveGlRegDeps();1;OMR;ILOpCode;0;0
canRaiseException;canRaiseException();1;OMR;ILOpCode;0;0
canShareValueNumber;canShareValueNumber();1;OMR;ILOpCode;0;0
canUseBranchOnCount;canUseBranchOnCount();1;OMR;ILOpCode;0;0
checkILOpArrayLengths;checkILOpArrayLengths();1;OMR;ILOpCode;0;0
childProperties;childProperties();1;OMR;ILOpCode;0;0
cmpeqOpCode;cmpeqOpCode(TR::DataType);1;OMR;ILOpCode;0;0
compareOpCode;compareOpCode(TR::DataType,enum TR_ComparisonTypes,_Bool);1;OMR;ILOpCode;0;0
constOpCode;constOpCode(TR::DataType);1;OMR;ILOpCode;0;0
convertCmpToIfCmp;convertCmpToIfCmp();1;OMR;ILOpCode;0;0
convertIfCmpToCmp;convertIfCmpToCmp();1;OMR;ILOpCode;0;0
convertScalarToVector;convertScalarToVector(TR::ILOpCodes);1;OMR;ILOpCode;0;0
convertSignedCmpToUnsignedCmp;convertSignedCmpToUnsignedCmp(TR::ILOpCodes);1;OMR;ILOpCode;0;0
divideOpCode;divideOpCode(TR::DataType);1;OMR;ILOpCode;0;0
expectedChildCount;expectedChildCount();1;OMR;ILOpCode;0;0
expectedChildType;expectedChildType(uint32_t);1;OMR;ILOpCode;0;0
getCompareType;getCompareType(TR::ILOpCodes);1;OMR;ILOpCode;0;0
getComparisonWithoutUnordered;getComparisonWithoutUnordered(TR::ILOpCodes);1;OMR;ILOpCode;0;0
getCorrespondingLogicalComparison;getCorrespondingLogicalComparison(TR::ILOpCodes);1;OMR;ILOpCode;0;0
getDataType;getDataType();1;OMR;ILOpCode;0;0
getDataType;getDataType(TR::ILOpCodes);0;OMR;ILOpCode;0;0
getDirectCall;getDirectCall(TR::DataType);1;OMR;ILOpCode;0;0
getDirectCall;getDirectCall(TR::ILOpCodes);0;OMR;ILOpCode;0;0
getIndirectCall;getIndirectCall(TR::DataType);1;OMR;ILOpCode;0;0
getName;getName();1;OMR;ILOpCode;0;0
getOpCodeForReverseBranch;getOpCodeForReverseBranch();1;OMR;ILOpCode;0;0
getOpCodeForSwapChildren;getOpCodeForSwapChildren();1;OMR;ILOpCode;0;0
getOpCodeValue;getOpCodeValue();1;OMR;ILOpCode;0;0
getProperConversion;getProperConversion(TR::DataType,TR::DataType,_Bool);1;OMR;ILOpCode;0;0
getRotateOpCodeFromDt;getRotateOpCodeFromDt(TR::DataType);1;OMR;ILOpCode;0;0
getSize;getSize(TR::ILOpCodes);1;OMR;ILOpCode;0;0
getSize;getSize();0;OMR;ILOpCode;0;0
getType;getType();1;OMR;ILOpCode;0;0
getType;getType(TR::ILOpCodes);0;OMR;ILOpCode;0;0
hasBranchChildren;hasBranchChildren();1;OMR;ILOpCode;0;0
hasNoDataType;hasNoDataType();1;OMR;ILOpCode;0;0
hasPinningArrayPointer;hasPinningArrayPointer();1;OMR;ILOpCode;0;0
hasSymbolReference;hasSymbolReference();1;OMR;ILOpCode;0;0
ifcmpeqOpCode;ifcmpeqOpCode(TR::DataType);1;OMR;ILOpCode;0;0
ifcmpgeOpCode;ifcmpgeOpCode(TR::DataType,_Bool);1;OMR;ILOpCode;0;0
ifcmpgtOpCode;ifcmpgtOpCode(TR::DataType,_Bool);1;OMR;ILOpCode;0;0
ifcmpleOpCode;ifcmpleOpCode(TR::DataType,_Bool);1;OMR;ILOpCode;0;0
ifcmpltOpCode;ifcmpltOpCode(TR::DataType,_Bool);1;OMR;ILOpCode;0;0
ifcmpneOpCode;ifcmpneOpCode(TR::DataType);1;OMR;ILOpCode;0;0
indirectLoadOpCode;indirectLoadOpCode(TR::DataType);1;OMR;ILOpCode;0;0
integerOpForLongOp;integerOpForLongOp(TR::ILOpCodes);1;OMR;ILOpCode;0;0
is16Byte;is16Byte();1;OMR;ILOpCode;0;0
is1Byte;is1Byte();1;OMR;ILOpCode;0;0
is2Byte;is2Byte();1;OMR;ILOpCode;0;0
is32Byte;is32Byte();1;OMR;ILOpCode;0;0
is4Byte;is4Byte();1;OMR;ILOpCode;0;0
is8Byte;is8Byte();1;OMR;ILOpCode;0;0
isAbs;isAbs();1;OMR;ILOpCode;0;0
isAdd;isAdd();1;OMR;ILOpCode;0;0
isAnchor;isAnchor();1;OMR;ILOpCode;0;0
isAnd;isAnd();1;OMR;ILOpCode;0;0
isArithmetic;isArithmetic();1;OMR;ILOpCode;0;0
isArrayLength;isArrayLength();1;OMR;ILOpCode;0;0
isArrayRef;isArrayRef();1;OMR;ILOpCode;0;0
isAssociative;isAssociative();1;OMR;ILOpCode;0;0
isBitwiseLogical;isBitwiseLogical();1;OMR;ILOpCode;0;0
isBndCheck;isBndCheck();1;OMR;ILOpCode;0;0
isBooleanCompare;isBooleanCompare();1;OMR;ILOpCode;0;0
isBranch;isBranch();1;OMR;ILOpCode;0;0
isByte;isByte();1;OMR;ILOpCode;0;0
isCall;isCall();1;OMR;ILOpCode;0;0
isCallDirect;isCallDirect();1;OMR;ILOpCode;0;0
isCallIndirect;isCallIndirect();1;OMR;ILOpCode;0;0
isCase;isCase();1;OMR;ILOpCode;0;0
isCheck;isCheck();1;OMR;ILOpCode;0;0
isCheckCast;isCheckCast();1;OMR;ILOpCode;0;0
isCheckCastOrNullCheck;isCheckCastOrNullCheck();1;OMR;ILOpCode;0;0
isCommutative;isCommutative();1;OMR;ILOpCode;0;0
isCompBranchOnly;isCompBranchOnly();1;OMR;ILOpCode;0;0
isCompareDouble;isCompareDouble();1;OMR;ILOpCode;0;0
isCompareForEquality;isCompareForEquality();1;OMR;ILOpCode;0;0
isCompareForOrder;isCompareForOrder();1;OMR;ILOpCode;0;0
isCompareTrueIfEqual;isCompareTrueIfEqual();1;OMR;ILOpCode;0;0
isCompareTrueIfGreater;isCompareTrueIfGreater();1;OMR;ILOpCode;0;0
isCompareTrueIfLess;isCompareTrueIfLess();1;OMR;ILOpCode;0;0
isCompareTrueIfUnordered;isCompareTrueIfUnordered();1;OMR;ILOpCode;0;0
isCondCodeComputation;isCondCodeComputation();1;OMR;ILOpCode;0;0
isConversion;isConversion();1;OMR;ILOpCode;0;0
isDiv;isDiv();1;OMR;ILOpCode;0;0
isDouble;isDouble();1;OMR;ILOpCode;0;0
isEqualCmp;isEqualCmp(TR::ILOpCodes);1;OMR;ILOpCode;0;0
isExceptionRangeFence;isExceptionRangeFence();1;OMR;ILOpCode;0;0
isExponentiation;isExponentiation();1;OMR;ILOpCode;0;0
isFence;isFence();1;OMR;ILOpCode;0;0
isFloat;isFloat();1;OMR;ILOpCode;0;0
isFloatingPoint;isFloatingPoint();1;OMR;ILOpCode;0;0
isFunctionCall;isFunctionCall();1;OMR;ILOpCode;0;0
isGoto;isGoto();1;OMR;ILOpCode;0;0
isGreaterCmp;isGreaterCmp(TR::ILOpCodes);1;OMR;ILOpCode;0;0
isIf;isIf();1;OMR;ILOpCode;0;0
isIndirect;isIndirect();1;OMR;ILOpCode;0;0
isInt;isInt();1;OMR;ILOpCode;0;0
isInteger;isInteger();1;OMR;ILOpCode;0;0
isIntegerOrAddress;isIntegerOrAddress();1;OMR;ILOpCode;0;0
isIntegralConst;isIntegralConst();1;OMR;ILOpCode;0;0
isIntegralLoadVar;isIntegralLoadVar();1;OMR;ILOpCode;0;0
isJumpWithMultipleTargets;isJumpWithMultipleTargets();1;OMR;ILOpCode;0;0
isLeftRotate;isLeftRotate();1;OMR;ILOpCode;0;0
isLeftShift;isLeftShift();1;OMR;ILOpCode;0;0
isLessCmp;isLessCmp(TR::ILOpCodes);1;OMR;ILOpCode;0;0
isLikeDef;isLikeDef();1;OMR;ILOpCode;0;0
isLikeUse;isLikeUse();1;OMR;ILOpCode;0;0
isLoad;isLoad();1;OMR;ILOpCode;0;0
isLoadAddr;isLoadAddr();1;OMR;ILOpCode;0;0
isLoadConst;isLoadConst();1;OMR;ILOpCode;0;0
isLoadDirect;isLoadDirect();1;OMR;ILOpCode;0;0
isLoadDirectOrReg;isLoadDirectOrReg();1;OMR;ILOpCode;0;0
isLoadIndirect;isLoadIndirect();1;OMR;ILOpCode;0;0
isLoadReg;isLoadReg();1;OMR;ILOpCode;0;0
isLoadVar;isLoadVar();1;OMR;ILOpCode;0;0
isLoadVarDirect;isLoadVarDirect();1;OMR;ILOpCode;0;0
isLoadVarOrStore;isLoadVarOrStore();1;OMR;ILOpCode;0;0
isLong;isLong();1;OMR;ILOpCode;0;0
isLongCompare;isLongCompare();1;OMR;ILOpCode;0;0
isMax;isMax();1;OMR;ILOpCode;0;0
isMemToMemOp;isMemToMemOp();1;OMR;ILOpCode;0;0
isMemoryReference;isMemoryReference();1;OMR;ILOpCode;0;0
isMin;isMin();1;OMR;ILOpCode;0;0
isMul;isMul();1;OMR;ILOpCode;0;0
isNeg;isNeg();1;OMR;ILOpCode;0;0
isNew;isNew();1;OMR;ILOpCode;0;0
isNotEqualCmp;isNotEqualCmp(TR::ILOpCodes);1;OMR;ILOpCode;0;0
isNullCheck;isNullCheck();1;OMR;ILOpCode;0;0
isOpCodeAnImplicitNoOp;isOpCodeAnImplicitNoOp(class OMR::ILOpCode &);1;OMR;ILOpCode;0;0
isOr;isOr();1;OMR;ILOpCode;0;0
isOverflowCheck;isOverflowCheck();1;OMR;ILOpCode;0;0
isOverflowCompare;isOverflowCompare();1;OMR;ILOpCode;0;0
isRef;isRef();1;OMR;ILOpCode;0;0
isRem;isRem();1;OMR;ILOpCode;0;0
isResolveCheck;isResolveCheck();1;OMR;ILOpCode;0;0
isResolveOrNullCheck;isResolveOrNullCheck();1;OMR;ILOpCode;0;0
isReturn;isReturn();1;OMR;ILOpCode;0;0
isReverseLoadOrStore;isReverseLoadOrStore();1;OMR;ILOpCode;0;0
isRightShift;isRightShift();1;OMR;ILOpCode;0;0
isRotate;isRotate();1;OMR;ILOpCode;0;0
isShift;isShift();1;OMR;ILOpCode;0;0
isShiftLogical;isShiftLogical();1;OMR;ILOpCode;0;0
isShort;isShort();1;OMR;ILOpCode;0;0
isSignExtension;isSignExtension();1;OMR;ILOpCode;0;0
isSignedExponentiation;isSignedExponentiation();1;OMR;ILOpCode;0;0
isSignum;isSignum();1;OMR;ILOpCode;0;0
isSpineCheck;isSpineCheck();1;OMR;ILOpCode;0;0
isSqrt;isSqrt();1;OMR;ILOpCode;0;0
isStore;isStore();1;OMR;ILOpCode;0;0
isStoreDirect;isStoreDirect();1;OMR;ILOpCode;0;0
isStoreDirectOrReg;isStoreDirectOrReg();1;OMR;ILOpCode;0;0
isStoreIndirect;isStoreIndirect();1;OMR;ILOpCode;0;0
isStoreReg;isStoreReg();1;OMR;ILOpCode;0;0
isStrictWidenConversion;isStrictWidenConversion();1;OMR;ILOpCode;0;0
isStrictlyGreaterThanCmp;isStrictlyGreaterThanCmp(TR::ILOpCodes);1;OMR;ILOpCode;0;0
isStrictlyLessThanCmp;isStrictlyLessThanCmp(TR::ILOpCodes);1;OMR;ILOpCode;0;0
isSub;isSub();1;OMR;ILOpCode;0;0
isSupportedForPRE;isSupportedForPRE();1;OMR;ILOpCode;0;0
isSwitch;isSwitch();1;OMR;ILOpCode;0;0
isTernary;isTernary();1;OMR;ILOpCode;0;0
isTernaryAdd;isTernaryAdd();1;OMR;ILOpCode;0;0
isTernarySub;isTernarySub();1;OMR;ILOpCode;0;0
isTreeTop;isTreeTop();1;OMR;ILOpCode;0;0
isTwoChildrenAddress;isTwoChildrenAddress();1;OMR;ILOpCode;0;0
isUnsigned;isUnsigned();1;OMR;ILOpCode;0;0
isUnsignedCompare;isUnsignedCompare();1;OMR;ILOpCode;0;0
isUnsignedConversion;isUnsignedConversion();1;OMR;ILOpCode;0;0
isUnsignedExponentiation;isUnsignedExponentiation();1;OMR;ILOpCode;0;0
isVector;isVector();1;OMR;ILOpCode;0;0
isVectorReduction;isVectorReduction();1;OMR;ILOpCode;0;0
isVoid;isVoid();1;OMR;ILOpCode;0;0
isWrtBar;isWrtBar();1;OMR;ILOpCode;0;0
isXor;isXor();1;OMR;ILOpCode;0;0
isZeroExtension;isZeroExtension();1;OMR;ILOpCode;0;0
mayUseSystemStack;mayUseSystemStack();1;OMR;ILOpCode;0;0
multiplyOpCode;multiplyOpCode(TR::DataType);1;OMR;ILOpCode;0;0
mustBeLowered;mustBeLowered();1;OMR;ILOpCode;0;0
negateOpCode;negateOpCode(TR::DataType);1;OMR;ILOpCode;0;0
orOpCode;orOpCode(TR::DataType);1;OMR;ILOpCode;0;0
properties1;properties1();1;OMR;ILOpCode;0;0
properties2;properties2();1;OMR;ILOpCode;0;0
properties3;properties3();1;OMR;ILOpCode;0;0
properties4;properties4();1;OMR;ILOpCode;0;0
remainderOpCode;remainderOpCode(TR::DataType);1;OMR;ILOpCode;0;0
returnOpCode;returnOpCode(TR::DataType);1;OMR;ILOpCode;0;0
setOpCodeValue;setOpCodeValue(TR::ILOpCodes);1;OMR;ILOpCode;0;0
setTarget;setTarget();1;OMR;ILOpCode;0;0
shiftLeftOpCode;shiftLeftOpCode(TR::DataType);1;OMR;ILOpCode;0;0
shiftRightOpCode;shiftRightOpCode(TR::DataType);1;OMR;ILOpCode;0;0
skipDynamicLitPoolOnInts;skipDynamicLitPoolOnInts();1;OMR;ILOpCode;0;0
subtractOpCode;subtractOpCode(TR::DataType);1;OMR;ILOpCode;0;0
typeProperties;typeProperties();1;OMR;ILOpCode;0;0
unsignedAddOpCode;unsignedAddOpCode(TR::DataType,_Bool);1;OMR;ILOpCode;0;0
unsignedShiftLeftOpCode;unsignedShiftLeftOpCode(TR::DataType);1;OMR;ILOpCode;0;0
unsignedShiftRightOpCode;unsignedShiftRightOpCode(TR::DataType);1;OMR;ILOpCode;0;0
unsignedSubtractOpCode;unsignedSubtractOpCode(TR::DataType);1;OMR;ILOpCode;0;0
xorOpCode;xorOpCode(TR::DataType);1;OMR;ILOpCode;0;0
~ILOpCode;~ILOpCode();1;OMR;ILOpCode;1;0
fclose;fclose(TR::FILE *);1;OMR;IO;0;0
fflush;fflush(TR::FILE *);1;OMR;IO;0;0
fopen;fopen(char *,const char *,_Bool);1;OMR;IO;0;0
fprintf;fprintf(TR::FILE *,const char *);1;OMR;IO;0;0
fseek;fseek(TR::FILE *,intptr_t,int32_t);1;OMR;IO;0;0
ftell;ftell(TR::FILE *);1;OMR;IO;0;0
printf;printf(const char *);1;OMR;IO;0;0
vfprintf;vfprintf(TR::FILE *,const char *,va_list);1;OMR;IO;0;0
KnownObjectTable;KnownObjectTable(class OMR::KnownObjectTable &&);1;OMR;KnownObjectTable;1;0
KnownObjectTable;KnownObjectTable(const class OMR::KnownObjectTable &);0;OMR;KnownObjectTable;1;0
KnownObjectTable;KnownObjectTable(TR::Compilation *);0;OMR;KnownObjectTable;0;0
addArrayWithConstantElements;addArrayWithConstantElements(Index);1;OMR;KnownObjectTable;0;0
comp;comp();1;OMR;KnownObjectTable;0;0
dumpTo;dumpTo(TR::FILE *,TR::Compilation *);1;OMR;KnownObjectTable;0;1
fe;fe();1;OMR;KnownObjectTable;0;0
getEndIndex;getEndIndex();1;OMR;KnownObjectTable;0;1
getExistingIndexAt;getExistingIndexAt(uintptrj_t *);1;OMR;KnownObjectTable;0;0
getIndex;getIndex(uintptrj_t,_Bool);1;OMR;KnownObjectTable;0;0
getIndex;getIndex(uintptrj_t);0;OMR;KnownObjectTable;0;1
getIndexAt;getIndexAt(uintptrj_t *,_Bool);1;OMR;KnownObjectTable;0;0
getIndexAt;getIndexAt(uintptrj_t *);0;OMR;KnownObjectTable;0;0
getPointer;getPointer(Index);1;OMR;KnownObjectTable;0;0
getPointerLocation;getPointerLocation(Index);1;OMR;KnownObjectTable;0;1
getfPointerLocationAt;getfPointerLocationAt(uintptrj_t *);1;OMR;KnownObjectTable;0;0
isArrayWithConstantElements;isArrayWithConstantElements(Index);1;OMR;KnownObjectTable;0;0
isNull;isNull(Index);1;OMR;KnownObjectTable;0;1
operator=;operator=(const class OMR::KnownObjectTable &);1;OMR;KnownObjectTable;1;0
operator=;operator=(class OMR::KnownObjectTable &&);0;OMR;KnownObjectTable;1;0
operator=;operator=(class TR::KnownObjectTable &&);0;TR;KnownObjectTable;1;0
operator=;operator=(const class TR::KnownObjectTable &);0;TR;KnownObjectTable;1;0
self;self();1;OMR;KnownObjectTable;0;0
setComp;setComp(TR::Compilation *);1;OMR;KnownObjectTable;0;0
setFe;setFe(class TR_FrontEnd *);1;OMR;KnownObjectTable;0;0
~KnownObjectTable;~KnownObjectTable();1;OMR;KnownObjectTable;1;0
Monitor;Monitor();1;OMR;Monitor;1;0
Monitor;Monitor(const class OMR::Monitor &);0;OMR;Monitor;1;0
Monitor;Monitor(class TR::Monitor &&);0;TR;Monitor;1;0
create;create(char *);1;OMR;Monitor;0;0
destroy;destroy();1;OMR;Monitor;0;0
destroy;destroy(TR::Monitor *);0;OMR;Monitor;0;0
enter;enter();1;OMR;Monitor;0;0
exit;exit();1;OMR;Monitor;0;0
getName;getName();1;OMR;Monitor;0;0
init;init(char *);1;OMR;Monitor;0;0
notify;notify();1;OMR;Monitor;0;0
notifyAll;notifyAll();1;OMR;Monitor;0;0
num_waiting;num_waiting();1;OMR;Monitor;0;0
operator delete;operator delete(void *);1;OMR;Monitor;0;0
operator new;operator new(size_t);1;OMR;Monitor;0;0
operator=;operator=(const class OMR::Monitor &);1;OMR;Monitor;1;0
operator=;operator=(class TR::Monitor &&);0;TR;Monitor;1;0
self;self();1;OMR;Monitor;0;0
try_enter;try_enter();1;OMR;Monitor;0;0
wait;wait();1;OMR;Monitor;0;0
wait_timed;wait_timed(int64_t,int32_t);1;OMR;Monitor;0;0
~Monitor;~Monitor();1;OMR;Monitor;0;0
Node;Node(const class OMR::Node &);1;OMR;Node;1;0
Node;Node();0;OMR;Node;0;0
Node;Node(TR::Node *,TR::ILOpCodes,uint16_t);0;OMR;Node;0;0
Node;Node(TR::Node *,uint16_t);0;OMR;Node;0;0
Node;Node(class TR::Node &);0;TR;Node;0;0
Node;Node(class TR::Node *,uint16_t);0;TR;Node;0;0
aconst;aconst(TR::Node *,uintptrj_t,uint8_t);1;OMR;Node;0;0
aconst;aconst(uintptrj_t);0;OMR;Node;0;0
aconst;aconst(TR::Node *,uintptrj_t);0;OMR;Node;0;0
addChildren;addChildren(TR::Node **,uint16_t);1;OMR;Node;0;0
addChildrenAndSymRef;addChildrenAndSymRef(uint16_t,TR::Node *);1;OMR;Node;0;0
addChildrenAndSymRef;addChildrenAndSymRef(uint16_t,TR::SymbolReference *);0;OMR;Node;0;0
addExtensionElements;addExtensionElements(uint16_t);1;OMR;Node;0;0
addressPointsAtObject;addressPointsAtObject();1;OMR;Node;0;0
anchorConstChildren;anchorConstChildren();1;OMR;Node;0;0
bconst;bconst(TR::Node *,int8_t);1;OMR;Node;0;0
bconst;bconst(int8_t);0;OMR;Node;0;0
buconst;buconst(TR::Node *,uint8_t);1;OMR;Node;0;0
buconst;buconst(uint8_t);0;OMR;Node;0;0
canCauseGC;canCauseGC();1;OMR;Node;0;0
canCheckReferenceIsNonNull;canCheckReferenceIsNonNull();1;OMR;Node;0;0
canChkNodeCreatedByPRE;canChkNodeCreatedByPRE();1;OMR;Node;0;0
canDesynchronizeCall;canDesynchronizeCall();1;OMR;Node;0;0
canEvaluate;canEvaluate();1;OMR;Node;0;0
canGCandExcept;canGCandExcept();1;OMR;Node;0;0
canGCandReturn;canGCandReturn();1;OMR;Node;0;0
canGet32bitIntegralValue;canGet32bitIntegralValue();1;OMR;Node;0;0
canGet64bitIntegralValue;canGet64bitIntegralValue();1;OMR;Node;0;0
canOmitSync;canOmitSync();1;OMR;Node;0;0
canSkipSync;canSkipSync();1;OMR;Node;0;0
canSkipZeroInitialization;canSkipZeroInitialization();1;OMR;Node;0;0
cannotOverflow;cannotOverflow();1;OMR;Node;0;0
cannotTrackLocalStringUses;cannotTrackLocalStringUses();1;OMR;Node;0;0
cannotTrackLocalUses;cannotTrackLocalUses();1;OMR;Node;0;0
cconst;cconst(uint16_t);1;OMR;Node;0;0
cconst;cconst(TR::Node *,uint16_t);0;OMR;Node;0;0
childIterator;childIterator(int32_t);1;OMR;Node;0;0
childrenWereSwapped;childrenWereSwapped();1;OMR;Node;0;0
chkAllocationCanBeRemoved;chkAllocationCanBeRemoved();1;OMR;Node;0;0
chkAndBitOpMem;chkAndBitOpMem();1;OMR;Node;0;0
chkArrayChkPrimitiveArray1;chkArrayChkPrimitiveArray1();1;OMR;Node;0;0
chkArrayChkPrimitiveArray2;chkArrayChkPrimitiveArray2();1;OMR;Node;0;0
chkArrayChkReferenceArray1;chkArrayChkReferenceArray1();1;OMR;Node;0;0
chkArrayChkReferenceArray2;chkArrayChkReferenceArray2();1;OMR;Node;0;0
chkArrayCmpLen;chkArrayCmpLen();1;OMR;Node;0;0
chkArrayCmpSign;chkArrayCmpSign();1;OMR;Node;0;0
chkArrayTRT;chkArrayTRT();1;OMR;Node;0;0
chkBackwardArrayCopy;chkBackwardArrayCopy();1;OMR;Node;0;0
chkByteToByteTranslate;chkByteToByteTranslate();1;OMR;Node;0;0
chkByteToCharTranslate;chkByteToCharTranslate();1;OMR;Node;0;0
chkCannotOverflow;chkCannotOverflow();1;OMR;Node;0;0
chkCannotTrackLocalStringUses;chkCannotTrackLocalStringUses();1;OMR;Node;0;0
chkCannotTrackLocalUses;chkCannotTrackLocalUses();1;OMR;Node;0;0
chkCharArrayTRT;chkCharArrayTRT();1;OMR;Node;0;0
chkCharToByteTranslate;chkCharToByteTranslate();1;OMR;Node;0;0
chkCharToCharTranslate;chkCharToCharTranslate();1;OMR;Node;0;0
chkClassPointerConstant;chkClassPointerConstant();1;OMR;Node;0;0
chkCompressionSequence;chkCompressionSequence();1;OMR;Node;0;0
chkDesynchronizeCall;chkDesynchronizeCall();1;OMR;Node;0;0
chkDontMoveUnderBranch;chkDontMoveUnderBranch();1;OMR;Node;0;0
chkDontTransformArrayCopyCall;chkDontTransformArrayCopyCall();1;OMR;Node;0;0
chkEscapesInColdBlock;chkEscapesInColdBlock();1;OMR;Node;0;0
chkFoldedImplicitNULLCHK;chkFoldedImplicitNULLCHK();1;OMR;Node;0;0
chkForwardArrayCopy;chkForwardArrayCopy();1;OMR;Node;0;0
chkHalfWordElementArrayCopy;chkHalfWordElementArrayCopy();1;OMR;Node;0;0
chkHeapObjectWrtBar;chkHeapObjectWrtBar();1;OMR;Node;0;0
chkHeapificationAlloc;chkHeapificationAlloc();1;OMR;Node;0;0
chkHeapificationStore;chkHeapificationStore();1;OMR;Node;0;0
chkHighWordZero;chkHighWordZero();1;OMR;Node;0;0
chkIsPrivatizedInlinerArg;chkIsPrivatizedInlinerArg();1;OMR;Node;0;0
chkIsReferenceNonNull;chkIsReferenceNonNull();1;OMR;Node;0;0
chkLiveMonitorInitStore;chkLiveMonitorInitStore();1;OMR;Node;0;0
chkLocalObjectMonitor;chkLocalObjectMonitor();1;OMR;Node;0;0
chkMethodPointerConstant;chkMethodPointerConstant();1;OMR;Node;0;0
chkNOPLongStore;chkNOPLongStore();1;OMR;Node;0;0
chkNeedsPrecisionAdjustment;chkNeedsPrecisionAdjustment();1;OMR;Node;0;0
chkNoArrayStoreCheckArrayCopy;chkNoArrayStoreCheckArrayCopy();1;OMR;Node;0;0
chkNodeCreatedByPRE;chkNodeCreatedByPRE();1;OMR;Node;0;0
chkNodeRecognizedArrayCopyCall;chkNodeRecognizedArrayCopyCall();1;OMR;Node;0;0
chkNonHeapObjectWrtBar;chkNonHeapObjectWrtBar();1;OMR;Node;0;0
chkNormalizeNanValues;chkNormalizeNanValues();1;OMR;Node;0;0
chkNormalizedShift;chkNormalizedShift();1;OMR;Node;0;0
chkOmitSync;chkOmitSync();1;OMR;Node;0;0
chkOpsNodeRequiresConditionCodes;chkOpsNodeRequiresConditionCodes();1;OMR;Node;0;0
chkOrBitOpMem;chkOrBitOpMem();1;OMR;Node;0;0
chkPointsToNonNull;chkPointsToNonNull();1;OMR;Node;0;0
chkPointsToNull;chkPointsToNull();1;OMR;Node;0;0
chkPrimitiveLockedRegion;chkPrimitiveLockedRegion();1;OMR;Node;0;0
chkRarePathForwardArrayCopy;chkRarePathForwardArrayCopy();1;OMR;Node;0;0
chkReadMonitor;chkReadMonitor();1;OMR;Node;0;0
chkReferenceArrayCopy;chkReferenceArrayCopy();1;OMR;Node;0;0
chkReturnIsDummy;chkReturnIsDummy();1;OMR;Node;0;0
chkSafeToSkipTableBoundCheck;chkSafeToSkipTableBoundCheck();1;OMR;Node;0;0
chkSeenRealReference;chkSeenRealReference();1;OMR;Node;0;0
chkSimpleDivCheck;chkSimpleDivCheck();1;OMR;Node;0;0
chkSkipSync;chkSkipSync();1;OMR;Node;0;0
chkSkipWrtBar;chkSkipWrtBar();1;OMR;Node;0;0
chkSkipZeroInitialization;chkSkipZeroInitialization();1;OMR;Node;0;0
chkSourceByteArrayTranslate;chkSourceByteArrayTranslate();1;OMR;Node;0;0
chkSourceCellIsTermChar;chkSourceCellIsTermChar();1;OMR;Node;0;0
chkStaticMonitor;chkStaticMonitor();1;OMR;Node;0;0
chkStoreAlreadyEvaluated;chkStoreAlreadyEvaluated();1;OMR;Node;0;0
chkStoredValueIsIrrelevant;chkStoredValueIsIrrelevant();1;OMR;Node;0;0
chkSyncMethodMonitor;chkSyncMethodMonitor();1;OMR;Node;0;0
chkTableBackedByRawStorage;chkTableBackedByRawStorage();1;OMR;Node;0;0
chkTargetByteArrayTranslate;chkTargetByteArrayTranslate();1;OMR;Node;0;0
chkTermCharNodeIsHint;chkTermCharNodeIsHint();1;OMR;Node;0;0
chkTheVirtualCallNodeForAGuardedInlinedCall;chkTheVirtualCallNodeForAGuardedInlinedCall();1;OMR;Node;0;0
chkThrowInsertedByOSR;chkThrowInsertedByOSR();1;OMR;Node;0;0
chkUnsigned;chkUnsigned();1;OMR;Node;0;0
chkUseCallForFloatToFixedConversion;chkUseCallForFloatToFixedConversion();1;OMR;Node;0;0
chkWordElementArrayCopy;chkWordElementArrayCopy();1;OMR;Node;0;0
chkXorBitOpMem;chkXorBitOpMem();1;OMR;Node;0;0
collectSymbolReferencesInNode;collectSymbolReferencesInNode(class TR_BitVector &,vcount_t);1;OMR;Node;0;0
computeDataType;computeDataType();1;OMR;Node;0;0
computeIsCollectedReference;computeIsCollectedReference();1;OMR;Node;0;0
computeIsInternalPointer;computeIsInternalPointer();1;OMR;Node;0;0
containsCall;containsCall();1;OMR;Node;0;0
containsCompressionSequence;containsCompressionSequence();1;OMR;Node;0;0
containsDoNotPropagateNode;containsDoNotPropagateNode(vcount_t);1;OMR;Node;0;0
containsNode;containsNode(TR::Node *,vcount_t);1;OMR;Node;0;0
copy;copy(TR::Node *);1;OMR;Node;0;0
copy;copy(TR::Node *,int32_t);0;OMR;Node;0;0
copyByteCodeInfo;copyByteCodeInfo(TR::Node *);1;OMR;Node;0;0
copyChildren;copyChildren(TR::Node *,uint16_t,_Bool);1;OMR;Node;0;0
copyNodeExtension;copyNodeExtension(TR::NodeExtension *,uint16_t,size_t);1;OMR;Node;0;0
copyValidProperties;copyValidProperties(TR::Node *,TR::Node *);1;OMR;Node;0;0
countChildren;countChildren(TR::ILOpCodes);1;OMR;Node;0;0
countNumberOfNodesInSubtree;countNumberOfNodesInSubtree(vcount_t);1;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::TreeTop *);1;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *);0;OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,int32_t,TR::TreeTop *);0;OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,int32_t,TR::TreeTop *);0;OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,TR::TreeTop *);0;OMR;Node;0;0
createAddConstantToAddress;createAddConstantToAddress(TR::Node *,intptr_t,TR::Node *);1;OMR;Node;0;0
createAddressNode;createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t);1;OMR;Node;0;0
createAddressNode;createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t,uint8_t);0;OMR;Node;0;0
createAllocationFence;createAllocationFence(TR::Node *,TR::Node *);1;OMR;Node;0;0
createArrayOperation;createArrayOperation(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
createArrayStoreCheckInfo;createArrayStoreCheckInfo();1;OMR;Node;0;0
createArraycopy;createArraycopy(TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
createArraycopy;createArraycopy(TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
createArraycopy;createArraycopy();0;OMR;Node;0;0
createCase;createCase(TR::Node *,TR::TreeTop *,CASECONST_TYPE);1;OMR;Node;0;0
createCompressedRefsAnchor;createCompressedRefsAnchor(TR::Node *);1;OMR;Node;0;0
createConstDead;createConstDead(TR::Node *,TR::DataType,intptrj_t);1;OMR;Node;0;0
createConstOne;createConstOne(TR::Node *,TR::DataType);1;OMR;Node;0;0
createConstZeroValue;createConstZeroValue(TR::Node *,TR::DataType);1;OMR;Node;0;0
createInternal;createInternal(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *);1;OMR;Node;0;0
createLiteralPoolAddress;createLiteralPoolAddress(TR::Node *,size_t);1;OMR;Node;0;0
createLoad;createLoad(TR::Node *,TR::SymbolReference *);1;OMR;Node;0;0
createLoad;createLoad(TR::SymbolReference *);0;OMR;Node;0;0
createLongIfNeeded;createLongIfNeeded();1;OMR;Node;0;0
createNodeExtension;createNodeExtension(uint16_t);1;OMR;Node;0;0
createOnStack;createOnStack(TR::Node *,TR::ILOpCodes,uint16_t);1;OMR;Node;0;0
createRelative32BitFenceNode;createRelative32BitFenceNode(TR::Node *,void *);1;OMR;Node;0;0
createRelative32BitFenceNode;createRelative32BitFenceNode(void *);0;OMR;Node;0;0
createStore;createStore(TR::SymbolReference *,TR::Node *);1;OMR;Node;0;0
createStore;createStore(TR::Node *,TR::SymbolReference *,TR::Node *);0;OMR;Node;0;0
createStore;createStore(TR::SymbolReference *,TR::Node *,TR::ILOpCodes);0;OMR;Node;0;0
createStore;createStore(TR::SymbolReference *,TR::Node *,TR::ILOpCodes,size_t);0;OMR;Node;0;0
createStoresForVar;createStoresForVar(TR::SymbolReference *&,TR::TreeTop *,_Bool);1;OMR;Node;0;0
createVectorConst;createVectorConst(TR::Node *,TR::DataType);1;OMR;Node;0;0
createVectorConversion;createVectorConversion(TR::Node *,TR::DataType);1;OMR;Node;0;0
createWithRoomForFive;createWithRoomForFive(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Node *,TR::Node *,void *);1;OMR;Node;0;0
createWithRoomForOneMore;createWithRoomForOneMore(TR::ILOpCodes,uint16_t,void *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
createWithRoomForThree;createWithRoomForThree(TR::ILOpCodes,TR::Node *,TR::Node *,void *);1;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *,uintptr_t);1;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::Node *,TR::ILOpCodes,uint16_t,TR::SymbolReference *);0;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,uintptr_t,TR::SymbolReference *);0;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::Node *,uintptr_t,TR::SymbolReference *);0;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *);0;OMR;Node;0;0
createbranch;createbranch(TR::ILOpCodes,TR::Node *,TR::TreeTop *);1;OMR;Node;0;0
createif;createif(TR::ILOpCodes,TR::Node *,TR::Node *,TR::TreeTop *);1;OMR;Node;0;0
decFutureUseCount;decFutureUseCount();1;OMR;Node;0;0
decLocalIndex;decLocalIndex();1;OMR;Node;0;0
decReferenceCount;decReferenceCount();1;OMR;Node;0;0
devirtualizeCall;devirtualizeCall(TR::TreeTop *);1;OMR;Node;0;0
divisionCannotOverflow;divisionCannotOverflow();1;OMR;Node;0;0
dontEliminateStores;dontEliminateStores(_Bool);1;OMR;Node;0;0
duplicateTree;duplicateTree(_Bool);1;OMR;Node;0;0
duplicateTreeForCodeMotion;duplicateTreeForCodeMotion();1;OMR;Node;0;0
duplicateTreeWithCommoning;duplicateTreeWithCommoning(TR::Allocator);1;OMR;Node;0;0
duplicateTreeWithCommoningImpl;duplicateTreeWithCommoningImpl(CS2::HashTable<TR::Node *, TR::Node *, TR::Allocator> &);1;OMR;Node;0;0
duplicateTree_DEPRECATED;duplicateTree_DEPRECATED(_Bool);1;OMR;Node;0;0
escapesInColdBlock;escapesInColdBlock();1;OMR;Node;0;0
exceptionsRaised;exceptionsRaised();1;OMR;Node;0;0
extractTheNullCheck;extractTheNullCheck(TR::TreeTop *);1;OMR;Node;0;0
findChild;findChild(TR::ILOpCodes,_Bool);1;OMR;Node;0;0
findChildIndex;findChildIndex(TR::Node *);1;OMR;Node;0;0
freeExtensionIfExists;freeExtensionIfExists();1;OMR;Node;0;0
gatherAllNodesWhichMightKillCondCode;gatherAllNodesWhichMightKillCondCode(vcount_t,TR::list<TR::Node *> &);1;OMR;Node;0;0
get32bitIntegralValue;get32bitIntegralValue();1;OMR;Node;0;0
get64bitIntegralValue;get64bitIntegralValue();1;OMR;Node;0;0
get64bitIntegralValueAsUnsigned;get64bitIntegralValueAsUnsigned();1;OMR;Node;0;0
getAOTMethod;getAOTMethod();1;OMR;Node;0;0
getAddress;getAddress();1;OMR;Node;0;0
getAllocation;getAllocation();1;OMR;Node;0;0
getAndDecChild;getAndDecChild(int32_t);1;OMR;Node;0;0
getArgument;getArgument(int32_t);1;OMR;Node;0;0
getArrayComponentClassInNode;getArrayComponentClassInNode();1;OMR;Node;0;0
getArrayCopyElementType;getArrayCopyElementType();1;OMR;Node;0;0
getArrayStoreClassInNode;getArrayStoreClassInNode();1;OMR;Node;0;0
getArrayStride;getArrayStride();1;OMR;Node;0;0
getBlock;getBlock(_Bool);1;OMR;Node;0;0
getBranchDestination;getBranchDestination();1;OMR;Node;0;0
getByte;getByte();1;OMR;Node;0;0
getByteCodeIndex;getByteCodeIndex();1;OMR;Node;0;0
getByteCodeInfo;getByteCodeInfo();1;OMR;Node;0;0
getCaseConstant;getCaseConstant();1;OMR;Node;0;0
getCaseIndexUpperBound;getCaseIndexUpperBound();1;OMR;Node;0;0
getChild;getChild(int32_t);1;OMR;Node;0;0
getConstValue;getConstValue();1;OMR;Node;0;0
getDataType;getDataType();1;OMR;Node;0;0
getDouble;getDouble();1;OMR;Node;0;0
getDoubleBits;getDoubleBits();1;OMR;Node;0;0
getEvaluationPriority;getEvaluationPriority(TR::CodeGenerator *);1;OMR;Node;0;0
getExtendedChild;getExtendedChild(int32_t);1;OMR;Node;0;0
getFirstArgument;getFirstArgument();1;OMR;Node;0;0
getFirstArgumentIndex;getFirstArgumentIndex();1;OMR;Node;0;0
getFirstChild;getFirstChild();1;OMR;Node;0;0
getFlags;getFlags();1;OMR;Node;0;0
getFloat;getFloat();1;OMR;Node;0;0
getFloatBits;getFloatBits();1;OMR;Node;0;0
getFutureUseCount;getFutureUseCount();1;OMR;Node;0;0
getGlobalIndex;getGlobalIndex();1;OMR;Node;0;0
getGlobalRegisterNumber;getGlobalRegisterNumber();1;OMR;Node;0;0
getHighGlobalRegisterNumber;getHighGlobalRegisterNumber();1;OMR;Node;0;0
getInlinedSiteIndex;getInlinedSiteIndex();1;OMR;Node;0;0
getInt;getInt();1;OMR;Node;0;0
getIsHPREligible;getIsHPREligible();1;OMR;Node;0;0
getLabel;getLabel();1;OMR;Node;0;0
getLastChild;getLastChild();1;OMR;Node;0;0
getLiteralPoolOffset;getLiteralPoolOffset();1;OMR;Node;0;0
getLocalIndex;getLocalIndex();1;OMR;Node;0;0
getLongInt;getLongInt();1;OMR;Node;0;0
getLongIntHigh;getLongIntHigh();1;OMR;Node;0;0
getLongIntLow;getLongIntLow();1;OMR;Node;0;0
getLowGlobalRegisterNumber;getLowGlobalRegisterNumber();1;OMR;Node;0;0
getMaxIntegerPrecision;getMaxIntegerPrecision();1;OMR;Node;0;0
getMethod;getMethod();1;OMR;Node;0;0
getMonitorClass;getMonitorClass(class TR_ResolvedMethod *);1;OMR;Node;0;0
getMonitorClassInNode;getMonitorClassInNode();1;OMR;Node;0;0
getMonitorInfo;getMonitorInfo();1;OMR;Node;0;0
getName;getName(class TR_Debug *);1;OMR;Node;0;0
getNullCheckReference;getNullCheckReference();1;OMR;Node;0;0
getNumArguments;getNumArguments();1;OMR;Node;0;0
getNumChildren;getNumChildren();1;OMR;Node;0;0
getNumRelocations;getNumRelocations();1;OMR;Node;0;0
getNumberOfSlots;getNumberOfSlots();1;OMR;Node;0;0
getOpCode;getOpCode();1;OMR;Node;0;0
getOpCodeValue;getOpCodeValue();1;OMR;Node;0;0
getOverflowCheckOperation;getOverflowCheckOperation();1;OMR;Node;0;0
getOwningMethod;getOwningMethod();1;OMR;Node;0;0
getPinningArrayPointer;getPinningArrayPointer();1;OMR;Node;0;0
getReferenceCount;getReferenceCount();1;OMR;Node;0;0
getRegLoadStoreSymbolReference;getRegLoadStoreSymbolReference();1;OMR;Node;0;0
getRegister;getRegister();1;OMR;Node;0;0
getRelocationDestination;getRelocationDestination(uint32_t);1;OMR;Node;0;0
getRelocationType;getRelocationType();1;OMR;Node;0;0
getReturnCode;getReturnCode(_Bool);1;OMR;Node;0;0
getReturnReason;getReturnReason();1;OMR;Node;0;0
getRoundedSize;getRoundedSize();1;OMR;Node;0;0
getSecondChild;getSecondChild();1;OMR;Node;0;0
getShortInt;getShortInt();1;OMR;Node;0;0
getSize;getSize();1;OMR;Node;0;0
getSourceCellIsTermChar;getSourceCellIsTermChar();1;OMR;Node;0;0
getStoreNode;getStoreNode();1;OMR;Node;0;0
getSymbol;getSymbol();1;OMR;Node;0;0
getSymbolReference;getSymbolReference();1;OMR;Node;0;0
getSymbolReferenceOfAnyType;getSymbolReferenceOfAnyType();1;OMR;Node;0;0
getTableBackedByRawStorage;getTableBackedByRawStorage();1;OMR;Node;0;0
getTermCharNodeIsHint;getTermCharNodeIsHint();1;OMR;Node;0;0
getThirdChild;getThirdChild();1;OMR;Node;0;0
getType;getType();1;OMR;Node;0;0
getTypeSignature;getTypeSignature(int32_t &,enum TR_AllocationKind);1;OMR;Node;0;0
getUnionPropertyA_Type;getUnionPropertyA_Type();1;OMR;Node;0;0
getUnsignedByte;getUnsignedByte();1;OMR;Node;0;0
getUnsignedConstValue;getUnsignedConstValue();1;OMR;Node;0;0
getUnsignedInt;getUnsignedInt();1;OMR;Node;0;0
getUnsignedLongInt;getUnsignedLongInt();1;OMR;Node;0;0
getUnsignedLongIntHigh;getUnsignedLongIntHigh();1;OMR;Node;0;0
getUnsignedLongIntLow;getUnsignedLongIntLow();1;OMR;Node;0;0
getUnsignedShortInt;getUnsignedShortInt();1;OMR;Node;0;0
getUseDefIndex;getUseDefIndex();1;OMR;Node;0;0
getValueChild;getValueChild();1;OMR;Node;0;0
getVirtualCallNodeForGuard;getVirtualCallNodeForGuard();1;OMR;Node;0;0
getVirtualCallTreeForGuard;getVirtualCallTreeForGuard();1;OMR;Node;0;0
getVisitCount;getVisitCount();1;OMR;Node;0;0
hasArrayStoreCheckInfo;hasArrayStoreCheckInfo();1;OMR;Node;0;0
hasArrayStride;hasArrayStride();1;OMR;Node;0;0
hasBeenRun;hasBeenRun();1;OMR;Node;0;0
hasBeenVisitedForHints;hasBeenVisitedForHints();1;OMR;Node;0;0
hasBlock;hasBlock();1;OMR;Node;0;0
hasBranchDestinationNode;hasBranchDestinationNode();1;OMR;Node;0;0
hasChild;hasChild(TR::Node *);1;OMR;Node;0;0
hasDataType;hasDataType();1;OMR;Node;0;0
hasFoldedImplicitNULLCHK;hasFoldedImplicitNULLCHK();1;OMR;Node;0;0
hasMonitorClassInNode;hasMonitorClassInNode();1;OMR;Node;0;0
hasNodeExtension;hasNodeExtension();1;OMR;Node;0;0
hasPinningArrayPointer;hasPinningArrayPointer();1;OMR;Node;0;0
hasRegLoadStoreSymbolReference;hasRegLoadStoreSymbolReference();1;OMR;Node;0;0
hasSymbolReference;hasSymbolReference();1;OMR;Node;0;0
hasSymbolReferenceOfAnyType;hasSymbolReferenceOfAnyType();1;OMR;Node;0;0
hasUnresolvedSymbolReference;hasUnresolvedSymbolReference();1;OMR;Node;0;0
iconst;iconst(int32_t);1;OMR;Node;0;0
iconst;iconst(TR::Node *,int32_t);0;OMR;Node;0;0
incFutureUseCount;incFutureUseCount();1;OMR;Node;0;0
incLocalIndex;incLocalIndex();1;OMR;Node;0;0
incReferenceCount;incReferenceCount();1;OMR;Node;0;0
incVisitCount;incVisitCount();1;OMR;Node;0;0
initializeFutureUseCounts;initializeFutureUseCounts(vcount_t);1;OMR;Node;0;0
isAbstractGuard;isAbstractGuard();1;OMR;Node;0;0
isAdjunct;isAdjunct();1;OMR;Node;0;0
isAndBitOpMem;isAndBitOpMem();1;OMR;Node;0;0
isArrayChkPrimitiveArray1;isArrayChkPrimitiveArray1();1;OMR;Node;0;0
isArrayChkPrimitiveArray2;isArrayChkPrimitiveArray2();1;OMR;Node;0;0
isArrayChkReferenceArray1;isArrayChkReferenceArray1();1;OMR;Node;0;0
isArrayChkReferenceArray2;isArrayChkReferenceArray2();1;OMR;Node;0;0
isArrayCmpLen;isArrayCmpLen();1;OMR;Node;0;0
isArrayCmpSign;isArrayCmpSign();1;OMR;Node;0;0
isArrayCopyCall;isArrayCopyCall();1;OMR;Node;0;0
isArrayTRT;isArrayTRT();1;OMR;Node;0;0
isArraysetLengthMultipleOfPointerSize;isArraysetLengthMultipleOfPointerSize();1;OMR;Node;0;0
isBackwardArrayCopy;isBackwardArrayCopy();1;OMR;Node;0;0
isBigDecimalLoad;isBigDecimalLoad();1;OMR;Node;0;0
isBreakpointGuard;isBreakpointGuard();1;OMR;Node;0;0
isByteToByteTranslate;isByteToByteTranslate();1;OMR;Node;0;0
isByteToCharTranslate;isByteToCharTranslate();1;OMR;Node;0;0
isCharArrayTRT;isCharArrayTRT();1;OMR;Node;0;0
isCharToByteTranslate;isCharToByteTranslate();1;OMR;Node;0;0
isCharToCharTranslate;isCharToCharTranslate();1;OMR;Node;0;0
isClassPointerConstant;isClassPointerConstant();1;OMR;Node;0;0
isClassUnloadingConst;isClassUnloadingConst();1;OMR;Node;0;0
isConstZeroBytes;isConstZeroBytes();1;OMR;Node;0;0
isConstZeroValue;isConstZeroValue();1;OMR;Node;0;0
isCopyToNewVirtualRegister;isCopyToNewVirtualRegister();1;OMR;Node;0;0
isDirectMemoryUpdate;isDirectMemoryUpdate();1;OMR;Node;0;0
isDirectMethodGuard;isDirectMethodGuard();1;OMR;Node;0;0
isDoNotPropagateNode;isDoNotPropagateNode();1;OMR;Node;0;0
isDontMoveUnderBranch;isDontMoveUnderBranch();1;OMR;Node;0;0
isDontTransformArrayCopyCall;isDontTransformArrayCopyCall();1;OMR;Node;0;0
isDualCyclic;isDualCyclic();1;OMR;Node;0;0
isDualHigh;isDualHigh();1;OMR;Node;0;0
isDummyGuard;isDummyGuard();1;OMR;Node;0;0
isEligibleForHighWordOpcode;isEligibleForHighWordOpcode();1;OMR;Node;0;0
isExtendedTo32BitAtSource;isExtendedTo32BitAtSource();1;OMR;Node;0;0
isExtendedTo64BitAtSource;isExtendedTo64BitAtSource();1;OMR;Node;0;0
isFPStrictCompliant;isFPStrictCompliant();1;OMR;Node;0;0
isFloatToFixedConversion;isFloatToFixedConversion();1;OMR;Node;0;0
isForwardArrayCopy;isForwardArrayCopy();1;OMR;Node;0;0
isGCSafePointWithSymRef;isGCSafePointWithSymRef();1;OMR;Node;0;0
isHCRGuard;isHCRGuard();1;OMR;Node;0;0
isHalfWordElementArrayCopy;isHalfWordElementArrayCopy();1;OMR;Node;0;0
isHeapObjectWrtBar;isHeapObjectWrtBar();1;OMR;Node;0;0
isHeapificationAlloc;isHeapificationAlloc();1;OMR;Node;0;0
isHeapificationStore;isHeapificationStore();1;OMR;Node;0;0
isHierarchyGuard;isHierarchyGuard();1;OMR;Node;0;0
isHighWordZero;isHighWordZero();1;OMR;Node;0;0
isInterfaceGuard;isInterfaceGuard();1;OMR;Node;0;0
isInternalPointer;isInternalPointer();1;OMR;Node;0;0
isInvalid8BitGlobalRegister;isInvalid8BitGlobalRegister();1;OMR;Node;0;0
isLegalCallToCreate;isLegalCallToCreate(TR::ILOpCodes);1;OMR;Node;0;0
isLikelyStackWrtBar;isLikelyStackWrtBar();1;OMR;Node;0;0
isLiveMonitorInitStore;isLiveMonitorInitStore();1;OMR;Node;0;0
isLoadAndTest;isLoadAndTest();1;OMR;Node;0;0
isLoadFence;isLoadFence();1;OMR;Node;0;0
isLocalObjectMonitor;isLocalObjectMonitor();1;OMR;Node;0;0
isMaxLoopIterationGuard;isMaxLoopIterationGuard();1;OMR;Node;0;0
isMethodEnterExitGuard;isMethodEnterExitGuard();1;OMR;Node;0;0
isMethodPointerConstant;isMethodPointerConstant();1;OMR;Node;0;0
isMutableCallSiteTargetGuard;isMutableCallSiteTargetGuard();1;OMR;Node;0;0
isNOPLongStore;isNOPLongStore();1;OMR;Node;0;0
isNegative;isNegative();1;OMR;Node;0;0
isNoArrayStoreCheckArrayCopy;isNoArrayStoreCheckArrayCopy();1;OMR;Node;0;0
isNodeCreatedByPRE;isNodeCreatedByPRE();1;OMR;Node;0;0
isNodeRecognizedArrayCopyCall;isNodeRecognizedArrayCopyCall();1;OMR;Node;0;0
isNonDegenerateArrayCopy;isNonDegenerateArrayCopy();1;OMR;Node;0;0
isNonHeapObjectWrtBar;isNonHeapObjectWrtBar();1;OMR;Node;0;0
isNonNegative;isNonNegative();1;OMR;Node;0;0
isNonNull;isNonNull();1;OMR;Node;0;0
isNonPositive;isNonPositive();1;OMR;Node;0;0
isNonZero;isNonZero();1;OMR;Node;0;0
isNonoverriddenGuard;isNonoverriddenGuard();1;OMR;Node;0;0
isNopableInlineGuard;isNopableInlineGuard();1;OMR;Node;0;0
isNormalizedShift;isNormalizedShift();1;OMR;Node;0;0
isNotCollected;isNotCollected();1;OMR;Node;0;0
isNull;isNull();1;OMR;Node;0;0
isOSRGuard;isOSRGuard();1;OMR;Node;0;0
isOrBitOpMem;isOrBitOpMem();1;OMR;Node;0;0
isPositive;isPositive();1;OMR;Node;0;0
isPowerOfTwo;isPowerOfTwo();1;OMR;Node;0;0
isPreparedForDirectJNI;isPreparedForDirectJNI();1;OMR;Node;0;0
isPrimitiveLockedRegion;isPrimitiveLockedRegion();1;OMR;Node;0;0
isPrivatizedInlinerArg;isPrivatizedInlinerArg();1;OMR;Node;0;0
isProfiledGuard;isProfiledGuard();1;OMR;Node;0;0
isProfilingCode;isProfilingCode();1;OMR;Node;0;0
isPureCall;isPureCall();1;OMR;Node;0;0
isRarePathForwardArrayCopy;isRarePathForwardArrayCopy();1;OMR;Node;0;0
isReadMonitor;isReadMonitor();1;OMR;Node;0;0
isReferenceArrayCopy;isReferenceArrayCopy();1;OMR;Node;0;0
isReferenceNonNull;isReferenceNonNull();1;OMR;Node;0;0
isRematerializable;isRematerializable(TR::Node *,_Bool);1;OMR;Node;0;0
isRematerializeable;isRematerializeable();1;OMR;Node;0;0
isReturnDummy;isReturnDummy();1;OMR;Node;0;0
isSafeForCGToFastPathUnsafeCall;isSafeForCGToFastPathUnsafeCall();1;OMR;Node;0;0
isSafeToReplaceNode;isSafeToReplaceNode(TR::TreeTop *);1;OMR;Node;0;0
isSafeToSkipTableBoundCheck;isSafeToSkipTableBoundCheck();1;OMR;Node;0;0
isSeenRealReference;isSeenRealReference();1;OMR;Node;0;0
isSideEffectGuard;isSideEffectGuard();1;OMR;Node;0;0
isSignExtendedAtSource;isSignExtendedAtSource();1;OMR;Node;0;0
isSignExtendedTo32BitAtSource;isSignExtendedTo32BitAtSource();1;OMR;Node;0;0
isSignExtendedTo64BitAtSource;isSignExtendedTo64BitAtSource();1;OMR;Node;0;0
isSimpleDivCheck;isSimpleDivCheck();1;OMR;Node;0;0
isSingleRef;isSingleRef();1;OMR;Node;0;0
isSingleRefUnevaluated;isSingleRefUnevaluated();1;OMR;Node;0;0
isSourceByteArrayTranslate;isSourceByteArrayTranslate();1;OMR;Node;0;0
isStaticMonitor;isStaticMonitor();1;OMR;Node;0;0
isStopTheWorldGuard;isStopTheWorldGuard();1;OMR;Node;0;0
isStoreAlreadyEvaluated;isStoreAlreadyEvaluated();1;OMR;Node;0;0
isStoreFence;isStoreFence();1;OMR;Node;0;0
isSyncMethodMonitor;isSyncMethodMonitor();1;OMR;Node;0;0
isTargetByteArrayTranslate;isTargetByteArrayTranslate();1;OMR;Node;0;0
isTernaryHigh;isTernaryHigh();1;OMR;Node;0;0
isTheVirtualCallNodeForAGuardedInlinedCall;isTheVirtualCallNodeForAGuardedInlinedCall();1;OMR;Node;0;0
isTheVirtualGuardForAGuardedInlinedCall;isTheVirtualGuardForAGuardedInlinedCall();1;OMR;Node;0;0
isThisPointer;isThisPointer();1;OMR;Node;0;0
isUnneededConversion;isUnneededConversion();1;OMR;Node;0;0
isUnneededIALoad;isUnneededIALoad();1;OMR;Node;0;0
isUnsafeStaticWrtBar;isUnsafeStaticWrtBar();1;OMR;Node;0;0
isUnsafeToDuplicateAndExecuteAgain;isUnsafeToDuplicateAndExecuteAgain(int32_t *);1;OMR;Node;0;0
isUnsigned;isUnsigned();1;OMR;Node;0;0
isUseBranchOnCount;isUseBranchOnCount();1;OMR;Node;0;0
isVersionableIfWithMaxExpr;isVersionableIfWithMaxExpr();1;OMR;Node;0;0
isVersionableIfWithMinExpr;isVersionableIfWithMinExpr();1;OMR;Node;0;0
isWordElementArrayCopy;isWordElementArrayCopy();1;OMR;Node;0;0
isXorBitOpMem;isXorBitOpMem();1;OMR;Node;0;0
isZero;isZero();1;OMR;Node;0;0
isZeroExtendedAtSource;isZeroExtendedAtSource();1;OMR;Node;0;0
isZeroExtendedTo32BitAtSource;isZeroExtendedTo32BitAtSource();1;OMR;Node;0;0
isZeroExtendedTo64BitAtSource;isZeroExtendedTo64BitAtSource();1;OMR;Node;0;0
isZeroExtension;isZeroExtension();1;OMR;Node;0;0
isl2aForCompressedArrayletLeafLoad;isl2aForCompressedArrayletLeafLoad();1;OMR;Node;0;0
iuconst;iuconst(uint32_t);1;OMR;Node;0;0
iuconst;iuconst(TR::Node *,uint32_t);0;OMR;Node;0;0
lconst;lconst(int64_t);1;OMR;Node;0;0
lconst;lconst(TR::Node *,int64_t);0;OMR;Node;0;0
luconst;luconst(uint64_t);1;OMR;Node;0;0
luconst;luconst(TR::Node *,uint64_t);0;OMR;Node;0;0
markedAllocationCanBeRemoved;markedAllocationCanBeRemoved();1;OMR;Node;0;0
mayKill;mayKill(_Bool);1;OMR;Node;0;0
mayModifyValue;mayModifyValue(TR::SymbolReference *);1;OMR;Node;0;0
mayUse;mayUse();1;OMR;Node;0;0
mightHaveVolatileSymbolReference;mightHaveVolatileSymbolReference();1;OMR;Node;0;0
needsPrecisionAdjustment;needsPrecisionAdjustment();1;OMR;Node;0;0
needsSignExtension;needsSignExtension();1;OMR;Node;0;0
nodeMightKillCondCode;nodeMightKillCondCode();1;OMR;Node;0;0
nodeRequiresConditionCodes;nodeRequiresConditionCodes();1;OMR;Node;0;0
normalizeNanValues;normalizeNanValues();1;OMR;Node;0;0
notifyChangeToValueOfNode;notifyChangeToValueOfNode();1;OMR;Node;0;0
oneParentSupportsLazyClobber;oneParentSupportsLazyClobber(TR::Compilation *);1;OMR;Node;0;0
operator new;operator new(size_t,TR::NodePool &);1;OMR;Node;0;0
operator new;operator new(size_t,void *);0;OMR;Node;0;0
operator=;operator=(const TR::Node &);1;OMR;Node;0;0
parentSupportsLazyClobber;parentSupportsLazyClobber();1;OMR;Node;0;0
performsVolatileAccess;performsVolatileAccess(vcount_t);1;OMR;Node;0;0
pointsToNonNull;pointsToNonNull();1;OMR;Node;0;0
pointsToNull;pointsToNull();1;OMR;Node;0;0
printAllocationCanBeRemoved;printAllocationCanBeRemoved();1;OMR;Node;0;0
printAndBitOpMem;printAndBitOpMem();1;OMR;Node;0;0
printArrayCmpLen;printArrayCmpLen();1;OMR;Node;0;0
printArrayCmpSign;printArrayCmpSign();1;OMR;Node;0;0
printArrayTRT;printArrayTRT();1;OMR;Node;0;0
printCanDesynchronizeCall;printCanDesynchronizeCall();1;OMR;Node;0;0
printCanSkipZeroInitialization;printCanSkipZeroInitialization();1;OMR;Node;0;0
printCannotOverflow;printCannotOverflow();1;OMR;Node;0;0
printCannotTrackLocalStringUses;printCannotTrackLocalStringUses();1;OMR;Node;0;0
printCannotTrackLocalUses;printCannotTrackLocalUses();1;OMR;Node;0;0
printCharArrayTRT;printCharArrayTRT();1;OMR;Node;0;0
printContainsCompressionSequence;printContainsCompressionSequence();1;OMR;Node;0;0
printCopyToNewVirtualRegister;printCopyToNewVirtualRegister();1;OMR;Node;0;0
printEscapesInColdBlock;printEscapesInColdBlock();1;OMR;Node;0;0
printFullSubtree;printFullSubtree();1;OMR;Node;0;0
printHasFoldedImplicitNULLCHK;printHasFoldedImplicitNULLCHK();1;OMR;Node;0;0
printIsAbstractGuard;printIsAbstractGuard();1;OMR;Node;0;0
printIsArrayChkPrimitiveArray1;printIsArrayChkPrimitiveArray1();1;OMR;Node;0;0
printIsArrayChkPrimitiveArray2;printIsArrayChkPrimitiveArray2();1;OMR;Node;0;0
printIsArrayChkReferenceArray1;printIsArrayChkReferenceArray1();1;OMR;Node;0;0
printIsArrayChkReferenceArray2;printIsArrayChkReferenceArray2();1;OMR;Node;0;0
printIsBackwardArrayCopy;printIsBackwardArrayCopy();1;OMR;Node;0;0
printIsBreakpointGuard;printIsBreakpointGuard();1;OMR;Node;0;0
printIsByteToByteTranslate;printIsByteToByteTranslate();1;OMR;Node;0;0
printIsByteToCharTranslate;printIsByteToCharTranslate();1;OMR;Node;0;0
printIsCharToByteTranslate;printIsCharToByteTranslate();1;OMR;Node;0;0
printIsCharToCharTranslate;printIsCharToCharTranslate();1;OMR;Node;0;0
printIsClassPointerConstant;printIsClassPointerConstant();1;OMR;Node;0;0
printIsDirectMemoryUpdate;printIsDirectMemoryUpdate();1;OMR;Node;0;0
printIsDirectMethodGuard;printIsDirectMethodGuard();1;OMR;Node;0;0
printIsDontMoveUnderBranch;printIsDontMoveUnderBranch();1;OMR;Node;0;0
printIsDontTransformArrayCopyCall;printIsDontTransformArrayCopyCall();1;OMR;Node;0;0
printIsDummyGuard;printIsDummyGuard();1;OMR;Node;0;0
printIsFPStrictCompliant;printIsFPStrictCompliant();1;OMR;Node;0;0
printIsForwardArrayCopy;printIsForwardArrayCopy();1;OMR;Node;0;0
printIsHCRGuard;printIsHCRGuard();1;OMR;Node;0;0
printIsHPREligible;printIsHPREligible();1;OMR;Node;0;0
printIsHalfWordElementArrayCopy;printIsHalfWordElementArrayCopy();1;OMR;Node;0;0
printIsHeapObjectWrtBar;printIsHeapObjectWrtBar();1;OMR;Node;0;0
printIsHeapificationAlloc;printIsHeapificationAlloc();1;OMR;Node;0;0
printIsHeapificationStore;printIsHeapificationStore();1;OMR;Node;0;0
printIsHierarchyGuard;printIsHierarchyGuard();1;OMR;Node;0;0
printIsHighWordZero;printIsHighWordZero();1;OMR;Node;0;0
printIsInterfaceGuard;printIsInterfaceGuard();1;OMR;Node;0;0
printIsInternalPointer;printIsInternalPointer();1;OMR;Node;0;0
printIsInvalid8BitGlobalRegister;printIsInvalid8BitGlobalRegister();1;OMR;Node;0;0
printIsLiveMonitorInitStore;printIsLiveMonitorInitStore();1;OMR;Node;0;0
printIsLocalObjectMonitor;printIsLocalObjectMonitor();1;OMR;Node;0;0
printIsMaxLoopIterationGuard;printIsMaxLoopIterationGuard();1;OMR;Node;0;0
printIsMethodEnterExitGuard;printIsMethodEnterExitGuard();1;OMR;Node;0;0
printIsMethodPointerConstant;printIsMethodPointerConstant();1;OMR;Node;0;0
printIsMutableCallSiteTargetGuard;printIsMutableCallSiteTargetGuard();1;OMR;Node;0;0
printIsNOPLongStore;printIsNOPLongStore();1;OMR;Node;0;0
printIsNoArrayStoreCheckArrayCopy;printIsNoArrayStoreCheckArrayCopy();1;OMR;Node;0;0
printIsNodeCreatedByPRE;printIsNodeCreatedByPRE();1;OMR;Node;0;0
printIsNodeRecognizedArrayCopyCall;printIsNodeRecognizedArrayCopyCall();1;OMR;Node;0;0
printIsNonHeapObjectWrtBar;printIsNonHeapObjectWrtBar();1;OMR;Node;0;0
printIsNonNegative;printIsNonNegative();1;OMR;Node;0;0
printIsNonPositive;printIsNonPositive();1;OMR;Node;0;0
printIsNonZero;printIsNonZero();1;OMR;Node;0;0
printIsNonoverriddenGuard;printIsNonoverriddenGuard();1;OMR;Node;0;0
printIsNormalizedShift;printIsNormalizedShift();1;OMR;Node;0;0
printIsOSRGuard;printIsOSRGuard();1;OMR;Node;0;0
printIsOmitSync;printIsOmitSync();1;OMR;Node;0;0
printIsPrimitiveLockedRegion;printIsPrimitiveLockedRegion();1;OMR;Node;0;0
printIsPrivatizedInlinerArg;printIsPrivatizedInlinerArg();1;OMR;Node;0;0
printIsProfiledGuard;printIsProfiledGuard();1;OMR;Node;0;0
printIsProfilingCode;printIsProfilingCode();1;OMR;Node;0;0
printIsRarePathForwardArrayCopy;printIsRarePathForwardArrayCopy();1;OMR;Node;0;0
printIsReadMonitor;printIsReadMonitor();1;OMR;Node;0;0
printIsReferenceArrayCopy;printIsReferenceArrayCopy();1;OMR;Node;0;0
printIsReferenceNonNull;printIsReferenceNonNull();1;OMR;Node;0;0
printIsSafeToSkipTableBoundCheck;printIsSafeToSkipTableBoundCheck();1;OMR;Node;0;0
printIsSeenRealReference;printIsSeenRealReference();1;OMR;Node;0;0
printIsSideEffectGuard;printIsSideEffectGuard();1;OMR;Node;0;0
printIsSignExtendedTo32BitAtSource;printIsSignExtendedTo32BitAtSource();1;OMR;Node;0;0
printIsSignExtendedTo64BitAtSource;printIsSignExtendedTo64BitAtSource();1;OMR;Node;0;0
printIsSimpleDivCheck;printIsSimpleDivCheck();1;OMR;Node;0;0
printIsSkipSync;printIsSkipSync();1;OMR;Node;0;0
printIsSkipWrtBar;printIsSkipWrtBar();1;OMR;Node;0;0
printIsStaticMonitor;printIsStaticMonitor();1;OMR;Node;0;0
printIsStoredValueIsIrrelevant;printIsStoredValueIsIrrelevant();1;OMR;Node;0;0
printIsSyncMethodMonitor;printIsSyncMethodMonitor();1;OMR;Node;0;0
printIsTheVirtualCallNodeForAGuardedInlinedCall;printIsTheVirtualCallNodeForAGuardedInlinedCall();1;OMR;Node;0;0
printIsThrowInsertedByOSR;printIsThrowInsertedByOSR();1;OMR;Node;0;0
printIsUnneededConversion;printIsUnneededConversion();1;OMR;Node;0;0
printIsUnsigned;printIsUnsigned();1;OMR;Node;0;0
printIsWordElementArrayCopy;printIsWordElementArrayCopy();1;OMR;Node;0;0
printIsZero;printIsZero();1;OMR;Node;0;0
printIsZeroExtendedTo32BitAtSource;printIsZeroExtendedTo32BitAtSource();1;OMR;Node;0;0
printIsZeroExtendedTo64BitAtSource;printIsZeroExtendedTo64BitAtSource();1;OMR;Node;0;0
printNeedsPrecisionAdjustment;printNeedsPrecisionAdjustment();1;OMR;Node;0;0
printNeedsSignExtension;printNeedsSignExtension();1;OMR;Node;0;0
printNormalizeNanValues;printNormalizeNanValues();1;OMR;Node;0;0
printOrBitOpMem;printOrBitOpMem();1;OMR;Node;0;0
printParentSupportsLazyClobber;printParentSupportsLazyClobber();1;OMR;Node;0;0
printPointsToNonNull;printPointsToNonNull();1;OMR;Node;0;0
printPointsToNull;printPointsToNull();1;OMR;Node;0;0
printRequiresConditionCodes;printRequiresConditionCodes();1;OMR;Node;0;0
printReturnIsDummy;printReturnIsDummy();1;OMR;Node;0;0
printSetSourceIsByteArrayTranslate;printSetSourceIsByteArrayTranslate();1;OMR;Node;0;0
printSetTableBackedByRawStorage;printSetTableBackedByRawStorage();1;OMR;Node;0;0
printSetTargetIsByteArrayTranslate;printSetTargetIsByteArrayTranslate();1;OMR;Node;0;0
printSetTermCharNodeIsHint;printSetTermCharNodeIsHint();1;OMR;Node;0;0
printSetUseSignExtensionMode;printSetUseSignExtensionMode();1;OMR;Node;0;0
printSkipSignExtension;printSkipSignExtension();1;OMR;Node;0;0
printSourceCellIsTermChar;printSourceCellIsTermChar();1;OMR;Node;0;0
printStoreAlreadyEvaluated;printStoreAlreadyEvaluated();1;OMR;Node;0;0
printUseCallForFloatToFixedConversion;printUseCallForFloatToFixedConversion();1;OMR;Node;0;0
printXorBitOpMem;printXorBitOpMem();1;OMR;Node;0;0
recreate;recreate(TR::Node *,TR::ILOpCodes);1;OMR;Node;0;0
recreateAndCopyValidPropertiesImpl;recreateAndCopyValidPropertiesImpl(TR::Node *,TR::ILOpCodes,TR::SymbolReference *);1;OMR;Node;0;0
recreateWithSymRef;recreateWithSymRef(TR::Node *,TR::ILOpCodes,TR::SymbolReference *);1;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *);1;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::SymbolReference *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
recursivelyDecReferenceCount;recursivelyDecReferenceCount();1;OMR;Node;0;0
recursivelyDecReferenceCountFromCodeGen;recursivelyDecReferenceCountFromCodeGen();1;OMR;Node;0;0
removeAllChildren;removeAllChildren();1;OMR;Node;0;0
removeChild;removeChild(int32_t);1;OMR;Node;0;0
removeLastChild;removeLastChild();1;OMR;Node;0;0
requiresRegisterPair;requiresRegisterPair(TR::Compilation *);1;OMR;Node;0;0
resetFlagsForCodeMotion;resetFlagsForCodeMotion();1;OMR;Node;0;0
resetIsHPREligible;resetIsHPREligible();1;OMR;Node;0;0
resetIsNodeCreatedByPRE;resetIsNodeCreatedByPRE();1;OMR;Node;0;0
resetIsTheVirtualCallNodeForAGuardedInlinedCall;resetIsTheVirtualCallNodeForAGuardedInlinedCall();1;OMR;Node;0;0
resetIsTheVirtualGuardForAGuardedInlinedCall;resetIsTheVirtualGuardForAGuardedInlinedCall();1;OMR;Node;0;0
resetVisitCounts;resetVisitCounts(vcount_t);1;OMR;Node;0;0
reverseBranch;reverseBranch(TR::TreeTop *);1;OMR;Node;0;0
rotateChildren;rotateChildren(int32_t,int32_t);1;OMR;Node;0;0
safeToDoRecursiveDecrement;safeToDoRecursiveDecrement();1;OMR;Node;0;0
sconst;sconst(int16_t);1;OMR;Node;0;0
sconst;sconst(TR::Node *,int16_t);0;OMR;Node;0;0
self;self();1;OMR;Node;0;0
set64bitIntegralValue;set64bitIntegralValue(int64_t);1;OMR;Node;0;0
setAddress;setAddress(uint64_t);1;OMR;Node;0;0
setAlignTLHAlloc;setAlignTLHAlloc(_Bool);1;OMR;Node;0;0
setAllocation;setAllocation(TR::Node *);1;OMR;Node;0;0
setAllocationCanBeRemoved;setAllocationCanBeRemoved(_Bool);1;OMR;Node;0;0
setAndBitOpMem;setAndBitOpMem(_Bool);1;OMR;Node;0;0
setAndIncChild;setAndIncChild(int32_t,TR::Node *);1;OMR;Node;0;0
setAndIncValueChild;setAndIncValueChild(TR::Node *);1;OMR;Node;0;0
setArrayChkPrimitiveArray1;setArrayChkPrimitiveArray1(_Bool);1;OMR;Node;0;0
setArrayChkPrimitiveArray2;setArrayChkPrimitiveArray2(_Bool);1;OMR;Node;0;0
setArrayChkReferenceArray1;setArrayChkReferenceArray1(_Bool);1;OMR;Node;0;0
setArrayChkReferenceArray2;setArrayChkReferenceArray2(_Bool);1;OMR;Node;0;0
setArrayCmpLen;setArrayCmpLen(_Bool);1;OMR;Node;0;0
setArrayCmpSign;setArrayCmpSign(_Bool);1;OMR;Node;0;0
setArrayComponentClassInNode;setArrayComponentClassInNode(class TR_OpaqueClassBlock *);1;OMR;Node;0;0
setArrayCopyElementType;setArrayCopyElementType(TR::DataType);1;OMR;Node;0;0
setArrayStoreClassInNode;setArrayStoreClassInNode(class TR_OpaqueClassBlock *);1;OMR;Node;0;0
setArrayStride;setArrayStride(int32_t);1;OMR;Node;0;0
setArrayTRT;setArrayTRT(_Bool);1;OMR;Node;0;0
setArraysetLengthMultipleOfPointerSize;setArraysetLengthMultipleOfPointerSize(_Bool);1;OMR;Node;0;0
setBackwardArrayCopy;setBackwardArrayCopy(_Bool);1;OMR;Node;0;0
setBlock;setBlock(TR::Block *);1;OMR;Node;0;0
setBranchDestination;setBranchDestination(TR::TreeTop *);1;OMR;Node;0;0
setByte;setByte(int8_t);1;OMR;Node;0;0
setByteCodeIndex;setByteCodeIndex(uint32_t);1;OMR;Node;0;0
setByteCodeInfo;setByteCodeInfo(const TR_ByteCodeInfo &);1;OMR;Node;0;0
setCanSkipZeroInitialization;setCanSkipZeroInitialization(_Bool);1;OMR;Node;0;0
setCannotOverflow;setCannotOverflow(_Bool);1;OMR;Node;0;0
setCannotTrackLocalStringUses;setCannotTrackLocalStringUses(_Bool);1;OMR;Node;0;0
setCannotTrackLocalUses;setCannotTrackLocalUses(_Bool);1;OMR;Node;0;0
setCaseConstant;setCaseConstant(CASECONST_TYPE);1;OMR;Node;0;0
setCharArrayTRT;setCharArrayTRT(_Bool);1;OMR;Node;0;0
setChild;setChild(int32_t,TR::Node *);1;OMR;Node;0;0
setConstValue;setConstValue(int64_t);1;OMR;Node;0;0
setContainsCall;setContainsCall(_Bool);1;OMR;Node;0;0
setContainsCompressionSequence;setContainsCompressionSequence(_Bool);1;OMR;Node;0;0
setCopyToNewVirtualRegister;setCopyToNewVirtualRegister(_Bool);1;OMR;Node;0;0
setDataType;setDataType(TR::DataType);1;OMR;Node;0;0
setDesynchronizeCall;setDesynchronizeCall(_Bool);1;OMR;Node;0;0
setDirectMemoryUpdate;setDirectMemoryUpdate(_Bool);1;OMR;Node;0;0
setDontTransformArrayCopyCall;setDontTransformArrayCopyCall();1;OMR;Node;0;0
setDouble;setDouble(double);1;OMR;Node;0;0
setDoubleBits;setDoubleBits(uint64_t);1;OMR;Node;0;0
setEscapesInColdBlock;setEscapesInColdBlock(_Bool);1;OMR;Node;0;0
setEvaluationPriority;setEvaluationPriority(int32_t);1;OMR;Node;0;0
setFirst;setFirst(TR::Node *);1;OMR;Node;0;0
setFlags;setFlags(flags32_t);1;OMR;Node;0;0
setFloat;setFloat(float);1;OMR;Node;0;0
setFloatBits;setFloatBits(uint32_t);1;OMR;Node;0;0
setForwardArrayCopy;setForwardArrayCopy(_Bool);1;OMR;Node;0;0
setFutureUseCount;setFutureUseCount(scount_t);1;OMR;Node;0;0
setGlobalIndex;setGlobalIndex(ncount_t);1;OMR;Node;0;0
setGlobalRegisterNumber;setGlobalRegisterNumber(TR_GlobalRegisterNumber);1;OMR;Node;0;0
setHalfWordElementArrayCopy;setHalfWordElementArrayCopy(_Bool);1;OMR;Node;0;0
setHasBeenVisitedForHints;setHasBeenVisitedForHints(_Bool);1;OMR;Node;0;0
setHasFoldedImplicitNULLCHK;setHasFoldedImplicitNULLCHK(_Bool);1;OMR;Node;0;0
setHasMonitorClassInNode;setHasMonitorClassInNode(_Bool);1;OMR;Node;0;0
setHasNodeExtension;setHasNodeExtension(_Bool);1;OMR;Node;0;0
setHeapificationAlloc;setHeapificationAlloc(_Bool);1;OMR;Node;0;0
setHeapificationStore;setHeapificationStore(_Bool);1;OMR;Node;0;0
setHighGlobalRegisterNumber;setHighGlobalRegisterNumber(TR_GlobalRegisterNumber);1;OMR;Node;0;0
setInlinedSiteIndex;setInlinedSiteIndex(int16_t);1;OMR;Node;0;0
setInt;setInt(int32_t);1;OMR;Node;0;0
setIsAbstractGuard;setIsAbstractGuard();1;OMR;Node;0;0
setIsAdjunct;setIsAdjunct(_Bool);1;OMR;Node;0;0
setIsBigDecimalLoad;setIsBigDecimalLoad();1;OMR;Node;0;0
setIsBreakpointGuard;setIsBreakpointGuard();1;OMR;Node;0;0
setIsClassPointerConstant;setIsClassPointerConstant(_Bool);1;OMR;Node;0;0
setIsDirectMethodGuard;setIsDirectMethodGuard(_Bool);1;OMR;Node;0;0
setIsDontMoveUnderBranch;setIsDontMoveUnderBranch(_Bool);1;OMR;Node;0;0
setIsDummyGuard;setIsDummyGuard();1;OMR;Node;0;0
setIsFPStrictCompliant;setIsFPStrictCompliant(_Bool);1;OMR;Node;0;0
setIsHCRGuard;setIsHCRGuard();1;OMR;Node;0;0
setIsHPREligible;setIsHPREligible();1;OMR;Node;0;0
setIsHeapObjectWrtBar;setIsHeapObjectWrtBar(_Bool);1;OMR;Node;0;0
setIsHierarchyGuard;setIsHierarchyGuard();1;OMR;Node;0;0
setIsHighWordZero;setIsHighWordZero(_Bool);1;OMR;Node;0;0
setIsInterfaceGuard;setIsInterfaceGuard();1;OMR;Node;0;0
setIsInternalPointer;setIsInternalPointer(_Bool);1;OMR;Node;0;0
setIsInvalid8BitGlobalRegister;setIsInvalid8BitGlobalRegister(_Bool);1;OMR;Node;0;0
setIsLoadAndTest;setIsLoadAndTest(_Bool);1;OMR;Node;0;0
setIsLoadFence;setIsLoadFence();1;OMR;Node;0;0
setIsMaxLoopIterationGuard;setIsMaxLoopIterationGuard(_Bool);1;OMR;Node;0;0
setIsMethodEnterExitGuard;setIsMethodEnterExitGuard(_Bool);1;OMR;Node;0;0
setIsMethodPointerConstant;setIsMethodPointerConstant(_Bool);1;OMR;Node;0;0
setIsMutableCallSiteTargetGuard;setIsMutableCallSiteTargetGuard();1;OMR;Node;0;0
setIsNodeCreatedByPRE;setIsNodeCreatedByPRE();1;OMR;Node;0;0
setIsNonHeapObjectWrtBar;setIsNonHeapObjectWrtBar(_Bool);1;OMR;Node;0;0
setIsNonNegative;setIsNonNegative(_Bool);1;OMR;Node;0;0
setIsNonNull;setIsNonNull(_Bool);1;OMR;Node;0;0
setIsNonPositive;setIsNonPositive(_Bool);1;OMR;Node;0;0
setIsNonZero;setIsNonZero(_Bool);1;OMR;Node;0;0
setIsNonoverriddenGuard;setIsNonoverriddenGuard();1;OMR;Node;0;0
setIsNotRematerializeable;setIsNotRematerializeable();1;OMR;Node;0;0
setIsNull;setIsNull(_Bool);1;OMR;Node;0;0
setIsOSRGuard;setIsOSRGuard();1;OMR;Node;0;0
setIsPowerOfTwo;setIsPowerOfTwo(_Bool);1;OMR;Node;0;0
setIsPrivatizedInlinerArg;setIsPrivatizedInlinerArg(_Bool);1;OMR;Node;0;0
setIsProfiledGuard;setIsProfiledGuard();1;OMR;Node;0;0
setIsProfilingCode;setIsProfilingCode();1;OMR;Node;0;0
setIsSafeForCGToFastPathUnsafeCall;setIsSafeForCGToFastPathUnsafeCall(_Bool);1;OMR;Node;0;0
setIsSafeToSkipTableBoundCheck;setIsSafeToSkipTableBoundCheck(_Bool);1;OMR;Node;0;0
setIsSideEffectGuard;setIsSideEffectGuard();1;OMR;Node;0;0
setIsStoreFence;setIsStoreFence();1;OMR;Node;0;0
setIsTheVirtualCallNodeForAGuardedInlinedCall;setIsTheVirtualCallNodeForAGuardedInlinedCall();1;OMR;Node;0;0
setIsUnsafeStaticWrtBar;setIsUnsafeStaticWrtBar(_Bool);1;OMR;Node;0;0
setIsUseBranchOnCount;setIsUseBranchOnCount(_Bool);1;OMR;Node;0;0
setIsVersionableIfWithMaxExpr;setIsVersionableIfWithMaxExpr(TR::Compilation *);1;OMR;Node;0;0
setIsVersionableIfWithMinExpr;setIsVersionableIfWithMinExpr(TR::Compilation *);1;OMR;Node;0;0
setIsZero;setIsZero(_Bool);1;OMR;Node;0;0
setLabel;setLabel(TR::LabelSymbol *);1;OMR;Node;0;0
setLikelyStackWrtBar;setLikelyStackWrtBar(_Bool);1;OMR;Node;0;0
setLiteralPoolOffset;setLiteralPoolOffset(size_t,size_t);1;OMR;Node;0;0
setLiveMonitorInitStore;setLiveMonitorInitStore(_Bool);1;OMR;Node;0;0
setLocalIndex;setLocalIndex(scount_t);1;OMR;Node;0;0
setLocalObjectMonitor;setLocalObjectMonitor(_Bool);1;OMR;Node;0;0
setLongInt;setLongInt(int64_t);1;OMR;Node;0;0
setLowGlobalRegisterNumber;setLowGlobalRegisterNumber(TR_GlobalRegisterNumber);1;OMR;Node;0;0
setMethod;setMethod(class TR_OpaqueMethodBlock *);1;OMR;Node;0;0
setMonitorClassInNode;setMonitorClassInNode(class TR_OpaqueClassBlock *);1;OMR;Node;0;0
setMonitorInfo;setMonitorInfo(void *);1;OMR;Node;0;0
setNOPLongStore;setNOPLongStore(_Bool);1;OMR;Node;0;0
setNeedsPrecisionAdjustment;setNeedsPrecisionAdjustment(_Bool);1;OMR;Node;0;0
setNeedsSignExtension;setNeedsSignExtension(_Bool);1;OMR;Node;0;0
setNoArrayStoreCheckArrayCopy;setNoArrayStoreCheckArrayCopy(_Bool);1;OMR;Node;0;0
setNodeIsRecognizedArrayCopyCall;setNodeIsRecognizedArrayCopyCall(_Bool);1;OMR;Node;0;0
setNodeRequiresConditionCodes;setNodeRequiresConditionCodes(_Bool);1;OMR;Node;0;0
setNormalizeNanValues;setNormalizeNanValues(_Bool);1;OMR;Node;0;0
setNormalizedShift;setNormalizedShift(_Bool);1;OMR;Node;0;0
setNullCheckReference;setNullCheckReference(TR::Node *);1;OMR;Node;0;0
setNumChildren;setNumChildren(uint16_t);1;OMR;Node;0;0
setNumRelocations;setNumRelocations(uint32_t);1;OMR;Node;0;0
setOmitSync;setOmitSync(_Bool);1;OMR;Node;0;0
setOpCodeValue;setOpCodeValue(TR::ILOpCodes);1;OMR;Node;0;0
setOrBitOpMem;setOrBitOpMem(_Bool);1;OMR;Node;0;0
setOverflowCheckOperation;setOverflowCheckOperation(TR::ILOpCodes);1;OMR;Node;0;0
setParentSupportsLazyClobber;setParentSupportsLazyClobber(_Bool);1;OMR;Node;0;0
setPinningArrayPointer;setPinningArrayPointer(TR::AutomaticSymbol *);1;OMR;Node;0;0
setPointsToNonNull;setPointsToNonNull(_Bool);1;OMR;Node;0;0
setPointsToNull;setPointsToNull(_Bool);1;OMR;Node;0;0
setPreparedForDirectJNI;setPreparedForDirectJNI();1;OMR;Node;0;0
setPrimitiveLockedRegion;setPrimitiveLockedRegion(_Bool);1;OMR;Node;0;0
setRarePathForwardArrayCopy;setRarePathForwardArrayCopy(_Bool);1;OMR;Node;0;0
setReadMonitor;setReadMonitor(_Bool);1;OMR;Node;0;0
setReferenceCount;setReferenceCount(rcount_t);1;OMR;Node;0;0
setReferenceIsNonNull;setReferenceIsNonNull(_Bool);1;OMR;Node;0;0
setRegLoadStoreSymbolReference;setRegLoadStoreSymbolReference(TR::SymbolReference *);1;OMR;Node;0;0
setRegister;setRegister(TR::Register *);1;OMR;Node;0;0
setRelocationDestination;setRelocationDestination(uint32_t,void *);1;OMR;Node;0;0
setRelocationType;setRelocationType(uint32_t);1;OMR;Node;0;0
setReturnIsDummy;setReturnIsDummy();1;OMR;Node;0;0
setSecond;setSecond(TR::Node *);1;OMR;Node;0;0
setSeenRealReference;setSeenRealReference(_Bool);1;OMR;Node;0;0
setShortInt;setShortInt(int16_t);1;OMR;Node;0;0
setSignExtendTo32BitAtSource;setSignExtendTo32BitAtSource(_Bool);1;OMR;Node;0;0
setSignExtendTo64BitAtSource;setSignExtendTo64BitAtSource(_Bool);1;OMR;Node;0;0
setSimpleDivCheck;setSimpleDivCheck(_Bool);1;OMR;Node;0;0
setSkipSignExtension;setSkipSignExtension(_Bool);1;OMR;Node;0;0
setSkipSync;setSkipSync(_Bool);1;OMR;Node;0;0
setSkipWrtBar;setSkipWrtBar(_Bool);1;OMR;Node;0;0
setSourceCellIsTermChar;setSourceCellIsTermChar(_Bool);1;OMR;Node;0;0
setSourceIsByteArrayTranslate;setSourceIsByteArrayTranslate(_Bool);1;OMR;Node;0;0
setStaticMonitor;setStaticMonitor(_Bool);1;OMR;Node;0;0
setStoreAlreadyEvaluated;setStoreAlreadyEvaluated(_Bool);1;OMR;Node;0;0
setStoredValueIsIrrelevant;setStoredValueIsIrrelevant(_Bool);1;OMR;Node;0;0
setSwappedChildren;setSwappedChildren(_Bool);1;OMR;Node;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);1;OMR;Node;0;0
setSyncMethodMonitor;setSyncMethodMonitor(_Bool);1;OMR;Node;0;0
setTableBackedByRawStorage;setTableBackedByRawStorage(_Bool);1;OMR;Node;0;0
setTargetIsByteArrayTranslate;setTargetIsByteArrayTranslate(_Bool);1;OMR;Node;0;0
setTermCharNodeIsHint;setTermCharNodeIsHint(_Bool);1;OMR;Node;0;0
setThrowInsertedByOSR;setThrowInsertedByOSR(_Bool);1;OMR;Node;0;0
setUnneededConversion;setUnneededConversion(_Bool);1;OMR;Node;0;0
setUnneededIALoad;setUnneededIALoad(_Bool);1;OMR;Node;0;0
setUnsigned;setUnsigned(_Bool);1;OMR;Node;0;0
setUnsignedByte;setUnsignedByte(uint8_t);1;OMR;Node;0;0
setUnsignedInt;setUnsignedInt(uint32_t);1;OMR;Node;0;0
setUnsignedLongInt;setUnsignedLongInt(uint64_t);1;OMR;Node;0;0
setUnsignedShortInt;setUnsignedShortInt(uint16_t);1;OMR;Node;0;0
setUseCallForFloatToFixedConversion;setUseCallForFloatToFixedConversion(_Bool);1;OMR;Node;0;0
setUseDefIndex;setUseDefIndex(uint16_t);1;OMR;Node;0;0
setUseSignExtensionMode;setUseSignExtensionMode(_Bool);1;OMR;Node;0;0
setValueChild;setValueChild(TR::Node *);1;OMR;Node;0;0
setVisitCount;setVisitCount(vcount_t);1;OMR;Node;0;0
setWordElementArrayCopy;setWordElementArrayCopy(_Bool);1;OMR;Node;0;0
setXorBitOpMem;setXorBitOpMem(_Bool);1;OMR;Node;0;0
setZeroExtendTo32BitAtSource;setZeroExtendTo32BitAtSource(_Bool);1;OMR;Node;0;0
setZeroExtendTo64BitAtSource;setZeroExtendTo64BitAtSource(_Bool);1;OMR;Node;0;0
shouldAlignTLHAlloc;shouldAlignTLHAlloc();1;OMR;Node;0;0
sizeOfExtension;sizeOfExtension();1;OMR;Node;0;0
skipConversions;skipConversions();1;OMR;Node;0;0
skipSignExtension;skipSignExtension();1;OMR;Node;0;0
skipWrtBar;skipWrtBar();1;OMR;Node;0;0
storedValueIsIrrelevant;storedValueIsIrrelevant();1;OMR;Node;0;0
swapChildren;swapChildren();1;OMR;Node;0;0
throwInsertedByOSR;throwInsertedByOSR();1;OMR;Node;0;0
uncommon;uncommon();1;OMR;Node;0;0
uncommonChild;uncommonChild(int32_t);1;OMR;Node;0;0
unsetRegister;unsetRegister();1;OMR;Node;0;0
useCallForFloatToFixedConversion;useCallForFloatToFixedConversion();1;OMR;Node;0;0
useSignExtensionMode;useSignExtensionMode();1;OMR;Node;0;0
uses64BitGPRs;uses64BitGPRs();1;OMR;Node;0;0
~Node;~Node();1;OMR;Node;0;0
NodeChecklist;NodeChecklist(const class TR::NodeChecklist &);1;TR;NodeChecklist;1;0
NodeChecklist;NodeChecklist(TR::Compilation *);0;TR;NodeChecklist;0;0
NodeChecklist;NodeChecklist(class TR::NodeChecklist &&);0;TR;NodeChecklist;1;0
add;add(TR::Node *);1;TR;NodeChecklist;0;0
add;add(class TR::NodeChecklist &);0;TR;NodeChecklist;0;0
contains;contains(TR::Node *);1;TR;NodeChecklist;0;0
operator!=;operator!=(const class TR::NodeChecklist &);1;TR;NodeChecklist;0;0
operator=;operator=(class TR::NodeChecklist &&);0;TR;NodeChecklist;1;0
operator==;operator==(const class TR::NodeChecklist &);1;TR;NodeChecklist;0;0
remove;remove(TR::Node *);1;TR;NodeChecklist;0;0
remove;remove(class TR::NodeChecklist &);0;TR;NodeChecklist;0;0
~NodeChecklist;~NodeChecklist();1;TR;NodeChecklist;1;0
ObjectModel;ObjectModel(class OMR::ObjectModel &&);1;OMR;ObjectModel;1;0
ObjectModel;ObjectModel(const class OMR::ObjectModel &);0;OMR;ObjectModel;1;0
ObjectModel;ObjectModel();0;OMR;ObjectModel;0;0
ObjectModel;ObjectModel(class TestCompiler::ObjectModel &&);0;TestCompiler;ObjectModel;1;0
ObjectModel;ObjectModel(const class TestCompiler::ObjectModel &);0;TestCompiler;ObjectModel;1;0
ObjectModel;ObjectModel(const class TR::ObjectModel &);0;TR;ObjectModel;1;0
ObjectModel;ObjectModel(class TR::ObjectModel &&);0;TR;ObjectModel;1;0
arraySpineShift;arraySpineShift(int32_t);1;OMR;ObjectModel;0;0
arrayletLeafIndex;arrayletLeafIndex(int32_t,int32_t);1;OMR;ObjectModel;0;0
arrayletMask;arrayletMask(int32_t);1;OMR;ObjectModel;0;0
canGenerateArraylets;canGenerateArraylets();1;OMR;ObjectModel;0;0
compressedReferenceShift;compressedReferenceShift();1;OMR;ObjectModel;0;0
compressedReferenceShiftOffset;compressedReferenceShiftOffset();1;OMR;ObjectModel;0;0
contiguousArrayHeaderSizeInBytes;contiguousArrayHeaderSizeInBytes();1;OMR;ObjectModel;0;0
decompressReference;decompressReference(TR::Compilation *,uintptrj_t);1;OMR;ObjectModel;0;0
discontiguousArrayHeaderSizeInBytes;discontiguousArrayHeaderSizeInBytes();1;OMR;ObjectModel;0;0
elementSizeOfBooleanArray;elementSizeOfBooleanArray();1;OMR;ObjectModel;0;0
generateCompressedObjectHeaders;generateCompressedObjectHeaders();1;OMR;ObjectModel;0;0
getArrayElementWidthInBytes;getArrayElementWidthInBytes(TR::DataType);1;OMR;ObjectModel;0;0
getArrayElementWidthInBytes;getArrayElementWidthInBytes(TR::Compilation *,uintptrj_t);0;OMR;ObjectModel;0;0
getArrayLengthInBytes;getArrayLengthInBytes(TR::Compilation *,uintptrj_t);1;OMR;ObjectModel;0;0
getArrayLengthInElements;getArrayLengthInElements(TR::Compilation *,uintptrj_t);1;OMR;ObjectModel;0;0
getSizeOfArrayElement;getSizeOfArrayElement(TR::Node *);1;OMR;ObjectModel;0;0
initialize;initialize();1;OMR;ObjectModel;0;0
isDiscontiguousArray;isDiscontiguousArray(int32_t);1;OMR;ObjectModel;0;0
isDiscontiguousArray;isDiscontiguousArray(int32_t,int32_t);0;OMR;ObjectModel;0;0
isDiscontiguousArray;isDiscontiguousArray(TR::Compilation *,uintptrj_t);0;OMR;ObjectModel;0;0
maxArraySizeInElements;maxArraySizeInElements(int32_t,TR::Compilation *);1;OMR;ObjectModel;0;0
maxArraySizeInElementsForAllocation;maxArraySizeInElementsForAllocation(TR::Node *,TR::Compilation *);1;OMR;ObjectModel;0;0
maxContiguousArraySizeInBytes;maxContiguousArraySizeInBytes();1;OMR;ObjectModel;0;0
mayRequireSpineChecks;mayRequireSpineChecks();1;OMR;ObjectModel;0;0
nativeAddressesCanChangeSize;nativeAddressesCanChangeSize();1;OMR;ObjectModel;0;0
objectAlignmentInBytes;objectAlignmentInBytes();1;OMR;ObjectModel;0;0
objectHeaderSizeInBytes;objectHeaderSizeInBytes();1;OMR;ObjectModel;0;0
offsetOfContiguousArraySizeField;offsetOfContiguousArraySizeField();1;OMR;ObjectModel;0;0
offsetOfDiscontiguousArraySizeField;offsetOfDiscontiguousArraySizeField();1;OMR;ObjectModel;0;0
offsetOfIndexableSizeField;offsetOfIndexableSizeField();1;OMR;ObjectModel;0;0
offsetOfObjectVftField;offsetOfObjectVftField();1;OMR;ObjectModel;0;0
operator=;operator=(class OMR::ObjectModel &&);1;OMR;ObjectModel;1;0
operator=;operator=(const class OMR::ObjectModel &);0;OMR;ObjectModel;1;0
operator=;operator=(class TestCompiler::ObjectModel &&);0;TestCompiler;ObjectModel;1;0
operator=;operator=(const class TestCompiler::ObjectModel &);0;TestCompiler;ObjectModel;1;0
operator=;operator=(const class TR::ObjectModel &);0;TR;ObjectModel;1;0
operator=;operator=(class TR::ObjectModel &&);0;TR;ObjectModel;1;0
shouldGenerateReadBarriersForFieldLoads;shouldGenerateReadBarriersForFieldLoads();1;OMR;ObjectModel;0;0
shouldReplaceGuardedLoadWithSoftwareReadBarrier;shouldReplaceGuardedLoadWithSoftwareReadBarrier();1;OMR;ObjectModel;0;0
sizeofReferenceAddress;sizeofReferenceAddress();1;OMR;ObjectModel;0;0
sizeofReferenceField;sizeofReferenceField();1;OMR;ObjectModel;0;0
useHybridArraylets;useHybridArraylets();1;OMR;ObjectModel;0;0
usesDiscontiguousArraylets;usesDiscontiguousArraylets();1;OMR;ObjectModel;0;0
~ObjectModel;~ObjectModel();1;OMR;ObjectModel;1;0
Optimizer;Optimizer(const class OMR::Optimizer &);1;OMR;Optimizer;1;0
Optimizer;Optimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool,const struct OptimizationStrategy *,uint16_t);0;OMR;Optimizer;0;0
Optimizer;Optimizer(class OMR::Optimizer &&);0;OMR;Optimizer;1;0
areBCDAggrConstantNodesEquivalent;areBCDAggrConstantNodesEquivalent(TR::Node *,TR::Node *,TR::Compilation *);1;OMR;Optimizer;0;0
areNodesEquivalent;areNodesEquivalent(TR::Node *,TR::Node *,TR::Compilation *,_Bool);1;OMR;Optimizer;0;0
areNodesEquivalent;areNodesEquivalent(TR::Node *,TR::Node *,_Bool);0;OMR;Optimizer;0;0
areSyntacticallyEquivalent;areSyntacticallyEquivalent(TR::Node *,TR::Node *,vcount_t);1;OMR;Optimizer;0;0
cachedExtendedBBInfoValid;cachedExtendedBBInfoValid();1;OMR;Optimizer;0;0
canRunBlockByBlockOptimizations;canRunBlockByBlockOptimizations();1;OMR;Optimizer;0;0
cantBuildGlobalsUseDefInfo;cantBuildGlobalsUseDefInfo();1;OMR;Optimizer;0;0
cantBuildGlobalsValueNumberInfo;cantBuildGlobalsValueNumberInfo();1;OMR;Optimizer;0;0
cantBuildLocalsUseDefInfo;cantBuildLocalsUseDefInfo();1;OMR;Optimizer;0;0
cantBuildLocalsValueNumberInfo;cantBuildLocalsValueNumberInfo();1;OMR;Optimizer;0;0
cg;cg();1;OMR;Optimizer;0;0
changeContinueLoopsToNestedLoops;changeContinueLoopsToNestedLoops();1;OMR;Optimizer;0;0
checkMaxHotnessOfInlinedMethods;checkMaxHotnessOfInlinedMethods(TR::Compilation *);1;OMR;Optimizer;0;0
checkNumberOfLoopsAndBasicBlocks;checkNumberOfLoopsAndBasicBlocks(TR::Compilation *,class TR_Structure *);1;OMR;Optimizer;0;0
comp;comp();1;OMR;Optimizer;0;0
countNumberOfLoops;countNumberOfLoops(class TR_Structure *);1;OMR;Optimizer;0;0
createOptimizer;createOptimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool);1;OMR;Optimizer;0;0
createValueNumberInfo;createValueNumberInfo(_Bool,_Bool,_Bool);1;OMR;Optimizer;0;0
doStructuralAnalysis;doStructuralAnalysis();1;OMR;Optimizer;0;0
doStructureChecks;doStructureChecks();1;OMR;Optimizer;0;0
dumpPostOptTrees;dumpPostOptTrees();1;OMR;Optimizer;0;0
dumpStrategy;dumpStrategy(const struct OptimizationStrategy *);1;OMR;Optimizer;0;0
enableAllLocalOpts;enableAllLocalOpts();1;OMR;Optimizer;0;0
getAliasSetsAreValid;getAliasSetsAreValid();1;OMR;Optimizer;0;0
getClassPointerNodes;getClassPointerNodes();1;OMR;Optimizer;0;0
getDebug;getDebug();1;OMR;Optimizer;0;0
getDumpGraphsIndex;getDumpGraphsIndex();1;OMR;Optimizer;0;0
getEliminatedCheckcastNodes;getEliminatedCheckcastNodes();1;OMR;Optimizer;0;0
getEnclosingFinallyBlock;getEnclosingFinallyBlock();1;OMR;Optimizer;0;0
getInlineSynchronized;getInlineSynchronized();1;OMR;Optimizer;0;0
getInlinerPolicy;getInlinerPolicy();1;OMR;Optimizer;0;0
getInlinerUtil;getInlinerUtil();1;OMR;Optimizer;0;0
getLastRun;getLastRun(OMR::Optimizations);1;OMR;Optimizer;0;0
getMethodSymbol;getMethodSymbol();1;OMR;Optimizer;0;0
getOptMessageIndex;getOptMessageIndex();1;OMR;Optimizer;0;0
getOptimization;getOptimization(OMR::Optimizations);1;OMR;Optimizer;0;0
getOptimizationName;getOptimizationName(OMR::Optimizations);1;OMR;Optimizer;0;0
getResetExitsGRA;getResetExitsGRA();1;OMR;Optimizer;0;0
getSeenBlocksGRA;getSeenBlocksGRA();1;OMR;Optimizer;0;0
getStaticFrequency;getStaticFrequency(TR::Block *,int32_t *);1;OMR;Optimizer;0;0
getSuccessorBitsGRA;getSuccessorBitsGRA();1;OMR;Optimizer;0;0
getSymReferencesTable;getSymReferencesTable();1;OMR;Optimizer;0;0
getUseDefInfo;getUseDefInfo();1;OMR;Optimizer;0;0
getValueNumberInfo;getValueNumberInfo();1;OMR;Optimizer;0;0
incOptMessageIndex;incOptMessageIndex();1;OMR;Optimizer;0;0
isEnabled;isEnabled(OMR::Optimizations);1;OMR;Optimizer;0;0
isIlGenOpt;isIlGenOpt();1;OMR;Optimizer;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Optimizer;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Optimizer;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Optimizer;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Optimizer;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Optimizer;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Optimizer;0;0
operator delete;operator delete(void *,size_t);0;OMR;Optimizer;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;Optimizer;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Optimizer;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Optimizer;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Optimizer;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;Optimizer;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Optimizer;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Optimizer;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Optimizer;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Optimizer;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Optimizer;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Optimizer;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Optimizer;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Optimizer;0;0
optimizationStrategy;optimizationStrategy(TR::Compilation *);1;OMR;Optimizer;0;0
optimize;optimize();1;OMR;Optimizer;0;0
optsThatCanCreateLoopsDisabled;optsThatCanCreateLoopsDisabled();1;OMR;Optimizer;0;0
performOptimization;performOptimization(const struct OptimizationStrategy *,int32_t,int32_t,int32_t);1;OMR;Optimizer;0;0
performVeryLateOpts;performVeryLateOpts();1;OMR;Optimizer;0;0
prepareForNodeRemoval;prepareForNodeRemoval(TR::Node *,_Bool);1;OMR;Optimizer;0;0
prepareForTreeRemoval;prepareForTreeRemoval(TR::TreeTop *);1;OMR;Optimizer;0;0
self;self();1;OMR;Optimizer;0;0
setAliasSetsAreValid;setAliasSetsAreValid(_Bool,_Bool);1;OMR;Optimizer;0;0
setCachedExtendedBBInfoValid;setCachedExtendedBBInfoValid(_Bool);1;OMR;Optimizer;0;0
setCanRunBlockByBlockOptimizations;setCanRunBlockByBlockOptimizations(_Bool);1;OMR;Optimizer;0;0
setCantBuildGlobalsUseDefInfo;setCantBuildGlobalsUseDefInfo(_Bool);1;OMR;Optimizer;0;0
setCantBuildGlobalsValueNumberInfo;setCantBuildGlobalsValueNumberInfo(_Bool);1;OMR;Optimizer;0;0
setCantBuildLocalsUseDefInfo;setCantBuildLocalsUseDefInfo(_Bool);1;OMR;Optimizer;0;0
setCantBuildLocalsValueNumberInfo;setCantBuildLocalsValueNumberInfo(_Bool);1;OMR;Optimizer;0;0
setEnclosingFinallyBlock;setEnclosingFinallyBlock(TR::Block *);1;OMR;Optimizer;0;0
setInlineSynchronized;setInlineSynchronized(_Bool);1;OMR;Optimizer;0;0
setMockStrategy;setMockStrategy(const struct OptimizationStrategy *);1;OMR;Optimizer;0;0
setRequestOptimization;setRequestOptimization(OMR::Optimizations,_Bool,TR::Block *);1;OMR;Optimizer;0;0
setResetExitsGRA;setResetExitsGRA(class TR_BitVector *);1;OMR;Optimizer;0;0
setSeenBlocksGRA;setSeenBlocksGRA(class TR_BitVector *);1;OMR;Optimizer;0;0
setSuccessorBitsGRA;setSuccessorBitsGRA(class TR_BitVector *);1;OMR;Optimizer;0;0
setSymReferencesTable;setSymReferencesTable(int32_t *);1;OMR;Optimizer;0;0
setUseDefInfo;setUseDefInfo(class TR_UseDefInfo *);1;OMR;Optimizer;0;0
setValueNumberInfo;setValueNumberInfo(class TR_ValueNumberInfo *);1;OMR;Optimizer;0;0
switchToProfiling;switchToProfiling(uint32_t,uint32_t);1;OMR;Optimizer;0;0
switchToProfiling;switchToProfiling();0;OMR;Optimizer;0;0
trHeapMemory;trHeapMemory();1;OMR;Optimizer;0;0
trMemory;trMemory();1;OMR;Optimizer;0;0
trPersistentMemory;trPersistentMemory();1;OMR;Optimizer;0;0
trStackMemory;trStackMemory();1;OMR;Optimizer;0;0
valueNumberInfoBuildType;valueNumberInfoBuildType();1;OMR;Optimizer;0;0
Options;Options(class OMR::Options &&);1;OMR;Options;1;0
Options;Options(const class OMR::Options &);0;OMR;Options;1;0
Options;Options(TR::Options &);0;OMR;Options;0;0
Options;Options();0;OMR;Options;0;0
Options;Options(class TR_Memory *,int32_t,int32_t,class TR_ResolvedMethod *,void *,class TR_OptimizationPlan *,_Bool,int32_t);0;OMR;Options;0;0
addOptionSet;addOptionSet(TR::OptionSet *);1;OMR;Options;0;0
allowRecompilation;allowRecompilation();1;OMR;Options;0;0
alwaysCallWriteBarrier;alwaysCallWriteBarrier();1;OMR;Options;0;0
anOptionSetContainsACountValue;anOptionSetContainsACountValue();1;OMR;Options;0;0
breakOnLoad;breakOnLoad(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
canJITCompile;canJITCompile();1;OMR;Options;0;0
checkDisableFlagForAllMethods;checkDisableFlagForAllMethods(OMR::Optimizations,_Bool);1;OMR;Options;0;0
clearBitsFromStringSet;clearBitsFromStringSet(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
closeLogFile;closeLogFile(class TR_FrontEnd *,TR::FILE *);1;OMR;Options;0;0
closeLogsForOtherCompilationThreads;closeLogsForOtherCompilationThreads(class TR_FrontEnd *);1;OMR;Options;0;0
compareOptionsForBinarySearch;compareOptionsForBinarySearch(const TR::OptionTable &,const TR::OptionTable &);1;OMR;Options;0;0
configureOptReporting;configureOptReporting(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
counterIsEnabled;counterIsEnabled(const char *,int8_t,TR::SimpleRegex *);1;OMR;Options;0;0
createDebug;createDebug();1;OMR;Options;0;0
debugCounterHistogramIsEnabled;debugCounterHistogramIsEnabled(const char *,int8_t);1;OMR;Options;0;0
debugCounterInsertedFormat;debugCounterInsertedFormat(class TR_Memory *,const char *,const char *);1;OMR;Options;0;0
disableCHOpts;disableCHOpts();1;OMR;Options;0;0
disableForAllMethods;disableForAllMethods(OMR::Optimizations);1;OMR;Options;0;0
disableMoreOpts;disableMoreOpts(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
disableOptimization;disableOptimization(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
disableSamplingThread;disableSamplingThread();1;OMR;Options;0;0
dontTraceOptimization;dontTraceOptimization(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
dynamicDebugCounterIsEnabled;dynamicDebugCounterIsEnabled(const char *,int8_t);1;OMR;Options;0;0
enableDebugCounters;enableDebugCounters();1;OMR;Options;0;0
enableOptimization;enableOptimization(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
enableTracing;enableTracing(OMR::Optimizations);1;OMR;Options;0;0
feLatePostProcess;feLatePostProcess(void *,TR::OptionSet *);1;OMR;Options;0;0
fePostProcessAOT;fePostProcessAOT(void *);1;OMR;Options;0;0
fePostProcessJIT;fePostProcessJIT(void *);1;OMR;Options;0;0
fePreProcess;fePreProcess(void *);1;OMR;Options;0;0
findLogFileForCompilationThread;findLogFileForCompilationThread(int32_t);1;OMR;Options;0;0
findOptionSet;findOptionSet(class TR_Memory *,int32_t,int32_t,class TR_ResolvedMethod *,enum TR_Hotness,_Bool);1;OMR;Options;0;0
findOptionSet;findOptionSet(class TR_Memory *,class TR_ResolvedMethod *,_Bool);0;OMR;Options;0;0
findOptionSet;findOptionSet(int32_t,int32_t,const char *,enum TR_Hotness,_Bool);0;OMR;Options;0;0
findOrCreateDebug;findOrCreateDebug();1;OMR;Options;0;0
gcIsUsingConcurrentMark;gcIsUsingConcurrentMark();1;OMR;Options;0;0
generateWriteBarriers;generateWriteBarriers();1;OMR;Options;0;0
get390LitPoolBufferSize;get390LitPoolBufferSize();1;OMR;Options;0;0
get390StackBufferSize;get390StackBufferSize();1;OMR;Options;0;0
getAOTCmdLineOptions;getAOTCmdLineOptions();1;OMR;Options;0;0
getAOTCompile;getAOTCompile();1;OMR;Options;0;0
getActiveCardTableBase;getActiveCardTableBase();1;OMR;Options;0;0
getAddressEnumerationOption;getAddressEnumerationOption(uint32_t);1;OMR;Options;0;0
getAggressivityLevel;getAggressivityLevel();1;OMR;Options;0;0
getAllOptions;getAllOptions(uint32_t);1;OMR;Options;0;0
getAlwaysWorthInliningThreshold;getAlwaysWorthInliningThreshold();1;OMR;Options;0;0
getAnyOption;getAnyOption(uint32_t);1;OMR;Options;0;0
getAnyTraceCGOption;getAnyTraceCGOption();1;OMR;Options;0;0
getAotrtDebugLevel;getAotrtDebugLevel();1;OMR;Options;0;0
getBigCalleeFrequencyCutoffAtHot;getBigCalleeFrequencyCutoffAtHot();1;OMR;Options;0;0
getBigCalleeFrequencyCutoffAtWarm;getBigCalleeFrequencyCutoffAtWarm();1;OMR;Options;0;0
getBigCalleeHotOptThreshold;getBigCalleeHotOptThreshold();1;OMR;Options;0;0
getBigCalleeScorchingOptThreshold;getBigCalleeScorchingOptThreshold();1;OMR;Options;0;0
getBigCalleeThreshold;getBigCalleeThreshold();1;OMR;Options;0;0
getBigCalleeThresholdForColdCallsAtHot;getBigCalleeThresholdForColdCallsAtHot();1;OMR;Options;0;0
getBigCalleeThresholdForColdCallsAtWarm;getBigCalleeThresholdForColdCallsAtWarm();1;OMR;Options;0;0
getBlockShufflingSequence;getBlockShufflingSequence();1;OMR;Options;0;0
getBreakOnCreate;getBreakOnCreate();1;OMR;Options;0;0
getBreakOnOpts;getBreakOnOpts();1;OMR;Options;0;0
getBreakOnPrint;getBreakOnPrint();1;OMR;Options;0;0
getBreakOnThrow;getBreakOnThrow();1;OMR;Options;0;0
getClassesWithFoldableFinalFields;getClassesWithFoldableFinalFields();1;OMR;Options;0;0
getCmdLineOptions;getCmdLineOptions();1;OMR;Options;0;0
getCompilationStrategyName;getCompilationStrategyName();1;OMR;Options;0;0
getCountValue;getCountValue(_Bool,enum TR_Hotness);1;OMR;Options;0;0
getCountsAreProvidedByUser;getCountsAreProvidedByUser();1;OMR;Options;0;0
getCustomStrategy;getCustomStrategy();1;OMR;Options;0;0
getCustomStrategySize;getCustomStrategySize();1;OMR;Options;0;0
getDLTOptLevel;getDLTOptLevel();1;OMR;Options;0;0
getDebug;getDebug();1;OMR;Options;0;0
getDebugCounterBucketGranularity;getDebugCounterBucketGranularity();1;OMR;Options;0;0
getDebugCounterWarmupSeconds;getDebugCounterWarmupSeconds();1;OMR;Options;0;0
getDebugEnableFlag;getDebugEnableFlag(uint32_t);1;OMR;Options;0;0
getDebugOnCreate;getDebugOnCreate();1;OMR;Options;0;0
getDefaultCountString;getDefaultCountString();1;OMR;Options;0;0
getDefaultOptions;getDefaultOptions();1;OMR;Options;0;0
getDelayCompile;getDelayCompile();1;OMR;Options;0;0
getDeterministicMode;getDeterministicMode();1;OMR;Options;0;0
getDisableDLTBytecodeIndex;getDisableDLTBytecodeIndex();1;OMR;Options;0;0
getDisabledIdiomPatterns;getDisabledIdiomPatterns();1;OMR;Options;0;0
getDisabledInlineSites;getDisabledInlineSites();1;OMR;Options;0;0
getDisabledOptTransformations;getDisabledOptTransformations();1;OMR;Options;0;0
getDisabledOpts;getDisabledOpts();1;OMR;Options;0;0
getDontInline;getDontInline();1;OMR;Options;0;0
getDumbInlinerBytecodeSizeCutoff;getDumbInlinerBytecodeSizeCutoff();1;OMR;Options;0;0
getDumbInlinerBytecodeSizeDivisor;getDumbInlinerBytecodeSizeDivisor();1;OMR;Options;0;0
getDumbInlinerBytecodeSizeMaxCutoff;getDumbInlinerBytecodeSizeMaxCutoff();1;OMR;Options;0;0
getDumbInlinerBytecodeSizeMinCutoff;getDumbInlinerBytecodeSizeMinCutoff();1;OMR;Options;0;0
getEnableDLTBytecodeIndex;getEnableDLTBytecodeIndex();1;OMR;Options;0;0
getEnableGPU;getEnableGPU(uint32_t);1;OMR;Options;0;0
getEnableSCHintFlags;getEnableSCHintFlags();1;OMR;Options;0;0
getFirstOptIndex;getFirstOptIndex();1;OMR;Options;0;0
getFirstOptTransformationIndex;getFirstOptTransformationIndex();1;OMR;Options;0;0
getFirstOptionSet;getFirstOptionSet();1;OMR;Options;0;0
getFixedOptLevel;getFixedOptLevel();1;OMR;Options;0;0
getGCRCount;getGCRCount();1;OMR;Options;0;0
getGCRDecCount;getGCRDecCount();1;OMR;Options;0;0
getGCRResetCount;getGCRResetCount();1;OMR;Options;0;0
getGcCardSize;getGcCardSize();1;OMR;Options;0;0
getGcMode;getGcMode();1;OMR;Options;0;0
getHeapAddressToCardAddressShift;getHeapAddressToCardAddressShift();1;OMR;Options;0;0
getHeapBase;getHeapBase();1;OMR;Options;0;0
getHeapBaseForBarrierRange0;getHeapBaseForBarrierRange0();1;OMR;Options;0;0
getHeapSizeForBarrierRange0;getHeapSizeForBarrierRange0();1;OMR;Options;0;0
getHeapTop;getHeapTop();1;OMR;Options;0;0
getInduceOSR;getInduceOSR();1;OMR;Options;0;0
getInitialBCount;getInitialBCount();1;OMR;Options;0;0
getInitialColdRunBCount;getInitialColdRunBCount();1;OMR;Options;0;0
getInitialColdRunCount;getInitialColdRunCount();1;OMR;Options;0;0
getInitialCount;getInitialCount();1;OMR;Options;0;0
getInitialHotnessLevel;getInitialHotnessLevel(_Bool);1;OMR;Options;0;0
getInitialMILCount;getInitialMILCount();1;OMR;Options;0;0
getInitialSCount;getInitialSCount();1;OMR;Options;0;0
getInlineCntrAllBucketSize;getInlineCntrAllBucketSize();1;OMR;Options;0;0
getInlineCntrCalleeTooBigBucketSize;getInlineCntrCalleeTooBigBucketSize();1;OMR;Options;0;0
getInlineCntrCalleeTooDeepBucketSize;getInlineCntrCalleeTooDeepBucketSize();1;OMR;Options;0;0
getInlineCntrColdAndNotTinyBucketSize;getInlineCntrColdAndNotTinyBucketSize();1;OMR;Options;0;0
getInlineCntrDepthExceededBucketSize;getInlineCntrDepthExceededBucketSize();1;OMR;Options;0;0
getInlineCntrRanOutOfBudgetBucketSize;getInlineCntrRanOutOfBudgetBucketSize();1;OMR;Options;0;0
getInlineCntrWarmCalleeHasTooManyNodesBucketSize;getInlineCntrWarmCalleeHasTooManyNodesBucketSize();1;OMR;Options;0;0
getInlineCntrWarmCalleeTooBigBucketSize;getInlineCntrWarmCalleeTooBigBucketSize();1;OMR;Options;0;0
getInlineCntrWarmCallerHasTooManyNodesBucketSize;getInlineCntrWarmCallerHasTooManyNodesBucketSize();1;OMR;Options;0;0
getInlinerArgumentHeuristicFraction;getInlinerArgumentHeuristicFraction();1;OMR;Options;0;0
getInlinerBorderFrequency;getInlinerBorderFrequency();1;OMR;Options;0;0
getInlinerCGBorderFrequency;getInlinerCGBorderFrequency();1;OMR;Options;0;0
getInlinerCGColdBorderFrequency;getInlinerCGColdBorderFrequency();1;OMR;Options;0;0
getInlinerCGVeryColdBorderFrequency;getInlinerCGVeryColdBorderFrequency();1;OMR;Options;0;0
getInlinerColdBorderFrequency;getInlinerColdBorderFrequency();1;OMR;Options;0;0
getInlinerVeryColdBorderFrequency;getInlinerVeryColdBorderFrequency();1;OMR;Options;0;0
getInlinerVeryColdBorderFrequencyAtCold;getInlinerVeryColdBorderFrequencyAtCold();1;OMR;Options;0;0
getInlinerVeryLargeCompiledMethodFaninThreshold;getInlinerVeryLargeCompiledMethodFaninThreshold();1;OMR;Options;0;0
getInlinerVeryLargeCompiledMethodThreshold;getInlinerVeryLargeCompiledMethodThreshold();1;OMR;Options;0;0
getInsertGCRTrees;getInsertGCRTrees();1;OMR;Options;0;0
getJITCmdLineOptions;getJITCmdLineOptions();1;OMR;Options;0;0
getJitMethodEntryAlignmentBoundary;getJitMethodEntryAlignmentBoundary(TR::CodeGenerator *);1;OMR;Options;0;0
getLabelTargetNOPLimit;getLabelTargetNOPLimit();1;OMR;Options;0;0
getLargeCompiledMethodExemptionFreqCutoff;getLargeCompiledMethodExemptionFreqCutoff();1;OMR;Options;0;0
getLargeNumberOfLoops;getLargeNumberOfLoops();1;OMR;Options;0;0
getLastIpaOptTransformationIndex;getLastIpaOptTransformationIndex();1;OMR;Options;0;0
getLastOptIndex;getLastOptIndex();1;OMR;Options;0;0
getLastOptSubIndex;getLastOptSubIndex();1;OMR;Options;0;0
getLastOptTransformationIndex;getLastOptTransformationIndex();1;OMR;Options;0;0
getLastSearchCount;getLastSearchCount();1;OMR;Options;0;0
getLockReserveClass;getLockReserveClass();1;OMR;Options;0;0
getLogFile;getLogFile();1;OMR;Options;0;0
getLogFileName;getLogFileName();1;OMR;Options;0;0
getLogListForOtherCompThreads;getLogListForOtherCompThreads();1;OMR;Options;0;0
getLoopyAsyncCheckInsertionMaxEntryFreq;getLoopyAsyncCheckInsertionMaxEntryFreq();1;OMR;Options;0;0
getMaxInlinedCalls;getMaxInlinedCalls();1;OMR;Options;0;0
getMaxLastOptTransformationIndex;getMaxLastOptTransformationIndex();1;OMR;Options;0;0
getMaxLimitedGRACandidates;getMaxLimitedGRACandidates();1;OMR;Options;0;0
getMaxLimitedGRARegs;getMaxLimitedGRARegs();1;OMR;Options;0;0
getMaxNumPrexAssumptions;getMaxNumPrexAssumptions();1;OMR;Options;0;0
getMaxNumVisitedSubclasses;getMaxNumVisitedSubclasses();1;OMR;Options;0;0
getMaxPeekedBytecodeSize;getMaxPeekedBytecodeSize();1;OMR;Options;0;0
getMaxSpreadCountLoopless;getMaxSpreadCountLoopless();1;OMR;Options;0;0
getMaxSpreadCountLoopy;getMaxSpreadCountLoopy();1;OMR;Options;0;0
getMaxStaticPICSlots;getMaxStaticPICSlots(enum TR_Hotness);1;OMR;Options;0;0
getMaxSzForVPInliningWarm;getMaxSzForVPInliningWarm();1;OMR;Options;0;0
getMaxUnloadedAddressRanges;getMaxUnloadedAddressRanges();1;OMR;Options;0;0
getMinFirstOptTransformationIndex;getMinFirstOptTransformationIndex();1;OMR;Options;0;0
getMinProfiledCheckcastFrequency;getMinProfiledCheckcastFrequency();1;OMR;Options;0;0
getNextHotnessLevel;getNextHotnessLevel(_Bool,enum TR_Hotness);1;OMR;Options;0;0
getNumInterfaceCallCacheSlots;getNumInterfaceCallCacheSlots();1;OMR;Options;0;0
getNumInterfaceCallStaticSlots;getNumInterfaceCallStaticSlots();1;OMR;Options;0;0
getNumLimitedGRARegsWithheld;getNumLimitedGRARegsWithheld();1;OMR;Options;0;0
getNumRestrictedGPRs;getNumRestrictedGPRs();1;OMR;Options;0;0
getNumUsableCompilationThreads;getNumUsableCompilationThreads();1;OMR;Options;0;0
getNumericValue;getNumericValue(char *&);1;OMR;Options;0;0
getObjectFileName;getObjectFileName();1;OMR;Options;0;0
getOnlyInline;getOnlyInline();1;OMR;Options;0;0
getOptLevel;getOptLevel();1;OMR;Options;0;0
getOptLevelDowngraded;getOptLevelDowngraded();1;OMR;Options;0;0
getOption;getOption(uint32_t);1;OMR;Options;0;0
getOptsToTrace;getOptsToTrace();1;OMR;Options;0;0
getPackedTestRegex;getPackedTestRegex();1;OMR;Options;0;0
getProfilingCompNodecountThreshold;getProfilingCompNodecountThreshold();1;OMR;Options;0;0
getProfilingCount;getProfilingCount();1;OMR;Options;0;0
getProfilingFrequency;getProfilingFrequency();1;OMR;Options;0;0
getRandomSeed;getRandomSeed();1;OMR;Options;0;0
getRegisterAssignmentTraceOption;getRegisterAssignmentTraceOption(uint32_t);1;OMR;Options;0;0
getSamplingFrequency;getSamplingFrequency();1;OMR;Options;0;0
getSamplingJProfilingOption;getSamplingJProfilingOption(enum TR_SamplingJProfilingFlags);1;OMR;Options;0;0
getScratchSpaceLimit;getScratchSpaceLimit();1;OMR;Options;0;0
getScratchSpaceLowerBound;getScratchSpaceLowerBound();1;OMR;Options;0;0
getSlipTrap;getSlipTrap();1;OMR;Options;0;0
getStackPCDumpNumberOfBuffers;getStackPCDumpNumberOfBuffers();1;OMR;Options;0;0
getStackPCDumpNumberOfFrames;getStackPCDumpNumberOfFrames();1;OMR;Options;0;0
getStoreSinkingLastOpt;getStoreSinkingLastOpt();1;OMR;Options;0;0
getSuffixLogsFormat;getSuffixLogsFormat();1;OMR;Options;0;0
getTOCSize;getTOCSize();1;OMR;Options;0;0
getTraceCGOption;getTraceCGOption(uint32_t);1;OMR;Options;0;0
getTraceForCodeMining;getTraceForCodeMining();1;OMR;Options;0;0
getTraceILDeadCode;getTraceILDeadCode(uint32_t);1;OMR;Options;0;0
getTraceLRA;getTraceLRA(uint32_t);1;OMR;Options;0;0
getTraceRAOption;getTraceRAOption(uint32_t);1;OMR;Options;0;0
getTraceRegisterITF;getTraceRegisterITF(uint32_t);1;OMR;Options;0;0
getTraceSimplifier;getTraceSimplifier(uint32_t);1;OMR;Options;0;0
getTraceSpillCosts;getTraceSpillCosts(uint32_t);1;OMR;Options;0;0
getTrampolineSpacePercentage;getTrampolineSpacePercentage();1;OMR;Options;0;0
getTrivialInlinerMaxSize;getTrivialInlinerMaxSize();1;OMR;Options;0;0
getTryToInline;getTryToInline();1;OMR;Options;0;0
getVerboseOptTransformationsRegex;getVerboseOptTransformationsRegex();1;OMR;Options;0;0
getVerboseOption;getVerboseOption(enum TR_VerboseFlags);1;OMR;Options;0;0
getVerboseOptionName;getVerboseOptionName(enum TR_VerboseFlags);1;OMR;Options;0;0
hasOptionSets;hasOptionSets();1;OMR;Options;0;0
hasSomeLogFile;hasSomeLogFile();1;OMR;Options;0;0
helpOption;helpOption(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
inlinefileOption;inlinefileOption(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
insertDebuggingCounters;insertDebuggingCounters();1;OMR;Options;0;0
isAnySamplingJProfilingOptionSet;isAnySamplingJProfilingOptionSet();1;OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags);1;OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags);0;OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags);0;OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags);0;OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags);0;OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags);0;OMR;Options;0;0
isAnyVerboseOptionSet;isAnyVerboseOptionSet();0;OMR;Options;0;0
isDisabled;isDisabled(OMR::Optimizations);1;OMR;Options;0;0
isDisabledForAllMethods;isDisabledForAllMethods(OMR::Optimizations);1;OMR;Options;0;0
isDisabledForAnyMethod;isDisabledForAnyMethod(OMR::Optimizations);1;OMR;Options;0;0
isFullyInitialized;isFullyInitialized();1;OMR;Options;0;0
isOptionSetForAnyMethod;isOptionSetForAnyMethod(enum TR_CompilationOptions);1;OMR;Options;0;0
isQuickstartDetected;isQuickstartDetected();1;OMR;Options;0;0
isVariableActiveCardTableBase;isVariableActiveCardTableBase();1;OMR;Options;0;0
isVariableHeapBaseForBarrierRange0;isVariableHeapBaseForBarrierRange0();1;OMR;Options;0;0
isVariableHeapSizeForBarrierRange0;isVariableHeapSizeForBarrierRange0();1;OMR;Options;0;0
isVerboseFileSet;isVerboseFileSet();1;OMR;Options;0;0
jitLatePostProcess;jitLatePostProcess(TR::OptionSet *,void *);1;OMR;Options;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Options;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Options;0;0
jitPostProcess;jitPostProcess();1;OMR;Options;0;0
jitPreProcess;jitPreProcess();1;OMR;Options;0;0
latePostProcess;latePostProcess(TR::Options *,void *,_Bool);1;OMR;Options;0;0
latePostProcessAOT;latePostProcessAOT(void *);1;OMR;Options;0;0
latePostProcessJIT;latePostProcessJIT(void *);1;OMR;Options;0;0
limitOption;limitOption(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
limitfileOption;limitfileOption(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
needWriteBarriers;needWriteBarriers();1;OMR;Options;0;0
negateProcessingMethod;negateProcessingMethod(TR::OptionFunctionPtr);1;OMR;Options;0;0
openLogFile;openLogFile(int32_t);1;OMR;Options;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Options;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Options;0;0
operator delete;operator delete(void *,size_t);0;OMR;Options;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Options;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Options;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Options;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Options;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Options;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Options;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;Options;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Options;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Options;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Options;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Options;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Options;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Options;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Options;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Options;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Options;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Options;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Options;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Options;0;0
printOptions;printOptions(char *,char *);1;OMR;Options;0;0
processOption;processOption(char *,TR::OptionTable *,void *,int32_t,TR::OptionSet *);1;OMR;Options;0;0
processOptionSet;processOptionSet(char *,char *,TR::OptionSet *);1;OMR;Options;0;0
processOptionSet;processOptionSet(char *,char *,TR::Options *,_Bool);0;OMR;Options;0;0
processOptionSet;processOptionSet(char *,TR::OptionSet *,void *,_Bool);0;OMR;Options;0;0
processOptions;processOptions(char *,char *,void *,class TR_FrontEnd *,TR::Options *);1;OMR;Options;0;0
processOptions;processOptions(char *,char *,TR::Options *);0;OMR;Options;0;0
processOptionsAOT;processOptionsAOT(char *,void *,class TR_FrontEnd *);1;OMR;Options;0;0
processOptionsJIT;processOptionsJIT(char *,void *,class TR_FrontEnd *);1;OMR;Options;0;0
realTimeGC;realTimeGC();1;OMR;Options;0;0
requiresDebugObject;requiresDebugObject();1;OMR;Options;0;0
requiresLogFile;requiresLogFile();1;OMR;Options;0;0
resetBit;resetBit(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
resetSamplingJProfilingOption;resetSamplingJProfilingOption(enum TR_SamplingJProfilingFlags);1;OMR;Options;0;0
resetVerboseOption;resetVerboseOption(enum TR_VerboseFlags);1;OMR;Options;0;0
safelyCloseLogs;safelyCloseLogs(TR::Options *,class TR_MCTLogs *&,class TR_FrontEnd *);1;OMR;Options;0;0
self;self();1;OMR;Options;0;0
set32BitHexadecimal;set32BitHexadecimal(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
set32BitNumeric;set32BitNumeric(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
set32BitNumericInJitConfig;set32BitNumericInJitConfig(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
set32BitSignedNumeric;set32BitSignedNumeric(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
set32BitValue;set32BitValue(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
set64BitSignedNumeric;set64BitSignedNumeric(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setAOTCmdLineOptions;setAOTCmdLineOptions(TR::Options *);1;OMR;Options;0;0
setAOTCompile;setAOTCompile(_Bool);1;OMR;Options;0;0
setActiveCardTableBase;setActiveCardTableBase(uintptr_t);1;OMR;Options;0;0
setAddressEnumerationBits;setAddressEnumerationBits(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setAggressiveQuickStart;setAggressiveQuickStart();1;OMR;Options;0;0
setAllowRecompilation;setAllowRecompilation(_Bool);1;OMR;Options;0;0
setAnOptionSetContainsACountValue;setAnOptionSetContainsACountValue(_Bool);1;OMR;Options;0;0
setBit;setBit(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setBitsFromStringSet;setBitsFromStringSet(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setCanJITCompile;setCanJITCompile(_Bool);1;OMR;Options;0;0
setConservativeDefaultBehavior;setConservativeDefaultBehavior();1;OMR;Options;0;0
setConservativeQuickStart;setConservativeQuickStart();1;OMR;Options;0;0
setCount;setCount(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setCounts;setCounts();1;OMR;Options;0;0
setDebug;setDebug(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setDefaultsForDeterministicMode;setDefaultsForDeterministicMode();1;OMR;Options;0;0
setDisabled;setDisabled(OMR::Optimizations,_Bool);1;OMR;Options;0;0
setDumbInlinerBytecodeSizeCutoff;setDumbInlinerBytecodeSizeCutoff(int32_t);1;OMR;Options;0;0
setFixedOptLevel;setFixedOptLevel(int32_t);1;OMR;Options;0;0
setForAllMethods;setForAllMethods(enum TR_CompilationOptions);1;OMR;Options;0;0
setGCRCount;setGCRCount(int32_t);1;OMR;Options;0;0
setGcCardSize;setGcCardSize(uintptr_t);1;OMR;Options;0;0
setGcMode;setGcMode(enum TR_WriteBarrierKind);1;OMR;Options;0;0
setGlobalAggressiveAOT;setGlobalAggressiveAOT();1;OMR;Options;0;0
setHeapAddressToCardAddressShift;setHeapAddressToCardAddressShift(uintptr_t);1;OMR;Options;0;0
setHeapBase;setHeapBase(uintptr_t);1;OMR;Options;0;0
setHeapBaseForBarrierRange0;setHeapBaseForBarrierRange0(uintptr_t);1;OMR;Options;0;0
setHeapSizeForBarrierRange0;setHeapSizeForBarrierRange0(uintptr_t);1;OMR;Options;0;0
setHeapTop;setHeapTop(uintptr_t);1;OMR;Options;0;0
setInitialBCount;setInitialBCount(int32_t);1;OMR;Options;0;0
setInitialCount;setInitialCount(int32_t);1;OMR;Options;0;0
setInitialMILCount;setInitialMILCount(int32_t);1;OMR;Options;0;0
setInlinerBorderFrequency;setInlinerBorderFrequency(int32_t);1;OMR;Options;0;0
setInlinerCGBorderFrequency;setInlinerCGBorderFrequency(int32_t);1;OMR;Options;0;0
setInlinerCGColdBorderFrequency;setInlinerCGColdBorderFrequency(int32_t);1;OMR;Options;0;0
setInlinerCGVeryColdBorderFrequency;setInlinerCGVeryColdBorderFrequency(int32_t);1;OMR;Options;0;0
setInlinerColdBorderFrequency;setInlinerColdBorderFrequency(int32_t);1;OMR;Options;0;0
setInlinerVeryColdBorderFrequency;setInlinerVeryColdBorderFrequency(int32_t);1;OMR;Options;0;0
setInlinerVeryColdBorderFrequencyAtCold;setInlinerVeryColdBorderFrequencyAtCold(int32_t);1;OMR;Options;0;0
setInsertGCRTrees;setInsertGCRTrees();1;OMR;Options;0;0
setIsFullyInitialized;setIsFullyInitialized();1;OMR;Options;0;0
setIsVariableActiveCardTableBase;setIsVariableActiveCardTableBase(uintptr_t);1;OMR;Options;0;0
setIsVariableHeapBaseForBarrierRange0;setIsVariableHeapBaseForBarrierRange0(uintptr_t);1;OMR;Options;0;0
setIsVariableHeapSizeForBarrierRange0;setIsVariableHeapSizeForBarrierRange0(uintptr_t);1;OMR;Options;0;0
setJitMethodEntryAlignmentBoundary;setJitMethodEntryAlignmentBoundary(int32_t);1;OMR;Options;0;0
setLocalAggressiveAOT;setLocalAggressiveAOT();1;OMR;Options;0;0
setLogFile;setLogFile(TR::FILE *);1;OMR;Options;0;0
setLogForCompilationThread;setLogForCompilationThread(int32_t,TR::Options *);1;OMR;Options;0;0
setLogListForOtherCompThreads;setLogListForOtherCompThreads(class TR_MCTLogs *);1;OMR;Options;0;0
setMoreAggressiveInlining;setMoreAggressiveInlining();1;OMR;Options;0;0
setNumeric;setNumeric(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setOptLevel;setOptLevel(int32_t);1;OMR;Options;0;0
setOption;setOption(uint32_t,_Bool);1;OMR;Options;0;0
setOptionInAllOptionSets;setOptionInAllOptionSets(uint32_t,_Bool);1;OMR;Options;0;0
setQuickStart;setQuickStart();1;OMR;Options;0;0
setRealTimeGC;setRealTimeGC(_Bool);1;OMR;Options;0;0
setRegex;setRegex(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setSamplingJProfilingBits;setSamplingJProfilingBits(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setSamplingJProfilingOption;setSamplingJProfilingOption(enum TR_SamplingJProfilingFlags);1;OMR;Options;0;0
setScratchSpaceLimit;setScratchSpaceLimit(size_t);1;OMR;Options;0;0
setScratchSpaceLowerBound;setScratchSpaceLowerBound(size_t);1;OMR;Options;0;0
setSharedClassCache;setSharedClassCache(_Bool);1;OMR;Options;0;0
setStatic32BitValue;setStatic32BitValue(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setStaticBool;setStaticBool(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setStaticHexadecimal;setStaticHexadecimal(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setStaticNumeric;setStaticNumeric(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setStaticNumericKBAdjusted;setStaticNumericKBAdjusted(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setStaticRegex;setStaticRegex(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setStaticString;setStaticString(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setString;setString(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setStringForPrivateBase;setStringForPrivateBase(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setStringInJitConfig;setStringInJitConfig(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setTarget;setTarget();1;OMR;Options;0;0
setTrivialInlinerMaxSize;setTrivialInlinerMaxSize(int32_t);1;OMR;Options;0;0
setValue;setValue(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setVerboseBits;setVerboseBits(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setVerboseBitsHelper;setVerboseBitsHelper(char *,VerboseOptionFlagArray *,uintptrj_t);1;OMR;Options;0;0
setVerboseBitsInJitPrivateConfig;setVerboseBitsInJitPrivateConfig(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
setVerboseOption;setVerboseOption(enum TR_VerboseFlags);1;OMR;Options;0;0
setVerboseOptions;setVerboseOptions(uint64_t);1;OMR;Options;0;0
sharedClassCache;sharedClassCache();1;OMR;Options;0;0
showOptionsInEffect;showOptionsInEffect();1;OMR;Options;0;0
showPID;showPID();1;OMR;Options;0;0
shutdown;shutdown(class TR_FrontEnd *);1;OMR;Options;0;0
startupTimeMatters;startupTimeMatters();1;OMR;Options;0;0
staticDebugCounterIsEnabled;staticDebugCounterIsEnabled(const char *,int8_t);1;OMR;Options;0;0
suppressLogFileBecauseDebugObjectNotCreated;suppressLogFileBecauseDebugObjectNotCreated(_Bool);1;OMR;Options;0;0
trace;trace(OMR::Optimizations);1;OMR;Options;0;0
traceOptimization;traceOptimization(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
tracingOptimization;tracingOptimization();1;OMR;Options;0;0
useCompressedPointers;useCompressedPointers();1;OMR;Options;0;0
validateOptions;validateOptions(void *,class TR_FrontEnd *);1;OMR;Options;0;0
validateOptionsTables;validateOptionsTables(void *,class TR_FrontEnd *);1;OMR;Options;0;0
versionOption;versionOption(char *,void *,TR::OptionTable *);1;OMR;Options;0;0
PersistentInfo;PersistentInfo(class OMR::PersistentInfo &&);1;OMR;PersistentInfo;1;0
PersistentInfo;PersistentInfo(class TR_PersistentMemory *);0;OMR;PersistentInfo;0;0
PersistentInfo;PersistentInfo(const class OMR::PersistentInfo &);0;OMR;PersistentInfo;1;0
PersistentInfo;PersistentInfo(const class TR::PersistentInfo &);0;TR;PersistentInfo;1;0
PersistentInfo;PersistentInfo(class TR::PersistentInfo &&);0;TR;PersistentInfo;1;0
advanceCurPseudoRandomNumbersListElem;advanceCurPseudoRandomNumbersListElem();1;OMR;PersistentInfo;0;0
createCounters;createCounters(class TR_PersistentMemory *);1;OMR;PersistentInfo;0;0
getCodeCacheManager;getCodeCacheManager();1;OMR;PersistentInfo;0;0
getCurIndex;getCurIndex();1;OMR;PersistentInfo;0;0
getCurPseudoRandomNumbersListElem;getCurPseudoRandomNumbersListElem();1;OMR;PersistentInfo;0;0
getDynamicCounters;getDynamicCounters();1;OMR;PersistentInfo;0;0
getLastDebugCounterResetSeconds;getLastDebugCounterResetSeconds();1;OMR;PersistentInfo;0;0
getNextPseudoRandomNumber;getNextPseudoRandomNumber(int32_t);1;OMR;PersistentInfo;0;0
getPersistentTOC;getPersistentTOC();1;OMR;PersistentInfo;0;0
getPseudoRandomNumbersList;getPseudoRandomNumbersList();1;OMR;PersistentInfo;0;0
getPseudoRandomNumbersListPtr;getPseudoRandomNumbersListPtr();1;OMR;PersistentInfo;0;0
getStaticCounters;getStaticCounters();1;OMR;PersistentInfo;0;0
isObsoleteClass;isObsoleteClass(void *,class TR_FrontEnd *);1;OMR;PersistentInfo;0;0
isRuntimeInstrumentationEnabled;isRuntimeInstrumentationEnabled();1;OMR;PersistentInfo;0;0
operator=;operator=(class OMR::PersistentInfo &&);1;OMR;PersistentInfo;1;0
operator=;operator=(const class OMR::PersistentInfo &);0;OMR;PersistentInfo;1;0
operator=;operator=(class TR::PersistentInfo &&);0;TR;PersistentInfo;1;0
operator=;operator=(const class TR::PersistentInfo &);0;TR;PersistentInfo;1;0
self;self();1;OMR;PersistentInfo;0;0
setCodeCacheManager;setCodeCacheManager(TR::CodeCacheManager *);1;OMR;PersistentInfo;0;0
setLastDebugCounterResetSeconds;setLastDebugCounterResetSeconds(int64_t);1;OMR;PersistentInfo;0;0
setPersistentTOC;setPersistentTOC(class OMR::TableOfConstants *);1;OMR;PersistentInfo;0;0
~PersistentInfo;~PersistentInfo();1;OMR;PersistentInfo;1;0
Destructable;Destructable(const class TR::Region::Destructable &);1;TR::Region;Destructable;1;0
Destructable;Destructable(class TR::Region::Destructable *const);0;TR::Region;Destructable;0;0
Instance<T>;Instance<T>(class TR::Region::Destructable *,const T &);1;TR::Region;Instance;0;0
operator=;operator=(const class TR::Region::Destructable &);1;TR::Region;Destructable;1;0
prev;prev();1;TR::Region;Destructable;0;0
value;value();1;TR::Region;Instance;0;0
~Destructable;~Destructable();1;TR::Region;Destructable;0;1
~Instance<T>;~Instance<T>();1;TR::Region;Instance;0;1
RegisterIterator;RegisterIterator(class OMR::X86::RegisterIterator &&);1;OMR::X86;RegisterIterator;1;0
RegisterIterator;RegisterIterator(TR::Machine *,enum TR_RegisterKinds);0;OMR::X86;RegisterIterator;0;0
RegisterIterator;RegisterIterator(const class OMR::X86::RegisterIterator &);0;OMR::X86;RegisterIterator;1;0
RegisterIterator;RegisterIterator(class TR::RegisterIterator &&);0;TR;RegisterIterator;1;0
RegisterIterator;RegisterIterator(const class TR::RegisterIterator &);0;TR;RegisterIterator;1;0
TR_X86FPStackIterator;TR_X86FPStackIterator(TR::Machine *,enum TR_RegisterKinds);1;TR;X86FPStackIterator;0;0
getCurrent;getCurrent();1;OMR::X86;RegisterIterator;0;0
getFirst;getFirst();1;OMR::X86;RegisterIterator;0;0
getNext;getNext();1;OMR::X86;RegisterIterator;0;0
~RegisterIterator;~RegisterIterator();1;OMR::X86;RegisterIterator;1;0
ResolvedMethod;ResolvedMethod(class TestCompiler::ResolvedMethod &&);1;TestCompiler;ResolvedMethod;1;0
ResolvedMethod;ResolvedMethod(const class TestCompiler::ResolvedMethod &);0;TestCompiler;ResolvedMethod;1;0
ResolvedMethod;ResolvedMethod(TR::MethodBuilder *);0;TestCompiler;ResolvedMethod;0;0
ResolvedMethod;ResolvedMethod(class TR_OpaqueMethodBlock *);0;TestCompiler;ResolvedMethod;0;0
ResolvedMethod;ResolvedMethod(const char *,const char *,char *,int32_t,TR::IlType **,TR::IlType *,void *,TR::IlInjector *);0;TestCompiler;ResolvedMethod;0;0
ResolvedMethod;ResolvedMethod(char *,char *,char *,int32_t,TR::IlType **,TR::IlType *,void *,TR::IlInjector *);0;TR;ResolvedMethod;0;0
ResolvedMethodBase;ResolvedMethodBase(class TestCompiler::ResolvedMethodBase &&);1;TestCompiler;ResolvedMethodBase;1;0
ResolvedMethodBase;ResolvedMethodBase(const class TestCompiler::ResolvedMethodBase &);0;TestCompiler;ResolvedMethodBase;1;0
ResolvedMethodBase;ResolvedMethodBase();0;TestCompiler;ResolvedMethodBase;1;0
TR_ResolvedMethod;TR_ResolvedMethod();1;TR;ResolvedMethod;1;0
TR_ResolvedMethod;TR_ResolvedMethod(class TR_ResolvedMethod &&);0;TR;ResolvedMethod;1;0
TR_ResolvedMethod;TR_ResolvedMethod(const class TR_ResolvedMethod &);0;TR;ResolvedMethod;1;0
_genMethodILForPeeking;_genMethodILForPeeking(TR::ResolvedMethodSymbol *,TR::Compilation *,_Bool,class TR_PrexArgInfo *);1;TR;ResolvedMethod;0;1
addressContainingIsOverriddenBit;addressContainingIsOverriddenBit();1;TR;ResolvedMethod;0;1
addressOfClassOfMethod;addressOfClassOfMethod();1;TR;ResolvedMethod;0;1
allocateException;allocateException(uint32_t,TR::Compilation *);1;TR;ResolvedMethod;0;1
archetypeArgPlaceholderSlot;archetypeArgPlaceholderSlot(class TR_Memory *);1;TR;ResolvedMethod;0;1
bytecodeStart;bytecodeStart();1;TR;ResolvedMethod;0;1
callSiteTableEntryAddress;callSiteTableEntryAddress(int32_t);1;TR;ResolvedMethod;0;1
canAlwaysShareSymbolDespiteOwningMethod;canAlwaysShareSymbolDespiteOwningMethod(class TR_ResolvedMethod *);1;TR;ResolvedMethod;0;1
classCPIndexOfFieldOrStatic;classCPIndexOfFieldOrStatic(int32_t);1;TR;ResolvedMethod;0;1
classCPIndexOfMethod;classCPIndexOfMethod(uint32_t);1;TR;ResolvedMethod;0;1
classNameChars;classNameChars();1;TR;ResolvedMethod;0;1
classNameLength;classNameLength();1;TR;ResolvedMethod;0;1
classNameOfFieldOrStatic;classNameOfFieldOrStatic(int32_t,int32_t &);1;TR;ResolvedMethod;0;1
classOfMethod;classOfMethod();1;TR;ResolvedMethod;0;1
classOfStatic;classOfStatic(int32_t,_Bool);1;TR;ResolvedMethod;0;1
classSignatureOfFieldOrStatic;classSignatureOfFieldOrStatic(int32_t,int32_t &);1;TR;ResolvedMethod;0;1
code;code();1;TestCompiler;ResolvedMethod;0;1
computeSignatureChars;computeSignatureChars();1;TestCompiler;ResolvedMethod;0;0
computeSignatureCharsPrimitive;computeSignatureCharsPrimitive();1;TestCompiler;ResolvedMethod;0;0
constantPool;constantPool();1;TR;ResolvedMethod;0;1
containingClass;containingClass();1;TR;ResolvedMethod;0;1
convertToMethod;convertToMethod();1;TR;ResolvedMethod;0;1
directCallOpCode;directCallOpCode();1;TR;ResolvedMethod;0;1
doubleConstant;doubleConstant(int32_t,class TR_Memory *);1;TR;ResolvedMethod;0;1
exceptionData;exceptionData(int32_t,int32_t *,int32_t *,int32_t *);1;TR;ResolvedMethod;0;1
externalName;externalName(class TR_Memory *,enum TR_AllocationKind);1;TR;ResolvedMethod;0;1
fe;fe();1;TR;ResolvedMethod;0;0
fieldAttributes;fieldAttributes(TR::Compilation *,int32_t,uint32_t *,TR::DataType *,_Bool *,_Bool *,_Bool *,_Bool,_Bool *,_Bool);1;TR;ResolvedMethod;0;1
fieldName;fieldName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind);1;TR;ResolvedMethod;0;1
fieldName;fieldName(int32_t,class TR_Memory *,enum TR_AllocationKind);0;TR;ResolvedMethod;0;1
fieldNameChars;fieldNameChars(int32_t,int32_t &);1;TR;ResolvedMethod;0;1
fieldSignatureChars;fieldSignatureChars(int32_t,int32_t &);1;TR;ResolvedMethod;0;1
fieldsAreSame;fieldsAreSame(int32_t,class TR_ResolvedMethod *,int32_t,_Bool &);1;TR;ResolvedMethod;0;1
findOrCreateJittedMethodSymbol;findOrCreateJittedMethodSymbol(TR::Compilation *);1;TR;ResolvedMethod;0;1
floatConstant;floatConstant(int32_t);1;TR;ResolvedMethod;0;1
genMethodILForPeeking;genMethodILForPeeking(TR::ResolvedMethodSymbol *,TR::Compilation *,_Bool,class TR_PrexArgInfo *);1;TR;ResolvedMethod;0;0
getClassFromConstantPool;getClassFromConstantPool(TR::Compilation *,uint32_t,_Bool);1;TR;ResolvedMethod;0;1
getClassFromFieldOrStatic;getClassFromFieldOrStatic(TR::Compilation *,int32_t,_Bool);1;TR;ResolvedMethod;0;0
getClassNameFromConstantPool;getClassNameFromConstantPool(uint32_t,uint32_t &);1;TR;ResolvedMethod;0;1
getDeclaringClassFromFieldOrStatic;getDeclaringClassFromFieldOrStatic(TR::Compilation *,int32_t);1;TR;ResolvedMethod;0;1
getEntryPoint;getEntryPoint();1;TestCompiler;ResolvedMethod;0;0
getIlGeneratorMethodDetails;getIlGeneratorMethodDetails();1;TR;ResolvedMethod;0;1
getInjector;getInjector(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *);1;TestCompiler;ResolvedMethod;0;0
getInvocationCount;getInvocationCount();1;TR;ResolvedMethod;0;1
getLDCType;getLDCType(int32_t);1;TR;ResolvedMethod;0;1
getLineNumber;getLineNumber();1;TestCompiler;ResolvedMethod;0;0
getMethodHandleLocation;getMethodHandleLocation();1;TR;ResolvedMethod;0;1
getNonPersistentIdentifier;getNonPersistentIdentifier();1;TR;ResolvedMethod;0;1
getNumArgs;getNumArgs();1;TestCompiler;ResolvedMethod;0;0
getParameterIterator;getParameterIterator(TR::Compilation &);1;TR;ResolvedMethod;0;0
getPersistentIdentifier;getPersistentIdentifier();1;TR;ResolvedMethod;0;1
getRecognizedMethod;getRecognizedMethod();1;TR;ResolvedMethod;0;0
getResolvedDynamicMethod;getResolvedDynamicMethod(TR::Compilation *,int32_t,_Bool *);1;TR;ResolvedMethod;0;1
getResolvedHandleMethod;getResolvedHandleMethod(TR::Compilation *,int32_t,_Bool *);1;TR;ResolvedMethod;0;1
getResolvedHandleMethodWithSignature;getResolvedHandleMethodWithSignature(TR::Compilation *,int32_t,char *);1;TR;ResolvedMethod;0;1
getResolvedInterfaceMethod;getResolvedInterfaceMethod(int32_t,uintptrj_t *);1;TR;ResolvedMethod;0;1
getResolvedInterfaceMethod;getResolvedInterfaceMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t);0;TR;ResolvedMethod;0;1
getResolvedInterfaceMethodOffset;getResolvedInterfaceMethodOffset(class TR_OpaqueClassBlock *,int32_t);1;TR;ResolvedMethod;0;1
getResolvedSpecialMethod;getResolvedSpecialMethod(TR::Compilation *,int32_t,_Bool *);1;TR;ResolvedMethod;0;1
getResolvedStaticMethod;getResolvedStaticMethod(TR::Compilation *,int32_t,_Bool *);1;TR;ResolvedMethod;0;1
getResolvedVirtualMethod;getResolvedVirtualMethod(TR::Compilation *,int32_t,_Bool,_Bool *);1;TR;ResolvedMethod;0;1
getResolvedVirtualMethod;getResolvedVirtualMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t,_Bool);0;TR;ResolvedMethod;0;1
getSignature;getSignature();1;TestCompiler;ResolvedMethod;0;0
getUnresolvedFieldInCP;getUnresolvedFieldInCP(int32_t);1;TR;ResolvedMethod;0;1
getUnresolvedSpecialMethodInCP;getUnresolvedSpecialMethodInCP(int32_t);1;TR;ResolvedMethod;0;1
getUnresolvedStaticMethodInCP;getUnresolvedStaticMethodInCP(int32_t);1;TR;ResolvedMethod;0;1
getUnresolvedVirtualMethodInCP;getUnresolvedVirtualMethodInCP(int32_t);1;TR;ResolvedMethod;0;1
hasBackwardBranches;hasBackwardBranches();1;TR;ResolvedMethod;0;1
indirectCallOpCode;indirectCallOpCode();1;TR;ResolvedMethod;0;1
intConstant;intConstant(int32_t);1;TR;ResolvedMethod;0;1
isAbstract;isAbstract();1;TR;ResolvedMethod;0;1
isClassConstant;isClassConstant(int32_t);1;TR;ResolvedMethod;0;1
isCold;isCold(TR::Compilation *,_Bool,TR::ResolvedMethodSymbol *);1;TR;ResolvedMethod;0;1
isCompilable;isCompilable(class TR_Memory *);1;TR;ResolvedMethod;0;1
isConstructor;isConstructor();1;TR;ResolvedMethod;0;1
isDAAIntrinsicMethod;isDAAIntrinsicMethod();1;TR;ResolvedMethod;0;0
isDAAMarshallingIntrinsicMethod;isDAAMarshallingIntrinsicMethod();1;TR;ResolvedMethod;0;0
isDAAMarshallingWrapperMethod;isDAAMarshallingWrapperMethod();1;TR;ResolvedMethod;0;0
isDAAPackedDecimalIntrinsicMethod;isDAAPackedDecimalIntrinsicMethod();1;TR;ResolvedMethod;0;0
isDAAPackedDecimalWrapperMethod;isDAAPackedDecimalWrapperMethod();1;TR;ResolvedMethod;0;0
isDAAWrapperMethod;isDAAWrapperMethod();1;TR;ResolvedMethod;0;0
isFinal;isFinal();1;TR;ResolvedMethod;0;1
isFinalInObject;isFinalInObject();1;TestCompiler;ResolvedMethodBase;0;1
isInlineable;isInlineable(TR::Compilation *);1;TR;ResolvedMethod;0;1
isInterpreted;isInterpreted();1;TR;ResolvedMethod;0;1
isJ9;isJ9();1;TR;ResolvedMethod;0;0
isJITInternalNative;isJITInternalNative();1;TR;ResolvedMethod;0;1
isJNINative;isJNINative();1;TR;ResolvedMethod;0;1
isMethodHandleConstant;isMethodHandleConstant(int32_t);1;TR;ResolvedMethod;0;1
isMethodTypeConstant;isMethodTypeConstant(int32_t);1;TR;ResolvedMethod;0;1
isNative;isNative();1;TR;ResolvedMethod;0;1
isNewInstanceImplThunk;isNewInstanceImplThunk();1;TR;ResolvedMethod;0;1
isNonEmptyObjectConstructor;isNonEmptyObjectConstructor();1;TR;ResolvedMethod;0;1
isObjectConstructor;isObjectConstructor();1;TR;ResolvedMethod;0;1
isPrivate;isPrivate();1;TR;ResolvedMethod;0;1
isProtected;isProtected();1;TR;ResolvedMethod;0;1
isPublic;isPublic();1;TR;ResolvedMethod;0;1
isPython;isPython();1;TR;ResolvedMethod;0;0
isRuby;isRuby();1;TR;ResolvedMethod;0;0
isSameMethod;isSameMethod(class TR_ResolvedMethod *);1;TR;ResolvedMethod;0;1
isStatic;isStatic();1;TR;ResolvedMethod;0;1
isStrictFP;isStrictFP();1;TR;ResolvedMethod;0;1
isStringConstant;isStringConstant(int32_t);1;TR;ResolvedMethod;0;1
isSubjectToPhaseChange;isSubjectToPhaseChange(TR::Compilation *);1;TR;ResolvedMethod;0;1
isSynchronized;isSynchronized();1;TR;ResolvedMethod;0;1
isUnresolvedCallSiteTableEntry;isUnresolvedCallSiteTableEntry(int32_t);1;TR;ResolvedMethod;0;1
isUnresolvedMethodHandle;isUnresolvedMethodHandle(int32_t);1;TR;ResolvedMethod;0;1
isUnresolvedMethodType;isUnresolvedMethodType(int32_t);1;TR;ResolvedMethod;0;1
isUnresolvedMethodTypeTableEntry;isUnresolvedMethodTypeTableEntry(int32_t);1;TR;ResolvedMethod;0;1
isUnresolvedString;isUnresolvedString(int32_t,_Bool);1;TR;ResolvedMethod;0;1
isWarmCallGraphTooBig;isWarmCallGraphTooBig(uint32_t,TR::Compilation *);1;TR;ResolvedMethod;0;1
localName;localName(uint32_t,uint32_t,class TR_Memory *);1;TR;ResolvedMethod;0;1
localName;localName(uint32_t,uint32_t,int32_t &,class TR_Memory *);0;TR;ResolvedMethod;0;1
longConstant;longConstant(int32_t);1;TR;ResolvedMethod;0;1
makeParameterList;makeParameterList(TR::ResolvedMethodSymbol *);1;TR;ResolvedMethod;0;1
maxBytecodeIndex;maxBytecodeIndex();1;TR;ResolvedMethod;0;1
methodHandleConstant;methodHandleConstant(int32_t);1;TR;ResolvedMethod;0;1
methodTypeConstant;methodTypeConstant(int32_t);1;TR;ResolvedMethod;0;1
methodTypeTableEntryAddress;methodTypeTableEntryAddress(int32_t);1;TR;ResolvedMethod;0;1
nameChars;nameChars();1;TR;ResolvedMethod;0;1
nameLength;nameLength();1;TR;ResolvedMethod;0;1
newInstancePrototypeSignature;newInstancePrototypeSignature(class TR_Memory *,enum TR_AllocationKind);1;TR;ResolvedMethod;0;1
numberOfExceptionHandlers;numberOfExceptionHandlers();1;TR;ResolvedMethod;0;1
numberOfExplicitParameters;numberOfExplicitParameters();1;TR;ResolvedMethod;0;1
numberOfParameterSlots;numberOfParameterSlots();1;TR;ResolvedMethod;0;1
numberOfParameters;numberOfParameters();1;TR;ResolvedMethod;0;1
numberOfPendingPushes;numberOfPendingPushes();1;TR;ResolvedMethod;0;1
numberOfTemps;numberOfTemps();1;TR;ResolvedMethod;0;1
operator=;operator=(class TR_ResolvedMethod &&);1;TR;ResolvedMethod;1;0
operator=;operator=(const class TR_ResolvedMethod &);0;TR;ResolvedMethod;1;0
operator=;operator=(class TestCompiler::ResolvedMethodBase &&);0;TestCompiler;ResolvedMethodBase;1;0
operator=;operator=(const class TestCompiler::ResolvedMethodBase &);0;TestCompiler;ResolvedMethodBase;1;0
operator=;operator=(const class TestCompiler::ResolvedMethod &);0;TestCompiler;ResolvedMethod;1;0
operator=;operator=(class TestCompiler::ResolvedMethod &&);0;TestCompiler;ResolvedMethod;1;0
operator=;operator=(class TR::ResolvedMethod &&);0;TR;ResolvedMethod;1;0
operator=;operator=(const class TR::ResolvedMethod &);0;TR;ResolvedMethod;1;0
owningMethod;owningMethod();1;TR;ResolvedMethod;0;1
owningMethodDoesntMatter;owningMethodDoesntMatter();1;TR;ResolvedMethod;0;1
parmType;parmType(uint32_t);1;TR;ResolvedMethod;0;1
ramConstantPool;ramConstantPool();1;TR;ResolvedMethod;0;1
resolvedMethodAddress;resolvedMethodAddress();1;TR;ResolvedMethod;0;1
returnIlType;returnIlType();1;TestCompiler;ResolvedMethod;0;0
returnOpCode;returnOpCode();1;TR;ResolvedMethod;0;1
returnType;returnType();1;TR;ResolvedMethod;0;1
returnTypeIsUnsigned;returnTypeIsUnsigned();1;TR;ResolvedMethod;0;1
returnTypeWidth;returnTypeWidth();1;TR;ResolvedMethod;0;1
setEntryPoint;setEntryPoint(void *);1;TestCompiler;ResolvedMethod;0;0
setInvocationCount;setInvocationCount(intptrj_t,intptrj_t);1;TR;ResolvedMethod;0;1
setMethodHandleLocation;setMethodHandleLocation(uintptrj_t *);1;TR;ResolvedMethod;0;1
setOwningMethod;setOwningMethod(class TR_ResolvedMethod *);1;TR;ResolvedMethod;0;1
setVirtualMethodIsOverridden;setVirtualMethodIsOverridden();1;TR;ResolvedMethod;0;1
setWarmCallGraphTooBig;setWarmCallGraphTooBig(uint32_t,TR::Compilation *);1;TR;ResolvedMethod;0;1
signature;signature(class TR_Memory *,enum TR_AllocationKind);1;TR;ResolvedMethod;0;1
signatureChars;signatureChars();1;TR;ResolvedMethod;0;1
signatureLength;signatureLength();1;TR;ResolvedMethod;0;1
startAddressForInterpreterOfJittedMethod;startAddressForInterpreterOfJittedMethod();1;TR;ResolvedMethod;0;1
startAddressForJITInternalNativeMethod;startAddressForJITInternalNativeMethod();1;TR;ResolvedMethod;0;1
startAddressForJNIMethod;startAddressForJNIMethod(TR::Compilation *);1;TR;ResolvedMethod;0;1
startAddressForJittedMethod;startAddressForJittedMethod();1;TR;ResolvedMethod;0;1
staticAttributes;staticAttributes(TR::Compilation *,int32_t,void **,TR::DataType *,_Bool *,_Bool *,_Bool *,_Bool,_Bool *,_Bool);1;TR;ResolvedMethod;0;1
staticName;staticName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind);1;TR;ResolvedMethod;0;1
staticName;staticName(int32_t,class TR_Memory *,enum TR_AllocationKind);0;TR;ResolvedMethod;0;1
staticNameChars;staticNameChars(int32_t,int32_t &);1;TR;ResolvedMethod;0;1
staticSignatureChars;staticSignatureChars(int32_t,int32_t &);1;TR;ResolvedMethod;0;1
staticsAreSame;staticsAreSame(int32_t,class TR_ResolvedMethod *,int32_t,_Bool &);1;TR;ResolvedMethod;0;1
stringConstant;stringConstant(int32_t);1;TR;ResolvedMethod;0;1
vTableSlot;vTableSlot(uint32_t);1;TR;ResolvedMethod;0;1
virtualCallSelector;virtualCallSelector(uint32_t);1;TR;ResolvedMethod;0;1
virtualMethodIsOverridden;virtualMethodIsOverridden();1;TR;ResolvedMethod;0;1
~ResolvedMethod;~ResolvedMethod();1;TestCompiler;ResolvedMethod;1;0
~ResolvedMethodBase;~ResolvedMethodBase();1;TestCompiler;ResolvedMethodBase;1;0
~TR_ResolvedMethod;~TR_ResolvedMethod();1;TR;ResolvedMethod;1;0
Method;Method(class TestCompiler::Method &&);1;TestCompiler;Method;1;0
Method;Method(const class TestCompiler::Method &);0;TestCompiler;Method;1;0
Method;Method();0;TestCompiler;Method;0;0
TR_Method;TR_Method(class TR_Method &&);1;TR;Method;1;0
TR_Method;TR_Method(const class TR_Method &);0;TR;Method;1;0
TR_Method;TR_Method(enum TR_Method::Type);0;TR;Method;0;0
classNameChars;classNameChars();1;TR;Method;0;1
classNameLength;classNameLength();1;TR;Method;0;1
convertToMethod;convertToMethod();1;TestCompiler;ResolvedMethod;0;1
directCallOpCode;directCallOpCode();1;TR;Method;0;1
getMandatoryRecognizedMethod;getMandatoryRecognizedMethod();1;TR;Method;0;0
getParameterIterator;getParameterIterator(TR::Compilation &,class TR_ResolvedMethod *);1;TR;Method;0;1
getPersistentIdentifier;getPersistentIdentifier();1;TestCompiler;ResolvedMethod;0;1
getRecognizedMethod;getRecognizedMethod();1;TR;Method;0;0
indirectCallOpCode;indirectCallOpCode();1;TR;Method;0;1
isArchetypeSpecimen;isArchetypeSpecimen();1;TR;Method;0;1
isBigDecimalConvertersMethod;isBigDecimalConvertersMethod(TR::Compilation *);1;TR;Method;0;1
isBigDecimalMethod;isBigDecimalMethod(TR::Compilation *);1;TR;Method;0;1
isConstructor;isConstructor();1;TR;Method;0;1
isFinalInObject;isFinalInObject();1;TR;Method;0;1
isInterpreted;isInterpreted();1;TestCompiler;ResolvedMethod;0;1
isJ9;isJ9();1;TR;Method;0;0
isPython;isPython();1;TR;Method;0;0
isRuby;isRuby();1;TR;Method;0;0
isUnsafeCAS;isUnsafeCAS(TR::Compilation *);1;TR;Method;0;1
isUnsafeWithObjectArg;isUnsafeWithObjectArg(TR::Compilation *);1;TR;Method;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;Method;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;Method;0;0
localName;localName(uint32_t,uint32_t,int32_t &,class TR_Memory *);1;TestCompiler;ResolvedMethod;0;1
makeParameterList;makeParameterList(TR::ResolvedMethodSymbol *);1;TestCompiler;ResolvedMethod;0;1
maxBytecodeIndex;maxBytecodeIndex();1;TestCompiler;ResolvedMethod;0;1
methodType;methodType();1;TR;Method;0;0
nameChars;nameChars();1;TR;Method;0;1
nameLength;nameLength();1;TR;Method;0;1
numberOfExplicitParameters;numberOfExplicitParameters();1;TR;Method;0;1
numberOfParameterSlots;numberOfParameterSlots();1;TestCompiler;ResolvedMethod;0;1
numberOfTemps;numberOfTemps();1;TestCompiler;ResolvedMethod;0;1
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;Method;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Method;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Method;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;Method;0;0
operator delete;operator delete(void *,size_t);0;TR;Method;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;Method;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Method;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;Method;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Method;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;Method;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;Method;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;Method;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Method;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;Method;0;0
operator new;operator new(size_t,TR::Region &);0;TR;Method;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Method;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;Method;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Method;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;Method;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;Method;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;Method;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Method;0;0
operator=;operator=(class TR_Method &&);1;TR;Method;1;0
operator=;operator=(const class TR_Method &);0;TR;Method;1;0
operator=;operator=(class TestCompiler::Method &&);0;TestCompiler;Method;1;0
operator=;operator=(const class TestCompiler::Method &);0;TestCompiler;Method;1;0
parmType;parmType(uint32_t);1;TR;Method;0;1
resolvedMethodAddress;resolvedMethodAddress();1;TestCompiler;ResolvedMethod;0;1
returnOpCode;returnOpCode();1;TR;Method;0;1
returnType;returnType();1;TR;Method;0;1
returnTypeIsUnsigned;returnTypeIsUnsigned();1;TR;Method;0;1
returnTypeWidth;returnTypeWidth();1;TR;Method;0;1
setArchetypeSpecimen;setArchetypeSpecimen(_Bool);1;TR;Method;0;1
setMandatoryRecognizedMethod;setMandatoryRecognizedMethod(TR::RecognizedMethod);1;TR;Method;0;0
setRecognizedMethod;setRecognizedMethod(TR::RecognizedMethod);1;TR;Method;0;0
signature;signature(class TR_Memory *,enum TR_AllocationKind);1;TR;Method;0;1
signatureChars;signatureChars();1;TR;Method;0;1
signatureLength;signatureLength();1;TR;Method;0;1
startAddressForInterpreterOfJittedMethod;startAddressForInterpreterOfJittedMethod();1;TestCompiler;ResolvedMethod;0;1
startAddressForJittedMethod;startAddressForJittedMethod();1;TestCompiler;ResolvedMethod;0;1
~Method;~Method();1;TestCompiler;Method;1;0
~TR_Method;~TR_Method();1;TR;Method;1;0
SnippetGCMap;SnippetGCMap(class OMR::SnippetGCMap &&);1;OMR;SnippetGCMap;1;0
SnippetGCMap;SnippetGCMap();0;OMR;SnippetGCMap;0;0
SnippetGCMap;SnippetGCMap(const class OMR::SnippetGCMap &);0;OMR;SnippetGCMap;1;0
SnippetGCMap;SnippetGCMap(class TR::SnippetGCMap &&);0;TR;SnippetGCMap;1;0
SnippetGCMap;SnippetGCMap(const class TR::SnippetGCMap &);0;TR;SnippetGCMap;1;0
getGCRegisterMask;getGCRegisterMask();1;OMR;SnippetGCMap;0;0
getStackMap;getStackMap();1;OMR;SnippetGCMap;0;0
isGCSafePoint;isGCSafePoint();1;OMR;SnippetGCMap;0;0
operator=;operator=(const class OMR::SnippetGCMap &);1;OMR;SnippetGCMap;1;0
operator=;operator=(class OMR::SnippetGCMap &&);0;OMR;SnippetGCMap;1;0
operator=;operator=(const class TR::SnippetGCMap &);0;TR;SnippetGCMap;1;0
operator=;operator=(class TR::SnippetGCMap &&);0;TR;SnippetGCMap;1;0
registerStackMap;registerStackMap(uint8_t *,TR::CodeGenerator *);1;OMR;SnippetGCMap;0;0
registerStackMap;registerStackMap(TR::Instruction *,TR::CodeGenerator *);0;OMR;SnippetGCMap;0;0
resetGCSafePoint;resetGCSafePoint();1;OMR;SnippetGCMap;0;0
setGCRegisterMask;setGCRegisterMask(uint32_t);1;OMR;SnippetGCMap;0;0
setGCSafePoint;setGCSafePoint();1;OMR;SnippetGCMap;0;0
setStackMap;setStackMap(class TR_GCStackMap *);1;OMR;SnippetGCMap;0;0
~SnippetGCMap;~SnippetGCMap();1;OMR;SnippetGCMap;1;0
Region;Region(TR::SegmentProvider &,TR::RawAllocator);1;TR;Region;0;0
Region;Region(const class TR::Region &);0;TR;Region;0;0
StackMemoryRegion;StackMemoryRegion(const class TR::StackMemoryRegion &);1;TR;StackMemoryRegion;1;0
StackMemoryRegion;StackMemoryRegion(class TR_Memory &);0;TR;StackMemoryRegion;0;0
allocate;allocate(const size_t,void *);1;TR;Region;0;0
bytesAllocated;bytesAllocated();1;TR;Region;0;0
deallocate;deallocate(void *,size_t);1;TR;Region;0;0
initialSize;initialSize();1;TR;Region;0;0
operator=;operator=(const class TR::Region &);1;TR;Region;1;0
operator=;operator=(const class TR::StackMemoryRegion &);0;TR;StackMemoryRegion;1;0
round;round(size_t);1;TR;Region;0;0
~Region;~Region();1;TR;Region;0;1
~StackMemoryRegion;~StackMemoryRegion();1;TR;StackMemoryRegion;0;1
SymbolReference;SymbolReference(const class OMR::SymbolReference &);1;OMR;SymbolReference;1;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t,const char *);0;OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::class SymbolReferenceTable::CommonNonhelperSymbol,TR::Symbol *,intptrj_t);0;OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,class mcount_t,int32_t,int32_t);0;OMR;SymbolReference;0;0
SymbolReference;SymbolReference(class OMR::SymbolReference &&);0;OMR;SymbolReference;1;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::SymbolReference &,intptrj_t,TR::class KnownObjectTable::Index);0;OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t);0;OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,int32_t,TR::Symbol *,intptrj_t);0;OMR;SymbolReference;0;0
SymbolReference;SymbolReference();0;OMR;SymbolReference;0;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *);0;OMR;SymbolReference;0;0
addToOffset;addToOffset(intptrj_t);1;OMR;SymbolReference;0;0
canCauseGC;canCauseGC();1;OMR;SymbolReference;0;0
canGCandExcept;canGCandExcept();1;OMR;SymbolReference;0;0
canGCandReturn;canGCandReturn();1;OMR;SymbolReference;0;0
canKill;canKill(TR::SymbolReference *);1;OMR;SymbolReference;0;0
copyAliasSets;copyAliasSets(TR::SymbolReference *,TR::SymbolReferenceTable *);1;OMR;SymbolReference;0;0
copyFlags;copyFlags(TR::SymbolReference *);1;OMR;SymbolReference;0;0
copyRefNumIfPossible;copyRefNumIfPossible(TR::SymbolReference *,TR::SymbolReferenceTable *);1;OMR;SymbolReference;0;0
create;create(TR::SymbolReferenceTable *,TR::Symbol *,TR::class KnownObjectTable::Index);1;OMR;SymbolReference;0;0
getCPIndex;getCPIndex();1;OMR;SymbolReference;0;0
getExtraInfo;getExtraInfo();1;OMR;SymbolReference;0;0
getIndependentSymRefs;getIndependentSymRefs();1;OMR;SymbolReference;0;0
getKnownObjectIndex;getKnownObjectIndex();1;OMR;SymbolReference;0;0
getKnownObjectReferenceLocation;getKnownObjectReferenceLocation(TR::Compilation *);1;OMR;SymbolReference;0;0
getMethodAddress;getMethodAddress();1;OMR;SymbolReference;0;0
getName;getName(class TR_Debug *);1;OMR;SymbolReference;0;0
getOffset;getOffset();1;OMR;SymbolReference;0;0
getOwningMethod;getOwningMethod(TR::Compilation *);1;OMR;SymbolReference;0;0
getOwningMethodIndex;getOwningMethodIndex();1;OMR;SymbolReference;0;0
getOwningMethodSymbol;getOwningMethodSymbol(TR::Compilation *);1;OMR;SymbolReference;0;0
getReferenceNumber;getReferenceNumber();1;OMR;SymbolReference;0;0
getSize;getSize();1;OMR;SymbolReference;0;0
getSymbol;getSymbol();1;OMR;SymbolReference;0;0
getTypeSignature;getTypeSignature(int32_t &,enum TR_AllocationKind,_Bool *);1;OMR;SymbolReference;0;0
getUnresolvedIndex;getUnresolvedIndex();1;OMR;SymbolReference;0;0
getUseDefAliases;getUseDefAliases(_Bool,_Bool);1;OMR;SymbolReference;0;0
getUseDefAliasesBV;getUseDefAliasesBV(_Bool,_Bool);1;OMR;SymbolReference;0;0
getUseDefAliasesIncludingGCSafePoint;getUseDefAliasesIncludingGCSafePoint(_Bool);1;OMR;SymbolReference;0;0
getUseonlyAliases;getUseonlyAliases();1;OMR;SymbolReference;0;0
getUseonlyAliasesBV;getUseonlyAliasesBV(TR::SymbolReferenceTable *);1;OMR;SymbolReference;0;0
hasBeenAccessedAtRuntime;hasBeenAccessedAtRuntime();1;OMR;SymbolReference;0;0
hasKnownObjectIndex;hasKnownObjectIndex();1;OMR;SymbolReference;0;0
hasTemporaryNegativeOffset;hasTemporaryNegativeOffset();1;OMR;SymbolReference;0;0
holdsMonitoredObjectForSyncMethod;holdsMonitoredObjectForSyncMethod();1;OMR;SymbolReference;0;0
init;init(TR::SymbolReferenceTable *,uint32_t,TR::Symbol *,intptrj_t,class mcount_t,int32_t,int32_t,_Bool);1;OMR;SymbolReference;0;0
isAdjunct;isAdjunct();1;OMR;SymbolReference;0;0
isDual;isDual();1;OMR;SymbolReference;0;0
isFromLiteralPool;isFromLiteralPool();1;OMR;SymbolReference;0;0
isInitMethod;isInitMethod();1;OMR;SymbolReference;0;0
isLitPoolReference;isLitPoolReference();1;OMR;SymbolReference;0;0
isLiteralPoolAddress;isLiteralPoolAddress();1;OMR;SymbolReference;0;0
isOverriddenBitAddress;isOverriddenBitAddress();1;OMR;SymbolReference;0;0
isSideEffectInfo;isSideEffectInfo();1;OMR;SymbolReference;0;0
isTempVariableSizeSymRef;isTempVariableSizeSymRef();1;OMR;SymbolReference;0;0
isTemporary;isTemporary(TR::Compilation *);1;OMR;SymbolReference;0;0
isThisPointer;isThisPointer();1;OMR;SymbolReference;0;0
isUnresolved;isUnresolved();1;OMR;SymbolReference;0;0
isUnresolvedFieldInCP;isUnresolvedFieldInCP(TR::Compilation *);1;OMR;SymbolReference;0;0
isUnresolvedMethodInCP;isUnresolvedMethodInCP(TR::Compilation *);1;OMR;SymbolReference;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;SymbolReference;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;SymbolReference;0;0
makeIndependent;makeIndependent(TR::SymbolReferenceTable *,TR::SymbolReference *);1;OMR;SymbolReference;0;0
maybeVolatile;maybeVolatile();1;OMR;SymbolReference;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReference;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;SymbolReference;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReference;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;SymbolReference;0;0
operator delete;operator delete(void *,size_t);0;OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReference;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;SymbolReference;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;SymbolReference;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReference;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;SymbolReference;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;SymbolReference;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReference;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;SymbolReference;0;0
operator=;operator=(class OMR::SymbolReference &&);1;OMR;SymbolReference;1;0
operator=;operator=(const class OMR::SymbolReference &);0;OMR;SymbolReference;1;0
operator=;operator=(class TR::SymbolReference &&);0;TR;SymbolReference;1;0
operator=;operator=(const class TR::SymbolReference &);0;TR;SymbolReference;1;0
reallySharesSymbol;reallySharesSymbol(TR::Compilation *);1;OMR;SymbolReference;0;0
reallySharesSymbol;reallySharesSymbol();0;OMR;SymbolReference;0;0
resetHasTemporaryNegativeOffset;resetHasTemporaryNegativeOffset();1;OMR;SymbolReference;0;0
self;self();1;OMR;SymbolReference;0;0
setAliasedTo;setAliasedTo(TR::SymbolReference *,_Bool);1;OMR;SymbolReference;0;1
setAliasedTo;setAliasedTo(class TR_BitVector &,TR::SymbolReferenceTable *,_Bool);0;OMR;SymbolReference;0;1
setCPIndex;setCPIndex(int32_t);1;OMR;SymbolReference;0;0
setCanGCandExcept;setCanGCandExcept();1;OMR;SymbolReference;0;0
setCanGCandReturn;setCanGCandReturn();1;OMR;SymbolReference;0;0
setEmptyUseDefAliases;setEmptyUseDefAliases(TR::SymbolReferenceTable *);1;OMR;SymbolReference;0;0
setExtraInfo;setExtraInfo(struct TR_ExtraInfoForNew *);1;OMR;SymbolReference;0;0
setFromLiteralPool;setFromLiteralPool();1;OMR;SymbolReference;0;0
setHasBeenAccessedAtRuntime;setHasBeenAccessedAtRuntime(enum TR_YesNoMaybe);1;OMR;SymbolReference;0;0
setHasTemporaryNegativeOffset;setHasTemporaryNegativeOffset();1;OMR;SymbolReference;0;0
setHoldsMonitoredObjectForSyncMethod;setHoldsMonitoredObjectForSyncMethod();1;OMR;SymbolReference;0;0
setIndependentSymRefs;setIndependentSymRefs(class TR_BitVector *);1;OMR;SymbolReference;0;0
setInitMethod;setInitMethod();1;OMR;SymbolReference;0;0
setIsAdjunct;setIsAdjunct();1;OMR;SymbolReference;0;0
setIsDual;setIsDual();1;OMR;SymbolReference;0;0
setIsTempVariableSizeSymRef;setIsTempVariableSizeSymRef();1;OMR;SymbolReference;0;0
setLiteralPoolAddress;setLiteralPoolAddress();1;OMR;SymbolReference;0;0
setLiteralPoolAliases;setLiteralPoolAliases(class TR_BitVector *,TR::SymbolReferenceTable *);1;OMR;SymbolReference;0;0
setOffset;setOffset(intptrj_t);1;OMR;SymbolReference;0;0
setOverriddenBitAddress;setOverriddenBitAddress();1;OMR;SymbolReference;0;0
setOwningMethodIndex;setOwningMethodIndex(class mcount_t);1;OMR;SymbolReference;0;0
setReallySharesSymbol;setReallySharesSymbol();1;OMR;SymbolReference;0;0
setReferenceNumber;setReferenceNumber(int32_t);1;OMR;SymbolReference;0;0
setSharedShadowAliases;setSharedShadowAliases(class TR_BitVector *,TR::SymbolReferenceTable *);1;OMR;SymbolReference;0;0
setSharedStaticAliases;setSharedStaticAliases(class TR_BitVector *,TR::SymbolReferenceTable *);1;OMR;SymbolReference;0;0
setSideEffectInfo;setSideEffectInfo();1;OMR;SymbolReference;0;0
setSize;setSize(uint32_t);1;OMR;SymbolReference;0;0
setStackAllocatedArrayAccess;setStackAllocatedArrayAccess();1;OMR;SymbolReference;0;0
setSymbol;setSymbol(TR::Symbol *);1;OMR;SymbolReference;0;0
setUnresolved;setUnresolved();1;OMR;SymbolReference;0;0
setUseDefAliases;setUseDefAliases(class TR_BitVector *);1;OMR;SymbolReference;0;0
sharesSymbol;sharesSymbol(_Bool);1;OMR;SymbolReference;0;0
stackAllocatedArrayAccess;stackAllocatedArrayAccess();1;OMR;SymbolReference;0;0
storeCanBeRemoved;storeCanBeRemoved();1;OMR;SymbolReference;0;0
willUse;willUse(TR::SymbolReference *,TR::SymbolReferenceTable *);1;OMR;SymbolReference;0;0
~SymbolReference;~SymbolReference();1;OMR;SymbolReference;1;0
SymbolReferenceTable;SymbolReferenceTable(const class OMR::SymbolReferenceTable &);1;OMR;SymbolReferenceTable;1;0
SymbolReferenceTable;SymbolReferenceTable(class OMR::SymbolReferenceTable &&);0;OMR;SymbolReferenceTable;1;0
SymbolReferenceTable;SymbolReferenceTable(size_t,TR::Compilation *);0;OMR;SymbolReferenceTable;0;0
assignSymRefNumber;assignSymRefNumber(TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
clearAvailableAutos;clearAvailableAutos();1;OMR;SymbolReferenceTable;0;0
comp;comp();1;OMR;SymbolReferenceTable;0;0
createCoDependentTemporary;createCoDependentTemporary(TR::ResolvedMethodSymbol *,TR::DataType,_Bool,size_t,TR::Symbol *,int32_t);1;OMR;SymbolReferenceTable;0;0
createGenericIntShadowSymbolReference;createGenericIntShadowSymbolReference(intptrj_t,_Bool);1;OMR;SymbolReferenceTable;0;0
createImmutableArrayShadowSymbolRef;createImmutableArrayShadowSymbolRef(TR::DataType,TR::Symbol *);1;OMR;SymbolReferenceTable;0;0
createIsOverriddenSymbolRef;createIsOverriddenSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
createKnownStaticDataSymbolRef;createKnownStaticDataSymbolRef(void *,TR::DataType,TR::class KnownObjectTable::Index);1;OMR;SymbolReferenceTable;0;0
createKnownStaticDataSymbolRef;createKnownStaticDataSymbolRef(void *,TR::DataType);0;OMR;SymbolReferenceTable;0;0
createKnownStaticRefereneceSymbolRef;createKnownStaticRefereneceSymbolRef(void *,TR::class KnownObjectTable::Index);1;OMR;SymbolReferenceTable;0;0
createLocalAddrArray;createLocalAddrArray(int32_t,TR::ResolvedMethodSymbol *,TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
createLocalObject;createLocalObject(int32_t,TR::ResolvedMethodSymbol *,TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
createLocalPrimArray;createLocalPrimArray(int32_t,TR::ResolvedMethodSymbol *,int32_t);1;OMR;SymbolReferenceTable;0;0
createParameterSymbol;createParameterSymbol(TR::ResolvedMethodSymbol *,int32_t,TR::DataType);1;OMR;SymbolReferenceTable;0;0
createRefinedArrayShadowSymbolRef;createRefinedArrayShadowSymbolRef(TR::DataType,TR::Symbol *);1;OMR;SymbolReferenceTable;0;0
createRefinedArrayShadowSymbolRef;createRefinedArrayShadowSymbolRef(TR::DataType);0;OMR;SymbolReferenceTable;0;0
createRuntimeHelper;createRuntimeHelper(enum TR_RuntimeHelper,_Bool,_Bool,_Bool);1;OMR;SymbolReferenceTable;0;0
createSymbolReference;createSymbolReference(TR::Symbol *,intptrj_t);1;OMR;SymbolReferenceTable;0;0
createTemporary;createTemporary(TR::ResolvedMethodSymbol *,TR::DataType,_Bool,size_t);1;OMR;SymbolReferenceTable;0;0
element;element(enum TR_RuntimeHelper);1;OMR;SymbolReferenceTable;0;0
element;element(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);0;OMR;SymbolReferenceTable;0;0
fe;fe();1;OMR;SymbolReferenceTable;0;0
findAddressOfClassOfMethodSymbolRef;findAddressOfClassOfMethodSymbolRef();1;OMR;SymbolReferenceTable;0;0
findArrayClassRomPtrSymbolRef;findArrayClassRomPtrSymbolRef();1;OMR;SymbolReferenceTable;0;0
findArrayComponentTypeSymbolRef;findArrayComponentTypeSymbolRef();1;OMR;SymbolReferenceTable;0;0
findAvailableAuto;findAvailableAuto(List<TR::SymbolReference> &,TR::DataType,_Bool,_Bool);1;OMR;SymbolReferenceTable;0;0
findAvailableAuto;findAvailableAuto(TR::DataType,_Bool,_Bool);0;OMR;SymbolReferenceTable;0;0
findClassAndDepthFlagsSymbolRef;findClassAndDepthFlagsSymbolRef();1;OMR;SymbolReferenceTable;0;0
findClassFlagsSymbolRef;findClassFlagsSymbolRef();1;OMR;SymbolReferenceTable;0;0
findClassFromJavaLangClassSymbolRef;findClassFromJavaLangClassSymbolRef();1;OMR;SymbolReferenceTable;0;0
findClassIsArraySymbolRef;findClassIsArraySymbolRef();1;OMR;SymbolReferenceTable;0;0
findClassRomPtrSymbolRef;findClassRomPtrSymbolRef();1;OMR;SymbolReferenceTable;0;0
findDLPStaticSymbolReference;findDLPStaticSymbolReference(TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
findDescriptionWordFromPtrSymbolRef;findDescriptionWordFromPtrSymbolRef();1;OMR;SymbolReferenceTable;0;0
findGenericIntShadowSymbol;findGenericIntShadowSymbol();1;OMR;SymbolReferenceTable;0;0
findHeaderFlagsSymbolRef;findHeaderFlagsSymbolRef();1;OMR;SymbolReferenceTable;0;0
findInstanceDescriptionSymbolRef;findInstanceDescriptionSymbolRef();1;OMR;SymbolReferenceTable;0;0
findInstanceShapeSymbolRef;findInstanceShapeSymbolRef();1;OMR;SymbolReferenceTable;0;0
findJavaLangClassFromClassSymbolRef;findJavaLangClassFromClassSymbolRef();1;OMR;SymbolReferenceTable;0;0
findObjectNewInstanceImplSymbol;findObjectNewInstanceImplSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateANewArrayNoZeroInitSymbolRef;findOrCreateANewArrayNoZeroInitSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateAThrowSymbolRef;findOrCreateAThrowSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateArrayBoundsCheckSymbolRef;findOrCreateArrayBoundsCheckSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateArrayCmpSymbol;findOrCreateArrayCmpSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateArrayCopySymbol;findOrCreateArrayCopySymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateArraySetSymbol;findOrCreateArraySetSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateArrayShadowSymbolRef;findOrCreateArrayShadowSymbolRef(TR::DataType,TR::Node *,int32_t,class TR_FrontEnd *);1;OMR;SymbolReferenceTable;0;0
findOrCreateArrayShadowSymbolRef;findOrCreateArrayShadowSymbolRef(TR::DataType,TR::Node *);0;OMR;SymbolReferenceTable;0;0
findOrCreateArrayStoreExceptionSymbolRef;findOrCreateArrayStoreExceptionSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateArrayTranslateAndTestSymbol;findOrCreateArrayTranslateAndTestSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateArrayTranslateSymbol;findOrCreateArrayTranslateSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateArrayletShadowSymbolRef;findOrCreateArrayletShadowSymbolRef(TR::DataType);1;OMR;SymbolReferenceTable;0;0
findOrCreateAsyncCheckSymbolRef;findOrCreateAsyncCheckSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateAutoSymbol;findOrCreateAutoSymbol(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,_Bool,_Bool,_Bool,_Bool,size_t);1;OMR;SymbolReferenceTable;0;0
findOrCreateCPSymbol;findOrCreateCPSymbol(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,_Bool,void *);1;OMR;SymbolReferenceTable;0;0
findOrCreateCheckCastSymbolRef;findOrCreateCheckCastSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateClassSymbol;findOrCreateClassSymbol(TR::ResolvedMethodSymbol *,int32_t,void *,_Bool);1;OMR;SymbolReferenceTable;0;0
findOrCreateCodeGenInlinedHelper;findOrCreateCodeGenInlinedHelper(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);1;OMR;SymbolReferenceTable;0;0
findOrCreateComputedStaticMethodSymbol;findOrCreateComputedStaticMethodSymbol(class mcount_t,int32_t,class TR_ResolvedMethod *);1;OMR;SymbolReferenceTable;0;0
findOrCreateConstantAreaSymbol;findOrCreateConstantAreaSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateConstantAreaSymbolReference;findOrCreateConstantAreaSymbolReference();1;OMR;SymbolReferenceTable;0;0
findOrCreateContiguousArraySizeSymbolRef;findOrCreateContiguousArraySizeSymbolRef();1;OMR;SymbolReferenceTable;0;0
findOrCreateCounterAddressSymbolRef;findOrCreateCounterAddressSymbolRef();1;OMR;SymbolReferenceTable;0;0
findOrCreateCounterSymRef;findOrCreateCounterSymRef(char *,TR::DataType,void *);1;OMR;SymbolReferenceTable;0;0
findOrCreateCurrentTimeMaxPrecisionSymbol;findOrCreateCurrentTimeMaxPrecisionSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateDLPStaticSymbolReference;findOrCreateDLPStaticSymbolReference(TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
findOrCreateDivCheckSymbolRef;findOrCreateDivCheckSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateExcpSymbolRef;findOrCreateExcpSymbolRef();1;OMR;SymbolReferenceTable;0;0
findOrCreateGCRPatchPointSymbolRef;findOrCreateGCRPatchPointSymbolRef();1;OMR;SymbolReferenceTable;0;0
findOrCreateGenericIntArrayShadowSymbolReference;findOrCreateGenericIntArrayShadowSymbolReference(intptrj_t);1;OMR;SymbolReferenceTable;0;0
findOrCreateGenericIntNonArrayShadowSymbolReference;findOrCreateGenericIntNonArrayShadowSymbolReference(intptrj_t);1;OMR;SymbolReferenceTable;0;0
findOrCreateGenericIntShadowSymbol;findOrCreateGenericIntShadowSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateGenericIntShadowSymbolReference;findOrCreateGenericIntShadowSymbolReference(intptrj_t,_Bool);1;OMR;SymbolReferenceTable;0;0
findOrCreateImmutableArrayShadowSymbolRef;findOrCreateImmutableArrayShadowSymbolRef(TR::DataType);1;OMR;SymbolReferenceTable;0;0
findOrCreateIndexableSizeSymbolRef;findOrCreateIndexableSizeSymbolRef();1;OMR;SymbolReferenceTable;0;0
findOrCreateInstanceOfSymbolRef;findOrCreateInstanceOfSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateMethodSymbol;findOrCreateMethodSymbol(class mcount_t,int32_t,class TR_ResolvedMethod *,TR::class MethodSymbol::Kinds,_Bool);1;OMR;SymbolReferenceTable;0;0
findOrCreateMonitorEntrySymbolRef;findOrCreateMonitorEntrySymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateMonitorExitSymbolRef;findOrCreateMonitorExitSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateNewArrayNoZeroInitSymbolRef;findOrCreateNewArrayNoZeroInitSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateNewArraySymbolRef;findOrCreateNewArraySymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateNewObjectNoZeroInitSymbolRef;findOrCreateNewObjectNoZeroInitSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateNewObjectSymbolRef;findOrCreateNewObjectSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateNullCheckSymbolRef;findOrCreateNullCheckSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateOSRReturnAddressSymbolRef;findOrCreateOSRReturnAddressSymbolRef();1;OMR;SymbolReferenceTable;0;0
findOrCreateOverflowCheckSymbolRef;findOrCreateOverflowCheckSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreatePendingPushTemporary;findOrCreatePendingPushTemporary(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,size_t);1;OMR;SymbolReferenceTable;0;0
findOrCreatePrefetchSymbol;findOrCreatePrefetchSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateRecompilationCounterSymbolRef;findOrCreateRecompilationCounterSymbolRef(void *);1;OMR;SymbolReferenceTable;0;0
findOrCreateReportMethodEnterSymbolRef;findOrCreateReportMethodEnterSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateResolveCheckSymbolRef;findOrCreateResolveCheckSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateRuntimeHelper;findOrCreateRuntimeHelper(enum TR_RuntimeHelper,_Bool,_Bool,_Bool);1;OMR;SymbolReferenceTable;0;0
findOrCreateSinglePrecisionSQRTSymbol;findOrCreateSinglePrecisionSQRTSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreateStartPCSymbolRef;findOrCreateStartPCSymbolRef();1;OMR;SymbolReferenceTable;0;0
findOrCreateStaticMethodSymbol;findOrCreateStaticMethodSymbol(class mcount_t,int32_t,class TR_ResolvedMethod *);1;OMR;SymbolReferenceTable;0;0
findOrCreateSymRefWithKnownObject;findOrCreateSymRefWithKnownObject(TR::SymbolReference *,uintptrj_t *);1;OMR;SymbolReferenceTable;0;0
findOrCreateSymRefWithKnownObject;findOrCreateSymRefWithKnownObject(TR::SymbolReference *,TR::class KnownObjectTable::Index);0;OMR;SymbolReferenceTable;0;0
findOrCreateSymRefWithKnownObject;findOrCreateSymRefWithKnownObject(TR::SymbolReference *,uintptrj_t *,_Bool);0;OMR;SymbolReferenceTable;0;0
findOrCreateThisRangeExtensionSymRef;findOrCreateThisRangeExtensionSymRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateTransactionAbortSymbolRef;findOrCreateTransactionAbortSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateTransactionEntrySymbolRef;findOrCreateTransactionEntrySymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateTransactionExitSymbolRef;findOrCreateTransactionExitSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateVftSymbolRef;findOrCreateVftSymbolRef();1;OMR;SymbolReferenceTable;0;0
findOrCreateVolatileReadDoubleSymbolRef;findOrCreateVolatileReadDoubleSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateVolatileReadLongSymbolRef;findOrCreateVolatileReadLongSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateVolatileWriteDoubleSymbolRef;findOrCreateVolatileWriteDoubleSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateVolatileWriteLongSymbolRef;findOrCreateVolatileWriteLongSymbolRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findOrCreateVtableEntrySymbolRef;findOrCreateVtableEntrySymbolRef(TR::ResolvedMethodSymbol *,int32_t);1;OMR;SymbolReferenceTable;0;0
findOrCreatebitOpMemSymbol;findOrCreatebitOpMemSymbol();1;OMR;SymbolReferenceTable;0;0
findOrCreatelong2StringSymbol;findOrCreatelong2StringSymbol();1;OMR;SymbolReferenceTable;0;0
findPrefetchSymbol;findPrefetchSymbol();1;OMR;SymbolReferenceTable;0;0
findStaticSymbol;findStaticSymbol(class TR_ResolvedMethod *,int32_t,TR::DataType);1;OMR;SymbolReferenceTable;0;0
findThisRangeExtensionSymRef;findThisRangeExtensionSymRef(TR::ResolvedMethodSymbol *);1;OMR;SymbolReferenceTable;0;0
findVftSymbolRef;findVftSymbolRef();1;OMR;SymbolReferenceTable;0;0
getArrayShadowIndex;getArrayShadowIndex(TR::DataType);1;OMR;SymbolReferenceTable;0;0
getArrayletShadowIndex;getArrayletShadowIndex(TR::DataType);1;OMR;SymbolReferenceTable;0;0
getIndexOfFirstSymRef;getIndexOfFirstSymRef();1;OMR;SymbolReferenceTable;0;0
getLastCommonNonhelperSymbol;getLastCommonNonhelperSymbol();1;OMR;SymbolReferenceTable;0;0
getNonhelperIndex;getNonhelperIndex(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);1;OMR;SymbolReferenceTable;0;0
getNumHelperSymbols;getNumHelperSymbols();1;OMR;SymbolReferenceTable;0;0
getNumInternalPointers;getNumInternalPointers();1;OMR;SymbolReferenceTable;0;0
getNumPredefinedSymbols;getNumPredefinedSymbols();1;OMR;SymbolReferenceTable;0;0
getNumSymRefs;getNumSymRefs();1;OMR;SymbolReferenceTable;0;0
getNumUnresolvedSymbols;getNumUnresolvedSymbols();1;OMR;SymbolReferenceTable;0;0
getSharedAliases;getSharedAliases(TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
getSymRef;getSymRef(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);1;OMR;SymbolReferenceTable;0;0
getSymRef;getSymRef(int32_t);0;OMR;SymbolReferenceTable;0;0
isConstantAreaSymbol;isConstantAreaSymbol(TR::Symbol *);1;OMR;SymbolReferenceTable;0;0
isConstantAreaSymbolReference;isConstantAreaSymbolReference(TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
isImmutableArrayShadow;isImmutableArrayShadow(TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
isNonHelper;isNonHelper(int32_t,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);1;OMR;SymbolReferenceTable;0;0
isNonHelper;isNonHelper(TR::SymbolReference *,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);0;OMR;SymbolReferenceTable;0;0
isRefinedArrayShadow;isRefinedArrayShadow(TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
isVtableEntrySymbolRef;isVtableEntrySymbolRef(TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;SymbolReferenceTable;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;SymbolReferenceTable;0;0
makeAutoAvailableForIlGen;makeAutoAvailableForIlGen(TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
makeSharedAliases;makeSharedAliases(TR::SymbolReference *,TR::SymbolReference *);1;OMR;SymbolReferenceTable;0;0
markBlockAsCold;markBlockAsCold();1;OMR;SymbolReferenceTable;0;0
methodSymRefFromName;methodSymRefFromName(TR::ResolvedMethodSymbol *,char *,char *,char *,TR::class MethodSymbol::Kinds,int32_t);1;OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,size_t);0;OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;SymbolReferenceTable;0;0
operator=;operator=(class OMR::SymbolReferenceTable &&);1;OMR;SymbolReferenceTable;1;0
self;self();1;OMR;SymbolReferenceTable;0;0
setNumSymRefs;setNumSymRefs(int32_t);1;OMR;SymbolReferenceTable;0;0
shouldMarkBlockAsCold;shouldMarkBlockAsCold(class TR_ResolvedMethod *,_Bool);1;OMR;SymbolReferenceTable;0;0
strdup;strdup(const char *);1;OMR;SymbolReferenceTable;0;0
trHeapMemory;trHeapMemory();1;OMR;SymbolReferenceTable;0;0
trMemory;trMemory();1;OMR;SymbolReferenceTable;0;0
trStackMemory;trStackMemory();1;OMR;SymbolReferenceTable;0;0
~SymbolReferenceTable;~SymbolReferenceTable();1;OMR;SymbolReferenceTable;1;0
TreeTop;TreeTop(class OMR::TreeTop &&);1;OMR;TreeTop;1;0
TreeTop;TreeTop(const class OMR::TreeTop &);0;OMR;TreeTop;1;0
TreeTop;TreeTop(TR::TreeTop *,TR::Node *,TR::Compilation *);0;OMR;TreeTop;0;0
TreeTop;TreeTop(TR::Node *,TR::TreeTop *,TR::TreeTop *);0;OMR;TreeTop;0;0
TreeTop;TreeTop();0;TR;TreeTop;0;0
adjustBranchOrSwitchTreeTop;adjustBranchOrSwitchTreeTop(TR::Compilation *,TR::TreeTop *,TR::TreeTop *);1;OMR;TreeTop;0;0
create;create(TR::Compilation *);1;OMR;TreeTop;0;0
create;create(TR::Compilation *,TR::TreeTop *,TR::Node *);0;OMR;TreeTop;0;0
create;create(TR::Compilation *,TR::Node *,TR::TreeTop *,TR::TreeTop *);0;OMR;TreeTop;0;0
createIncTree;createIncTree(TR::Compilation *,TR::Node *,TR::SymbolReference *,int32_t,TR::TreeTop *,_Bool);1;OMR;TreeTop;0;0
createResetTree;createResetTree(TR::Compilation *,TR::Node *,TR::SymbolReference *,int32_t,TR::TreeTop *,_Bool);1;OMR;TreeTop;0;0
duplicateTree;duplicateTree();1;OMR;TreeTop;0;0
getEnclosingBlock;getEnclosingBlock(_Bool);1;OMR;TreeTop;0;0
getExtendedBlockExitTreeTop;getExtendedBlockExitTreeTop();1;OMR;TreeTop;0;0
getLastInstruction;getLastInstruction();1;OMR;TreeTop;0;0
getNextRealTreeTop;getNextRealTreeTop();1;OMR;TreeTop;0;0
getNextTreeTop;getNextTreeTop();1;OMR;TreeTop;0;0
getNode;getNode();1;OMR;TreeTop;0;0
getPrevRealTreeTop;getPrevRealTreeTop();1;OMR;TreeTop;0;0
getPrevTreeTop;getPrevTreeTop();1;OMR;TreeTop;0;0
insertAfter;insertAfter(TR::TreeTop *);1;OMR;TreeTop;0;0
insertBefore;insertBefore(TR::TreeTop *);1;OMR;TreeTop;0;0
insertNewTreeTop;insertNewTreeTop(TR::TreeTop *,TR::TreeTop *);1;OMR;TreeTop;0;0
insertTreeTops;insertTreeTops(TR::Compilation *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *);1;OMR;TreeTop;0;0
insertTreeTopsAfterMe;insertTreeTopsAfterMe(TR::TreeTop *,TR::TreeTop *);1;OMR;TreeTop;0;0
insertTreeTopsBeforeMe;insertTreeTopsBeforeMe(TR::TreeTop *,TR::TreeTop *);1;OMR;TreeTop;0;0
isLegalToChangeBranchDestination;isLegalToChangeBranchDestination(TR::Compilation *);1;OMR;TreeTop;0;0
isPossibleDef;isPossibleDef();1;OMR;TreeTop;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;TreeTop;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;TreeTop;0;0
join;join(TR::TreeTop *);1;OMR;TreeTop;0;0
operator new;operator new(size_t,_Bool,class TR_Memory *);1;OMR;TreeTop;0;0
removeDeadTrees;removeDeadTrees(TR::Compilation *,TR::TreeTop *[]);1;OMR;TreeTop;0;0
removeDeadTrees;removeDeadTrees(TR::Compilation *,TR::TreeTop *,TR::TreeTop *);0;OMR;TreeTop;0;0
self;self();1;OMR;TreeTop;0;0
setLastInstruction;setLastInstruction(TR::Instruction *);1;OMR;TreeTop;0;0
setNextTreeTop;setNextTreeTop(TR::TreeTop *);1;OMR;TreeTop;0;0
setNode;setNode(TR::Node *);1;OMR;TreeTop;0;0
setPrevTreeTop;setPrevTreeTop(TR::TreeTop *);1;OMR;TreeTop;0;0
unlink;unlink(_Bool);1;OMR;TreeTop;0;0
OSRFrameHeaderSizeInBytes;OSRFrameHeaderSizeInBytes(TR::Compilation *);1;OMR;VMEnv;0;0
OSRFrameSizeInBytes;OSRFrameSizeInBytes(TR::Compilation *,class TR_OpaqueMethodBlock *);1;OMR;VMEnv;0;0
VMEnv;VMEnv();1;OMR;VMEnv;1;0
VMEnv;VMEnv(class OMR::VMEnv &&);0;OMR;VMEnv;1;0
VMEnv;VMEnv(const class OMR::VMEnv &);0;OMR;VMEnv;1;0
VMEnv;VMEnv(const class TR::VMEnv &);0;TR;VMEnv;1;0
VMEnv;VMEnv(class TR::VMEnv &&);0;TR;VMEnv;1;0
acquireVMAccessIfNeeded;acquireVMAccessIfNeeded(struct OMR_VMThread *);1;OMR;VMEnv;0;0
acquireVMAccessIfNeeded;acquireVMAccessIfNeeded(TR::Compilation *);0;OMR;VMEnv;0;0
canAnyMethodEventsBeHooked;canAnyMethodEventsBeHooked(TR::Compilation *);1;OMR;VMEnv;0;0
canMethodEnterEventBeHooked;canMethodEnterEventBeHooked(TR::Compilation *);1;OMR;VMEnv;0;0
canMethodExitEventBeHooked;canMethodExitEventBeHooked(TR::Compilation *);1;OMR;VMEnv;0;0
cpuTimeSpentInCompilationThread;cpuTimeSpentInCompilationThread(TR::Compilation *);1;OMR;VMEnv;0;0
ensureOSRBufferSize;ensureOSRBufferSize(TR::Compilation *,uintptrj_t,uintptrj_t,uintptrj_t);1;OMR;VMEnv;0;0
getHighResClock;getHighResClock(TR::Compilation *);1;OMR;VMEnv;0;0
getHighResClock;getHighResClock(struct OMR_VMThread *);0;OMR;VMEnv;0;0
getHighResClockResolution;getHighResClockResolution();1;OMR;VMEnv;0;0
getOverflowSafeAllocSize;getOverflowSafeAllocSize(TR::Compilation *);1;OMR;VMEnv;0;0
getUSecClock;getUSecClock();1;OMR;VMEnv;0;0
getUSecClock;getUSecClock(struct OMR_VMThread *);0;OMR;VMEnv;0;0
getUSecClock;getUSecClock(TR::Compilation *);0;OMR;VMEnv;0;0
hasAccess;hasAccess(struct OMR_VMThread *);1;OMR;VMEnv;0;0
hasAccess;hasAccess(TR::Compilation *);0;OMR;VMEnv;0;0
hasResumableTrapHandler;hasResumableTrapHandler(struct OMR_VMThread *);1;OMR;VMEnv;0;0
hasResumableTrapHandler;hasResumableTrapHandler(TR::Compilation *);0;OMR;VMEnv;0;0
heapBaseAddress;heapBaseAddress();1;OMR;VMEnv;0;0
heapTailPaddingSizeInBytes;heapTailPaddingSizeInBytes();1;OMR;VMEnv;0;0
maxHeapSizeInBytes;maxHeapSizeInBytes();1;OMR;VMEnv;0;0
operator=;operator=(const class OMR::VMEnv &);1;OMR;VMEnv;1;0
operator=;operator=(class OMR::VMEnv &&);0;OMR;VMEnv;1;0
operator=;operator=(class TR::VMEnv &&);0;TR;VMEnv;1;0
operator=;operator=(const class TR::VMEnv &);0;TR;VMEnv;1;0
releaseAccess;releaseAccess(struct OMR_VMThread *);1;OMR;VMEnv;0;0
releaseAccess;releaseAccess(TR::Compilation *);0;OMR;VMEnv;0;0
releaseVMAccessIfNeeded;releaseVMAccessIfNeeded(TR::Compilation *,_Bool);1;OMR;VMEnv;0;0
releaseVMAccessIfNeeded;releaseVMAccessIfNeeded(struct OMR_VMThread *,_Bool);0;OMR;VMEnv;0;0
self;self();1;OMR;VMEnv;0;0
thisThreadGetConcurrentScavengeActiveByteAddressOffset;thisThreadGetConcurrentScavengeActiveByteAddressOffset(TR::Compilation *);1;OMR;VMEnv;0;0
thisThreadGetEvacuateBaseAddressOffset;thisThreadGetEvacuateBaseAddressOffset(TR::Compilation *);1;OMR;VMEnv;0;0
thisThreadGetEvacuateTopAddressOffset;thisThreadGetEvacuateTopAddressOffset(TR::Compilation *);1;OMR;VMEnv;0;0
thisThreadGetGSHandlerAddressOffset;thisThreadGetGSHandlerAddressOffset(TR::Compilation *);1;OMR;VMEnv;0;0
thisThreadGetGSIntermediateResultOffset;thisThreadGetGSIntermediateResultOffset(TR::Compilation *);1;OMR;VMEnv;0;0
thisThreadGetGSOperandAddressOffset;thisThreadGetGSOperandAddressOffset(TR::Compilation *);1;OMR;VMEnv;0;0
thisThreadGetOSRReturnAddressOffset;thisThreadGetOSRReturnAddressOffset(TR::Compilation *);1;OMR;VMEnv;0;0
thisThreadGetPendingExceptionOffset;thisThreadGetPendingExceptionOffset();1;OMR;VMEnv;0;0
tryToAcquireAccess;tryToAcquireAccess(TR::Compilation *,_Bool *);1;OMR;VMEnv;0;0
tryToAcquireAccess;tryToAcquireAccess(struct OMR_VMThread *,_Bool *);0;OMR;VMEnv;0;0
~VMEnv;~VMEnv();1;OMR;VMEnv;1;0
VMMethodEnv;VMMethodEnv(const class OMR::VMMethodEnv &);1;OMR;VMMethodEnv;1;0
VMMethodEnv;VMMethodEnv(class OMR::VMMethodEnv &&);0;OMR;VMMethodEnv;1;0
VMMethodEnv;VMMethodEnv();0;OMR;VMMethodEnv;1;0
VMMethodEnv;VMMethodEnv(const class TR::VMMethodEnv &);0;TR;VMMethodEnv;1;0
VMMethodEnv;VMMethodEnv(class TR::VMMethodEnv &&);0;TR;VMMethodEnv;1;0
hasBackwardBranches;hasBackwardBranches(class TR_OpaqueMethodBlock *);1;OMR;VMMethodEnv;0;0
isCompiledMethod;isCompiledMethod(class TR_OpaqueMethodBlock *);1;OMR;VMMethodEnv;0;0
operator=;operator=(class OMR::VMMethodEnv &&);1;OMR;VMMethodEnv;1;0
operator=;operator=(const class OMR::VMMethodEnv &);0;OMR;VMMethodEnv;1;0
operator=;operator=(const class TR::VMMethodEnv &);0;TR;VMMethodEnv;1;0
operator=;operator=(class TR::VMMethodEnv &&);0;TR;VMMethodEnv;1;0
startPC;startPC(class TR_OpaqueMethodBlock *);1;OMR;VMMethodEnv;0;0
~VMMethodEnv;~VMMethodEnv();1;OMR;VMMethodEnv;1;0
TR_BitContainerIterator;TR_BitContainerIterator(class TR_BitContainerIterator &&);1;TR;BitContainerIterator;1;0
TR_BitContainerIterator;TR_BitContainerIterator(const class TR_BitContainerIterator &);0;TR;BitContainerIterator;1;0
TR_BitContainerIterator;TR_BitContainerIterator();0;TR;BitContainerIterator;0;0
TR_BitContainerIterator;TR_BitContainerIterator(class TR_BitContainer &);0;TR;BitContainerIterator;0;0
TR_BitVectorIterator;TR_BitVectorIterator(const class TR_BitVectorIterator &);1;TR;BitVectorIterator;1;0
TR_BitVectorIterator;TR_BitVectorIterator();0;TR;BitVectorIterator;0;0
TR_BitVectorIterator;TR_BitVectorIterator(class TR_BitVector &,int32_t);0;TR;BitVectorIterator;0;0
TR_BitVectorIterator;TR_BitVectorIterator(class TR_BitVectorIterator &&);0;TR;BitVectorIterator;1;0
getFirstElement;getFirstElement();1;TR;BitVectorIterator;0;0
getNextBit;getNextBit();1;TR;BitVectorIterator;0;0
getNextElement;getNextElement();1;TR;BitVectorIterator;0;0
hasMoreElements;hasMoreElements();1;TR;BitVectorIterator;0;0
reset;reset();1;TR;BitVectorIterator;0;0
setBitContainer;setBitContainer(class TR_BitContainer &);1;TR;BitContainerIterator;0;0
setBitVector;setBitVector(class TR_BitVector &,int32_t);1;TR;BitVectorIterator;0;0
~TR_BitVectorIterator;~TR_BitVectorIterator();1;TR;BitVectorIterator;1;0
SetToFirstOne;SetToFirstOne();1;TR;BitVectorCursor;0;0
SetToNextOne;SetToNextOne();1;TR;BitVectorCursor;0;0
TR_BitVectorCursor;TR_BitVectorCursor(class TR_BitVector &);1;TR;BitVectorCursor;0;0
Valid;Valid();1;TR;BitVectorCursor;0;0
operator unsigned int;operator unsigned int();1;TR;BitVectorCursor;0;0
TR_ClassExtendCheck;TR_ClassExtendCheck(class TR_OpaqueClassBlock *);1;TR;ClassExtendCheck;0;0
TR_ClassLoadCheck;TR_ClassLoadCheck(char *,int32_t);1;TR;ClassLoadCheck;0;0
TR_FrontEnd;TR_FrontEnd(class TR_FrontEnd &&);1;TR;FrontEnd;1;0
TR_FrontEnd;TR_FrontEnd();0;TR;FrontEnd;0;0
TR_Uncopyable;TR_Uncopyable(const class TR_Uncopyable &);1;TR;Uncopyable;0;0
TR_Uncopyable;TR_Uncopyable();0;TR;Uncopyable;0;0
acquireLogMonitor;acquireLogMonitor();1;TR;FrontEnd;0;1
allocateCodeMemory;allocateCodeMemory(TR::Compilation *,uint32_t,uint32_t,uint8_t **,_Bool);1;TR;FrontEnd;0;1
allocateRelocationData;allocateRelocationData(TR::Compilation *,uint32_t);1;TR;FrontEnd;0;1
classHasBeenExtended;classHasBeenExtended(class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
classHasBeenReplaced;classHasBeenReplaced(class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
createDebug;createDebug(TR::Compilation *);1;TR;FrontEnd;0;1
createMethodMetaData;createMethodMetaData(TR::Compilation *);1;TR;FrontEnd;0;1
createResolvedMethod;createResolvedMethod(class TR_Memory *,class TR_OpaqueMethodBlock *,class TR_ResolvedMethod *,class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
dataTypeForLoadOrStore;dataTypeForLoadOrStore(TR::DataType);1;TR;FrontEnd;0;1
findOrCreateLiteral;findOrCreateLiteral(TR::Compilation *,void *,size_t);1;TR;FrontEnd;0;1
generateBinaryEncodingPrologue;generateBinaryEncodingPrologue(struct TR_BinaryEncodingData *,TR::CodeGenerator *);1;TR;FrontEnd;0;1
getArrayClassFromComponentClass;getArrayClassFromComponentClass(class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
getArraySpineShift;getArraySpineShift(int32_t);1;TR;FrontEnd;0;1
getArrayletLeafIndex;getArrayletLeafIndex(int32_t,int32_t);1;TR;FrontEnd;0;1
getArrayletMask;getArrayletMask(int32_t);1;TR;FrontEnd;0;1
getClassClassPointer;getClassClassPointer(class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
getClassDepthAndFlagsValue;getClassDepthAndFlagsValue(class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
getClassFromMethodBlock;getClassFromMethodBlock(class TR_OpaqueMethodBlock *);1;TR;FrontEnd;0;1
getClassFromNewArrayType;getClassFromNewArrayType(int32_t);1;TR;FrontEnd;0;1
getClassFromSignature;getClassFromSignature(const char *,int32_t,class TR_ResolvedMethod *,_Bool);1;TR;FrontEnd;0;1
getClassFromSignature;getClassFromSignature(const char *,int32_t,class TR_OpaqueMethodBlock *,_Bool);0;TR;FrontEnd;0;1
getClassFromStatic;getClassFromStatic(void *);1;TR;FrontEnd;0;1
getClassOfMethod;getClassOfMethod(class TR_OpaqueMethodBlock *);1;TR;FrontEnd;0;1
getCodeCacheBase;getCodeCacheBase(TR::CodeCache *);1;TR;FrontEnd;0;1
getCodeCacheBase;getCodeCacheBase();0;TR;FrontEnd;0;1
getCodeCacheTop;getCodeCacheTop(TR::CodeCache *);1;TR;FrontEnd;0;1
getCodeCacheTop;getCodeCacheTop();0;TR;FrontEnd;0;1
getComponentClassFromArrayClass;getComponentClassFromArrayClass(class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
getDesignatedCodeCache;getDesignatedCodeCache(TR::Compilation *);1;TR;FrontEnd;0;1
getFormattedName;getFormattedName(char *,int32_t,char *,char *,_Bool);1;TR;FrontEnd;0;1
getInlinedCallSiteMethod;getInlinedCallSiteMethod(TR_InlinedCallSite *);1;TR;FrontEnd;0;1
getLeafComponentClassFromArrayClass;getLeafComponentClassFromArrayClass(class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
getLineNumberForMethodAndByteCodeIndex;getLineNumberForMethodAndByteCodeIndex(class TR_OpaqueMethodBlock *,int32_t);1;TR;FrontEnd;0;1
getMethodFromName;getMethodFromName(char *,char *,char *,class TR_OpaqueMethodBlock *);1;TR;FrontEnd;0;1
getNewArrayTypeFromClass;getNewArrayTypeFromClass(class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
getObjectAlignmentInBytes;getObjectAlignmentInBytes();1;TR;FrontEnd;0;1
getObjectHeaderSizeInBytes;getObjectHeaderSizeInBytes();1;TR;FrontEnd;0;1
getOffsetOfContiguousArraySizeField;getOffsetOfContiguousArraySizeField();1;TR;FrontEnd;0;1
getOffsetOfDiscontiguousArraySizeField;getOffsetOfDiscontiguousArraySizeField();1;TR;FrontEnd;0;1
getOffsetOfIndexableSizeField;getOffsetOfIndexableSizeField();1;TR;FrontEnd;0;1
getPersistentInfo;getPersistentInfo();1;TR;FrontEnd;0;0
getStringLength;getStringLength(uintptrj_t);1;TR;FrontEnd;0;1
getStringUTF8;getStringUTF8(uintptrj_t,char *,intptrj_t);1;TR;FrontEnd;0;1
getStringUTF8Length;getStringUTF8Length(uintptrj_t);1;TR;FrontEnd;0;1
getSuperClass;getSuperClass(class TR_OpaqueClassBlock *);1;TR;FrontEnd;0;1
indexedTrampolineLookup;indexedTrampolineLookup(int32_t,void *);1;TR;FrontEnd;0;1
isInlineableNativeMethod;isInlineableNativeMethod(TR::Compilation *,TR::ResolvedMethodSymbol *);1;TR;FrontEnd;0;1
isInstanceOf;isInstanceOf(class TR_OpaqueClassBlock *,class TR_OpaqueClassBlock *,_Bool,_Bool,_Bool);1;TR;FrontEnd;0;1
isMethodEnterTracingEnabled;isMethodEnterTracingEnabled(class TR_OpaqueMethodBlock *);1;TR;FrontEnd;0;1
isMethodExitTracingEnabled;isMethodExitTracingEnabled(class TR_OpaqueMethodBlock *);1;TR;FrontEnd;0;1
isUnloadAssumptionRequired;isUnloadAssumptionRequired(class TR_OpaqueClassBlock *,class TR_ResolvedMethod *);1;TR;FrontEnd;0;1
methodTrampolineLookup;methodTrampolineLookup(TR::Compilation *,TR::SymbolReference *,void *);1;TR;FrontEnd;0;1
offsetOfIsOverriddenBit;offsetOfIsOverriddenBit();1;TR;FrontEnd;0;1
operator=;operator=(const class TR_Uncopyable &);1;TR;Uncopyable;0;0
operator=;operator=(class TR_FrontEnd &&);0;TR;FrontEnd;1;0
operator=;operator=(const class TR_FrontEnd &);0;TR;FrontEnd;1;0
printVerboseLogHeader;printVerboseLogHeader(TR::Options *);1;TR;FrontEnd;0;1
releaseCodeMemory;releaseCodeMemory(void *,uint8_t);1;TR;FrontEnd;0;1
releaseLogMonitor;releaseLogMonitor();1;TR;FrontEnd;0;1
reserveTrampolineIfNecessary;reserveTrampolineIfNecessary(TR::Compilation *,TR::SymbolReference *,_Bool);1;TR;FrontEnd;0;1
resizeCodeMemory;resizeCodeMemory(TR::Compilation *,uint8_t *,uint32_t);1;TR;FrontEnd;0;1
sampleSignature;sampleSignature(class TR_OpaqueMethodBlock *,char *,int32_t,class TR_Memory *);1;TR;FrontEnd;0;1
~TR_FrontEnd;~TR_FrontEnd();1;TR;FrontEnd;1;0
~TR_Uncopyable;~TR_Uncopyable();1;TR;Uncopyable;0;0
TR_HashTab;TR_HashTab(class TR_HashTab &&);1;TR;HashTab;1;0
TR_HashTab;TR_HashTab(const class TR_HashTab &);0;TR;HashTab;1;0
TR_HashTab;TR_HashTab(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);0;TR;HashTab;0;0
TR_HashTabDouble;TR_HashTabDouble(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);1;TR;HashTabDouble;0;0
add;add(void *,TR_HashId,void *);1;TR;HashTab;0;0
add;add(double *,TR_HashId,void *);0;TR;HashTabDouble;0;0
addElement;addElement(void *,TR_HashId &,class TR_HashTab::TR_HashTableEntry *);1;TR;HashTab;0;0
calculateHash;calculateHash(const void *);1;TR;HashTab;0;1
clear;clear();1;TR;HashTab;0;0
getData;getData(TR_HashId);1;TR;HashTab;0;0
growAndRehash;growAndRehash(uint32_t);1;TR;HashTab;0;0
growTo;growTo(uint32_t);1;TR;HashTab;0;0
init;init(uint32_t,_Bool);1;TR;HashTab;0;0
isEqual;isEqual(const void *,const void *);1;TR;HashTab;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;HashTab;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;HashTab;0;0
locate;locate(const void *,TR_HashId &);1;TR;HashTab;0;0
locate;locate(const double *,TR_HashId &);0;TR;HashTabDouble;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;HashTab;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HashTab;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;HashTab;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;HashTab;0;0
operator delete;operator delete(void *,size_t);0;TR;HashTab;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;HashTab;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HashTab;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HashTab;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;HashTab;0;0
operator new;operator new(size_t,TR::Region &);1;TR;HashTab;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;HashTab;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;HashTab;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;HashTab;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;HashTab;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HashTab;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HashTab;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;HashTab;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HashTab;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HashTab;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;HashTab;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;HashTab;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;HashTab;0;0
operator=;operator=(class TR_HashTab &&);1;TR;HashTab;1;0
operator=;operator=(const class TR_HashTab &);0;TR;HashTab;1;0
operator=;operator=(class TR_HashTabDouble &&);0;TR;HashTabDouble;1;0
operator=;operator=(const class TR_HashTabDouble &);0;TR;HashTabDouble;1;0
replace;replace(void *,TR_HashId,void *);1;TR;HashTab;0;0
reset;reset();1;TR;HashTab;0;0
setKey;setKey(TR_HashId,void *);1;TR;HashTab;0;0
trHeapMemory;trHeapMemory();1;TR;HashTab;0;0
trMemory;trMemory();1;TR;HashTab;0;0
trStackMemory;trStackMemory();1;TR;HashTab;0;0
updateData;updateData(TR_HashId,void *);1;TR;HashTab;0;0
~TR_HashTab;~TR_HashTab();1;TR;HashTab;1;0
~TR_HashTabDouble;~TR_HashTabDouble();1;TR;HashTabDouble;1;0
TR_HashTabFloat;TR_HashTabFloat(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);1;TR;HashTabFloat;0;0
add;add(float *,TR_HashId,void *);0;TR;HashTabFloat;0;0
locate;locate(const float *,TR_HashId &);0;TR;HashTabFloat;0;0
operator=;operator=(class TR_HashTabFloat &&);0;TR;HashTabFloat;1;0
operator=;operator=(const class TR_HashTabFloat &);0;TR;HashTabFloat;1;0
~TR_HashTabFloat;~TR_HashTabFloat();1;TR;HashTabFloat;1;0
TR_HashTabInt;TR_HashTabInt(class TR_HashTabInt &&);1;TR;HashTabInt;1;0
TR_HashTabInt;TR_HashTabInt(const class TR_HashTabInt &);0;TR;HashTabInt;1;0
TR_HashTabInt;TR_HashTabInt(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);0;TR;HashTabInt;0;0
add;add(int32_t,TR_HashId,void *);0;TR;HashTabInt;0;0
locate;locate(int32_t,TR_HashId &);0;TR;HashTabInt;0;0
operator=;operator=(const class TR_HashTabInt &);0;TR;HashTabInt;1;0
operator=;operator=(class TR_HashTabInt &&);0;TR;HashTabInt;1;0
~TR_HashTabInt;~TR_HashTabInt();1;TR;HashTabInt;1;0
TR_HashTabLong;TR_HashTabLong(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);1;TR;HashTabLong;0;0
add;add(int64_t *,TR_HashId,void *);0;TR;HashTabLong;0;0
locate;locate(const int64_t *,TR_HashId &);0;TR;HashTabLong;0;0
operator=;operator=(class TR_HashTabLong &&);0;TR;HashTabLong;1;0
operator=;operator=(const class TR_HashTabLong &);0;TR;HashTabLong;1;0
~TR_HashTabLong;~TR_HashTabLong();1;TR;HashTabLong;1;0
TR_HashTabString;TR_HashTabString(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);1;TR;HashTabString;0;0
add;add(const char *,TR_HashId,void *);0;TR;HashTabString;0;0
locate;locate(const char *,TR_HashId &);0;TR;HashTabString;0;0
operator=;operator=(class TR_HashTabString &&);0;TR;HashTabString;1;0
operator=;operator=(const class TR_HashTabString &);0;TR;HashTabString;1;0
~TR_HashTabString;~TR_HashTabString();1;TR;HashTabString;1;0
TR_HeapMemory;TR_HeapMemory(class TR_Memory *);1;TR;HeapMemory;0;0
TR_HeapMemory;TR_HeapMemory(const class TR_HeapMemory &);0;TR;HeapMemory;1;0
TR_HeapMemory;TR_HeapMemory(class TR_HeapMemory &&);0;TR;HeapMemory;1;0
TR_MemoryAllocationType;TR_MemoryAllocationType(const class TR_MemoryAllocationType &);1;TR;MemoryAllocationType;1;0
TR_MemoryAllocationType;TR_MemoryAllocationType(class TR_MemoryAllocationType &&);0;TR;MemoryAllocationType;1;0
TR_MemoryAllocationType;TR_MemoryAllocationType(class TR_Memory &);0;TR;MemoryAllocationType;0;0
allocate;allocate(size_t,class TR_MemoryBase::ObjectType);1;TR;HeapMemory;0;0
deallocate;deallocate(void *);1;TR;HeapMemory;0;0
operator=;operator=(class TR_MemoryAllocationType &&);1;TR;MemoryAllocationType;1;0
operator=;operator=(const class TR_MemoryAllocationType &);0;TR;MemoryAllocationType;1;0
operator=;operator=(class TR_HeapMemory &&);0;TR;HeapMemory;1;0
trMemory;trMemory();1;TR;MemoryAllocationType;0;0
~TR_HeapMemory;~TR_HeapMemory();1;TR;HeapMemory;1;0
~TR_MemoryAllocationType;~TR_MemoryAllocationType();1;TR;MemoryAllocationType;1;0
TR_Memory;TR_Memory(class TR_Memory &&);1;TR;Memory;1;0
TR_Memory;TR_Memory(class TR_PersistentMemory &,TR::Region &);0;TR;Memory;0;0
TR_MemoryBase;TR_MemoryBase(void *);1;TR;MemoryBase;0;0
TR_MemoryBase;TR_MemoryBase(const class TR_MemoryBase &);0;TR;MemoryBase;0;0
allocateHeapMemory;allocateHeapMemory(size_t,enum TR_MemoryBase::ObjectType);1;TR;Memory;0;0
allocateMemory;allocateMemory(size_t,enum TR_AllocationKind,enum TR_MemoryBase::ObjectType);1;TR;Memory;0;0
allocateStackMemory;allocateStackMemory(size_t,enum TR_MemoryBase::ObjectType);1;TR;Memory;0;0
currentStackRegion;currentStackRegion();1;TR;Memory;0;0
freeMemory;freeMemory(void *,enum TR_AllocationKind,enum TR_MemoryBase::ObjectType);1;TR;Memory;0;0
getPersistentInfo;getPersistentInfo();1;TR;Memory;0;0
heapMemoryRegion;heapMemoryRegion();1;TR;Memory;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t,enum TR_MemoryBase::ObjectType);1;TR;MemoryBase;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;MemoryBase;0;0
operator=;operator=(const class TR_MemoryBase &);1;TR;MemoryBase;1;0
operator=;operator=(class TR_Memory &&);0;TR;Memory;1;0
registerStackRegion;registerStackRegion(TR::Region &);1;TR;Memory;0;0
setCompilation;setCompilation(TR::Compilation *);1;TR;Memory;0;0
trHeapMemory;trHeapMemory();1;TR;Memory;0;0
trPersistentMemory;trPersistentMemory();1;TR;Memory;0;0
trStackMemory;trStackMemory();1;TR;Memory;0;0
unregisterStackRegion;unregisterStackRegion(TR::Region &,TR::Region &);1;TR;Memory;0;0
~TR_MemoryBase;~TR_MemoryBase();1;TR;MemoryBase;1;0
TR_AliasSetInterface<AliasSetInterface>;TR_AliasSetInterface<AliasSetInterface>(_Bool,_Bool);1;TR;AliasSetInterface;0;0
TR_NodeAliasSetInterface<>;TR_NodeAliasSetInterface<>(TR::Node *,_Bool,_Bool);1;TR;NodeAliasSetInterface;0;0
addAlias;addAlias(TR::SymbolReference *);1;TR;AliasSetInterface;0;0
addAliases;addAliases(TR::SparseBitVector &);1;TR;AliasSetInterface;0;0
contains;contains(TR::SymbolReference *,TR::Compilation *);1;TR;AliasSetInterface;0;0
contains;contains(uint32_t,TR::Compilation *);0;TR;AliasSetInterface;0;0
containsAny;containsAny(class TR_BitVector &,TR::Compilation *);1;TR;AliasSetInterface;0;0
getAliases;getAliases(class TR_BitVector &);1;TR;AliasSetInterface;0;0
getAliasesAndSubtractFrom;getAliasesAndSubtractFrom(class TR_BitVector &);1;TR;AliasSetInterface;0;0
getAliasesAndUnionWith;getAliasesAndUnionWith(TR::SparseBitVector &);1;TR;AliasSetInterface;0;0
getAliasesAndUnionWith;getAliasesAndUnionWith(class TR_BitVector &);0;TR;AliasSetInterface;0;0
getAliasesWithClear;getAliasesWithClear(class TR_BitVector &);1;TR;AliasSetInterface;0;0
getTRAliases;getTRAliases();1;TR;AliasSetInterface;0;0
getTRAliases_impl;getTRAliases_impl(_Bool,_Bool);1;TR;NodeAliasSetInterface;0;0
hasAliases;hasAliases();1;TR;AliasSetInterface;0;0
isZero;isZero(TR::Compilation *);1;TR;AliasSetInterface;0;0
removeAlias;removeAlias(TR::SymbolReference *);1;TR;AliasSetInterface;0;0
removeAliases;removeAliases(TR::SparseBitVector &);1;TR;AliasSetInterface;0;0
setAlias;setAlias(TR::SymbolReference *,_Bool);1;TR;AliasSetInterface;0;0
TR_PersistentMemory;TR_PersistentMemory(class TR_PersistentMemory &&);1;TR;PersistentMemory;1;0
TR_PersistentMemory;TR_PersistentMemory(void *,TR::PersistentAllocator &);0;TR;PersistentMemory;0;0
allocatePersistentMemory;allocatePersistentMemory(const size_t,const enum TR_MemoryBase::ObjectType);1;TR;PersistentMemory;0;0
freePersistentMemory;freePersistentMemory(void *);1;TR;PersistentMemory;0;0
getNonThreadSafePersistentInfo;getNonThreadSafePersistentInfo();1;TR;PersistentMemory;0;0
getPersistentInfo;getPersistentInfo();1;TR;PersistentMemory;0;0
operator=;operator=(class TR_PersistentMemory &&);0;TR;PersistentMemory;1;0
TR_Dominators;TR_Dominators(TR::Compilation *,_Bool);1;TR;Dominators;0;0
TR_Dominators;TR_Dominators(class TR_Dominators &&);0;TR;Dominators;1;0
TR_Dominators;TR_Dominators(const class TR_Dominators &);0;TR;Dominators;1;0
TR_PostDominators;TR_PostDominators(TR::Compilation *);1;TR;PostDominators;0;0
blockNumber;blockNumber(int32_t);1;TR;Dominators;0;0
comp;comp();1;TR;Dominators;0;0
compress;compress(int32_t);1;TR;Dominators;0;0
countBlocksControlled;countBlocksControlled(int32_t,BitVector &);1;TR;PostDominators;0;0
dominates;dominates(TR::Block *,TR::Block *);1;TR;Dominators;0;0
eval;eval(int32_t);1;TR;Dominators;0;0
findControlDependents;findControlDependents();1;TR;PostDominators;0;0
findDominators;findDominators(TR::Block *);1;TR;Dominators;0;0
getDominator;getDominator(TR::Block *);1;TR;Dominators;0;0
getInfo;getInfo(int32_t);1;TR;Dominators;0;0
initialize;initialize(TR::Block *,struct TR_Dominators::BBInfo *);1;TR;Dominators;0;0
isValid;isValid();1;TR;PostDominators;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;Dominators;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;Dominators;0;0
link;link(int32_t,int32_t);1;TR;Dominators;0;0
numberOfBlocksControlled;numberOfBlocksControlled(int32_t);1;TR;PostDominators;0;0
operator delete;operator delete(void *,size_t);1;TR;Dominators;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;Dominators;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Dominators;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Dominators;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Dominators;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;Dominators;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Dominators;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Dominators;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Dominators;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Dominators;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;Dominators;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Dominators;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;Dominators;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;Dominators;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Dominators;0;0
operator new;operator new(size_t,TR::Region &);0;TR;Dominators;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;TR;Dominators;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;Dominators;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;Dominators;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Dominators;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Dominators;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Dominators;0;0
operator=;operator=(class TR_Dominators &&);1;TR;Dominators;1;0
operator=;operator=(const class TR_Dominators &);0;TR;Dominators;1;0
operator=;operator=(class TR_PostDominators &&);0;TR;PostDominators;1;0
trace;trace();1;TR;Dominators;0;0
~TR_Dominators;~TR_Dominators();1;TR;Dominators;1;0
TR_CFGIterator;TR_CFGIterator(TR::CFGEdgeList &,TR::CFGEdgeList &);1;TR;CFGIterator;0;0
TR_CFGIterator;TR_CFGIterator(const class TR_CFGIterator &);0;TR;CFGIterator;1;0
TR_CFGIterator;TR_CFGIterator(class TR_CFGIterator &&);0;TR;CFGIterator;1;0
TR_PredecessorIterator;TR_PredecessorIterator(TR::CFGNode *);1;TR;PredecessorIterator;0;0
getCurrent;getCurrent();1;TR;CFGIterator;0;0
getFirst;getFirst();1;TR;CFGIterator;0;0
getNext;getNext();1;TR;CFGIterator;0;0
operator=;operator=(const class TR_CFGIterator &);1;TR;CFGIterator;1;0
operator=;operator=(class TR_CFGIterator &&);0;TR;CFGIterator;1;0
operator=;operator=(class TR_PredecessorIterator &&);0;TR;PredecessorIterator;1;0
TR_StackMemory;TR_StackMemory(class TR_StackMemory &&);1;TR;StackMemory;1;0
TR_StackMemory;TR_StackMemory(const class TR_StackMemory &);0;TR;StackMemory;1;0
TR_StackMemory;TR_StackMemory(class TR_Memory *);0;TR;StackMemory;0;0
allocate;allocate(size_t,class TR_MemoryBase::ObjectType);1;TR;StackMemory;0;0
deallocate;deallocate(void *);1;TR;StackMemory;0;0
operator=;operator=(class TR_StackMemory &&);0;TR;StackMemory;1;0
~TR_StackMemory;~TR_StackMemory();1;TR;StackMemory;1;0
TR_SuccessorIterator;TR_SuccessorIterator(TR::CFGNode *);1;TR;SuccessorIterator;0;0
operator=;operator=(class TR_SuccessorIterator &&);0;TR;SuccessorIterator;1;0
TR_SymAliasSetInterface<>;TR_SymAliasSetInterface<>(TR::SymbolReference *,_Bool,_Bool);1;TR;SymAliasSetInterface;0;0
addSymRef1KillsSymRef2Asymmetrically;addSymRef1KillsSymRef2Asymmetrically(TR::SymbolReference *,TR::SymbolReference *,_Bool);1;TR;SymAliasSetInterface;0;0
getTRAliases_impl;getTRAliases_impl(_Bool,_Bool);1;TR;SymAliasSetInterface;0;0
removeAllAliases;removeAllAliases();1;TR;SymAliasSetInterface;0;0
removeSymRef1KillsSymRef2Asymmetrically;removeSymRef1KillsSymRef2Asymmetrically(TR::SymbolReference *,TR::SymbolReference *,_Bool);1;TR;SymAliasSetInterface;0;0
setAlias_impl;setAlias_impl(TR::SymbolReference *,_Bool,_Bool,_Bool);1;TR;SymAliasSetInterface;0;0
setAliases_impl;setAliases_impl(TR::SparseBitVector &,_Bool,_Bool,_Bool);1;TR;SymAliasSetInterface;0;0
setSymRef1KillsSymRef2Asymmetrically;setSymRef1KillsSymRef2Asymmetrically(TR::SymbolReference *,TR::SymbolReference *,_Bool,_Bool);1;TR;SymAliasSetInterface;0;0
TR_SymRefIterator;TR_SymRefIterator(class TR_BitVector &,TR::SymbolReferenceTable *);1;TR;SymRefIterator;0;0
getNext;getNext();1;TR;SymRefIterator;0;0
BufferBase<TCursor>;BufferBase<TCursor>(cursor_t);1;TR_X86OpCode;BufferBase;0;0
Estimator;Estimator(cursor_t);1;TR_X86OpCode;Estimator;0;0
operator type-parameter-0-0;operator type-parameter-0-0();1;TR_X86OpCode;BufferBase;0;0
Writer;Writer(cursor_t);1;TR_X86OpCode;Writer;0;0
TR_ScratchRegisterManager;TR_ScratchRegisterManager(const class TR_ScratchRegisterManager &);1;TR;ScratchRegisterManager;1;0
TR_ScratchRegisterManager;TR_ScratchRegisterManager(int32_t,TR::CodeGenerator *);0;TR;ScratchRegisterManager;0;0
TR_ScratchRegisterManager;TR_ScratchRegisterManager(class TR_ScratchRegisterManager &&);0;TR;ScratchRegisterManager;1;0
TR_X86ScratchRegisterManager;TR_X86ScratchRegisterManager(int32_t,TR::CodeGenerator *);1;TR;X86ScratchRegisterManager;0;0
addScratchRegistersToDependencyList;addScratchRegistersToDependencyList(TR::RegisterDependencyConditions *);1;TR;ScratchRegisterManager;0;0
donateScratchRegister;donateScratchRegister(TR::Register *);1;TR;ScratchRegisterManager;0;0
findOrCreateScratchRegister;findOrCreateScratchRegister(enum TR_RegisterKinds);1;TR;ScratchRegisterManager;0;0
getCapacity;getCapacity();1;TR;ScratchRegisterManager;0;0
getManagedScratchRegisterList;getManagedScratchRegisterList();1;TR;ScratchRegisterManager;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;ScratchRegisterManager;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;ScratchRegisterManager;0;0
numAvailableRegisters;numAvailableRegisters();1;TR;ScratchRegisterManager;0;0
operator delete;operator delete(void *,size_t);1;TR;ScratchRegisterManager;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;ScratchRegisterManager;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;ScratchRegisterManager;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;ScratchRegisterManager;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;ScratchRegisterManager;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;ScratchRegisterManager;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;ScratchRegisterManager;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;ScratchRegisterManager;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;ScratchRegisterManager;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;ScratchRegisterManager;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;ScratchRegisterManager;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;ScratchRegisterManager;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;ScratchRegisterManager;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;ScratchRegisterManager;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;ScratchRegisterManager;0;0
operator new;operator new(size_t,TR::Region &);0;TR;ScratchRegisterManager;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;TR;ScratchRegisterManager;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;ScratchRegisterManager;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;ScratchRegisterManager;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;ScratchRegisterManager;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;ScratchRegisterManager;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;ScratchRegisterManager;0;0
reclaimAddressRegister;reclaimAddressRegister(TR::MemoryReference *);1;TR;X86ScratchRegisterManager;0;0
reclaimScratchRegister;reclaimScratchRegister(TR::Register *);1;TR;ScratchRegisterManager;0;0
setCapacity;setCapacity(int32_t);1;TR;ScratchRegisterManager;0;0
stopUsingRegisters;stopUsingRegisters();1;TR;ScratchRegisterManager;0;0
ParameterSymbol;ParameterSymbol(class OMR::ParameterSymbol &&);1;OMR;ParameterSymbol;1;0
ParameterSymbol;ParameterSymbol(TR::DataType,int32_t);0;OMR;ParameterSymbol;0;0
ParameterSymbol;ParameterSymbol(TR::DataType,int32_t,size_t);0;OMR;ParameterSymbol;0;0
ParameterSymbol;ParameterSymbol(const class OMR::ParameterSymbol &);0;OMR;ParameterSymbol;1;0
getAllocatedHigh;getAllocatedHigh();1;OMR;ParameterSymbol;0;0
getAllocatedIndex;getAllocatedIndex();1;OMR;ParameterSymbol;0;0
getAllocatedLow;getAllocatedLow();1;OMR;ParameterSymbol;0;0
getFixedType;getFixedType();1;OMR;ParameterSymbol;0;0
getIsPreexistent;getIsPreexistent();1;OMR;ParameterSymbol;0;0
getKnownObjectIndex;getKnownObjectIndex();1;OMR;ParameterSymbol;0;0
getLinkageRegisterIndex;getLinkageRegisterIndex();1;OMR;ParameterSymbol;0;0
getOrdinal;getOrdinal();1;OMR;ParameterSymbol;0;0
getParameterOffset;getParameterOffset();1;OMR;ParameterSymbol;0;0
getSlot;getSlot();1;OMR;ParameterSymbol;0;0
getTypeSignature;getTypeSignature(int32_t &);1;OMR;ParameterSymbol;0;0
hasKnownObjectIndex;hasKnownObjectIndex();1;OMR;ParameterSymbol;0;0
isParmPassedInRegister;isParmPassedInRegister();1;OMR;ParameterSymbol;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Symbol;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Symbol;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Symbol;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;Symbol;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Symbol;0;0
operator=;operator=(class OMR::ParameterSymbol &&);0;OMR;ParameterSymbol;1;0
operator=;operator=(const class OMR::ParameterSymbol &);0;OMR;ParameterSymbol;1;0
operator=;operator=(const class TR::ParameterSymbol &);0;TR;ParameterSymbol;1;0
operator=;operator=(class TR::ParameterSymbol &&);0;TR;ParameterSymbol;1;0
setAllocatedHigh;setAllocatedHigh(int8_t);1;OMR;ParameterSymbol;0;0
setAllocatedIndex;setAllocatedIndex(int8_t);1;OMR;ParameterSymbol;0;0
setAllocatedLow;setAllocatedLow(int8_t);1;OMR;ParameterSymbol;0;0
setFixedType;setFixedType(void *);1;OMR;ParameterSymbol;0;0
setIsPreexistent;setIsPreexistent(_Bool);1;OMR;ParameterSymbol;0;0
setKnownObjectIndex;setKnownObjectIndex(TR::class KnownObjectTable::Index);1;OMR;ParameterSymbol;0;0
setLinkageRegisterIndex;setLinkageRegisterIndex(int8_t);1;OMR;ParameterSymbol;0;0
setOrdinal;setOrdinal(int32_t);1;OMR;ParameterSymbol;0;0
setParameterOffset;setParameterOffset(int32_t);1;OMR;ParameterSymbol;0;0
setTypeSignature;setTypeSignature(const char *,int32_t);1;OMR;ParameterSymbol;0;0
~ParameterSymbol;~ParameterSymbol();1;OMR;ParameterSymbol;1;1
genInduceOSRCall;genInduceOSRCall(TR::TreeTop *,int32_t,int32_t,_Bool,_Bool,TR::CFG *);1;OMR;ResolvedMethodSymbol;0;0
genInduceOSRCall;genInduceOSRCall(TR::TreeTop *,int32_t,class TR_OSRMethodData *,int32_t,_Bool,_Bool,TR::CFG *);0;OMR;ResolvedMethodSymbol;0;0
getAutoSymRefs;getAutoSymRefs();1;OMR;ResolvedMethodSymbol;0;0
getAutoSymRefs;getAutoSymRefs(int32_t);0;OMR;ResolvedMethodSymbol;0;0
getPendingPushSymRefs;getPendingPushSymRefs(int32_t);1;OMR;ResolvedMethodSymbol;0;0
getPendingPushSymRefs;getPendingPushSymRefs();0;OMR;ResolvedMethodSymbol;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;Snippet;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Snippet;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Snippet;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Snippet;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;Snippet;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Snippet;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Snippet;0;0
gatherLocalUseInfo;gatherLocalUseInfo(TR::Node *,class TR_BitVector &,vcount_t,_Bool);1;OMR;AliasBuilder;0;0
gatherLocalUseInfo;gatherLocalUseInfo(TR::Block *,_Bool);0;OMR;AliasBuilder;0;0
BlockChecklist;BlockChecklist(class TR::BlockChecklist &&);1;TR;BlockChecklist;1;0
BlockChecklist;BlockChecklist(TR::Compilation *);0;TR;BlockChecklist;0;0
classNameChars;classNameChars(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t &);1;OMR;ClassEnv;0;0
classNameChars;classNameChars(TR::Compilation *,TR::SymbolReference *,int32_t &);0;OMR;ClassEnv;0;0
Compilation;Compilation(int32_t,OMR_VMThread *,class TR_FrontEnd *,class TR_ResolvedMethod *,TR::IlGenRequest &,TR::Options &,TR::Region &,class TR_Memory *,class TR_OptimizationPlan *);1;OMR;Compilation;0;0
Compilation;Compilation(class OMR::Compilation &);0;OMR;Compilation;1;0
fe;fe();1;OMR;Compilation;0;1
getHotnessName;getHotnessName(enum TR_Hotness);1;OMR;Compilation;0;0
getHotnessName;getHotnessName();0;OMR;Compilation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Compilation;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Compilation;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;Compilation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Compilation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Compilation;0;0
resetVisitCounts;resetVisitCounts(vcount_t,TR::ResolvedMethodSymbol *);1;OMR;Compilation;0;0
resetVisitCounts;resetVisitCounts(vcount_t);0;OMR;Compilation;0;0
operator!=;operator!=(const TR::DataType &);1;OMR;DataType;0;0
operator!=;operator!=(TR::DataTypes);0;OMR;DataType;0;0
operator=;operator=(class OMR::DataType &&);1;OMR;DataType;1;0
operator=;operator=(const class OMR::DataType &);0;OMR;DataType;1;0
operator=;operator=(class TR::DataType &&);0;TR;DataType;1;0
operator=;operator=(const class TR::DataType &);0;TR;DataType;1;0
operator==;operator==(TR::DataTypes);1;OMR;DataType;0;0
operator==;operator==(const TR::DataType &);0;OMR;DataType;0;0
operator>=;operator>=(const TR::DataType &);1;OMR;DataType;0;0
operator>=;operator>=(TR::DataTypes);0;OMR;DataType;0;0
ILOpCode;ILOpCode(TR::ILOpCodes);1;OMR;ILOpCode;0;0
ILOpCode;ILOpCode(class OMR::ILOpCode &&);0;OMR;ILOpCode;1;0
getDirectCall;getDirectCall(TR::ILOpCodes);1;OMR;ILOpCode;0;0
getDirectCall;getDirectCall(TR::DataType);0;OMR;ILOpCode;0;0
getType;getType(TR::ILOpCodes);1;OMR;ILOpCode;0;0
getType;getType();0;OMR;ILOpCode;0;0
fe;fe();1;OMR;KnownObjectTable;0;1
getIndex;getIndex(uintptrj_t);1;OMR;KnownObjectTable;0;1
getIndex;getIndex(uintptrj_t,_Bool);0;OMR;KnownObjectTable;0;0
cconst;cconst(TR::Node *,uint16_t);1;OMR;Node;0;0
cconst;cconst(uint16_t);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *);1;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::TreeTop *);0;OMR;Node;0;0
createAddressNode;createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t,uint8_t);1;OMR;Node;0;0
createAddressNode;createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t);0;OMR;Node;0;0
createArraycopy;createArraycopy(TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
createArraycopy;createArraycopy(TR::Node *,TR::Node *,TR::Node *);0;OMR;Node;0;0
createRelative32BitFenceNode;createRelative32BitFenceNode(void *);1;OMR;Node;0;0
createRelative32BitFenceNode;createRelative32BitFenceNode(TR::Node *,void *);0;OMR;Node;0;0
createStore;createStore(TR::Node *,TR::SymbolReference *,TR::Node *);1;OMR;Node;0;0
createStore;createStore(TR::SymbolReference *,TR::Node *);0;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::SymbolReference *);1;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *,uintptr_t);0;OMR;Node;0;0
iuconst;iuconst(TR::Node *,uint32_t);1;OMR;Node;0;0
iuconst;iuconst(uint32_t);0;OMR;Node;0;0
lconst;lconst(TR::Node *,int64_t);1;OMR;Node;0;0
lconst;lconst(int64_t);0;OMR;Node;0;0
luconst;luconst(TR::Node *,uint64_t);1;OMR;Node;0;0
luconst;luconst(uint64_t);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);1;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *);0;OMR;Node;0;0
sconst;sconst(TR::Node *,int16_t);1;OMR;Node;0;0
sconst;sconst(int16_t);0;OMR;Node;0;0
NodeChecklist;NodeChecklist(TR::Compilation *);1;TR;NodeChecklist;0;0
ObjectModel;ObjectModel();1;OMR;ObjectModel;0;0
ObjectModel;ObjectModel(class OMR::ObjectModel &&);0;OMR;ObjectModel;1;0
isDiscontiguousArray;isDiscontiguousArray(int32_t,int32_t);1;OMR;ObjectModel;0;0
isDiscontiguousArray;isDiscontiguousArray(int32_t);0;OMR;ObjectModel;0;0
fe;fe();1;TR;ResolvedMethod;0;1
getResolvedInterfaceMethod;getResolvedInterfaceMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t);1;TR;ResolvedMethod;0;1
getResolvedInterfaceMethod;getResolvedInterfaceMethod(int32_t,uintptrj_t *);0;TR;ResolvedMethod;0;1
getResolvedVirtualMethod;getResolvedVirtualMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t,_Bool);1;TR;ResolvedMethod;0;1
getResolvedVirtualMethod;getResolvedVirtualMethod(TR::Compilation *,int32_t,_Bool,_Bool *);0;TR;ResolvedMethod;0;1
operator=;operator=(const class TR_ResolvedMethod &);1;TR;ResolvedMethod;1;0
operator=;operator=(class TR_ResolvedMethod &&);0;TR;ResolvedMethod;1;0
TR_Method;TR_Method(const class TR_Method &);1;TR;Method;1;0
TR_Method;TR_Method(class TR_Method &&);0;TR;Method;1;0
operator new;operator new(size_t,TR::Region &);1;TR;Method;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Method;0;0
operator=;operator=(class OMR::SnippetGCMap &&);1;OMR;SnippetGCMap;1;0
operator=;operator=(const class OMR::SnippetGCMap &);0;OMR;SnippetGCMap;1;0
registerStackMap;registerStackMap(TR::Instruction *,TR::CodeGenerator *);1;OMR;SnippetGCMap;0;0
registerStackMap;registerStackMap(uint8_t *,TR::CodeGenerator *);0;OMR;SnippetGCMap;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReference;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;SymbolReference;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;SymbolReference;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;SymbolReference;0;0
fe;fe();1;OMR;SymbolReferenceTable;0;1
TreeTop;TreeTop(const class OMR::TreeTop &);1;OMR;TreeTop;1;0
TreeTop;TreeTop(class OMR::TreeTop &&);0;OMR;TreeTop;1;0
getKind;getKind();1;OMR;Symbol;0;0
getKind;getKind();1;OMR;Register;0;0
getKind;getKind();1;OMR;Instruction;0;0
getKind;getKind();1;OMR::X86;Snippet;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Snippet;0;0
CFGEdge;CFGEdge(class TR::CFGNode *,class TR::CFGNode *);1;TR;CFGEdge;0;0
CFGEdge;CFGEdge();0;TR;CFGEdge;0;0
createEdge;createEdge(class TR::CFGNode *,class TR::CFGNode *,TR::Region &);1;TR;CFGEdge;0;0
createEdge;createEdge(class TR::CFGNode *,class TR::CFGNode *,class TR_Memory *,enum TR_AllocationKind);0;TR;CFGEdge;0;0
createExceptionEdge;createExceptionEdge(class TR::CFGNode *,class TR::CFGNode *,TR::Region &);1;TR;CFGEdge;0;0
createExceptionEdge;createExceptionEdge(class TR::CFGNode *,class TR::CFGNode *,class TR_Memory *,enum TR_AllocationKind);0;TR;CFGEdge;0;0
getName;getName();1;OMR;CodeGenPhase;0;0
getName;getName(enum OMR::CodeGenPhase::PhaseValue);0;OMR;CodeGenPhase;0;0
operator=;operator=(class OMR::KnownObjectTable &&);1;OMR;KnownObjectTable;1;0
operator=;operator=(const class OMR::KnownObjectTable &);0;OMR;KnownObjectTable;1;0
copy;copy(TR::Node *,int32_t);1;OMR;Node;0;0
copy;copy(TR::Node *);0;OMR;Node;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
createArraycopy;createArraycopy();1;OMR;Node;0;0
createLoad;createLoad(TR::SymbolReference *);1;OMR;Node;0;0
createLoad;createLoad(TR::Node *,TR::SymbolReference *);0;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,uintptr_t,TR::SymbolReference *);1;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);1;OMR;Node;0;0
TR_BitVectorIterator;TR_BitVectorIterator(class TR_BitVectorIterator &&);1;TR;BitVectorIterator;1;0
TR_BitVectorIterator;TR_BitVectorIterator(const class TR_BitVectorIterator &);0;TR;BitVectorIterator;1;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;TR;HashTab;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HashTab;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;HashTab;0;0
operator new;operator new(size_t,TR::Region &);0;TR;HashTab;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;HashTab;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;HashTab;0;0
operator=;operator=(const class TR_HashTab &);1;TR;HashTab;1;0
operator=;operator=(class TR_HashTab &&);0;TR;HashTab;1;0
operator=;operator=(const class TR_MemoryAllocationType &);1;TR;MemoryAllocationType;1;0
operator=;operator=(class TR_MemoryAllocationType &&);0;TR;MemoryAllocationType;1;0
operator delete;operator delete(void *,size_t);1;OMR;Symbol;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;Symbol;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Machine;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Machine;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Machine;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Machine;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Machine;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Register;0;0
operator delete;operator delete(void *,size_t);0;OMR;Register;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Register;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Register;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;Register;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Register;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;Register;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Register;0;0
operator=;operator=(class OMR::Register &&);1;OMR;Register;1;0
operator=;operator=(const class OMR::Register &);0;OMR;Register;1;0
checkNonNegativePowerOfTwo;checkNonNegativePowerOfTwo(int32_t);1;OMR;TreeEvaluator;0;0
checkNonNegativePowerOfTwo;checkNonNegativePowerOfTwo(int64_t);0;OMR;TreeEvaluator;0;0
Snippet;Snippet(const class OMR::Snippet &);1;OMR;Snippet;1;0
Snippet;Snippet(class OMR::Snippet &&);0;OMR;Snippet;1;0
ClassEnv;ClassEnv(const class OMR::ClassEnv &);1;OMR;ClassEnv;1;0
ClassEnv;ClassEnv(class OMR::ClassEnv &&);0;OMR;ClassEnv;1;0
operator=;operator=(const class OMR::ClassEnv &);1;OMR;ClassEnv;1;0
operator=;operator=(class OMR::ClassEnv &&);0;OMR;ClassEnv;1;0
CodeGenPhase;CodeGenPhase(const class OMR::CodeGenPhase &);1;OMR;CodeGenPhase;1;0
CodeGenPhase;CodeGenPhase(TR::CodeGenerator *);0;OMR;CodeGenPhase;0;0
aconst;aconst(uintptrj_t);1;OMR;Node;0;0
aconst;aconst(TR::Node *,uintptrj_t,uint8_t);0;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
Optimizer;Optimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool,const struct OptimizationStrategy *,uint16_t);1;OMR;Optimizer;0;0
Optimizer;Optimizer(const class OMR::Optimizer &);0;OMR;Optimizer;1;0
areNodesEquivalent;areNodesEquivalent(TR::Node *,TR::Node *,_Bool);1;OMR;Optimizer;0;0
areNodesEquivalent;areNodesEquivalent(TR::Node *,TR::Node *,TR::Compilation *,_Bool);0;OMR;Optimizer;0;0
operator delete;operator delete(void *,size_t);1;OMR;Optimizer;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Optimizer;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;Optimizer;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Optimizer;0;0
switchToProfiling;switchToProfiling();1;OMR;Optimizer;0;0
switchToProfiling;switchToProfiling(uint32_t,uint32_t);0;OMR;Optimizer;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Options;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Options;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Options;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Options;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Options;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Options;0;0
operator=;operator=(const class OMR::Options &);1;OMR;Options;1;0
operator=;operator=(class OMR::Options &&);0;OMR;Options;1;0
processOptionSet;processOptionSet(char *,TR::OptionSet *,void *,_Bool);1;OMR;Options;0;0
processOptionSet;processOptionSet(char *,char *,TR::OptionSet *);0;OMR;Options;0;0
Recompilation;Recompilation(const class OMR::Recompilation &);1;OMR;Recompilation;1;0
Recompilation;Recompilation(class OMR::Recompilation &&);0;OMR;Recompilation;1;0
Recompilation;Recompilation(TR::Compilation *);0;OMR;Recompilation;0;0
beforeCodeGen;beforeCodeGen();1;OMR;Recompilation;0;0
beforeOptimization;beforeOptimization();1;OMR;Recompilation;0;0
comp;comp();1;OMR;Recompilation;0;0
couldBeCompiledAgain;couldBeCompiledAgain();1;OMR;Recompilation;0;0
endOfCompilation;endOfCompilation();1;OMR;Recompilation;0;0
generatePrePrologue;generatePrePrologue();1;OMR;Recompilation;0;1
generatePrologue;generatePrologue(TR::Instruction *);1;OMR;Recompilation;0;1
isProfilingCompilation;isProfilingCompilation();1;OMR;Recompilation;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Recompilation;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Recompilation;0;0
operator delete;operator delete(void *,size_t);1;OMR;Recompilation;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Recompilation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Recompilation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Recompilation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Recompilation;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;Recompilation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Recompilation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Recompilation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Recompilation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Recompilation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Recompilation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Recompilation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Recompilation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Recompilation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Recompilation;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Recompilation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;Recompilation;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Recompilation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Recompilation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Recompilation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Recompilation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Recompilation;0;0
operator=;operator=(class OMR::Recompilation &&);1;OMR;Recompilation;1;0
operator=;operator=(const class OMR::Recompilation &);0;OMR;Recompilation;1;0
operator=;operator=(class TR::Recompilation &&);0;TR;Recompilation;1;0
operator=;operator=(const class TR::Recompilation &);0;TR;Recompilation;1;0
postCompilation;postCompilation();1;OMR;Recompilation;0;1
self;self();1;OMR;Recompilation;0;0
shouldBeCompiledAgain;shouldBeCompiledAgain();1;OMR;Recompilation;0;0
shutdown;shutdown();1;OMR;Recompilation;0;1
startOfCompilation;startOfCompilation();1;OMR;Recompilation;0;0
trHeapMemory;trHeapMemory();1;OMR;Recompilation;0;0
trMemory;trMemory();1;OMR;Recompilation;0;0
~Recompilation;~Recompilation();1;OMR;Recompilation;1;0
getCodeCacheBase;getCodeCacheBase();1;TR;FrontEnd;0;1
getCodeCacheBase;getCodeCacheBase(TR::CodeCache *);0;TR;FrontEnd;0;1
getCodeCacheTop;getCodeCacheTop();1;TR;FrontEnd;0;1
getCodeCacheTop;getCodeCacheTop(TR::CodeCache *);0;TR;FrontEnd;0;1
operator>;operator>(const TR::DataType &);1;OMR;DataType;0;0
operator>;operator>(TR::DataTypes);0;OMR;DataType;0;0
getSize;getSize();1;OMR;ILOpCode;0;0
getSize;getSize(TR::ILOpCodes);0;OMR;ILOpCode;0;0
Monitor;Monitor(const class OMR::Monitor &);1;OMR;Monitor;1;0
Monitor;Monitor();0;OMR;Monitor;1;0
destroy;destroy(TR::Monitor *);1;OMR;Monitor;0;0
destroy;destroy();0;OMR;Monitor;0;0
createWithSymRef;createWithSymRef(TR::Node *,TR::ILOpCodes,uint16_t,TR::SymbolReference *);1;OMR;Node;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;Optimizer;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;Optimizer;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Link;0;0
operator delete;operator delete(void *,size_t);0;TR;Link;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;Link;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;Link;0;0
checkPositiveOrNegativePowerOfTwo;checkPositiveOrNegativePowerOfTwo(int64_t);1;OMR;TreeEvaluator;0;0
checkPositiveOrNegativePowerOfTwo;checkPositiveOrNegativePowerOfTwo(int32_t);0;OMR;TreeEvaluator;0;0
create;create(TR::ILOpCodes,uint16_t,int32_t,TR::TreeTop *);1;OMR;Node;0;0
operator=;operator=(const class OMR::Recompilation &);1;OMR;Recompilation;1;0
operator=;operator=(class OMR::Recompilation &&);0;OMR;Recompilation;1;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Snippet;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;CFG;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;CFG;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;CFG;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *);1;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::Node *,uintptr_t,TR::SymbolReference *);1;OMR;Node;0;0
TR_FrontEnd;TR_FrontEnd();1;TR;FrontEnd;0;0
TR_FrontEnd;TR_FrontEnd(class TR_FrontEnd &&);0;TR;FrontEnd;1;0
getClassFromSignature;getClassFromSignature(const char *,int32_t,class TR_OpaqueMethodBlock *,_Bool);1;TR;FrontEnd;0;1
getClassFromSignature;getClassFromSignature(const char *,int32_t,class TR_ResolvedMethod *,_Bool);0;TR;FrontEnd;0;1
operator delete;operator delete(void *,size_t);1;OMR;Snippet;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;Snippet;0;0
getIndexAt;getIndexAt(uintptrj_t *);1;OMR;KnownObjectTable;0;0
getIndexAt;getIndexAt(uintptrj_t *,_Bool);0;OMR;KnownObjectTable;0;0
BlockChecklist;BlockChecklist(const class TR::BlockChecklist &);0;TR;BlockChecklist;1;0
add;add(class TR::NodeChecklist &);1;TR;NodeChecklist;0;0
add;add(TR::Node *);0;TR;NodeChecklist;0;0
PersistentInfo;PersistentInfo(class TR_PersistentMemory *);1;OMR;PersistentInfo;0;0
PersistentInfo;PersistentInfo(class OMR::PersistentInfo &&);0;OMR;PersistentInfo;1;0
operator=;operator=(const class OMR::PersistentInfo &);1;OMR;PersistentInfo;1;0
operator=;operator=(class OMR::PersistentInfo &&);0;OMR;PersistentInfo;1;0
Optimization;Optimization(const class OMR::Optimization &);1;OMR;Optimization;1;0
Optimization;Optimization(TR::OptimizationManager *);0;OMR;Optimization;0;0
Optimization;Optimization(class TR::Optimization &&);0;TR;Optimization;1;0
TR_HasRandomGenerator;TR_HasRandomGenerator(const class TR_HasRandomGenerator &);1;TR;HasRandomGenerator;1;0
TR_HasRandomGenerator;TR_HasRandomGenerator(class TR_HasRandomGenerator &&);0;TR;HasRandomGenerator;1;0
TR_HasRandomGenerator;TR_HasRandomGenerator(TR::Compilation *);0;TR;HasRandomGenerator;0;0
allocator;allocator();1;OMR;Optimization;0;0
anchorAllChildren;anchorAllChildren(TR::Node *,TR::TreeTop *);1;OMR;Optimization;0;0
anchorChildren;anchorChildren(TR::Node *,TR::TreeTop *,uint32_t,_Bool,TR::Node *);1;OMR;Optimization;0;0
anchorNode;anchorNode(TR::Node *,TR::TreeTop *);1;OMR;Optimization;0;0
cg;cg();1;OMR;Optimization;0;0
changeConditionalToUnconditional;changeConditionalToUnconditional(TR::Node *&,TR::Block *,int,TR::TreeTop *,const char *);1;OMR;Optimization;0;0
comp;comp();1;OMR;Optimization;0;0
fe;fe();1;OMR;Optimization;0;0
generateAnchor;generateAnchor(TR::Node *,TR::TreeTop *);1;OMR;Optimization;0;0
getDebug;getDebug();1;OMR;Optimization;0;0
getLastRun;getLastRun();1;OMR;Optimization;0;0
getSymRefTab;getSymRefTab();1;OMR;Optimization;0;0
id;id();1;OMR;Optimization;0;0
manager;manager();1;OMR;Optimization;0;0
name;name();1;OMR;Optimization;0;0
nodeIsOrderDependent;nodeIsOrderDependent(TR::Node *,uint32_t,_Bool);1;OMR;Optimization;0;0
operator delete;operator delete(void *,size_t);1;OMR;Optimization;0;0
operator new;operator new(size_t,TR::Allocator);1;OMR;Optimization;0;0
operator=;operator=(const class TR_HasRandomGenerator &);1;TR;HasRandomGenerator;1;0
operator=;operator=(class TR_HasRandomGenerator &&);0;TR;HasRandomGenerator;1;0
operator=;operator=(const class OMR::Optimization &);0;OMR;Optimization;1;0
operator=;operator=(const class TR::Optimization &);0;TR;Optimization;1;0
operator=;operator=(class TR::Optimization &&);0;TR;Optimization;1;0
optDetailString;optDetailString();1;OMR;Optimization;0;1
optimizer;optimizer();1;OMR;Optimization;0;0
perform;perform();1;OMR;Optimization;0;1
performOnBlock;performOnBlock(TR::Block *);1;OMR;Optimization;0;1
postPerform;postPerform();1;OMR;Optimization;0;1
postPerformOnBlocks;postPerformOnBlocks();1;OMR;Optimization;0;1
prePerform;prePerform();1;OMR;Optimization;0;1
prePerformOnBlocks;prePerformOnBlocks();1;OMR;Optimization;0;1
prepareToReplaceNode;prepareToReplaceNode(TR::Node *,TR::ILOpCodes);1;OMR;Optimization;0;0
prepareToReplaceNode;prepareToReplaceNode(TR::Node *);0;OMR;Optimization;0;0
prepareToStopUsingNode;prepareToStopUsingNode(TR::Node *,TR::TreeTop *,_Bool);1;OMR;Optimization;0;0
randomBoolean;randomBoolean(int32_t);1;TR;HasRandomGenerator;0;0
randomGenerator;randomGenerator();1;TR;HasRandomGenerator;0;0
randomInt;randomInt();1;TR;HasRandomGenerator;0;0
randomInt;randomInt(int32_t);0;TR;HasRandomGenerator;0;0
randomInt;randomInt(int32_t,int32_t);0;TR;HasRandomGenerator;0;0
removeNode;removeNode(TR::Node *,TR::TreeTop *);1;OMR;Optimization;0;0
removeOrconvertIfToGoto;removeOrconvertIfToGoto(TR::Node *&,TR::Block *,int,TR::TreeTop *,TR::TreeTop *&,TR::TreeTop *&,const char *);1;OMR;Optimization;0;0
replaceNode;replaceNode(TR::Node *,TR::Node *,TR::TreeTop *,_Bool);1;OMR;Optimization;0;0
replaceNodeWithChild;replaceNodeWithChild(TR::Node *,TR::Node *,TR::TreeTop *,TR::Block *,_Bool);1;OMR;Optimization;0;0
requestDeadTreesCleanup;requestDeadTreesCleanup(_Bool,TR::Block *);1;OMR;Optimization;0;0
requestOpt;requestOpt(OMR::Optimizations,_Bool,TR::Block *);1;OMR;Optimization;0;0
self;self();1;OMR;Optimization;0;0
setTrace;setTrace(_Bool);1;OMR;Optimization;0;0
shouldPerform;shouldPerform();1;OMR;Optimization;0;1
trHeapMemory;trHeapMemory();1;OMR;Optimization;0;0
trMemory;trMemory();1;OMR;Optimization;0;0
trPersistentMemory;trPersistentMemory();1;OMR;Optimization;0;0
trStackMemory;trStackMemory();1;OMR;Optimization;0;0
trace;trace();1;OMR;Optimization;0;0
~Optimization;~Optimization();1;OMR;Optimization;0;1
~TR_HasRandomGenerator;~TR_HasRandomGenerator();1;TR;HasRandomGenerator;1;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Snippet;0;0
gatherLocalUseInfo;gatherLocalUseInfo(TR::Block *,class TR_BitVector &,TR_ScratchList<TR_Pair<TR::Block, class TR_BitVector> > *,vcount_t,_Bool);1;OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;AliasBuilder;0;0
AllBlockIterator;AllBlockIterator(const class TR::AllBlockIterator &);1;TR;AllBlockIterator;1;0
AllBlockIterator;AllBlockIterator(class TR::AllBlockIterator &&);0;TR;AllBlockIterator;1;0
AllBlockIterator;AllBlockIterator(TR::CFG *,TR::Compilation *,const char *);0;TR;AllBlockIterator;0;0
BlockIterator;BlockIterator(TR::Compilation *,const char *);1;TR;BlockIterator;0;0
BlockIterator;BlockIterator(const class TR::BlockIterator &);0;TR;BlockIterator;1;0
BlockIterator;BlockIterator(class TR::BlockIterator &&);0;TR;BlockIterator;1;0
currentBlock;currentBlock();1;TR;AllBlockIterator;0;0
isAt;isAt(TR::Block *);1;TR;AllBlockIterator;0;0
isLoggingEnabled;isLoggingEnabled();1;TR;BlockIterator;0;0
logCurrentLocation;logCurrentLocation();1;TR;AllBlockIterator;0;0
operator++;operator++();1;TR;AllBlockIterator;0;0
operator=;operator=(class TR::BlockIterator &&);1;TR;BlockIterator;1;0
operator=;operator=(const class TR::BlockIterator &);0;TR;BlockIterator;1;0
stepForward;stepForward();1;TR;AllBlockIterator;0;0
~BlockIterator;~BlockIterator();1;TR;BlockIterator;1;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;CFG;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;CFG;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *);1;OMR;Node;0;0
createWithSymRef;createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *);1;OMR;Node;0;0
operator=;operator=(const class TR::NodeChecklist &);0;TR;NodeChecklist;1;0
NodeIterator;NodeIterator(const class TR::NodeIterator &);1;TR;NodeIterator;1;0
NodeIterator;NodeIterator(class TR::NodeIterator &&);0;TR;NodeIterator;1;0
NodeIterator;NodeIterator(TR::TreeTop *,TR::Compilation *);0;TR;NodeIterator;0;0
NodeIterator;NodeIterator(TR::TreeTop *,TR::Compilation *,const char *);0;TR;NodeIterator;0;0
NodeOccurrenceIterator;NodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *);1;TR;NodeOccurrenceIterator;0;0
NodeOccurrenceIterator;NodeOccurrenceIterator(class TR::NodeOccurrenceIterator &&);0;TR;NodeOccurrenceIterator;1;0
NodeOccurrenceIterator;NodeOccurrenceIterator(const class TR::NodeOccurrenceIterator &);0;TR;NodeOccurrenceIterator;1;0
PostorderNodeOccurrenceIterator;PostorderNodeOccurrenceIterator(const class TR::PostorderNodeOccurrenceIterator &);1;TR;PostorderNodeOccurrenceIterator;1;0
PostorderNodeOccurrenceIterator;PostorderNodeOccurrenceIterator(class TR::PostorderNodeOccurrenceIterator &&);0;TR;PostorderNodeOccurrenceIterator;1;0
PostorderNodeOccurrenceIterator;PostorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *);0;TR;PostorderNodeOccurrenceIterator;0;0
TreeTopIteratorImpl;TreeTopIteratorImpl(class TR::TreeTopIteratorImpl &&);1;TR;TreeTopIteratorImpl;1;0
TreeTopIteratorImpl;TreeTopIteratorImpl(const class TR::TreeTopIteratorImpl &);0;TR;TreeTopIteratorImpl;1;0
TreeTopIteratorImpl;TreeTopIteratorImpl(TR::TreeTop *,TR::Compilation *,const char *);0;TR;TreeTopIteratorImpl;0;0
alreadyPushedChildren;alreadyPushedChildren(TR::Node *);1;TR;PostorderNodeOccurrenceIterator;0;0
comp;comp();1;TR;TreeTopIteratorImpl;0;0
currentNode;currentNode();1;TR;TreeTopIteratorImpl;0;0
currentTree;currentTree();1;TR;TreeTopIteratorImpl;0;0
isAt;isAt(class TR::PreorderNodeIterator &);1;TR;TreeTopIteratorImpl;0;0
isAt;isAt(class TR::TreeTopIteratorImpl &);0;TR;TreeTopIteratorImpl;0;0
isAt;isAt(TR::TreeTop *);0;TR;TreeTopIteratorImpl;0;0
isAt;isAt(class TR::TreeTopIterator &);0;TR;NodeIterator;0;0
jumpTo;jumpTo(TR::TreeTop *);1;TR;TreeTopIteratorImpl;0;0
logCurrentLocation;logCurrentLocation();1;TR;TreeTopIteratorImpl;0;0
operator!=;operator!=(TR::TreeTop *);1;TR;TreeTopIteratorImpl;0;0
operator++;operator++();1;TR;TreeTopIteratorImpl;0;0
operator--;operator--();1;TR;TreeTopIteratorImpl;0;0
operator=;operator=(class TR::TreeTopIteratorImpl &&);1;TR;TreeTopIteratorImpl;1;0
operator=;operator=(const class TR::TreeTopIteratorImpl &);0;TR;TreeTopIteratorImpl;1;0
operator=;operator=(class TR::NodeIterator &&);0;TR;NodeIterator;1;0
operator==;operator==(TR::TreeTop *);1;TR;TreeTopIteratorImpl;0;0
pushLeftmost;pushLeftmost(TR::Node *);1;TR;PostorderNodeOccurrenceIterator;0;0
stackDepth;stackDepth();1;TR;NodeIterator;0;0
stepBackward;stepBackward();1;TR;TreeTopIteratorImpl;0;0
stepForward;stepForward();1;TR;TreeTopIteratorImpl;0;0
~NodeIterator;~NodeIterator();1;TR;NodeIterator;1;0
~NodeOccurrenceIterator;~NodeOccurrenceIterator();1;TR;NodeOccurrenceIterator;1;0
~TreeTopIteratorImpl;~TreeTopIteratorImpl();1;TR;TreeTopIteratorImpl;1;0
OptimizationManager;OptimizationManager(TR::Optimizer *,OptimizationFactory,OMR::Optimizations,const struct OptimizationStrategy *);1;OMR;OptimizationManager;0;0
OptimizationManager;OptimizationManager(const class OMR::OptimizationManager &);0;OMR;OptimizationManager;1;0
OptimizationManager;OptimizationManager(class TR::OptimizationManager &&);0;TR;OptimizationManager;1;0
allocator;allocator();1;OMR;OptimizationManager;0;0
cg;cg();1;OMR;OptimizationManager;0;0
comp;comp();1;OMR;OptimizationManager;0;0
enabled;enabled();1;OMR;OptimizationManager;0;0
factory;factory();1;OMR;OptimizationManager;0;0
fe;fe();1;OMR;OptimizationManager;0;0
flags;flags();1;OMR;OptimizationManager;0;0
getAlteredCode;getAlteredCode();1;OMR;OptimizationManager;0;0
getCanAddSymbolReference;getCanAddSymbolReference();1;OMR;OptimizationManager;0;0
getCannotOmitTrivialDefs;getCannotOmitTrivialDefs();1;OMR;OptimizationManager;0;0
getCheckStructure;getCheckStructure();1;OMR;OptimizationManager;0;0
getCheckTheCFG;getCheckTheCFG();1;OMR;OptimizationManager;0;0
getDebug;getDebug();1;OMR;OptimizationManager;0;0
getDoNotSetFrequencies;getDoNotSetFrequencies();1;OMR;OptimizationManager;0;0
getDoesNotRequireAliasSets;getDoesNotRequireAliasSets();1;OMR;OptimizationManager;0;0
getDoesNotRequireLoadsAsDefsInUseDefs;getDoesNotRequireLoadsAsDefsInUseDefs();1;OMR;OptimizationManager;0;0
getDoesNotRequireTreeDumps;getDoesNotRequireTreeDumps();1;OMR;OptimizationManager;0;0
getDumpStructure;getDumpStructure();1;OMR;OptimizationManager;0;0
getLastRun;getLastRun();1;OMR;OptimizationManager;0;0
getMaintainsUseDefInfo;getMaintainsUseDefInfo();1;OMR;OptimizationManager;0;0
getOptData;getOptData();1;OMR;OptimizationManager;0;0
getOptPolicy;getOptPolicy();1;OMR;OptimizationManager;0;0
getOptUtil;getOptUtil();1;OMR;OptimizationManager;0;0
getPerformOnlyOnEnabledBlocks;getPerformOnlyOnEnabledBlocks();1;OMR;OptimizationManager;0;0
getPrefersGlobalsUseDefInfo;getPrefersGlobalsUseDefInfo();1;OMR;OptimizationManager;0;0
getPrefersGlobalsValueNumbering;getPrefersGlobalsValueNumbering();1;OMR;OptimizationManager;0;0
getRequestedBlocks;getRequestedBlocks();1;OMR;OptimizationManager;0;0
getRequiresAccurateNodeCount;getRequiresAccurateNodeCount();1;OMR;OptimizationManager;0;0
getRequiresGlobalsUseDefInfo;getRequiresGlobalsUseDefInfo();1;OMR;OptimizationManager;0;0
getRequiresGlobalsValueNumbering;getRequiresGlobalsValueNumbering();1;OMR;OptimizationManager;0;0
getRequiresLocalsUseDefInfo;getRequiresLocalsUseDefInfo();1;OMR;OptimizationManager;0;0
getRequiresLocalsValueNumbering;getRequiresLocalsValueNumbering();1;OMR;OptimizationManager;0;0
getRequiresStructure;getRequiresStructure();1;OMR;OptimizationManager;0;0
getRequiresUseDefInfo;getRequiresUseDefInfo();1;OMR;OptimizationManager;0;0
getRequiresValueNumbering;getRequiresValueNumbering();1;OMR;OptimizationManager;0;0
getStronglyPrefersGlobalsValueNumbering;getStronglyPrefersGlobalsValueNumbering();1;OMR;OptimizationManager;0;0
getSupportsIlGenOptLevel;getSupportsIlGenOptLevel();1;OMR;OptimizationManager;0;0
getSymRefTab;getSymRefTab();1;OMR;OptimizationManager;0;0
getVerifyBlocks;getVerifyBlocks();1;OMR;OptimizationManager;0;0
getVerifyTrees;getVerifyTrees();1;OMR;OptimizationManager;0;0
groupOfOpts;groupOfOpts();1;OMR;OptimizationManager;0;0
id;id();1;OMR;OptimizationManager;0;0
incNumPassesCompleted;incNumPassesCompleted();1;OMR;OptimizationManager;0;0
name;name();1;OMR;OptimizationManager;0;0
numPassesCompleted;numPassesCompleted();1;OMR;OptimizationManager;0;0
operator delete;operator delete(void *,size_t);1;OMR;OptimizationManager;0;0
operator new;operator new(size_t,TR::Allocator);1;OMR;OptimizationManager;0;0
operator=;operator=(const class OMR::OptimizationManager &);1;OMR;OptimizationManager;1;0
operator=;operator=(const class TR::OptimizationManager &);0;TR;OptimizationManager;1;0
operator=;operator=(class TR::OptimizationManager &&);0;TR;OptimizationManager;1;0
optimizer;optimizer();1;OMR;OptimizationManager;0;0
performChecks;performChecks();1;OMR;OptimizationManager;0;0
requested;requested(TR::Block *);1;OMR;OptimizationManager;0;0
self;self();1;OMR;OptimizationManager;0;0
setAlteredCode;setAlteredCode(_Bool);1;OMR;OptimizationManager;0;0
setCanAddSymbolReference;setCanAddSymbolReference(_Bool);1;OMR;OptimizationManager;0;0
setCannotOmitTrivialDefs;setCannotOmitTrivialDefs(_Bool);1;OMR;OptimizationManager;0;0
setCheckStructure;setCheckStructure(_Bool);1;OMR;OptimizationManager;0;0
setCheckTheCFG;setCheckTheCFG(_Bool);1;OMR;OptimizationManager;0;0
setDoNotSetFrequencies;setDoNotSetFrequencies(_Bool);1;OMR;OptimizationManager;0;0
setDoesNotRequireAliasSets;setDoesNotRequireAliasSets(_Bool);1;OMR;OptimizationManager;0;0
setDoesNotRequireLoadsAsDefsInUseDefs;setDoesNotRequireLoadsAsDefsInUseDefs(_Bool);1;OMR;OptimizationManager;0;0
setDumpStructure;setDumpStructure(_Bool);1;OMR;OptimizationManager;0;0
setEnabled;setEnabled(_Bool);1;OMR;OptimizationManager;0;0
setFlags;setFlags(flags32_t);1;OMR;OptimizationManager;0;0
setLastRun;setLastRun(_Bool);1;OMR;OptimizationManager;0;0
setMaintainsUseDefInfo;setMaintainsUseDefInfo(_Bool);1;OMR;OptimizationManager;0;0
setNumPassesCompleted;setNumPassesCompleted(int32_t);1;OMR;OptimizationManager;0;0
setOptData;setOptData(TR::OptimizationData *);1;OMR;OptimizationManager;0;0
setOptPolicy;setOptPolicy(TR::OptimizationPolicy *);1;OMR;OptimizationManager;0;0
setOptUtil;setOptUtil(TR::OptimizationUtil *);1;OMR;OptimizationManager;0;0
setPerformOnlyOnEnabledBlocks;setPerformOnlyOnEnabledBlocks(_Bool);1;OMR;OptimizationManager;0;0
setPrefersGlobalsUseDefInfo;setPrefersGlobalsUseDefInfo(_Bool);1;OMR;OptimizationManager;0;0
setPrefersGlobalsValueNumbering;setPrefersGlobalsValueNumbering(_Bool);1;OMR;OptimizationManager;0;0
setRequested;setRequested(_Bool,TR::Block *);1;OMR;OptimizationManager;0;0
setRequiresAccurateNodeCount;setRequiresAccurateNodeCount(_Bool);1;OMR;OptimizationManager;0;0
setRequiresGlobalsUseDefInfo;setRequiresGlobalsUseDefInfo(_Bool);1;OMR;OptimizationManager;0;0
setRequiresGlobalsValueNumbering;setRequiresGlobalsValueNumbering(_Bool);1;OMR;OptimizationManager;0;0
setRequiresLocalsUseDefInfo;setRequiresLocalsUseDefInfo(_Bool);1;OMR;OptimizationManager;0;0
setRequiresLocalsValueNumbering;setRequiresLocalsValueNumbering(_Bool);1;OMR;OptimizationManager;0;0
setRequiresStructure;setRequiresStructure(_Bool);1;OMR;OptimizationManager;0;0
setStronglyPrefersGlobalsValueNumbering;setStronglyPrefersGlobalsValueNumbering(_Bool);1;OMR;OptimizationManager;0;0
setSupportsIlGenOptLevel;setSupportsIlGenOptLevel(_Bool);1;OMR;OptimizationManager;0;0
setTrace;setTrace(_Bool);1;OMR;OptimizationManager;0;0
setVerifyBlocks;setVerifyBlocks(_Bool);1;OMR;OptimizationManager;0;0
setVerifyTrees;setVerifyTrees(_Bool);1;OMR;OptimizationManager;0;0
trHeapMemory;trHeapMemory();1;OMR;OptimizationManager;0;0
trMemory;trMemory();1;OMR;OptimizationManager;0;0
trPersistentMemory;trPersistentMemory();1;OMR;OptimizationManager;0;0
trStackMemory;trStackMemory();1;OMR;OptimizationManager;0;0
trace;trace();1;OMR;OptimizationManager;0;0
~OptimizationManager;~OptimizationManager();1;OMR;OptimizationManager;0;1
operator new;operator new(size_t,TR::Region &);1;OMR;Optimizer;0;0
PostorderNodeIterator;PostorderNodeIterator(class TR::PostorderNodeIterator &&);1;TR;PostorderNodeIterator;1;0
PostorderNodeIterator;PostorderNodeIterator(const class TR::PostorderNodeIterator &);0;TR;PostorderNodeIterator;1;0
PostorderNodeIterator;PostorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *);0;TR;PostorderNodeIterator;0;0
alreadyBeenPushed;alreadyBeenPushed(TR::Node *);1;TR;PostorderNodeIterator;0;0
descend;descend();1;TR;PostorderNodeIterator;0;0
push;push(TR::Node *);1;TR;PostorderNodeIterator;0;0
PreorderNodeIterator;PreorderNodeIterator(class TR::PreorderNodeIterator &&);1;TR;PreorderNodeIterator;1;0
PreorderNodeIterator;PreorderNodeIterator(const class TR::PreorderNodeIterator &);0;TR;PreorderNodeIterator;1;0
PreorderNodeIterator;PreorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *);0;TR;PreorderNodeIterator;0;0
alreadyBeenPushed;alreadyBeenPushed(TR::Node *);1;TR;PreorderNodeIterator;0;0
push;push(TR::Node *);1;TR;PreorderNodeIterator;0;0
PreorderNodeOccurrenceIterator;PreorderNodeOccurrenceIterator(const class TR::PreorderNodeOccurrenceIterator &);1;TR;PreorderNodeOccurrenceIterator;1;0
PreorderNodeOccurrenceIterator;PreorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *);0;TR;PreorderNodeOccurrenceIterator;0;0
PreorderNodeOccurrenceIterator;PreorderNodeOccurrenceIterator(class TR::PreorderNodeOccurrenceIterator &&);0;TR;PreorderNodeOccurrenceIterator;1;0
alreadyPushedChildren;alreadyPushedChildren(TR::Node *);1;TR;PreorderNodeOccurrenceIterator;0;0
push;push(TR::Node *);1;TR;PreorderNodeOccurrenceIterator;0;0
ReversePostorderSnapshotBlockIterator;ReversePostorderSnapshotBlockIterator(class TR::ReversePostorderSnapshotBlockIterator &&);1;TR;ReversePostorderSnapshotBlockIterator;1;0
ReversePostorderSnapshotBlockIterator;ReversePostorderSnapshotBlockIterator(const class TR::ReversePostorderSnapshotBlockIterator &);0;TR;ReversePostorderSnapshotBlockIterator;1;0
ReversePostorderSnapshotBlockIterator;ReversePostorderSnapshotBlockIterator(TR::CFG *,TR::Compilation *,const char *);0;TR;ReversePostorderSnapshotBlockIterator;0;0
ReversePostorderSnapshotBlockIterator;ReversePostorderSnapshotBlockIterator(TR::Block *,TR::Compilation *,const char *);0;TR;ReversePostorderSnapshotBlockIterator;0;0
currentBlock;currentBlock();1;TR;ReversePostorderSnapshotBlockIterator;0;0
isAt;isAt(TR::Block *);1;TR;ReversePostorderSnapshotBlockIterator;0;0
isStepOperationFinished;isStepOperationFinished();1;TR;ReversePostorderSnapshotBlockIterator;0;0
logCurrentLocation;logCurrentLocation();1;TR;ReversePostorderSnapshotBlockIterator;0;0
operator++;operator++();1;TR;ReversePostorderSnapshotBlockIterator;0;0
operator--;operator--();1;TR;ReversePostorderSnapshotBlockIterator;0;0
operator=;operator=(class TR::ReversePostorderSnapshotBlockIterator &&);0;TR;ReversePostorderSnapshotBlockIterator;1;0
stepBackward;stepBackward();1;TR;ReversePostorderSnapshotBlockIterator;0;0
stepForward;stepForward();1;TR;ReversePostorderSnapshotBlockIterator;0;0
takeSnapshot;takeSnapshot(TR::Block *);1;TR;ReversePostorderSnapshotBlockIterator;0;0
visit;visit(TR::Block *,TR::BlockChecklist &);1;TR;ReversePostorderSnapshotBlockIterator;0;0
operator delete;operator delete(void *,size_t);1;OMR;SymbolReference;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReference;0;0
element;element(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);1;OMR;SymbolReferenceTable;0;0
element;element(enum TR_RuntimeHelper);0;OMR;SymbolReferenceTable;0;0
isNonHelper;isNonHelper(TR::SymbolReference *,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);1;OMR;SymbolReferenceTable;0;0
isNonHelper;isNonHelper(int32_t,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);0;OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,size_t);1;OMR;SymbolReferenceTable;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;SymbolReferenceTable;0;0
TreeTopIterator;TreeTopIterator(TR::TreeTop *,TR::Compilation *,const char *);1;TR;TreeTopIterator;0;0
TreeTopOrderExtendedBlockIterator;TreeTopOrderExtendedBlockIterator(class TR::TreeTopOrderExtendedBlockIterator &&);1;TR;TreeTopOrderExtendedBlockIterator;1;0
TreeTopOrderExtendedBlockIterator;TreeTopOrderExtendedBlockIterator(const class TR::TreeTopOrderExtendedBlockIterator &);0;TR;TreeTopOrderExtendedBlockIterator;1;0
TreeTopOrderExtendedBlockIterator;TreeTopOrderExtendedBlockIterator(TR::Compilation *,const char *);0;TR;TreeTopOrderExtendedBlockIterator;0;0
getFirst;getFirst();1;TR;TreeTopOrderExtendedBlockIterator;0;0
getLast;getLast();1;TR;TreeTopOrderExtendedBlockIterator;0;0
logCurrentLocation;logCurrentLocation();1;TR;TreeTopOrderExtendedBlockIterator;0;0
operator++;operator++();1;TR;TreeTopOrderExtendedBlockIterator;0;0
~TR_CFGIterator;~TR_CFGIterator();1;TR;CFGIterator;1;0
TR_SuccessorIterator;TR_SuccessorIterator(class TR_SuccessorIterator &&);1;TR;SuccessorIterator;1;0
TR_SuccessorIterator;TR_SuccessorIterator(const class TR_SuccessorIterator &);0;TR;SuccessorIterator;1;0
TR_SuccessorIterator;TR_SuccessorIterator(TR::CFGNode *);0;TR;SuccessorIterator;0;0
TR_IGBase;TR_IGBase(const class TR_IGBase &);1;TR;IGBase;1;0
TR_IGBase;TR_IGBase();0;TR;IGBase;0;0
TR_IGBase;TR_IGBase(class TR_IGBase &&);0;TR;IGBase;1;0
TR_InterferenceGraph;TR_InterferenceGraph(class TR_InterferenceGraph &&);1;TR;InterferenceGraph;1;0
TR_InterferenceGraph;TR_InterferenceGraph(const class TR_InterferenceGraph &);0;TR;InterferenceGraph;1;0
TR_InterferenceGraph;TR_InterferenceGraph(TR::Compilation *);0;TR;InterferenceGraph;0;0
TR_InterferenceGraph;TR_InterferenceGraph(TR::Compilation *,int32_t);0;TR;InterferenceGraph;0;0
add;add(void *,_Bool);1;TR;InterferenceGraph;0;0
addIGNodeToEntityHash;addIGNodeToEntityHash(class TR_IGNode *);1;TR;InterferenceGraph;0;0
addInterferenceBetween;addInterferenceBetween(void *,void *);1;TR;InterferenceGraph;0;0
addInterferenceBetween;addInterferenceBetween(class TR_IGNode *,class TR_IGNode *);0;TR;InterferenceGraph;0;0
comp;comp();1;TR;InterferenceGraph;0;0
doColouring;doColouring(IGNodeColour);1;TR;InterferenceGraph;0;0
dumpIG;dumpIG(char *);1;TR;InterferenceGraph;0;0
entityHashBucket;entityHashBucket(void *);1;TR;InterferenceGraph;0;0
findMaxDegree;findMaxDegree();1;TR;InterferenceGraph;0;0
findMinimumChromaticNumber;findMinimumChromaticNumber();1;TR;InterferenceGraph;0;0
getIGNodeForEntity;getIGNodeForEntity(void *);1;TR;InterferenceGraph;0;0
getInterferenceMatrix;getInterferenceMatrix();1;TR;IGBase;0;0
getNodePairToBVIndex;getNodePairToBVIndex(IGNodeIndex,IGNodeIndex);1;TR;IGBase;0;0
getNodeStack;getNodeStack();1;TR;InterferenceGraph;0;0
getNodeTable;getNodeTable(IGNodeIndex);1;TR;InterferenceGraph;0;0
getNumColours;getNumColours();1;TR;IGBase;0;0
getNumNodes;getNumNodes();1;TR;IGBase;0;0
getNumberOfColoursUsedToColour;getNumberOfColoursUsedToColour();1;TR;IGBase;0;0
getOrderedNodePairToBVIndex;getOrderedNodePairToBVIndex(IGNodeIndex,IGNodeIndex);1;TR;IGBase;0;0
hasInterference;hasInterference(class TR_IGNode *,class TR_IGNode *);1;TR;InterferenceGraph;0;0
hasInterference;hasInterference(void *,void *);0;TR;InterferenceGraph;0;0
incNumNodes;incNumNodes();1;TR;IGBase;0;0
isEmpty;isEmpty();1;TR;IGBase;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;IGBase;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;IGBase;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;IGBase;0;0
operator delete;operator delete(void *,size_t);0;TR;IGBase;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;IGBase;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;IGBase;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;IGBase;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;IGBase;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;IGBase;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;IGBase;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;IGBase;0;0
operator new;operator new(size_t,TR::Region &);1;TR;IGBase;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;IGBase;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;IGBase;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;IGBase;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;IGBase;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;IGBase;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;IGBase;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;IGBase;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;IGBase;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;IGBase;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;IGBase;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;IGBase;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;IGBase;0;0
operator=;operator=(const class TR_IGBase &);1;TR;IGBase;1;0
operator=;operator=(class TR_IGBase &&);0;TR;IGBase;1;0
operator=;operator=(class TR_InterferenceGraph &&);0;TR;InterferenceGraph;1;0
operator=;operator=(const class TR_InterferenceGraph &);0;TR;InterferenceGraph;1;0
partitionNodesIntoDegreeSets;partitionNodesIntoDegreeSets(CS2::ABitVector<TR::Allocator> &,CS2::ABitVector<TR::Allocator> &,CS2::ABitVector<TR::Allocator> &);1;TR;InterferenceGraph;0;0
removeAllInterferences;removeAllInterferences(void *);1;TR;InterferenceGraph;0;0
removeInterferenceBetween;removeInterferenceBetween(class TR_IGNode *,class TR_IGNode *);1;TR;InterferenceGraph;0;0
removeInterferenceBetween;removeInterferenceBetween(void *,void *);0;TR;InterferenceGraph;0;0
select;select();1;TR;InterferenceGraph;0;1
setInterferenceMatrix;setInterferenceMatrix(class TR_BitVector *);1;TR;IGBase;0;0
setNodeStack;setNodeStack(TR_Stack<class TR_IGNode *> *);1;TR;InterferenceGraph;0;0
setNumColours;setNumColours(IGNodeColour);1;TR;IGBase;0;0
setNumNodes;setNumNodes(IGNodeIndex);1;TR;IGBase;0;0
setNumberOfColoursUsedToColour;setNumberOfColoursUsedToColour(IGNodeColour);1;TR;IGBase;0;0
simplify;simplify();1;TR;InterferenceGraph;0;1
trHeapMemory;trHeapMemory();1;TR;InterferenceGraph;0;0
trMemory;trMemory();1;TR;InterferenceGraph;0;0
trStackMemory;trStackMemory();1;TR;InterferenceGraph;0;0
virtualRemoveEntityFromIG;virtualRemoveEntityFromIG(void *);1;TR;InterferenceGraph;0;0
virtualRemoveNodeFromIG;virtualRemoveNodeFromIG(class TR_IGNode *);1;TR;InterferenceGraph;0;0
~TR_IGBase;~TR_IGBase();1;TR;IGBase;1;0
~TR_InterferenceGraph;~TR_InterferenceGraph();1;TR;InterferenceGraph;1;0
DebugEnv;DebugEnv(const class OMR::DebugEnv &);1;OMR;DebugEnv;1;0
DebugEnv;DebugEnv();0;OMR;DebugEnv;0;0
ArithEnv;ArithEnv();1;OMR;ArithEnv;1;0
ArithEnv;ArithEnv(const class OMR::ArithEnv &);0;OMR;ArithEnv;1;0
classOfObject;classOfObject(struct OMR_VMThread *,uintptrj_t);1;OMR;ClassEnv;0;0
classOfObject;classOfObject(TR::Compilation *,uintptrj_t);0;OMR;ClassEnv;0;0
isStringClass;isStringClass(uintptrj_t);1;OMR;ClassEnv;0;0
isStringClass;isStringClass(class TR_OpaqueClassBlock *);0;OMR;ClassEnv;0;0
Monitor;Monitor(const class TR::Monitor &);0;TR;Monitor;1;0
MonitorTable;MonitorTable(class OMR::MonitorTable &&);1;OMR;MonitorTable;1;0
MonitorTable;MonitorTable();0;OMR;MonitorTable;1;0
MonitorTable;MonitorTable(const class OMR::MonitorTable &);0;OMR;MonitorTable;1;0
create;create(char *);1;OMR;MonitorTable;0;0
free;free();1;OMR;MonitorTable;0;0
get;get();1;OMR;MonitorTable;0;0
getMemoryAllocMonitor;getMemoryAllocMonitor();1;OMR;MonitorTable;0;0
getScratchMemoryPoolMonitor;getScratchMemoryPoolMonitor();1;OMR;MonitorTable;0;0
removeAndDestroy;removeAndDestroy(TR::Monitor *);1;OMR;MonitorTable;0;0
self;self();1;OMR;MonitorTable;0;0
acquireVMAccessIfNeeded;acquireVMAccessIfNeeded(TR::Compilation *);1;OMR;VMEnv;0;0
acquireVMAccessIfNeeded;acquireVMAccessIfNeeded(struct OMR_VMThread *);0;OMR;VMEnv;0;0
operator=;operator=(class OMR::VMEnv &&);1;OMR;VMEnv;1;0
operator=;operator=(const class OMR::VMEnv &);0;OMR;VMEnv;1;0
RandomExercizer;RandomExercizer(class RandomExercizer &&);1;;RandomExercizer;1;0
RandomExercizer;RandomExercizer(const class RandomExercizer &);0;;RandomExercizer;1;0
RandomExercizer;RandomExercizer(TR::Compilation *);0;;RandomExercizer;0;0
TR_HasRandomGenerator;TR_HasRandomGenerator(class TR_HasRandomGenerator &&);1;TR;HasRandomGenerator;1;0
TR_HasRandomGenerator;TR_HasRandomGenerator(const class TR_HasRandomGenerator &);0;TR;HasRandomGenerator;1;0
comp;comp();1;;RandomExercizer;0;0
TR_HashTabInt;TR_HashTabInt(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);1;TR;HashTabInt;0;0
create;create(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *);1;OMR;Node;0;0
iconst;iconst(TR::Node *,int32_t);1;OMR;Node;0;0
iconst;iconst(int32_t);0;OMR;Node;0;0
operator new;operator new(size_t,void *);1;OMR;Node;0;0
operator new;operator new(size_t,TR::NodePool &);0;OMR;Node;0;0
TR_AnythingPattern;TR_AnythingPattern(class TR_AnythingPattern &&);1;TR;AnythingPattern;1;0
TR_AnythingPattern;TR_AnythingPattern(const class TR_AnythingPattern &);0;TR;AnythingPattern;1;0
TR_AnythingPattern;TR_AnythingPattern(class TR_Pattern *);0;TR;AnythingPattern;0;0
TR_Pattern;TR_Pattern(class TR_Pattern &&);1;TR;Pattern;1;0
TR_Pattern;TR_Pattern(const class TR_Pattern &);0;TR;Pattern;1;0
TR_Pattern;TR_Pattern(class TR_Pattern *);0;TR;Pattern;0;0
getName;getName();1;TR;Pattern;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;Pattern;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;Pattern;0;0
matches;matches(TR::Node *,class TR_Unification &,TR::Compilation *);1;TR;Pattern;0;0
matches;matches(TR::Node *,TR::Node **,TR::Compilation *);0;TR;Pattern;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;Pattern;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Pattern;0;0
operator delete;operator delete(void *,size_t);0;TR;Pattern;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Pattern;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Pattern;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;Pattern;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Pattern;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Pattern;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Pattern;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;TR;Pattern;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Pattern;0;0
operator new;operator new(size_t,TR::Region &);0;TR;Pattern;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Pattern;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;Pattern;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;Pattern;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Pattern;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;TR;Pattern;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;Pattern;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;Pattern;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Pattern;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Pattern;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Pattern;0;0
operator=;operator=(const class TR_Pattern &);1;TR;Pattern;1;0
operator=;operator=(class TR_Pattern &&);0;TR;Pattern;1;0
operator=;operator=(class TR_AnythingPattern &&);0;TR;AnythingPattern;1;0
operator=;operator=(const class TR_AnythingPattern &);0;TR;AnythingPattern;1;0
thisMatches;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);1;TR;Pattern;0;1
tracePattern;tracePattern(TR::Node *);1;TR;Pattern;0;1
~TR_AnythingPattern;~TR_AnythingPattern();1;TR;AnythingPattern;1;0
~TR_Pattern;~TR_Pattern();1;TR;Pattern;1;0
TR_ChildPattern;TR_ChildPattern(const class TR_ChildPattern &);1;TR;ChildPattern;1;0
TR_ChildPattern;TR_ChildPattern(class TR_ChildPattern &&);0;TR;ChildPattern;1;0
TR_ChildPattern;TR_ChildPattern(int32_t,class TR_Pattern *,class TR_Pattern *);0;TR;ChildPattern;0;0
operator=;operator=(class TR_ChildPattern &&);0;TR;ChildPattern;1;0
operator=;operator=(const class TR_ChildPattern &);0;TR;ChildPattern;1;0
~TR_ChildPattern;~TR_ChildPattern();1;TR;ChildPattern;1;0
TR_ChildrenPattern;TR_ChildrenPattern(class TR_ChildrenPattern &&);1;TR;ChildrenPattern;1;0
TR_ChildrenPattern;TR_ChildrenPattern(const class TR_ChildrenPattern &);0;TR;ChildrenPattern;1;0
TR_ChildrenPattern;TR_ChildrenPattern(class TR_Pattern *,class TR_Pattern *,class TR_Pattern *);0;TR;ChildrenPattern;0;0
TR_CommutativePattern;TR_CommutativePattern(const class TR_CommutativePattern &);1;TR;CommutativePattern;1;0
TR_CommutativePattern;TR_CommutativePattern(class TR_CommutativePattern &&);0;TR;CommutativePattern;1;0
TR_CommutativePattern;TR_CommutativePattern(class TR_Pattern *,class TR_Pattern *,class TR_Pattern *);0;TR;CommutativePattern;0;0
operator=;operator=(class TR_ChildrenPattern &&);0;TR;ChildrenPattern;1;0
operator=;operator=(const class TR_ChildrenPattern &);0;TR;ChildrenPattern;1;0
operator=;operator=(class TR_CommutativePattern &&);0;TR;CommutativePattern;1;0
operator=;operator=(const class TR_CommutativePattern &);0;TR;CommutativePattern;1;0
~TR_ChildrenPattern;~TR_ChildrenPattern();1;TR;ChildrenPattern;1;0
~TR_CommutativePattern;~TR_CommutativePattern();1;TR;CommutativePattern;1;0
TR_ChoicePattern;TR_ChoicePattern(const class TR_ChoicePattern &);1;TR;ChoicePattern;1;0
TR_ChoicePattern;TR_ChoicePattern(class TR_ChoicePattern &&);0;TR;ChoicePattern;1;0
TR_ChoicePattern;TR_ChoicePattern(class TR_Pattern *,class TR_Pattern *,class TR_Pattern *);0;TR;ChoicePattern;0;0
operator=;operator=(class TR_ChoicePattern &&);0;TR;ChoicePattern;1;0
operator=;operator=(const class TR_ChoicePattern &);0;TR;ChoicePattern;1;0
~TR_ChoicePattern;~TR_ChoicePattern();1;TR;ChoicePattern;1;0
TR_IConstPattern;TR_IConstPattern(class TR_IConstPattern &&);1;TR;IConstPattern;1;0
TR_IConstPattern;TR_IConstPattern(const class TR_IConstPattern &);0;TR;IConstPattern;1;0
TR_IConstPattern;TR_IConstPattern(int32_t,class TR_Pattern *);0;TR;IConstPattern;0;0
TR_OpCodePattern;TR_OpCodePattern(class TR_OpCodePattern &&);1;TR;OpCodePattern;1;0
TR_OpCodePattern;TR_OpCodePattern(const class TR_OpCodePattern &);0;TR;OpCodePattern;1;0
TR_OpCodePattern;TR_OpCodePattern(TR::ILOpCodes,class TR_Pattern *);0;TR;OpCodePattern;0;0
operator=;operator=(class TR_OpCodePattern &&);0;TR;OpCodePattern;1;0
operator=;operator=(const class TR_OpCodePattern &);0;TR;OpCodePattern;1;0
operator=;operator=(class TR_IConstPattern &&);0;TR;IConstPattern;1;0
operator=;operator=(const class TR_IConstPattern &);0;TR;IConstPattern;1;0
~TR_IConstPattern;~TR_IConstPattern();1;TR;IConstPattern;1;0
~TR_OpCodePattern;~TR_OpCodePattern();1;TR;OpCodePattern;1;0
TR_LConstPattern;TR_LConstPattern(const class TR_LConstPattern &);1;TR;LConstPattern;1;0
TR_LConstPattern;TR_LConstPattern(int64_t,class TR_Pattern *);0;TR;LConstPattern;0;0
TR_LConstPattern;TR_LConstPattern(class TR_LConstPattern &&);0;TR;LConstPattern;1;0
operator=;operator=(class TR_LConstPattern &&);0;TR;LConstPattern;1;0
operator=;operator=(const class TR_LConstPattern &);0;TR;LConstPattern;1;0
~TR_LConstPattern;~TR_LConstPattern();1;TR;LConstPattern;1;0
TR_NoRegisterPattern;TR_NoRegisterPattern(const class TR_NoRegisterPattern &);1;TR;NoRegisterPattern;1;0
TR_NoRegisterPattern;TR_NoRegisterPattern(class TR_NoRegisterPattern &&);0;TR;NoRegisterPattern;1;0
TR_NoRegisterPattern;TR_NoRegisterPattern(class TR_Pattern *);0;TR;NoRegisterPattern;0;0
operator=;operator=(class TR_NoRegisterPattern &&);0;TR;NoRegisterPattern;1;0
operator=;operator=(const class TR_NoRegisterPattern &);0;TR;NoRegisterPattern;1;0
~TR_NoRegisterPattern;~TR_NoRegisterPattern();1;TR;NoRegisterPattern;1;0
TR_UnifyPattern;TR_UnifyPattern(const class TR_UnifyPattern &);1;TR;UnifyPattern;1;0
TR_UnifyPattern;TR_UnifyPattern(class TR_UnifyPattern &&);0;TR;UnifyPattern;1;0
TR_UnifyPattern;TR_UnifyPattern(class TR_Unification::TR_Index,class TR_Pattern *);0;TR;UnifyPattern;0;0
operator=;operator=(class TR_UnifyPattern &&);0;TR;UnifyPattern;1;0
operator=;operator=(const class TR_UnifyPattern &);0;TR;UnifyPattern;1;0
~TR_UnifyPattern;~TR_UnifyPattern();1;TR;UnifyPattern;1;0
addPredecessor;addPredecessor(class TR::CFGEdge *,enum TR_AllocationKind);1;TR;CFGNode;0;0
addPredecessor;addPredecessor(class TR::CFGEdge *);0;TR;CFGNode;0;0
addSuccessor;addSuccessor(class TR::CFGEdge *,enum TR_AllocationKind);1;TR;CFGNode;0;0
addSuccessor;addSuccessor(class TR::CFGEdge *);0;TR;CFGNode;0;0
collectReferencedAutoSymRefsIn;collectReferencedAutoSymRefsIn(TR::Compilation *,class TR_BitVector *,vcount_t);1;OMR;Block;0;0
collectReferencedAutoSymRefsIn;collectReferencedAutoSymRefsIn(TR::Compilation *,TR::Node *,class TR_BitVector *,vcount_t);0;OMR;Block;0;0
createEmptyBlock;createEmptyBlock(TR::Node *,TR::Compilation *,int32_t,TR::Block *);1;OMR;Block;0;0
createEmptyBlock;createEmptyBlock(TR::Compilation *,int32_t,TR::Block *);0;OMR;Block;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;CFGNode;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;CFGNode;0;0
LabelSymbol;LabelSymbol(class OMR::LabelSymbol &&);1;OMR;LabelSymbol;1;0
LabelSymbol;LabelSymbol();0;OMR;LabelSymbol;0;0
AliasBuilder;AliasBuilder(class OMR::AliasBuilder &&);1;OMR;AliasBuilder;1;0
AliasBuilder;AliasBuilder(const class OMR::AliasBuilder &);0;OMR;AliasBuilder;1;0
operator=;operator=(const class OMR::AliasBuilder &);1;OMR;AliasBuilder;1;0
operator=;operator=(class OMR::AliasBuilder &&);0;OMR;AliasBuilder;1;0
CFGEdge;CFGEdge(class TR::CFGEdge &&);1;TR;CFGEdge;1;0
CFGEdge;CFGEdge(const class TR::CFGEdge &);0;TR;CFGEdge;1;0
isDiscontiguousArray;isDiscontiguousArray(TR::Compilation *,uintptrj_t);1;OMR;ObjectModel;0;0
operator=;operator=(const class OMR::ObjectModel &);1;OMR;ObjectModel;1;0
operator=;operator=(class OMR::ObjectModel &&);0;OMR;ObjectModel;1;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Optimizer;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;Optimizer;0;0
createKnownStaticDataSymbolRef;createKnownStaticDataSymbolRef(void *,TR::DataType);1;OMR;SymbolReferenceTable;0;0
createKnownStaticDataSymbolRef;createKnownStaticDataSymbolRef(void *,TR::DataType,TR::class KnownObjectTable::Index);0;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;SymbolReferenceTable;0;0
VPArrayInfo;VPArrayInfo(int32_t,int32_t,int32_t);1;TR;VPArrayInfo;0;0
VPConstraint;VPConstraint(class TR::VPConstraint &&);1;TR;VPConstraint;1;0
VPConstraint;VPConstraint(const class TR::VPConstraint &);0;TR;VPConstraint;1;0
VPConstraint;VPConstraint(int32_t);0;TR;VPConstraint;0;0
add;add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);1;TR;VPConstraint;0;1
asArrayInfo;asArrayInfo();1;TR;VPConstraint;0;1
asBCDSign;asBCDSign();1;TR;VPConstraint;0;1
asBCDValue;asBCDValue();1;TR;VPConstraint;0;1
asClass;asClass();1;TR;VPConstraint;0;1
asClassPresence;asClassPresence();1;TR;VPConstraint;0;1
asClassType;asClassType();1;TR;VPConstraint;0;1
asConstString;asConstString();1;TR;VPConstraint;0;1
asEqual;asEqual();1;TR;VPConstraint;0;1
asFixedClass;asFixedClass();1;TR;VPConstraint;0;1
asGreaterThanOrEqual;asGreaterThanOrEqual();1;TR;VPConstraint;0;1
asIntConst;asIntConst();1;TR;VPConstraint;0;1
asIntConstraint;asIntConstraint();1;TR;VPConstraint;0;1
asIntRange;asIntRange();1;TR;VPConstraint;0;1
asKnownObject;asKnownObject();1;TR;VPConstraint;0;1
asLessThanOrEqual;asLessThanOrEqual();1;TR;VPConstraint;0;1
asLongConst;asLongConst();1;TR;VPConstraint;0;1
asLongConstraint;asLongConstraint();1;TR;VPConstraint;0;1
asLongRange;asLongRange();1;TR;VPConstraint;0;1
asMergedConstraints;asMergedConstraints();1;TR;VPConstraint;0;1
asMergedIntConstraints;asMergedIntConstraints();1;TR;VPConstraint;0;1
asMergedLongConstraints;asMergedLongConstraints();1;TR;VPConstraint;0;1
asMergedShortConstraints;asMergedShortConstraints();1;TR;VPConstraint;0;1
asNonNullObject;asNonNullObject();1;TR;VPConstraint;0;1
asNotEqual;asNotEqual();1;TR;VPConstraint;0;1
asNullObject;asNullObject();1;TR;VPConstraint;0;1
asObjectLocation;asObjectLocation();1;TR;VPConstraint;0;1
asPreexistentObject;asPreexistentObject();1;TR;VPConstraint;0;1
asRelation;asRelation();1;TR;VPConstraint;0;1
asResolvedClass;asResolvedClass();1;TR;VPConstraint;0;1
asShortConst;asShortConst();1;TR;VPConstraint;0;1
asShortConstraint;asShortConstraint();1;TR;VPConstraint;0;1
asShortRange;asShortRange();1;TR;VPConstraint;0;1
asUnreachablePath;asUnreachablePath();1;TR;VPConstraint;0;1
asUnresolvedClass;asUnresolvedClass();1;TR;VPConstraint;0;1
asVPSync;asVPSync();1;TR;VPConstraint;0;1
canOverflow;canOverflow();1;TR;VPConstraint;0;1
create;create(OMR::ValuePropagation *,const char *,int32_t,class TR_ResolvedMethod *,_Bool);1;TR;VPConstraint;0;0
create;create(OMR::ValuePropagation *,char *);0;TR;VPArrayInfo;0;0
create;create(OMR::ValuePropagation *,int32_t,int32_t,int32_t);0;TR;VPArrayInfo;0;0
elementSize;elementSize();1;TR;VPArrayInfo;0;0
getArrayInfo;getArrayInfo();1;TR;VPConstraint;0;1
getClass;getClass();1;TR;VPConstraint;0;0
getClassPresence;getClassPresence();1;TR;VPConstraint;0;1
getClassSignature;getClassSignature(int32_t &);1;TR;VPConstraint;0;1
getClassType;getClassType();1;TR;VPConstraint;0;1
getConstString;getConstString();1;TR;VPConstraint;0;1
getHighInt;getHighInt();1;TR;VPConstraint;0;1
getHighLong;getHighLong();1;TR;VPConstraint;0;1
getHighShort;getHighShort();1;TR;VPConstraint;0;1
getKnownObject;getKnownObject();1;TR;VPConstraint;0;1
getLowInt;getLowInt();1;TR;VPConstraint;0;1
getLowLong;getLowLong();1;TR;VPConstraint;0;1
getLowShort;getLowShort();1;TR;VPConstraint;0;1
getObjectLocation;getObjectLocation();1;TR;VPConstraint;0;1
getPrecision;getPrecision();1;TR;VPConstraint;0;1
getPreexistence;getPreexistence();1;TR;VPConstraint;0;1
getUnsignedHighInt;getUnsignedHighInt();1;TR;VPConstraint;0;1
getUnsignedHighLong;getUnsignedHighLong();1;TR;VPConstraint;0;1
getUnsignedHighShort;getUnsignedHighShort();1;TR;VPConstraint;0;1
getUnsignedLowInt;getUnsignedLowInt();1;TR;VPConstraint;0;1
getUnsignedLowLong;getUnsignedLowLong();1;TR;VPConstraint;0;1
getUnsignedLowShort;getUnsignedLowShort();1;TR;VPConstraint;0;1
hasArtificialIncrement;hasArtificialIncrement();1;TR;VPConstraint;0;0
highBound;highBound();1;TR;VPArrayInfo;0;0
intersect;intersect(TR::VPConstraint *,OMR::ValuePropagation *);1;TR;VPConstraint;0;0
intersect1;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);1;TR;VPConstraint;0;1
isClassObject;isClassObject();1;TR;VPConstraint;0;0
isConstString;isConstString();1;TR;VPConstraint;0;0
isFixedClass;isFixedClass();1;TR;VPConstraint;0;1
isHeapObject;isHeapObject();1;TR;VPConstraint;0;1
isJ9ClassObject;isJ9ClassObject();1;TR;VPConstraint;0;1
isJavaLangClassObject;isJavaLangClassObject();1;TR;VPConstraint;0;1
isNonNullObject;isNonNullObject();1;TR;VPConstraint;0;1
isNullObject;isNullObject();1;TR;VPConstraint;0;1
isPreexistentObject;isPreexistentObject();1;TR;VPConstraint;0;1
isSpecialClass;isSpecialClass(uintptrj_t);1;TR;VPConstraint;0;0
isStackObject;isStackObject();1;TR;VPConstraint;0;1
isUnsigned;isUnsigned();1;TR;VPConstraint;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;VPConstraint;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;VPConstraint;0;0
lowBound;lowBound();1;TR;VPArrayInfo;0;0
merge;merge(TR::VPConstraint *,OMR::ValuePropagation *);1;TR;VPConstraint;0;0
merge1;merge1(TR::VPConstraint *,OMR::ValuePropagation *);1;TR;VPConstraint;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);1;TR;VPConstraint;0;1
mustBeEqual;mustBeEqual();0;TR;VPConstraint;0;1
mustBeGreaterThan;mustBeGreaterThan();1;TR;VPConstraint;0;1
mustBeGreaterThanOrEqual;mustBeGreaterThanOrEqual();1;TR;VPConstraint;0;1
mustBeLessThan;mustBeLessThan();1;TR;VPConstraint;0;1
mustBeLessThan;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);0;TR;VPConstraint;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual();1;TR;VPConstraint;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);0;TR;VPConstraint;0;1
mustBeNotEqual;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);1;TR;VPConstraint;0;1
mustBeNotEqual;mustBeNotEqual();0;TR;VPConstraint;0;1
name;name();1;TR;VPConstraint;0;0
operator delete;operator delete(void *,size_t);1;TR;VPConstraint;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;VPConstraint;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;VPConstraint;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;VPConstraint;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;VPConstraint;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;VPConstraint;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;VPConstraint;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;VPConstraint;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;VPConstraint;0;0
operator new;operator new(size_t,TR::Region &);0;TR;VPConstraint;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;VPConstraint;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;VPConstraint;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;VPConstraint;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;VPConstraint;0;0
operator=;operator=(class TR::VPConstraint &&);1;TR;VPConstraint;1;0
operator=;operator=(const class TR::VPConstraint &);0;TR;VPConstraint;1;0
operator=;operator=(class TR::VPArrayInfo &&);0;TR;VPArrayInfo;1;0
operator=;operator=(const class TR::VPArrayInfo &);0;TR;VPArrayInfo;1;0
print;print(TR::Compilation *,TR::FILE *,int32_t);1;TR;VPConstraint;0;1
print;print(OMR::ValuePropagation *);0;TR;VPConstraint;0;0
print;print(TR::Compilation *,TR::FILE *);0;TR;VPConstraint;0;0
priority;priority();1;TR;VPConstraint;0;0
setCanOverflow;setCanOverflow(enum TR_YesNoMaybe);1;TR;VPConstraint;0;1
setHasArtificialIncrement;setHasArtificialIncrement();1;TR;VPConstraint;0;0
setIsUnsigned;setIsUnsigned(_Bool);1;TR;VPConstraint;0;0
subtract;subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);1;TR;VPConstraint;0;1
~VPArrayInfo;~VPArrayInfo();1;TR;VPArrayInfo;1;0
~VPConstraint;~VPConstraint();1;TR;VPConstraint;1;0
VPClass;VPClass(TR::VPClassType *,TR::VPClassPresence *,TR::VPPreexistentObject *,TR::VPArrayInfo *,TR::VPObjectLocation *);1;TR;VPClass;0;0
create;create(OMR::ValuePropagation *,TR::VPClassType *,TR::VPClassPresence *,TR::VPPreexistentObject *,TR::VPArrayInfo *,TR::VPObjectLocation *);0;TR;VPClass;0;0
operator=;operator=(const class TR::VPClass &);0;TR;VPClass;1;0
operator=;operator=(class TR::VPClass &&);0;TR;VPClass;1;0
typeIntersect;typeIntersect(TR::VPClassPresence *&,TR::VPClassType *&,TR::VPConstraint *,OMR::ValuePropagation *);1;TR;VPClass;0;0
~VPClass;~VPClass();1;TR;VPClass;1;0
VPClassPresence;VPClassPresence();1;TR;VPClassPresence;0;0
create;create(OMR::ValuePropagation *);0;TR;VPNonNullObject;0;0
operator=;operator=(class TR::VPClassPresence &&);0;TR;VPClassPresence;1;0
operator=;operator=(const class TR::VPClassPresence &);0;TR;VPClassPresence;1;0
operator=;operator=(const class TR::VPNonNullObject &);0;TR;VPNonNullObject;1;0
operator=;operator=(class TR::VPNonNullObject &&);0;TR;VPNonNullObject;1;0
~VPClassPresence;~VPClassPresence();1;TR;VPClassPresence;1;0
~VPNonNullObject;~VPNonNullObject();1;TR;VPNonNullObject;1;0
VPClassType;VPClassType(int32_t);1;TR;VPClassType;0;0
VPClassType;VPClassType(class TR::VPClassType &&);0;TR;VPClassType;1;0
VPClassType;VPClassType(const class TR::VPClassType &);0;TR;VPClassType;1;0
VPConstString;VPConstString(class TR_OpaqueClassBlock *,TR::Compilation *,TR::SymbolReference *);1;TR;VPConstString;0;0
VPFixedClass;VPFixedClass(class TR::VPFixedClass &&);1;TR;VPFixedClass;1;0
VPFixedClass;VPFixedClass(class TR_OpaqueClassBlock *,TR::Compilation *,int32_t);0;TR;VPFixedClass;0;0
VPFixedClass;VPFixedClass(const class TR::VPFixedClass &);0;TR;VPFixedClass;1;0
VPResolvedClass;VPResolvedClass(const class TR::VPResolvedClass &);1;TR;VPResolvedClass;1;0
VPResolvedClass;VPResolvedClass(class TR_OpaqueClassBlock *,TR::Compilation *);0;TR;VPResolvedClass;0;0
VPResolvedClass;VPResolvedClass(class TR_OpaqueClassBlock *,TR::Compilation *,int32_t);0;TR;VPResolvedClass;0;0
VPResolvedClass;VPResolvedClass(class TR::VPResolvedClass &&);0;TR;VPResolvedClass;1;0
charAt;charAt(int32_t,TR::Compilation *);1;TR;VPConstString;0;0
classTypesCompatible;classTypesCompatible(TR::VPClassType *,OMR::ValuePropagation *);1;TR;VPClassType;0;0
create;create(OMR::ValuePropagation *,TR::SymbolReference *,_Bool,_Bool);0;TR;VPClassType;0;0
create;create(OMR::ValuePropagation *,const char *,int32_t,class TR_ResolvedMethod *,_Bool,class TR_OpaqueClassBlock *);0;TR;VPClassType;0;0
create;create(OMR::ValuePropagation *,class TR_OpaqueClassBlock *);0;TR;VPResolvedClass;0;0
create;create(OMR::ValuePropagation *,TR::SymbolReference *);0;TR;VPConstString;0;0
getArrayClass;getArrayClass(OMR::ValuePropagation *);1;TR;VPClassType;0;1
getFieldByName;getFieldByName(TR::SymbolReference *,void *&,TR::Compilation *);1;TR;VPConstString;0;0
getPrimitiveArrayDataType;getPrimitiveArrayDataType();1;TR;VPClassType;0;0
getSymRef;getSymRef();1;TR;VPConstString;0;0
hasMoreThanFixedClassInfo;hasMoreThanFixedClassInfo();1;TR;VPFixedClass;0;1
isArray;isArray();1;TR;VPClassType;0;1
isCloneableOrSerializable;isCloneableOrSerializable();1;TR;VPClassType;0;1
isJavaLangObject;isJavaLangObject(OMR::ValuePropagation *);1;TR;VPClassType;0;1
isPrimitiveArray;isPrimitiveArray(TR::Compilation *);1;TR;VPClassType;0;1
isReferenceArray;isReferenceArray(TR::Compilation *);1;TR;VPClassType;0;1
operator=;operator=(class TR::VPClassType &&);0;TR;VPClassType;1;0
operator=;operator=(const class TR::VPClassType &);0;TR;VPClassType;1;0
operator=;operator=(const class TR::VPResolvedClass &);0;TR;VPResolvedClass;1;0
operator=;operator=(class TR::VPResolvedClass &&);0;TR;VPResolvedClass;1;0
operator=;operator=(const class TR::VPFixedClass &);0;TR;VPFixedClass;1;0
operator=;operator=(class TR::VPFixedClass &&);0;TR;VPFixedClass;1;0
operator=;operator=(class TR::VPConstString &&);0;TR;VPConstString;1;0
operator=;operator=(const class TR::VPConstString &);0;TR;VPConstString;1;0
~VPClassType;~VPClassType();1;TR;VPClassType;1;0
~VPConstString;~VPConstString();1;TR;VPConstString;1;0
~VPFixedClass;~VPFixedClass();1;TR;VPFixedClass;1;0
~VPResolvedClass;~VPResolvedClass();1;TR;VPResolvedClass;1;0
VPEqual;VPEqual(int32_t);1;TR;VPEqual;0;0
VPRelation;VPRelation(class TR::VPRelation &&);1;TR;VPRelation;1;0
VPRelation;VPRelation(const class TR::VPRelation &);0;TR;VPRelation;1;0
VPRelation;VPRelation(int32_t,int32_t);0;TR;VPRelation;0;0
create;create(OMR::ValuePropagation *,int32_t);0;TR;VPEqual;0;0
getComplement;getComplement(OMR::ValuePropagation *);1;TR;VPRelation;0;1
increment;increment();1;TR;VPRelation;0;0
operator=;operator=(const class TR::VPRelation &);0;TR;VPRelation;1;0
operator=;operator=(class TR::VPRelation &&);0;TR;VPRelation;1;0
operator=;operator=(class TR::VPEqual &&);0;TR;VPEqual;1;0
operator=;operator=(const class TR::VPEqual &);0;TR;VPEqual;1;0
propagateAbsoluteConstraint;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);1;TR;VPRelation;0;1
propagateRelativeConstraint;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);1;TR;VPRelation;0;1
~VPEqual;~VPEqual();1;TR;VPEqual;1;0
~VPRelation;~VPRelation();1;TR;VPRelation;1;0
VPGreaterThanOrEqual;VPGreaterThanOrEqual(int32_t);1;TR;VPGreaterThanOrEqual;0;0
create;create(OMR::ValuePropagation *,int32_t);0;TR;VPGreaterThanOrEqual;0;0
operator=;operator=(class TR::VPGreaterThanOrEqual &&);0;TR;VPGreaterThanOrEqual;1;0
operator=;operator=(const class TR::VPGreaterThanOrEqual &);0;TR;VPGreaterThanOrEqual;1;0
~VPGreaterThanOrEqual;~VPGreaterThanOrEqual();1;TR;VPGreaterThanOrEqual;1;0
VPIntConst;VPIntConst(int32_t);1;TR;VPIntConst;0;0
VPIntConstraint;VPIntConstraint(class TR::VPIntConstraint &&);1;TR;VPIntConstraint;1;0
VPIntConstraint;VPIntConstraint(int32_t);0;TR;VPIntConstraint;0;0
VPIntConstraint;VPIntConstraint(const class TR::VPIntConstraint &);0;TR;VPIntConstraint;1;0
create;create(OMR::ValuePropagation *,int32_t);0;TR;VPIntConst;0;0
createExclusion;createExclusion(OMR::ValuePropagation *,int32_t);1;TR;VPIntConst;0;0
getHigh;getHigh();1;TR;VPIntConstraint;0;1
getInt;getInt();1;TR;VPIntConstraint;0;0
getLow;getLow();1;TR;VPIntConstraint;0;0
getRange;getRange(int32_t,int32_t,_Bool,_Bool,OMR::ValuePropagation *);1;TR;VPIntConstraint;0;0
operator=;operator=(class TR::VPIntConstraint &&);0;TR;VPIntConstraint;1;0
operator=;operator=(const class TR::VPIntConstraint &);0;TR;VPIntConstraint;1;0
operator=;operator=(class TR::VPIntConst &&);0;TR;VPIntConst;1;0
operator=;operator=(const class TR::VPIntConst &);0;TR;VPIntConst;1;0
~VPIntConst;~VPIntConst();1;TR;VPIntConst;1;0
~VPIntConstraint;~VPIntConstraint();1;TR;VPIntConstraint;1;0
VPIntRange;VPIntRange(int32_t,int32_t);1;TR;VPIntRange;0;0
create;create(OMR::ValuePropagation *,int32_t,int32_t,enum TR_YesNoMaybe);0;TR;VPIntRange;0;0
create;create(OMR::ValuePropagation *,TR::DataTypes,enum TR_YesNoMaybe);0;TR;VPIntRange;0;0
createWithPrecision;createWithPrecision(OMR::ValuePropagation *,TR::DataType,int32_t,enum TR_YesNoMaybe,_Bool);1;TR;VPIntRange;0;0
operator=;operator=(class TR::VPIntRange &&);0;TR;VPIntRange;1;0
operator=;operator=(const class TR::VPIntRange &);0;TR;VPIntRange;1;0
~VPIntRange;~VPIntRange();1;TR;VPIntRange;1;0
VPKnownObject;VPKnownObject(class TR_OpaqueClassBlock *,TR::Compilation *,TR::class KnownObjectTable::Index,_Bool);1;TR;VPKnownObject;0;0
create;create(OMR::ValuePropagation *,TR::class KnownObjectTable::Index);0;TR;VPKnownObject;0;0
create;create(OMR::ValuePropagation *,TR::class KnownObjectTable::Index,_Bool);0;TR;VPKnownObject;0;0
createForJavaLangClass;createForJavaLangClass(OMR::ValuePropagation *,TR::class KnownObjectTable::Index);1;TR;VPKnownObject;0;0
getIndex;getIndex();1;TR;VPKnownObject;0;0
isArrayWithConstantElements;isArrayWithConstantElements(TR::Compilation *);1;TR;VPKnownObject;0;1
operator=;operator=(const class TR::VPKnownObject &);0;TR;VPKnownObject;1;0
operator=;operator=(class TR::VPKnownObject &&);0;TR;VPKnownObject;1;0
~VPKnownObject;~VPKnownObject();1;TR;VPKnownObject;1;0
VPLessThanOrEqual;VPLessThanOrEqual(int32_t);1;TR;VPLessThanOrEqual;0;0
create;create(OMR::ValuePropagation *,int32_t);0;TR;VPLessThanOrEqual;0;0
operator=;operator=(const class TR::VPLessThanOrEqual &);0;TR;VPLessThanOrEqual;1;0
operator=;operator=(class TR::VPLessThanOrEqual &&);0;TR;VPLessThanOrEqual;1;0
~VPLessThanOrEqual;~VPLessThanOrEqual();1;TR;VPLessThanOrEqual;1;0
VPLongConst;VPLongConst(int64_t);1;TR;VPLongConst;0;0
VPLongConstraint;VPLongConstraint(class TR::VPLongConstraint &&);1;TR;VPLongConstraint;1;0
VPLongConstraint;VPLongConstraint(const class TR::VPLongConstraint &);0;TR;VPLongConstraint;1;0
VPLongConstraint;VPLongConstraint(int64_t);0;TR;VPLongConstraint;0;0
create;create(OMR::ValuePropagation *,int64_t);0;TR;VPLongConst;0;0
createExclusion;createExclusion(OMR::ValuePropagation *,int64_t);1;TR;VPLongConst;0;0
getHigh;getHigh();1;TR;VPLongConstraint;0;1
getLong;getLong();1;TR;VPLongConstraint;0;0
getLow;getLow();1;TR;VPLongConstraint;0;0
getRange;getRange(int64_t,int64_t,_Bool,_Bool,OMR::ValuePropagation *);1;TR;VPLongConstraint;0;0
getUnsignedLong;getUnsignedLong();1;TR;VPLongConstraint;0;0
operator=;operator=(const class TR::VPLongConstraint &);0;TR;VPLongConstraint;1;0
operator=;operator=(class TR::VPLongConstraint &&);0;TR;VPLongConstraint;1;0
operator=;operator=(class TR::VPLongConst &&);0;TR;VPLongConst;1;0
operator=;operator=(const class TR::VPLongConst &);0;TR;VPLongConst;1;0
~VPLongConst;~VPLongConst();1;TR;VPLongConst;1;0
~VPLongConstraint;~VPLongConstraint();1;TR;VPLongConstraint;1;0
VPLongRange;VPLongRange(int64_t,int64_t);1;TR;VPLongRange;0;0
create;create(OMR::ValuePropagation *,int64_t,int64_t,_Bool,enum TR_YesNoMaybe);0;TR;VPLongRange;0;0
getIsPowerOfTwo;getIsPowerOfTwo();1;TR;VPLongRange;0;0
operator=;operator=(class TR::VPLongRange &&);0;TR;VPLongRange;1;0
operator=;operator=(const class TR::VPLongRange &);0;TR;VPLongRange;1;0
setIsPowerOfTwo;setIsPowerOfTwo();1;TR;VPLongRange;0;0
~VPLongRange;~VPLongRange();1;TR;VPLongRange;1;0
VPMergedConstraints;VPMergedConstraints(ListElement<TR::VPConstraint> *,class TR_Memory *);1;TR;VPMergedConstraints;0;0
create;create(OMR::ValuePropagation *,TR::VPConstraint *,TR::VPConstraint *);0;TR;VPMergedConstraints;0;0
create;create(OMR::ValuePropagation *,ListElement<TR::VPConstraint> *);0;TR;VPMergedConstraints;0;0
getList;getList();1;TR;VPMergedConstraints;0;0
getType;getType();1;TR;VPMergedConstraints;0;0
intIntersect;intIntersect(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);1;TR;VPMergedConstraints;0;0
intMerge;intMerge(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);1;TR;VPMergedConstraints;0;0
longIntersect;longIntersect(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);1;TR;VPMergedConstraints;0;0
longMerge;longMerge(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);1;TR;VPMergedConstraints;0;0
operator=;operator=(const class TR::VPMergedConstraints &);0;TR;VPMergedConstraints;1;0
operator=;operator=(class TR::VPMergedConstraints &&);0;TR;VPMergedConstraints;1;0
shortIntersect;shortIntersect(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);1;TR;VPMergedConstraints;0;0
shortMerge;shortMerge(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *);1;TR;VPMergedConstraints;0;0
~VPMergedConstraints;~VPMergedConstraints();1;TR;VPMergedConstraints;1;0
VPNotEqual;VPNotEqual(int32_t);1;TR;VPNotEqual;0;0
create;create(OMR::ValuePropagation *,int32_t);0;TR;VPNotEqual;0;0
operator=;operator=(class TR::VPNotEqual &&);0;TR;VPNotEqual;1;0
operator=;operator=(const class TR::VPNotEqual &);0;TR;VPNotEqual;1;0
~VPNotEqual;~VPNotEqual();1;TR;VPNotEqual;1;0
create;create(OMR::ValuePropagation *);0;TR;VPNullObject;0;0
operator=;operator=(const class TR::VPNullObject &);0;TR;VPNullObject;1;0
operator=;operator=(class TR::VPNullObject &&);0;TR;VPNullObject;1;0
~VPNullObject;~VPNullObject();1;TR;VPNullObject;1;0
VPObjectLocation;VPObjectLocation(enum TR::VPObjectLocation::VPObjectLocationKind);1;TR;VPObjectLocation;0;0
create;create(OMR::ValuePropagation *,enum TR::VPObjectLocation::VPObjectLocationKind);0;TR;VPObjectLocation;0;0
isKindSubset;isKindSubset(enum TR::VPObjectLocation::VPObjectLocationKind,enum TR::VPObjectLocation::VPObjectLocationKind);1;TR;VPObjectLocation;0;0
isWithin;isWithin(enum TR::VPObjectLocation::VPObjectLocationKind);1;TR;VPObjectLocation;0;0
operator=;operator=(class TR::VPObjectLocation &&);0;TR;VPObjectLocation;1;0
operator=;operator=(const class TR::VPObjectLocation &);0;TR;VPObjectLocation;1;0
~VPObjectLocation;~VPObjectLocation();1;TR;VPObjectLocation;1;0
VPPreexistentObject;VPPreexistentObject(class TR_OpaqueClassBlock *);1;TR;VPPreexistentObject;0;0
create;create(OMR::ValuePropagation *,class TR_OpaqueClassBlock *);0;TR;VPPreexistentObject;0;0
getAssumptionClass;getAssumptionClass();1;TR;VPPreexistentObject;0;0
operator=;operator=(class TR::VPPreexistentObject &&);0;TR;VPPreexistentObject;1;0
operator=;operator=(const class TR::VPPreexistentObject &);0;TR;VPPreexistentObject;1;0
~VPPreexistentObject;~VPPreexistentObject();1;TR;VPPreexistentObject;1;0
VPShortConst;VPShortConst(int16_t);1;TR;VPShortConst;0;0
VPShortConstraint;VPShortConstraint(class TR::VPShortConstraint &&);1;TR;VPShortConstraint;1;0
VPShortConstraint;VPShortConstraint(const class TR::VPShortConstraint &);0;TR;VPShortConstraint;1;0
VPShortConstraint;VPShortConstraint(int16_t);0;TR;VPShortConstraint;0;0
create;create(OMR::ValuePropagation *,int16_t);0;TR;VPShortConst;0;0
createExclusion;createExclusion(OMR::ValuePropagation *,int16_t);1;TR;VPShortConst;0;0
getHigh;getHigh();1;TR;VPShortConstraint;0;1
getLow;getLow();1;TR;VPShortConstraint;0;0
getRange;getRange(int16_t,int16_t,_Bool,_Bool,OMR::ValuePropagation *);1;TR;VPShortConstraint;0;0
getShort;getShort();1;TR;VPShortConstraint;0;0
operator=;operator=(class TR::VPShortConstraint &&);0;TR;VPShortConstraint;1;0
operator=;operator=(const class TR::VPShortConstraint &);0;TR;VPShortConstraint;1;0
operator=;operator=(class TR::VPShortConst &&);0;TR;VPShortConst;1;0
operator=;operator=(const class TR::VPShortConst &);0;TR;VPShortConst;1;0
~VPShortConst;~VPShortConst();1;TR;VPShortConst;1;0
~VPShortConstraint;~VPShortConstraint();1;TR;VPShortConstraint;1;0
VPShortRange;VPShortRange(int16_t,int16_t);1;TR;VPShortRange;0;0
create;create(OMR::ValuePropagation *);0;TR;VPShortRange;0;0
create;create(OMR::ValuePropagation *,int16_t,int16_t,enum TR_YesNoMaybe);0;TR;VPShortRange;0;0
createWithPrecision;createWithPrecision(OMR::ValuePropagation *,int32_t,_Bool);1;TR;VPShortRange;0;0
operator=;operator=(class TR::VPShortRange &&);0;TR;VPShortRange;1;0
operator=;operator=(const class TR::VPShortRange &);0;TR;VPShortRange;1;0
~VPShortRange;~VPShortRange();1;TR;VPShortRange;1;0
VPSync;VPSync(enum TR_YesNoMaybe);1;TR;VPSync;0;0
create;create(OMR::ValuePropagation *,enum TR_YesNoMaybe);0;TR;VPSync;0;0
operator=;operator=(class TR::VPSync &&);0;TR;VPSync;1;0
operator=;operator=(const class TR::VPSync &);0;TR;VPSync;1;0
syncEmitted;syncEmitted();1;TR;VPSync;0;0
~VPSync;~VPSync();1;TR;VPSync;1;0
VPUnreachablePath;VPUnreachablePath();1;TR;VPUnreachablePath;0;0
create;create(OMR::ValuePropagation *);0;TR;VPUnreachablePath;0;0
operator=;operator=(class TR::VPUnreachablePath &&);0;TR;VPUnreachablePath;1;0
operator=;operator=(const class TR::VPUnreachablePath &);0;TR;VPUnreachablePath;1;0
~VPUnreachablePath;~VPUnreachablePath();1;TR;VPUnreachablePath;1;0
VPUnresolvedClass;VPUnresolvedClass(const char *,int32_t,class TR_ResolvedMethod *);1;TR;VPUnresolvedClass;0;0
create;create(OMR::ValuePropagation *,const char *,int32_t,class TR_ResolvedMethod *);0;TR;VPUnresolvedClass;0;0
getMethod;getMethod();1;TR;VPUnresolvedClass;0;0
getOwningMethod;getOwningMethod();1;TR;VPUnresolvedClass;0;0
isDefiniteType;isDefiniteType();1;TR;VPUnresolvedClass;0;0
operator=;operator=(class TR::VPUnresolvedClass &&);0;TR;VPUnresolvedClass;1;0
operator=;operator=(const class TR::VPUnresolvedClass &);0;TR;VPUnresolvedClass;1;0
setDefiniteType;setDefiniteType(_Bool);1;TR;VPUnresolvedClass;0;0
~VPUnresolvedClass;~VPUnresolvedClass();1;TR;VPUnresolvedClass;1;0
TR_BlockStructure;TR_BlockStructure(const class TR_BlockStructure &);1;TR;BlockStructure;1;0
TR_BlockStructure;TR_BlockStructure(TR::Compilation *,int32_t,TR::Block *);0;TR;BlockStructure;0;0
TR_BlockStructure;TR_BlockStructure(class TR_BlockStructure &&);0;TR;BlockStructure;1;0
TR_Structure;TR_Structure(class TR_Structure &&);1;TR;Structure;1;0
TR_Structure;TR_Structure(const class TR_Structure &);0;TR;Structure;1;0
TR_Structure;TR_Structure(TR::Compilation *,int32_t);0;TR;Structure;0;0
addEdge;addEdge(TR::CFGEdge *,_Bool);1;TR;Structure;0;1
addExternalEdge;addExternalEdge(class TR_Structure *,int32_t,_Bool);1;TR;Structure;0;1
adjustWeightForBranches;adjustWeightForBranches(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *,int32_t *);1;TR;Structure;0;0
asBlock;asBlock();1;TR;Structure;0;1
asRegion;asRegion();1;TR;Structure;0;1
calculateFrequencyOfExecution;calculateFrequencyOfExecution(int32_t *);1;TR;Structure;0;0
cfg;cfg();1;TR;Structure;0;0
changeContinueLoopsToNestedLoops;changeContinueLoopsToNestedLoops(class TR_RegionStructure *);1;TR;Structure;0;1
checkStructure;checkStructure(class TR_BitVector *);1;TR;Structure;0;1
clearAnalysisInfo;clearAnalysisInfo();1;TR;Structure;0;1
cloneStructure;cloneStructure(TR::Block **,class TR_StructureSubGraphNode **,List<class TR_Structure> *,List<class TR_Structure> *);1;TR;Structure;0;1
cloneStructureEdges;cloneStructureEdges(TR::Block **);1;TR;Structure;0;1
collectCFGEdgesTo;collectCFGEdgesTo(int32_t,List<TR::CFGEdge> *);1;TR;Structure;0;1
collectExitBlocks;collectExitBlocks(List<TR::Block> *,List<TR::CFGEdge> *);1;TR;Structure;0;1
comp;comp();1;TR;Structure;0;0
contains;contains(class TR_Structure *,class TR_Structure *);1;TR;Structure;0;0
containsImproperRegion;containsImproperRegion();1;TR;Structure;0;1
doDataFlowAnalysis;doDataFlowAnalysis(class TR_DataFlowAnalysis *,_Bool);1;TR;Structure;0;1
findCommonParent;findCommonParent(class TR_Structure *,TR::CFG *);1;TR;Structure;0;0
findNodeInHierarchy;findNodeInHierarchy(class TR_RegionStructure *,int32_t);1;TR;Structure;0;0
getAnalysisInfo;getAnalysisInfo();1;TR;Structure;0;0
getAnyCyclicRegionNestingDepth;getAnyCyclicRegionNestingDepth();1;TR;Structure;0;0
getBlock;getBlock();1;TR;BlockStructure;0;0
getBlocks;getBlocks(List<TR::Block> *,vcount_t);1;TR;Structure;0;1
getBlocks;getBlocks(List<TR::Block> *);0;TR;Structure;0;1
getContainingLoop;getContainingLoop();1;TR;Structure;0;0
getDuplicatedBlock;getDuplicatedBlock();1;TR;BlockStructure;0;0
getEntryBlock;getEntryBlock();1;TR;Structure;0;1
getKind;getKind();1;TR;Structure;0;1
getMaxNestingDepth;getMaxNestingDepth();1;TR;Structure;0;0
getMaxNestingDepth;getMaxNestingDepth(int32_t *,int32_t *);0;TR;Structure;0;1
getNestingDepth;getNestingDepth();1;TR;Structure;0;0
getNumber;getNumber();1;TR;Structure;0;0
getNumberOfLoops;getNumberOfLoops();1;TR;Structure;0;0
getParent;getParent();1;TR;Structure;0;0
getSubGraphNode;getSubGraphNode();1;TR;Structure;0;0
getWeight;getWeight();1;TR;Structure;0;0
hasBeenAnalyzedBefore;hasBeenAnalyzedBefore();1;TR;Structure;0;0
hoistInvariantsOutOfNestedLoops;hoistInvariantsOutOfNestedLoops(class TR_LocalTransparency *,class TR_BitVector **,_Bool,class TR_BlockStructure *,class TR_RegionStructure *,int32_t);1;TR;Structure;0;1
isCreatedByVersioning;isCreatedByVersioning();1;TR;BlockStructure;0;0
isEntryOfShortRunningLoop;isEntryOfShortRunningLoop();1;TR;BlockStructure;0;0
isExpressionTransparentIn;isExpressionTransparentIn(int32_t,class TR_LocalTransparency *);1;TR;Structure;0;1
isLoopInvariantBlock;isLoopInvariantBlock();1;TR;BlockStructure;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;Structure;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;Structure;0;0
markStructuresWithImproperRegions;markStructuresWithImproperRegions();1;TR;Structure;0;1
mergeBlocks;mergeBlocks(TR::Block *,TR::Block *);1;TR;Structure;0;0
mergeInto;mergeInto(TR::Block *,TR::Block *);1;TR;Structure;0;1
operator delete;operator delete(void *,size_t);1;TR;Structure;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Structure;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Structure;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;Structure;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Structure;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Structure;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Structure;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Structure;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;Structure;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;TR;Structure;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;Structure;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Structure;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Structure;0;0
operator new;operator new(size_t,TR::Region &);0;TR;Structure;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;Structure;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Structure;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;TR;Structure;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;Structure;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Structure;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Structure;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Structure;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;Structure;0;0
operator=;operator=(class TR_Structure &&);1;TR;Structure;1;0
operator=;operator=(const class TR_Structure &);0;TR;Structure;1;0
operator=;operator=(const class TR_BlockStructure &);0;TR;BlockStructure;1;0
operator=;operator=(class TR_BlockStructure &&);0;TR;BlockStructure;1;0
removeEdge;removeEdge(class TR_Structure *,class TR_Structure *);1;TR;Structure;0;1
removeExternalEdgeTo;removeExternalEdgeTo(class TR_Structure *,int32_t);1;TR;Structure;0;1
removeMergedBlock;removeMergedBlock(TR::Block *,TR::Block *);1;TR;Structure;0;1
renumber;renumber(int32_t);1;TR;Structure;0;1
renumberRecursively;renumberRecursively(int32_t,int32_t);1;TR;Structure;0;1
replacePart;replacePart(class TR_Structure *,class TR_Structure *);1;TR;Structure;0;1
resetAnalysisInfo;resetAnalysisInfo();1;TR;Structure;0;1
resetAnalyzedStatus;resetAnalyzedStatus();1;TR;Structure;0;1
resetVisitCounts;resetVisitCounts(vcount_t);1;TR;Structure;0;0
setAnalysisInfo;setAnalysisInfo(void *);1;TR;Structure;0;0
setAnalyzedStatus;setAnalyzedStatus(_Bool);1;TR;Structure;0;0
setAnyCyclicRegionNestingDepth;setAnyCyclicRegionNestingDepth(int16_t);1;TR;Structure;0;0
setAnyCyclicRegionNestingDepths;setAnyCyclicRegionNestingDepths(int32_t *);1;TR;Structure;0;0
setAsLoopInvariantBlock;setAsLoopInvariantBlock(_Bool);1;TR;BlockStructure;0;0
setBlock;setBlock(TR::Block *);1;TR;BlockStructure;0;0
setConditionalityWeight;setConditionalityWeight(int32_t *);1;TR;Structure;0;0
setContainsImproperRegion;setContainsImproperRegion(_Bool);1;TR;Structure;0;1
setCreatedByVersioning;setCreatedByVersioning(_Bool);1;TR;BlockStructure;0;0
setDuplicatedBlock;setDuplicatedBlock(class TR_BlockStructure *);1;TR;BlockStructure;0;0
setIsEntryOfShortRunningLoop;setIsEntryOfShortRunningLoop();1;TR;BlockStructure;0;0
setMaxNestingDepth;setMaxNestingDepth(int16_t);1;TR;Structure;0;0
setNestingDepth;setNestingDepth(int16_t);1;TR;Structure;0;0
setNestingDepths;setNestingDepths(int32_t *);1;TR;Structure;0;0
setNumber;setNumber(int32_t);1;TR;Structure;0;0
setParent;setParent(class TR_RegionStructure *);1;TR;Structure;0;0
setSubGraphNode;setSubGraphNode(class TR_StructureSubGraphNode *);1;TR;Structure;0;0
setWasHeaderOfCanonicalizedLoop;setWasHeaderOfCanonicalizedLoop(_Bool);1;TR;BlockStructure;0;0
setWeight;setWeight(int32_t);1;TR;Structure;0;0
trHeapMemory;trHeapMemory();1;TR;Structure;0;0
trMemory;trMemory();1;TR;Structure;0;0
trPersistentMemory;trPersistentMemory();1;TR;Structure;0;0
trStackMemory;trStackMemory();1;TR;Structure;0;0
wasHeaderOfCanonicalizedLoop;wasHeaderOfCanonicalizedLoop();1;TR;BlockStructure;0;0
~TR_BlockStructure;~TR_BlockStructure();1;TR;BlockStructure;1;0
~TR_Structure;~TR_Structure();1;TR;Structure;1;0
TR_InductionVariable;TR_InductionVariable(TR::RegisterMappedSymbol *,TR::VPConstraint *,TR::VPConstraint *,TR::VPConstraint *,enum TR_YesNoMaybe);1;TR;InductionVariable;0;0
TR_InductionVariable;TR_InductionVariable();0;TR;InductionVariable;0;0
getEntry;getEntry();1;TR;InductionVariable;0;0
getExit;getExit();1;TR;InductionVariable;0;0
getIncr;getIncr();1;TR;InductionVariable;0;0
getLocal;getLocal();1;TR;InductionVariable;0;0
isSigned;isSigned();1;TR;InductionVariable;0;0
setEntry;setEntry(TR::VPConstraint *);1;TR;InductionVariable;0;0
setExit;setExit(TR::VPConstraint *);1;TR;InductionVariable;0;0
setIncr;setIncr(TR::VPConstraint *);1;TR;InductionVariable;0;0
setLocal;setLocal(TR::RegisterMappedSymbol *);1;TR;InductionVariable;0;0
TR_PredecessorIterator;TR_PredecessorIterator(class TR_PredecessorIterator &&);1;TR;PredecessorIterator;1;0
TR_PredecessorIterator;TR_PredecessorIterator(const class TR_PredecessorIterator &);0;TR;PredecessorIterator;1;0
TR_PredecessorIterator;TR_PredecessorIterator(TR::CFGNode *);0;TR;PredecessorIterator;0;0
TR_RegionStructure;TR_RegionStructure(class TR_RegionStructure &&);1;TR;RegionStructure;1;0
TR_RegionStructure;TR_RegionStructure(TR::Compilation *,int32_t);0;TR;RegionStructure;0;0
addAfterInductionVariable;addAfterInductionVariable(class TR_InductionVariable *,class TR_InductionVariable *);1;TR;RegionStructure;0;0
addExitEdge;addExitEdge(TR::CFGEdge *);1;TR;RegionStructure;0;0
addExitEdge;addExitEdge(class TR_StructureSubGraphNode *,int32_t,_Bool,TR::CFGEdge *);0;TR;RegionStructure;0;0
addGlobalRegisterCandidateToExits;addGlobalRegisterCandidateToExits(class TR_RegisterCandidate *);1;TR;RegionStructure;0;0
addInductionVariable;addInductionVariable(class TR_InductionVariable *);1;TR;RegionStructure;0;0
addInductionVariable;addInductionVariable(class TR_BasicInductionVariable *);0;TR;RegionStructure;0;0
addSubNode;addSubNode(class TR_StructureSubGraphNode *);1;TR;RegionStructure;0;0
begin;begin();1;TR;RegionStructure;0;0
canBeUnrolled;canBeUnrolled();1;TR;RegionStructure;0;0
checkForInternalCycles;checkForInternalCycles();1;TR;RegionStructure;0;0
cleanupAfterEdgeRemoval;cleanupAfterEdgeRemoval(TR::CFGNode *);1;TR;RegionStructure;0;0
cleanupAfterNodeRemoval;cleanupAfterNodeRemoval();1;TR;RegionStructure;0;0
clearInductionVariables;clearInductionVariables();1;TR;RegionStructure;0;0
collapseIntoParent;collapseIntoParent();1;TR;RegionStructure;0;0
computeInvariantExpressions;computeInvariantExpressions();1;TR;RegionStructure;0;0
computeInvariantSymbols;computeInvariantSymbols();1;TR;RegionStructure;0;0
containsInternalCycles;containsInternalCycles();1;TR;RegionStructure;0;0
containsOnlyAcyclicRegions;containsOnlyAcyclicRegions();1;TR;RegionStructure;0;0
end;end();1;TR;RegionStructure;0;0
extractUnconditionalExits;extractUnconditionalExits(TR::Compilation *const,const TR::list<TR::Block *, TR::Region &> &);1;TR;RegionStructure;0;0
findMatchingIV;findMatchingIV(TR::SymbolReference *);1;TR;RegionStructure;0;0
findNodeInHierarchy;findNodeInHierarchy(int32_t);0;TR;RegionStructure;0;0
findSubNodeInRegion;findSubNodeInRegion(int32_t);1;TR;RegionStructure;0;0
getBasicInductionVariables;getBasicInductionVariables();1;TR;RegionStructure;0;0
getBlocksAtSameNestingLevel;getBlocksAtSameNestingLevel();1;TR;RegionStructure;0;0
getEntry;getEntry();1;TR;RegionStructure;0;0
getExitEdges;getExitEdges();1;TR;RegionStructure;0;0
getFirstInductionVariable;getFirstInductionVariable();1;TR;RegionStructure;0;0
getFrequencyEntryFactor;getFrequencyEntryFactor();1;TR;RegionStructure;0;0
getInvariantExpressions;getInvariantExpressions();1;TR;RegionStructure;0;0
getPrimaryInductionVariable;getPrimaryInductionVariable();1;TR;RegionStructure;0;0
getUnrollFactor;getUnrollFactor();1;TR;RegionStructure;0;0
getVersionedLoop;getVersionedLoop();1;TR;RegionStructure;0;0
hasExceptionOutEdges;hasExceptionOutEdges();1;TR;RegionStructure;0;0
isAcyclic;isAcyclic();1;TR;RegionStructure;0;0
isCanonicalizedLoop;isCanonicalizedLoop();1;TR;RegionStructure;0;0
isExitEdge;isExitEdge(TR::CFGEdge *);1;TR;RegionStructure;0;0
isExprInvariant;isExprInvariant(TR::Node *,_Bool);1;TR;RegionStructure;0;0
isExprTreeInvariant;isExprTreeInvariant(TR::Node *);1;TR;RegionStructure;0;0
isInvertible;isInvertible();1;TR;RegionStructure;0;0
isNaturalLoop;isNaturalLoop();1;TR;RegionStructure;0;0
isSubtreeInvariant;isSubtreeInvariant(TR::Node *,vcount_t);1;TR;RegionStructure;0;0
isSymbolRefInvariant;isSymbolRefInvariant(TR::SymbolReference *);1;TR;RegionStructure;0;0
numSubNodes;numSubNodes();1;TR;RegionStructure;0;0
operator=;operator=(class TR_RegionStructure &&);0;TR;RegionStructure;1;0
operator=;operator=(const class TR_RegionStructure &);0;TR;RegionStructure;1;0
removeEdge;removeEdge(TR::CFGEdge *,_Bool);0;TR;RegionStructure;0;0
removeEdgeWithoutCleanup;removeEdgeWithoutCleanup(TR::CFGEdge *,_Bool);1;TR;RegionStructure;0;0
removeSubNode;removeSubNode(class TR_StructureSubGraphNode *);1;TR;RegionStructure;0;0
removeSubNodeWithoutCleanup;removeSubNodeWithoutCleanup(class TR_StructureSubGraphNode *);1;TR;RegionStructure;0;0
replaceExitPart;replaceExitPart(int32_t,int32_t);1;TR;RegionStructure;0;0
resetExprInvariant;resetExprInvariant(TR::Node *);1;TR;RegionStructure;0;0
resetInvariance;resetInvariance();1;TR;RegionStructure;0;0
setAsCanonicalizedLoop;setAsCanonicalizedLoop(_Bool);1;TR;RegionStructure;0;0
setAsInvertible;setAsInvertible(_Bool);1;TR;RegionStructure;0;0
setBlocksAtSameNestingLevel;setBlocksAtSameNestingLevel(class TR_BitVector *);1;TR;RegionStructure;0;0
setContainsInternalCycles;setContainsInternalCycles(_Bool);1;TR;RegionStructure;0;0
setEntry;setEntry(class TR_StructureSubGraphNode *);1;TR;RegionStructure;0;0
setExprInvariant;setExprInvariant(TR::Node *);1;TR;RegionStructure;0;0
setFrequencyEntryFactor;setFrequencyEntryFactor(float);1;TR;RegionStructure;0;0
setPrimaryInductionVariable;setPrimaryInductionVariable(class TR_PrimaryInductionVariable *);1;TR;RegionStructure;0;0
setUnrollFactor;setUnrollFactor(int);1;TR;RegionStructure;0;0
setVersionedLoop;setVersionedLoop(class TR_RegionStructure *);1;TR;RegionStructure;0;0
subNodeFromStructure;subNodeFromStructure(class TR_Structure *);1;TR;RegionStructure;0;0
updateInvariantExpressions;updateInvariantExpressions(TR::Node *,vcount_t);1;TR;RegionStructure;0;0
updateInvariantSymbols;updateInvariantSymbols(TR::Node *,vcount_t);1;TR;RegionStructure;0;0
~TR_RegionStructure;~TR_RegionStructure();1;TR;RegionStructure;1;0
TR_StructureSubGraphNode;TR_StructureSubGraphNode(class TR_StructureSubGraphNode &&);1;TR;StructureSubGraphNode;1;0
TR_StructureSubGraphNode;TR_StructureSubGraphNode(int32_t,TR::Region &);0;TR;StructureSubGraphNode;0;0
TR_StructureSubGraphNode;TR_StructureSubGraphNode(class TR_Structure *);0;TR;StructureSubGraphNode;0;0
TR_StructureSubGraphNode;TR_StructureSubGraphNode(const class TR_StructureSubGraphNode &);0;TR;StructureSubGraphNode;1;0
create;create(int32_t,class TR_RegionStructure *);1;TR;StructureSubGraphNode;0;0
getStructure;getStructure();1;TR;StructureSubGraphNode;0;0
operator=;operator=(class TR_StructureSubGraphNode &&);0;TR;StructureSubGraphNode;1;0
operator=;operator=(const class TR_StructureSubGraphNode &);0;TR;StructureSubGraphNode;1;0
setStructure;setStructure(class TR_Structure *);1;TR;StructureSubGraphNode;0;0
~TR_StructureSubGraphNode;~TR_StructureSubGraphNode();1;TR;StructureSubGraphNode;1;0
TR_SuccessorIterator;TR_SuccessorIterator(class TR_SuccessorIterator &&);0;TR;SuccessorIterator;1;0
~TR_SuccessorIterator;~TR_SuccessorIterator();1;TR;SuccessorIterator;1;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Machine;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Machine;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Machine;0;0
operator<=;operator<=(TR::DataTypes);1;OMR;DataType;0;0
operator<=;operator<=(const TR::DataType &);0;OMR;DataType;0;0
CompileIlGenRequest;CompileIlGenRequest(TR::IlGeneratorMethodDetails &);1;TR;CompileIlGenRequest;0;0
IlGenRequest;IlGenRequest(class OMR::IlGenRequest &&);1;OMR;IlGenRequest;1;0
IlGenRequest;IlGenRequest(const class OMR::IlGenRequest &);0;OMR;IlGenRequest;1;0
IlGenRequest;IlGenRequest(TR::IlGeneratorMethodDetails &);0;OMR;IlGenRequest;0;0
IlGenRequest;IlGenRequest(class TR::IlGenRequest &&);0;TR;IlGenRequest;1;0
IlGenRequest;IlGenRequest(const class TR::IlGenRequest &);0;TR;IlGenRequest;1;0
allowIlGenOptimizations;allowIlGenOptimizations();1;TR;IlGenRequest;0;1
details;details();1;OMR;IlGenRequest;0;0
getIlGenerator;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *);1;OMR;IlGenRequest;0;1
operator=;operator=(class OMR::IlGenRequest &&);1;OMR;IlGenRequest;1;0
operator=;operator=(const class OMR::IlGenRequest &);0;OMR;IlGenRequest;1;0
operator=;operator=(const class TR::IlGenRequest &);0;TR;IlGenRequest;1;0
operator=;operator=(class TR::IlGenRequest &&);0;TR;IlGenRequest;1;0
operator=;operator=(class TR::CompileIlGenRequest &&);0;TR;CompileIlGenRequest;1;0
operator=;operator=(const class TR::CompileIlGenRequest &);0;TR;CompileIlGenRequest;1;0
print;print(class TR_FrontEnd *,TR::FILE *,const char *);1;OMR;IlGenRequest;0;1
~CompileIlGenRequest;~CompileIlGenRequest();1;TR;CompileIlGenRequest;1;0
~IlGenRequest;~IlGenRequest();1;OMR;IlGenRequest;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(const class OMR::IlGeneratorMethodDetails &);1;OMR;IlGeneratorMethodDetails;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails();0;OMR;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(const class TestCompiler::IlGeneratorMethodDetails &);0;TestCompiler;IlGeneratorMethodDetails;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(TR::ResolvedMethod *);0;TestCompiler;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(class TestCompiler::IlGeneratorMethodDetails &&);0;TestCompiler;IlGeneratorMethodDetails;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(class TR_ResolvedMethod *);0;TestCompiler;IlGeneratorMethodDetails;0;0
create;create(TR::IlGeneratorMethodDetails &,class TR_ResolvedMethod *);1;OMR;IlGeneratorMethodDetails;0;0
getIlGenerator;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *,_Bool,class TR_InlineBlocks *);1;TestCompiler;IlGeneratorMethodDetails;0;1
getIlVerifier;getIlVerifier();1;OMR;IlGeneratorMethodDetails;0;0
getMethod;getMethod();1;TestCompiler;IlGeneratorMethodDetails;0;0
getResolvedMethod;getResolvedMethod();1;TestCompiler;IlGeneratorMethodDetails;0;0
isMethodInProgress;isMethodInProgress();1;OMR;IlGeneratorMethodDetails;0;1
operator new;operator new(size_t,TR::IlGeneratorMethodDetails *);1;OMR;IlGeneratorMethodDetails;0;0
operator new;operator new(size_t,TR::IlGeneratorMethodDetails &);0;OMR;IlGeneratorMethodDetails;0;0
operator=;operator=(const class OMR::IlGeneratorMethodDetails &);1;OMR;IlGeneratorMethodDetails;1;0
operator=;operator=(class TestCompiler::IlGeneratorMethodDetails &&);0;TestCompiler;IlGeneratorMethodDetails;1;0
operator=;operator=(const class TestCompiler::IlGeneratorMethodDetails &);0;TestCompiler;IlGeneratorMethodDetails;1;0
operator=;operator=(class TR::IlGeneratorMethodDetails &&);0;TR;IlGeneratorMethodDetails;1;0
operator=;operator=(const class TR::IlGeneratorMethodDetails &);0;TR;IlGeneratorMethodDetails;1;0
print;print(class TR_FrontEnd *,TR::FILE *);1;OMR;IlGeneratorMethodDetails;0;0
sameAs;sameAs(TR::IlGeneratorMethodDetails &);1;OMR;IlGeneratorMethodDetails;0;0
sameAs;sameAs(TR::IlGeneratorMethodDetails &,class TR_FrontEnd *);0;TestCompiler;IlGeneratorMethodDetails;0;0
self;self();1;OMR;IlGeneratorMethodDetails;0;0
setIlVerifier;setIlVerifier(TR::IlVerifier *);1;OMR;IlGeneratorMethodDetails;0;0
supportsInvalidation;supportsInvalidation();1;OMR;IlGeneratorMethodDetails;0;0
~IlGeneratorMethodDetails;~IlGeneratorMethodDetails();1;OMR;IlGeneratorMethodDetails;0;1
InliningIlGenRequest;InliningIlGenRequest(const class TR::InliningIlGenRequest &);1;TR;InliningIlGenRequest;1;0
InliningIlGenRequest;InliningIlGenRequest(class TR::InliningIlGenRequest &&);0;TR;InliningIlGenRequest;1;0
InliningIlGenRequest;InliningIlGenRequest(TR::IlGeneratorMethodDetails &,TR::ResolvedMethodSymbol *);0;TR;InliningIlGenRequest;0;0
PartialInliningIlGenRequest;PartialInliningIlGenRequest(TR::IlGeneratorMethodDetails &,TR::ResolvedMethodSymbol *,class TR_InlineBlocks *);1;TR;PartialInliningIlGenRequest;0;0
operator=;operator=(const class TR::InliningIlGenRequest &);0;TR;InliningIlGenRequest;1;0
operator=;operator=(class TR::InliningIlGenRequest &&);0;TR;InliningIlGenRequest;1;0
operator=;operator=(class TR::PartialInliningIlGenRequest &&);0;TR;PartialInliningIlGenRequest;1;0
operator=;operator=(const class TR::PartialInliningIlGenRequest &);0;TR;PartialInliningIlGenRequest;1;0
~InliningIlGenRequest;~InliningIlGenRequest();1;TR;InliningIlGenRequest;1;0
~PartialInliningIlGenRequest;~PartialInliningIlGenRequest();1;TR;PartialInliningIlGenRequest;1;0
Symbol;Symbol();1;OMR;Symbol;0;0
Symbol;Symbol(const class OMR::Symbol &);0;OMR;Symbol;1;0
isFinal;isFinal();1;OMR;Symbol;0;0
isPrivate;isPrivate();1;OMR;Symbol;0;0
isStatic;isStatic();1;OMR;Symbol;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;Symbol;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;AliasBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;AliasBuilder;0;0
Node;Node();1;OMR;Node;0;0
Node;Node(const class OMR::Node &);0;OMR;Node;1;0
addChildrenAndSymRef;addChildrenAndSymRef(uint16_t,TR::SymbolReference *);1;OMR;Node;0;0
addChildrenAndSymRef;addChildrenAndSymRef(uint16_t,TR::Node *);0;OMR;Node;0;0
buconst;buconst(uint8_t);1;OMR;Node;0;0
buconst;buconst(TR::Node *,uint8_t);0;OMR;Node;0;0
createStore;createStore(TR::SymbolReference *,TR::Node *,TR::ILOpCodes,size_t);1;OMR;Node;0;0
isFinal;isFinal();1;TR;ResolvedMethod;0;0
isPrivate;isPrivate();1;TR;ResolvedMethod;0;0
isStatic;isStatic();1;TR;ResolvedMethod;0;0
BSDTimer;BSDTimer(const class CS2::BSDTimer &);1;CS2;BSDTimer;1;0
BSDTimer;BSDTimer(class CS2::BSDTimer &&);0;CS2;BSDTimer;1;0
BSDTimer;BSDTimer();0;CS2;BSDTimer;1;0
Timer;Timer(class CS2::Timer &&);1;CS2;Timer;1;0
Timer;Timer();0;CS2;Timer;1;0
Timer;Timer(const class CS2::Timer &);0;CS2;Timer;1;0
~BSDTimer;~BSDTimer();1;CS2;BSDTimer;1;0
~Timer;~Timer();1;CS2;Timer;1;0
Block;Block(TR::TreeTop *,TR::TreeTop *,class TR_Memory *);1;OMR;Block;0;0
Block;Block(const class OMR::Block &);0;OMR;Block;1;0
Block;Block(const class TR::Block &);0;TR;Block;1;0
Optimization;Optimization(const class TR::Optimization &);0;TR;Optimization;1;0
TR_HasRandomGenerator;TR_HasRandomGenerator(TR::Compilation *);1;TR;HasRandomGenerator;0;0
TR_Inliner;TR_Inliner(class TR_Inliner &&);1;TR;Inliner;1;0
TR_Inliner;TR_Inliner(const class TR_Inliner &);0;TR;Inliner;1;0
TR_Inliner;TR_Inliner(TR::OptimizationManager *);0;TR;Inliner;0;0
create;create(TR::OptimizationManager *);1;TR;Inliner;0;0
operator=;operator=(class TR_HasRandomGenerator &&);1;TR;HasRandomGenerator;1;0
operator=;operator=(const class TR_HasRandomGenerator &);0;TR;HasRandomGenerator;1;0
operator=;operator=(class TR_Inliner &&);0;TR;Inliner;1;0
operator=;operator=(const class TR_Inliner &);0;TR;Inliner;1;0
randomInt;randomInt(int32_t,int32_t);1;TR;HasRandomGenerator;0;0
randomInt;randomInt();0;TR;HasRandomGenerator;0;0
~TR_Inliner;~TR_Inliner();1;TR;Inliner;1;1
OMR_InlinerPolicy;OMR_InlinerPolicy(class OMR_InlinerPolicy &&);1;;OMR_InlinerPolicy;1;0
OMR_InlinerPolicy;OMR_InlinerPolicy(TR::Compilation *);0;;OMR_InlinerPolicy;0;0
OptimizationPolicy;OptimizationPolicy(const class TR::OptimizationPolicy &);1;TR;OptimizationPolicy;1;0
OptimizationPolicy;OptimizationPolicy(TR::Compilation *);0;TR;OptimizationPolicy;0;0
aggressiveSmallAppOpts;aggressiveSmallAppOpts();1;;OMR_InlinerPolicy;0;0
allocator;allocator();1;TR;OptimizationPolicy;0;0
alwaysWorthInlining;alwaysWorthInlining(class TR_ResolvedMethod *,TR::Node *);1;;OMR_InlinerPolicy;0;0
callMustBeInlined;callMustBeInlined(struct TR_CallTarget *);1;;OMR_InlinerPolicy;0;1
canInlineMethodWhileInstrumenting;canInlineMethodWhileInstrumenting(class TR_ResolvedMethod *);1;;OMR_InlinerPolicy;0;1
checkIfTargetInlineable;checkIfTargetInlineable(struct TR_CallTarget *,struct TR_CallSite *,TR::Compilation *);1;;OMR_InlinerPolicy;0;1
comp;comp();1;TR;OptimizationPolicy;0;0
determineInliningHeuristic;determineInliningHeuristic(TR::ResolvedMethodSymbol *);1;;OMR_InlinerPolicy;0;1
dontPrivatizeArgumentsForRecognizedMethod;dontPrivatizeArgumentsForRecognizedMethod(TR::RecognizedMethod);1;;OMR_InlinerPolicy;0;1
fe;fe();1;TR;OptimizationPolicy;0;0
getInitialBytecodeSize;getInitialBytecodeSize(TR::ResolvedMethodSymbol *,TR::Compilation *);1;;OMR_InlinerPolicy;0;0
getInitialBytecodeSize;getInitialBytecodeSize(class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,TR::Compilation *);0;;OMR_InlinerPolicy;0;1
inlineMethodEvenForColdBlocks;inlineMethodEvenForColdBlocks(class TR_ResolvedMethod *);1;;OMR_InlinerPolicy;0;1
inlineRecognizedMethod;inlineRecognizedMethod(TR::RecognizedMethod);1;;OMR_InlinerPolicy;0;1
mustBeInlinedEvenInDebug;mustBeInlinedEvenInDebug(class TR_ResolvedMethod *,TR::TreeTop *);1;;OMR_InlinerPolicy;0;0
operator delete;operator delete(void *,size_t);1;TR;OptimizationPolicy;0;0
operator new;operator new(size_t,TR::Allocator);1;TR;OptimizationPolicy;0;0
operator=;operator=(const class TR::OptimizationPolicy &);1;TR;OptimizationPolicy;1;0
operator=;operator=(class OMR_InlinerPolicy &&);0;;OMR_InlinerPolicy;1;0
operator=;operator=(const class OMR_InlinerPolicy &);0;;OMR_InlinerPolicy;1;0
replaceSoftwareCheckWithHardwareCheck;replaceSoftwareCheckWithHardwareCheck(class TR_ResolvedMethod *);1;;OMR_InlinerPolicy;0;1
skipHCRGuardForCallee;skipHCRGuardForCallee(class TR_ResolvedMethod *);1;;OMR_InlinerPolicy;0;1
suitableForRemat;suitableForRemat(TR::Compilation *,TR::Node *,struct TR_VirtualGuardSelection *);1;;OMR_InlinerPolicy;0;1
supressInliningRecognizedInitialCallee;supressInliningRecognizedInitialCallee(struct TR_CallSite *,TR::Compilation *);1;;OMR_InlinerPolicy;0;1
trMemory;trMemory();1;TR;OptimizationPolicy;0;0
tryToInline;tryToInline(struct TR_CallTarget *,class TR_CallStack *,_Bool);1;;OMR_InlinerPolicy;0;1
tryToInlineGeneral;tryToInlineGeneral(struct TR_CallTarget *,class TR_CallStack *,_Bool);1;;OMR_InlinerPolicy;0;0
tryToInlineTrivialMethod;tryToInlineTrivialMethod(class TR_CallStack *,struct TR_CallTarget *);1;;OMR_InlinerPolicy;0;0
willBeInlinedInCodeGen;willBeInlinedInCodeGen(TR::RecognizedMethod);1;;OMR_InlinerPolicy;0;1
~OMR_InlinerPolicy;~OMR_InlinerPolicy();1;;OMR_InlinerPolicy;1;1
~OptimizationPolicy;~OptimizationPolicy();1;TR;OptimizationPolicy;0;1
OMR_InlinerHelper;OMR_InlinerHelper(class OMR_InlinerHelper &&);1;;OMR_InlinerHelper;1;0
OMR_InlinerHelper;OMR_InlinerHelper(const class OMR_InlinerHelper &);0;;OMR_InlinerHelper;1;0
inliner;inliner();1;;OMR_InlinerHelper;0;0
operator=;operator=(class OMR_InlinerHelper &&);1;;OMR_InlinerHelper;1;0
operator=;operator=(const class OMR_InlinerHelper &);0;;OMR_InlinerHelper;1;0
setInliner;setInliner(class TR_InlinerBase *);1;;OMR_InlinerHelper;0;0
tracer;tracer();1;;OMR_InlinerHelper;0;0
~OMR_InlinerHelper;~OMR_InlinerHelper();1;;OMR_InlinerHelper;1;0
OMR_InlinerUtil;OMR_InlinerUtil(TR::Compilation *);1;;OMR_InlinerUtil;0;0
OMR_InlinerUtil;OMR_InlinerUtil(class OMR_InlinerUtil &&);0;;OMR_InlinerUtil;1;0
OptimizationUtil;OptimizationUtil(const class TR::OptimizationUtil &);1;TR;OptimizationUtil;1;0
OptimizationUtil;OptimizationUtil(TR::Compilation *);0;TR;OptimizationUtil;0;0
addTargetIfMethodIsNotOverridenInReceiversHierarchy;addTargetIfMethodIsNotOverridenInReceiversHierarchy(class TR_IndirectCallSite *);1;;OMR_InlinerUtil;0;1
addTargetIfThereIsSingleImplementer;addTargetIfThereIsSingleImplementer(class TR_IndirectCallSite *);1;;OMR_InlinerUtil;0;1
adjustByteCodeSize;adjustByteCodeSize(class TR_ResolvedMethod *,_Bool,TR::Block *,int &);1;;OMR_InlinerUtil;0;1
adjustCallerWeightLimit;adjustCallerWeightLimit(TR::ResolvedMethodSymbol *,int &);1;;OMR_InlinerUtil;0;1
adjustMethodByteCodeSizeThreshold;adjustMethodByteCodeSizeThreshold(TR::ResolvedMethodSymbol *,int &);1;;OMR_InlinerUtil;0;1
allocator;allocator();1;TR;OptimizationUtil;0;0
calleeTreeTopPreMergeActions;calleeTreeTopPreMergeActions(TR::ResolvedMethodSymbol *,struct TR_CallTarget *);1;;OMR_InlinerUtil;0;1
collectCalleeMethodClassInfo;collectCalleeMethodClassInfo(class TR_ResolvedMethod *);1;;OMR_InlinerUtil;0;1
comp;comp();1;TR;OptimizationUtil;0;0
computeMethodBranchProfileInfo;computeMethodBranchProfileInfo(TR::Block *,struct TR_CallTarget *,TR::ResolvedMethodSymbol *);1;;OMR_InlinerUtil;0;1
computePrexInfo;computePrexInfo(struct TR_CallTarget *);1;;OMR_InlinerUtil;0;1
createInnerPrexInfo;createInnerPrexInfo(TR::Compilation *,TR::ResolvedMethodSymbol *,class TR_CallStack *,TR::TreeTop *,TR::Node *,enum TR_VirtualGuardKind);1;;OMR_InlinerUtil;0;1
createPrexArgInfoForCallTarget;createPrexArgInfoForCallTarget(struct TR_VirtualGuardSelection *,class TR_ResolvedMethod *);1;;OMR_InlinerUtil;0;1
estimateAndRefineBytecodeSize;estimateAndRefineBytecodeSize(struct TR_CallSite *,struct TR_CallTarget *,class TR_CallStack *,int32_t &);1;;OMR_InlinerUtil;0;1
fe;fe();1;TR;OptimizationUtil;0;0
findSingleJittedImplementer;findSingleJittedImplementer(class TR_IndirectCallSite *);1;;OMR_InlinerUtil;0;1
getCallCount;getCallCount(TR::Node *);1;;OMR_InlinerUtil;0;1
getInlinerTracer;getInlinerTracer(TR::Optimization *);1;;OMR_InlinerUtil;0;1
getTransformInlinedFunction;getTransformInlinedFunction(TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,TR::Block *,TR::TreeTop *,TR::Node *,class TR_ParameterToArgumentMapper &,struct TR_VirtualGuardSelection *,List<TR::SymbolReference> &,List<TR::SymbolReference> &,List<TR::SymbolReference> &);1;;OMR_InlinerUtil;0;1
needTargetedInlining;needTargetedInlining(TR::ResolvedMethodSymbol *);1;;OMR_InlinerUtil;0;1
operator delete;operator delete(void *,size_t);1;TR;OptimizationUtil;0;0
operator new;operator new(size_t,TR::Allocator);1;TR;OptimizationUtil;0;0
operator=;operator=(const class TR::OptimizationUtil &);1;TR;OptimizationUtil;1;0
operator=;operator=(class OMR_InlinerUtil &&);0;;OMR_InlinerUtil;1;0
operator=;operator=(const class OMR_InlinerUtil &);0;;OMR_InlinerUtil;1;0
refineColdness;refineColdness(TR::Node *,_Bool &);1;;OMR_InlinerUtil;0;1
refineInlineGuard;refineInlineGuard(TR::Node *,TR::Block *&,TR::Block *&,_Bool &,TR::ResolvedMethodSymbol *,TR::TreeTop *,TR::TreeTop *&,TR::Block *);1;;OMR_InlinerUtil;0;1
refineInliningThresholds;refineInliningThresholds(TR::Compilation *,int32_t &,int32_t &,int32_t &,int32_t &,int32_t &,int32_t &,int32_t);1;;OMR_InlinerUtil;0;1
storeValueInATemp;storeValueInATemp(TR::Compilation *,TR::Node *,TR::SymbolReference *&,TR::TreeTop *,TR::ResolvedMethodSymbol *,List<TR::SymbolReference> &,List<TR::SymbolReference> &,List<TR::SymbolReference> *,_Bool,TR::TreeTop **,_Bool,int32_t);1;;OMR_InlinerUtil;0;0
trMemory;trMemory();1;TR;OptimizationUtil;0;0
validateInterfaceImplementation;validateInterfaceImplementation(class TR_ResolvedMethod *);1;;OMR_InlinerUtil;0;1
~OMR_InlinerUtil;~OMR_InlinerUtil();1;;OMR_InlinerUtil;1;1
~OptimizationUtil;~OptimizationUtil();1;TR;OptimizationUtil;0;1
addToOSRTable;addToOSRTable(int32_t,TR_ByteCodeInfo &);1;OMR;CodeGenerator;0;0
addToOSRTable;addToOSRTable(TR::Instruction *);0;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,class TR_ScratchRegisterManager &,int32_t,int8_t,int32_t,TR::Instruction *);1;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::Register *,class TR_ScratchRegisterManager &,int8_t,int32_t,TR::Instruction *);0;OMR;CodeGenerator;0;0
getLinkage;getLinkage();1;OMR;CodeGenerator;0;0
getLinkage;getLinkage(enum TR_LinkageConventions);0;OMR;CodeGenerator;0;0
getMaximumNumberOfGPRsAllowedAcrossEdge;getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Node *);1;OMR;CodeGenerator;0;0
getMaximumNumberOfGPRsAllowedAcrossEdge;getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Block *);0;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,size_t);1;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;CodeGenerator;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;CodeGenerator;0;0
operator=;operator=(const class OMR::CodeGenerator &);1;OMR;CodeGenerator;1;0
operator=;operator=(class OMR::CodeGenerator &&);0;OMR;CodeGenerator;1;0
simulatedNodeState;simulatedNodeState(TR::Node *);1;OMR;CodeGenerator;0;0
simulatedNodeState;simulatedNodeState(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *);0;OMR;CodeGenerator;0;0
wantToPatchClassPointer;wantToPatchClassPointer(const class TR_OpaqueClassBlock *,const TR::Node *);1;OMR;CodeGenerator;0;0
wantToPatchClassPointer;wantToPatchClassPointer(const class TR_OpaqueClassBlock *,const uint8_t *);0;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Compilation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Compilation;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Compilation;0;0
getDataType;getDataType(TR::ILOpCodes);1;OMR;ILOpCode;0;0
getDataType;getDataType();0;OMR;ILOpCode;0;0
aconst;aconst(TR::Node *,uintptrj_t);1;OMR;Node;0;0
bconst;bconst(int8_t);1;OMR;Node;0;0
bconst;bconst(TR::Node *,int8_t);0;OMR;Node;0;0
OptimizationManager;OptimizationManager(const class OMR::OptimizationManager &);1;OMR;OptimizationManager;1;0
OptimizationManager;OptimizationManager(TR::Optimizer *,OptimizationFactory,OMR::Optimizations,const struct OptimizationStrategy *);0;OMR;OptimizationManager;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Optimizer;0;0
ResolvedMethod;ResolvedMethod(const class TestCompiler::ResolvedMethod &);1;TestCompiler;ResolvedMethod;1;0
ResolvedMethod;ResolvedMethod(class TestCompiler::ResolvedMethod &&);0;TestCompiler;ResolvedMethod;1;0
code;code();1;TestCompiler;ResolvedMethod;0;0
TransformUtil;TransformUtil(const class OMR::TransformUtil &);1;OMR;TransformUtil;1;0
TransformUtil;TransformUtil(class OMR::TransformUtil &&);0;OMR;TransformUtil;1;0
TransformUtil;TransformUtil();0;OMR;TransformUtil;0;0
convertWidthToShift;convertWidthToShift(int32_t);1;OMR;TransformUtil;0;0
fieldShouldBeCompressed;fieldShouldBeCompressed(TR::Node *,TR::Compilation *);1;OMR;TransformUtil;0;0
isNoopConversion;isNoopConversion(TR::Compilation *,TR::Node *);1;OMR;TransformUtil;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;TransformUtil;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;TransformUtil;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;TransformUtil;0;0
operator delete;operator delete(void *,size_t);0;OMR;TransformUtil;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;TransformUtil;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;TransformUtil;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;TransformUtil;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;TransformUtil;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;TransformUtil;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;TransformUtil;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;TransformUtil;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;TransformUtil;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;TransformUtil;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;TransformUtil;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;TransformUtil;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;TransformUtil;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;TransformUtil;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;TransformUtil;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;TransformUtil;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;TransformUtil;0;0
recursivelySetNodeVisitCount;recursivelySetNodeVisitCount(TR::Node *,vcount_t);1;OMR;TransformUtil;0;0
removeTree;removeTree(TR::Compilation *,TR::TreeTop *);1;OMR;TransformUtil;0;0
scalarizeAddressParameter;scalarizeAddressParameter(TR::Compilation *,TR::Node *,size_t,TR::DataType,TR::SymbolReference *,_Bool);1;OMR;TransformUtil;0;0
scalarizeArrayCopy;scalarizeArrayCopy(TR::Compilation *,TR::Node *,TR::TreeTop *,_Bool,_Bool &,TR::SymbolReference *,TR::SymbolReference *,_Bool);1;OMR;TransformUtil;0;0
self;self();1;OMR;TransformUtil;0;0
transformDirectLoad;transformDirectLoad(TR::Compilation *,TR::Node *);1;OMR;TransformUtil;0;0
transformIndirectLoad;transformIndirectLoad(TR::Compilation *,TR::Node *);1;OMR;TransformUtil;0;0
transformIndirectLoadChain;transformIndirectLoadChain(TR::Compilation *,TR::Node *,TR::Node *,TR::class KnownObjectTable::Index,TR::Node **);1;OMR;TransformUtil;0;0
transformIndirectLoadChainAt;transformIndirectLoadChainAt(TR::Compilation *,TR::Node *,TR::Node *,uintptrj_t *,TR::Node **);1;OMR;TransformUtil;0;0
mustBeLessThanOrEqual;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);1;TR;VPConstraint;0;1
mustBeLessThanOrEqual;mustBeLessThanOrEqual();0;TR;VPConstraint;0;1
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;VPConstraint;0;0
operator delete;operator delete(void *,size_t);0;TR;VPConstraint;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;VPConstraint;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;VPConstraint;0;0
TR_DirectCallSite;TR_DirectCallSite(class TR_DirectCallSite &&);1;TR;DirectCallSite;1;0
TR_DirectCallSite;TR_DirectCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool);0;TR;DirectCallSite;0;0
findCallSiteTarget;findCallSiteTarget(class TR_CallStack *,class TR_InlinerBase *);1;TR;DirectCallSite;0;1
name;name();1;TR;DirectCallSite;0;0
operator=;operator=(const class TR_DirectCallSite &);1;TR;DirectCallSite;1;0
operator=;operator=(class TR_DirectCallSite &&);0;TR;DirectCallSite;1;0
~TR_DirectCallSite;~TR_DirectCallSite();1;TR;DirectCallSite;1;0
TR_CallStack;TR_CallStack(TR::Compilation *,TR::ResolvedMethodSymbol *,class TR_ResolvedMethod *,class TR_CallStack *,int32_t,_Bool);1;TR;CallStack;0;0
addAutomatic;addAutomatic(TR::AutomaticSymbol *);1;TR;CallStack;0;0
addInjectedBasicBlockTemp;addInjectedBasicBlockTemp(TR::SymbolReference *);1;TR;CallStack;0;0
addTemp;addTemp(TR::SymbolReference *);1;TR;CallStack;0;0
blockInfo;blockInfo(int32_t);1;TR;CallStack;0;0
commit;commit();1;TR;CallStack;0;0
comp;comp();1;TR;CallStack;0;0
initializeControlFlowInfo;initializeControlFlowInfo(TR::ResolvedMethodSymbol *);1;TR;CallStack;0;0
isAnywhereOnTheStack;isAnywhereOnTheStack(class TR_ResolvedMethod *,int32_t);1;TR;CallStack;0;0
isCurrentlyOnTheStack;isCurrentlyOnTheStack(class TR_ResolvedMethod *,int32_t);1;TR;CallStack;0;0
makeBasicBlockTempsAvailable;makeBasicBlockTempsAvailable(List<TR::SymbolReference> &);1;TR;CallStack;0;0
makeTempsAvailable;makeTempsAvailable(List<TR::SymbolReference> &);1;TR;CallStack;0;0
makeTempsAvailable;makeTempsAvailable(List<TR::SymbolReference> &,List<TR::SymbolReference> &);0;TR;CallStack;0;0
trHeapMemory;trHeapMemory();1;TR;CallStack;0;0
trMemory;trMemory();1;TR;CallStack;0;0
trPersistentMemory;trPersistentMemory();1;TR;CallStack;0;0
trStackMemory;trStackMemory();1;TR;CallStack;0;0
updateState;updateState(TR::Block *);1;TR;CallStack;0;0
~TR_CallStack;~TR_CallStack();1;TR;CallStack;0;0
IsOSRFramesSizeUnderThreshold;IsOSRFramesSizeUnderThreshold();1;TR;InlinerBase;0;0
TR_DumbInliner;TR_DumbInliner(TR::Optimizer *,TR::Optimization *,uint32_t,uint32_t);1;TR;DumbInliner;0;0
TR_InlineCall;TR_InlineCall(TR::Optimizer *,TR::Optimization *);1;TR;InlineCall;0;0
TR_InlinerBase;TR_InlinerBase(TR::Optimizer *,TR::Optimization *);1;TR;InlinerBase;0;0
addAdditionalGuard;addAdditionalGuard(TR::Node *,TR::ResolvedMethodSymbol *,class TR_OpaqueClassBlock *,TR::Block *,TR::Block *,TR::Block *,enum TR_VirtualGuardKind,enum TR_VirtualGuardTestType,_Bool,TR::CFG *);1;TR;InlinerBase;0;0
addGuardForVirtual;addGuardForVirtual(TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,TR::TreeTop *,TR::Node *,class TR_OpaqueClassBlock *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,class TR_TransformInlinedFunction &,List<TR::SymbolReference> &,struct TR_VirtualGuardSelection *,TR::TreeTop **,struct TR_CallTarget *);1;TR;InlinerBase;0;0
allowBiggerMethods;allowBiggerMethods();1;TR;InlinerBase;0;0
alwaysWorthInlining;alwaysWorthInlining(class TR_ResolvedMethod *,TR::Node *);1;TR;InlinerBase;0;0
analyzeCallSite;analyzeCallSite(class TR_CallStack *,TR::TreeTop *,TR::Node *,TR::Node *);1;TR;DumbInliner;0;1
applyPolicyToTargets;applyPolicyToTargets(class TR_CallStack *,struct TR_CallSite *);1;TR;InlinerBase;0;0
buildPrexArgInfoForOutermostMethod;buildPrexArgInfoForOutermostMethod(TR::ResolvedMethodSymbol *);1;TR;InlinerBase;0;0
callMustBeInlinedRegardlessOfSize;callMustBeInlinedRegardlessOfSize(struct TR_CallSite *);1;TR;InlinerBase;0;0
checkInlineableWithoutInitialCalleeSymbol;checkInlineableWithoutInitialCalleeSymbol(struct TR_CallSite *,TR::Compilation *);1;TR;InlinerBase;0;0
cleanup;cleanup(TR::ResolvedMethodSymbol *,_Bool);1;TR;InlinerBase;0;0
cloneChildren;cloneChildren(TR::Node *,TR::Node *,uint32_t);1;TR;InlinerBase;0;0
comp;comp();1;TR;InlinerBase;0;0
createParmMap;createParmMap(TR::ResolvedMethodSymbol *,TR_LinkHead<struct TR_ParameterMapping> &);1;TR;InlinerBase;0;0
createVirtualGuard;createVirtualGuard(TR::Node *,TR::ResolvedMethodSymbol *,TR::TreeTop *,int16_t,class TR_OpaqueClassBlock *,_Bool,struct TR_VirtualGuardSelection *);1;TR;InlinerBase;0;0
exceedsSizeThreshold;exceedsSizeThreshold(struct TR_CallSite *,int,TR::Block *,TR_ByteCodeInfo &,int32_t,class TR_ResolvedMethod *,class TR_ResolvedMethod *,TR::Node *,_Bool);1;TR;InlinerBase;0;1
fe;fe();1;TR;InlinerBase;0;0
findAndUpdateCallSiteInGraph;findAndUpdateCallSiteInGraph(class TR_CallStack *,TR_ByteCodeInfo &,TR::TreeTop *,TR::Node *,TR::Node *,struct TR_CallTarget *);1;TR;InlinerBase;0;0
firstPass;firstPass();1;TR;InlinerBase;0;0
forceCalcInlining;forceCalcInlining(struct TR_CallTarget *);1;TR;InlinerBase;0;0
forceInline;forceInline(struct TR_CallTarget *);1;TR;InlinerBase;0;0
forceVarInitInlining;forceVarInitInlining(struct TR_CallTarget *);1;TR;InlinerBase;0;0
getBorderFrequencies;getBorderFrequencies(int32_t &,int32_t &,class TR_ResolvedMethod *,TR::Node *);1;TR;InlinerBase;0;0
getCurrentNumberOfNodes;getCurrentNumberOfNodes();1;TR;InlinerBase;0;0
getMaxInliningCallSites;getMaxInliningCallSites();1;TR;InlinerBase;0;0
getMaxRecursiveCallByteCodeSizeEstimate;getMaxRecursiveCallByteCodeSizeEstimate();1;TR;InlinerBase;0;0
getNodeCountThreshold;getNodeCountThreshold();1;TR;InlinerBase;0;0
getNumAsyncChecks;getNumAsyncChecks();1;TR;InlinerBase;0;0
getOptimizer;getOptimizer();1;TR;InlinerBase;0;0
getPolicy;getPolicy();1;TR;InlinerBase;0;0
getSizeThreshold;getSizeThreshold();1;TR;InlinerBase;0;0
getStoreToCachedPrivateStatic;getStoreToCachedPrivateStatic();1;TR;InlinerBase;0;0
getSuccessorsWithGlobalLabels;getSuccessorsWithGlobalLabels();1;TR;InlinerBase;0;0
getSymbolAndFindInlineTargets;getSymbolAndFindInlineTargets(class TR_CallStack *,struct TR_CallSite *,_Bool);1;TR;InlinerBase;0;0
getUtil;getUtil();1;TR;InlinerBase;0;0
getVisitCount;getVisitCount();1;TR;InlinerBase;0;0
heuristicForUsingOSR;heuristicForUsingOSR(TR::Node *,TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,_Bool);1;TR;InlinerBase;0;0
incCurrentNumberOfNodes;incCurrentNumberOfNodes(int32_t);1;TR;InlinerBase;0;0
initializeControlFlowInfo;initializeControlFlowInfo(class TR_CallStack *,TR::ResolvedMethodSymbol *);1;TR;InlinerBase;0;0
inlineCall;inlineCall(TR::TreeTop *,class TR_OpaqueClassBlock *,_Bool,class TR_PrexArgInfo *,int32_t);1;TR;InlineCall;0;0
inlineCallTarget;inlineCallTarget(class TR_CallStack *,struct TR_CallTarget *,_Bool,class TR_PrexArgInfo *,TR::TreeTop **);1;TR;InlinerBase;0;0
inlineCallTarget2;inlineCallTarget2(class TR_CallStack *,struct TR_CallTarget *,TR::TreeTop **,_Bool,int32_t);1;TR;InlinerBase;0;0
inlineCallTargets;inlineCallTargets(TR::ResolvedMethodSymbol *,class TR_CallStack *,class TR_InnerPreexistenceInfo *);1;TR;InlinerBase;0;1
inlineFromGraph;inlineFromGraph(class TR_CallStack *,struct TR_CallTarget *,class TR_InnerPreexistenceInfo *);1;TR;InlinerBase;0;0
inlineRecognizedMethod;inlineRecognizedMethod(TR::RecognizedMethod);1;TR;InlinerBase;0;1
inlineSynchronized;inlineSynchronized();1;TR;InlinerBase;0;0
inlineVirtuals;inlineVirtuals();1;TR;InlinerBase;0;0
isEDODisableInlinedProfilingInfo;isEDODisableInlinedProfilingInfo();1;TR;InlinerBase;0;0
linkOSRCodeBlocks;linkOSRCodeBlocks();1;TR;InlinerBase;0;0
operator=;operator=(class TR_InlinerBase &&);0;TR;InlinerBase;1;0
operator=;operator=(const class TR_InlinerBase &);0;TR;InlinerBase;1;0
operator=;operator=(class TR_DumbInliner &&);0;TR;DumbInliner;1;0
operator=;operator=(const class TR_DumbInliner &);0;TR;DumbInliner;1;0
operator=;operator=(class TR_InlineCall &&);0;TR;InlineCall;1;0
operator=;operator=(const class TR_InlineCall &);0;TR;InlineCall;1;0
performInlining;performInlining(TR::ResolvedMethodSymbol *);1;TR;InlinerBase;0;0
rematerializeCallArguments;rematerializeCallArguments(class TR_TransformInlinedFunction &,struct TR_VirtualGuardSelection *,TR::Node *,TR::Block *,TR::TreeTop *);1;TR;InlinerBase;0;0
replaceCallNode;replaceCallNode(TR::ResolvedMethodSymbol *,TR::Node *,rcount_t,TR::TreeTop *,TR::Node *,TR::Node *);1;TR;InlinerBase;0;0
replaceCallNodeReferences;replaceCallNodeReferences(TR::Node *,TR::Node *,uint32_t,TR::Node *,TR::Node *,rcount_t &);1;TR;InlinerBase;0;0
scaleSizeBasedOnBlockFrequency;scaleSizeBasedOnBlockFrequency(int32_t,int32_t,int32_t,class TR_ResolvedMethod *,TR::Node *,int32_t);1;TR;InlinerBase;0;0
setFirstPass;setFirstPass(_Bool);1;TR;InlinerBase;0;0
setInlineSynchronized;setInlineSynchronized(_Bool);1;TR;InlinerBase;0;0
setInlineThresholds;setInlineThresholds(TR::ResolvedMethodSymbol *);1;TR;InlinerBase;0;0
setInlineVirtuals;setInlineVirtuals(_Bool);1;TR;InlinerBase;0;0
setPolicy;setPolicy(class OMR_InlinerPolicy *);1;TR;InlinerBase;0;0
setSizeThreshold;setSizeThreshold(uint32_t);1;TR;InlinerBase;0;0
setStoreToCachedPrivateStatic;setStoreToCachedPrivateStatic(TR::Node *);1;TR;InlinerBase;0;0
setUtil;setUtil(class OMR_InlinerUtil *);1;TR;InlinerBase;0;0
supportsMultipleTargetInlining;supportsMultipleTargetInlining();1;TR;InlinerBase;0;1
trHeapMemory;trHeapMemory();1;TR;InlinerBase;0;0
trMemory;trMemory();1;TR;InlinerBase;0;0
trPersistentMemory;trPersistentMemory();1;TR;InlinerBase;0;0
trStackMemory;trStackMemory();1;TR;InlinerBase;0;0
tracer;tracer();1;TR;InlinerBase;0;0
tryToGenerateILForMethod;tryToGenerateILForMethod(TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,struct TR_CallTarget *);1;TR;InlinerBase;0;0
tryToInline;tryToInline(char *,struct TR_CallTarget *);1;TR;DumbInliner;0;0
tryToInlineTrivialMethod;tryToInlineTrivialMethod(class TR_CallStack *,struct TR_CallTarget *);1;TR;InlinerBase;0;0
~TR_DumbInliner;~TR_DumbInliner();1;TR;DumbInliner;1;0
~TR_InlineCall;~TR_InlineCall();1;TR;InlineCall;1;0
~TR_InlinerBase;~TR_InlinerBase();1;TR;InlinerBase;1;0
TR_FunctionPointerCallSite;TR_FunctionPointerCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool);1;TR;FunctionPointerCallSite;0;0
TR_IndirectCallSite;TR_IndirectCallSite(class TR_IndirectCallSite &&);1;TR;IndirectCallSite;1;0
TR_IndirectCallSite;TR_IndirectCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool);0;TR;IndirectCallSite;0;0
TR_IndirectCallSite;TR_IndirectCallSite(const class TR_IndirectCallSite &);0;TR;IndirectCallSite;1;0
addTargetIfMethodIsNotOverriden;addTargetIfMethodIsNotOverriden(class TR_InlinerBase *);1;TR;IndirectCallSite;0;0
addTargetIfMethodIsNotOverridenInReceiversHierarchy;addTargetIfMethodIsNotOverridenInReceiversHierarchy(class TR_InlinerBase *);1;TR;IndirectCallSite;0;0
addTargetIfThereIsSingleImplementer;addTargetIfThereIsSingleImplementer(class TR_InlinerBase *);1;TR;IndirectCallSite;0;0
extractAndLogClassArgument;extractAndLogClassArgument(class TR_InlinerBase *);1;TR;IndirectCallSite;0;0
findCallSiteTarget;findCallSiteTarget(class TR_CallStack *,class TR_InlinerBase *);1;TR;IndirectCallSite;0;1
findCallTargetUsingArgumentPreexistence;findCallTargetUsingArgumentPreexistence(class TR_InlinerBase *);1;TR;IndirectCallSite;0;1
findSingleJittedImplementer;findSingleJittedImplementer(class TR_InlinerBase *);1;TR;IndirectCallSite;0;1
getClassFromArgInfo;getClassFromArgInfo();1;TR;IndirectCallSite;0;0
getClassFromMethod;getClassFromMethod();1;TR;IndirectCallSite;0;1
getResolvedMethod;getResolvedMethod(class TR_OpaqueClassBlock *);1;TR;IndirectCallSite;0;1
hasFixedTypeArgInfo;hasFixedTypeArgInfo();1;TR;IndirectCallSite;0;0
hasResolvedTypeArgInfo;hasResolvedTypeArgInfo();1;TR;IndirectCallSite;0;0
name;name();1;TR;IndirectCallSite;0;0
operator=;operator=(const class TR_IndirectCallSite &);1;TR;IndirectCallSite;1;0
operator=;operator=(class TR_IndirectCallSite &&);0;TR;IndirectCallSite;1;0
operator=;operator=(const class TR_FunctionPointerCallSite &);0;TR;FunctionPointerCallSite;1;0
operator=;operator=(class TR_FunctionPointerCallSite &&);0;TR;FunctionPointerCallSite;1;0
tryToRefineReceiverClassBasedOnResolvedTypeArgInfo;tryToRefineReceiverClassBasedOnResolvedTypeArgInfo(class TR_InlinerBase *);1;TR;IndirectCallSite;0;0
~TR_FunctionPointerCallSite;~TR_FunctionPointerCallSite();1;TR;FunctionPointerCallSite;1;0
~TR_IndirectCallSite;~TR_IndirectCallSite();1;TR;IndirectCallSite;1;0
TR_InlinerTracer;TR_InlinerTracer(TR::Compilation *,class TR_FrontEnd *,TR::Optimization *);1;TR;InlinerTracer;0;0
TR_LogTracer;TR_LogTracer(TR::Compilation *,TR::Optimization *);1;TR;LogTracer;0;0
alwaysTraceM;alwaysTraceM(const char *);1;TR;LogTracer;0;0
comp;comp();1;TR;LogTracer;0;0
debugLevel;debugLevel();1;TR;LogTracer;0;0
dumpCallGraphs;dumpCallGraphs(TR_LinkHead<struct TR_CallTarget> *);1;TR;InlinerTracer;0;0
dumpCallSite;dumpCallSite(struct TR_CallSite *,const char *);1;TR;InlinerTracer;0;0
dumpCallStack;dumpCallStack(class TR_CallStack *,const char *);1;TR;InlinerTracer;0;0
dumpCallTarget;dumpCallTarget(struct TR_CallTarget *,const char *);1;TR;InlinerTracer;0;0
dumpDeadCalls;dumpDeadCalls(TR_LinkHead<struct TR_CallSite> *);1;TR;InlinerTracer;0;0
dumpInline;dumpInline(TR_LinkHead<struct TR_CallTarget> *,const char *);1;TR;InlinerTracer;0;0
dumpPartialInline;dumpPartialInline(class TR_InlineBlocks *);1;TR;InlinerTracer;0;0
dumpPrexArgInfo;dumpPrexArgInfo(class TR_PrexArgInfo *);1;TR;InlinerTracer;0;0
fe;fe();1;TR;InlinerTracer;0;0
getFailureReasonString;getFailureReasonString(enum TR_InlinerFailureReason);1;TR;InlinerTracer;0;0
getGuardKindString;getGuardKindString(struct TR_VirtualGuardSelection *);1;TR;InlinerTracer;0;0
getGuardTypeString;getGuardTypeString(struct TR_VirtualGuardSelection *);1;TR;InlinerTracer;0;0
heuristicLevel;heuristicLevel();1;TR;LogTracer;0;0
insertCounter;insertCounter(enum TR_InlinerFailureReason,TR::TreeTop *);1;TR;InlinerTracer;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;InlinerTracer;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;InlinerTracer;0;0
operator delete;operator delete(void *,size_t);1;TR;InlinerTracer;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;InlinerTracer;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;InlinerTracer;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;InlinerTracer;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;InlinerTracer;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;InlinerTracer;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;InlinerTracer;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;InlinerTracer;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;InlinerTracer;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;TR;InlinerTracer;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;InlinerTracer;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;InlinerTracer;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;InlinerTracer;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;InlinerTracer;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;InlinerTracer;0;0
operator new;operator new(size_t,TR::Region &);0;TR;InlinerTracer;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;InlinerTracer;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;InlinerTracer;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;InlinerTracer;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;InlinerTracer;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;InlinerTracer;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;InlinerTracer;0;0
partialLevel;partialLevel();1;TR;InlinerTracer;0;0
partialTraceM;partialTraceM(const char *);1;TR;InlinerTracer;0;0
setTraceLevelToDebug;setTraceLevelToDebug();1;TR;LogTracer;0;0
trHeapMemory;trHeapMemory();1;TR;InlinerTracer;0;0
trMemory;trMemory();1;TR;InlinerTracer;0;0
trPersistentMemory;trPersistentMemory();1;TR;InlinerTracer;0;0
trStackMemory;trStackMemory();1;TR;InlinerTracer;0;0
TR_Dominators;TR_Dominators(const class TR_Dominators &);1;TR;Dominators;1;0
TR_Dominators;TR_Dominators(TR::Compilation *,_Bool);0;TR;Dominators;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;Dominators;0;0
operator delete;operator delete(void *,size_t);0;TR;Dominators;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;TR;Dominators;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Dominators;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;Dominators;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;Dominators;0;0
TR_RegisterCandidate;TR_RegisterCandidate(class TR_RegisterCandidate &&);1;TR;RegisterCandidate;1;0
TR_RegisterCandidate;TR_RegisterCandidate(TR::SymbolReference *,TR::Region &);0;TR;RegisterCandidate;0;0
addAllBlocks;addAllBlocks();1;TR;RegisterCandidate;0;0
addAllBlocksInStructure;addAllBlocksInStructure(class TR_Structure *,TR::Compilation *,const char *,vcount_t,_Bool);1;TR;RegisterCandidate;0;0
addBlock;addBlock(TR::Block *,int32_t);1;TR;RegisterCandidate;0;0
addLoopExitBlock;addLoopExitBlock(TR::Block *);1;TR;RegisterCandidate;0;0
addLoopWithHole;addLoopWithHole(class TR_Structure *);1;TR;RegisterCandidate;0;0
addStore;addStore(TR::TreeTop *);1;TR;RegisterCandidate;0;0
canAllocateDespiteAliases;canAllocateDespiteAliases(TR::Compilation *);1;TR;RegisterCandidate;0;0
canBeReprioritized;canBeReprioritized();1;TR;RegisterCandidate;0;0
countNumberOfLoadsAndStoresInBlocks;countNumberOfLoadsAndStoresInBlocks(List<TR::Block> *);1;TR;RegisterCandidate;0;0
extendLiveRangesForLiveOnExit;extendLiveRangesForLiveOnExit(TR::Compilation *,TR::Block **,TR_Array<TR::Block *> &);1;TR;RegisterCandidate;0;0
extendedLiveRange;extendedLiveRange();1;TR;RegisterCandidate;0;0
find;find(TR::Block *);1;TR;RegisterCandidate;0;0
getBlocksLiveOnEntry;getBlocksLiveOnEntry();1;TR;RegisterCandidate;0;0
getBlocksLiveOnExit;getBlocksLiveOnExit();1;TR;RegisterCandidate;0;0
getDataType;getDataType();1;TR;RegisterCandidate;0;0
getGlobalRegisterNumber;getGlobalRegisterNumber();1;TR;RegisterCandidate;0;0
getHighGlobalRegisterNumber;getHighGlobalRegisterNumber();1;TR;RegisterCandidate;0;0
getLastLoad;getLastLoad();1;TR;RegisterCandidate;0;0
getLoopsWithHoles;getLoopsWithHoles();1;TR;RegisterCandidate;0;0
getLowGlobalRegisterNumber;getLowGlobalRegisterNumber();1;TR;RegisterCandidate;0;0
getMostRecentValue;getMostRecentValue();1;TR;RegisterCandidate;0;0
getRegisterKinds;getRegisterKinds();1;TR;RegisterCandidate;0;0
getReprioritized;getReprioritized();1;TR;RegisterCandidate;0;0
getRestoreSymbolReference;getRestoreSymbolReference();1;TR;RegisterCandidate;0;0
getSplitSymbolReference;getSplitSymbolReference();1;TR;RegisterCandidate;0;0
getStores;getStores();1;TR;RegisterCandidate;0;0
getSymbol;getSymbol();1;TR;RegisterCandidate;0;0
getSymbolReference;getSymbolReference();1;TR;RegisterCandidate;0;0
getType;getType();1;TR;RegisterCandidate;0;0
getValueModified;getValueModified();1;TR;RegisterCandidate;0;0
getWeight;getWeight();1;TR;RegisterCandidate;0;0
hasBlock;hasBlock(TR::Block *);1;TR;RegisterCandidate;0;0
hasLoopExitBlock;hasLoopExitBlock(TR::Block *);1;TR;RegisterCandidate;0;0
hasSameGlobalRegisterNumberAs;hasSameGlobalRegisterNumberAs(TR::Node *,TR::Compilation *);1;TR;RegisterCandidate;0;0
initialBlocksWeightComputed;initialBlocksWeightComputed();1;TR;RegisterCandidate;0;0
is8BitGlobalGPR;is8BitGlobalGPR();1;TR;RegisterCandidate;0;0
isAllBlocks;isAllBlocks();1;TR;RegisterCandidate;0;0
isDontAssignVMThreadRegister;isDontAssignVMThreadRegister();1;TR;RegisterCandidate;0;0
isHighWordZero;isHighWordZero();1;TR;RegisterCandidate;0;0
isLiveAcrossExceptionEdge;isLiveAcrossExceptionEdge();1;TR;RegisterCandidate;0;0
operator=;operator=(class TR_RegisterCandidate &&);1;TR;RegisterCandidate;1;0
prevBlockTooRegisterConstrained;prevBlockTooRegisterConstrained(TR::Compilation *,TR::Block *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &);1;TR;RegisterCandidate;0;0
processLiveOnEntryBlocks;processLiveOnEntryBlocks(TR::Block **,int32_t *,TR::Compilation *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &,class TR_BitVector *,TR_Array<TR::Block *> &,_Bool);1;TR;RegisterCandidate;0;0
rcNeeds2Regs;rcNeeds2Regs(TR::Compilation *);1;TR;RegisterCandidate;0;0
recalculateWeight;recalculateWeight(TR::Block **,int32_t *,TR::Compilation *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &,class TR_BitVector *,TR_Array<TR::Block *> &);1;TR;RegisterCandidate;0;0
removeAssignedCandidateFromLoop;removeAssignedCandidateFromLoop(TR::Compilation *,class TR_Structure *,int32_t,class TR_BitVector *,class TR_BitVector *,_Bool);1;TR;RegisterCandidate;0;0
removeBlock;removeBlock(TR::Block *);1;TR;RegisterCandidate;0;0
removeLoopExitBlock;removeLoopExitBlock(TR::Block *);1;TR;RegisterCandidate;0;0
setAllBlocks;setAllBlocks(_Bool);1;TR;RegisterCandidate;0;0
setDontAssignVMThreadRegister;setDontAssignVMThreadRegister(_Bool);1;TR;RegisterCandidate;0;0
setExtendedLiveRange;setExtendedLiveRange(_Bool);1;TR;RegisterCandidate;0;0
setGlobalRegisterNumber;setGlobalRegisterNumber(TR_GlobalRegisterNumber);1;TR;RegisterCandidate;0;0
setHighGlobalRegisterNumber;setHighGlobalRegisterNumber(TR_GlobalRegisterNumber);1;TR;RegisterCandidate;0;0
setHighWordZero;setHighWordZero(_Bool);1;TR;RegisterCandidate;0;0
setInitialBlocksWeightComputed;setInitialBlocksWeightComputed(_Bool);1;TR;RegisterCandidate;0;0
setIs8BitGlobalGPR;setIs8BitGlobalGPR(_Bool);1;TR;RegisterCandidate;0;0
setLastLoad;setLastLoad(TR::Node *);1;TR;RegisterCandidate;0;0
setLiveAcrossExceptionEdge;setLiveAcrossExceptionEdge(_Bool);1;TR;RegisterCandidate;0;0
setLowGlobalRegisterNumber;setLowGlobalRegisterNumber(TR_GlobalRegisterNumber);1;TR;RegisterCandidate;0;0
setMaxReprioritized;setMaxReprioritized(uint8_t);1;TR;RegisterCandidate;0;0
setMostRecentValue;setMostRecentValue(TR::Node *);1;TR;RegisterCandidate;0;0
setReprioritized;setReprioritized();1;TR;RegisterCandidate;0;0
setRestoreSymbolReference;setRestoreSymbolReference(TR::SymbolReference *);1;TR;RegisterCandidate;0;0
setSplitSymbolReference;setSplitSymbolReference(TR::SymbolReference *);1;TR;RegisterCandidate;0;0
setValueModified;setValueModified(_Bool);1;TR;RegisterCandidate;0;0
setWeight;setWeight(TR::Block **,int32_t *,TR::Compilation *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &,class TR_BitVector *,TR_Array<TR::Block *> &,class TR_BitVector &,class TR_BitVector &);1;TR;RegisterCandidate;0;0
symbolIsLive;symbolIsLive(TR::Block *);1;TR;RegisterCandidate;0;0
TR_TrivialInliner;TR_TrivialInliner(const class TR_TrivialInliner &);1;TR;TrivialInliner;1;0
TR_TrivialInliner;TR_TrivialInliner(class TR_TrivialInliner &&);0;TR;TrivialInliner;1;0
TR_TrivialInliner;TR_TrivialInliner(TR::OptimizationManager *);0;TR;TrivialInliner;0;0
create;create(TR::OptimizationManager *);1;TR;TrivialInliner;0;0
operator=;operator=(class TR_TrivialInliner &&);0;TR;TrivialInliner;1;0
operator=;operator=(const class TR_TrivialInliner &);0;TR;TrivialInliner;1;0
~TR_TrivialInliner;~TR_TrivialInliner();1;TR;TrivialInliner;1;1
Symbol;Symbol(TR::DataType,uint32_t);1;OMR;Symbol;0;0
operator delete;operator delete(void *,size_t);1;OMR;Instruction;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Instruction;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Instruction;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Instruction;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Instruction;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Instruction;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;AliasBuilder;0;0
allocateCodeMemory;allocateCodeMemory(uint32_t,uint32_t,uint8_t **,_Bool);1;OMR;CodeGenerator;0;0
allocateCodeMemory;allocateCodeMemory(uint32_t,_Bool,_Bool);0;OMR;CodeGenerator;0;0
considerTypeForGRA;considerTypeForGRA(TR::SymbolReference *);1;OMR;CodeGenerator;0;0
considerTypeForGRA;considerTypeForGRA(TR::DataType);0;OMR;CodeGenerator;0;0
fe;fe();1;OMR;CodeGenerator;0;1
generateDebugCounter;generateDebugCounter(TR::Instruction *,const char *,TR::Register *,int8_t,int32_t);1;OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,TR::RegisterDependencyConditions *);1;OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,class TR_ScratchRegisterManager &);0;OMR;CodeGenerator;0;0
identifyUnneededByteConvNodes;identifyUnneededByteConvNodes();1;OMR;CodeGenerator;0;0
identifyUnneededByteConvNodes;identifyUnneededByteConvNodes(TR::Node *,TR::TreeTop *,vcount_t,TR::DataType);0;OMR;CodeGenerator;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Compilation;0;0
resetVisitCounts;resetVisitCounts(vcount_t,TR::TreeTop *);1;OMR;Compilation;0;0
ILOpCode;ILOpCode(const class OMR::ILOpCode &);1;OMR;ILOpCode;1;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *);1;OMR;Node;0;0
staticName;staticName(int32_t,class TR_Memory *,enum TR_AllocationKind);1;TR;ResolvedMethod;0;1
staticName;staticName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind);0;TR;ResolvedMethod;0;1
SymbolReference;SymbolReference(class TR::SymbolReference &&);0;TR;SymbolReference;1;0
SymbolReference;SymbolReference(const class TR::SymbolReference &);0;TR;SymbolReference;1;0
operator delete;operator delete(void *,TR::Region &);1;OMR;SymbolReference;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;SymbolReference;0;0
setAliasedTo;setAliasedTo(class TR_BitVector &,TR::SymbolReferenceTable *,_Bool);1;OMR;SymbolReference;0;1
setAliasedTo;setAliasedTo(TR::SymbolReference *,_Bool);0;OMR;SymbolReference;0;1
findAvailableAuto;findAvailableAuto(TR::DataType,_Bool,_Bool);1;OMR;SymbolReferenceTable;0;0
findAvailableAuto;findAvailableAuto(List<TR::SymbolReference> &,TR::DataType,_Bool,_Bool);0;OMR;SymbolReferenceTable;0;0
findOrCreateSymRefWithKnownObject;findOrCreateSymRefWithKnownObject(TR::SymbolReference *,TR::class KnownObjectTable::Index);1;OMR;SymbolReferenceTable;0;0
findOrCreateSymRefWithKnownObject;findOrCreateSymRefWithKnownObject(TR::SymbolReference *,uintptrj_t *);0;OMR;SymbolReferenceTable;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;SymbolReferenceTable;0;0
TR_SymRefIterator;TR_SymRefIterator(const class TR_SymRefIterator &);1;TR;SymRefIterator;1;0
TR_SymRefIterator;TR_SymRefIterator(class TR_SymRefIterator &&);0;TR;SymRefIterator;1;0
TR_SymRefIterator;TR_SymRefIterator(class TR_BitVector &,TR::SymbolReferenceTable *);0;TR;SymRefIterator;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Snippet;0;0
operator=;operator=(const class OMR::Snippet &);1;OMR;Snippet;1;0
operator=;operator=(class OMR::Snippet &&);0;OMR;Snippet;1;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;AliasBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;AliasBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;CFG;0;0
operator delete;operator delete(void *,size_t);0;OMR;CFG;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;CFG;0;0
CodeGenPhase;CodeGenPhase(class OMR::CodeGenPhase &&);1;OMR;CodeGenPhase;1;0
SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t,const char *);1;OMR;SymbolReference;0;0
SymbolReference;SymbolReference(const class OMR::SymbolReference &);0;OMR;SymbolReference;1;0
AutomaticSymbol;AutomaticSymbol(const class TR::AutomaticSymbol &);0;TR;AutomaticSymbol;1;0
AutomaticSymbol;AutomaticSymbol(class TR::AutomaticSymbol &&);0;TR;AutomaticSymbol;1;0
RegisterMappedSymbol;RegisterMappedSymbol(const class OMR::RegisterMappedSymbol &);1;OMR;RegisterMappedSymbol;1;0
RegisterMappedSymbol;RegisterMappedSymbol(class OMR::RegisterMappedSymbol &&);0;OMR;RegisterMappedSymbol;1;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Symbol;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);1;OMR;Node;0;0
TR_IGBase;TR_IGBase(class TR_IGBase &&);1;TR;IGBase;1;0
TR_IGBase;TR_IGBase(const class TR_IGBase &);0;TR;IGBase;1;0
TR_InterferenceGraph;TR_InterferenceGraph(TR::Compilation *);1;TR;InterferenceGraph;0;0
operator delete;operator delete(void *,size_t);1;TR;IGBase;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;IGBase;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;IGBase;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;IGBase;0;0
Symbol;Symbol(TR::DataType);1;OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Symbol;0;0
LabelSymbol;LabelSymbol(class TR::LabelSymbol &&);0;TR;LabelSymbol;1;0
LabelSymbol;LabelSymbol(const class TR::LabelSymbol &);0;TR;LabelSymbol;1;0
setEstimatedCodeLocation;setEstimatedCodeLocation(int32_t);1;OMR;LabelSymbol;0;0
setEstimatedCodeLocation;setEstimatedCodeLocation(int32_t);1;OMR;Snippet;0;0
GCRegisterMap;GCRegisterMap(class OMR::GCRegisterMap &&);1;OMR;GCRegisterMap;1;0
GCRegisterMap;GCRegisterMap();0;OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;GCRegisterMap;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;Symbol;0;0
ParameterSymbol;ParameterSymbol(const class OMR::ParameterSymbol &);1;OMR;ParameterSymbol;1;0
ParameterSymbol;ParameterSymbol(class OMR::ParameterSymbol &&);0;OMR;ParameterSymbol;1;0
ParameterSymbol;ParameterSymbol(const class TR::ParameterSymbol &);0;TR;ParameterSymbol;1;0
ParameterSymbol;ParameterSymbol(class TR::ParameterSymbol &&);0;TR;ParameterSymbol;1;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Symbol;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Symbol;0;0
SymbolReferenceTable;SymbolReferenceTable(class OMR::SymbolReferenceTable &&);1;OMR;SymbolReferenceTable;1;0
SymbolReferenceTable;SymbolReferenceTable(const class OMR::SymbolReferenceTable &);0;OMR;SymbolReferenceTable;1;0
getSymRef;getSymRef(int32_t);1;OMR;SymbolReferenceTable;0;0
getSymRef;getSymRef(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol);0;OMR;SymbolReferenceTable;0;0
ResolvedMethodSymbol;ResolvedMethodSymbol(class TR::ResolvedMethodSymbol &&);0;TR;ResolvedMethodSymbol;1;0
ResolvedMethodSymbol;ResolvedMethodSymbol(const class TR::ResolvedMethodSymbol &);0;TR;ResolvedMethodSymbol;1;0
Linkage;Linkage(const class OMR::Linkage &);1;OMR;Linkage;1;0
Linkage;Linkage();0;OMR;Linkage;0;0
Linkage;Linkage(class OMR::Linkage &&);0;OMR;Linkage;1;0
Linkage;Linkage(const class OMR::X86::Linkage &);0;OMR::X86;Linkage;1;0
Linkage;Linkage(class OMR::X86::Linkage &&);0;OMR::X86;Linkage;1;0
Linkage;Linkage(TR::CodeGenerator *);0;OMR::X86;Linkage;0;0
alignLocalObjectWithCollectedFields;alignLocalObjectWithCollectedFields(uint32_t &);1;OMR::X86;Linkage;0;0
alignLocalObjectWithoutCollectedFields;alignLocalObjectWithoutCollectedFields(uint32_t &);1;OMR::X86;Linkage;0;0
argumentRegisterKind;argumentRegisterKind(TR::Node *);1;OMR;Linkage;0;1
associatePreservedRegisters;associatePreservedRegisters(TR::RegisterDependencyConditions *,TR::Register *);1;OMR::X86;Linkage;0;0
buildDirectDispatch;buildDirectDispatch(TR::Node *,_Bool);1;OMR::X86;Linkage;0;1
buildIndirectDispatch;buildIndirectDispatch(TR::Node *);1;OMR::X86;Linkage;0;1
cg;cg();1;OMR::X86;Linkage;0;0
coerceFPReturnValueToXMMR;coerceFPReturnValueToXMMR(TR::Node *,TR::RegisterDependencyConditions *,TR::MethodSymbol *,TR::Register *);1;OMR::X86;Linkage;0;0
comp;comp();1;OMR::X86;Linkage;0;0
composeSavesRestores;composeSavesRestores(TR::Instruction *,int32_t,int32_t,int32_t,int32_t,_Bool);1;OMR;Linkage;0;1
copyGlRegDepsToParameterSymbols;copyGlRegDepsToParameterSymbols(TR::Node *,TR::CodeGenerator *);1;OMR::X86;Linkage;0;1
copyLinkageInfoToParameterSymbols;copyLinkageInfoToParameterSymbols();1;OMR::X86;Linkage;0;1
copyStackParametersToLinkageRegisters;copyStackParametersToLinkageRegisters(TR::Instruction *);1;OMR::X86;Linkage;0;1
createEpilogue;createEpilogue(TR::Instruction *);1;OMR;Linkage;0;1
createPrologue;createPrologue(TR::Instruction *);1;OMR;Linkage;0;1
deallocateFrameIfNeeded;deallocateFrameIfNeeded(TR::Instruction *,int32_t);1;OMR::X86;Linkage;0;1
ensureMinimumFirstInstructionSize;ensureMinimumFirstInstructionSize(uint8_t);1;OMR::X86;Linkage;0;0
fe;fe();1;OMR::X86;Linkage;0;1
findReturnRegisterFromDependencies;findReturnRegisterFromDependencies(TR::Node *,TR::RegisterDependencyConditions *,TR::MethodSymbol *,_Bool);1;OMR::X86;Linkage;0;0
flushArguments;flushArguments(TR::Node *,uint8_t *,_Bool,int32_t *,_Bool,_Bool);1;OMR::X86;Linkage;0;1
flushArguments;flushArguments(TR::Instruction *,TR::ResolvedMethodSymbol *,_Bool,_Bool);0;OMR::X86;Linkage;0;1
fullRegisterMovType;fullRegisterMovType(TR::Register *);1;OMR::X86;Linkage;0;0
getKilledRegisters;getKilledRegisters(TR::Node *);1;OMR;Linkage;0;1
getMinimumFirstInstructionSize;getMinimumFirstInstructionSize();1;OMR::X86;Linkage;0;0
getProperties;getProperties();1;OMR::X86;Linkage;0;0
getRegisterSaveSize;getRegisterSaveSize();1;OMR;Linkage;0;1
getRightToLeft;getRightToLeft();1;OMR;Linkage;0;1
getSavedRegisters;getSavedRegisters(TR::Node *,int32_t);1;OMR;Linkage;0;1
hasToBeOnStack;hasToBeOnStack(TR::ParameterSymbol *);1;OMR;Linkage;0;1
isFloat;isFloat(TR_MovDataTypes);1;OMR::X86;Linkage;0;0
isSpecialNonVolatileArgumentRegister;isSpecialNonVolatileArgumentRegister(int8_t);1;OMR;Linkage;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;Linkage;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;Linkage;0;0
loadArguments;loadArguments(TR::Node *,uint8_t *,_Bool,int32_t *,_Bool);1;OMR::X86;Linkage;0;0
loadArguments;loadArguments(TR::Instruction *,TR::ResolvedMethodSymbol *);0;OMR::X86;Linkage;0;0
machine;machine();1;OMR::X86;Linkage;0;0
mapCompactedStack;mapCompactedStack(TR::ResolvedMethodSymbol *);1;OMR::X86;Linkage;0;0
mapIncomingParms;mapIncomingParms(TR::ResolvedMethodSymbol *);1;OMR::X86;Linkage;0;1
mapPreservedRegistersToStackOffsets;mapPreservedRegistersToStackOffsets(int32_t *,int32_t &,class TR_BitVector *&);1;OMR;Linkage;0;1
mapSingleAutomatic;mapSingleAutomatic(TR::AutomaticSymbol *,uint32_t &);1;OMR;Linkage;0;1
mapSingleAutomatic;mapSingleAutomatic(TR::AutomaticSymbol *,uint32_t,uint32_t &);0;OMR::X86;Linkage;0;0
mapStack;mapStack(TR::ResolvedMethodSymbol *);1;OMR;Linkage;0;1
movOpcodes;movOpcodes(TR_MovOperandTypes,TR_MovDataTypes);1;OMR::X86;Linkage;0;0
movRegisterKind;movRegisterKind(TR_MovDataTypes);1;OMR::X86;Linkage;0;0
movType;movType(TR::DataType);1;OMR::X86;Linkage;0;0
needsFrameDeallocation;needsFrameDeallocation();1;OMR::X86;Linkage;0;1
numArgumentRegisters;numArgumentRegisters(enum TR_RegisterKinds);1;OMR;Linkage;0;1
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Linkage;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Linkage;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Linkage;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;Linkage;0;0
operator delete;operator delete(void *,size_t);0;OMR;Linkage;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;Linkage;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Linkage;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Linkage;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Linkage;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;Linkage;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;Linkage;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Linkage;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;Linkage;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Linkage;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;Linkage;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;Linkage;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Linkage;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;Linkage;0;0
operator=;operator=(class OMR::Linkage &&);1;OMR;Linkage;1;0
operator=;operator=(const class OMR::Linkage &);0;OMR;Linkage;1;0
operator=;operator=(class OMR::X86::Linkage &&);0;OMR::X86;Linkage;1;0
operator=;operator=(const class OMR::X86::Linkage &);0;OMR::X86;Linkage;1;0
operator=;operator=(class TR::Linkage &&);0;TR;Linkage;1;0
operator=;operator=(const class TR::Linkage &);0;TR;Linkage;1;0
paramMovType;paramMovType(TR::ParameterSymbol *);1;OMR::X86;Linkage;0;0
restorePreservedRegister;restorePreservedRegister(TR::Instruction *,int32_t,int32_t);1;OMR;Linkage;0;1
savePreservedRegister;savePreservedRegister(TR::Instruction *,int32_t,int32_t);1;OMR;Linkage;0;1
self;self();1;OMR;Linkage;0;0
setParameterLinkageRegisterIndex;setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *,List<TR::ParameterSymbol> &);1;OMR;Linkage;0;1
setParameterLinkageRegisterIndex;setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *);0;OMR;Linkage;0;1
stopUsingKilledRegisters;stopUsingKilledRegisters(TR::RegisterDependencyConditions *,TR::Register *);1;OMR::X86;Linkage;0;0
storeArguments;storeArguments(TR::Node *,uint8_t *,_Bool,int32_t *);1;OMR::X86;Linkage;0;0
storeArguments;storeArguments(TR::Instruction *,TR::ResolvedMethodSymbol *);0;OMR::X86;Linkage;0;0
trHeapMemory;trHeapMemory();1;OMR::X86;Linkage;0;0
trMemory;trMemory();1;OMR::X86;Linkage;0;0
trStackMemory;trStackMemory();1;OMR::X86;Linkage;0;0
useCachedStaticAreaAddresses;useCachedStaticAreaAddresses(TR::Compilation *);1;OMR;Linkage;0;1
~Linkage;~Linkage();1;OMR;Linkage;1;0
CFG;CFG(const class TR::CFG &);0;TR;CFG;1;0
CFG;CFG(class TR::CFG &&);0;TR;CFG;1;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;CodeGenerator;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Compilation;0;0
IlGenRequest;IlGenRequest(const class OMR::IlGenRequest &);1;OMR;IlGenRequest;1;0
IlGenRequest;IlGenRequest(class OMR::IlGenRequest &&);0;OMR;IlGenRequest;1;0
InliningIlGenRequest;InliningIlGenRequest(class TR::InliningIlGenRequest &&);1;TR;InliningIlGenRequest;1;0
InliningIlGenRequest;InliningIlGenRequest(const class TR::InliningIlGenRequest &);0;TR;InliningIlGenRequest;1;0
fieldName;fieldName(int32_t,class TR_Memory *,enum TR_AllocationKind);1;TR;ResolvedMethod;0;1
fieldName;fieldName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind);0;TR;ResolvedMethod;0;1
operator=;operator=(const class TR_Dominators &);1;TR;Dominators;1;0
operator=;operator=(class TR_Dominators &&);0;TR;Dominators;1;0
StaticSymbol;StaticSymbol(class TR::StaticSymbol &&);0;TR;StaticSymbol;1;0
StaticSymbol;StaticSymbol(const class TR::StaticSymbol &);0;TR;StaticSymbol;1;0
BSDTimer;BSDTimer(class CS2::BSDTimer &&);1;CS2;BSDTimer;1;0
BSDTimer;BSDTimer(const class CS2::BSDTimer &);0;CS2;BSDTimer;1;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Symbol;0;0
TR_LoadExtensions;TR_LoadExtensions(class TR_LoadExtensions &&);1;TR;LoadExtensions;1;0
TR_LoadExtensions;TR_LoadExtensions(const class TR_LoadExtensions &);0;TR;LoadExtensions;1;0
TR_LoadExtensions;TR_LoadExtensions(TR::OptimizationManager *);0;TR;LoadExtensions;0;0
canSkipConversion;canSkipConversion(TR::Node *,TR::Node *,_Bool &);1;TR;LoadExtensions;0;0
create;create(TR::OptimizationManager *);1;TR;LoadExtensions;0;0
findPreferredLoadExtensions;findPreferredLoadExtensions(TR::Node *);1;TR;LoadExtensions;0;0
flagPreferredLoadExtensions;flagPreferredLoadExtensions(TR::Node *);1;TR;LoadExtensions;0;0
getExtensionPreference;getExtensionPreference(TR::Node *);1;TR;LoadExtensions;0;0
isSupportedLoad;isSupportedLoad(TR::Node *);1;TR;LoadExtensions;0;0
isSupportedType;isSupportedType(TR::Node *);1;TR;LoadExtensions;0;0
operator=;operator=(class TR_LoadExtensions &&);0;TR;LoadExtensions;1;0
operator=;operator=(const class TR_LoadExtensions &);0;TR;LoadExtensions;1;0
setExtensionPreference;setExtensionPreference(TR::Node *,TR::Node *);1;TR;LoadExtensions;0;0
~TR_LoadExtensions;~TR_LoadExtensions();1;TR;LoadExtensions;1;1
FlattenRegisterPairs;FlattenRegisterPairs(TR_Queue<TR::Register> *);1;OMR;RegisterPair;0;1
RegisterPair;RegisterPair(const class OMR::RegisterPair &);1;OMR;RegisterPair;1;0
RegisterPair;RegisterPair(class OMR::RegisterPair &&);0;OMR;RegisterPair;1;0
RegisterPair;RegisterPair(TR::Register *,TR::Register *);0;OMR;RegisterPair;0;0
RegisterPair;RegisterPair(enum TR_RegisterKinds);0;OMR;RegisterPair;0;0
RegisterPair;RegisterPair();0;OMR;RegisterPair;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Register;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;Register;0;0
operator=;operator=(class OMR::RegisterPair &&);0;OMR;RegisterPair;1;0
operator=;operator=(const class OMR::RegisterPair &);0;OMR;RegisterPair;1;0
operator=;operator=(class TR::RegisterPair &&);0;TR;RegisterPair;1;0
operator=;operator=(const class TR::RegisterPair &);0;TR;RegisterPair;1;0
setHighOrder;setHighOrder(TR::Register *,TR::CodeGenerator *);1;OMR;RegisterPair;0;0
setLowOrder;setLowOrder(TR::Register *,TR::CodeGenerator *);1;OMR;RegisterPair;0;0
usesRegister;usesRegister(TR::Register *);1;OMR;RegisterPair;0;1
~RegisterPair;~RegisterPair();1;OMR;RegisterPair;1;0
fe;fe();1;OMR::X86;Linkage;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;CodeGenerator;0;0
getOwningMethodSymbol;getOwningMethodSymbol(class mcount_t);1;OMR;Compilation;0;0
getOwningMethodSymbol;getOwningMethodSymbol(class TR_OpaqueMethodBlock *);0;OMR;Compilation;0;0
incInlineDepth;incInlineDepth(TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,int32_t,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *);1;OMR;Compilation;0;0
incInlineDepth;incInlineDepth(class TR_OpaqueMethodBlock *,TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *);0;OMR;Compilation;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);1;OMR;Node;0;0
TR_HashValueNumberInfo;TR_HashValueNumberInfo(TR::Compilation *,TR::Optimizer *,_Bool,_Bool,_Bool);1;TR;HashValueNumberInfo;0;0
TR_HashValueNumberInfo;TR_HashValueNumberInfo(class TR_HashValueNumberInfo &&);0;TR;HashValueNumberInfo;1;0
TR_ValueNumberInfo;TR_ValueNumberInfo(class TR_ValueNumberInfo &);1;TR;ValueNumberInfo;1;0
TR_ValueNumberInfo;TR_ValueNumberInfo(TR::Compilation *,TR::Optimizer *,_Bool,_Bool,_Bool);0;TR;ValueNumberInfo;0;0
TR_ValueNumberInfo;TR_ValueNumberInfo(TR::Compilation *);0;TR;ValueNumberInfo;0;0
allocateNonShareableValueNumbers;allocateNonShareableValueNumbers();1;TR;ValueNumberInfo;0;1
allocateParmValueNumbers;allocateParmValueNumbers();1;TR;ValueNumberInfo;0;1
allocateShareableValueNumbers;allocateShareableValueNumbers();1;TR;ValueNumberInfo;0;1
allocateValueNumber;allocateValueNumber(TR::Node *);1;TR;ValueNumberInfo;0;1
allocateValueNumber;allocateValueNumber(TR::Node *,vcount_t);0;TR;ValueNumberInfo;0;1
allocator;allocator();1;TR;ValueNumberInfo;0;0
buildValueNumberInfo;buildValueNumberInfo();1;TR;ValueNumberInfo;0;0
canShareValueNumber;canShareValueNumber(TR::Node *);1;TR;ValueNumberInfo;0;0
changeValueNumber;changeValueNumber(TR::Node *,int32_t);1;TR;ValueNumberInfo;0;0
comp;comp();1;TR;ValueNumberInfo;0;0
congruentNodes;congruentNodes(TR::Node *,TR::Node *);1;TR;ValueNumberInfo;0;0
getNext;getNext(TR::Node *);1;TR;ValueNumberInfo;0;0
getNode;getNode(int32_t);1;TR;ValueNumberInfo;0;0
getNumberOfNodes;getNumberOfNodes();1;TR;ValueNumberInfo;0;0
getNumberOfParmValues;getNumberOfParmValues();1;TR;ValueNumberInfo;0;0
getNumberOfShareableValues;getNumberOfShareableValues();1;TR;ValueNumberInfo;0;0
getNumberOfValues;getNumberOfValues();1;TR;ValueNumberInfo;0;0
getVN;getVN(TR::Node *);1;TR;ValueNumberInfo;0;1
getValueNumber;getValueNumber(TR::Node *);1;TR;ValueNumberInfo;0;0
getValueNumberForLoad;getValueNumberForLoad(TR::Node *);1;TR;ValueNumberInfo;0;1
growTo;growTo(int32_t);1;TR;ValueNumberInfo;0;0
hasGlobalsValueNumbers;hasGlobalsValueNumbers();1;TR;ValueNumberInfo;0;0
hash;hash(TR::Node *);1;TR;ValueNumberInfo;0;0
infoIsValid;infoIsValid();1;TR;ValueNumberInfo;0;0
initializeNode;initializeNode(TR::Node *,int32_t &);1;TR;ValueNumberInfo;0;1
operator delete;operator delete(void *,size_t);1;TR;ValueNumberInfo;0;0
operator new;operator new(size_t,TR::Allocator);1;TR;ValueNumberInfo;0;0
operator=;operator=(const class TR_ValueNumberInfo &);1;TR;ValueNumberInfo;1;0
operator=;operator=(class TR_HashValueNumberInfo &&);0;TR;HashValueNumberInfo;1;0
operator=;operator=(const class TR_HashValueNumberInfo &);0;TR;HashValueNumberInfo;1;0
optimizer;optimizer();1;TR;ValueNumberInfo;0;0
printValueNumberInfo;printValueNumberInfo(TR::Node *);1;TR;ValueNumberInfo;0;0
removeNodeInfo;removeNodeInfo(TR::Node *);1;TR;ValueNumberInfo;0;0
setUniqueValueNumber;setUniqueValueNumber(TR::Node *);1;TR;ValueNumberInfo;0;0
setValueNumber;setValueNumber(TR::Node *,TR::Node *);1;TR;ValueNumberInfo;0;0
trHeapMemory;trHeapMemory();1;TR;ValueNumberInfo;0;0
trMemory;trMemory();1;TR;ValueNumberInfo;0;0
trStackMemory;trStackMemory();1;TR;ValueNumberInfo;0;0
trace;trace();1;TR;ValueNumberInfo;0;0
~TR_HashValueNumberInfo;~TR_HashValueNumberInfo();1;TR;HashValueNumberInfo;1;1
~TR_ValueNumberInfo;~TR_ValueNumberInfo();1;TR;ValueNumberInfo;0;1
operator<;operator<(const TR::DataType &);1;OMR;DataType;0;0
operator<;operator<(TR::DataTypes);0;OMR;DataType;0;0
contains;contains(uint32_t,TR::Compilation *);1;TR;AliasSetInterface;0;0
contains;contains(TR::SymbolReference *,TR::Compilation *);0;TR;AliasSetInterface;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
isOSRRelatedNode;isOSRRelatedNode(TR::Node *);1;OMR;ResolvedMethodSymbol;0;0
isOSRRelatedNode;isOSRRelatedNode(TR::Node *,TR_ByteCodeInfo &);0;OMR;ResolvedMethodSymbol;0;0
CodeGenerator;CodeGenerator(const class TR::CodeGenerator &);0;TR;CodeGenerator;1;0
CodeGenerator;CodeGenerator(class TR::CodeGenerator &&);0;TR;CodeGenerator;1;0
operator delete;operator delete(void *,size_t);1;OMR;Compilation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Compilation;0;0
IL;IL();0;OMR;IL;1;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Recompilation;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Recompilation;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;Recompilation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;Recompilation;0;0
localName;localName(uint32_t,uint32_t,int32_t &,class TR_Memory *);1;TR;ResolvedMethod;0;1
localName;localName(uint32_t,uint32_t,class TR_Memory *);0;TR;ResolvedMethod;0;1
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReference;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;SymbolReference;0;0
SymbolReferenceTable;SymbolReferenceTable(class TR::SymbolReferenceTable &&);0;TR;SymbolReferenceTable;1;0
SymbolReferenceTable;SymbolReferenceTable(const class TR::SymbolReferenceTable &);0;TR;SymbolReferenceTable;1;0
operator delete;operator delete(void *,size_t);1;OMR;TransformUtil;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;TransformUtil;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;TransformUtil;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;TransformUtil;0;0
TR_BlockStructure;TR_BlockStructure(TR::Compilation *,int32_t,TR::Block *);1;TR;BlockStructure;0;0
TR_RegionStructure;TR_RegionStructure(TR::Compilation *,int32_t);1;TR;RegionStructure;0;0
TR_RegionStructure;TR_RegionStructure(class TR_RegionStructure &&);0;TR;RegionStructure;1;0
addExitEdge;addExitEdge(class TR_StructureSubGraphNode *,int32_t,_Bool,TR::CFGEdge *);1;TR;RegionStructure;0;0
addExitEdge;addExitEdge(TR::CFGEdge *);0;TR;RegionStructure;0;0
addInductionVariable;addInductionVariable(class TR_BasicInductionVariable *);1;TR;RegionStructure;0;0
addInductionVariable;addInductionVariable(class TR_InductionVariable *);0;TR;RegionStructure;0;0
TR_RegisterCandidate;TR_RegisterCandidate(TR::SymbolReference *,TR::Region &);1;TR;RegisterCandidate;0;0
TR_RegisterCandidate;TR_RegisterCandidate(class TR_RegisterCandidate &&);0;TR;RegisterCandidate;1;0
TR_StructureSubGraphNode;TR_StructureSubGraphNode(class TR_Structure *);1;TR;StructureSubGraphNode;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Optimizer;0;0
create;create(TR::Compilation *,TR::Node *,TR::TreeTop *,TR::TreeTop *);1;OMR;TreeTop;0;0
create;create(TR::Compilation *);0;OMR;TreeTop;0;0
CPU;CPU(const class OMR::CPU &);1;OMR;CPU;1;0
CPU;CPU(class OMR::CPU &&);0;OMR;CPU;1;0
operator=;operator=(const class OMR::CPU &);1;OMR;CPU;1;0
operator=;operator=(class OMR::CPU &&);0;OMR;CPU;1;0
DataType;DataType(TR::DataTypes);1;OMR;DataType;0;0
DataType;DataType(class OMR::DataType &&);0;OMR;DataType;1;0
getArrayElementWidthInBytes;getArrayElementWidthInBytes(TR::Compilation *,uintptrj_t);1;OMR;ObjectModel;0;0
getArrayElementWidthInBytes;getArrayElementWidthInBytes(TR::DataType);0;OMR;ObjectModel;0;0
ClassEnv;ClassEnv();1;OMR;ClassEnv;1;0
VMEnv;VMEnv(class OMR::VMEnv &&);1;OMR;VMEnv;1;0
VMEnv;VMEnv();0;OMR;VMEnv;1;0
getUSecClock;getUSecClock(TR::Compilation *);1;OMR;VMEnv;0;0
getUSecClock;getUSecClock();0;OMR;VMEnv;0;0
operator=;operator=(const class OMR::DebugEnv &);1;OMR;DebugEnv;1;0
operator=;operator=(class OMR::DebugEnv &&);0;OMR;DebugEnv;1;0
SegmentAllocator;SegmentAllocator(const class TR::SegmentAllocator &);1;TR;SegmentAllocator;0;0
SegmentAllocator;SegmentAllocator(size_t);0;TR;SegmentAllocator;0;0
SegmentProvider;SegmentProvider(const class TR::SegmentProvider &);1;TR;SegmentProvider;0;0
SegmentProvider;SegmentProvider(size_t);0;TR;SegmentProvider;0;0
SystemSegmentProvider;SystemSegmentProvider(size_t,TR::RawAllocator);1;OMR;SystemSegmentProvider;0;0
SystemSegmentProvider;SystemSegmentProvider(const class OMR::SystemSegmentProvider &);0;OMR;SystemSegmentProvider;1;0
allocationLimit;allocationLimit();1;TR;SegmentAllocator;0;1
bytesAllocated;bytesAllocated();1;TR;SegmentProvider;0;1
defaultSegmentSize;defaultSegmentSize();1;TR;SegmentProvider;0;0
operator=;operator=(const class TR::SegmentProvider &);1;TR;SegmentProvider;1;0
operator=;operator=(const class TR::SegmentAllocator &);0;TR;SegmentAllocator;1;0
operator=;operator=(const class OMR::SystemSegmentProvider &);0;OMR;SystemSegmentProvider;1;0
regionBytesAllocated;regionBytesAllocated();1;TR;SegmentAllocator;0;1
release;release(TR::MemorySegment &);1;TR;SegmentProvider;0;1
request;request(size_t);1;TR;SegmentProvider;0;1
setAllocationLimit;setAllocationLimit(size_t);1;TR;SegmentAllocator;0;1
systemBytesAllocated;systemBytesAllocated();1;TR;SegmentAllocator;0;1
~SegmentAllocator;~SegmentAllocator();1;TR;SegmentAllocator;0;1
~SegmentProvider;~SegmentProvider();1;TR;SegmentProvider;0;1
~SystemSegmentProvider;~SystemSegmentProvider();1;OMR;SystemSegmentProvider;0;1
PersistentInfo;PersistentInfo(const class OMR::PersistentInfo &);1;OMR;PersistentInfo;1;0
GlobalSingletonAllocator;GlobalSingletonAllocator(const class TR::GlobalSingletonAllocator &);1;TR;GlobalSingletonAllocator;1;0
GlobalSingletonAllocator;GlobalSingletonAllocator(const GlobalBaseAllocator &);0;TR;GlobalSingletonAllocator;0;0
TRPersistentMemoryAllocator;TRPersistentMemoryAllocator(const class TRPersistentMemoryAllocator &);1;TR;PersistentMemoryAllocator;0;0
TRPersistentMemoryAllocator;TRPersistentMemoryAllocator(class TR_Memory *);0;TR;PersistentMemoryAllocator;0;0
TR_Memory;TR_Memory(const class TR_Memory &);1;TR;Memory;1;0
TR_Memory;TR_Memory(class TR_Memory &&);0;TR;Memory;1;0
operator delete;operator delete(void *,size_t);1;OMR;Machine;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Machine;0;0
DebugCounterBase;DebugCounterBase(class TR::DebugCounterBase &&);1;TR;DebugCounterBase;1;0
DebugCounterBase;DebugCounterBase(const class TR::DebugCounterBase &);0;TR;DebugCounterBase;1;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;DebugCounter;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;DebugCounter;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;DebugCounter;0;0
operator new;operator new(size_t,TR::Region &);0;TR;DebugCounter;0;0
operator=;operator=(class TR::DebugCounterBase &&);1;TR;DebugCounterBase;1;0
operator=;operator=(const class TR::DebugCounterBase &);0;TR;DebugCounterBase;1;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,TR::Node *,int8_t);1;TR;DebugCounter;0;0
prependDebugCounter;prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,int32_t,int8_t);0;TR;DebugCounter;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;DebugCounterAggregation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;DebugCounterAggregation;0;0
MonitorTable;MonitorTable(const class OMR::MonitorTable &);1;OMR;MonitorTable;1;0
MonitorTable;MonitorTable(class OMR::MonitorTable &&);0;OMR;MonitorTable;1;0
create;create(TR::ILOpCodes,uint16_t);1;OMR;Node;0;0
TR_MemoryAllocationType;TR_MemoryAllocationType(class TR_MemoryAllocationType &&);1;TR;MemoryAllocationType;1;0
TR_MemoryAllocationType;TR_MemoryAllocationType(const class TR_MemoryAllocationType &);0;TR;MemoryAllocationType;1;0
TR_PersistentMemory;TR_PersistentMemory(const class TR_PersistentMemory &);0;TR;PersistentMemory;1;0
TreeTop;TreeTop(class TR::TreeTop &&);0;TR;TreeTop;1;0
TreeTop;TreeTop(const class TR::TreeTop &);0;TR;TreeTop;1;0
~TreeTop;~TreeTop();1;OMR;TreeTop;1;0
operator=;operator=(TR::DataTypes);1;OMR;DataType;0;0
getNext;getNext();1;TR;Link0;0;1
getNext;getNext();1;TR;Link1;0;1
TR_CallStackIterator;TR_CallStackIterator(class TR_CallStackIterator &&);1;TR;CallStackIterator;1;0
TR_CallStackIterator;TR_CallStackIterator(const class TR_CallStackIterator &);0;TR;CallStackIterator;1;0
TR_CallStackIterator;TR_CallStackIterator();0;TR;CallStackIterator;0;0
TR_LinuxCallStackIterator;TR_LinuxCallStackIterator();1;TR;LinuxCallStackIterator;0;0
getNext;getNext();1;TR;CallStackIterator;0;1
getOffsetInProcedure;getOffsetInProcedure();1;TR;CallStackIterator;0;1
getProcedureName;getProcedureName();1;TR;CallStackIterator;0;1
isDone;isDone();1;TR;CallStackIterator;0;1
operator=;operator=(class TR_CallStackIterator &&);1;TR;CallStackIterator;1;0
operator=;operator=(const class TR_CallStackIterator &);0;TR;CallStackIterator;1;0
operator=;operator=(class TR_LinuxCallStackIterator &&);0;TR;LinuxCallStackIterator;1;0
operator=;operator=(const class TR_LinuxCallStackIterator &);0;TR;LinuxCallStackIterator;1;0
printStackBacktrace;printStackBacktrace(TR::Compilation *);1;TR;CallStackIterator;0;1
printSymbol;printSymbol(int32_t,char *,TR::Compilation *);1;TR;LinuxCallStackIterator;0;0
~TR_CallStackIterator;~TR_CallStackIterator();1;TR;CallStackIterator;1;0
~TR_LinuxCallStackIterator;~TR_LinuxCallStackIterator();1;TR;LinuxCallStackIterator;1;0
__pbase_type_info;__pbase_type_info(const class __cxxabiv1::__pbase_type_info &);0;__cxxabiv1;__pbase_type_info;0;0
__pointer_catch;__pointer_catch(const class __cxxabiv1::__pbase_type_info *,void **,unsigned int);1;__cxxabiv1;__pbase_type_info;0;1
__pointer_to_member_type_info;__pointer_to_member_type_info(const class __cxxabiv1::__pointer_to_member_type_info &);0;__cxxabiv1;__pointer_to_member_type_info;0;0
operator=;operator=(const class __cxxabiv1::__pbase_type_info &);1;__cxxabiv1;__pbase_type_info;0;0
operator=;operator=(const class __cxxabiv1::__pointer_to_member_type_info &);0;__cxxabiv1;__pointer_to_member_type_info;0;0
~__pbase_type_info;~__pbase_type_info();1;__cxxabiv1;__pbase_type_info;0;1
~__pointer_to_member_type_info;~__pointer_to_member_type_info();1;__cxxabiv1;__pointer_to_member_type_info;0;1
__is_pointer_p;__is_pointer_p();1;__cxxabiv1;__pointer_type_info;0;1
operator=;operator=(const class __cxxabiv1::__pointer_type_info &);0;__cxxabiv1;__pointer_type_info;1;0
~__pointer_type_info;~__pointer_type_info();1;__cxxabiv1;__pointer_type_info;0;1
__class_type_info;__class_type_info(const class __cxxabiv1::__class_type_info &);1;__cxxabiv1;__class_type_info;1;0
__class_type_info;__class_type_info(const char *);0;__cxxabiv1;__class_type_info;0;0
__do_dyncast;__do_dyncast(ptrdiff_t,enum __cxxabiv1::__class_type_info::__sub_kind,const class __cxxabiv1::__class_type_info *,const void *,const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__dyncast_result &);1;__cxxabiv1;__class_type_info;0;1
__do_find_public_src;__do_find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *);1;__cxxabiv1;__class_type_info;0;1
__do_upcast;__do_upcast(const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__upcast_result &__restrict);1;__cxxabiv1;__class_type_info;0;1
__do_upcast;__do_upcast(const class __cxxabiv1::__class_type_info *,void **);0;__cxxabiv1;__class_type_info;0;1
__find_public_src;__find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *);1;__cxxabiv1;__class_type_info;0;0
__si_class_type_info;__si_class_type_info(const char *,const class __cxxabiv1::__class_type_info *);1;__cxxabiv1;__si_class_type_info;0;0
__si_class_type_info;__si_class_type_info(const class __cxxabiv1::__si_class_type_info &);0;__cxxabiv1;__si_class_type_info;0;0
operator=;operator=(const class __cxxabiv1::__class_type_info &);1;__cxxabiv1;__class_type_info;1;0
operator=;operator=(const class __cxxabiv1::__si_class_type_info &);0;__cxxabiv1;__si_class_type_info;0;0
~__class_type_info;~__class_type_info();1;__cxxabiv1;__class_type_info;0;1
~__si_class_type_info;~__si_class_type_info();1;__cxxabiv1;__si_class_type_info;0;1
__vmi_class_type_info;__vmi_class_type_info(const char *,int);1;__cxxabiv1;__vmi_class_type_info;0;0
operator=;operator=(const class __cxxabiv1::__vmi_class_type_info &);0;__cxxabiv1;__vmi_class_type_info;1;0
~__vmi_class_type_info;~__vmi_class_type_info();1;__cxxabiv1;__vmi_class_type_info;0;1
Block;Block(class TR_Memory *);1;OMR;Block;0;0
AutomaticSymbol;AutomaticSymbol(const class OMR::AutomaticSymbol &);1;OMR;AutomaticSymbol;1;0
AutomaticSymbol;AutomaticSymbol(class OMR::AutomaticSymbol &&);0;OMR;AutomaticSymbol;1;0
Register;Register(const class OMR::Register &);1;OMR;Register;1;0
Register;Register(class OMR::Register &&);0;OMR;Register;1;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Register;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;Register;0;0
Machine;Machine(const class OMR::Machine &);1;OMR;Machine;1;0
Machine;Machine(class OMR::Machine &&);0;OMR;Machine;1;0
getLastGlobalRegisterNumber;getLastGlobalRegisterNumber();1;OMR;Machine;0;0
getLastGlobalRegisterNumber;getLastGlobalRegisterNumber(enum TR_RegisterKinds);0;OMR;Machine;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;Machine;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;Machine;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::RegisterDependencyConditions &,int32_t,int8_t,int32_t,TR::Instruction *);1;OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,TR::RegisterDependencyConditions *);1;OMR;CodeGenerator;0;0
Recompilation;Recompilation(TR::Compilation *);1;OMR;Recompilation;0;0
Recompilation;Recompilation(const class OMR::Recompilation &);0;OMR;Recompilation;1;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;Recompilation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;Recompilation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;Recompilation;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;VPConstraint;0;0
getKind;getKind();1;TR;Structure;0;0
TR_LinuxCallStackIterator;TR_LinuxCallStackIterator(const class TR_LinuxCallStackIterator &);1;TR;LinuxCallStackIterator;1;0
TR_LinuxCallStackIterator;TR_LinuxCallStackIterator(class TR_LinuxCallStackIterator &&);0;TR;LinuxCallStackIterator;1;0
TR_LinuxCallStackIterator;TR_LinuxCallStackIterator();0;TR;LinuxCallStackIterator;0;0
getNext;getNext();1;TR;CallStackIterator;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;Register;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;Register;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;Register;0;0
DebugCounter;DebugCounter(class TR::DebugCounter &&);1;TR;DebugCounter;1;0
DebugCounter;DebugCounter(const class TR::DebugCounter &);0;TR;DebugCounter;1;0
DebugCounter;DebugCounter(const char *,int8_t,class TR::DebugCounter *,int8_t);0;TR;DebugCounter;0;0
DebugCounterAggregation;DebugCounterAggregation(const class TR::DebugCounterAggregation &);1;TR;DebugCounterAggregation;1;0
DebugCounterAggregation;DebugCounterAggregation(class TR::DebugCounterAggregation &&);0;TR;DebugCounterAggregation;1;0
DebugCounterAggregation;DebugCounterAggregation(class TR_Memory *);0;TR;DebugCounterAggregation;0;0
Node;Node(TR::Node *,TR::ILOpCodes,uint16_t);1;OMR;Node;0;0
Options;Options(const class OMR::Options &);1;OMR;Options;1;0
Options;Options(class OMR::Options &&);0;OMR;Options;1;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Options;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;Options;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Options;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;Optimizer;0;0
VPConstraint;VPConstraint(const class TR::VPConstraint &);1;TR;VPConstraint;1;0
VPConstraint;VPConstraint(class TR::VPConstraint &&);0;TR;VPConstraint;1;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;VPConstraint;0;0
print;print(OMR::ValuePropagation *);1;TR;VPConstraint;0;0
print;print(TR::Compilation *,TR::FILE *,int32_t);0;TR;VPConstraint;0;1
TR_BitVectorCursor;TR_BitVectorCursor(const class TR_BitVectorCursor &);1;TR;BitVectorCursor;1;0
TR_BitVectorCursor;TR_BitVectorCursor(class TR_BitVector &);0;TR;BitVectorCursor;0;0
TR_BitVectorCursor;TR_BitVectorCursor(class TR_BitVectorCursor &&);0;TR;BitVectorCursor;1;0
TR_AsyncCheckInsertion;TR_AsyncCheckInsertion(class TR_AsyncCheckInsertion &&);1;TR;AsyncCheckInsertion;1;0
TR_AsyncCheckInsertion;TR_AsyncCheckInsertion(const class TR_AsyncCheckInsertion &);0;TR;AsyncCheckInsertion;1;0
TR_AsyncCheckInsertion;TR_AsyncCheckInsertion(TR::OptimizationManager *);0;TR;AsyncCheckInsertion;0;0
create;create(TR::OptimizationManager *);1;TR;AsyncCheckInsertion;0;0
insertAsyncCheck;insertAsyncCheck(TR::Block *,TR::Compilation *,const char *);1;TR;AsyncCheckInsertion;0;0
insertReturnAsyncChecks;insertReturnAsyncChecks(TR::Optimization *,const char *);1;TR;AsyncCheckInsertion;0;0
operator=;operator=(const class TR_AsyncCheckInsertion &);0;TR;AsyncCheckInsertion;1;0
operator=;operator=(class TR_AsyncCheckInsertion &&);0;TR;AsyncCheckInsertion;1;0
~TR_AsyncCheckInsertion;~TR_AsyncCheckInsertion();1;TR;AsyncCheckInsertion;1;1
operator delete;operator delete(void *,TR::Region &);1;OMR;CFG;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;CFG;0;0
Recompilation;Recompilation(class OMR::Recompilation &&);1;OMR;Recompilation;1;0
operator delete;operator delete(void *,TR::Region &);1;OMR;AliasBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;AliasBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;AliasBuilder;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;AliasBuilder;0;0
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &&);1;TR;BackwardDFSetAnalysis;1;0
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(const class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &);0;TR;BackwardDFSetAnalysis;1;0
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;BackwardDFSetAnalysis;0;0
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(const class TR_BackwardDFSetAnalysis<class TR_BitVector *> &);0;TR;BackwardDFSetAnalysis;1;0
TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(class TR_BackwardDFSetAnalysis<class TR_BitVector *> &&);0;TR;BackwardDFSetAnalysis;1;0
TR_BackwardDFSetAnalysis<type-parameter-0-0 *>;TR_BackwardDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;BackwardDFSetAnalysis;0;0
TR_BackwardIntersectionBitVectorAnalysis;TR_BackwardIntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;BackwardIntersectionBitVectorAnalysis;0;0
TR_BackwardIntersectionDFSetAnalysis<type-parameter-0-0 *>;TR_BackwardIntersectionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;BackwardIntersectionDFSetAnalysis;0;0
TR_BasicDFSetAnalysis<type-parameter-0-0 *>;TR_BasicDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;BasicDFSetAnalysis;0;0
TR_DataFlowAnalysis;TR_DataFlowAnalysis(const class TR_DataFlowAnalysis &);1;TR;DataFlowAnalysis;1;0
TR_DataFlowAnalysis;TR_DataFlowAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;DataFlowAnalysis;0;0
TR_GlobalAnticipatability;TR_GlobalAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);1;TR;GlobalAnticipatability;0;0
addToAnalysisQueue;addToAnalysisQueue(class TR_StructureSubGraphNode *,uint8_t);1;TR;DataFlowAnalysis;0;0
allocateBlockInfoContainer;allocateBlockInfoContainer(Container **,_Bool,_Bool);1;TR;BasicDFSetAnalysis;0;1
allocateBlockInfoContainer;allocateBlockInfoContainer(Container **,Container *);0;TR;BasicDFSetAnalysis;0;1
allocateContainer;allocateContainer(Container **,_Bool,_Bool);1;TR;BasicDFSetAnalysis;0;1
allocateTempContainer;allocateTempContainer(Container **,Container *);1;TR;BasicDFSetAnalysis;0;1
allocator;allocator();1;TR;DataFlowAnalysis;0;0
analyzeBlockStructure;analyzeBlockStructure(class TR_BlockStructure *,_Bool);1;TR;DataFlowAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_SingleBitContainer *);1;TR;BackwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,Container *);0;TR;BackwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);0;TR;BackwardDFSetAnalysis;0;1
analyzeNodeIfSuccessorsAnalyzed;analyzeNodeIfSuccessorsAnalyzed(class TR_RegionStructure *,class TR_BitVector &,class TR_BitVector &);1;TR;BackwardDFSetAnalysis;0;0
analyzeRegionStructure;analyzeRegionStructure(class TR_RegionStructure *,_Bool);1;TR;DataFlowAnalysis;0;1
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);1;TR;BackwardDFSetAnalysis;0;1
areSyntacticallyEquivalent;areSyntacticallyEquivalent(TR::Node *,TR::Node *);1;TR;DataFlowAnalysis;0;0
asDelayedness;asDelayedness();1;TR;DataFlowAnalysis;0;1
asEarliestness;asEarliestness();1;TR;DataFlowAnalysis;0;1
asExceptionCheckMotion;asExceptionCheckMotion();1;TR;DataFlowAnalysis;0;1
asFlowSensitiveEscapeAnalysis;asFlowSensitiveEscapeAnalysis();1;TR;DataFlowAnalysis;0;1
asGlobalAnticipatability;asGlobalAnticipatability();1;TR;DataFlowAnalysis;0;1
asIsolatedness;asIsolatedness();1;TR;DataFlowAnalysis;0;1
asLatestness;asLatestness();1;TR;DataFlowAnalysis;0;1
asLiveOnAllPaths;asLiveOnAllPaths();1;TR;DataFlowAnalysis;0;1
asLiveness;asLiveness();1;TR;DataFlowAnalysis;0;1
asRedundantExpressionAdjustment;asRedundantExpressionAdjustment();1;TR;DataFlowAnalysis;0;1
asRegisterAnticipatability;asRegisterAnticipatability();1;TR;DataFlowAnalysis;0;1
asRegisterAvailability;asRegisterAvailability();1;TR;DataFlowAnalysis;0;1
canGenAndKillForStructure;canGenAndKillForStructure(class TR_Structure *);1;TR;BasicDFSetAnalysis;0;1
cg;cg();1;TR;DataFlowAnalysis;0;0
clearAnalysisInfo;clearAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *);1;TR;BasicDFSetAnalysis;0;0
collectAllSymbolReferencesInTreeInto;collectAllSymbolReferencesInTreeInto(TR::Node *,List<TR::SymbolReference> *);1;TR;DataFlowAnalysis;0;0
collectCallSymbolReferencesInTreeInto;collectCallSymbolReferencesInTreeInto(TR::Node *,List<TR::SymbolReference> *);1;TR;DataFlowAnalysis;0;0
comp;comp();1;TR;DataFlowAnalysis;0;0
compose;compose(Container *,Container *);1;TR;BasicDFSetAnalysis;0;1
compose;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);0;TR;BackwardDFSetAnalysis;0;1
compose;compose(class TR_BitVector *,class TR_BitVector *);0;TR;BackwardDFSetAnalysis;0;1
createAnalysisInfo;createAnalysisInfo();1;TR;BasicDFSetAnalysis;0;0
doAnalysis;doAnalysis(class TR_Structure *,_Bool);1;TR;BasicDFSetAnalysis;0;0
fe;fe();1;TR;DataFlowAnalysis;0;0
getAnalysisInfo;getAnalysisInfo(class TR_Structure *);1;TR;BasicDFSetAnalysis;0;0
getAnalysisName;getAnalysisName();1;TR;DataFlowAnalysis;0;0
getCheckExpressionsInBlock;getCheckExpressionsInBlock(int32_t);1;TR;GlobalAnticipatability;0;0
getDebug;getDebug();1;TR;DataFlowAnalysis;0;0
getKind;getKind();1;TR;DataFlowAnalysis;0;1
getNumberOfBits;getNumberOfBits();1;TR;BasicDFSetAnalysis;0;1
initialize;initialize();1;TR;BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,class TR_RegionStructure *);1;TR;BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,TR::Block *);0;TR;BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,class TR_Structure *);0;TR;BasicDFSetAnalysis;0;0
initializeBasicDFSetAnalysis;initializeBasicDFSetAnalysis();1;TR;BasicDFSetAnalysis;0;1
initializeBlockInfo;initializeBlockInfo(_Bool);1;TR;BasicDFSetAnalysis;0;0
initializeCurrentGenKillSetInfo;initializeCurrentGenKillSetInfo();1;TR;BackwardDFSetAnalysis;0;1
initializeDFSetAnalysis;initializeDFSetAnalysis();1;TR;BasicDFSetAnalysis;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo();1;TR;BasicDFSetAnalysis;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo(class TR_RegionStructure *,class TR_BitVector &,class TR_BitVector &,_Bool);0;TR;BackwardDFSetAnalysis;0;1
initializeGenAndKillSetInfoForBlock;initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *);1;TR;BasicDFSetAnalysis;0;1
initializeGenAndKillSetInfoForRegion;initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *);1;TR;BasicDFSetAnalysis;0;1
initializeGenAndKillSetInfoForStructure;initializeGenAndKillSetInfoForStructure(class TR_Structure *);1;TR;BasicDFSetAnalysis;0;0
initializeGenAndKillSetInfoForStructures;initializeGenAndKillSetInfoForStructures();1;TR;BasicDFSetAnalysis;0;0
initializeGenAndKillSetInfoPropertyForStructure;initializeGenAndKillSetInfoPropertyForStructure(class TR_Structure *,_Bool);1;TR;BasicDFSetAnalysis;0;0
initializeInfo;initializeInfo(Container *);1;TR;BasicDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_SingleBitContainer *);0;TR;BackwardDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);0;TR;BackwardDFSetAnalysis;0;1
initializeOutSetInfo;initializeOutSetInfo();1;TR;BackwardDFSetAnalysis;0;1
inverseCompose;inverseCompose(Container *,Container *);1;TR;BasicDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);0;TR;BackwardDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);0;TR;BackwardDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(Container *);1;TR;BasicDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);0;TR;BackwardDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_SingleBitContainer *);0;TR;BackwardDFSetAnalysis;0;1
isExceptionalInBlock;isExceptionalInBlock(TR::Node *,int32_t,ContainerType *,vcount_t);1;TR;GlobalAnticipatability;0;0
isSameAsOrAliasedWith;isSameAsOrAliasedWith(TR::SymbolReference *,TR::SymbolReference *);1;TR;DataFlowAnalysis;0;0
killBasedOnSuccTransparency;killBasedOnSuccTransparency(TR::Block *);1;TR;GlobalAnticipatability;0;0
operator delete;operator delete(void *,size_t);1;TR;DataFlowAnalysis;0;0
operator new;operator new(size_t,TR::Allocator);1;TR;DataFlowAnalysis;0;0
operator=;operator=(const class TR_DataFlowAnalysis &);1;TR;DataFlowAnalysis;1;0
operator=;operator=(const class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &);0;TR;BackwardDFSetAnalysis;1;0
operator=;operator=(class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &&);0;TR;BackwardDFSetAnalysis;1;0
operator=;operator=(const class TR_BackwardDFSetAnalysis<class TR_BitVector *> &);0;TR;BackwardDFSetAnalysis;1;0
operator=;operator=(class TR_BackwardDFSetAnalysis<class TR_BitVector *> &&);0;TR;BackwardDFSetAnalysis;1;0
operator=;operator=(class TR_BackwardIntersectionBitVectorAnalysis &&);0;TR;BackwardIntersectionBitVectorAnalysis;1;0
operator=;operator=(const class TR_BackwardIntersectionBitVectorAnalysis &);0;TR;BackwardIntersectionBitVectorAnalysis;1;0
operator=;operator=(const class TR_GlobalAnticipatability &);0;TR;GlobalAnticipatability;1;0
operator=;operator=(class TR_GlobalAnticipatability &&);0;TR;GlobalAnticipatability;1;0
optimizer;optimizer();1;TR;DataFlowAnalysis;0;0
perform;perform();1;TR;DataFlowAnalysis;0;1
performAnalysis;performAnalysis(class TR_Structure *,_Bool);1;TR;BasicDFSetAnalysis;0;0
postInitializationProcessing;postInitializationProcessing();1;TR;BasicDFSetAnalysis;0;1
removeHeadFromAnalysisQueue;removeHeadFromAnalysisQueue();1;TR;DataFlowAnalysis;0;0
setTrace;setTrace(_Bool);1;TR;DataFlowAnalysis;0;0
supportsGenAndKillSets;supportsGenAndKillSets();1;TR;BasicDFSetAnalysis;0;1
supportsGenAndKillSetsForStructures;supportsGenAndKillSetsForStructures();1;TR;BasicDFSetAnalysis;0;1
trHeapMemory;trHeapMemory();1;TR;DataFlowAnalysis;0;0
trMemory;trMemory();1;TR;DataFlowAnalysis;0;0
trPersistentMemory;trPersistentMemory();1;TR;DataFlowAnalysis;0;0
trStackMemory;trStackMemory();1;TR;DataFlowAnalysis;0;0
trace;trace();1;TR;DataFlowAnalysis;0;0
traceBBVA;traceBBVA();1;TR;BackwardDFSetAnalysis;0;0
traceBVA;traceBVA();1;TR;BasicDFSetAnalysis;0;0
treeHasChecks;treeHasChecks(TR::TreeTop *,TR::Node *);1;TR;DataFlowAnalysis;0;0
~TR_BackwardDFSetAnalysis;~TR_BackwardDFSetAnalysis();1;TR;BackwardDFSetAnalysis;1;1
~TR_BackwardIntersectionBitVectorAnalysis;~TR_BackwardIntersectionBitVectorAnalysis();1;TR;BackwardIntersectionBitVectorAnalysis;1;1
~TR_DataFlowAnalysis;~TR_DataFlowAnalysis();1;TR;DataFlowAnalysis;0;1
~TR_GlobalAnticipatability;~TR_GlobalAnticipatability();1;TR;GlobalAnticipatability;1;1
TR_BackwardUnionBitVectorAnalysis;TR_BackwardUnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;BackwardUnionBitVectorAnalysis;0;0
TR_BackwardUnionDFSetAnalysis<type-parameter-0-0 *>;TR_BackwardUnionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;BackwardUnionDFSetAnalysis;0;0
TR_Liveness;TR_Liveness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,class TR_LiveVariableInformation *,_Bool,_Bool);1;TR;Liveness;0;0
getLiveVariableInfo;getLiveVariableInfo();1;TR;Liveness;0;0
operator=;operator=(class TR_BackwardUnionBitVectorAnalysis &&);0;TR;BackwardUnionBitVectorAnalysis;1;0
operator=;operator=(const class TR_BackwardUnionBitVectorAnalysis &);0;TR;BackwardUnionBitVectorAnalysis;1;0
operator=;operator=(const class TR_Liveness &);0;TR;Liveness;1;0
operator=;operator=(class TR_Liveness &&);0;TR;Liveness;1;0
traceLiveness;traceLiveness();1;TR;Liveness;0;0
~TR_BackwardUnionBitVectorAnalysis;~TR_BackwardUnionBitVectorAnalysis();1;TR;BackwardUnionBitVectorAnalysis;1;1
~TR_Liveness;~TR_Liveness();1;TR;Liveness;1;1
TR_BackwardUnionSingleBitContainerAnalysis;TR_BackwardUnionSingleBitContainerAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;BackwardUnionSingleBitContainerAnalysis;0;0
operator=;operator=(const class TR_BackwardUnionSingleBitContainerAnalysis &);0;TR;BackwardUnionSingleBitContainerAnalysis;1;0
operator=;operator=(class TR_BackwardUnionSingleBitContainerAnalysis &&);0;TR;BackwardUnionSingleBitContainerAnalysis;1;0
~TR_BackwardUnionSingleBitContainerAnalysis;~TR_BackwardUnionSingleBitContainerAnalysis();1;TR;BackwardUnionSingleBitContainerAnalysis;1;1
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Structure;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;Structure;0;0
operator=;operator=(const class TR_Structure &);1;TR;Structure;1;0
operator=;operator=(class TR_Structure &&);0;TR;Structure;1;0
TR_Delayedness;TR_Delayedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);1;TR;Delayedness;0;0
TR_ForwardDFSetAnalysis<type-parameter-0-0 *>;TR_ForwardDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;ForwardDFSetAnalysis;0;0
TR_IntersectionBitVectorAnalysis;TR_IntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;IntersectionBitVectorAnalysis;0;0
TR_IntersectionDFSetAnalysis<type-parameter-0-0 *>;TR_IntersectionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;IntersectionDFSetAnalysis;0;0
analyzeBlockZeroStructure;analyzeBlockZeroStructure(class TR_BlockStructure *);1;TR;ForwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,Container *);1;TR;ForwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,ContainerType *);0;TR;Delayedness;0;1
analyzeNodeIfPredecessorsAnalyzed;analyzeNodeIfPredecessorsAnalyzed(class TR_RegionStructure *,class TR_BitVector &);1;TR;ForwardDFSetAnalysis;0;0
analyzeTreeTopsInBlockStructure;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);1;TR;ForwardDFSetAnalysis;0;1
compose;compose(class TR_BitVector *,class TR_BitVector *);0;TR;IntersectionBitVectorAnalysis;0;1
initializeCurrentGenKillSetInfo;initializeCurrentGenKillSetInfo();1;TR;ForwardDFSetAnalysis;0;1
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo(class TR_RegionStructure *,class TR_BitVector &);0;TR;ForwardDFSetAnalysis;0;1
initializeInSetInfo;initializeInSetInfo();1;TR;ForwardDFSetAnalysis;0;1
operator=;operator=(const class TR_IntersectionBitVectorAnalysis &);0;TR;IntersectionBitVectorAnalysis;1;0
operator=;operator=(class TR_IntersectionBitVectorAnalysis &&);0;TR;IntersectionBitVectorAnalysis;1;0
operator=;operator=(class TR_Delayedness &&);0;TR;Delayedness;1;0
operator=;operator=(const class TR_Delayedness &);0;TR;Delayedness;1;0
~TR_Delayedness;~TR_Delayedness();1;TR;Delayedness;1;1
~TR_IntersectionBitVectorAnalysis;~TR_IntersectionBitVectorAnalysis();1;TR;IntersectionBitVectorAnalysis;1;1
TR_Earliestness;TR_Earliestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);1;TR;Earliestness;0;0
TR_UnionBitVectorAnalysis;TR_UnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;UnionBitVectorAnalysis;0;0
TR_UnionDFSetAnalysis<type-parameter-0-0 *>;TR_UnionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;UnionDFSetAnalysis;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);0;TR;Earliestness;0;1
operator=;operator=(class TR_UnionBitVectorAnalysis &&);0;TR;UnionBitVectorAnalysis;1;0
operator=;operator=(const class TR_UnionBitVectorAnalysis &);0;TR;UnionBitVectorAnalysis;1;0
operator=;operator=(const class TR_Earliestness &);0;TR;Earliestness;1;0
operator=;operator=(class TR_Earliestness &&);0;TR;Earliestness;1;0
~TR_Earliestness;~TR_Earliestness();1;TR;Earliestness;1;1
~TR_UnionBitVectorAnalysis;~TR_UnionBitVectorAnalysis();1;TR;UnionBitVectorAnalysis;1;1
TR_FlowSensitiveEscapeAnalysis;TR_FlowSensitiveEscapeAnalysis(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_EscapeAnalysis *);1;TR;FlowSensitiveEscapeAnalysis;0;0
analyzeNode;analyzeNode(TR::Node *,_Bool,int32_t,TR::Node *);0;TR;FlowSensitiveEscapeAnalysis;0;1
collectCFGBackEdges;collectCFGBackEdges(class TR_StructureSubGraphNode *);1;TR;FlowSensitiveEscapeAnalysis;0;0
findOrSplitEdge;findOrSplitEdge(TR::Block *,TR::Block *);1;TR;FlowSensitiveEscapeAnalysis;0;0
getCFGBackEdgesAndLoopEntryBlocks;getCFGBackEdgesAndLoopEntryBlocks(class TR_Structure *);1;TR;FlowSensitiveEscapeAnalysis;0;0
operator=;operator=(const class TR_FlowSensitiveEscapeAnalysis &);0;TR;FlowSensitiveEscapeAnalysis;1;0
operator=;operator=(class TR_FlowSensitiveEscapeAnalysis &&);0;TR;FlowSensitiveEscapeAnalysis;1;0
~TR_FlowSensitiveEscapeAnalysis;~TR_FlowSensitiveEscapeAnalysis();1;TR;FlowSensitiveEscapeAnalysis;1;1
TR_Isolatedness;TR_Isolatedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);1;TR;Isolatedness;0;0
operator=;operator=(const class TR_Isolatedness &);0;TR;Isolatedness;1;0
operator=;operator=(class TR_Isolatedness &&);0;TR;Isolatedness;1;0
~TR_Isolatedness;~TR_Isolatedness();1;TR;Isolatedness;1;1
TR_Latestness;TR_Latestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);1;TR;Latestness;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,ContainerType *);0;TR;Latestness;0;1
operator=;operator=(class TR_Latestness &&);0;TR;Latestness;1;0
operator=;operator=(const class TR_Latestness &);0;TR;Latestness;1;0
~TR_Latestness;~TR_Latestness();1;TR;Latestness;1;1
TR_LiveOnAllPaths;TR_LiveOnAllPaths(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_LiveVariableInformation *,_Bool,_Bool);1;TR;LiveOnAllPaths;0;0
getLiveVariableInfo;getLiveVariableInfo();1;TR;LiveOnAllPaths;0;0
operator=;operator=(class TR_LiveOnAllPaths &&);0;TR;LiveOnAllPaths;1;0
operator=;operator=(const class TR_LiveOnAllPaths &);0;TR;LiveOnAllPaths;1;0
~TR_LiveOnAllPaths;~TR_LiveOnAllPaths();1;TR;LiveOnAllPaths;1;1
TR_LocalAnalysis;TR_LocalAnalysis(class TR_LocalAnalysisInfo &,_Bool);1;TR;LocalAnalysis;0;0
TR_LocalAnticipatability;TR_LocalAnticipatability(class TR_LocalAnalysisInfo &,class TR_LocalTransparency *,_Bool);1;TR;LocalAnticipatability;0;0
adjustInfoForAddressAdd;adjustInfoForAddressAdd(TR::Node *,TR::Node *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,TR::Block *);1;TR;LocalAnticipatability;0;0
allocateContainer;allocateContainer(int32_t);1;TR;LocalAnalysis;0;0
allocateTempContainer;allocateTempContainer(int32_t);1;TR;LocalAnalysis;0;0
analyzeBlock;analyzeBlock(TR::Block *,vcount_t,vcount_t,class TR_BitVector *);1;TR;LocalAnticipatability;0;0
comp;comp();1;TR;LocalAnalysis;0;0
getAnalysisInfo;getAnalysisInfo(int32_t);1;TR;LocalAnalysis;0;0
getCheckExpressions;getCheckExpressions();1;TR;LocalAnalysis;0;0
getCheckSymbolReferences;getCheckSymbolReferences();1;TR;LocalAnalysis;0;0
getDownwardExposedAnalysisInfo;getDownwardExposedAnalysisInfo(int32_t);1;TR;LocalAnalysis;0;0
getDownwardExposedStoreAnalysisInfo;getDownwardExposedStoreAnalysisInfo(int32_t);1;TR;LocalAnalysis;0;0
getNumNodes;getNumNodes();1;TR;LocalAnalysis;0;0
initializeBlocks;initializeBlocks(TR::Block *,TR::BitVector &);1;TR;LocalAnalysis;0;0
initializeLocalAnalysis;initializeLocalAnalysis(_Bool,_Bool);1;TR;LocalAnalysis;0;0
isSupportedNode;isSupportedNode(TR::Node *,TR::Compilation *,TR::Node *,_Bool);1;TR;LocalAnalysis;0;0
isSupportedNodeForFieldPrivatization;isSupportedNodeForFieldPrivatization(TR::Node *,TR::Compilation *,TR::Node *);1;TR;LocalAnalysis;0;0
isSupportedNodeForFunctionality;isSupportedNodeForFunctionality(TR::Node *,TR::Compilation *,TR::Node *,_Bool);1;TR;LocalAnalysis;0;0
isSupportedNodeForPREPerformance;isSupportedNodeForPREPerformance(TR::Node *,TR::Compilation *,TR::Node *);1;TR;LocalAnalysis;0;0
isSupportedOpCode;isSupportedOpCode(TR::ILOpCode &,TR::Compilation *);1;TR;LocalAnalysis;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;LocalAnalysis;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;LocalAnalysis;0;0
killDownwardExposedExprs;killDownwardExposedExprs(TR::Block *,TR::Node *);1;TR;LocalAnticipatability;0;0
killDownwardExposedExprs;killDownwardExposedExprs(TR::Block *,ContainerType *,TR::Node *);0;TR;LocalAnticipatability;0;0
loadaddrAsLoad;loadaddrAsLoad();1;TR;LocalAnticipatability;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;LocalAnalysis;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;LocalAnalysis;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;LocalAnalysis;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;LocalAnalysis;0;0
operator delete;operator delete(void *,size_t);0;TR;LocalAnalysis;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;LocalAnalysis;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;LocalAnalysis;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;LocalAnalysis;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;LocalAnalysis;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;TR;LocalAnalysis;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;LocalAnalysis;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;LocalAnalysis;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;LocalAnalysis;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;LocalAnalysis;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;LocalAnalysis;0;0
operator new;operator new(size_t,TR::Region &);0;TR;LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;LocalAnalysis;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;LocalAnalysis;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;LocalAnalysis;0;0
operator=;operator=(class TR_LocalAnalysis &&);1;TR;LocalAnalysis;1;0
operator=;operator=(const class TR_LocalAnalysis &);0;TR;LocalAnalysis;1;0
operator=;operator=(class TR_LocalAnticipatability &&);0;TR;LocalAnticipatability;1;0
trHeapMemory;trHeapMemory();1;TR;LocalAnalysis;0;0
trMemory;trMemory();1;TR;LocalAnalysis;0;0
trStackMemory;trStackMemory();1;TR;LocalAnalysis;0;0
trace;trace();1;TR;LocalAnalysis;0;0
updateAnticipatabilityForSupportedNodes;updateAnticipatabilityForSupportedNodes(TR::Node *,ContainerType *,ContainerType *,TR::Block *,ContainerType *,ContainerType *,ContainerType *,class TR_BitVector *,ContainerType *,vcount_t);1;TR;LocalAnticipatability;0;0
updateUsesAndDefs;updateUsesAndDefs(TR::Node *,TR::Block *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,class TR_BitVector *,ContainerType *,vcount_t);1;TR;LocalAnticipatability;0;0
~TR_LocalAnalysis;~TR_LocalAnalysis();1;TR;LocalAnalysis;1;0
~TR_LocalAnticipatability;~TR_LocalAnticipatability();1;TR;LocalAnticipatability;1;0
TR_LocalTransparency;TR_LocalTransparency(class TR_LocalAnalysisInfo &,_Bool);1;TR;LocalTransparency;0;0
adjustInfoForAddressAdd;adjustInfoForAddressAdd(TR::Node *,TR::Node *,ContainerType *,ContainerType *);1;TR;LocalTransparency;0;0
getTransparencyInfo;getTransparencyInfo(int32_t);1;TR;LocalTransparency;0;0
loadaddrAsLoad;loadaddrAsLoad();1;TR;LocalTransparency;0;0
operator=;operator=(class TR_LocalTransparency &&);0;TR;LocalTransparency;1;0
operator=;operator=(const class TR_LocalTransparency &);0;TR;LocalTransparency;1;0
updateInfoForSupportedNodes;updateInfoForSupportedNodes(TR::Node *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,vcount_t);1;TR;LocalTransparency;0;0
updateUsesAndDefs;updateUsesAndDefs(TR::Node *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,vcount_t,ContainerType *,class TR_BitVector *,ContainerType *);1;TR;LocalTransparency;0;0
~TR_LocalTransparency;~TR_LocalTransparency();1;TR;LocalTransparency;1;0
TR_LiveVariableInformation;TR_LiveVariableInformation(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,_Bool,_Bool,_Bool);1;TR;LiveVariableInformation;0;0
TR_OSRLiveVariableInformation;TR_OSRLiveVariableInformation(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,_Bool,_Bool,_Bool);1;TR;OSRLiveVariableInformation;0;0
buildLiveSymbolsBitVector;buildLiveSymbolsBitVector(class TR_OSRMethodData *,int32_t,class TR_BitVector *);1;TR;OSRLiveVariableInformation;0;0
comp;comp();1;TR;LiveVariableInformation;0;0
createGenAndKillSetCaches;createGenAndKillSetCaches();1;TR;LiveVariableInformation;0;0
findAllUseOfLocal;findAllUseOfLocal(TR::Node *,int32_t,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,_Bool,vcount_t);1;TR;LiveVariableInformation;0;0
findCommonedLoads;findCommonedLoads(TR::Node *,class TR_BitVector *,_Bool,vcount_t);1;TR;LiveVariableInformation;0;0
findLocalUsesInBackwardsTreeWalk;findLocalUsesInBackwardsTreeWalk(TR::Node *,int32_t,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,vcount_t);1;TR;LiveVariableInformation;0;0
findUseOfLocal;findUseOfLocal(TR::Node *,int32_t,class TR_BitVector **,class TR_BitVector **,class TR_BitVector *,_Bool,vcount_t);1;TR;LiveVariableInformation;0;1
getLiveSymbolsInInterpreter;getLiveSymbolsInInterpreter(TR_ByteCodeInfo &);1;TR;OSRLiveVariableInformation;0;0
includeMethodMetaDataSymbols;includeMethodMetaDataSymbols();1;TR;LiveVariableInformation;0;0
includeParms;includeParms();1;TR;LiveVariableInformation;0;0
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo(class TR_BitVector **,class TR_BitVector **,class TR_BitVector **,class TR_BitVector **);1;TR;LiveVariableInformation;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;LiveVariableInformation;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;LiveVariableInformation;0;0
liveCommonedLoads;liveCommonedLoads();1;TR;LiveVariableInformation;0;0
numLocals;numLocals();1;TR;LiveVariableInformation;0;0
numNodes;numNodes();1;TR;LiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;LiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;LiveVariableInformation;0;0
operator delete;operator delete(void *,size_t);0;TR;LiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;LiveVariableInformation;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;LiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;LiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;LiveVariableInformation;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;LiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;LiveVariableInformation;0;0
operator new;operator new(size_t,TR::Region &);1;TR;LiveVariableInformation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;LiveVariableInformation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;LiveVariableInformation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;LiveVariableInformation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;LiveVariableInformation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;LiveVariableInformation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;LiveVariableInformation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;LiveVariableInformation;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;LiveVariableInformation;0;0
operator=;operator=(const class TR_LiveVariableInformation &);1;TR;LiveVariableInformation;1;0
operator=;operator=(class TR_LiveVariableInformation &&);0;TR;LiveVariableInformation;1;0
operator=;operator=(const class TR_OSRLiveVariableInformation &);0;TR;OSRLiveVariableInformation;1;0
operator=;operator=(class TR_OSRLiveVariableInformation &&);0;TR;OSRLiveVariableInformation;1;0
splitLongs;splitLongs();1;TR;LiveVariableInformation;0;0
trHeapMemory;trHeapMemory();1;TR;LiveVariableInformation;0;0
trMemory;trMemory();1;TR;LiveVariableInformation;0;0
trStackMemory;trStackMemory();1;TR;LiveVariableInformation;0;0
traceLiveVarInfo;traceLiveVarInfo();1;TR;LiveVariableInformation;0;0
trackLiveCommonedLoads;trackLiveCommonedLoads();1;TR;LiveVariableInformation;0;0
visitTreeForLocals;visitTreeForLocals(TR::Node *,class TR_BitVector **,class TR_BitVector *,_Bool,_Bool,vcount_t,class TR_BitVector *,_Bool);1;TR;LiveVariableInformation;0;0
~TR_LiveVariableInformation;~TR_LiveVariableInformation();1;TR;LiveVariableInformation;1;0
~TR_OSRLiveVariableInformation;~TR_OSRLiveVariableInformation();1;TR;OSRLiveVariableInformation;1;0
TR_PredecessorIterator;TR_PredecessorIterator(const class TR_PredecessorIterator &);1;TR;PredecessorIterator;1;0
TR_PredecessorIterator;TR_PredecessorIterator(class TR_PredecessorIterator &&);0;TR;PredecessorIterator;1;0
TR_ReachingDefinitions;TR_ReachingDefinitions(TR::Compilation *,TR::CFG *,TR::Optimizer *,class TR_UseDefInfo *,class TR_UseDefInfo::AuxiliaryData &,_Bool);1;TR;ReachingDefinitions;0;0
initializeGenAndKillSetInfoForNode;initializeGenAndKillSetInfoForNode(TR::Node *,class TR_BitVector &,_Bool,int32_t,TR::Node *);1;TR;ReachingDefinitions;0;0
operator=;operator=(class TR_ReachingDefinitions &&);0;TR;ReachingDefinitions;1;0
operator=;operator=(const class TR_ReachingDefinitions &);0;TR;ReachingDefinitions;1;0
traceRD;traceRD();1;TR;ReachingDefinitions;0;0
~TR_ReachingDefinitions;~TR_ReachingDefinitions();1;TR;ReachingDefinitions;1;1
TR_RegisterAnticipatability;TR_RegisterAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool);1;TR;RegisterAnticipatability;0;0
initializeRegisterUsageInfo;initializeRegisterUsageInfo();1;TR;RegisterAnticipatability;0;0
operator=;operator=(const class TR_RegisterAnticipatability &);0;TR;RegisterAnticipatability;1;0
operator=;operator=(class TR_RegisterAnticipatability &&);0;TR;RegisterAnticipatability;1;0
~TR_RegisterAnticipatability;~TR_RegisterAnticipatability();1;TR;RegisterAnticipatability;1;1
TR_RegisterAvailability;TR_RegisterAvailability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool);1;TR;RegisterAvailability;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);0;TR;RegisterAvailability;0;1
initializeRegisterUsageInfo;initializeRegisterUsageInfo();1;TR;RegisterAvailability;0;0
operator=;operator=(class TR_RegisterAvailability &&);0;TR;RegisterAvailability;1;0
operator=;operator=(const class TR_RegisterAvailability &);0;TR;RegisterAvailability;1;0
~TR_RegisterAvailability;~TR_RegisterAvailability();1;TR;RegisterAvailability;1;1
TR_UnionSingleBitContainerAnalysis;TR_UnionSingleBitContainerAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);1;TR;UnionSingleBitContainerAnalysis;0;0
operator=;operator=(class TR_UnionSingleBitContainerAnalysis &&);0;TR;UnionSingleBitContainerAnalysis;1;0
operator=;operator=(const class TR_UnionSingleBitContainerAnalysis &);0;TR;UnionSingleBitContainerAnalysis;1;0
~TR_UnionSingleBitContainerAnalysis;~TR_UnionSingleBitContainerAnalysis();1;TR;UnionSingleBitContainerAnalysis;1;1
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;VPConstraint;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;VPConstraint;0;0
TR_BackwardIntersectionDFSetAnalysis;TR_BackwardIntersectionDFSetAnalysis(const class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &);1;TR;BackwardIntersectionDFSetAnalysis;1;0
TR_BackwardIntersectionDFSetAnalysis;TR_BackwardIntersectionDFSetAnalysis(class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &&);0;TR;BackwardIntersectionDFSetAnalysis;1;0
TR_BackwardIntersectionDFSetAnalysis;TR_BackwardIntersectionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;BackwardIntersectionDFSetAnalysis;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,Container *);1;TR;BackwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);0;TR;GlobalAnticipatability;0;1
compose;compose(class TR_BitVector *,class TR_BitVector *);0;TR;BackwardIntersectionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);0;TR;BackwardIntersectionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);0;TR;BackwardIntersectionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);0;TR;BackwardIntersectionDFSetAnalysis;0;1
operator=;operator=(class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &&);0;TR;BackwardIntersectionDFSetAnalysis;1;0
operator=;operator=(const class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &);0;TR;BackwardIntersectionDFSetAnalysis;1;0
~TR_BackwardIntersectionDFSetAnalysis;~TR_BackwardIntersectionDFSetAnalysis();1;TR;BackwardIntersectionDFSetAnalysis;1;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);0;TR;Liveness;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);0;TR;LiveOnAllPaths;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);0;TR;RegisterAnticipatability;0;1
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &&);1;TR;BackwardUnionDFSetAnalysis;1;0
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;BackwardUnionDFSetAnalysis;0;0
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(const class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &);0;TR;BackwardUnionDFSetAnalysis;1;0
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(const class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &);0;TR;BackwardUnionDFSetAnalysis;1;0
TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &&);0;TR;BackwardUnionDFSetAnalysis;1;0
compose;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);0;TR;BackwardUnionDFSetAnalysis;0;1
compose;compose(class TR_BitVector *,class TR_BitVector *);0;TR;BackwardUnionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_SingleBitContainer *);0;TR;BackwardUnionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);0;TR;BackwardUnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);0;TR;BackwardUnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);0;TR;BackwardUnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);0;TR;BackwardUnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_SingleBitContainer *);0;TR;BackwardUnionDFSetAnalysis;0;1
operator=;operator=(const class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &);0;TR;BackwardUnionDFSetAnalysis;1;0
operator=;operator=(class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &&);0;TR;BackwardUnionDFSetAnalysis;1;0
operator=;operator=(const class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &);0;TR;BackwardUnionDFSetAnalysis;1;0
operator=;operator=(class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &&);0;TR;BackwardUnionDFSetAnalysis;1;0
~TR_BackwardUnionDFSetAnalysis;~TR_BackwardUnionDFSetAnalysis();1;TR;BackwardUnionDFSetAnalysis;1;1
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(const class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &);1;TR;BasicDFSetAnalysis;1;0
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &&);0;TR;BasicDFSetAnalysis;1;0
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;BasicDFSetAnalysis;0;0
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(class TR_BasicDFSetAnalysis<class TR_BitVector *> &&);0;TR;BasicDFSetAnalysis;1;0
TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(const class TR_BasicDFSetAnalysis<class TR_BitVector *> &);0;TR;BasicDFSetAnalysis;1;0
allocateBlockInfoContainer;allocateBlockInfoContainer(class TR_SingleBitContainer **,_Bool,_Bool);1;TR;BasicDFSetAnalysis;0;1
allocateBlockInfoContainer;allocateBlockInfoContainer(Container **,_Bool,_Bool);0;TR;BasicDFSetAnalysis;0;1
allocateBlockInfoContainer;allocateBlockInfoContainer(class TR_BitVector **,_Bool,_Bool);0;TR;BasicDFSetAnalysis;0;1
allocateBlockInfoContainer;allocateBlockInfoContainer(class TR_BitVector **,class TR_BitVector *);0;TR;BasicDFSetAnalysis;0;1
allocateBlockInfoContainer;allocateBlockInfoContainer(class TR_SingleBitContainer **,class TR_SingleBitContainer *);0;TR;BasicDFSetAnalysis;0;1
allocateContainer;allocateContainer(class TR_SingleBitContainer **,_Bool,_Bool);1;TR;BasicDFSetAnalysis;0;1
allocateContainer;allocateContainer(Container **,_Bool,_Bool);0;TR;BasicDFSetAnalysis;0;1
allocateContainer;allocateContainer(class TR_BitVector **,_Bool,_Bool);0;TR;BasicDFSetAnalysis;0;1
allocateTempContainer;allocateTempContainer(class TR_SingleBitContainer **,class TR_SingleBitContainer *);1;TR;BasicDFSetAnalysis;0;1
allocateTempContainer;allocateTempContainer(Container **,Container *);0;TR;BasicDFSetAnalysis;0;1
allocateTempContainer;allocateTempContainer(class TR_BitVector **,class TR_BitVector *);0;TR;BasicDFSetAnalysis;0;1
clearAnalysisInfo;clearAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *);0;TR;BasicDFSetAnalysis;0;0
clearAnalysisInfo;clearAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *);0;TR;BasicDFSetAnalysis;0;0
compose;compose(class TR_BitVector *,class TR_BitVector *);1;TR;BasicDFSetAnalysis;0;1
compose;compose(Container *,Container *);0;TR;BasicDFSetAnalysis;0;1
compose;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);0;TR;BasicDFSetAnalysis;0;1
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *,class TR_Structure *);0;TR;BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *,class TR_RegionStructure *);0;TR;BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *,TR::Block *);0;TR;BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *,TR::Block *);0;TR;BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *,class TR_Structure *);0;TR;BasicDFSetAnalysis;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *,class TR_RegionStructure *);0;TR;BasicDFSetAnalysis;0;0
initializeInfo;initializeInfo(class TR_BitVector *);0;TR;BasicDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_SingleBitContainer *);0;TR;BasicDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);1;TR;BasicDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);0;TR;BasicDFSetAnalysis;0;1
inverseCompose;inverseCompose(Container *,Container *);0;TR;BasicDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);1;TR;BasicDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(Container *);0;TR;BasicDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_SingleBitContainer *);0;TR;BasicDFSetAnalysis;0;1
operator=;operator=(class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &&);0;TR;BasicDFSetAnalysis;1;0
operator=;operator=(const class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &);0;TR;BasicDFSetAnalysis;1;0
operator=;operator=(const class TR_BasicDFSetAnalysis<class TR_BitVector *> &);0;TR;BasicDFSetAnalysis;1;0
operator=;operator=(class TR_BasicDFSetAnalysis<class TR_BitVector *> &&);0;TR;BasicDFSetAnalysis;1;0
~TR_BasicDFSetAnalysis;~TR_BasicDFSetAnalysis();1;TR;BasicDFSetAnalysis;1;1
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(const class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &);1;TR;ForwardDFSetAnalysis;1;0
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;ForwardDFSetAnalysis;0;0
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &&);0;TR;ForwardDFSetAnalysis;1;0
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(const class TR_ForwardDFSetAnalysis<class TR_BitVector *> &);0;TR;ForwardDFSetAnalysis;1;0
TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(class TR_ForwardDFSetAnalysis<class TR_BitVector *> &&);0;TR;ForwardDFSetAnalysis;1;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_SingleBitContainer *);0;TR;ForwardDFSetAnalysis;0;1
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);0;TR;ForwardDFSetAnalysis;0;1
operator=;operator=(class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &&);0;TR;ForwardDFSetAnalysis;1;0
operator=;operator=(const class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &);0;TR;ForwardDFSetAnalysis;1;0
operator=;operator=(class TR_ForwardDFSetAnalysis<class TR_BitVector *> &&);0;TR;ForwardDFSetAnalysis;1;0
operator=;operator=(const class TR_ForwardDFSetAnalysis<class TR_BitVector *> &);0;TR;ForwardDFSetAnalysis;1;0
~TR_ForwardDFSetAnalysis;~TR_ForwardDFSetAnalysis();1;TR;ForwardDFSetAnalysis;1;1
TR_CatchBlockRemover;TR_CatchBlockRemover(class TR_CatchBlockRemover &&);1;TR;CatchBlockRemover;1;0
TR_CatchBlockRemover;TR_CatchBlockRemover(const class TR_CatchBlockRemover &);0;TR;CatchBlockRemover;1;0
TR_CatchBlockRemover;TR_CatchBlockRemover(TR::OptimizationManager *);0;TR;CatchBlockRemover;0;0
create;create(TR::OptimizationManager *);1;TR;CatchBlockRemover;0;0
operator=;operator=(const class TR_CatchBlockRemover &);0;TR;CatchBlockRemover;1;0
operator=;operator=(class TR_CatchBlockRemover &&);0;TR;CatchBlockRemover;1;0
~TR_CatchBlockRemover;~TR_CatchBlockRemover();1;TR;CatchBlockRemover;1;1
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;CFG;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;CFG;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;CFG;0;0
TR_CFGSimplifier;TR_CFGSimplifier(class TR_CFGSimplifier &&);1;TR;CFGSimplifier;1;0
TR_CFGSimplifier;TR_CFGSimplifier(const class TR_CFGSimplifier &);0;TR;CFGSimplifier;1;0
TR_CFGSimplifier;TR_CFGSimplifier(TR::OptimizationManager *);0;TR;CFGSimplifier;0;0
canReverseBranchMask;canReverseBranchMask();1;TR;CFGSimplifier;0;0
create;create(TR::OptimizationManager *);1;TR;CFGSimplifier;0;0
getFallThroughBlock;getFallThroughBlock(TR::Block *);1;TR;CFGSimplifier;0;0
getLastRealTreetop;getLastRealTreetop(TR::Block *);1;TR;CFGSimplifier;0;0
getNextRealTreetop;getNextRealTreetop(TR::TreeTop *,_Bool);1;TR;CFGSimplifier;0;0
operator=;operator=(class TR_CFGSimplifier &&);0;TR;CFGSimplifier;1;0
operator=;operator=(const class TR_CFGSimplifier &);0;TR;CFGSimplifier;1;0
simplify;simplify();1;TR;CFGSimplifier;0;0
simplifyBooleanStore;simplifyBooleanStore();1;TR;CFGSimplifier;0;0
simplifyCondCodeBooleanStore;simplifyCondCodeBooleanStore(TR::Block *,TR::Node *,TR::Node *,TR::Node *);1;TR;CFGSimplifier;0;0
~TR_CFGSimplifier;~TR_CFGSimplifier();1;TR;CFGSimplifier;1;1
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;CFG;0;0
TR_CompactLocals;TR_CompactLocals(class TR_CompactLocals &&);1;TR;CompactLocals;1;0
TR_CompactLocals;TR_CompactLocals(const class TR_CompactLocals &);0;TR;CompactLocals;1;0
TR_CompactLocals;TR_CompactLocals(TR::OptimizationManager *);0;TR;CompactLocals;0;0
assignColorsToSymbols;assignColorsToSymbols(class TR_BitVector *);1;TR;CompactLocals;0;0
create;create(TR::OptimizationManager *);1;TR;CompactLocals;0;0
createInterferenceBetween;createInterferenceBetween(class TR_BitVector *,class TR_BitVector *);1;TR;CompactLocals;0;0
createInterferenceBetween;createInterferenceBetween(class TR_BitVector *);0;TR;CompactLocals;0;0
createInterferenceBetweenLocals;createInterferenceBetweenLocals(int32_t);1;TR;CompactLocals;0;0
doCompactLocals;doCompactLocals();1;TR;CompactLocals;0;0
eligibleLocal;eligibleLocal(TR::AutomaticSymbol *);1;TR;CompactLocals;0;0
operator=;operator=(class TR_CompactLocals &&);0;TR;CompactLocals;1;0
operator=;operator=(const class TR_CompactLocals &);0;TR;CompactLocals;1;0
processNodeInPreorder;processNodeInPreorder(TR::Node *,vcount_t,class TR_Liveness *,TR::Block *,_Bool);1;TR;CompactLocals;0;0
~TR_CompactLocals;~TR_CompactLocals();1;TR;CompactLocals;1;1
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Optimizer;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Optimizer;0;0
TR_BackwardUnionBitVectorAnalysis;TR_BackwardUnionBitVectorAnalysis(const class TR_BackwardUnionBitVectorAnalysis &);1;TR;BackwardUnionBitVectorAnalysis;1;0
TR_BackwardUnionBitVectorAnalysis;TR_BackwardUnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;BackwardUnionBitVectorAnalysis;0;0
TR_BackwardUnionBitVectorAnalysis;TR_BackwardUnionBitVectorAnalysis(class TR_BackwardUnionBitVectorAnalysis &&);0;TR;BackwardUnionBitVectorAnalysis;1;0
TR_Liveness;TR_Liveness(class TR_Liveness &&);1;TR;Liveness;1;0
TR_Liveness;TR_Liveness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,class TR_LiveVariableInformation *,_Bool,_Bool);0;TR;Liveness;0;0
TR_Liveness;TR_Liveness(const class TR_Liveness &);0;TR;Liveness;1;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Structure;0;0
operator delete;operator delete(void *,size_t);0;TR;Structure;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;Structure;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Structure;0;0
operator new;operator new(size_t,TR::Region &);1;TR;Structure;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;Structure;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;Structure;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;IGBase;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;IGBase;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;TR;IGBase;0;0
operator new;operator new(size_t,TR::Region &);0;TR;IGBase;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;TR;IGBase;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;LocalAnalysis;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;LocalAnalysis;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;LocalAnalysis;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;LocalAnalysis;0;0
operator new;operator new(size_t,TR::Region &);1;TR;LocalAnalysis;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;LocalAnalysis;0;0
TR_CopyPropagation;TR_CopyPropagation(class TR_CopyPropagation &&);1;TR;CopyPropagation;1;0
TR_CopyPropagation;TR_CopyPropagation(const class TR_CopyPropagation &);0;TR;CopyPropagation;1;0
TR_CopyPropagation;TR_CopyPropagation(TR::OptimizationManager *);0;TR;CopyPropagation;0;0
adjustUseDefInfo;adjustUseDefInfo(TR::Node *,TR::Node *,class TR_UseDefInfo *);1;TR;CopyPropagation;0;0
areAllDefsInCorrectForm;areAllDefsInCorrectForm(TR::Node *,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *,int32_t,TR::Node *&,int32_t &,TR::Node *&);1;TR;CopyPropagation;0;0
collectUseTrees;collectUseTrees(TR::TreeTop *,TR::Node *,TR::NodeChecklist &);1;TR;CopyPropagation;0;0
commonIndirectLoadsFromAutos;commonIndirectLoadsFromAutos();1;TR;CopyPropagation;0;0
containsLoadOfSymbol;containsLoadOfSymbol(TR::Node *,TR::SymbolReference *,TR::Node **);1;TR;CopyPropagation;0;0
containsNode;containsNode(TR::Node *,TR::Node *,_Bool);1;TR;CopyPropagation;0;0
create;create(TR::OptimizationManager *);1;TR;CopyPropagation;0;0
findAnchorTree;findAnchorTree(TR::Node *,TR::Node *);1;TR;CopyPropagation;0;0
findUseTree;findUseTree(TR::Node *);1;TR;CopyPropagation;0;0
isBaseAddrAvailable;isBaseAddrAvailable(TR::Node *,TR::Node *,_Bool &);1;TR;CopyPropagation;0;0
isCheapRematerializationCandidate;isCheapRematerializationCandidate(TR::Node *,TR::Node *);1;TR;CopyPropagation;0;0
isCorrectToPropagate;isCorrectToPropagate(TR::Node *,TR::Node *,TR::list<TR::Node *> &,TR::SparseBitVector &,int32_t,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *);1;TR;CopyPropagation;0;0
isCorrectToReplace;isCorrectToReplace(TR::Node *,TR::Node *,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *);1;TR;CopyPropagation;0;0
isIndirectLoadFromAuto;isIndirectLoadFromAuto(TR::Node *);1;TR;CopyPropagation;0;0
isIndirectLoadFromRegister;isIndirectLoadFromRegister(TR::Node *,TR::Node *&);1;TR;CopyPropagation;0;0
isLoadNodeSuitableForPropagation;isLoadNodeSuitableForPropagation(TR::Node *,TR::Node *,TR::Node *);1;TR;CopyPropagation;0;0
isLoadVarWithConst;isLoadVarWithConst(TR::Node *);1;TR;CopyPropagation;0;0
isNodeAvailableInBlock;isNodeAvailableInBlock(TR::TreeTop *,TR::Node *);1;TR;CopyPropagation;0;0
isRedefinedBetweenStoreTreeAnd;isRedefinedBetweenStoreTreeAnd(TR::list<TR::Node *> &,TR::SparseBitVector &,TR::Node *,TR::TreeTop *,int32_t,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *);1;TR;CopyPropagation;0;0
isSafeToPropagate;isSafeToPropagate(TR::Node *,TR::Node *);1;TR;CopyPropagation;0;0
isUniqueDefinitionOfUse;isUniqueDefinitionOfUse(class TR_BitVector *,class TR_UseDefInfo *,int32_t);1;TR;CopyPropagation;0;0
isValidRegLoad;isValidRegLoad(TR::Node *,TR::TreeTop *,int32_t &);1;TR;CopyPropagation;0;0
operator=;operator=(class TR_CopyPropagation &&);0;TR;CopyPropagation;1;0
operator=;operator=(const class TR_CopyPropagation &);0;TR;CopyPropagation;1;0
recursive_isRedefinedBetweenStoreTreeAnd;recursive_isRedefinedBetweenStoreTreeAnd(TR::list<TR::Node *> &,TR::SparseBitVector &,TR::Node *,TR::TreeTop *,int32_t,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *);1;TR;CopyPropagation;0;0
rematerializeIndirectLoadsFromAutos;rematerializeIndirectLoadsFromAutos();1;TR;CopyPropagation;0;0
replaceCopySymbolReferenceByOriginalIn;replaceCopySymbolReferenceByOriginalIn(TR::SymbolReference *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,_Bool);1;TR;CopyPropagation;0;0
replaceCopySymbolReferenceByOriginalRegLoadIn;replaceCopySymbolReferenceByOriginalRegLoadIn(TR::Node *,TR::Node *,TR::SymbolReference *,TR::Node *,TR::Node *,int32_t);1;TR;CopyPropagation;0;0
skipTreeTopAndGetNode;skipTreeTopAndGetNode(TR::TreeTop *);1;TR;CopyPropagation;0;0
~TR_CopyPropagation;~TR_CopyPropagation();1;TR;CopyPropagation;1;1
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Optimizer;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;TransformUtil;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;TransformUtil;0;0
TR_DeadStoreElimination;TR_DeadStoreElimination(class TR_DeadStoreElimination &&);1;TR;DeadStoreElimination;1;0
TR_DeadStoreElimination;TR_DeadStoreElimination(const class TR_DeadStoreElimination &);0;TR;DeadStoreElimination;1;0
TR_DeadStoreElimination;TR_DeadStoreElimination(TR::OptimizationManager *);0;TR;DeadStoreElimination;0;0
TR_IsolatedStoreElimination;TR_IsolatedStoreElimination(const class TR_IsolatedStoreElimination &);1;TR;IsolatedStoreElimination;1;0
TR_IsolatedStoreElimination;TR_IsolatedStoreElimination(class TR_IsolatedStoreElimination &&);0;TR;IsolatedStoreElimination;1;0
TR_IsolatedStoreElimination;TR_IsolatedStoreElimination(TR::OptimizationManager *);0;TR;IsolatedStoreElimination;0;0
analyzeSingleBlockLoop;analyzeSingleBlockLoop(class TR_RegionStructure *,TR::Block *);1;TR;IsolatedStoreElimination;0;0
canRemoveStoreNode;canRemoveStoreNode(TR::Node *);1;TR;IsolatedStoreElimination;0;0
collectDefParentInfo;collectDefParentInfo(int32_t,TR::Node *,class TR_UseDefInfo *);1;TR;IsolatedStoreElimination;0;0
create;create(TR::OptimizationManager *);1;TR;IsolatedStoreElimination;0;0
examineNode;examineNode(TR::Node *,vcount_t,_Bool);1;TR;IsolatedStoreElimination;0;0
findStructuresAndNodesUsedIn;findStructuresAndNodesUsedIn(class TR_UseDefInfo *,class TR_Structure *,vcount_t,class TR_BitVector *,class TR_BitVector *,_Bool *);1;TR;IsolatedStoreElimination;0;0
groupIsolatedStores;groupIsolatedStores(int32_t,class TR_BitVector *,class TR_UseDefInfo *);1;TR;IsolatedStoreElimination;0;0
markNodesAndLocateSideEffectIn;markNodesAndLocateSideEffectIn(TR::Node *,vcount_t,class TR_BitVector *,class TR_BitVector *);1;TR;IsolatedStoreElimination;0;0
operator=;operator=(class TR_IsolatedStoreElimination &&);0;TR;IsolatedStoreElimination;1;0
operator=;operator=(const class TR_IsolatedStoreElimination &);0;TR;IsolatedStoreElimination;1;0
operator=;operator=(class TR_DeadStoreElimination &&);0;TR;DeadStoreElimination;1;0
operator=;operator=(const class TR_DeadStoreElimination &);0;TR;DeadStoreElimination;1;0
performDeadStructureRemoval;performDeadStructureRemoval(class TR_UseDefInfo *);1;TR;IsolatedStoreElimination;0;0
performWithUseDefInfo;performWithUseDefInfo();1;TR;IsolatedStoreElimination;0;0
performWithoutUseDefInfo;performWithoutUseDefInfo();1;TR;IsolatedStoreElimination;0;0
removeRedundantSpills;removeRedundantSpills();1;TR;IsolatedStoreElimination;0;0
~TR_DeadStoreElimination;~TR_DeadStoreElimination();1;TR;DeadStoreElimination;1;1
~TR_IsolatedStoreElimination;~TR_IsolatedStoreElimination();1;TR;IsolatedStoreElimination;1;1
AllBlockIterator;AllBlockIterator(TR::CFG *,TR::Compilation *,const char *);1;TR;AllBlockIterator;0;0
operator=;operator=(const class TR::BlockIterator &);1;TR;BlockIterator;1;0
operator=;operator=(class TR::BlockIterator &&);0;TR;BlockIterator;1;0
DeadTreesElimination;DeadTreesElimination(const class TR::DeadTreesElimination &);1;TR;DeadTreesElimination;1;0
DeadTreesElimination;DeadTreesElimination(TR::OptimizationManager *);0;TR;DeadTreesElimination;0;0
DeadTreesElimination;DeadTreesElimination(class TR::DeadTreesElimination &&);0;TR;DeadTreesElimination;1;0
create;create(TR::OptimizationManager *);1;TR;DeadTreesElimination;0;0
findLastTreetop;findLastTreetop(TR::Block *,TR::TreeTop *);1;TR;DeadTreesElimination;0;1
operator=;operator=(const class TR::DeadTreesElimination &);0;TR;DeadTreesElimination;1;0
operator=;operator=(class TR::DeadTreesElimination &&);0;TR;DeadTreesElimination;1;0
process;process(TR::TreeTop *,TR::TreeTop *);1;TR;DeadTreesElimination;0;0
~DeadTreesElimination;~DeadTreesElimination();1;TR;DeadTreesElimination;1;1
PostorderNodeOccurrenceIterator;PostorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *);1;TR;PostorderNodeOccurrenceIterator;0;0
TreeTopIteratorImpl;TreeTopIteratorImpl(const class TR::TreeTopIteratorImpl &);1;TR;TreeTopIteratorImpl;1;0
TreeTopIteratorImpl;TreeTopIteratorImpl(class TR::TreeTopIteratorImpl &&);0;TR;TreeTopIteratorImpl;1;0
PostorderNodeIterator;PostorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *);1;TR;PostorderNodeIterator;0;0
PreorderNodeIterator;PreorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *);1;TR;PreorderNodeIterator;0;0
PreorderNodeOccurrenceIterator;PreorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *);1;TR;PreorderNodeOccurrenceIterator;0;0
TransformUtil;TransformUtil(class OMR::TransformUtil &&);1;OMR;TransformUtil;1;0
TransformUtil;TransformUtil(const class OMR::TransformUtil &);0;OMR;TransformUtil;1;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;TransformUtil;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;TransformUtil;0;0
TreeTopIterator;TreeTopIterator(class TR::TreeTopIterator &&);1;TR;TreeTopIterator;1;0
TreeTopIterator;TreeTopIterator(TR::TreeTop *,TR::Compilation *,const char *);0;TR;TreeTopIterator;0;0
TreeTopIterator;TreeTopIterator(const class TR::TreeTopIterator &);0;TR;TreeTopIterator;1;0
TreeTopOrderExtendedBlockIterator;TreeTopOrderExtendedBlockIterator(TR::Compilation *,const char *);1;TR;TreeTopOrderExtendedBlockIterator;0;0
TR_Delayedness;TR_Delayedness(class TR_Delayedness &&);1;TR;Delayedness;1;0
TR_Delayedness;TR_Delayedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);0;TR;Delayedness;0;0
TR_Delayedness;TR_Delayedness(const class TR_Delayedness &);0;TR;Delayedness;1;0
TR_IntersectionBitVectorAnalysis;TR_IntersectionBitVectorAnalysis(class TR_IntersectionBitVectorAnalysis &&);1;TR;IntersectionBitVectorAnalysis;1;0
TR_IntersectionBitVectorAnalysis;TR_IntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;IntersectionBitVectorAnalysis;0;0
TR_IntersectionBitVectorAnalysis;TR_IntersectionBitVectorAnalysis(const class TR_IntersectionBitVectorAnalysis &);0;TR;IntersectionBitVectorAnalysis;1;0
TR_Earliestness;TR_Earliestness(class TR_Earliestness &&);1;TR;Earliestness;1;0
TR_Earliestness;TR_Earliestness(const class TR_Earliestness &);0;TR;Earliestness;1;0
TR_Earliestness;TR_Earliestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);0;TR;Earliestness;0;0
TR_UnionBitVectorAnalysis;TR_UnionBitVectorAnalysis(class TR_UnionBitVectorAnalysis &&);1;TR;UnionBitVectorAnalysis;1;0
TR_UnionBitVectorAnalysis;TR_UnionBitVectorAnalysis(const class TR_UnionBitVectorAnalysis &);0;TR;UnionBitVectorAnalysis;1;0
TR_UnionBitVectorAnalysis;TR_UnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;UnionBitVectorAnalysis;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;LiveVariableInformation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;LiveVariableInformation;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;LiveVariableInformation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;LiveVariableInformation;0;0
TR_Dominators;TR_Dominators(class TR_Dominators &&);1;TR;Dominators;1;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;CFG;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;AliasBuilder;0;0
TR_BackwardIntersectionBitVectorAnalysis;TR_BackwardIntersectionBitVectorAnalysis(class TR_BackwardIntersectionBitVectorAnalysis &&);1;TR;BackwardIntersectionBitVectorAnalysis;1;0
TR_BackwardIntersectionBitVectorAnalysis;TR_BackwardIntersectionBitVectorAnalysis(const class TR_BackwardIntersectionBitVectorAnalysis &);0;TR;BackwardIntersectionBitVectorAnalysis;1;0
TR_BackwardIntersectionBitVectorAnalysis;TR_BackwardIntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;BackwardIntersectionBitVectorAnalysis;0;0
TR_GlobalAnticipatability;TR_GlobalAnticipatability(class TR_GlobalAnticipatability &&);1;TR;GlobalAnticipatability;1;0
TR_GlobalAnticipatability;TR_GlobalAnticipatability(const class TR_GlobalAnticipatability &);0;TR;GlobalAnticipatability;1;0
TR_GlobalAnticipatability;TR_GlobalAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);0;TR;GlobalAnticipatability;0;0
TR_LocalAnalysis;TR_LocalAnalysis(const class TR_LocalAnalysis &);1;TR;LocalAnalysis;1;0
TR_LocalAnalysis;TR_LocalAnalysis(class TR_LocalAnalysisInfo &,_Bool);0;TR;LocalAnalysis;0;0
TR_LocalAnalysis;TR_LocalAnalysis(class TR_LocalAnalysis &&);0;TR;LocalAnalysis;1;0
TR_LocalAnticipatability;TR_LocalAnticipatability(class TR_LocalAnticipatability &&);1;TR;LocalAnticipatability;1;0
TR_LocalAnticipatability;TR_LocalAnticipatability(const class TR_LocalAnticipatability &);0;TR;LocalAnticipatability;1;0
TR_LocalAnticipatability;TR_LocalAnticipatability(class TR_LocalAnalysisInfo &,class TR_LocalTransparency *,_Bool);0;TR;LocalAnticipatability;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;LocalAnalysis;0;0
TR_LocalTransparency;TR_LocalTransparency(class TR_LocalTransparency &&);1;TR;LocalTransparency;1;0
TR_LocalTransparency;TR_LocalTransparency(class TR_LocalAnalysisInfo &,_Bool);0;TR;LocalTransparency;0;0
TR_LocalTransparency;TR_LocalTransparency(const class TR_LocalTransparency &);0;TR;LocalTransparency;1;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;LiveVariableInformation;0;0
TR_ExpressionsSimplification;TR_ExpressionsSimplification(const class TR_ExpressionsSimplification &);1;TR;ExpressionsSimplification;1;0
TR_ExpressionsSimplification;TR_ExpressionsSimplification(TR::OptimizationManager *);0;TR;ExpressionsSimplification;0;0
TR_ExpressionsSimplification;TR_ExpressionsSimplification(class TR_ExpressionsSimplification &&);0;TR;ExpressionsSimplification;1;0
checkForLoad;checkForLoad(TR::Node *,TR::Node *);1;TR;ExpressionsSimplification;0;0
create;create(TR::OptimizationManager *);1;TR;ExpressionsSimplification;0;0
findAndSimplifyInvariantLoopExpressions;findAndSimplifyInvariantLoopExpressions(class TR_RegionStructure *);1;TR;ExpressionsSimplification;0;0
findLoopInfo;findLoopInfo(class TR_RegionStructure *);1;TR;ExpressionsSimplification;0;0
findPredecessorBlock;findPredecessorBlock(TR::CFGNode *);1;TR;ExpressionsSimplification;0;0
findUseInRegion;findUseInRegion(class TR_RegionStructure *,uint16_t,uint16_t);1;TR;ExpressionsSimplification;0;0
findUseInRegion;findUseInRegion(TR::Node *,uint16_t,uint16_t);0;TR;ExpressionsSimplification;0;0
iaddisubSimplifier;iaddisubSimplifier(TR::Node *,class TR_ExpressionsSimplification::LoopInfo *);1;TR;ExpressionsSimplification;0;0
invalidateCandidates;invalidateCandidates();1;TR;ExpressionsSimplification;0;0
isSupportedNodeForExpressionSimplification;isSupportedNodeForExpressionSimplification(TR::Node *);1;TR;ExpressionsSimplification;0;0
ixorinegSimplifier;ixorinegSimplifier(TR::Node *,class TR_ExpressionsSimplification::LoopInfo *,_Bool *);1;TR;ExpressionsSimplification;0;0
operator=;operator=(class TR_ExpressionsSimplification &&);0;TR;ExpressionsSimplification;1;0
operator=;operator=(const class TR_ExpressionsSimplification &);0;TR;ExpressionsSimplification;1;0
perform;perform(class TR_Structure *);0;TR;ExpressionsSimplification;0;0
removeCandidate;removeCandidate(class TR_RegionStructure *);1;TR;ExpressionsSimplification;0;0
removeCandidate;removeCandidate(TR::Node *,TR::TreeTop *);0;TR;ExpressionsSimplification;0;0
removeUncertainBlocks;removeUncertainBlocks(class TR_RegionStructure *,List<TR::Block> *);1;TR;ExpressionsSimplification;0;0
removeUnsupportedCandidates;removeUnsupportedCandidates();1;TR;ExpressionsSimplification;0;0
setStoreMotionCandidates;setStoreMotionCandidates(TR::Node *,TR::TreeTop *);1;TR;ExpressionsSimplification;0;0
setSummationReductionCandidates;setSummationReductionCandidates(TR::Node *,TR::TreeTop *);1;TR;ExpressionsSimplification;0;0
simplifyInvariantLoopExpressions;simplifyInvariantLoopExpressions(ListIterator<TR::Block> &);1;TR;ExpressionsSimplification;0;0
tranformStoreMotionCandidate;tranformStoreMotionCandidate(TR::TreeTop *,_Bool *);1;TR;ExpressionsSimplification;0;0
tranformSummationReductionCandidate;tranformSummationReductionCandidate(TR::TreeTop *,class TR_ExpressionsSimplification::LoopInfo *,_Bool *);1;TR;ExpressionsSimplification;0;0
transformNode;transformNode(TR::Node *,TR::Block *);1;TR;ExpressionsSimplification;0;0
~TR_ExpressionsSimplification;~TR_ExpressionsSimplification();1;TR;ExpressionsSimplification;1;1
removeEdge;removeEdge(TR::CFGEdge *);1;OMR;CFG;0;0
removeEdge;removeEdge(TR::CFGNode *,TR::CFGNode *);0;OMR;CFG;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;TransformUtil;0;0
TR_PostDominators;TR_PostDominators(const class TR_PostDominators &);0;TR;PostDominators;1;0
TR_PostDominators;TR_PostDominators(class TR_PostDominators &&);0;TR;PostDominators;1;0
~TR_PostDominators;~TR_PostDominators();1;TR;PostDominators;1;0
TR_Inliner;TR_Inliner(TR::OptimizationManager *);1;TR;Inliner;0;0
TR_Inliner;TR_Inliner(class TR_Inliner &&);0;TR;Inliner;1;0
TR_FieldPrivatizer;TR_FieldPrivatizer(const class TR_FieldPrivatizer &);1;TR;FieldPrivatizer;1;0
TR_FieldPrivatizer;TR_FieldPrivatizer(class TR_FieldPrivatizer &&);0;TR;FieldPrivatizer;1;0
TR_FieldPrivatizer;TR_FieldPrivatizer(TR::OptimizationManager *);0;TR;FieldPrivatizer;0;0
TR_LoopTransformer;TR_LoopTransformer(const class TR_LoopTransformer &);1;TR;LoopTransformer;1;0
TR_LoopTransformer;TR_LoopTransformer(class TR_LoopTransformer &&);0;TR;LoopTransformer;1;0
TR_LoopTransformer;TR_LoopTransformer(TR::OptimizationManager *);0;TR;LoopTransformer;0;0
addPrivatizedRegisterCandidates;addPrivatizedRegisterCandidates(class TR_Structure *);1;TR;FieldPrivatizer;0;0
addStringInitialization;addStringInitialization(TR::Block *);1;TR;FieldPrivatizer;0;0
adjustTreesInBlock;adjustTreesInBlock(TR::Block *);1;TR;LoopTransformer;0;0
asLoopCanonicalizer;asLoopCanonicalizer();1;TR;LoopTransformer;0;1
asLoopPredictor;asLoopPredictor();1;TR;LoopTransformer;0;1
asLoopReducer;asLoopReducer();1;TR;LoopTransformer;0;1
asLoopVersioner;asLoopVersioner();1;TR;LoopTransformer;0;1
blockIsAlwaysExecutedInLoop;blockIsAlwaysExecutedInLoop(TR::Block *,class TR_RegionStructure *,_Bool *);1;TR;LoopTransformer;0;0
bothSubtreesMatch;bothSubtreesMatch(TR::Node *,TR::Node *);1;TR;FieldPrivatizer;0;0
canPrivatizeFieldSymRef;canPrivatizeFieldSymRef(TR::Node *);1;TR;FieldPrivatizer;0;0
checkIfIncrementInDifferentExtendedBlock;checkIfIncrementInDifferentExtendedBlock(TR::Block *,int32_t);1;TR;LoopTransformer;0;1
checkLoopForPredictability;checkLoopForPredictability(class TR_Structure *,TR::Block *,TR::Node **,_Bool);1;TR;LoopTransformer;0;1
cleanseTrees;cleanseTrees(TR::Block *);1;TR;LoopTransformer;0;0
cleanupStringPeephole;cleanupStringPeephole();1;TR;FieldPrivatizer;0;0
collectSymbolsWrittenAndReadExactlyOnce;collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t,struct TR_LoopTransformer::updateInfo_tables &);1;TR;LoopTransformer;0;0
collectSymbolsWrittenAndReadExactlyOnce;collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t);0;TR;LoopTransformer;0;0
containsEscapePoints;containsEscapePoints(class TR_Structure *,_Bool &);1;TR;FieldPrivatizer;0;0
containsOnlyInductionVariableAndAdditiveConstant;containsOnlyInductionVariableAndAdditiveConstant(TR::Node *,int32_t);1;TR;LoopTransformer;0;0
create;create(TR::OptimizationManager *);1;TR;FieldPrivatizer;0;0
createNewEmptyBlock;createNewEmptyBlock();1;TR;LoopTransformer;0;0
createNewGotoNode;createNewGotoNode();1;TR;LoopTransformer;0;0
createWhileLoopsList;createWhileLoopsList(TR_ScratchList<class TR_Structure> *);1;TR;LoopTransformer;0;0
detectCanonicalizedPredictableLoops;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);1;TR;LoopTransformer;0;1
detectEmptyLoop;detectEmptyLoop(class TR_Structure *,int32_t *);1;TR;LoopTransformer;0;0
detectFieldsThatCannotBePrivatized;detectFieldsThatCannotBePrivatized(TR::Node *,vcount_t);1;TR;FieldPrivatizer;0;0
detectFieldsThatCannotBePrivatized;detectFieldsThatCannotBePrivatized(class TR_Structure *,vcount_t);0;TR;FieldPrivatizer;0;0
detectWhileLoops;detectWhileLoops(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_Structure *,_Bool);1;TR;LoopTransformer;0;0
detectWhileLoopsInSubnodesInOrder;detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_Structure *,class TR_StructureSubGraphNode *,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool);1;TR;LoopTransformer;0;0
detectWhileLoopsInSubnodesInOrder;detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool);0;TR;LoopTransformer;0;0
duplicateExact;duplicateExact(TR::Node *,List<TR::Node> *,List<TR::Node> *);1;TR;LoopTransformer;0;0
elementPrivatization;elementPrivatization();1;TR;FieldPrivatizer;0;0
examineTreeForInductionVariableUse;examineTreeForInductionVariableUse(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t,TR::SymbolReference **);1;TR;LoopTransformer;0;1
findElementCandidates;findElementCandidates();1;TR;FieldPrivatizer;0;0
findMatchingIVInRegion;findMatchingIVInRegion(TR::TreeTop *,class TR_RegionStructure *);1;TR;LoopTransformer;0;0
getCorrectNumberOfIterations;getCorrectNumberOfIterations(TR::Node *,TR::Node *);1;TR;LoopTransformer;0;0
getInductionSymbolReference;getInductionSymbolReference(TR::Node *);1;TR;LoopTransformer;0;1
getOffSetFromAddressNode;getOffSetFromAddressNode(TR::Node *);1;TR;FieldPrivatizer;0;0
getPrivatizedFieldAutoSymRef;getPrivatizedFieldAutoSymRef(TR::Node *);1;TR;FieldPrivatizer;0;0
getSymbolDefUseStateInBlock;getSymbolDefUseStateInBlock(TR::Block *,TR::RegisterMappedSymbol *);1;TR;LoopTransformer;0;0
getSymbolDefUseStateInSubTree;getSymbolDefUseStateInSubTree(TR::Node *,TR::RegisterMappedSymbol *);1;TR;LoopTransformer;0;0
initializeSymbolsWrittenAndReadExactlyOnce;initializeSymbolsWrittenAndReadExactlyOnce(int32_t,enum TR_BitVectorGrowable);1;TR;LoopTransformer;0;0
isFieldAliasAccessed;isFieldAliasAccessed(TR::SymbolReference *);1;TR;FieldPrivatizer;0;0
isNodeInCorrectForm;isNodeInCorrectForm(TR::Node *);1;TR;FieldPrivatizer;0;0
isStoreInRequiredForm;isStoreInRequiredForm(int32_t,class TR_Structure *);1;TR;LoopTransformer;0;1
isStringPeephole;isStringPeephole(TR::Node *,TR::TreeTop *);1;TR;FieldPrivatizer;0;0
isSymbolReferenceWrittenNumberOfTimesInStructure;isSymbolReferenceWrittenNumberOfTimesInStructure(class TR_Structure *,int32_t,int32_t *,int32_t);1;TR;LoopTransformer;0;0
makeInvariantBlockFallThroughIfPossible;makeInvariantBlockFallThroughIfPossible(TR::Block *);1;TR;LoopTransformer;0;0
operator=;operator=(class TR_LoopTransformer &&);0;TR;LoopTransformer;1;0
operator=;operator=(const class TR_LoopTransformer &);0;TR;LoopTransformer;1;0
operator=;operator=(class TR_FieldPrivatizer &&);0;TR;FieldPrivatizer;1;0
operator=;operator=(const class TR_FieldPrivatizer &);0;TR;FieldPrivatizer;1;0
placeInitializersInLoopInvariantBlock;placeInitializersInLoopInvariantBlock(TR::Block *);1;TR;FieldPrivatizer;0;0
placeStoresBackInExit;placeStoresBackInExit(TR::Block *,_Bool);1;TR;FieldPrivatizer;0;0
placeStoresBackInExits;placeStoresBackInExits(List<TR::Block> *,List<TR::Block> *);1;TR;FieldPrivatizer;0;0
placeStringEpilogueInExits;placeStringEpilogueInExits(List<TR::Block> *,List<TR::Block> *);1;TR;FieldPrivatizer;0;0
placeStringEpiloguesBackInExit;placeStringEpiloguesBackInExit(TR::Block *,_Bool);1;TR;FieldPrivatizer;0;0
printTrees;printTrees();1;TR;LoopTransformer;0;0
privatizeElementCandidates;privatizeElementCandidates();1;TR;FieldPrivatizer;0;0
privatizeFields;privatizeFields(TR::Node *,_Bool,vcount_t);1;TR;FieldPrivatizer;0;0
privatizeNonEscapingLoop;privatizeNonEscapingLoop(class TR_Structure *,TR::Block *,vcount_t);1;TR;FieldPrivatizer;0;0
replaceAllInductionVariableComputations;replaceAllInductionVariableComputations(TR::Block *,class TR_Structure *,TR::SymbolReference **,TR::SymbolReference *);1;TR;LoopTransformer;0;1
setVisitCount;setVisitCount(vcount_t);1;TR;FieldPrivatizer;0;0
storesBackMustBePlacedInExitBlock;storesBackMustBePlacedInExitBlock(TR::Block *,TR::Block *,class TR_BitVector *);1;TR;FieldPrivatizer;0;0
subtreeIsInvariantInLoop;subtreeIsInvariantInLoop(TR::Node *);1;TR;FieldPrivatizer;0;0
updateInfo;updateInfo(TR::Node *,vcount_t,struct TR_LoopTransformer::updateInfo_tables &);1;TR;LoopTransformer;0;0
updateLoadUsedInLoopIncrement;updateLoadUsedInLoopIncrement(TR::Node *,int32_t);1;TR;LoopTransformer;0;1
updateStoreInfo;updateStoreInfo(int32_t,TR::TreeTop *);1;TR;LoopTransformer;0;1
walkTreeForLoadOrStoreNode;walkTreeForLoadOrStoreNode(TR::Node *);1;TR;FieldPrivatizer;0;0
~TR_FieldPrivatizer;~TR_FieldPrivatizer();1;TR;FieldPrivatizer;1;1
~TR_LoopTransformer;~TR_LoopTransformer();1;TR;LoopTransformer;1;1
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;InlinerTracer;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;InlinerTracer;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;InlinerTracer;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;InlinerTracer;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;TR;LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;LocalAnalysis;0;0
TR_LoopCanonicalizer;TR_LoopCanonicalizer(const class TR_LoopCanonicalizer &);1;TR;LoopCanonicalizer;1;0
TR_LoopCanonicalizer;TR_LoopCanonicalizer(TR::OptimizationManager *);0;TR;LoopCanonicalizer;0;0
TR_LoopCanonicalizer;TR_LoopCanonicalizer(class TR_LoopCanonicalizer &&);0;TR;LoopCanonicalizer;1;0
TR_RedundantInductionVarElimination;TR_RedundantInductionVarElimination(const class TR_RedundantInductionVarElimination &);1;TR;RedundantInductionVarElimination;1;0
TR_RedundantInductionVarElimination;TR_RedundantInductionVarElimination(TR::OptimizationManager *);0;TR;RedundantInductionVarElimination;0;0
TR_RedundantInductionVarElimination;TR_RedundantInductionVarElimination(class TR_RedundantInductionVarElimination &&);0;TR;RedundantInductionVarElimination;1;0
canonicalizeDoWhileLoop;canonicalizeDoWhileLoop(class TR_RegionStructure *);1;TR;LoopCanonicalizer;0;0
canonicalizeNaturalLoop;canonicalizeNaturalLoop(class TR_RegionStructure *);1;TR;LoopCanonicalizer;0;0
checkComplexInductionVariableUse;checkComplexInductionVariableUse(class TR_Structure *);1;TR;LoopCanonicalizer;0;0
checkComplexInductionVariableUseNode;checkComplexInductionVariableUseNode(TR::Node *,_Bool);1;TR;LoopCanonicalizer;0;0
checkIfOrderOfBlocksIsKnown;checkIfOrderOfBlocksIsKnown(class TR_RegionStructure *,TR::Block *,TR::Block *,TR_ScratchList<TR::Block> *,TR_ScratchList<TR::Block> *,uint8_t &);1;TR;LoopCanonicalizer;0;0
create;create(TR::OptimizationManager *);1;TR;LoopCanonicalizer;0;0
eliminateRedundantInductionVariablesFromLoop;eliminateRedundantInductionVariablesFromLoop(class TR_RegionStructure *);1;TR;LoopCanonicalizer;0;0
findIncrements;findIncrements(TR::Node *,vcount_t,TR::SymbolReference *,TR::SymbolReference *,int64_t &,int64_t &,_Bool &);1;TR;LoopCanonicalizer;0;0
incrementedInLockStep;incrementedInLockStep(class TR_Structure *,TR::SymbolReference *,TR::SymbolReference *,int64_t,int64_t,TR_ScratchList<TR::Block> *,TR_ScratchList<TR::Block> *);1;TR;LoopCanonicalizer;0;0
isLegalToSplitEdges;isLegalToSplitEdges(class TR_RegionStructure *,TR::Block *);1;TR;LoopCanonicalizer;0;0
modifyBranchesForSplitEdges;modifyBranchesForSplitEdges(class TR_RegionStructure *,TR::Block *,TR::Block *,TR::Block *,_Bool,int32_t *,_Bool);1;TR;LoopCanonicalizer;0;0
operator=;operator=(class TR_LoopCanonicalizer &&);0;TR;LoopCanonicalizer;1;0
operator=;operator=(const class TR_LoopCanonicalizer &);0;TR;LoopCanonicalizer;1;0
operator=;operator=(class TR_RedundantInductionVarElimination &&);0;TR;RedundantInductionVarElimination;1;0
operator=;operator=(const class TR_RedundantInductionVarElimination &);0;TR;RedundantInductionVarElimination;1;0
placeInitializationTreeInLoopPreHeader;placeInitializationTreeInLoopPreHeader(TR::Block *,TR::Node *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);1;TR;LoopCanonicalizer;0;0
replaceInductionVariableComputationsInExits;replaceInductionVariableComputationsInExits(class TR_Structure *,TR::Node *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);1;TR;LoopCanonicalizer;0;0
rewritePostToPreIncrementTestInBlock;rewritePostToPreIncrementTestInBlock(TR::Block *);1;TR;LoopCanonicalizer;0;0
rewritePostToPreIncrementTestInRegion;rewritePostToPreIncrementTestInRegion(class TR_RegionStructure *);1;TR;LoopCanonicalizer;0;0
~TR_LoopCanonicalizer;~TR_LoopCanonicalizer();1;TR;LoopCanonicalizer;1;1
~TR_RedundantInductionVarElimination;~TR_RedundantInductionVarElimination();1;TR;RedundantInductionVarElimination;1;1
TR_LoopInverter;TR_LoopInverter(class TR_LoopInverter &&);1;TR;LoopInverter;1;0
TR_LoopInverter;TR_LoopInverter(const class TR_LoopInverter &);0;TR;LoopInverter;1;0
TR_LoopInverter;TR_LoopInverter(TR::OptimizationManager *);0;TR;LoopInverter;0;0
checkIfSymbolIsReadInKnownTree;checkIfSymbolIsReadInKnownTree(TR::Node *,int32_t,TR::TreeTop *,TR::NodeChecklist &);1;TR;LoopInverter;0;0
create;create(TR::OptimizationManager *);1;TR;LoopInverter;0;0
isInvertibleLoop;isInvertibleLoop(int32_t,class TR_Structure *);1;TR;LoopInverter;0;0
operator=;operator=(class TR_LoopInverter &&);0;TR;LoopInverter;1;0
operator=;operator=(const class TR_LoopInverter &);0;TR;LoopInverter;1;0
~TR_LoopInverter;~TR_LoopInverter();1;TR;LoopInverter;1;1
TR_InductionVariableAnalysis;TR_InductionVariableAnalysis(class TR_InductionVariableAnalysis &&);1;TR;InductionVariableAnalysis;1;0
TR_InductionVariableAnalysis;TR_InductionVariableAnalysis(const class TR_InductionVariableAnalysis &);0;TR;InductionVariableAnalysis;1;0
TR_InductionVariableAnalysis;TR_InductionVariableAnalysis(TR::OptimizationManager *);0;TR;InductionVariableAnalysis;0;0
analyzeAcyclicRegion;analyzeAcyclicRegion(class TR_RegionStructure *,class TR_RegionStructure *);1;TR;InductionVariableAnalysis;0;0
analyzeBlock;analyzeBlock(class TR_BlockStructure *,class TR_RegionStructure *);1;TR;InductionVariableAnalysis;0;0
analyzeCyclicRegion;analyzeCyclicRegion(class TR_RegionStructure *,class TR_RegionStructure *);1;TR;InductionVariableAnalysis;0;0
analyzeExitEdges;analyzeExitEdges(class TR_RegionStructure *,class TR_BitVector *,TR_Array<class TR_BasicInductionVariable *> &);1;TR;InductionVariableAnalysis;0;0
analyzeLoopExpressions;analyzeLoopExpressions(class TR_RegionStructure *,class TR_InductionVariableAnalysis::DeltaInfo **);1;TR;InductionVariableAnalysis;0;0
analyzeNaturalLoop;analyzeNaturalLoop(class TR_RegionStructure *);1;TR;InductionVariableAnalysis;0;0
appendPredecessors;appendPredecessors(WorkQueue &,TR::Block *);1;TR;InductionVariableAnalysis;0;0
branchContainsInductionVariable;branchContainsInductionVariable(class TR_RegionStructure *,TR::Node *,TR_Array<class TR_BasicInductionVariable *> &);1;TR;InductionVariableAnalysis;0;0
branchContainsInductionVariable;branchContainsInductionVariable(TR::Node *,TR::SymbolReference *,int32_t *);0;TR;InductionVariableAnalysis;0;0
create;create(TR::OptimizationManager *);1;TR;InductionVariableAnalysis;0;0
findEntryValueForSymRef;findEntryValueForSymRef(class TR_RegionStructure *,TR::SymbolReference *);1;TR;InductionVariableAnalysis;0;0
findEntryValues;findEntryValues(class TR_RegionStructure *,TR_Array<class TR_BasicInductionVariable *> &);1;TR;InductionVariableAnalysis;0;0
gatherCandidates;gatherCandidates(class TR_Structure *,class TR_BitVector *,class TR_BitVector *);1;TR;InductionVariableAnalysis;0;0
getBlockInfo;getBlockInfo(TR::Block *);1;TR;InductionVariableAnalysis;0;0
getEntryValue;getEntryValue(TR::Block *,TR::SymbolReference *,class TR_BitVector *,TR_Array<TR::Node *> &);1;TR;InductionVariableAnalysis;0;0
getInductionVariables;getInductionVariables();1;TR;InductionVariableAnalysis;0;0
getProgression;getProgression(TR::Node *,TR::SymbolReference *,TR::SymbolReference **,enum TR_ProgressionKind *,int64_t *);1;TR;InductionVariableAnalysis;0;0
initializeBlockInfoArray;initializeBlockInfoArray(class TR_RegionStructure *);1;TR;InductionVariableAnalysis;0;0
isGotoBlock;isGotoBlock(TR::Block *);1;TR;InductionVariableAnalysis;0;0
isIVUnchangedInLoop;isIVUnchangedInLoop(class TR_RegionStructure *,TR::Block *,TR::Node *);1;TR;InductionVariableAnalysis;0;0
isProgressionalStore;isProgressionalStore(TR::Node *,enum TR_ProgressionKind *,int64_t *);1;TR;InductionVariableAnalysis;0;0
mergeWithBlock;mergeWithBlock(TR::Block *,class TR_InductionVariableAnalysis::DeltaInfo **,class TR_RegionStructure *);1;TR;InductionVariableAnalysis;0;0
mergeWithSet;mergeWithSet(class TR_InductionVariableAnalysis::DeltaInfo **,class TR_InductionVariableAnalysis::DeltaInfo **,class TR_RegionStructure *);1;TR;InductionVariableAnalysis;0;0
newBlockInfo;newBlockInfo(class TR_RegionStructure *);1;TR;InductionVariableAnalysis;0;0
operator=;operator=(class TR_InductionVariableAnalysis &&);0;TR;InductionVariableAnalysis;1;0
operator=;operator=(const class TR_InductionVariableAnalysis &);0;TR;InductionVariableAnalysis;1;0
perform;perform(class TR_RegionStructure *);0;TR;InductionVariableAnalysis;0;0
printDeltaInfo;printDeltaInfo(class TR_InductionVariableAnalysis::DeltaInfo *);1;TR;InductionVariableAnalysis;0;0
setBlockInfo;setBlockInfo(TR::Block *,class TR_InductionVariableAnalysis::DeltaInfo **);1;TR;InductionVariableAnalysis;0;0
~TR_InductionVariableAnalysis;~TR_InductionVariableAnalysis();1;TR;InductionVariableAnalysis;1;1
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;SymbolReferenceTable;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;SymbolReferenceTable;0;0
VPIntConstraint;VPIntConstraint(int32_t);1;TR;VPIntConstraint;0;0
VPIntConstraint;VPIntConstraint(class TR::VPIntConstraint &&);0;TR;VPIntConstraint;1;0
getMaxNestingDepth;getMaxNestingDepth(int32_t *,int32_t *);1;TR;Structure;0;1
getMaxNestingDepth;getMaxNestingDepth();0;TR;Structure;0;0
TR_BasicInductionVariable;TR_BasicInductionVariable(class TR_BasicInductionVariable &&);1;TR;BasicInductionVariable;1;0
TR_BasicInductionVariable;TR_BasicInductionVariable(const class TR_BasicInductionVariable &);0;TR;BasicInductionVariable;1;0
TR_BasicInductionVariable;TR_BasicInductionVariable(TR::Compilation *,class TR_BasicInductionVariable *);0;TR;BasicInductionVariable;0;0
TR_BasicInductionVariable;TR_BasicInductionVariable(TR::Compilation *,class TR_RegionStructure *,TR::SymbolReference *);0;TR;BasicInductionVariable;0;0
TR_DerivedInductionVariable;TR_DerivedInductionVariable(TR::Compilation *,class TR_BasicInductionVariable *,class TR_PrimaryInductionVariable *);1;TR;DerivedInductionVariable;0;0
comp;comp();1;TR;BasicInductionVariable;0;0
getDeltaOnBackEdge;getDeltaOnBackEdge();1;TR;BasicInductionVariable;0;0
getDeltaOnExitEdge;getDeltaOnExitEdge();1;TR;BasicInductionVariable;0;0
getEntryValue;getEntryValue();1;TR;BasicInductionVariable;0;0
getExitValue;getExitValue();1;TR;BasicInductionVariable;0;1
getIncrement;getIncrement();1;TR;BasicInductionVariable;0;0
getIterationCount;getIterationCount();1;TR;BasicInductionVariable;0;1
getSymRef;getSymRef();1;TR;BasicInductionVariable;0;0
isLongInt;isLongInt();1;TR;BasicInductionVariable;0;0
isOnlyIncrementValid;isOnlyIncrementValid();1;TR;BasicInductionVariable;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;BasicInductionVariable;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;BasicInductionVariable;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;BasicInductionVariable;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;BasicInductionVariable;0;0
operator delete;operator delete(void *,size_t);0;TR;BasicInductionVariable;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;BasicInductionVariable;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;BasicInductionVariable;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;BasicInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;BasicInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;BasicInductionVariable;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;BasicInductionVariable;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;TR;BasicInductionVariable;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;BasicInductionVariable;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;BasicInductionVariable;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;BasicInductionVariable;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;BasicInductionVariable;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;BasicInductionVariable;0;0
operator new;operator new(size_t,TR::Region &);0;TR;BasicInductionVariable;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;BasicInductionVariable;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;BasicInductionVariable;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;BasicInductionVariable;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;BasicInductionVariable;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;BasicInductionVariable;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;BasicInductionVariable;0;0
operator=;operator=(const class TR_BasicInductionVariable &);1;TR;BasicInductionVariable;1;0
operator=;operator=(class TR_BasicInductionVariable &&);0;TR;BasicInductionVariable;1;0
operator=;operator=(class TR_DerivedInductionVariable &&);0;TR;DerivedInductionVariable;1;0
operator=;operator=(const class TR_DerivedInductionVariable &);0;TR;DerivedInductionVariable;1;0
setDeltaOnBackEdge;setDeltaOnBackEdge(int32_t);1;TR;BasicInductionVariable;0;0
setDeltaOnExitEdge;setDeltaOnExitEdge(int32_t);1;TR;BasicInductionVariable;0;0
setEntryValue;setEntryValue(TR::Node *);1;TR;BasicInductionVariable;0;0
setIncrement;setIncrement(int32_t);1;TR;BasicInductionVariable;0;0
setOnlyIncrementValid;setOnlyIncrementValid(_Bool);1;TR;BasicInductionVariable;0;0
~TR_BasicInductionVariable;~TR_BasicInductionVariable();1;TR;BasicInductionVariable;1;0
~TR_DerivedInductionVariable;~TR_DerivedInductionVariable();1;TR;DerivedInductionVariable;1;0
TR_GeneralLoopUnroller;TR_GeneralLoopUnroller(class TR_GeneralLoopUnroller &&);1;TR;GeneralLoopUnroller;1;0
TR_GeneralLoopUnroller;TR_GeneralLoopUnroller(TR::OptimizationManager *);0;TR;GeneralLoopUnroller;0;0
TR_GeneralLoopUnroller;TR_GeneralLoopUnroller(const class TR_GeneralLoopUnroller &);0;TR;GeneralLoopUnroller;1;0
branchContainsInductionVariable;branchContainsInductionVariable(class TR_RegionStructure *,TR::Node *,_Bool);1;TR;GeneralLoopUnroller;0;0
branchContainsInductionVariable;branchContainsInductionVariable(TR::Node *,TR::SymbolReference *);0;TR;GeneralLoopUnroller;0;0
canUnrollUnCountedLoop;canUnrollUnCountedLoop(class TR_RegionStructure *,int32_t,int32_t,int32_t);1;TR;GeneralLoopUnroller;0;0
collectNonColdInnerLoops;collectNonColdInnerLoops(class TR_RegionStructure *,List<class TR_RegionStructure> &);1;TR;GeneralLoopUnroller;0;0
countNodesAndSubscripts;countNodesAndSubscripts(TR::Node *,int32_t &,int32_t &,class LoopWeightProbe &);1;TR;GeneralLoopUnroller;0;0
create;create(TR::OptimizationManager *);1;TR;GeneralLoopUnroller;0;0
gatherStatistics;gatherStatistics(class TR_Structure *,int32_t &,int32_t &,int32_t &,int32_t &,class LoopWeightProbe &);1;TR;GeneralLoopUnroller;0;0
operator=;operator=(class TR_GeneralLoopUnroller &&);0;TR;GeneralLoopUnroller;1;0
operator=;operator=(const class TR_GeneralLoopUnroller &);0;TR;GeneralLoopUnroller;1;0
profileNonCountedLoops;profileNonCountedLoops(List<class TR_RegionStructure> &);1;TR;GeneralLoopUnroller;0;0
weighNaturalLoop;weighNaturalLoop(class TR_RegionStructure *,class TR_LoopUnroller::UnrollKind &,int32_t &,int32_t &,int32_t &);1;TR;GeneralLoopUnroller;0;0
~TR_GeneralLoopUnroller;~TR_GeneralLoopUnroller();1;TR;GeneralLoopUnroller;1;1
TR_IVTypeTransformer;TR_IVTypeTransformer(const class TR_IVTypeTransformer &);1;TR;IVTypeTransformer;1;0
TR_IVTypeTransformer;TR_IVTypeTransformer(class TR_IVTypeTransformer &&);0;TR;IVTypeTransformer;1;0
TR_IVTypeTransformer;TR_IVTypeTransformer(TR::OptimizationManager *);0;TR;IVTypeTransformer;0;0
changeIVTypeFromAddrToInt;changeIVTypeFromAddrToInt(class TR_RegionStructure *);1;TR;IVTypeTransformer;0;0
create;create(TR::OptimizationManager *);1;TR;IVTypeTransformer;0;0
findComparandSymRef;findComparandSymRef(TR::Node *);1;TR;IVTypeTransformer;0;0
getIntegralIfOpCode;getIntegralIfOpCode(TR::ILOpCodes,_Bool);1;TR;IVTypeTransformer;0;0
isInAddrIncrementForm;isInAddrIncrementForm(TR::Node *,int32_t &);1;TR;IVTypeTransformer;0;0
operator=;operator=(class TR_IVTypeTransformer &&);0;TR;IVTypeTransformer;1;0
operator=;operator=(const class TR_IVTypeTransformer &);0;TR;IVTypeTransformer;1;0
replaceAloadWithBaseIndexInSubtree;replaceAloadWithBaseIndexInSubtree(TR::Node *);1;TR;IVTypeTransformer;0;0
~TR_IVTypeTransformer;~TR_IVTypeTransformer();1;TR;IVTypeTransformer;1;1
TR_LoopStrider;TR_LoopStrider(const class TR_LoopStrider &);1;TR;LoopStrider;1;0
TR_LoopStrider;TR_LoopStrider(class TR_LoopStrider &&);0;TR;LoopStrider;1;0
TR_LoopStrider;TR_LoopStrider(TR::OptimizationManager *);0;TR;LoopStrider;0;0
addLoad;addLoad(class TR_StoreTreeInfo *,TR::Node *,int32_t);1;TR;LoopStrider;0;0
changeBranchFromIntToLong;changeBranchFromIntToLong(TR::Node *);1;TR;LoopStrider;0;0
changeLoopCondition;changeLoopCondition(class TR_BlockStructure *,_Bool,int32_t,TR::Node *);1;TR;LoopStrider;0;0
checkExpressionForInductionVariable;checkExpressionForInductionVariable(TR::Node *);1;TR;LoopStrider;0;0
checkInvariance;checkInvariance(TR::Node *,int32_t,TR::Node *,int32_t);1;TR;LoopStrider;0;0
checkStoreOfIndVar;checkStoreOfIndVar(TR::Node *);1;TR;LoopStrider;0;0
convertIV;convertIV(TR::Node *,TR::TreeTop *,int32_t,int32_t,TR::ILOpCodes);1;TR;LoopStrider;0;0
create;create(TR::OptimizationManager *);1;TR;LoopStrider;0;0
createConstraintsForNewInductionVariable;createConstraintsForNewInductionVariable(class TR_Structure *,TR::SymbolReference *,TR::SymbolReference *);1;TR;LoopStrider;0;0
createParmAutoPair;createParmAutoPair(TR::SymbolReference *,TR::SymbolReference *);1;TR;LoopStrider;0;0
detectLoopsForIndVarConversion;detectLoopsForIndVarConversion(class TR_Structure *,TR::NodeChecklist &);1;TR;LoopStrider;0;0
duplicateAdditiveTermNode;duplicateAdditiveTermNode(int32_t,TR::Node *,TR::DataType);1;TR;LoopStrider;0;0
duplicateMulTermNode;duplicateMulTermNode(int32_t,TR::Node *,TR::DataType);1;TR;LoopStrider;0;0
eliminateSignExtensions;eliminateSignExtensions(TR::NodeChecklist &);1;TR;LoopStrider;0;0
eliminateSignExtensionsInSubtree;eliminateSignExtensionsInSubtree(TR::Node *,TR::NodeChecklist &,TR::NodeChecklist &,SignExtMemo &);1;TR;LoopStrider;0;0
examineOpCodesForInductionVariableUse;examineOpCodesForInductionVariableUse(TR::Node *,TR::Node *,int32_t &,int32_t &,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference **,TR::Block *,TR::AutomaticSymbol *,int64_t,_Bool &,_Bool &,_Bool &);1;TR;LoopStrider;0;0
findDataType;findDataType(TR::Node *,_Bool,_Bool);1;TR;LoopStrider;0;0
findNewInductionVariable;findNewInductionVariable(TR::Node *,TR::SymbolReference **,_Bool,int32_t);1;TR;LoopStrider;0;0
findOrCreateStoreInfo;findOrCreateStoreInfo(TR::TreeTop *,int32_t);1;TR;LoopStrider;0;0
findReplacingNode;findReplacingNode(TR::Node *,_Bool,int32_t);1;TR;LoopStrider;0;0
foundLoad;foundLoad(TR::TreeTop *,int32_t,TR::Compilation *);1;TR;LoopStrider;0;0
foundLoad;foundLoad(TR::TreeTop *,TR::Node *,int32_t,vcount_t);0;TR;LoopStrider;0;0
foundValue;foundValue(TR::Node *,int32_t,vcount_t);1;TR;LoopStrider;0;0
genLoad;genLoad(TR::Node *,TR::SymbolReference *,_Bool);1;TR;LoopStrider;0;0
genVPIntRange;genVPIntRange(TR::VPConstraint *,int64_t,int64_t);1;TR;LoopStrider;0;0
genVPLongRange;genVPLongRange(TR::VPConstraint *,int64_t,int64_t);1;TR;LoopStrider;0;0
getAdditiveTermConst;getAdditiveTermConst(int32_t);1;TR;LoopStrider;0;0
getAdditiveTermNode;getAdditiveTermNode(int32_t);1;TR;LoopStrider;0;0
getInductionVariableNode;getInductionVariableNode(TR::Node *);1;TR;LoopStrider;0;0
getMulTermConst;getMulTermConst(int32_t);1;TR;LoopStrider;0;0
getMulTermNode;getMulTermNode(int32_t);1;TR;LoopStrider;0;0
getNewLoopIncrement;getNewLoopIncrement(TR::Node *,int32_t,int32_t);1;TR;LoopStrider;0;0
getNewLoopIncrement;getNewLoopIncrement(class TR_StoreTreeInfo *,int32_t);0;TR;LoopStrider;0;0
identifyExpressionLinearInInductionVariable;identifyExpressionLinearInInductionVariable(TR::Node *,vcount_t);1;TR;LoopStrider;0;0
identifyExpressionsLinearInInductionVariables;identifyExpressionsLinearInInductionVariables(class TR_Structure *,vcount_t);1;TR;LoopStrider;0;0
isAdditiveTermConst;isAdditiveTermConst(int32_t);1;TR;LoopStrider;0;0
isAdditiveTermEquivalentTo;isAdditiveTermEquivalentTo(int32_t,TR::Node *);1;TR;LoopStrider;0;0
isExprLoopInvariant;isExprLoopInvariant(TR::Node *);1;TR;LoopStrider;0;0
isExpressionLinearInInductionVariable;isExpressionLinearInInductionVariable(TR::Node *,int32_t);1;TR;LoopStrider;0;0
isExpressionLinearInSomeInductionVariable;isExpressionLinearInSomeInductionVariable(TR::Node *);1;TR;LoopStrider;0;0
isMulTermConst;isMulTermConst(int32_t);1;TR;LoopStrider;0;0
isMulTermEquivalentTo;isMulTermEquivalentTo(int32_t,TR::Node *);1;TR;LoopStrider;0;0
isStoreInRequiredForm;isStoreInRequiredForm(TR::Node *,int32_t,class TR_Structure *);0;TR;LoopStrider;0;0
maxInternalPointers;maxInternalPointers();1;TR;LoopStrider;0;0
maxInternalPointersAtPointTooLateToBackOff;maxInternalPointersAtPointTooLateToBackOff();1;TR;LoopStrider;0;0
morphExpressionLinearInInductionVariable;morphExpressionLinearInInductionVariable(TR::Node *,int32_t,TR::Node *,vcount_t);1;TR;LoopStrider;0;0
morphExpressionsLinearInInductionVariable;morphExpressionsLinearInInductionVariable(class TR_Structure *,vcount_t);1;TR;LoopStrider;0;0
operator=;operator=(const class TR_LoopStrider &);0;TR;LoopStrider;1;0
operator=;operator=(class TR_LoopStrider &&);0;TR;LoopStrider;1;0
placeInitializationTreeInLoopInvariantBlock;placeInitializationTreeInLoopInvariantBlock(class TR_BlockStructure *,TR::SymbolReference *,TR::SymbolReference *,int32_t,TR::SymbolReferenceTable *);1;TR;LoopStrider;0;0
placeNewInductionVariableIncrementTree;placeNewInductionVariableIncrementTree(class TR_BlockStructure *,TR::SymbolReference *,TR::SymbolReference *,int32_t,TR::SymbolReferenceTable *,TR::Node *,TR::Node *,TR::TreeTop *,TR::Node *,_Bool);1;TR;LoopStrider;0;0
placeNewInductionVariableIncrementTree;placeNewInductionVariableIncrementTree(class TR_BlockStructure *,TR::SymbolReference *,TR::SymbolReference *,int32_t,TR::SymbolReferenceTable *,TR::Node *,int32_t);0;TR;LoopStrider;0;0
placeStore;placeStore(TR::Node *,TR::Block *);1;TR;LoopStrider;0;0
populateLinearEquation;populateLinearEquation(TR::Node *,int32_t,int32_t,int32_t,TR::Node *);1;TR;LoopStrider;0;0
reassociateAndHoistComputations;reassociateAndHoistComputations(TR::Block *,class TR_Structure *);1;TR;LoopStrider;0;0
reassociateAndHoistComputations;reassociateAndHoistComputations(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t);0;TR;LoopStrider;0;0
reassociateAndHoistNonPacked;reassociateAndHoistNonPacked();1;TR;LoopStrider;0;0
replaceLoadsInStructure;replaceLoadsInStructure(class TR_Structure *,int32_t,TR::Node *,TR::SymbolReference *,TR::NodeChecklist &,TR::NodeChecklist &);1;TR;LoopStrider;0;0
replaceLoadsInSubtree;replaceLoadsInSubtree(TR::Node *,int32_t,TR::Node *,TR::SymbolReference *,TR::NodeChecklist &,TR::NodeChecklist &);1;TR;LoopStrider;0;0
setAdditiveTermNode;setAdditiveTermNode(TR::Node *,int32_t);1;TR;LoopStrider;0;0
setInternalPointer;setInternalPointer(TR::Symbol *,TR::AutomaticSymbol *);1;TR;LoopStrider;0;0
setMulTermNode;setMulTermNode(TR::Node *,int32_t);1;TR;LoopStrider;0;0
setUsesLoadUsedInLoopIncrement;setUsesLoadUsedInLoopIncrement(TR::Node *,int32_t);1;TR;LoopStrider;0;0
signExtend;signExtend(TR::Node *,TR::NodeChecklist &,SignExtMemo &);1;TR;LoopStrider;0;0
signExtendBinOp;signExtendBinOp(TR::ILOpCodes,TR::Node *,TR::NodeChecklist &,SignExtMemo &);1;TR;LoopStrider;0;0
transmuteDescendantsIntoTruncations;transmuteDescendantsIntoTruncations(TR::Node *,TR::Node *);1;TR;LoopStrider;0;0
unchangedValueNeededIn;unchangedValueNeededIn(TR::Block *,int32_t,_Bool &);1;TR;LoopStrider;0;0
walkTreesAndFixUseDefs;walkTreesAndFixUseDefs(class TR_Structure *,TR::SymbolReference *,TR::NodeChecklist &);1;TR;LoopStrider;0;0
widenComparison;widenComparison(TR::Node *,int32_t,TR::Node *,TR::NodeChecklist &);1;TR;LoopStrider;0;0
~TR_LoopStrider;~TR_LoopStrider();1;TR;LoopStrider;1;1
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;Dominators;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;Dominators;0;0
TR_PrimaryInductionVariable;TR_PrimaryInductionVariable(class TR_BasicInductionVariable *,TR::Block *,TR::Node *,TR::ILOpCodes,TR::Compilation *,TR::Optimizer *,_Bool,_Bool);1;TR;PrimaryInductionVariable;0;0
getBranchBlock;getBranchBlock();1;TR;PrimaryInductionVariable;0;0
getExitBound;getExitBound();1;TR;PrimaryInductionVariable;0;0
getNumLoopExits;getNumLoopExits();1;TR;PrimaryInductionVariable;0;0
isUnsigned;isUnsigned();1;TR;PrimaryInductionVariable;0;0
operator=;operator=(class TR_PrimaryInductionVariable &&);0;TR;PrimaryInductionVariable;1;0
operator=;operator=(const class TR_PrimaryInductionVariable &);0;TR;PrimaryInductionVariable;1;0
setNumLoopExits;setNumLoopExits(int32_t);1;TR;PrimaryInductionVariable;0;0
setUsesUnchangedValueInLoopTest;setUsesUnchangedValueInLoopTest(_Bool);1;TR;PrimaryInductionVariable;0;0
usesUnchangedValueInLoopTest;usesUnchangedValueInLoopTest();1;TR;PrimaryInductionVariable;0;0
~TR_PrimaryInductionVariable;~TR_PrimaryInductionVariable();1;TR;PrimaryInductionVariable;1;0
TR_RegionStructure;TR_RegionStructure(const class TR_RegionStructure &);1;TR;RegionStructure;1;0
TR_GlobalRegisterAllocator;TR_GlobalRegisterAllocator(TR::OptimizationManager *);1;TR;GlobalRegisterAllocator;0;0
TR_GlobalRegisterAllocator;TR_GlobalRegisterAllocator(const class TR_GlobalRegisterAllocator &);0;TR;GlobalRegisterAllocator;1;0
TR_GlobalRegisterAllocator;TR_GlobalRegisterAllocator(class TR_GlobalRegisterAllocator &&);0;TR;GlobalRegisterAllocator;1;0
addCandidateReloadsToEntry;addCandidateReloadsToEntry(TR::TreeTop *,TR_Array<class TR_GlobalRegister> &,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
addGlRegDepToExit;addGlRegDepToExit(TR_Array<TR::Node *> &,TR::Node *,TR_Array<class TR_GlobalRegister> &,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
addRegLoadsToEntry;addRegLoadsToEntry(TR::TreeTop *,TR_Array<class TR_GlobalRegister> &,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
addStoresForCatchBlockLoads;addStoresForCatchBlockLoads(TR::TreeTop *,TR_Array<class TR_GlobalRegister> &,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
allocateForSymRef;allocateForSymRef(TR::SymbolReference *);1;TR;GlobalRegisterAllocator;0;0
allocateForType;allocateForType(TR::DataType);1;TR;GlobalRegisterAllocator;0;0
appendGotoBlock;appendGotoBlock(TR::Block *,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
assignRegisters;assignRegisters(TR::Block *);1;TR;GlobalRegisterAllocator;0;0
assignRegisters;assignRegisters();0;TR;GlobalRegisterAllocator;0;0
blockInfo;blockInfo(int32_t);1;TR;GlobalRegisterAllocator;0;0
candidateCouldNeedSignExtension;candidateCouldNeedSignExtension(int32_t);1;TR;GlobalRegisterAllocator;0;0
create;create(TR::OptimizationManager *);1;TR;GlobalRegisterAllocator;0;0
createBlock;createBlock(TR::Block *,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
createLoadFromRegister;createLoadFromRegister();1;TR;GlobalRegisterAllocator;0;0
createNewSuccessorBlock;createNewSuccessorBlock(TR::Block *,TR::Block *,TR::TreeTop *,TR::Node *,class TR_RegisterCandidate *);1;TR;GlobalRegisterAllocator;0;0
createStoreFromRegister;createStoreFromRegister();1;TR;GlobalRegisterAllocator;0;0
createStoreToRegister;createStoreToRegister();1;TR;GlobalRegisterAllocator;0;0
createStoresForSignExt;createStoresForSignExt(TR::Node *,TR::Node *,TR::Node *,TR::TreeTop *,TR::Node **,TR::Block *,List<TR::Block> *,vcount_t,_Bool);1;TR;GlobalRegisterAllocator;0;0
extendBlock;extendBlock(TR::Block *,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
findIfThenRegisterCandidates;findIfThenRegisterCandidates();1;TR;GlobalRegisterAllocator;0;0
findLoopAutoRegisterCandidates;findLoopAutoRegisterCandidates();1;TR;GlobalRegisterAllocator;0;0
findLoopsAndAutosNoStructureInfo;findLoopsAndAutosNoStructureInfo(vcount_t,class TR_RegisterCandidate **);1;TR;GlobalRegisterAllocator;0;0
findLoopsAndCorrespondingAutos;findLoopsAndCorrespondingAutos(class TR_StructureSubGraphNode *,vcount_t,SymRefCandidateMap &);1;TR;GlobalRegisterAllocator;0;0
findLoopsAndCreateAutosForSignExt;findLoopsAndCreateAutosForSignExt(class TR_StructureSubGraphNode *,vcount_t);1;TR;GlobalRegisterAllocator;0;0
findOrCreatePairedSymbols;findOrCreatePairedSymbols(TR::SymbolReference *,TR::SymbolReference *);1;TR;GlobalRegisterAllocator;0;0
findPairedSymbols;findPairedSymbols(TR::SymbolReference *,TR::SymbolReference *);1;TR;GlobalRegisterAllocator;0;0
findPrevTreeTop;findPrevTreeTop(TR::TreeTop *&,TR::Node *&,TR::Block *,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
findRegInStoreInfo;findRegInStoreInfo(class TR_GlobalRegister *);1;TR;GlobalRegisterAllocator;0;0
findSymsUsedInIndirectAccesses;findSymsUsedInIndirectAccesses(TR::Node *,class TR_BitVector *,class TR_BitVector *,_Bool);1;TR;GlobalRegisterAllocator;0;0
getAppendBlock;getAppendBlock(TR::Block *);1;TR;GlobalRegisterAllocator;0;0
getGlobalRegister;getGlobalRegister(TR::Symbol *,TR_Array<class TR_GlobalRegister> &,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
getGlobalRegisterWithoutChangingCurrentCandidate;getGlobalRegisterWithoutChangingCurrentCandidate(TR::Symbol *,TR_Array<class TR_GlobalRegister> &,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
getPairedSymbols;getPairedSymbols();1;TR;GlobalRegisterAllocator;0;0
initializeControlFlowInfo;initializeControlFlowInfo();1;TR;GlobalRegisterAllocator;0;0
isDependentStore;isDependentStore(TR::Node *,const class TR_UseDefInfo::BitVector &,TR::SymbolReference *,_Bool *);1;TR;GlobalRegisterAllocator;0;0
isNodeAvailable;isNodeAvailable(TR::Node *);1;TR;GlobalRegisterAllocator;0;0
isSplittingCopy;isSplittingCopy(TR::Node *);1;TR;GlobalRegisterAllocator;0;0
isSymRefAvailable;isSymRefAvailable(TR::SymbolReference *);1;TR;GlobalRegisterAllocator;0;0
isSymRefAvailable;isSymRefAvailable(TR::SymbolReference *,List<TR::Block> *);0;TR;GlobalRegisterAllocator;0;0
isTypeAvailable;isTypeAvailable(TR::SymbolReference *);1;TR;GlobalRegisterAllocator;0;0
markAutosUsedIn;markAutosUsedIn(TR::Node *,TR::Node *,TR::Node *,TR::Node **,TR::Block *,List<TR::Block> *,vcount_t,int32_t,SymRefCandidateMap &,class TR_BitVector *,class TR_BitVector *,_Bool);1;TR;GlobalRegisterAllocator;0;0
markCandidateForReloadInSuccessors;markCandidateForReloadInSuccessors(int32_t,class TR_GlobalRegister *,class TR_GlobalRegister *,TR::Block *,_Bool);1;TR;GlobalRegisterAllocator;0;0
numberOfRegistersLiveOnEntry;numberOfRegistersLiveOnEntry(TR_Array<class TR_GlobalRegister> &,_Bool);1;TR;GlobalRegisterAllocator;0;0
offerAllAutosAndRegisterParmAsCandidates;offerAllAutosAndRegisterParmAsCandidates(TR::Block **,int32_t,_Bool);1;TR;GlobalRegisterAllocator;0;0
offerAllFPAutosAndParmsAsCandidates;offerAllFPAutosAndParmsAsCandidates(TR::Block **,int32_t);1;TR;GlobalRegisterAllocator;0;0
operator=;operator=(const class TR_GlobalRegisterAllocator &);0;TR;GlobalRegisterAllocator;1;0
operator=;operator=(class TR_GlobalRegisterAllocator &&);0;TR;GlobalRegisterAllocator;1;0
populateSymRefNodes;populateSymRefNodes(TR::Node *,vcount_t);1;TR;GlobalRegisterAllocator;0;0
prepareForBlockExit;prepareForBlockExit(TR::TreeTop *&,TR::Node *&,TR::Block *,TR_Array<class TR_GlobalRegister> &,TR::Block *,TR_Array<TR::Node *> &);1;TR;GlobalRegisterAllocator;0;0
registerIsLiveAcrossEdge;registerIsLiveAcrossEdge(TR::TreeTop *,TR::Node *,TR::Block *,class TR_GlobalRegister *,TR::Block *&,int32_t);1;TR;GlobalRegisterAllocator;0;0
reloadNonRegStarVariables;reloadNonRegStarVariables(TR::TreeTop *,TR::Node *,TR::Block *,_Bool);1;TR;GlobalRegisterAllocator;0;0
resolveTypeMismatch;resolveTypeMismatch(TR::Node *,TR::Node *);1;TR;GlobalRegisterAllocator;0;0
resolveTypeMismatch;resolveTypeMismatch(TR::DataType,TR::Node *);0;TR;GlobalRegisterAllocator;0;0
resolveTypeMismatch;resolveTypeMismatch(TR::DataType,TR::Node *,TR::Node *);0;TR;GlobalRegisterAllocator;0;0
restoreOriginalSymbol;restoreOriginalSymbol(TR::Node *,vcount_t);1;TR;GlobalRegisterAllocator;0;0
setSignExtensionNotRequired;setSignExtensionNotRequired(_Bool,int32_t);1;TR;GlobalRegisterAllocator;0;0
setSignExtensionRequired;setSignExtensionRequired(_Bool,int32_t);1;TR;GlobalRegisterAllocator;0;0
signExtendAllDefNodes;signExtendAllDefNodes(TR::Node *,List<TR::Node> *);1;TR;GlobalRegisterAllocator;0;0
signExtensionNotRequired;signExtensionNotRequired();1;TR;GlobalRegisterAllocator;0;0
signExtensionRequired;signExtensionRequired();1;TR;GlobalRegisterAllocator;0;0
tagCandidates;tagCandidates(TR::Block *,_Bool);1;TR;GlobalRegisterAllocator;0;0
tagCandidates;tagCandidates(TR::Block *,uint32_t,_Bool);0;TR;GlobalRegisterAllocator;0;0
transformBlock;transformBlock(TR::TreeTop *);1;TR;GlobalRegisterAllocator;0;0
transformBlockExit;transformBlockExit(TR::TreeTop *,TR::Node *,TR::Block *,TR_Array<class TR_GlobalRegister> &,TR::Block *);1;TR;GlobalRegisterAllocator;0;0
transformMultiWayBranch;transformMultiWayBranch(TR::TreeTop *,TR::Node *,TR::Block *,TR_Array<class TR_GlobalRegister> &,_Bool);1;TR;GlobalRegisterAllocator;0;0
transformNode;transformNode(TR::Node *,TR::Node *,int32_t,TR::TreeTop *,TR::Block *&,TR_Array<class TR_GlobalRegister> &,class TR_NodeMappings *);1;TR;GlobalRegisterAllocator;0;0
visitNodeForDataType;visitNodeForDataType(TR::Node *);1;TR;GlobalRegisterAllocator;0;0
walkTreesAndCollectSymbolDataTypes;walkTreesAndCollectSymbolDataTypes();1;TR;GlobalRegisterAllocator;0;0
~TR_GlobalRegisterAllocator;~TR_GlobalRegisterAllocator();1;TR;GlobalRegisterAllocator;1;1
TR_LiveRangeSplitter;TR_LiveRangeSplitter(class TR_LiveRangeSplitter &&);1;TR;LiveRangeSplitter;1;0
TR_LiveRangeSplitter;TR_LiveRangeSplitter(const class TR_LiveRangeSplitter &);0;TR;LiveRangeSplitter;1;0
TR_LiveRangeSplitter;TR_LiveRangeSplitter(TR::OptimizationManager *);0;TR;LiveRangeSplitter;0;0
appendStoreToBlock;appendStoreToBlock(TR::SymbolReference *,TR::SymbolReference *,TR::Block *,TR::Node *);1;TR;LiveRangeSplitter;0;0
create;create(TR::OptimizationManager *);1;TR;LiveRangeSplitter;0;0
fixExitsAfterSplit;fixExitsAfterSplit(TR::SymbolReference *,struct TR_SymRefCandidatePair *,struct TR_SymRefCandidatePair **,TR::Block *,List<TR::Block> *,TR::Node *,SymRefCandidateMap &,class TR_StructureSubGraphNode *,class TR_BitVector *,TR::SymbolReference *);1;TR;LiveRangeSplitter;0;0
operator=;operator=(class TR_LiveRangeSplitter &&);0;TR;LiveRangeSplitter;1;0
operator=;operator=(const class TR_LiveRangeSplitter &);0;TR;LiveRangeSplitter;1;0
placeStoresInLoopExits;placeStoresInLoopExits(TR::Node *,class TR_StructureSubGraphNode *,List<TR::Block> *,TR::SymbolReference *,TR::SymbolReference *);1;TR;LiveRangeSplitter;0;0
prependStoreToBlock;prependStoreToBlock(TR::SymbolReference *,TR::SymbolReference *,TR::Block *,TR::Node *);1;TR;LiveRangeSplitter;0;0
replaceAutosUsedIn;replaceAutosUsedIn(TR::TreeTop *,TR::Node *,TR::Node *,TR::Block *,List<TR::Block> *,List<TR::Block> *,vcount_t,int32_t,SymRefCandidateMap &,struct TR_SymRefCandidatePair **,class TR_BitVector *,class TR_BitVector *,class TR_StructureSubGraphNode *,TR::Block *);1;TR;LiveRangeSplitter;0;0
splitAndFixPreHeader;splitAndFixPreHeader(TR::SymbolReference *,struct TR_SymRefCandidatePair **,TR::Block *,TR::Node *);1;TR;LiveRangeSplitter;0;0
splitLiveRanges;splitLiveRanges();1;TR;LiveRangeSplitter;0;0
splitLiveRanges;splitLiveRanges(class TR_StructureSubGraphNode *);0;TR;LiveRangeSplitter;0;0
~TR_LiveRangeSplitter;~TR_LiveRangeSplitter();1;TR;LiveRangeSplitter;1;1
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;TR;LocalAnalysis;0;0
SuccessorIterator;SuccessorIterator(const class SuccessorIterator &);1;;SuccessorIterator;1;0
SuccessorIterator;SuccessorIterator(class SuccessorIterator &&);0;;SuccessorIterator;1;0
SuccessorIterator;SuccessorIterator();0;;SuccessorIterator;1;0
asSwitchSuccessor;asSwitchSuccessor();1;;SuccessorIterator;0;1
getFirstSuccessor;getFirstSuccessor();1;;SuccessorIterator;0;1
getNextSuccessor;getNextSuccessor();1;;SuccessorIterator;0;1
getNextSuccessor_;getNextSuccessor_();1;;multipleJumpSuccessorIterator;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;;multipleJumpSuccessorIterator;0;0
jitPersistentFree;jitPersistentFree(void *);1;;multipleJumpSuccessorIterator;0;0
multipleJumpSuccessorIterator;multipleJumpSuccessorIterator(const class multipleJumpSuccessorIterator &);1;;multipleJumpSuccessorIterator;1;0
multipleJumpSuccessorIterator;multipleJumpSuccessorIterator(TR::Block *);0;;multipleJumpSuccessorIterator;0;0
multipleJumpSuccessorIterator;multipleJumpSuccessorIterator(class multipleJumpSuccessorIterator &&);0;;multipleJumpSuccessorIterator;1;0
operator delete;operator delete(void *,size_t);1;;multipleJumpSuccessorIterator;0;0
operator delete;operator delete(void *,TR::Region &);0;;multipleJumpSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;;multipleJumpSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;;multipleJumpSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;multipleJumpSuccessorIterator;0;0
operator delete[];operator delete[](void *,TR::Region &);1;;multipleJumpSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;;multipleJumpSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;multipleJumpSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;;multipleJumpSuccessorIterator;0;0
operator new;operator new(size_t,TR::Region &);0;;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,TR::Region &);0;;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;multipleJumpSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;;multipleJumpSuccessorIterator;0;0
operator=;operator=(class SuccessorIterator &&);1;;SuccessorIterator;1;0
operator=;operator=(const class SuccessorIterator &);0;;SuccessorIterator;1;0
operator=;operator=(class multipleJumpSuccessorIterator &&);0;;multipleJumpSuccessorIterator;1;0
operator=;operator=(const class multipleJumpSuccessorIterator &);0;;multipleJumpSuccessorIterator;1;0
~SuccessorIterator;~SuccessorIterator();1;;SuccessorIterator;1;0
~multipleJumpSuccessorIterator;~multipleJumpSuccessorIterator();1;;multipleJumpSuccessorIterator;1;0
getCaseNode;getCaseNode();1;;switchSuccessorIterator;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;;switchSuccessorIterator;0;0
jitPersistentFree;jitPersistentFree(void *);1;;switchSuccessorIterator;0;0
operator delete;operator delete(void *,size_t);1;;switchSuccessorIterator;0;0
operator delete;operator delete(void *,TR::Region &);0;;switchSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;;switchSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;;switchSuccessorIterator;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;switchSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;;switchSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;switchSuccessorIterator;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;;switchSuccessorIterator;0;0
operator delete[];operator delete[](void *,TR::Region &);0;;switchSuccessorIterator;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;;switchSuccessorIterator;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;;switchSuccessorIterator;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;switchSuccessorIterator;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;;switchSuccessorIterator;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;;switchSuccessorIterator;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;;switchSuccessorIterator;0;0
operator new;operator new(size_t,TR::Region &);0;;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,TR::Region &);1;;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;switchSuccessorIterator;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;;switchSuccessorIterator;0;0
operator=;operator=(class switchSuccessorIterator &&);0;;switchSuccessorIterator;1;0
operator=;operator=(const class switchSuccessorIterator &);0;;switchSuccessorIterator;1;0
switchSuccessorIterator;switchSuccessorIterator(TR::Node *);1;;switchSuccessorIterator;0;0
switchSuccessorIterator;switchSuccessorIterator(class switchSuccessorIterator &&);0;;switchSuccessorIterator;1;0
switchSuccessorIterator;switchSuccessorIterator(const class switchSuccessorIterator &);0;;switchSuccessorIterator;1;0
~switchSuccessorIterator;~switchSuccessorIterator();1;;switchSuccessorIterator;1;0
OMR_InlinerPolicy;OMR_InlinerPolicy(const class OMR_InlinerPolicy &);0;;OMR_InlinerPolicy;1;0
getInitialBytecodeSize;getInitialBytecodeSize(class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,TR::Compilation *);1;;OMR_InlinerPolicy;0;1
getInitialBytecodeSize;getInitialBytecodeSize(TR::ResolvedMethodSymbol *,TR::Compilation *);0;;OMR_InlinerPolicy;0;0
OMR_InlinerHelper;OMR_InlinerHelper();1;;OMR_InlinerHelper;1;0
OMR_InlinerHelper;OMR_InlinerHelper(class OMR_InlinerHelper &&);0;;OMR_InlinerHelper;1;0
OMR_InlinerUtil;OMR_InlinerUtil(const class OMR_InlinerUtil &);1;;OMR_InlinerUtil;1;0
OMR_InlinerUtil;OMR_InlinerUtil(TR::Compilation *);0;;OMR_InlinerUtil;0;0
operator=;operator=(class OMR::ILOpCode &&);1;OMR;ILOpCode;1;0
operator=;operator=(const class OMR::ILOpCode &);0;OMR;ILOpCode;1;0
operator=;operator=(class TR::ILOpCode &&);0;TR;ILOpCode;1;0
operator=;operator=(const class TR::ILOpCode &);0;TR;ILOpCode;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(const class TR::IlGeneratorMethodDetails &);0;TR;IlGeneratorMethodDetails;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(class TR::IlGeneratorMethodDetails &&);0;TR;IlGeneratorMethodDetails;1;0
TR_DirectCallSite;TR_DirectCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool);1;TR;DirectCallSite;0;0
TR_DirectCallSite;TR_DirectCallSite(class TR_DirectCallSite &&);0;TR;DirectCallSite;1;0
operator=;operator=(class TR_DirectCallSite &&);1;TR;DirectCallSite;1;0
operator=;operator=(const class TR_DirectCallSite &);0;TR;DirectCallSite;1;0
TR_CallStack;TR_CallStack(const class TR_CallStack &);1;TR;CallStack;1;0
TR_CallStack;TR_CallStack(TR::Compilation *,TR::ResolvedMethodSymbol *,class TR_ResolvedMethod *,class TR_CallStack *,int32_t,_Bool);0;TR;CallStack;0;0
makeTempsAvailable;makeTempsAvailable(List<TR::SymbolReference> &,List<TR::SymbolReference> &);1;TR;CallStack;0;0
makeTempsAvailable;makeTempsAvailable(List<TR::SymbolReference> &);0;TR;CallStack;0;0
TR_DumbInliner;TR_DumbInliner(class TR_DumbInliner &&);1;TR;DumbInliner;1;0
TR_DumbInliner;TR_DumbInliner(TR::Optimizer *,TR::Optimization *,uint32_t,uint32_t);0;TR;DumbInliner;0;0
TR_DumbInliner;TR_DumbInliner(const class TR_DumbInliner &);0;TR;DumbInliner;1;0
TR_InlineCall;TR_InlineCall(class TR_InlineCall &&);1;TR;InlineCall;1;0
TR_InlineCall;TR_InlineCall(const class TR_InlineCall &);0;TR;InlineCall;1;0
TR_InlineCall;TR_InlineCall(TR::Optimizer *,TR::Optimization *);0;TR;InlineCall;0;0
TR_InlinerBase;TR_InlinerBase(class TR_InlinerBase &&);1;TR;InlinerBase;1;0
TR_InlinerBase;TR_InlinerBase(const class TR_InlinerBase &);0;TR;InlinerBase;1;0
TR_InlinerBase;TR_InlinerBase(TR::Optimizer *,TR::Optimization *);0;TR;InlinerBase;0;0
TR_InlinerTracer;TR_InlinerTracer(const class TR_InlinerTracer &);1;TR;InlinerTracer;1;0
TR_InlinerTracer;TR_InlinerTracer(class TR_InlinerTracer &&);0;TR;InlinerTracer;1;0
TR_InlinerTracer;TR_InlinerTracer(TR::Compilation *,class TR_FrontEnd *,TR::Optimization *);0;TR;InlinerTracer;0;0
TR_LogTracer;TR_LogTracer(class TR_LogTracer &&);1;TR;LogTracer;1;0
TR_LogTracer;TR_LogTracer(const class TR_LogTracer &);0;TR;LogTracer;1;0
TR_LogTracer;TR_LogTracer(TR::Compilation *,TR::Optimization *);0;TR;LogTracer;0;0
~TR_LogTracer;~TR_LogTracer();1;TR;LogTracer;1;0
TR_TrivialInliner;TR_TrivialInliner(class TR_TrivialInliner &&);1;TR;TrivialInliner;1;0
TR_TrivialInliner;TR_TrivialInliner(const class TR_TrivialInliner &);0;TR;TrivialInliner;1;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;CFG;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;CFG;0;0
TR_InductionVariableAnalysis;TR_InductionVariableAnalysis(const class TR_InductionVariableAnalysis &);1;TR;InductionVariableAnalysis;1;0
TR_InductionVariableAnalysis;TR_InductionVariableAnalysis(class TR_InductionVariableAnalysis &&);0;TR;InductionVariableAnalysis;1;0
BlockChecklist;BlockChecklist(const class TR::BlockChecklist &);1;TR;BlockChecklist;1;0
NodeIterator;NodeIterator(class TR::NodeIterator &&);1;TR;NodeIterator;1;0
NodeIterator;NodeIterator(const class TR::NodeIterator &);0;TR;NodeIterator;1;0
PostorderNodeIterator;PostorderNodeIterator(const class TR::PostorderNodeIterator &);1;TR;PostorderNodeIterator;1;0
PostorderNodeIterator;PostorderNodeIterator(class TR::PostorderNodeIterator &&);0;TR;PostorderNodeIterator;1;0
~PostorderNodeIterator;~PostorderNodeIterator();1;TR;PostorderNodeIterator;1;0
VPIntRange;VPIntRange(class TR::VPIntRange &&);1;TR;VPIntRange;1;0
VPIntRange;VPIntRange(const class TR::VPIntRange &);0;TR;VPIntRange;1;0
VPIntRange;VPIntRange(int32_t,int32_t);0;TR;VPIntRange;0;0
VPLongRange;VPLongRange(class TR::VPLongRange &&);1;TR;VPLongRange;1;0
VPLongRange;VPLongRange(const class TR::VPLongRange &);0;TR;VPLongRange;1;0
VPLongRange;VPLongRange(int64_t,int64_t);0;TR;VPLongRange;0;0
TR_DerivedInductionVariable;TR_DerivedInductionVariable(class TR_DerivedInductionVariable &&);1;TR;DerivedInductionVariable;1;0
TR_DerivedInductionVariable;TR_DerivedInductionVariable(const class TR_DerivedInductionVariable &);0;TR;DerivedInductionVariable;1;0
TR_DerivedInductionVariable;TR_DerivedInductionVariable(TR::Compilation *,class TR_BasicInductionVariable *,class TR_PrimaryInductionVariable *);0;TR;DerivedInductionVariable;0;0
TR_InductionVariable;TR_InductionVariable(class TR_InductionVariable &&);0;TR;InductionVariable;1;0
TR_InductionVariable;TR_InductionVariable(const class TR_InductionVariable &);0;TR;InductionVariable;1;0
foundLoad;foundLoad(TR::TreeTop *,TR::Node *,int32_t,vcount_t);1;TR;LoopStrider;0;0
foundLoad;foundLoad(TR::TreeTop *,int32_t,TR::Compilation *);0;TR;LoopStrider;0;0
reassociateAndHoistComputations;reassociateAndHoistComputations(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t);1;TR;LoopStrider;0;0
reassociateAndHoistComputations;reassociateAndHoistComputations(TR::Block *,class TR_Structure *);0;TR;LoopStrider;0;0
TR_PrimaryInductionVariable;TR_PrimaryInductionVariable(class TR_PrimaryInductionVariable &&);1;TR;PrimaryInductionVariable;1;0
TR_PrimaryInductionVariable;TR_PrimaryInductionVariable(class TR_BasicInductionVariable *,TR::Block *,TR::Node *,TR::ILOpCodes,TR::Compilation *,TR::Optimizer *,_Bool,_Bool);0;TR;PrimaryInductionVariable;0;0
TR_PrimaryInductionVariable;TR_PrimaryInductionVariable(const class TR_PrimaryInductionVariable &);0;TR;PrimaryInductionVariable;1;0
TR_IntersectionDFSetAnalysis;TR_IntersectionDFSetAnalysis(class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &&);1;TR;IntersectionDFSetAnalysis;1;0
TR_IntersectionDFSetAnalysis;TR_IntersectionDFSetAnalysis(const class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &);0;TR;IntersectionDFSetAnalysis;1;0
TR_IntersectionDFSetAnalysis;TR_IntersectionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;IntersectionDFSetAnalysis;0;0
compose;compose(class TR_BitVector *,class TR_BitVector *);0;TR;IntersectionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);0;TR;IntersectionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);0;TR;IntersectionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);0;TR;IntersectionDFSetAnalysis;0;1
operator=;operator=(const class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &);0;TR;IntersectionDFSetAnalysis;1;0
operator=;operator=(class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &&);0;TR;IntersectionDFSetAnalysis;1;0
~TR_IntersectionDFSetAnalysis;~TR_IntersectionDFSetAnalysis();1;TR;IntersectionDFSetAnalysis;1;1
TR_Isolatedness;TR_Isolatedness(class TR_Isolatedness &&);1;TR;Isolatedness;1;0
TR_Isolatedness;TR_Isolatedness(const class TR_Isolatedness &);0;TR;Isolatedness;1;0
TR_Isolatedness;TR_Isolatedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);0;TR;Isolatedness;0;0
TR_Latestness;TR_Latestness(class TR_Latestness &&);1;TR;Latestness;1;0
TR_Latestness;TR_Latestness(const class TR_Latestness &);0;TR;Latestness;1;0
TR_Latestness;TR_Latestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool);0;TR;Latestness;0;0
operator=;operator=(class TR_LiveVariableInformation &&);1;TR;LiveVariableInformation;1;0
operator=;operator=(const class TR_LiveVariableInformation &);0;TR;LiveVariableInformation;1;0
TR_LiveOnAllPaths;TR_LiveOnAllPaths(class TR_LiveOnAllPaths &&);1;TR;LiveOnAllPaths;1;0
TR_LiveOnAllPaths;TR_LiveOnAllPaths(const class TR_LiveOnAllPaths &);0;TR;LiveOnAllPaths;1;0
TR_LiveOnAllPaths;TR_LiveOnAllPaths(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_LiveVariableInformation *,_Bool,_Bool);0;TR;LiveOnAllPaths;0;0
TR_LiveVariableInformation;TR_LiveVariableInformation(class TR_LiveVariableInformation &&);1;TR;LiveVariableInformation;1;0
TR_LiveVariableInformation;TR_LiveVariableInformation(const class TR_LiveVariableInformation &);0;TR;LiveVariableInformation;1;0
TR_LiveVariableInformation;TR_LiveVariableInformation(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,_Bool,_Bool,_Bool);0;TR;LiveVariableInformation;0;0
TR_OSRLiveVariableInformation;TR_OSRLiveVariableInformation(class TR_OSRLiveVariableInformation &&);1;TR;OSRLiveVariableInformation;1;0
TR_OSRLiveVariableInformation;TR_OSRLiveVariableInformation(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,_Bool,_Bool,_Bool);0;TR;OSRLiveVariableInformation;0;0
TR_OSRLiveVariableInformation;TR_OSRLiveVariableInformation(const class TR_OSRLiveVariableInformation &);0;TR;OSRLiveVariableInformation;1;0
TR_HeapMemory;TR_HeapMemory(const class TR_HeapMemory &);1;TR;HeapMemory;1;0
TR_HeapMemory;TR_HeapMemory(class TR_Memory *);0;TR;HeapMemory;0;0
~PreorderNodeIterator;~PreorderNodeIterator();1;TR;PreorderNodeIterator;1;0
TR_LocalAnalysis;TR_LocalAnalysis(class TR_LocalAnalysis &&);1;TR;LocalAnalysis;1;0
TR_LocalAnalysis;TR_LocalAnalysis(const class TR_LocalAnalysis &);0;TR;LocalAnalysis;1;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;LocalAnalysis;0;0
TR_LocalAnticipatability;TR_LocalAnticipatability(class TR_LocalAnticipatability &&);0;TR;LocalAnticipatability;1;0
killDownwardExposedExprs;killDownwardExposedExprs(TR::Block *,ContainerType *,TR::Node *);1;TR;LocalAnticipatability;0;0
killDownwardExposedExprs;killDownwardExposedExprs(TR::Block *,TR::Node *);0;TR;LocalAnticipatability;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;LocalAnalysis;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;LocalAnalysis;0;0
TR_LocalLiveRangeReduction;TR_LocalLiveRangeReduction(class TR_LocalLiveRangeReduction &&);1;TR;LocalLiveRangeReduction;1;0
TR_LocalLiveRangeReduction;TR_LocalLiveRangeReduction(const class TR_LocalLiveRangeReduction &);0;TR;LocalLiveRangeReduction;1;0
TR_LocalLiveRangeReduction;TR_LocalLiveRangeReduction(TR::OptimizationManager *);0;TR;LocalLiveRangeReduction;0;0
addDepPair;addDepPair(class TR_TreeRefInfo *,class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
collectInfo;collectInfo(TR::TreeTop *,TR::TreeTop *);1;TR;LocalLiveRangeReduction;0;0
collectRefInfo;collectRefInfo(class TR_TreeRefInfo *,TR::Node *,vcount_t,int32_t *);1;TR;LocalLiveRangeReduction;0;0
containsCallOrCheck;containsCallOrCheck(class TR_TreeRefInfo *,TR::Node *);1;TR;LocalLiveRangeReduction;0;0
create;create(TR::OptimizationManager *);1;TR;LocalLiveRangeReduction;0;0
findLocationToMove;findLocationToMove(class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
getIndexInArray;getIndexInArray(class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
initPotentialDeps;initPotentialDeps(class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
investigateAndMove;investigateAndMove(class TR_TreeRefInfo *,int32_t);1;TR;LocalLiveRangeReduction;0;0
isAnyDataConstraint;isAnyDataConstraint(class TR_TreeRefInfo *,class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
isAnySymInDefinedOrUsedBy;isAnySymInDefinedOrUsedBy(class TR_TreeRefInfo *,TR::Node *,class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
isNeedToBeInvestigated;isNeedToBeInvestigated(class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
isWorthMoving;isWorthMoving(class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
matchFirstOrMidToLastRef;matchFirstOrMidToLastRef(class TR_TreeRefInfo *,class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
moveTreeBefore;moveTreeBefore(class TR_TreeRefInfo *,class TR_TreeRefInfo *,int32_t);1;TR;LocalLiveRangeReduction;0;0
operator=;operator=(const class TR_LocalLiveRangeReduction &);0;TR;LocalLiveRangeReduction;1;0
operator=;operator=(class TR_LocalLiveRangeReduction &&);0;TR;LocalLiveRangeReduction;1;0
populatePotentialDeps;populatePotentialDeps(class TR_TreeRefInfo *,TR::Node *);1;TR;LocalLiveRangeReduction;0;0
printOnVerifyError;printOnVerifyError(class TR_TreeRefInfo *,class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
printRefInfo;printRefInfo(class TR_TreeRefInfo *);1;TR;LocalLiveRangeReduction;0;0
transformExtendedBlock;transformExtendedBlock(TR::TreeTop *,TR::TreeTop *);1;TR;LocalLiveRangeReduction;0;0
updateDepList;updateDepList();1;TR;LocalLiveRangeReduction;0;0
updateRefInfo;updateRefInfo(TR::Node *,class TR_TreeRefInfo *,class TR_TreeRefInfo *,_Bool);1;TR;LocalLiveRangeReduction;0;0
verifyRefInfo;verifyRefInfo(List<TR::Node> *,List<TR::Node> *);1;TR;LocalLiveRangeReduction;0;0
~TR_LocalLiveRangeReduction;~TR_LocalLiveRangeReduction();1;TR;LocalLiveRangeReduction;1;1
TR_LocalReordering;TR_LocalReordering(class TR_LocalReordering &&);1;TR;LocalReordering;1;0
TR_LocalReordering;TR_LocalReordering(const class TR_LocalReordering &);0;TR;LocalReordering;1;0
TR_LocalReordering;TR_LocalReordering(TR::OptimizationManager *);0;TR;LocalReordering;0;0
collectSymbolsUsedAndDefinedInNode;collectSymbolsUsedAndDefinedInNode(TR::Node *,vcount_t);1;TR;LocalReordering;0;0
collectUses;collectUses(TR::Block *);1;TR;LocalReordering;0;0
containsBarriers;containsBarriers(TR::Block *);1;TR;LocalReordering;0;0
create;create(TR::OptimizationManager *);1;TR;LocalReordering;0;0
delayDefinitions;delayDefinitions(TR::Block *);1;TR;LocalReordering;0;0
insertDefinitionBetween;insertDefinitionBetween(TR::TreeTop *,TR::TreeTop *);1;TR;LocalReordering;0;0
insertEarlierIfPossible;insertEarlierIfPossible(TR::TreeTop *,TR::TreeTop *,_Bool);1;TR;LocalReordering;0;0
isAnySymInDefinedBy;isAnySymInDefinedBy(TR::Node *,vcount_t);1;TR;LocalReordering;0;0
isAnySymInDefinedOrUsedBy;isAnySymInDefinedOrUsedBy(TR::Node *,vcount_t);1;TR;LocalReordering;0;0
isSubtreeCommoned;isSubtreeCommoned(TR::Node *);1;TR;LocalReordering;0;0
moveStoresEarlierIfRhsAnchored;moveStoresEarlierIfRhsAnchored(TR::Block *,TR::TreeTop *,TR::Node *,TR::Node *,vcount_t);1;TR;LocalReordering;0;0
operator=;operator=(class TR_LocalReordering &&);0;TR;LocalReordering;1;0
operator=;operator=(const class TR_LocalReordering &);0;TR;LocalReordering;1;0
setUseTreeForSymbolReferencesIn;setUseTreeForSymbolReferencesIn(TR::TreeTop *,TR::Node *,vcount_t);1;TR;LocalReordering;0;0
transformBlock;transformBlock(TR::Block *);1;TR;LocalReordering;0;0
~TR_LocalReordering;~TR_LocalReordering();1;TR;LocalReordering;1;1
getNewLoopIncrement;getNewLoopIncrement(class TR_StoreTreeInfo *,int32_t);1;TR;LoopStrider;0;0
getNewLoopIncrement;getNewLoopIncrement(TR::Node *,int32_t,int32_t);0;TR;LoopStrider;0;0
matches;matches(TR::Node *,TR::Node **,TR::Compilation *);1;TR;Pattern;0;0
matches;matches(TR::Node *,class TR_Unification &,TR::Compilation *);0;TR;Pattern;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Pattern;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;Pattern;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;Pattern;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;Pattern;0;0
operator=;operator=(class TR_Pattern &&);1;TR;Pattern;1;0
operator=;operator=(const class TR_Pattern &);0;TR;Pattern;1;0
TR_ArrayLoop;TR_ArrayLoop(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *);1;TR;ArrayLoop;0;0
TR_ArrayLoop;TR_ArrayLoop(TR::Compilation *,class TR_InductionVariable *);0;TR;ArrayLoop;0;0
TR_ArrayLoop;TR_ArrayLoop(class TR_ArrayLoop &&);0;TR;ArrayLoop;1;0
TR_ArrayLoop;TR_ArrayLoop(const class TR_ArrayLoop &);0;TR;ArrayLoop;1;0
TR_Arraycmp;TR_Arraycmp(class TR_Arraycmp &&);1;TR;Arraycmp;1;0
TR_Arraycmp;TR_Arraycmp(const class TR_Arraycmp &);0;TR;Arraycmp;1;0
TR_Arraycmp;TR_Arraycmp(TR::Compilation *,class TR_InductionVariable *);0;TR;Arraycmp;0;0
checkElementCompare;checkElementCompare(TR::Node *);1;TR;Arraycmp;0;0
checkForPostIncrement;checkForPostIncrement(TR::Block *,TR::Node *,TR::Node *,TR::Symbol *);1;TR;ArrayLoop;0;0
checkGoto;checkGoto(TR::Block *,TR::Node *,TR::Node *);1;TR;Arraycmp;0;0
checkLoopCmp;checkLoopCmp(TR::Node *,TR::Node *,class TR_InductionVariable *);1;TR;ArrayLoop;0;0
comp;comp();1;TR;ArrayLoop;0;0
findIndVarLoads;findIndVarLoads(TR::Node *,TR::Node *,_Bool &,List<TR::Node> *,TR::Symbol *,vcount_t);1;TR;ArrayLoop;0;0
forwardLoop;forwardLoop();1;TR;ArrayLoop;0;0
getAddInc;getAddInc();1;TR;ArrayLoop;0;0
getFinalNode;getFinalNode();1;TR;ArrayLoop;0;0
getFirstAddress;getFirstAddress();1;TR;ArrayLoop;0;0
getFirstIndVarNode;getFirstIndVarNode();1;TR;Arraycmp;0;0
getFirstLoad;getFirstLoad();1;TR;Arraycmp;0;0
getFirstMultiplyNode;getFirstMultiplyNode();1;TR;Arraycmp;0;0
getSecondAddress;getSecondAddress();1;TR;ArrayLoop;0;0
getSecondIndVarNode;getSecondIndVarNode();1;TR;Arraycmp;0;0
getSecondLoad;getSecondLoad();1;TR;Arraycmp;0;0
getSecondMultiplyNode;getSecondMultiplyNode();1;TR;Arraycmp;0;0
getThirdAddress;getThirdAddress();1;TR;ArrayLoop;0;0
setFirstLoad;setFirstLoad(TR::Node *);1;TR;Arraycmp;0;0
setSecondLoad;setSecondLoad(TR::Node *);1;TR;Arraycmp;0;0
targetOfGotoBlock;targetOfGotoBlock();1;TR;Arraycmp;0;0
updateIndVarStore;updateIndVarStore(class TR_ParentOfChildNode *,TR::Node *,class TR_LRAddressTree *,int32_t);1;TR;ArrayLoop;0;0
~TR_ArrayLoop;~TR_ArrayLoop();1;TR;ArrayLoop;1;0
TR_Arraycopy;TR_Arraycopy(class TR_Arraycopy &&);1;TR;Arraycopy;1;0
TR_Arraycopy;TR_Arraycopy(TR::Compilation *,class TR_InductionVariable *);0;TR;Arraycopy;0;0
TR_Arraycopy;TR_Arraycopy(const class TR_Arraycopy &);0;TR;Arraycopy;1;0
checkArrayStore;checkArrayStore(TR::Node *);1;TR;Arraycopy;0;0
getCopySize;getCopySize();1;TR;Arraycopy;0;0
getLoadAddress;getLoadAddress();1;TR;Arraycopy;0;0
getLoadIndVarNode;getLoadIndVarNode();1;TR;Arraycopy;0;0
getLoadMultiplyNode;getLoadMultiplyNode();1;TR;Arraycopy;0;0
getStoreAddress;getStoreAddress();1;TR;Arraycopy;0;0
getStoreIndVarNode;getStoreIndVarNode();1;TR;Arraycopy;0;0
getStoreMultiplyNode;getStoreMultiplyNode();1;TR;Arraycopy;0;0
getStoreNode;getStoreNode();1;TR;Arraycopy;0;0
hasWriteBarrier;hasWriteBarrier();1;TR;Arraycopy;0;0
TR_Arrayset;TR_Arrayset(class TR_Arrayset &&);1;TR;Arrayset;1;0
TR_Arrayset;TR_Arrayset(const class TR_Arrayset &);0;TR;Arrayset;1;0
TR_Arrayset;TR_Arrayset(TR::Compilation *,class TR_InductionVariable *);0;TR;Arrayset;0;0
checkArrayStore;checkArrayStore(TR::Node *);1;TR;Arrayset;0;0
getIndVar;getIndVar();1;TR;Arrayset;0;0
getIndVarNode;getIndVarNode();1;TR;Arrayset;0;0
getMultiplyNode;getMultiplyNode();1;TR;Arrayset;0;0
getStoreAddress;getStoreAddress();1;TR;Arrayset;0;0
TR_Arraytranslate;TR_Arraytranslate(const class TR_Arraytranslate &);1;TR;Arraytranslate;1;0
TR_Arraytranslate;TR_Arraytranslate(class TR_Arraytranslate &&);0;TR;Arraytranslate;1;0
TR_Arraytranslate;TR_Arraytranslate(TR::Compilation *,class TR_InductionVariable *,_Bool,_Bool);0;TR;Arraytranslate;0;0
checkBreak;checkBreak(TR::Block *,TR::Node *,TR::Block *);1;TR;Arraytranslate;0;0
checkGoto;checkGoto(TR::Block *,TR::Node *,TR::Block *);1;TR;Arraytranslate;0;0
checkLoad;checkLoad(TR::Node *);1;TR;Arraytranslate;0;0
checkMatIndVarStore;checkMatIndVarStore(TR::Node *,TR::Node *);1;TR;Arraytranslate;0;0
checkStore;checkStore(TR::Node *);1;TR;Arraytranslate;0;0
compilerGeneratedTable;compilerGeneratedTable();1;TR;Arraytranslate;0;0
getByteInput;getByteInput();1;TR;Arraytranslate;0;0
getByteOutput;getByteOutput();1;TR;Arraytranslate;0;0
getInputNode;getInputNode();1;TR;Arraytranslate;0;0
getLoadAddress;getLoadAddress();1;TR;Arraytranslate;0;0
getMulChild;getMulChild(TR::Node *);1;TR;Arraytranslate;0;0
getOutputNode;getOutputNode();1;TR;Arraytranslate;0;0
getResultNode;getResultNode();1;TR;Arraytranslate;0;0
getResultUnconvertedNode;getResultUnconvertedNode();1;TR;Arraytranslate;0;0
getStoreAddress;getStoreAddress();1;TR;Arraytranslate;0;0
getTableNode;getTableNode();1;TR;Arraytranslate;0;0
getTermCharNode;getTermCharNode();1;TR;Arraytranslate;0;0
getTermValue;getTermValue();1;TR;Arraytranslate;0;0
hasBranch;hasBranch();1;TR;Arraytranslate;0;0
hasBreak;hasBreak();1;TR;Arraytranslate;0;0
tableBackedByRawStorage;tableBackedByRawStorage();1;TR;Arraytranslate;0;0
TR_ArraytranslateAndTest;TR_ArraytranslateAndTest(class TR_ArraytranslateAndTest &&);1;TR;ArraytranslateAndTest;1;0
TR_ArraytranslateAndTest;TR_ArraytranslateAndTest(TR::Compilation *,class TR_InductionVariable *);0;TR;ArraytranslateAndTest;0;0
TR_ArraytranslateAndTest;TR_ArraytranslateAndTest(const class TR_ArraytranslateAndTest &);0;TR;ArraytranslateAndTest;1;0
checkFrequency;checkFrequency(TR::CodeGenerator *,TR::Block *,TR::Node *);1;TR;ArraytranslateAndTest;0;0
checkLoad;checkLoad(TR::Block *,TR::Node *);1;TR;ArraytranslateAndTest;0;0
getIndVarNode;getIndVarNode();1;TR;ArraytranslateAndTest;0;0
getInputNode;getInputNode();1;TR;ArraytranslateAndTest;0;0
getStoreAddress;getStoreAddress();1;TR;ArraytranslateAndTest;0;0
getTermCharNode;getTermCharNode();1;TR;ArraytranslateAndTest;0;0
TR_ByteToCharArraycopy;TR_ByteToCharArraycopy(const class TR_ByteToCharArraycopy &);1;TR;ByteToCharArraycopy;1;0
TR_ByteToCharArraycopy;TR_ByteToCharArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool);0;TR;ByteToCharArraycopy;0;0
TR_ByteToCharArraycopy;TR_ByteToCharArraycopy(class TR_ByteToCharArraycopy &&);0;TR;ByteToCharArraycopy;1;0
checkArrayStore;checkArrayStore(TR::Node *);1;TR;ByteToCharArraycopy;0;0
checkByteLoads;checkByteLoads(TR::Node *);1;TR;ByteToCharArraycopy;0;0
getHighLoadAddress;getHighLoadAddress();1;TR;ByteToCharArraycopy;0;0
getHighLoadIndVarNode;getHighLoadIndVarNode();1;TR;ByteToCharArraycopy;0;0
getHighLoadMultiplyNode;getHighLoadMultiplyNode();1;TR;ByteToCharArraycopy;0;0
getLowLoadAddress;getLowLoadAddress();1;TR;ByteToCharArraycopy;0;0
getLowLoadIndVarNode;getLowLoadIndVarNode();1;TR;ByteToCharArraycopy;0;0
getLowLoadMultiplyNode;getLowLoadMultiplyNode();1;TR;ByteToCharArraycopy;0;0
getStoreAddress;getStoreAddress();1;TR;ByteToCharArraycopy;0;0
getStoreIndVarNode;getStoreIndVarNode();1;TR;ByteToCharArraycopy;0;0
getStoreMultiplyNode;getStoreMultiplyNode();1;TR;ByteToCharArraycopy;0;0
TR_CharToByteArraycopy;TR_CharToByteArraycopy(class TR_CharToByteArraycopy &&);1;TR;CharToByteArraycopy;1;0
TR_CharToByteArraycopy;TR_CharToByteArraycopy(const class TR_CharToByteArraycopy &);0;TR;CharToByteArraycopy;1;0
TR_CharToByteArraycopy;TR_CharToByteArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool);0;TR;CharToByteArraycopy;0;0
checkArrayStores;checkArrayStores(TR::Node *,TR::Node *);1;TR;CharToByteArraycopy;0;0
getHighStoreAddress;getHighStoreAddress();1;TR;CharToByteArraycopy;0;0
getHighStoreIndVarNode;getHighStoreIndVarNode();1;TR;CharToByteArraycopy;0;0
getHighStoreMultiplyNode;getHighStoreMultiplyNode();1;TR;CharToByteArraycopy;0;0
getLoadAddress;getLoadAddress();1;TR;CharToByteArraycopy;0;0
getLoadIndVarNode;getLoadIndVarNode();1;TR;CharToByteArraycopy;0;0
getLoadMultiplyNode;getLoadMultiplyNode();1;TR;CharToByteArraycopy;0;0
getLowStoreAddress;getLowStoreAddress();1;TR;CharToByteArraycopy;0;0
getLowStoreIndVarNode;getLowStoreIndVarNode();1;TR;CharToByteArraycopy;0;0
getLowStoreMultiplyNode;getLowStoreMultiplyNode();1;TR;CharToByteArraycopy;0;0
TR_AddressTree;TR_AddressTree(class TR_AddressTree &&);1;TR;AddressTree;1;0
TR_AddressTree;TR_AddressTree(const class TR_AddressTree &);0;TR;AddressTree;1;0
TR_AddressTree;TR_AddressTree(enum TR_AllocationKind,TR::Compilation *);0;TR;AddressTree;0;0
TR_LRAddressTree;TR_LRAddressTree(class TR_LRAddressTree &&);1;TR;LRAddressTree;1;0
TR_LRAddressTree;TR_LRAddressTree(const class TR_LRAddressTree &);0;TR;LRAddressTree;1;0
TR_LRAddressTree;TR_LRAddressTree(TR::Compilation *,class TR_InductionVariable *);0;TR;LRAddressTree;0;0
checkAiadd;checkAiadd(TR::Node *,int32_t);1;TR;LRAddressTree;0;0
checkIndVarStore;checkIndVarStore(TR::Node *);1;TR;LRAddressTree;0;0
comp;comp();1;TR;AddressTree;0;0
findComplexAddressGenerationTree;findComplexAddressGenerationTree(TR::Node *,vcount_t,TR::Node *);1;TR;AddressTree;0;1
getBaseVarNode;getBaseVarNode();1;TR;AddressTree;0;0
getIncrement;getIncrement();1;TR;LRAddressTree;0;0
getIndVar;getIndVar();1;TR;LRAddressTree;0;0
getIndVarLoad;getIndVarLoad();1;TR;LRAddressTree;0;0
getIndVarNode;getIndVarNode();1;TR;AddressTree;0;0
getIndVarSymRef;getIndVarSymRef();1;TR;LRAddressTree;0;0
getIndexBase;getIndexBase();1;TR;AddressTree;0;0
getMaterializedIndVarSymRef;getMaterializedIndVarSymRef();1;TR;LRAddressTree;0;0
getMultiplier;getMultiplier();1;TR;AddressTree;0;0
getMultiplyNode;getMultiplyNode();1;TR;AddressTree;0;0
getOffset;getOffset();1;TR;AddressTree;0;0
getRootNode;getRootNode();1;TR;AddressTree;0;0
isILLoad;isILLoad(TR::Node *);1;TR;AddressTree;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;AddressTree;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;AddressTree;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;AddressTree;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;AddressTree;0;0
operator delete;operator delete(void *,size_t);0;TR;AddressTree;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;AddressTree;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;AddressTree;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;AddressTree;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;AddressTree;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;AddressTree;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;AddressTree;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;TR;AddressTree;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;AddressTree;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;AddressTree;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;AddressTree;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;AddressTree;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;AddressTree;0;0
operator new;operator new(size_t,TR::Region &);0;TR;AddressTree;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;AddressTree;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;AddressTree;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;AddressTree;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;AddressTree;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;AddressTree;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;AddressTree;0;0
operator=;operator=(const class TR_AddressTree &);1;TR;AddressTree;1;0
operator=;operator=(class TR_AddressTree &&);0;TR;AddressTree;1;0
operator=;operator=(const class TR_LRAddressTree &);0;TR;LRAddressTree;1;0
operator=;operator=(class TR_LRAddressTree &&);0;TR;LRAddressTree;1;0
process;process(TR::Node *,_Bool);1;TR;AddressTree;0;0
processBaseAndIndex;processBaseAndIndex(TR::Node *);1;TR;AddressTree;0;1
processMultiplyNode;processMultiplyNode(TR::Node *);1;TR;AddressTree;0;0
setIncrement;setIncrement(int32_t);1;TR;LRAddressTree;0;0
setMaterializedIndVarSymRef;setMaterializedIndVarSymRef(TR::SymbolReference *);1;TR;LRAddressTree;0;0
trMemory;trMemory();1;TR;AddressTree;0;0
updateAiaddSubTree;updateAiaddSubTree(class TR_ParentOfChildNode *,class TR_ArrayLoop *);1;TR;LRAddressTree;0;0
updateMultiply;updateMultiply(class TR_ParentOfChildNode *);1;TR;LRAddressTree;0;0
~TR_AddressTree;~TR_AddressTree();1;TR;AddressTree;1;0
~TR_LRAddressTree;~TR_LRAddressTree();1;TR;LRAddressTree;1;0
TR_RedundantInductionVarElimination;TR_RedundantInductionVarElimination(TR::OptimizationManager *);1;TR;RedundantInductionVarElimination;0;0
TR_RedundantInductionVarElimination;TR_RedundantInductionVarElimination(const class TR_RedundantInductionVarElimination &);0;TR;RedundantInductionVarElimination;1;0
collectSymbolsWrittenAndReadExactlyOnce;collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t);1;TR;LoopTransformer;0;0
collectSymbolsWrittenAndReadExactlyOnce;collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t,struct TR_LoopTransformer::updateInfo_tables &);0;TR;LoopTransformer;0;0
TR_LoopReducer;TR_LoopReducer(const class TR_LoopReducer &);1;TR;LoopReducer;1;0
TR_LoopReducer;TR_LoopReducer(class TR_LoopReducer &&);0;TR;LoopReducer;1;0
TR_LoopReducer;TR_LoopReducer(TR::OptimizationManager *);0;TR;LoopReducer;0;0
addBlock;addBlock(TR::Block *,TR::Block **,int,const int);1;TR;LoopReducer;0;0
addRegionBlocks;addRegionBlocks(class TR_RegionStructure *,TR::Block **,int,const int);1;TR;LoopReducer;0;0
blockInVersionedLoop;blockInVersionedLoop(List<TR::CFGEdge>,TR::Block *);1;TR;LoopReducer;0;0
constrainedIndVar;constrainedIndVar(class TR_InductionVariable *);1;TR;LoopReducer;0;0
convertIf;convertIf(TR::ILOpCodes);1;TR;LoopReducer;0;0
create;create(TR::OptimizationManager *);1;TR;LoopReducer;0;0
generateArraycmp;generateArraycmp(class TR_RegionStructure *,class TR_InductionVariable *,TR::Block *,TR::Block *);1;TR;LoopReducer;0;0
generateArraycopy;generateArraycopy(class TR_InductionVariable *,TR::Block *);1;TR;LoopReducer;0;0
generateArrayset;generateArrayset(class TR_InductionVariable *,TR::Block *);1;TR;LoopReducer;0;0
generateArraytranslate;generateArraytranslate(class TR_RegionStructure *,class TR_InductionVariable *,TR::Block *,TR::Block *,TR::Block *,TR::Block *);1;TR;LoopReducer;0;0
generateArraytranslateAndTest;generateArraytranslateAndTest(class TR_RegionStructure *,class TR_InductionVariable *,TR::Block *,TR::Block *);1;TR;LoopReducer;0;0
generateByteToCharArraycopy;generateByteToCharArraycopy(class TR_InductionVariable *,class TR_InductionVariable *,TR::Block *);1;TR;LoopReducer;0;0
generateCharToByteArraycopy;generateCharToByteArraycopy(class TR_InductionVariable *,class TR_InductionVariable *,TR::Block *);1;TR;LoopReducer;0;0
mayNeedGlobalDeadStoreElimination;mayNeedGlobalDeadStoreElimination(TR::Block *,TR::Block *);1;TR;LoopReducer;0;0
operator=;operator=(class TR_LoopReducer &&);0;TR;LoopReducer;1;0
operator=;operator=(const class TR_LoopReducer &);0;TR;LoopReducer;1;0
reduceNaturalLoop;reduceNaturalLoop(class TR_RegionStructure *);1;TR;LoopReducer;0;0
removeSelfEdge;removeSelfEdge(TR::CFGEdgeList &,int32_t);1;TR;LoopReducer;0;0
replaceInductionVariable;replaceInductionVariable(TR::Node *,TR::Node *,int32_t,int32_t,TR::Node *,vcount_t);1;TR;LoopReducer;0;0
~TR_LoopReducer;~TR_LoopReducer();1;TR;LoopReducer;1;1
TR_RangeTranslateTable;TR_RangeTranslateTable(class TR_RangeTranslateTable &&);1;TR;RangeTranslateTable;1;0
TR_RangeTranslateTable;TR_RangeTranslateTable(const class TR_RangeTranslateTable &);0;TR;RangeTranslateTable;1;0
TR_RangeTranslateTable;TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint32_t,uint32_t,uint32_t,uint32_t,uint16_t);0;TR;RangeTranslateTable;0;0
TR_RangeTranslateTable;TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint32_t,uint32_t,uint16_t);0;TR;RangeTranslateTable;0;0
TR_RangeTranslateTable;TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t,uint16_t,uint16_t,uint16_t,uint16_t);0;TR;RangeTranslateTable;0;0
TR_RangeTranslateTable;TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t,uint16_t,uint16_t);0;TR;RangeTranslateTable;0;0
TR_TranslateTable;TR_TranslateTable(const class TR_TranslateTable &);1;TR;TranslateTable;1;0
TR_TranslateTable;TR_TranslateTable(TR::Compilation *);0;TR;TranslateTable;0;0
TR_TranslateTable;TR_TranslateTable(class TR_TranslateTable &&);0;TR;TranslateTable;1;0
comp;comp();1;TR;TranslateTable;0;0
createSymbolRef;createSymbolRef();1;TR;TranslateTable;0;0
createTable;createTable(uint16_t,uint16_t,uint16_t,uint16_t,uint8_t,uint8_t,uint16_t);1;TR;TranslateTable;0;0
createTable;createTable(uint32_t,uint32_t,uint32_t,uint32_t,uint8_t,uint8_t,uint16_t);0;TR;TranslateTable;0;0
createTable;createTable(uint16_t,uint16_t,uint8_t,uint8_t,uint16_t);0;TR;TranslateTable;0;0
createTable;createTable(uint32_t,uint32_t,uint8_t,uint8_t,uint16_t);0;TR;TranslateTable;0;0
data;data();1;TR;TranslateTable;0;0
dumpTable;dumpTable();1;TR;TranslateTable;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;TranslateTable;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;TranslateTable;0;0
matchTable;matchTable(uint8_t,uint8_t,void *);1;TR;TranslateTable;0;0
matchTable;matchTable(uint32_t,uint32_t,uint32_t,uint32_t,uint8_t,uint8_t,uint16_t);0;TR;TranslateTable;0;0
operator delete;operator delete(void *,size_t);1;TR;TranslateTable;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;TranslateTable;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;TranslateTable;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;TranslateTable;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;TranslateTable;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;TranslateTable;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;TranslateTable;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;TranslateTable;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;TranslateTable;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;TranslateTable;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;TranslateTable;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;TranslateTable;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;TranslateTable;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;TranslateTable;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;TranslateTable;0;0
operator new;operator new(size_t,TR::Region &);0;TR;TranslateTable;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;TranslateTable;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;TranslateTable;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;TranslateTable;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;TranslateTable;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;TranslateTable;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;TranslateTable;0;0
setTable;setTable(struct TR_TranslateTable::TR_TranslateTableData *);1;TR;TranslateTable;0;0
table;table();1;TR;TranslateTable;0;0
tableSize;tableSize(uint8_t,uint8_t);1;TR;TranslateTable;0;0
updateTable;updateTable();1;TR;TranslateTable;0;0
~TR_TranslateTable;~TR_TranslateTable();1;TR;TranslateTable;1;0
TR_SetTranslateTable;TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,void *,int);1;TR;SetTranslateTable;0;0
TR_SetTranslateTable;TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t []);0;TR;SetTranslateTable;0;0
TR_SetTranslateTable;TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint8_t []);0;TR;SetTranslateTable;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;CFG;0;0
TR_LoopReplicator;TR_LoopReplicator(class TR_LoopReplicator &&);1;TR;LoopReplicator;1;0
TR_LoopReplicator;TR_LoopReplicator(const class TR_LoopReplicator &);0;TR;LoopReplicator;1;0
TR_LoopReplicator;TR_LoopReplicator(TR::OptimizationManager *);0;TR;LoopReplicator;0;0
addBlocksAndFixEdges;addBlocksAndFixEdges(struct TR_LoopReplicator::LoopInfo *);1;TR;LoopReplicator;0;0
bestSuccessor;bestSuccessor(class TR_RegionStructure *,TR::Block *,TR::CFGEdge **);1;TR;LoopReplicator;0;0
calculateBlockWeights;calculateBlockWeights(class TR_RegionStructure *);1;TR;LoopReplicator;0;0
checkForSuccessor;checkForSuccessor(TR::Block *,TR::Block *);1;TR;LoopReplicator;0;0
checkInnerLoopFrequencies;checkInnerLoopFrequencies(class TR_RegionStructure *,struct TR_LoopReplicator::LoopInfo *);1;TR;LoopReplicator;0;0
computeWeight;computeWeight(TR::CFGEdge *);1;TR;LoopReplicator;0;0
countChildren;countChildren(TR::Node *,vcount_t);1;TR;LoopReplicator;0;0
create;create(TR::OptimizationManager *);1;TR;LoopReplicator;0;0
createEmptyGoto;createEmptyGoto(TR::Block *,TR::Block *,_Bool);1;TR;LoopReplicator;0;0
deriveFrequencyFromPreds;deriveFrequencyFromPreds(class TR_StructureSubGraphNode *,class TR_RegionStructure *);1;TR;LoopReplicator;0;0
doTailDuplication;doTailDuplication(struct TR_LoopReplicator::LoopInfo *);1;TR;LoopReplicator;0;0
findEndTreeTop;findEndTreeTop(class TR_RegionStructure *);1;TR;LoopReplicator;0;0
findLoopInfo;findLoopInfo(int32_t);1;TR;LoopReplicator;0;0
findNodeInHierarchy;findNodeInHierarchy(class TR_RegionStructure *,int32_t);1;TR;LoopReplicator;0;0
fixUpLoopEntry;fixUpLoopEntry(struct TR_LoopReplicator::LoopInfo *,TR::Block *);1;TR;LoopReplicator;0;0
gatherBlocksToBeCloned;gatherBlocksToBeCloned(struct TR_LoopReplicator::LoopInfo *);1;TR;LoopReplicator;0;0
gatherRestOfLoop;gatherRestOfLoop(class TR_RegionStructure *,TR::Block *,TR_Queue<TR::Block> &);1;TR;LoopReplicator;0;0
gatherRestOfLoop;gatherRestOfLoop(class TR_RegionStructure *,TR_Queue<TR::Block> *);0;TR;LoopReplicator;0;0
gatherTargets;gatherTargets(TR_Queue<TR::Block> &,TR_Queue<TR::Block> &,struct TR_LoopReplicator::LoopInfo *);1;TR;LoopReplicator;0;0
getBlockFreq;getBlockFreq(TR::Block *);1;TR;LoopReplicator;0;0
getScaledFreq;getScaledFreq(TR_ScratchList<TR::Block> &,TR::Block *);1;TR;LoopReplicator;0;0
getSeedFreq;getSeedFreq(class TR_RegionStructure *);1;TR;LoopReplicator;0;0
heuristics;heuristics(struct TR_LoopReplicator::LoopInfo *);1;TR;LoopReplicator;0;0
heuristics;heuristics(struct TR_LoopReplicator::LoopInfo *,_Bool);0;TR;LoopReplicator;0;0
isBackEdgeOrLoopExit;isBackEdgeOrLoopExit(TR::CFGEdge *,class TR_RegionStructure *,_Bool);1;TR;LoopReplicator;0;0
isSwitchBlock;isSwitchBlock(TR::Block *);1;TR;LoopReplicator;0;0
isWellFormedLoop;isWellFormedLoop(class TR_RegionStructure *,class TR_Structure *);1;TR;LoopReplicator;0;0
logTrace;logTrace(struct TR_LoopReplicator::LoopInfo *);1;TR;LoopReplicator;0;0
modifyLoops;modifyLoops();1;TR;LoopReplicator;0;0
nextCandidate;nextCandidate(TR::Block *,class TR_RegionStructure *,_Bool);1;TR;LoopReplicator;0;0
nextSuccessor;nextSuccessor(class TR_RegionStructure *,TR::Block **,TR::CFGEdge **);1;TR;LoopReplicator;0;0
operator=;operator=(class TR_LoopReplicator &&);0;TR;LoopReplicator;1;0
operator=;operator=(const class TR_LoopReplicator &);0;TR;LoopReplicator;1;0
perform;perform(class TR_Structure *);0;TR;LoopReplicator;0;0
predecessorsNotYetVisited;predecessorsNotYetVisited(class TR_RegionStructure *,class TR_StructureSubGraphNode *);1;TR;LoopReplicator;0;0
processBlock;processBlock(TR::Block *,class TR_RegionStructure *,struct TR_LoopReplicator::LoopInfo *);1;TR;LoopReplicator;0;0
replicateLoop;replicateLoop(class TR_RegionStructure *,class TR_StructureSubGraphNode *);1;TR;LoopReplicator;0;0
searchList;searchList(TR::Block *,enum listType,struct TR_LoopReplicator::LoopInfo *);1;TR;LoopReplicator;0;0
shouldReplicateWithHotInnerLoops;shouldReplicateWithHotInnerLoops(class TR_RegionStructure *,struct TR_LoopReplicator::LoopInfo *,TR_ScratchList<TR::Block> *);1;TR;LoopReplicator;0;0
~TR_LoopReplicator;~TR_LoopReplicator();1;TR;LoopReplicator;1;1
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Optimizer;0;0
TR_LoopSpecializer;TR_LoopSpecializer(const class TR_LoopSpecializer &);1;TR;LoopSpecializer;1;0
TR_LoopSpecializer;TR_LoopSpecializer(TR::OptimizationManager *);0;TR;LoopSpecializer;0;0
TR_LoopSpecializer;TR_LoopSpecializer(class TR_LoopSpecializer &&);0;TR;LoopSpecializer;1;0
TR_LoopVersioner;TR_LoopVersioner(const class TR_LoopVersioner &);1;TR;LoopVersioner;1;0
TR_LoopVersioner;TR_LoopVersioner(class TR_LoopVersioner &&);0;TR;LoopVersioner;1;0
TR_LoopVersioner;TR_LoopVersioner(TR::OptimizationManager *,_Bool,_Bool);0;TR;LoopVersioner;0;0
boundCheckUsesUnchangedValue;boundCheckUsesUnchangedValue(TR::TreeTop *,TR::Node *,TR::SymbolReference *,class TR_RegionStructure *);1;TR;LoopVersioner;0;0
buildAliasRefinementComparisonTrees;buildAliasRefinementComparisonTrees(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,TR_ScratchList<TR::Node> *,TR::Block *);1;TR;LoopVersioner;0;1
buildArrayStoreCheckComparisonsTree;buildArrayStoreCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);1;TR;LoopVersioner;0;0
buildBoundCheckComparisonsTree;buildBoundCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *,_Bool);1;TR;LoopVersioner;0;0
buildCheckCastComparisonsTree;buildCheckCastComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);1;TR;LoopVersioner;0;0
buildConditionalTree;buildConditionalTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *,SharedSparseBitVector &);1;TR;LoopVersioner;0;0
buildDivCheckComparisonsTree;buildDivCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);1;TR;LoopVersioner;0;0
buildIwrtbarComparisonsTree;buildIwrtbarComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);1;TR;LoopVersioner;0;0
buildLoopInvariantTree;buildLoopInvariantTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,TR::Block *,TR::Block *);1;TR;LoopVersioner;0;0
buildNullCheckComparisonsTree;buildNullCheckComparisonsTree(List<TR::Node> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);1;TR;LoopVersioner;0;0
buildSpecializationTree;buildSpecializationTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<TR::Node> *,TR::Block *,TR::Block *,TR::SymbolReference **);1;TR;LoopVersioner;0;0
buildSpineCheckComparisonsTree;buildSpineCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *);1;TR;LoopVersioner;0;0
canPredictIters;canPredictIters(class TR_RegionStructure *,const TR_ScratchList<TR::Block> &,_Bool &,TR::SymbolReference *&);1;TR;LoopVersioner;0;0
checkProfiledGuardSuitability;checkProfiledGuardSuitability(TR_ScratchList<TR::Block> *,TR::Node *,TR::SymbolReference *,TR::Compilation *);1;TR;LoopVersioner;0;0
collectAllExpressionsToBeChecked;collectAllExpressionsToBeChecked(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,TR::Node *,List<TR::Node> *,TR::Block *,vcount_t);1;TR;LoopVersioner;0;0
collectArrayAliasCandidates;collectArrayAliasCandidates(TR::Node *,vcount_t);1;TR;LoopVersioner;0;1
convertSpecializedLongsToInts;convertSpecializedLongsToInts(TR::Node *,vcount_t,TR::SymbolReference **);1;TR;LoopVersioner;0;0
create;create(TR::OptimizationManager *);1;TR;LoopVersioner;0;0
createClonedHeader;createClonedHeader(TR::Block *,TR::TreeTop **);1;TR;LoopVersioner;0;0
createEmptyGoto;createEmptyGoto(TR::Block *,TR::Block *,TR::TreeTop *);1;TR;LoopVersioner;0;0
createSwitchNode;createSwitchNode(TR::Block *,TR::SymbolReference *,int32_t);1;TR;LoopVersioner;0;0
detectChecksToBeEliminated;detectChecksToBeEliminated(class TR_RegionStructure *,List<TR::Node> *,List<TR::TreeTop> *,List<int32_t> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<int32_t> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,_Bool &);1;TR;LoopVersioner;0;0
detectInvariantArrayStoreChecks;detectInvariantArrayStoreChecks(List<TR::TreeTop> *);1;TR;LoopVersioner;0;0
detectInvariantBoundChecks;detectInvariantBoundChecks(List<TR::TreeTop> *);1;TR;LoopVersioner;0;0
detectInvariantChecks;detectInvariantChecks(List<TR::Node> *,List<TR::TreeTop> *);1;TR;LoopVersioner;0;0
detectInvariantDivChecks;detectInvariantDivChecks(List<TR::TreeTop> *);1;TR;LoopVersioner;0;0
detectInvariantIwrtbars;detectInvariantIwrtbars(List<TR::TreeTop> *);1;TR;LoopVersioner;0;0
detectInvariantNodes;detectInvariantNodes(List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *);1;TR;LoopVersioner;0;0
detectInvariantSpecializedExprs;detectInvariantSpecializedExprs(List<TR::Node> *);1;TR;LoopVersioner;0;0
detectInvariantSpineChecks;detectInvariantSpineChecks(List<TR::TreeTop> *);1;TR;LoopVersioner;0;0
detectInvariantTrees;detectInvariantTrees(class TR_RegionStructure *,List<TR::TreeTop> *,_Bool,_Bool *,SharedSparseBitVector &);1;TR;LoopVersioner;0;0
findAndReplaceContigArrayLen;findAndReplaceContigArrayLen(TR::Node *,TR::Node *,vcount_t);1;TR;LoopVersioner;0;0
findCallNodeInBlockForGuard;findCallNodeInBlockForGuard(TR::Node *);1;TR;LoopVersioner;0;0
findLoad;findLoad(TR::Node *,TR::SymbolReference *,vcount_t);1;TR;LoopVersioner;0;0
findStore;findStore(TR::TreeTop *,TR::TreeTop *,TR::Node *,TR::SymbolReference *,_Bool,_Bool);1;TR;LoopVersioner;0;0
fixupVirtualGuardTargets;fixupVirtualGuardTargets(struct VirtualGuardInfo *);1;TR;LoopVersioner;0;0
getCurrentBlock;getCurrentBlock(TR::Block *);1;TR;LoopVersioner;0;0
hasWrtbarBeenSeen;hasWrtbarBeenSeen(List<TR::TreeTop> *,TR::Node *);1;TR;LoopVersioner;0;0
initAdditionalDataStructures;initAdditionalDataStructures();1;TR;LoopVersioner;0;1
isBranchSuitableToDoLoopTransfer;isBranchSuitableToDoLoopTransfer(TR_ScratchList<TR::Block> *,TR::Node *,TR::Compilation *);1;TR;LoopVersioner;0;0
isBranchSuitableToVersion;isBranchSuitableToVersion(TR_ScratchList<TR::Block> *,TR::Node *,TR::Compilation *);1;TR;LoopVersioner;0;0
isConditionalTreeCandidateForElimination;isConditionalTreeCandidateForElimination(TR::TreeTop *);1;TR;LoopVersioner;0;0
isDependentOnAllocation;isDependentOnAllocation(TR::Node *,int32_t);1;TR;LoopVersioner;0;0
isDependentOnInductionVariable;isDependentOnInductionVariable(TR::Node *,_Bool,_Bool &,TR::Node *&,TR::Node *&,_Bool &);1;TR;LoopVersioner;0;0
isDependentOnInvariant;isDependentOnInvariant(TR::Node *);1;TR;LoopVersioner;0;0
isExprInvariant;isExprInvariant(TR::Node *,_Bool);1;TR;LoopVersioner;0;0
isExprInvariantRecursive;isExprInvariantRecursive(TR::Node *,_Bool);1;TR;LoopVersioner;0;0
isInverseConversions;isInverseConversions(TR::Node *);1;TR;LoopVersioner;0;0
isStoreInSpecialForm;isStoreInSpecialForm(int32_t,class TR_Structure *);1;TR;LoopVersioner;0;0
isVersionableArrayAccess;isVersionableArrayAccess(TR::Node *);1;TR;LoopVersioner;0;0
loopIsWorthVersioning;loopIsWorthVersioning(class TR_RegionStructure *);1;TR;LoopVersioner;0;0
operator=;operator=(const class TR_LoopVersioner &);0;TR;LoopVersioner;1;0
operator=;operator=(class TR_LoopVersioner &&);0;TR;LoopVersioner;1;0
operator=;operator=(class TR_LoopSpecializer &&);0;TR;LoopSpecializer;1;0
operator=;operator=(const class TR_LoopSpecializer &);0;TR;LoopSpecializer;1;0
performLoopTransfer;performLoopTransfer();1;TR;LoopVersioner;0;0
performWithDominators;performWithDominators();1;TR;LoopVersioner;0;0
performWithoutDominators;performWithoutDominators();1;TR;LoopVersioner;0;0
processArrayAliasCandidates;processArrayAliasCandidates();1;TR;LoopVersioner;0;1
recordCurrentBlock;recordCurrentBlock(TR::Block *);1;TR;LoopVersioner;0;0
refineAliases;refineAliases();1;TR;LoopVersioner;0;0
refineArrayAliases;refineArrayAliases(class TR_RegionStructure *);1;TR;LoopVersioner;0;1
replaceInductionVariable;replaceInductionVariable(TR::Node *,TR::Node *,int,int,TR::Node *,int);1;TR;LoopVersioner;0;0
setOnlySpecializeLoops;setOnlySpecializeLoops(_Bool);1;TR;LoopVersioner;0;0
shouldOnlySpecializeLoops;shouldOnlySpecializeLoops();1;TR;LoopVersioner;0;0
updateDefinitionsAndCollectProfiledExprs;updateDefinitionsAndCollectProfiledExprs(TR::Node *,TR::Node *,vcount_t,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,TR::Node *,_Bool,TR::Block *,int32_t);1;TR;LoopVersioner;0;0
versionNaturalLoop;versionNaturalLoop(class TR_RegionStructure *,List<TR::Node> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,List<class TR_Structure> *,List<class TR_Structure> *,_Bool,SharedSparseBitVector &);1;TR;LoopVersioner;0;0
~TR_LoopSpecializer;~TR_LoopSpecializer();1;TR;LoopSpecializer;1;1
~TR_LoopVersioner;~TR_LoopVersioner();1;TR;LoopVersioner;1;1
TR_RegionStructure;TR_RegionStructure(const class TR_RegionStructure &);0;TR;RegionStructure;1;0
LocalCSE;LocalCSE(class OMR::LocalCSE &&);1;OMR;LocalCSE;1;0
LocalCSE;LocalCSE(const class OMR::LocalCSE &);0;OMR;LocalCSE;1;0
LocalCSE;LocalCSE(TR::OptimizationManager *);0;OMR;LocalCSE;0;0
LocalCSE;LocalCSE(class TR::LocalCSE &&);0;TR;LocalCSE;1;0
LocalCSE;LocalCSE(const class TR::LocalCSE &);0;TR;LocalCSE;1;0
addToHashTable;addToHashTable(TR::Node *,int32_t);1;OMR;LocalCSE;0;0
allowNodeTypes;allowNodeTypes(TR::Node *,TR::Node *);1;OMR;LocalCSE;0;0
areSyntacticallyEquivalent;areSyntacticallyEquivalent(TR::Node *,TR::Node *,_Bool *);1;OMR;LocalCSE;0;0
canAffordToIncreaseRegisterPressure;canAffordToIncreaseRegisterPressure(TR::Node *);1;OMR;LocalCSE;0;1
canBeAvailable;canBeAvailable(TR::Node *,TR::Node *,class TR_BitVector &,_Bool);1;OMR;LocalCSE;0;0
collectAllReplacedNodes;collectAllReplacedNodes(TR::Node *,TR::Node *);1;OMR;LocalCSE;0;0
commonNode;commonNode(TR::Node *,int32_t,TR::Node *,TR::Node *);1;OMR;LocalCSE;0;0
create;create(TR::OptimizationManager *);1;OMR;LocalCSE;0;0
doCommoningAgainIfPreviouslyCommoned;doCommoningAgainIfPreviouslyCommoned(TR::Node *,TR::Node *,int32_t);1;OMR;LocalCSE;0;0
doCommoningIfAvailable;doCommoningIfAvailable(TR::Node *,TR::Node *,int32_t,_Bool &);1;OMR;LocalCSE;0;0
doCopyPropagationIfPossible;doCopyPropagationIfPossible(TR::Node *,TR::Node *,int32_t,TR::Node *,TR::SymbolReference *,vcount_t,_Bool &);1;OMR;LocalCSE;0;0
doExtraPassForVolatiles;doExtraPassForVolatiles();1;OMR;LocalCSE;0;0
examineNode;examineNode(TR::Node *,class TR_BitVector &,TR::Node *,int32_t,int32_t *,_Bool *,int32_t);1;OMR;LocalCSE;0;0
getAvailableExpression;getAvailableExpression(TR::Node *,TR::Node *);1;OMR;LocalCSE;0;0
getNode;getNode(TR::Node *);1;OMR;LocalCSE;0;0
getNumberOfNodes;getNumberOfNodes(TR::Node *);1;OMR;LocalCSE;0;0
hash;hash(TR::Node *,TR::Node *);1;OMR;LocalCSE;0;0
isAvailableNullCheck;isAvailableNullCheck(TR::Node *,class TR_BitVector &);1;OMR;LocalCSE;0;0
isFirstReferenceToNode;isFirstReferenceToNode(TR::Node *,int32_t,TR::Node *,vcount_t);1;OMR;LocalCSE;0;0
isIfAggrToBCDOverride;isIfAggrToBCDOverride(TR::Node *,TR::Node *,TR::Node *);1;OMR;LocalCSE;0;0
isTreetopSafeToCommon;isTreetopSafeToCommon();1;OMR;LocalCSE;0;1
killAllAvailableExpressions;killAllAvailableExpressions();1;OMR;LocalCSE;0;0
killAllDataStructures;killAllDataStructures(class TR_BitVector &);1;OMR;LocalCSE;0;0
killAllInternalPointersBasedOnThisPinningArray;killAllInternalPointersBasedOnThisPinningArray(TR::SymbolReference *);1;OMR;LocalCSE;0;0
killAvailableExpressions;killAvailableExpressions(int32_t);1;OMR;LocalCSE;0;0
killAvailableExpressionsAtGCSafePoints;killAvailableExpressionsAtGCSafePoints(TR::Node *,TR::Node *,class TR_BitVector &);1;OMR;LocalCSE;0;0
killAvailableExpressionsUsingAliases;killAvailableExpressionsUsingAliases(struct TR_NodeKillAliasSetInterface &);1;OMR;LocalCSE;0;0
killAvailableExpressionsUsingAliases;killAvailableExpressionsUsingAliases(class TR_BitVector &);0;OMR;LocalCSE;0;0
killAvailableExpressionsUsingBitVector;killAvailableExpressionsUsingBitVector(HashTable *,class TR_BitVector &);1;OMR;LocalCSE;0;0
killExpressionsIfVolatileLoad;killExpressionsIfVolatileLoad(TR::Node *,class TR_BitVector &,struct TR_NodeKillAliasSetInterface &);1;OMR;LocalCSE;0;0
makeNodeAvailableForCommoning;makeNodeAvailableForCommoning(TR::Node *,TR::Node *,class TR_BitVector &,_Bool *);1;OMR;LocalCSE;0;0
onNewTreeTop;onNewTreeTop(TR::TreeTop *);1;OMR;LocalCSE;0;1
operator=;operator=(const class OMR::LocalCSE &);0;OMR;LocalCSE;1;0
operator=;operator=(class OMR::LocalCSE &&);0;OMR;LocalCSE;1;0
operator=;operator=(const class TR::LocalCSE &);0;TR;LocalCSE;1;0
operator=;operator=(class TR::LocalCSE &&);0;TR;LocalCSE;1;0
prepareToCopyPropagate;prepareToCopyPropagate(TR::Node *,TR::Node *);1;OMR;LocalCSE;0;1
recursivelyIncReferenceCount;recursivelyIncReferenceCount(TR::Node *);1;OMR;LocalCSE;0;0
removeFromHashTable;removeFromHashTable(HashTable *,int32_t);1;OMR;LocalCSE;0;0
replaceCopySymbolReferenceByOriginalIn;replaceCopySymbolReferenceByOriginalIn(TR::SymbolReference *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,int32_t);1;OMR;LocalCSE;0;0
setIsInMemoryCopyPropFlag;setIsInMemoryCopyPropFlag(TR::Node *);1;OMR;LocalCSE;0;0
shouldCommonNode;shouldCommonNode(TR::Node *,TR::Node *);1;OMR;LocalCSE;0;1
shouldCopyPropagateNode;shouldCopyPropagateNode(TR::Node *,TR::Node *,int32_t,TR::Node *);1;OMR;LocalCSE;0;1
shouldTransformBlock;shouldTransformBlock(TR::Block *);1;OMR;LocalCSE;0;1
transformBlock;transformBlock(TR::TreeTop *,TR::TreeTop *);1;OMR;LocalCSE;0;0
~LocalCSE;~LocalCSE();1;OMR;LocalCSE;1;1
LocalDeadStoreElimination;LocalDeadStoreElimination(const class TR::LocalDeadStoreElimination &);1;TR;LocalDeadStoreElimination;1;0
LocalDeadStoreElimination;LocalDeadStoreElimination(TR::OptimizationManager *);0;TR;LocalDeadStoreElimination;0;0
LocalDeadStoreElimination;LocalDeadStoreElimination(class TR::LocalDeadStoreElimination &&);0;TR;LocalDeadStoreElimination;1;0
adjustStoresInfo;adjustStoresInfo(TR::Node *,class TR_BitVector &);1;TR;LocalDeadStoreElimination;0;0
areLhsOfStoresSyntacticallyEquivalent;areLhsOfStoresSyntacticallyEquivalent(TR::Node *,TR::Node *);1;TR;LocalDeadStoreElimination;0;0
create;create(TR::OptimizationManager *);1;TR;LocalDeadStoreElimination;0;0
eliminateDeadObjectInitializations;eliminateDeadObjectInitializations();1;TR;LocalDeadStoreElimination;0;0
examineNewUsesForKill;examineNewUsesForKill(TR::Node *,TR::Node *,List<TR::Node> *,List<TR::Node> *,TR::Node *,int32_t,vcount_t);1;TR;LocalDeadStoreElimination;0;0
examineNode;examineNode(TR::Node *,int32_t,TR::Node *,class TR_BitVector &);1;TR;LocalDeadStoreElimination;0;0
findLocallyAllocatedObjectUses;findLocallyAllocatedObjectUses(LDSBitVector &,TR::Node *,int32_t,TR::Node *,vcount_t);1;TR;LocalDeadStoreElimination;0;0
getAnchorNode;getAnchorNode(TR::Node *,int32_t,TR::Node *,TR::TreeTop *,TR::NodeChecklist &);1;TR;LocalDeadStoreElimination;0;0
isEntireNodeRemovable;isEntireNodeRemovable(TR::Node *);1;TR;LocalDeadStoreElimination;0;0
isFirstReferenceToNode;isFirstReferenceToNode(TR::Node *,int32_t,TR::Node *);1;TR;LocalDeadStoreElimination;0;0
isIdentityStore;isIdentityStore(TR::Node *);1;TR;LocalDeadStoreElimination;0;0
isNonRemovableStore;isNonRemovableStore(TR::Node *,_Bool &);1;TR;LocalDeadStoreElimination;0;1
killStoreNodes;killStoreNodes(TR::Node *);1;TR;LocalDeadStoreElimination;0;0
operator=;operator=(const class TR::LocalDeadStoreElimination &);0;TR;LocalDeadStoreElimination;1;0
operator=;operator=(class TR::LocalDeadStoreElimination &&);0;TR;LocalDeadStoreElimination;1;0
removeStoreTree;removeStoreTree(TR::TreeTop *);1;TR;LocalDeadStoreElimination;0;0
seenIdenticalStore;seenIdenticalStore(TR::Node *);1;TR;LocalDeadStoreElimination;0;0
setExternalReferenceCountToTree;setExternalReferenceCountToTree(TR::Node *,rcount_t *);1;TR;LocalDeadStoreElimination;0;0
setIsFirstReferenceToNode;setIsFirstReferenceToNode(TR::Node *,int32_t,TR::Node *);1;TR;LocalDeadStoreElimination;0;0
setupReferenceCounts;setupReferenceCounts(TR::Node *);1;TR;LocalDeadStoreElimination;0;0
transformBlock;transformBlock(TR::TreeTop *,TR::TreeTop *);1;TR;LocalDeadStoreElimination;0;0
~LocalDeadStoreElimination;~LocalDeadStoreElimination();1;TR;LocalDeadStoreElimination;1;1
TR_ArraysetStoreElimination;TR_ArraysetStoreElimination(const class TR_ArraysetStoreElimination &);1;TR;ArraysetStoreElimination;1;0
TR_ArraysetStoreElimination;TR_ArraysetStoreElimination(class TR_ArraysetStoreElimination &&);0;TR;ArraysetStoreElimination;1;0
TR_ArraysetStoreElimination;TR_ArraysetStoreElimination(TR::OptimizationManager *);0;TR;ArraysetStoreElimination;0;0
create;create(TR::OptimizationManager *);1;TR;ArraysetStoreElimination;0;0
operator=;operator=(class TR_ArraysetStoreElimination &&);0;TR;ArraysetStoreElimination;1;0
operator=;operator=(const class TR_ArraysetStoreElimination &);0;TR;ArraysetStoreElimination;1;0
optimizeArraysetIfPossible;optimizeArraysetIfPossible(TR::Node *,TR::Node *,TR::TreeTop *,TR::Node *,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,vcount_t,TR::TreeTop *);1;TR;ArraysetStoreElimination;0;0
process;process(TR::TreeTop *,TR::TreeTop *);1;TR;ArraysetStoreElimination;0;0
reduceArraysetStores;reduceArraysetStores(TR::Block *,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *);1;TR;ArraysetStoreElimination;0;0
~TR_ArraysetStoreElimination;~TR_ArraysetStoreElimination();1;TR;ArraysetStoreElimination;1;1
AllBlockIterator;AllBlockIterator(class TR::AllBlockIterator &&);1;TR;AllBlockIterator;1;0
AllBlockIterator;AllBlockIterator(const class TR::AllBlockIterator &);0;TR;AllBlockIterator;1;0
~AllBlockIterator;~AllBlockIterator();1;TR;AllBlockIterator;1;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;SymbolReference;0;0
TR_BlockManipulator;TR_BlockManipulator(class TR_BlockManipulator &&);1;TR;BlockManipulator;1;0
TR_BlockManipulator;TR_BlockManipulator(const class TR_BlockManipulator &);0;TR;BlockManipulator;1;0
TR_BlockManipulator;TR_BlockManipulator(TR::OptimizationManager *);0;TR;BlockManipulator;0;0
TR_CleanseTrees;TR_CleanseTrees(class TR_CleanseTrees &&);1;TR;CleanseTrees;1;0
TR_CleanseTrees;TR_CleanseTrees(const class TR_CleanseTrees &);0;TR;CleanseTrees;1;0
TR_CleanseTrees;TR_CleanseTrees(TR::OptimizationManager *);0;TR;CleanseTrees;0;0
breakFallThrough;breakFallThrough(TR::Block *,TR::Block *,_Bool);1;TR;BlockManipulator;0;0
countNumberOfTreesInSameExtendedBlock;countNumberOfTreesInSameExtendedBlock(TR::Block *);1;TR;BlockManipulator;0;0
create;create(TR::OptimizationManager *);1;TR;CleanseTrees;0;0
estimatedHotness;estimatedHotness(TR::CFGEdge *,TR::Block *);1;TR;BlockManipulator;0;0
getBestChoiceForExtension;getBestChoiceForExtension(TR::Block *);1;TR;BlockManipulator;0;0
isBestChoiceForFallThrough;isBestChoiceForFallThrough(TR::Block *,TR::Block *);1;TR;BlockManipulator;0;0
operator=;operator=(const class TR_BlockManipulator &);0;TR;BlockManipulator;1;0
operator=;operator=(class TR_BlockManipulator &&);0;TR;BlockManipulator;1;0
operator=;operator=(const class TR_CleanseTrees &);0;TR;CleanseTrees;1;0
operator=;operator=(class TR_CleanseTrees &&);0;TR;CleanseTrees;1;0
performChecksAndTreesMovement;performChecksAndTreesMovement(TR::Block *,TR::Block *,TR::Block *,TR::TreeTop *,vcount_t,TR::Optimizer *);1;TR;BlockManipulator;0;0
process;process(TR::TreeTop *,TR::TreeTop *);1;TR;CleanseTrees;0;0
~TR_BlockManipulator;~TR_BlockManipulator();1;TR;BlockManipulator;1;1
~TR_CleanseTrees;~TR_CleanseTrees();1;TR;CleanseTrees;1;1
TR_BlockOrderingOptimization;TR_BlockOrderingOptimization(const class TR_BlockOrderingOptimization &);1;TR;BlockOrderingOptimization;1;0
TR_BlockOrderingOptimization;TR_BlockOrderingOptimization(class TR_BlockOrderingOptimization &&);0;TR;BlockOrderingOptimization;1;0
TR_BlockOrderingOptimization;TR_BlockOrderingOptimization(TR::OptimizationManager *);0;TR;BlockOrderingOptimization;0;0
TR_BlockShuffling;TR_BlockShuffling(class TR_BlockShuffling &&);1;TR;BlockShuffling;1;0
TR_BlockShuffling;TR_BlockShuffling(TR::OptimizationManager *);0;TR;BlockShuffling;0;0
TR_BlockShuffling;TR_BlockShuffling(const class TR_BlockShuffling &);0;TR;BlockShuffling;1;0
allocateBlockArray;allocateBlockArray();1;TR;BlockShuffling;0;0
applyBlockOrder;applyBlockOrder(TR::Block **);1;TR;BlockShuffling;0;0
connectTreesAccordingToOrder;connectTreesAccordingToOrder(TR_BlockList &);1;TR;BlockOrderingOptimization;0;0
create;create(TR::OptimizationManager *);1;TR;BlockShuffling;0;0
dumpBlockOrdering;dumpBlockOrdering(TR::TreeTop *,char *);1;TR;BlockOrderingOptimization;0;0
insertGotoFallThroughBlock;insertGotoFallThroughBlock(TR::TreeTop *,TR::Node *,TR::CFGNode *,TR::CFGNode *,class TR_RegionStructure *);1;TR;BlockOrderingOptimization;0;0
operator=;operator=(class TR_BlockOrderingOptimization &&);0;TR;BlockOrderingOptimization;1;0
operator=;operator=(const class TR_BlockOrderingOptimization &);0;TR;BlockOrderingOptimization;1;0
operator=;operator=(class TR_BlockShuffling &&);0;TR;BlockShuffling;1;0
operator=;operator=(const class TR_BlockShuffling &);0;TR;BlockShuffling;1;0
reverse;reverse(TR::Block **);1;TR;BlockShuffling;0;0
riffle;riffle(TR::Block **);1;TR;BlockShuffling;0;0
scramble;scramble(TR::Block **);1;TR;BlockShuffling;0;0
swap;swap(TR::Block **,int32_t,int32_t);1;TR;BlockShuffling;0;0
traceBlocks;traceBlocks(TR::Block **);1;TR;BlockShuffling;0;0
~TR_BlockOrderingOptimization;~TR_BlockOrderingOptimization();1;TR;BlockOrderingOptimization;1;1
~TR_BlockShuffling;~TR_BlockShuffling();1;TR;BlockShuffling;1;1
TR_BlockSplitter;TR_BlockSplitter(const class TR_BlockSplitter &);1;TR;BlockSplitter;1;0
TR_BlockSplitter;TR_BlockSplitter(class TR_BlockSplitter &&);0;TR;BlockSplitter;1;0
TR_BlockSplitter;TR_BlockSplitter(TR::OptimizationManager *);0;TR;BlockSplitter;0;0
calculateBlockSplitScore;calculateBlockSplitScore(struct TR_BlockSplitter::Synergy &);1;TR;BlockSplitter;0;0
containCycle;containCycle(TR::Block *,TR_LinkHeadAndTail<struct BlockMapper> *);1;TR;BlockSplitter;0;0
create;create(TR::OptimizationManager *);1;TR;BlockSplitter;0;0
disableSynergy;disableSynergy();1;TR;BlockSplitter;0;0
dumpBlockMapper;dumpBlockMapper(TR_LinkHeadAndTail<struct BlockMapper> *);1;TR;BlockSplitter;0;0
dumpSynergies;dumpSynergies(TR_Array<struct TR_BlockSplitter::Synergy> *);1;TR;BlockSplitter;0;0
getParentStructure;getParentStructure(TR::Block *);1;TR;BlockSplitter;0;0
hasIVUpdate;hasIVUpdate(TR::Block *);1;TR;BlockSplitter;0;0
hasLoopAsyncCheck;hasLoopAsyncCheck(TR::Block *);1;TR;BlockSplitter;0;0
heapElementQuickSort;heapElementQuickSort(TR_Array<class TR_BlockSplitter::TR_IndexedBinaryHeapElement *> *,int32_t,int32_t);1;TR;BlockSplitter;0;0
isExitEdge;isExitEdge(TR::Block *,TR::Block *);1;TR;BlockSplitter;0;0
isLoopHeader;isLoopHeader(TR::Block *);1;TR;BlockSplitter;0;0
operator=;operator=(class TR_BlockSplitter &&);0;TR;BlockSplitter;1;0
operator=;operator=(const class TR_BlockSplitter &);0;TR;BlockSplitter;1;0
processNode;processNode(TR::Node *,int32_t,TR_Array<uint32_t> *,TR_Array<struct TR_BlockSplitter::Synergy> *);1;TR;BlockSplitter;0;0
pruneAndPopulateBlockMapper;pruneAndPopulateBlockMapper(TR_LinkHeadAndTail<struct BlockMapper> *,int32_t);1;TR;BlockSplitter;0;0
quickSortSwap;quickSortSwap(TR_Array<class TR_BlockSplitter::TR_IndexedBinaryHeapElement *> *,int32_t,int32_t);1;TR;BlockSplitter;0;0
splitBlock;splitBlock(TR::Block *,TR_LinkHeadAndTail<struct BlockMapper> *);1;TR;BlockSplitter;0;0
synergisticDepthCalculator;synergisticDepthCalculator(TR_LinkHeadAndTail<struct BlockMapper> *,TR::Block *);1;TR;BlockSplitter;0;0
~TR_BlockSplitter;~TR_BlockSplitter();1;TR;BlockSplitter;1;1
TR_Array<T>;TR_Array<T>(class TR_Memory *,uint32_t,_Bool,enum TR_AllocationKind);1;TR;Array;0;0
TR_Array<T>;TR_Array<T>();0;TR;Array;0;0
TR_Array<T>;TR_Array<T>(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool);0;TR;Array;0;0
TR_Array<T>;TR_Array<T>(class TR_PersistentMemory *,uint32_t,_Bool);0;TR;Array;0;0
TR_Array<T>;TR_Array<T>(const TR_Array<T> &);0;TR;Array;0;0
TR_BinaryHeap;TR_BinaryHeap(class TR_Memory *,uint32_t);1;TR_BlockSplitter;TR_BinaryHeap;0;0
TR_BinaryHeap;TR_BinaryHeap(const class TR_BlockSplitter::TR_BinaryHeap &);0;TR_BlockSplitter;TR_BinaryHeap;1;0
TR_BinaryHeap;TR_BinaryHeap(class TR_BlockSplitter::TR_BinaryHeap &&);0;TR_BlockSplitter;TR_BinaryHeap;1;0
add;add(T);1;TR;Array;0;0
add;add(class TR_BlockSplitter::TR_IndexedBinaryHeapElement *);0;TR_BlockSplitter;TR_BinaryHeap;0;0
allocationKind;allocationKind();1;TR;Array;0;0
append;append(const TR_Array<T> &);1;TR;Array;0;0
clear;clear();1;TR;Array;0;0
contains;contains(T);1;TR;Array;0;0
copy;copy(const TR_Array<T> &);1;TR;Array;0;0
dumpList;dumpList(TR::Compilation *);1;TR_BlockSplitter;TR_BinaryHeap;0;0
element;element(uint32_t);1;TR;Array;0;0
free;free();1;TR;Array;0;0
freeMemory;freeMemory();1;TR;Array;0;0
getMaxSize;getMaxSize();1;TR_BlockSplitter;TR_BinaryHeap;0;0
getMin;getMin();1;TR_BlockSplitter;TR_BinaryHeap;0;0
growTo;growTo(uint32_t);1;TR;Array;0;0
init;init(class TR_Memory *,uint32_t,_Bool,enum TR_AllocationKind);1;TR;Array;0;0
init;init(class TR_Memory *,class TR_PersistentMemory *,uint32_t,_Bool,enum TR_AllocationKind);0;TR;Array;0;0
insert;insert(T,uint32_t);1;TR;Array;0;0
internalSize;internalSize();1;TR;Array;0;0
isEmpty;isEmpty();1;TR;Array;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;Array;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;Array;0;0
lastIndex;lastIndex();1;TR;Array;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;TR;Array;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Array;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Array;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;Array;0;0
operator delete;operator delete(void *,size_t);0;TR;Array;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;Array;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Array;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Array;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;Array;0;0
operator new;operator new(size_t,TR::Region &);1;TR;Array;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Array;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;Array;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;Array;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;Array;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Array;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Array;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;Array;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Array;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;Array;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;Array;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Array;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;Array;0;0
operator=;operator=(const TR_Array<T> &);1;TR;Array;0;0
operator=;operator=(class TR_BlockSplitter::TR_BinaryHeap &&);0;TR_BlockSplitter;TR_BinaryHeap;1;0
operator[];operator[](uint32_t);1;TR;Array;0;0
remove;remove(uint32_t);1;TR;Array;0;0
remove;remove(class TR_BlockSplitter::TR_IndexedBinaryHeapElement *);0;TR_BlockSplitter;TR_BinaryHeap;0;0
removeMin;removeMin();1;TR_BlockSplitter;TR_BinaryHeap;0;0
setMaxSize;setMaxSize(uint32_t);1;TR_BlockSplitter;TR_BinaryHeap;0;0
setSize;setSize(uint32_t);1;TR;Array;0;0
size;size();1;TR;Array;0;0
trMemory;trMemory();1;TR;Array;0;0
TR_CheckcastAndProfiledGuardCoalescer;TR_CheckcastAndProfiledGuardCoalescer(TR::OptimizationManager *);1;TR;CheckcastAndProfiledGuardCoalescer;0;0
TR_CheckcastAndProfiledGuardCoalescer;TR_CheckcastAndProfiledGuardCoalescer(class TR_CheckcastAndProfiledGuardCoalescer &&);0;TR;CheckcastAndProfiledGuardCoalescer;1;0
TR_CheckcastAndProfiledGuardCoalescer;TR_CheckcastAndProfiledGuardCoalescer(const class TR_CheckcastAndProfiledGuardCoalescer &);0;TR;CheckcastAndProfiledGuardCoalescer;1;0
create;create(TR::OptimizationManager *);1;TR;CheckcastAndProfiledGuardCoalescer;0;0
doBasicCase;doBasicCase(TR::TreeTop *,TR::TreeTop *);1;TR;CheckcastAndProfiledGuardCoalescer;0;0
operator=;operator=(const class TR_CheckcastAndProfiledGuardCoalescer &);0;TR;CheckcastAndProfiledGuardCoalescer;1;0
operator=;operator=(class TR_CheckcastAndProfiledGuardCoalescer &&);0;TR;CheckcastAndProfiledGuardCoalescer;1;0
storeObjectInATemporary;storeObjectInATemporary(TR::TreeTop *);1;TR;CheckcastAndProfiledGuardCoalescer;0;0
~TR_CheckcastAndProfiledGuardCoalescer;~TR_CheckcastAndProfiledGuardCoalescer();1;TR;CheckcastAndProfiledGuardCoalescer;1;1
TR_ColdBlockMarker;TR_ColdBlockMarker(class TR_ColdBlockMarker &&);1;TR;ColdBlockMarker;1;0
TR_ColdBlockMarker;TR_ColdBlockMarker(TR::OptimizationManager *);0;TR;ColdBlockMarker;0;0
TR_ColdBlockMarker;TR_ColdBlockMarker(const class TR_ColdBlockMarker &);0;TR;ColdBlockMarker;1;0
TR_ColdBlockOutlining;TR_ColdBlockOutlining(const class TR_ColdBlockOutlining &);1;TR;ColdBlockOutlining;1;0
TR_ColdBlockOutlining;TR_ColdBlockOutlining(class TR_ColdBlockOutlining &&);0;TR;ColdBlockOutlining;1;0
TR_ColdBlockOutlining;TR_ColdBlockOutlining(TR::OptimizationManager *);0;TR;ColdBlockOutlining;0;0
create;create(TR::OptimizationManager *);1;TR;ColdBlockMarker;0;0
hasAnyExistingColdBlocks;hasAnyExistingColdBlocks();1;TR;ColdBlockMarker;0;0
hasNotYetRun;hasNotYetRun(TR::Node *);1;TR;ColdBlockMarker;0;0
identifyColdBlocks;identifyColdBlocks();1;TR;ColdBlockMarker;0;0
initialize;initialize();1;TR;ColdBlockMarker;0;0
isBlockCold;isBlockCold(TR::Block *);1;TR;ColdBlockMarker;0;0
operator=;operator=(class TR_ColdBlockMarker &&);0;TR;ColdBlockMarker;1;0
operator=;operator=(const class TR_ColdBlockMarker &);0;TR;ColdBlockMarker;1;0
operator=;operator=(const class TR_ColdBlockOutlining &);0;TR;ColdBlockOutlining;1;0
operator=;operator=(class TR_ColdBlockOutlining &&);0;TR;ColdBlockOutlining;1;0
reorderColdBlocks;reorderColdBlocks();1;TR;ColdBlockOutlining;0;0
~TR_ColdBlockMarker;~TR_ColdBlockMarker();1;TR;ColdBlockMarker;1;1
~TR_ColdBlockOutlining;~TR_ColdBlockOutlining();1;TR;ColdBlockOutlining;1;1
TR_CompactNullChecks;TR_CompactNullChecks(class TR_CompactNullChecks &&);1;TR;CompactNullChecks;1;0
TR_CompactNullChecks;TR_CompactNullChecks(TR::OptimizationManager *);0;TR;CompactNullChecks;0;0
TR_CompactNullChecks;TR_CompactNullChecks(const class TR_CompactNullChecks &);0;TR;CompactNullChecks;1;0
compactNullChecks;compactNullChecks(TR::Block *,class TR_BitVector *);1;TR;CompactNullChecks;0;0
create;create(TR::OptimizationManager *);1;TR;CompactNullChecks;0;0
operator=;operator=(class TR_CompactNullChecks &&);0;TR;CompactNullChecks;1;0
operator=;operator=(const class TR_CompactNullChecks &);0;TR;CompactNullChecks;1;0
process;process(TR::TreeTop *,TR::TreeTop *);1;TR;CompactNullChecks;0;0
replaceNullCheckIfPossible;replaceNullCheckIfPossible(TR::Node *,TR::Node *,TR::Node *,TR::Node *,class TR_BitVector *,vcount_t,vcount_t,_Bool &);1;TR;CompactNullChecks;0;0
replacePassThroughIfPossible;replacePassThroughIfPossible(TR::Node *,TR::Node *,TR::Node *,TR::Node *,_Bool *,class TR_BitVector *,vcount_t,vcount_t,TR::TreeTop *);1;TR;CompactNullChecks;0;0
~TR_CompactNullChecks;~TR_CompactNullChecks();1;TR;CompactNullChecks;1;1
TR_EliminateRedundantGotos;TR_EliminateRedundantGotos(const class TR_EliminateRedundantGotos &);1;TR;EliminateRedundantGotos;1;0
TR_EliminateRedundantGotos;TR_EliminateRedundantGotos(TR::OptimizationManager *);0;TR;EliminateRedundantGotos;0;0
TR_EliminateRedundantGotos;TR_EliminateRedundantGotos(class TR_EliminateRedundantGotos &&);0;TR;EliminateRedundantGotos;1;0
create;create(TR::OptimizationManager *);1;TR;EliminateRedundantGotos;0;0
operator=;operator=(class TR_EliminateRedundantGotos &&);0;TR;EliminateRedundantGotos;1;0
operator=;operator=(const class TR_EliminateRedundantGotos &);0;TR;EliminateRedundantGotos;1;0
placeAsyncCheckBefore;placeAsyncCheckBefore(TR::TreeTop *);1;TR;EliminateRedundantGotos;0;0
process;process(TR::TreeTop *,TR::TreeTop *);1;TR;EliminateRedundantGotos;0;0
renumberExitEdges;renumberExitEdges(class TR_RegionStructure *,int32_t,int32_t);1;TR;EliminateRedundantGotos;0;0
renumberInAncestors;renumberInAncestors(class TR_Structure *,int32_t);1;TR;EliminateRedundantGotos;0;0
~TR_EliminateRedundantGotos;~TR_EliminateRedundantGotos();1;TR;EliminateRedundantGotos;1;1
TR_ExtendBasicBlocks;TR_ExtendBasicBlocks(class TR_ExtendBasicBlocks &&);1;TR;ExtendBasicBlocks;1;0
TR_ExtendBasicBlocks;TR_ExtendBasicBlocks(TR::OptimizationManager *);0;TR;ExtendBasicBlocks;0;0
TR_ExtendBasicBlocks;TR_ExtendBasicBlocks(const class TR_ExtendBasicBlocks &);0;TR;ExtendBasicBlocks;1;0
create;create(TR::OptimizationManager *);1;TR;ExtendBasicBlocks;0;0
operator=;operator=(const class TR_ExtendBasicBlocks &);0;TR;ExtendBasicBlocks;1;0
operator=;operator=(class TR_ExtendBasicBlocks &&);0;TR;ExtendBasicBlocks;1;0
orderBlocksWithFrequencyInfo;orderBlocksWithFrequencyInfo();1;TR;ExtendBasicBlocks;0;0
orderBlocksWithoutFrequencyInfo;orderBlocksWithoutFrequencyInfo();1;TR;ExtendBasicBlocks;0;0
~TR_ExtendBasicBlocks;~TR_ExtendBasicBlocks();1;TR;ExtendBasicBlocks;1;1
TR_HoistBlocks;TR_HoistBlocks(class TR_HoistBlocks &&);1;TR;HoistBlocks;1;0
TR_HoistBlocks;TR_HoistBlocks(const class TR_HoistBlocks &);0;TR;HoistBlocks;1;0
TR_HoistBlocks;TR_HoistBlocks(TR::OptimizationManager *);0;TR;HoistBlocks;0;0
create;create(TR::OptimizationManager *);1;TR;HoistBlocks;0;0
hasSynergy;hasSynergy(TR::Block *,TR::Node *);1;TR;HoistBlocks;0;0
operator=;operator=(const class TR_HoistBlocks &);0;TR;HoistBlocks;1;0
operator=;operator=(class TR_HoistBlocks &&);0;TR;HoistBlocks;1;0
process;process(TR::TreeTop *,TR::TreeTop *);1;TR;HoistBlocks;0;0
~TR_HoistBlocks;~TR_HoistBlocks();1;TR;HoistBlocks;1;1
TR_InvariantArgumentPreexistence;TR_InvariantArgumentPreexistence(class TR_InvariantArgumentPreexistence &&);1;TR;InvariantArgumentPreexistence;1;0
TR_InvariantArgumentPreexistence;TR_InvariantArgumentPreexistence(const class TR_InvariantArgumentPreexistence &);0;TR;InvariantArgumentPreexistence;1;0
TR_InvariantArgumentPreexistence;TR_InvariantArgumentPreexistence(TR::OptimizationManager *);0;TR;InvariantArgumentPreexistence;0;0
convertCall;convertCall(TR::Node *,TR::TreeTop *);1;TR;InvariantArgumentPreexistence;0;0
create;create(TR::OptimizationManager *);1;TR;InvariantArgumentPreexistence;0;0
getSuitableParmInfo;getSuitableParmInfo(TR::Node *);1;TR;InvariantArgumentPreexistence;0;0
operator=;operator=(class TR_InvariantArgumentPreexistence &&);0;TR;InvariantArgumentPreexistence;1;0
operator=;operator=(const class TR_InvariantArgumentPreexistence &);0;TR;InvariantArgumentPreexistence;1;0
processIndirectCall;processIndirectCall(TR::Node *,TR::TreeTop *,vcount_t);1;TR;InvariantArgumentPreexistence;0;0
processIndirectLoad;processIndirectLoad(TR::Node *,TR::TreeTop *,vcount_t);1;TR;InvariantArgumentPreexistence;0;0
processNode;processNode(TR::Node *,TR::TreeTop *,vcount_t);1;TR;InvariantArgumentPreexistence;0;0
~TR_InvariantArgumentPreexistence;~TR_InvariantArgumentPreexistence();1;TR;InvariantArgumentPreexistence;1;1
TR_LongRegAllocation;TR_LongRegAllocation(class TR_LongRegAllocation &&);1;TR;LongRegAllocation;1;0
TR_LongRegAllocation;TR_LongRegAllocation(const class TR_LongRegAllocation &);0;TR;LongRegAllocation;1;0
TR_LongRegAllocation;TR_LongRegAllocation(TR::OptimizationManager *);0;TR;LongRegAllocation;0;0
TR_Rematerialization;TR_Rematerialization(class TR_Rematerialization &&);1;TR;Rematerialization;1;0
TR_Rematerialization;TR_Rematerialization(const class TR_Rematerialization &);0;TR;Rematerialization;1;0
TR_Rematerialization;TR_Rematerialization(TR::OptimizationManager *,_Bool);0;TR;Rematerialization;0;0
addParentToList;addParentToList(TR::Node *,List<TR::Node> *,TR::Node *,List<List<TR::Node> > *);1;TR;Rematerialization;0;0
calculateLongRegWeight;calculateLongRegWeight(_Bool,_Bool);1;TR;Rematerialization;0;0
create;create(TR::OptimizationManager *);1;TR;Rematerialization;0;0
examineLongRegNode;examineLongRegNode(TR::Node *,vcount_t,_Bool);1;TR;Rematerialization;0;0
examineNode;examineNode(TR::TreeTop *,TR::Node *,TR::Node *,vcount_t,class TR_RematState *,class TR_RematAdjustments &);1;TR;Rematerialization;0;0
findSymsUsedInIndirectAccesses;findSymsUsedInIndirectAccesses(TR::Node *,List<TR::Node> *,List<List<TR::Node> > *);1;TR;Rematerialization;0;0
getLoopNestingLevel;getLoopNestingLevel(int32_t);1;TR;Rematerialization;0;0
getNumCallLiveLongs;getNumCallLiveLongs();1;TR;Rematerialization;0;0
getNumLongAtNesting;getNumLongAtNesting(int8_t);1;TR;Rematerialization;0;0
getNumLongLoopOps;getNumLongLoopOps();1;TR;Rematerialization;0;0
getNumLongOps;getNumLongOps();1;TR;Rematerialization;0;0
getNumLongOutArgs;getNumLongOutArgs();1;TR;Rematerialization;0;0
getNumLongParms;getNumLongParms();1;TR;LongRegAllocation;0;0
getNumLoopOps;getNumLoopOps();1;TR;Rematerialization;0;0
getNumOps;getNumOps();1;TR;Rematerialization;0;0
initLongRegData;initLongRegData();1;TR;Rematerialization;0;0
isRematerializable;isRematerializable(TR::Node *,TR::Node *,_Bool);1;TR;Rematerialization;0;0
isRematerializableLoad;isRematerializableLoad(TR::Node *,TR::Node *);1;TR;Rematerialization;0;0
longRegDecisionMade;longRegDecisionMade();1;TR;Rematerialization;0;0
makeEarlyLongRegDecision;makeEarlyLongRegDecision();1;TR;Rematerialization;0;0
makeLongRegDecision;makeLongRegDecision();1;TR;LongRegAllocation;0;0
operator=;operator=(const class TR_Rematerialization &);0;TR;Rematerialization;1;0
operator=;operator=(class TR_Rematerialization &&);0;TR;Rematerialization;1;0
operator=;operator=(class TR_LongRegAllocation &&);0;TR;LongRegAllocation;1;0
operator=;operator=(const class TR_LongRegAllocation &);0;TR;LongRegAllocation;1;0
printStats;printStats();1;TR;LongRegAllocation;0;0
process;process(TR::TreeTop *,TR::TreeTop *);1;TR;Rematerialization;0;0
rematerializeAddresses;rematerializeAddresses(TR::Node *,TR::TreeTop *,vcount_t);1;TR;Rematerialization;0;0
rematerializeNode;rematerializeNode(TR::TreeTop *,TR::Node *,TR::Node *,vcount_t,List<TR::Node> *,List<TR::Node> *,List<List<TR::Node> > *,List<TR::Node> *,List<List<TR::Node> > *,List<TR::Node> *,List<TR::Node> *,_Bool);1;TR;Rematerialization;0;0
rematerializeSSAddress;rematerializeSSAddress(TR::Node *,int32_t);1;TR;Rematerialization;0;0
removeNodeFromList;removeNodeFromList(TR::Node *,List<TR::Node> *,List<List<TR::Node> > *,_Bool,List<TR::Node> *,List<TR::Node> *,const TR::SparseBitVector &);1;TR;Rematerialization;0;0
removeNodeFromList;removeNodeFromList(TR::Node *,List<TR::Node> *,List<List<TR::Node> > *,_Bool,List<TR::Node> *,List<TR::Node> *);0;TR;Rematerialization;0;0
setLongRegDecision;setLongRegDecision(_Bool);1;TR;Rematerialization;0;0
setOnlyRunLongRegHeuristic;setOnlyRunLongRegHeuristic(_Bool);1;TR;Rematerialization;0;0
shouldOnlyRunLongRegHeuristic;shouldOnlyRunLongRegHeuristic();1;TR;Rematerialization;0;0
~TR_LongRegAllocation;~TR_LongRegAllocation();1;TR;LongRegAllocation;1;1
~TR_Rematerialization;~TR_Rematerialization();1;TR;Rematerialization;1;1
TR_OrderBlocks;TR_OrderBlocks(class TR_OrderBlocks &&);1;TR;OrderBlocks;1;0
TR_OrderBlocks;TR_OrderBlocks(const class TR_OrderBlocks &);0;TR;OrderBlocks;1;0
TR_OrderBlocks;TR_OrderBlocks(TR::OptimizationManager *,_Bool);0;TR;OrderBlocks;0;0
addRemainingSuccessorsToList;addRemainingSuccessorsToList(TR::CFGNode *,TR::CFGNode *);1;TR;OrderBlocks;0;0
addRemainingSuccessorsToListHWProfile;addRemainingSuccessorsToListHWProfile(TR::CFGNode *,TR::CFGNode *);1;TR;OrderBlocks;0;0
addToOrderedBlockList;addToOrderedBlockList(TR::CFGNode *,TR_BlockList &,_Bool);1;TR;OrderBlocks;0;0
analyseForHazards;analyseForHazards(TR::CFGNode *);1;TR;OrderBlocks;0;0
candidateIsBetterSuccessorThanBest;candidateIsBetterSuccessorThanBest(TR::CFGEdge *,TR::CFGEdge *);1;TR;OrderBlocks;0;0
cannotFollowBlock;cannotFollowBlock(TR::Block *,TR::Block *);1;TR;OrderBlocks;0;0
chooseBestFallThroughSuccessor;chooseBestFallThroughSuccessor(TR::CFG *,TR::CFGNode *,int32_t &);1;TR;OrderBlocks;0;0
create;create(TR::OptimizationManager *);1;TR;OrderBlocks;0;0
doBlockExtension;doBlockExtension();1;TR;OrderBlocks;0;0
doPeepHoleBlockCorrections;doPeepHoleBlockCorrections(TR::Block *,char *);1;TR;OrderBlocks;0;0
doPeepHoleOptimizations;doPeepHoleOptimizations(_Bool,_Bool);1;TR;OrderBlocks;0;0
doReordering;doReordering();1;TR;OrderBlocks;0;0
dontExtendBlocks;dontExtendBlocks();1;TR;OrderBlocks;0;0
dontReorderBlocks;dontReorderBlocks();1;TR;OrderBlocks;0;0
endPathAtBlock;endPathAtBlock(TR::CFGNode *,TR::CFGNode *,TR::CFG *);1;TR;OrderBlocks;0;0
extendBlocks;extendBlocks();1;TR;OrderBlocks;0;0
findBestPath;findBestPath(TR::CFGNode *);1;TR;OrderBlocks;0;0
findSuitablePathInList;findSuitablePathInList(List<TR::CFGNode> &,TR::CFGNode *);1;TR;OrderBlocks;0;0
generateNewOrder;generateNewOrder(TR_BlockList &);1;TR;OrderBlocks;0;0
hasValidCandidate;hasValidCandidate(List<TR::CFGNode> &,TR::CFGNode *);1;TR;OrderBlocks;0;0
initialize;initialize();1;TR;OrderBlocks;0;0
insertBlocksToList;insertBlocksToList();1;TR;OrderBlocks;0;0
invalidateStructure;invalidateStructure();1;TR;OrderBlocks;0;0
isCandidateReallyBetter;isCandidateReallyBetter(TR::CFGEdge *,TR::Compilation *);1;TR;OrderBlocks;0;0
lookForPeepHoleOpportunities;lookForPeepHoleOpportunities(char *);1;TR;OrderBlocks;0;0
mustFollowBlock;mustFollowBlock(TR::Block *,TR::Block *);1;TR;OrderBlocks;0;0
needBetterChoice;needBetterChoice(TR::CFG *,TR::CFGNode *,TR::CFGNode *);1;TR;OrderBlocks;0;0
needInvalidateStructure;needInvalidateStructure();1;TR;OrderBlocks;0;0
noPeepHoleOptimizations;noPeepHoleOptimizations();1;TR;OrderBlocks;0;0
operator=;operator=(const class TR_OrderBlocks &);0;TR;OrderBlocks;1;0
operator=;operator=(class TR_OrderBlocks &&);0;TR;OrderBlocks;1;0
peepHoleBranchAroundSingleGoto;peepHoleBranchAroundSingleGoto(TR::CFG *,TR::Block *,char *);1;TR;OrderBlocks;0;0
peepHoleBranchBlock;peepHoleBranchBlock(TR::CFG *,TR::Block *,char *);1;TR;OrderBlocks;0;0
peepHoleBranchToFollowing;peepHoleBranchToFollowing(TR::CFG *,TR::Block *,TR::Block *,char *);1;TR;OrderBlocks;0;0
peepHoleBranchToLoopHeader;peepHoleBranchToLoopHeader(TR::CFG *,TR::Block *,TR::Block *,TR::Block *,char *);1;TR;OrderBlocks;0;0
peepHoleGotoBlock;peepHoleGotoBlock(TR::CFG *,TR::Block *,char *);1;TR;OrderBlocks;0;0
peepHoleGotoToEmpty;peepHoleGotoToEmpty(TR::CFG *,TR::Block *,TR::Node *,TR::Block *,char *);1;TR;OrderBlocks;0;0
peepHoleGotoToFollowing;peepHoleGotoToFollowing(TR::CFG *,TR::Block *,TR::Block *,char *);1;TR;OrderBlocks;0;0
peepHoleGotoToGoto;peepHoleGotoToGoto(TR::CFG *,TR::Block *,TR::Node *,TR::Block *,char *,TR::BitVector &);1;TR;OrderBlocks;0;0
removeEmptyBlock;removeEmptyBlock(TR::CFG *,TR::Block *,char *);1;TR;OrderBlocks;0;0
removeFromOrderedBlockLists;removeFromOrderedBlockLists(TR::CFGNode *);1;TR;OrderBlocks;0;0
removeRedundantBranch;removeRedundantBranch(TR::CFG *,TR::Block *,TR::Node *,TR::Block *);1;TR;OrderBlocks;0;0
reorderBlocks;reorderBlocks();1;TR;OrderBlocks;0;0
~TR_OrderBlocks;~TR_OrderBlocks();1;TR;OrderBlocks;1;1
TR_PeepHoleBasicBlocks;TR_PeepHoleBasicBlocks(class TR_PeepHoleBasicBlocks &&);1;TR;PeepHoleBasicBlocks;1;0
TR_PeepHoleBasicBlocks;TR_PeepHoleBasicBlocks(const class TR_PeepHoleBasicBlocks &);0;TR;PeepHoleBasicBlocks;1;0
TR_PeepHoleBasicBlocks;TR_PeepHoleBasicBlocks(TR::OptimizationManager *);0;TR;PeepHoleBasicBlocks;0;0
create;create(TR::OptimizationManager *);1;TR;PeepHoleBasicBlocks;0;0
operator=;operator=(class TR_PeepHoleBasicBlocks &&);0;TR;PeepHoleBasicBlocks;1;0
operator=;operator=(const class TR_PeepHoleBasicBlocks &);0;TR;PeepHoleBasicBlocks;1;0
~TR_PeepHoleBasicBlocks;~TR_PeepHoleBasicBlocks();1;TR;PeepHoleBasicBlocks;1;1
TR_ProfiledNodeVersioning;TR_ProfiledNodeVersioning(class TR_ProfiledNodeVersioning &&);1;TR;ProfiledNodeVersioning;1;0
TR_ProfiledNodeVersioning;TR_ProfiledNodeVersioning(TR::OptimizationManager *);0;TR;ProfiledNodeVersioning;0;0
TR_ProfiledNodeVersioning;TR_ProfiledNodeVersioning(const class TR_ProfiledNodeVersioning &);0;TR;ProfiledNodeVersioning;1;0
create;create(TR::OptimizationManager *);1;TR;ProfiledNodeVersioning;0;0
operator=;operator=(const class TR_ProfiledNodeVersioning &);0;TR;ProfiledNodeVersioning;1;0
operator=;operator=(class TR_ProfiledNodeVersioning &&);0;TR;ProfiledNodeVersioning;1;0
temporarilySetProfilingBcInfoOnNewArrayLengthChild;temporarilySetProfilingBcInfoOnNewArrayLengthChild(TR::Node *,TR::Compilation *);1;TR;ProfiledNodeVersioning;0;0
~TR_ProfiledNodeVersioning;~TR_ProfiledNodeVersioning();1;TR;ProfiledNodeVersioning;1;1
TR_SimplifyAnds;TR_SimplifyAnds(class TR_SimplifyAnds &&);1;TR;SimplifyAnds;1;0
TR_SimplifyAnds;TR_SimplifyAnds(TR::OptimizationManager *);0;TR;SimplifyAnds;0;0
TR_SimplifyAnds;TR_SimplifyAnds(const class TR_SimplifyAnds &);0;TR;SimplifyAnds;1;0
create;create(TR::OptimizationManager *);1;TR;SimplifyAnds;0;0
operator=;operator=(class TR_SimplifyAnds &&);0;TR;SimplifyAnds;1;0
operator=;operator=(const class TR_SimplifyAnds &);0;TR;SimplifyAnds;1;0
process;process(TR::TreeTop *,TR::TreeTop *);1;TR;SimplifyAnds;0;0
~TR_SimplifyAnds;~TR_SimplifyAnds();1;TR;SimplifyAnds;1;1
TR_TrivialBlockExtension;TR_TrivialBlockExtension(class TR_TrivialBlockExtension &&);1;TR;TrivialBlockExtension;1;0
TR_TrivialBlockExtension;TR_TrivialBlockExtension(const class TR_TrivialBlockExtension &);0;TR;TrivialBlockExtension;1;0
TR_TrivialBlockExtension;TR_TrivialBlockExtension(TR::OptimizationManager *);0;TR;TrivialBlockExtension;0;0
create;create(TR::OptimizationManager *);1;TR;TrivialBlockExtension;0;0
operator=;operator=(const class TR_TrivialBlockExtension &);0;TR;TrivialBlockExtension;1;0
operator=;operator=(class TR_TrivialBlockExtension &&);0;TR;TrivialBlockExtension;1;0
~TR_TrivialBlockExtension;~TR_TrivialBlockExtension();1;TR;TrivialBlockExtension;1;1
TR_TrivialDeadTreeRemoval;TR_TrivialDeadTreeRemoval(class TR_TrivialDeadTreeRemoval &&);1;TR;TrivialDeadTreeRemoval;1;0
TR_TrivialDeadTreeRemoval;TR_TrivialDeadTreeRemoval(const class TR_TrivialDeadTreeRemoval &);0;TR;TrivialDeadTreeRemoval;1;0
TR_TrivialDeadTreeRemoval;TR_TrivialDeadTreeRemoval(TR::OptimizationManager *);0;TR;TrivialDeadTreeRemoval;0;0
create;create(TR::OptimizationManager *);1;TR;TrivialDeadTreeRemoval;0;0
examineNode;examineNode(TR::Node *,vcount_t);1;TR;TrivialDeadTreeRemoval;0;0
operator=;operator=(class TR_TrivialDeadTreeRemoval &&);0;TR;TrivialDeadTreeRemoval;1;0
operator=;operator=(const class TR_TrivialDeadTreeRemoval &);0;TR;TrivialDeadTreeRemoval;1;0
postProcessTreetop;postProcessTreetop(TR::TreeTop *,List<TR::TreeTop> &,char *,TR::Compilation *);1;TR;TrivialDeadTreeRemoval;0;0
preProcessTreetop;preProcessTreetop(TR::TreeTop *,List<TR::TreeTop> &,char *,TR::Compilation *);1;TR;TrivialDeadTreeRemoval;0;0
processCommonedChild;processCommonedChild(TR::Node *,TR::TreeTop *,List<TR::TreeTop> &,char *,TR::Compilation *);1;TR;TrivialDeadTreeRemoval;0;0
transformBlock;transformBlock(TR::TreeTop *,TR::TreeTop *);1;TR;TrivialDeadTreeRemoval;0;0
~TR_TrivialDeadTreeRemoval;~TR_TrivialDeadTreeRemoval();1;TR;TrivialDeadTreeRemoval;1;1
Simplifier;Simplifier(const class OMR::Simplifier &);1;OMR;Simplifier;1;0
Simplifier;Simplifier(TR::OptimizationManager *);0;OMR;Simplifier;0;0
Simplifier;Simplifier(class OMR::Simplifier &&);0;OMR;Simplifier;1;0
anchorOrderDependentNodesInSubtree;anchorOrderDependentNodesInSubtree(TR::Node *,TR::Node *,TR::TreeTop *);1;OMR;Simplifier;0;0
cleanupFlags;cleanupFlags(TR::Node *);1;OMR;Simplifier;0;0
conditionalToUnconditional;conditionalToUnconditional(TR::Node *&,TR::Block *,int);1;OMR;Simplifier;0;0
containingStructure;containingStructure();1;OMR;Simplifier;0;0
create;create(TR::OptimizationManager *);1;OMR;Simplifier;0;0
getCC;getCC(TR::Node *);1;OMR;Simplifier;0;0
isBoundDefinitelyGELength;isBoundDefinitelyGELength(TR::Node *,TR::Node *);1;OMR;Simplifier;0;1
isLegalToFold;isLegalToFold(TR::Node *,TR::Node *);1;OMR;Simplifier;0;1
isLegalToUnaryCancel;isLegalToUnaryCancel(TR::Node *,TR::Node *,TR::ILOpCodes);1;OMR;Simplifier;0;1
operator=;operator=(const class OMR::Simplifier &);0;OMR;Simplifier;1;0
operator=;operator=(class OMR::Simplifier &&);0;OMR;Simplifier;1;0
operator=;operator=(class TR::Simplifier &&);0;TR;Simplifier;1;0
operator=;operator=(const class TR::Simplifier &);0;TR;Simplifier;1;0
reassociate;reassociate();1;OMR;Simplifier;0;0
setCC;setCC(TR::Node *,TR_ConditionCodeNumber);1;OMR;Simplifier;0;0
setNodePrecisionIfNeeded;setNodePrecisionIfNeeded(TR::Node *,TR::Node *,TR::NodeChecklist &);1;OMR;Simplifier;0;1
simplify;simplify(TR::Node *,TR::Block *);1;OMR;Simplifier;0;0
simplify;simplify(TR::TreeTop *,TR::Block *);0;OMR;Simplifier;0;0
simplify;simplify(TR::Block *);0;OMR;Simplifier;0;0
simplifyExtendedBlock;simplifyExtendedBlock(TR::TreeTop *);1;OMR;Simplifier;0;0
simplifyIndirectLoadPatterns;simplifyIndirectLoadPatterns(TR::Node *);1;OMR;Simplifier;0;1
simplifyaCallMethods;simplifyaCallMethods(TR::Node *,TR::Block *);1;OMR;Simplifier;0;1
simplifyd2fPatterns;simplifyd2fPatterns(TR::Node *);1;OMR;Simplifier;0;1
simplifyi2sPatterns;simplifyi2sPatterns(TR::Node *);1;OMR;Simplifier;0;1
simplifyiCallMethods;simplifyiCallMethods(TR::Node *,TR::Block *);1;OMR;Simplifier;0;1
simplifyiOrPatterns;simplifyiOrPatterns(TR::Node *);1;OMR;Simplifier;0;1
simplifylCallMethods;simplifylCallMethods(TR::Node *,TR::Block *);1;OMR;Simplifier;0;1
unaryCancelOutWithChild;unaryCancelOutWithChild(TR::Node *,TR::Node *,TR::TreeTop *,TR::ILOpCodes,_Bool);1;OMR;Simplifier;0;1
~Simplifier;~Simplifier();1;OMR;Simplifier;1;1
List<T>;List<T>(class TR_Memory *);1;;List;0;0
List<T>;List<T>(TR::Region &);0;;List;0;0
List<T>;List<T>();0;;List;0;0
ListBase<T>;ListBase<T>();1;;ListBase;0;0
TR_OrderedBlockList;TR_OrderedBlockList(class TR_Memory *);1;TR;OrderedBlockList;0;0
add;add(List<T> &);1;;List;0;0
add;add(T *,List<T> &);0;;List;0;0
add;add(T *);0;;List;0;0
addAfter;addAfter(T *,ListElement<T> *);1;;List;0;0
addInTraversalOrder;addInTraversalOrder(TR::Block *,_Bool,TR::CFGEdge *);1;TR;OrderedBlockList;0;0
deleteAll;deleteAll();1;;List;0;0
find;find(T *);1;;ListBase;0;0
freeElements;freeElements(List<T> &);1;;List;0;0
getHeadData;getHeadData();1;;List;0;0
getLastElement;getLastElement();1;;ListBase;0;0
getListHead;getListHead();1;;ListBase;0;0
getRegion;getRegion();1;;ListBase;0;0
getSize;getSize();1;;ListBase;0;0
init;init();1;;List;0;0
isDoubleton;isDoubleton();1;;ListBase;0;0
isEmpty;isEmpty();1;;ListBase;0;0
isMultipleEntry;isMultipleEntry();1;;ListBase;0;0
isSingleton;isSingleton();1;;ListBase;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;;ListBase;0;0
jitPersistentFree;jitPersistentFree(void *);1;;ListBase;0;0
operator delete;operator delete(void *,TR::Region &);1;;ListBase;0;0
operator delete;operator delete(void *,size_t);0;;ListBase;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;;ListBase;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;;ListBase;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;ListBase;0;0
operator delete[];operator delete[](void *,TR::Region &);1;;ListBase;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;;ListBase;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;;ListBase;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;ListBase;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;;ListBase;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;;ListBase;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;;ListBase;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;;ListBase;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;ListBase;0;0
operator new;operator new(size_t,TR::Region &);0;;ListBase;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;;ListBase;0;0
operator new[];operator new[](size_t,TR::Region &);1;;ListBase;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;;ListBase;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;;ListBase;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;;ListBase;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;;ListBase;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;;ListBase;0;0
operator==;operator==(const ListBase<T> &);1;;ListBase;0;0
popHead;popHead();1;;List;0;0
remove;remove(T *);1;;List;0;0
removeBlockFromList;removeBlockFromList(TR::Block *,TR::CFGEdge *);1;TR;OrderedBlockList;0;0
removeNext;removeNext(ListElement<T> *);1;;List;0;0
setListHead;setListHead(ListElement<T> *);1;;List;0;0
setRegion;setRegion(TR::Region &);1;;ListBase;0;0
Optimization;Optimization(TR::OptimizationManager *);1;OMR;Optimization;0;0
Optimization;Optimization(const class OMR::Optimization &);0;OMR;Optimization;1;0
killAvailableExpressionsUsingAliases;killAvailableExpressionsUsingAliases(class TR_BitVector &);1;OMR;LocalCSE;0;0
killAvailableExpressionsUsingAliases;killAvailableExpressionsUsingAliases(struct TR_NodeKillAliasSetInterface &);0;OMR;LocalCSE;0;0
prepareToReplaceNode;prepareToReplaceNode(TR::Node *);1;OMR;Optimization;0;0
prepareToReplaceNode;prepareToReplaceNode(TR::Node *,TR::ILOpCodes);0;OMR;Optimization;0;0
RecognizedCallTransformer;RecognizedCallTransformer(class OMR::RecognizedCallTransformer &&);1;OMR;RecognizedCallTransformer;1;0
RecognizedCallTransformer;RecognizedCallTransformer(TR::OptimizationManager *);0;OMR;RecognizedCallTransformer;0;0
RecognizedCallTransformer;RecognizedCallTransformer(const class OMR::RecognizedCallTransformer &);0;OMR;RecognizedCallTransformer;1;0
create;create(TR::OptimizationManager *);1;OMR;RecognizedCallTransformer;0;0
isInlineable;isInlineable(TR::TreeTop *);1;OMR;RecognizedCallTransformer;0;1
operator=;operator=(const class OMR::RecognizedCallTransformer &);0;OMR;RecognizedCallTransformer;1;0
operator=;operator=(class OMR::RecognizedCallTransformer &&);0;OMR;RecognizedCallTransformer;1;0
operator=;operator=(class TR::RecognizedCallTransformer &&);0;TR;RecognizedCallTransformer;1;0
operator=;operator=(const class TR::RecognizedCallTransformer &);0;TR;RecognizedCallTransformer;1;0
transform;transform(TR::TreeTop *);1;OMR;RecognizedCallTransformer;0;1
~RecognizedCallTransformer;~RecognizedCallTransformer();1;OMR;RecognizedCallTransformer;1;1
simplify;simplify(TR::TreeTop *,TR::Block *);1;OMR;Simplifier;0;0
simplify;simplify(TR::Node *,TR::Block *);0;OMR;Simplifier;0;0
TR_HedgeNode<T>;TR_HedgeNode<T>(int32_t);1;TR;HedgeNode;0;0
ValueConstraint;ValueConstraint(int32_t);1;OMR::ValuePropagation;ValueConstraint;0;0
getKey;getKey();1;TR;HedgeNode;0;0
getParent;getParent();1;TR;HedgeNode;0;0
getValueNumber;getValueNumber();1;OMR::ValuePropagation;ValueConstraint;0;0
height;height();1;TR;HedgeNode;0;0
initialize;initialize(int32_t);1;TR;HedgeNode;0;0
initialize;initialize(int32_t,struct OMR::ValuePropagation::Relationship *,struct OMR::ValuePropagation::StoreRelationship *);0;OMR::ValuePropagation;ValueConstraint;0;0
isLeftSibling;isLeftSibling();1;TR;HedgeNode;0;0
isRightSibling;isRightSibling();1;TR;HedgeNode;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;HedgeNode;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;HedgeNode;0;0
left;left();1;TR;HedgeNode;0;0
leftReference;leftReference();1;TR;HedgeNode;0;0
operator delete;operator delete(void *,size_t);1;TR;HedgeNode;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;HedgeNode;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeNode;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeNode;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;HedgeNode;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;HedgeNode;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;HedgeNode;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeNode;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;HedgeNode;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;HedgeNode;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeNode;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;HedgeNode;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;HedgeNode;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;HedgeNode;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;HedgeNode;0;0
operator new;operator new(size_t,TR::Region &);0;TR;HedgeNode;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;HedgeNode;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;HedgeNode;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;HedgeNode;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeNode;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeNode;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;HedgeNode;0;0
print;print(OMR::ValuePropagation *,int32_t);1;OMR::ValuePropagation;ValueConstraint;0;0
printTree;printTree(class TR_FrontEnd *,TR::FILE *,int32_t,char *,_Bool,_Bool);1;TR;HedgeNode;0;0
right;right();1;TR;HedgeNode;0;0
rightReference;rightReference();1;TR;HedgeNode;0;0
setLeft;setLeft(T *);1;TR;HedgeNode;0;0
setLeftSibling;setLeftSibling(_Bool);1;TR;HedgeNode;0;0
setParent;setParent(T *);1;TR;HedgeNode;0;0
setRight;setRight(T *);1;TR;HedgeNode;0;0
setRightSibling;setRightSibling(_Bool);1;TR;HedgeNode;0;0
verify;verify(T *);1;TR;HedgeNode;0;0
ValueConstraintHandler;ValueConstraintHandler(const class OMR::ValuePropagation::ValueConstraintHandler &);1;OMR::ValuePropagation;ValueConstraintHandler;1;0
ValueConstraintHandler;ValueConstraintHandler(class OMR::ValuePropagation::ValueConstraintHandler &&);0;OMR::ValuePropagation;ValueConstraintHandler;1;0
allocate;allocate(int32_t);1;TR;HedgeTreeHandler;0;1
comp;comp();1;TR;HedgeTreeHandler;0;0
copy;copy(T *);1;TR;HedgeTreeHandler;0;1
copy;copy(class OMR::ValuePropagation::ValueConstraint *);0;OMR::ValuePropagation;ValueConstraintHandler;0;1
copyAll;copyAll(TR_HedgeTree<T> &);1;TR;HedgeTreeHandler;0;0
copySubtree;copySubtree(T *);1;TR;HedgeTreeHandler;0;0
empty;empty(TR_HedgeTree<T> &);1;TR;HedgeTreeHandler;0;0
emptySubtree;emptySubtree(T *&);1;TR;HedgeTreeHandler;0;0
find;find(int32_t,TR_HedgeTree<T> &);1;TR;HedgeTreeHandler;0;0
findOrCreate;findOrCreate(int32_t,T *&,int32_t &);1;TR;HedgeTreeHandler;0;0
findOrCreate;findOrCreate(int32_t,TR_HedgeTree<T> &);0;TR;HedgeTreeHandler;0;0
free;free(T *);1;TR;HedgeTreeHandler;0;1
free;free(class OMR::ValuePropagation::ValueConstraint *);0;OMR::ValuePropagation;ValueConstraintHandler;0;1
getRoot;getRoot(TR_HedgeTree<T> &);1;TR;HedgeTreeHandler;0;0
insert;insert(T *,TR_HedgeTree<T> &);1;TR;HedgeTreeHandler;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;HedgeTreeHandler;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;HedgeTreeHandler;0;0
operator delete;operator delete(void *,size_t);1;TR;HedgeTreeHandler;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;HedgeTreeHandler;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;HedgeTreeHandler;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeTreeHandler;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeTreeHandler;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;HedgeTreeHandler;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeTreeHandler;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeTreeHandler;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;HedgeTreeHandler;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;TR;HedgeTreeHandler;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeTreeHandler;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeTreeHandler;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;HedgeTreeHandler;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;HedgeTreeHandler;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;HedgeTreeHandler;0;0
operator new;operator new(size_t,TR::Region &);0;TR;HedgeTreeHandler;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;TR;HedgeTreeHandler;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;HedgeTreeHandler;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;HedgeTreeHandler;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeTreeHandler;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeTreeHandler;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;HedgeTreeHandler;0;0
operator=;operator=(class OMR::ValuePropagation::ValueConstraintHandler &&);1;OMR::ValuePropagation;ValueConstraintHandler;1;0
operator=;operator=(const class OMR::ValuePropagation::ValueConstraintHandler &);0;OMR::ValuePropagation;ValueConstraintHandler;1;0
remove;remove(int32_t,TR_HedgeTree<T> &);1;TR;HedgeTreeHandler;0;0
remove;remove(int32_t,T *&,int32_t &);0;TR;HedgeTreeHandler;0;0
setRoot;setRoot(TR_HedgeTree<T> &,T *);1;TR;HedgeTreeHandler;0;0
setVP;setVP(OMR::ValuePropagation *);1;OMR::ValuePropagation;ValueConstraintHandler;0;0
swapRightmost;swapRightmost(T *&,T *&);1;TR;HedgeTreeHandler;0;0
~ValueConstraintHandler;~ValueConstraintHandler();1;OMR::ValuePropagation;ValueConstraintHandler;1;0
ArraycopyTransformation;ArraycopyTransformation(class TR::ArraycopyTransformation &&);1;TR;ArraycopyTransformation;1;0
ArraycopyTransformation;ArraycopyTransformation(TR::OptimizationManager *);0;TR;ArraycopyTransformation;0;0
ArraycopyTransformation;ArraycopyTransformation(const class TR::ArraycopyTransformation &);0;TR;ArraycopyTransformation;1;0
arraycopyHighFrequencySpecificLength;arraycopyHighFrequencySpecificLength(TR::Node *);1;TR;ArraycopyTransformation;0;0
create;create(TR::OptimizationManager *);1;TR;ArraycopyTransformation;0;0
createArrayNode;createArrayNode(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool);1;TR;ArraycopyTransformation;0;0
createArrayNode;createArrayNode(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::Node *,TR::SymbolReference *,TR::SymbolReference *,_Bool);0;TR;ArraycopyTransformation;0;0
createMultipleArrayNodes;createMultipleArrayNodes(TR::TreeTop *,TR::Node *);1;TR;ArraycopyTransformation;0;0
createPointerCompareNode;createPointerCompareNode(TR::Node *,TR::SymbolReference *,TR::SymbolReference *);1;TR;ArraycopyTransformation;0;0
createRangeCompareNode;createRangeCompareNode(TR::Node *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);1;TR;ArraycopyTransformation;0;0
hasChangedTrees;hasChangedTrees();1;TR;ArraycopyTransformation;0;0
operator=;operator=(const class TR::ArraycopyTransformation &);0;TR;ArraycopyTransformation;1;0
operator=;operator=(class TR::ArraycopyTransformation &&);0;TR;ArraycopyTransformation;1;0
setChangedTrees;setChangedTrees(_Bool);1;TR;ArraycopyTransformation;0;0
specializeForLength;specializeForLength(TR::TreeTop *,TR::Node *,uintptrj_t,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);1;TR;ArraycopyTransformation;0;0
tryToSpecializeForLength;tryToSpecializeForLength(TR::TreeTop *,TR::Node *);1;TR;ArraycopyTransformation;0;0
~ArraycopyTransformation;~ArraycopyTransformation();1;TR;ArraycopyTransformation;1;1
DeadTreesElimination;DeadTreesElimination(TR::OptimizationManager *);1;TR;DeadTreesElimination;0;0
GlobalValuePropagation;GlobalValuePropagation(const class TR::GlobalValuePropagation &);1;TR;GlobalValuePropagation;1;0
GlobalValuePropagation;GlobalValuePropagation(TR::OptimizationManager *);0;TR;GlobalValuePropagation;0;0
GlobalValuePropagation;GlobalValuePropagation(class TR::GlobalValuePropagation &&);0;TR;GlobalValuePropagation;1;0
ValuePropagation;ValuePropagation(TR::OptimizationManager *);1;OMR;ValuePropagation;0;0
ValuePropagation;ValuePropagation(const class OMR::ValuePropagation &);0;OMR;ValuePropagation;1;0
ValuePropagation;ValuePropagation(class OMR::ValuePropagation &&);0;OMR;ValuePropagation;1;0
ValuePropagation;ValuePropagation(class TR::ValuePropagation &&);0;TR;ValuePropagation;1;0
ValuePropagation;ValuePropagation(const class TR::ValuePropagation &);0;TR;ValuePropagation;1;0
addBlockConstraint;addBlockConstraint(TR::Node *,TR::VPConstraint *,TR::Node *,_Bool);1;OMR;ValuePropagation;0;0
addBlockOrGlobalConstraint;addBlockOrGlobalConstraint(TR::Node *,TR::VPConstraint *,_Bool,TR::Node *);1;OMR;ValuePropagation;0;0
addConstraint;addConstraint(TR::VPConstraint *,int32_t);1;OMR;ValuePropagation;0;0
addConstraintToList;addConstraintToList(TR::Node *,int32_t,int32_t,TR::VPConstraint *,ValueConstraints *,_Bool);1;OMR;ValuePropagation;0;0
addEdgeConstraint;addEdgeConstraint(TR::Node *,TR::VPConstraint *,struct OMR::ValuePropagation::EdgeConstraints *,TR::Node *);1;OMR;ValuePropagation;0;0
addGlobalConstraint;addGlobalConstraint(TR::Node *,TR::VPConstraint *,TR::Node *);1;OMR;ValuePropagation;0;0
addGlobalConstraint;addGlobalConstraint(TR::Node *,int32_t,TR::VPConstraint *,int32_t);0;OMR;ValuePropagation;0;0
addLoopDef;addLoopDef(TR::Node *);1;OMR;ValuePropagation;0;0
addToSortedList;addToSortedList(TR_LinkHead<struct OMR::ValuePropagation::ArrayLengthToVersion> *,struct OMR::ValuePropagation::ArrayLengthToVersion *);1;OMR;ValuePropagation;0;0
addUnsafeArrayAccessNode;addUnsafeArrayAccessNode(ncount_t);1;OMR;ValuePropagation;0;0
applyGlobalConstraints;applyGlobalConstraints(TR::Node *,int32_t,TR::VPConstraint *,int32_t);1;OMR;ValuePropagation;0;0
buildBoundCheckComparisonNodes;buildBoundCheckComparisonNodes(struct OMR::ValuePropagation::BlockVersionInfo *,List<TR::Node> *);1;OMR;ValuePropagation;0;0
buildInputConstraints;buildInputConstraints(TR::CFGNode *);1;TR;GlobalValuePropagation;0;0
buildSameLeafTest;buildSameLeafTest(TR::Node *,TR::Node *,TR::Node *);1;OMR;ValuePropagation;0;0
canRunTransformToArrayCopy;canRunTransformToArrayCopy();1;OMR;ValuePropagation;0;0
canTransformArrayCopyCallForSmall;canTransformArrayCopyCallForSmall(TR::Node *,int32_t &,int32_t &,int32_t &,TR::DataType &);1;OMR;ValuePropagation;0;0
chTableValidityChecked;chTableValidityChecked();1;OMR;ValuePropagation;0;0
chTableWasValid;chTableWasValid();1;OMR;ValuePropagation;0;0
checkAllUnsafeReferences;checkAllUnsafeReferences(TR::Node *,vcount_t);1;OMR;ValuePropagation;0;0
checkBackEdgeCoverage;checkBackEdgeCoverage();1;OMR;ValuePropagation;0;0
checkForInductionVariableIncrement;checkForInductionVariableIncrement(TR::Node *);1;OMR;ValuePropagation;0;0
checkForInductionVariableLoad;checkForInductionVariableLoad(TR::Node *);1;OMR;ValuePropagation;0;0
checkLoopTestBlock;checkLoopTestBlock(TR::Symbol *);1;OMR;ValuePropagation;0;0
checkTypeRelationship;checkTypeRelationship(TR::VPConstraint *,TR::VPConstraint *,int32_t &,_Bool,_Bool);1;OMR;ValuePropagation;0;0
checksWereRemoved;checksWereRemoved();1;OMR;ValuePropagation;0;0
collectBackEdgeConstraints;collectBackEdgeConstraints();1;OMR;ValuePropagation;0;0
collectDefSymRefs;collectDefSymRefs(TR::Node *,TR::Node *);1;OMR;ValuePropagation;0;0
collectInductionVariableEntryConstraints;collectInductionVariableEntryConstraints();1;OMR;ValuePropagation;0;0
computeDivRangeWhenDivisorCanBeZero;computeDivRangeWhenDivisorCanBeZero(TR::Node *);1;OMR;ValuePropagation;0;0
constrainRecognizedMethod;constrainRecognizedMethod(TR::Node *);1;OMR;ValuePropagation;0;1
copyRelationships;copyRelationships(struct OMR::ValuePropagation::Relationship *);1;OMR;ValuePropagation;0;0
copyStoreRelationships;copyStoreRelationships(struct OMR::ValuePropagation::StoreRelationship *);1;OMR;ValuePropagation;0;0
copyValueConstraints;copyValueConstraints(ValueConstraints &);1;OMR;ValuePropagation;0;0
create;create(TR::OptimizationManager *);1;TR;GlobalValuePropagation;0;0
createAndInsertStoresForArrayCopySpineCheck;createAndInsertStoresForArrayCopySpineCheck(struct OMR::ValuePropagation::TR_ArrayCopySpineCheck *);1;OMR;ValuePropagation;0;0
createArrayCopyCallForSpineCheck;createArrayCopyCallForSpineCheck(struct OMR::ValuePropagation::TR_ArrayCopySpineCheck *);1;OMR;ValuePropagation;0;0
createArrayCopyVCallNodeAfterStores;createArrayCopyVCallNodeAfterStores(TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);1;OMR;ValuePropagation;0;0
createArrayStoreCompareNode;createArrayStoreCompareNode(TR::Node *,TR::Node *);1;OMR;ValuePropagation;0;0
createConverterCallNodeAfterStores;createConverterCallNodeAfterStores(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);1;OMR;ValuePropagation;0;0
createEdgeConstraints;createEdgeConstraints(TR::CFGEdge *,_Bool);1;OMR;ValuePropagation;0;0
createExceptionEdgeConstraints;createExceptionEdgeConstraints(uint32_t,class OMR::ValuePropagation::ValueConstraint *,TR::Node *);1;OMR;ValuePropagation;0;0
createGlobalConstraint;createGlobalConstraint(int32_t);1;OMR;ValuePropagation;0;0
createNewBlockInfoForVersioning;createNewBlockInfoForVersioning(TR::Block *);1;OMR;ValuePropagation;0;0
createNewBucketForArrayIndex;createNewBucketForArrayIndex(struct OMR::ValuePropagation::ArrayLengthToVersion *,TR_LinkHead<struct OMR::ValuePropagation::ArrayLengthToVersion> *,int32_t,TR::Node *,TR::Node *,class TR_OpaqueClassBlock *);1;OMR;ValuePropagation;0;0
createPrimitiveArrayNodeWithoutFlags;createPrimitiveArrayNodeWithoutFlags(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool,_Bool);1;OMR;ValuePropagation;0;0
createPrimitiveOrReferenceCompareNode;createPrimitiveOrReferenceCompareNode(TR::Node *);1;OMR;ValuePropagation;0;0
createReferenceArrayNodeWithoutFlags;createReferenceArrayNodeWithoutFlags(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool);1;OMR;ValuePropagation;0;0
createRelationship;createRelationship(int32_t,TR::VPConstraint *);1;OMR;ValuePropagation;0;0
createSameLeafTestAfterStores;createSameLeafTestAfterStores(TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *);1;OMR;ValuePropagation;0;0
createSpineCheckNode;createSpineCheckNode(TR::Node *,TR::SymbolReference *);1;OMR;ValuePropagation;0;0
createStoreConstraints;createStoreConstraints(TR::Node *);1;OMR;ValuePropagation;0;0
createStoreRelationship;createStoreRelationship(TR::Symbol *,struct OMR::ValuePropagation::Relationship *);1;OMR;ValuePropagation;0;0
createValueConstraint;createValueConstraint(int32_t,struct OMR::ValuePropagation::Relationship *,struct OMR::ValuePropagation::StoreRelationship *);1;OMR;ValuePropagation;0;0
determineConstraints;determineConstraints();1;TR;GlobalValuePropagation;0;0
doDelayedTransformations;doDelayedTransformations();1;OMR;ValuePropagation;0;1
enablePreexistence;enablePreexistence();1;OMR;ValuePropagation;0;0
enableSimplifier;enableSimplifier();1;OMR;ValuePropagation;0;0
findConstraint;findConstraint(int32_t,int32_t);1;OMR;ValuePropagation;0;0
findConstraintInList;findConstraintInList(TR_LinkHead<struct OMR::ValuePropagation::Relationship> &,int32_t);1;OMR;ValuePropagation;0;0
findEdgeConstraint;findEdgeConstraint(int32_t,struct OMR::ValuePropagation::EdgeConstraints *,int32_t);1;OMR;ValuePropagation;0;0
findGlobalConstraint;findGlobalConstraint(int32_t,int32_t);1;OMR;ValuePropagation;0;0
findGlobalConstraint;findGlobalConstraint(int32_t);0;OMR;ValuePropagation;0;0
findLoopDef;findLoopDef(TR::Node *);1;OMR;ValuePropagation;0;0
findOutEdge;findOutEdge(TR::CFGEdgeList &,TR::CFGNode *);1;OMR;ValuePropagation;0;0
findStoreConstraint;findStoreConstraint(int32_t,TR::Symbol *);1;OMR;ValuePropagation;0;0
findStoreEdgeConstraint;findStoreEdgeConstraint(int32_t,TR::Symbol *,struct OMR::ValuePropagation::EdgeConstraints *);1;OMR;ValuePropagation;0;0
findStoreRelationship;findStoreRelationship(TR_LinkHead<struct OMR::ValuePropagation::StoreRelationship> &,TR::Symbol *);1;OMR;ValuePropagation;0;0
findStoreValueConstraint;findStoreValueConstraint(int32_t,TR::Symbol *,ValueConstraints &);1;OMR;ValuePropagation;0;0
findStoresInBlock;findStoresInBlock(TR::Block *,ValueConstraints &);1;OMR;ValuePropagation;0;0
findThrowInBlock;findThrowInBlock(TR::Block *,TR::TreeTop *&);1;OMR;ValuePropagation;0;0
findValueConstraint;findValueConstraint(int32_t,ValueConstraints &,int32_t);1;OMR;ValuePropagation;0;0
findVarOfSimpleForm;findVarOfSimpleForm(TR::Node *);1;OMR;ValuePropagation;0;0
findVarOfSimpleFormOld;findVarOfSimpleFormOld(TR::Node *);1;OMR;ValuePropagation;0;0
freeRelationship;freeRelationship(struct OMR::ValuePropagation::Relationship *);1;OMR;ValuePropagation;0;0
freeRelationships;freeRelationships(TR_LinkHead<struct OMR::ValuePropagation::Relationship> &);1;OMR;ValuePropagation;0;0
freeStoreRelationship;freeStoreRelationship(struct OMR::ValuePropagation::StoreRelationship *);1;OMR;ValuePropagation;0;0
freeStoreRelationships;freeStoreRelationships(TR_LinkHead<struct OMR::ValuePropagation::StoreRelationship> &);1;OMR;ValuePropagation;0;0
freeValueConstraint;freeValueConstraint(class OMR::ValuePropagation::ValueConstraint *);1;OMR;ValuePropagation;0;0
freeValueConstraints;freeValueConstraints(ValueConstraints &);1;OMR;ValuePropagation;0;0
generalizeStores;generalizeStores(ValueConstraints &,ValueConstraints *);1;OMR;ValuePropagation;0;0
generateRTArrayNodeWithoutFlags;generateRTArrayNodeWithoutFlags(struct OMR::ValuePropagation::TR_RealTimeArrayCopy *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool);1;OMR;ValuePropagation;0;0
getArraylengthNodes;getArraylengthNodes();1;OMR;ValuePropagation;0;0
getBestRun;getBestRun();1;OMR;ValuePropagation;0;0
getConstraint;getConstraint(TR::Node *,_Bool &,TR::Node *);1;OMR;ValuePropagation;0;0
getCurrentParent;getCurrentParent();1;OMR;ValuePropagation;0;1
getEdgeConstraints;getEdgeConstraints(TR::CFGEdge *);1;OMR;ValuePropagation;0;0
getImproperRegionStores;getImproperRegionStores(class TR_StructureSubGraphNode *,ValueConstraints &);1;TR;GlobalValuePropagation;0;0
getParmValues;getParmValues();1;OMR;ValuePropagation;0;1
getPrimitiveArrayType;getPrimitiveArrayType(char);1;OMR;ValuePropagation;0;0
getStoreConstraint;getStoreConstraint(TR::Node *,TR::Node *);1;OMR;ValuePropagation;0;0
getStringCacheRef;getStringCacheRef();1;OMR;ValuePropagation;0;0
getValueNumber;getValueNumber(TR::Node *);1;OMR;ValuePropagation;0;0
hasBeenStored;hasBeenStored(int32_t,TR::Symbol *,ValueConstraints &);1;OMR;ValuePropagation;0;0
hashGlobalConstraint;hashGlobalConstraint(int32_t);1;OMR;ValuePropagation;0;0
initialize;initialize();1;OMR;ValuePropagation;0;0
intersectionFailed;intersectionFailed();1;OMR;ValuePropagation;0;0
invalidateParmConstraintsIfNeeded;invalidateParmConstraintsIfNeeded(TR::Node *,TR::VPConstraint *);1;OMR;ValuePropagation;0;0
invalidateUseDefInfo;invalidateUseDefInfo();1;OMR;ValuePropagation;0;0
invalidateValueNumberInfo;invalidateValueNumberInfo();1;OMR;ValuePropagation;0;0
isCastClassObject;isCastClassObject(TR::VPClassType *);1;OMR;ValuePropagation;0;0
isDefInUnreachableBlock;isDefInUnreachableBlock(int32_t);1;OMR;ValuePropagation;0;0
isHighWordZero;isHighWordZero(TR::Node *);1;OMR;ValuePropagation;0;0
isParmInvariant;isParmInvariant(TR::Symbol *);1;OMR;ValuePropagation;0;0
isUnreachablePath;isUnreachablePath(ValueConstraints &);1;OMR;ValuePropagation;0;0
isUnreachablePath;isUnreachablePath(struct OMR::ValuePropagation::EdgeConstraints *);0;OMR;ValuePropagation;0;0
isUnreachableStore;isUnreachableStore(struct OMR::ValuePropagation::StoreRelationship *);1;OMR;ValuePropagation;0;0
lastTimeThrough;lastTimeThrough();1;OMR;ValuePropagation;0;0
launchNode;launchNode(TR::Node *,TR::Node *,int32_t);1;OMR;ValuePropagation;0;0
mergeBackEdgeConstraints;mergeBackEdgeConstraints(struct OMR::ValuePropagation::EdgeConstraints *);1;OMR;ValuePropagation;0;0
mergeConstraintIntoEdge;mergeConstraintIntoEdge(class OMR::ValuePropagation::ValueConstraint *,struct OMR::ValuePropagation::EdgeConstraints *);1;OMR;ValuePropagation;0;0
mergeDefConstraints;mergeDefConstraints(TR::Node *,int32_t,_Bool &,_Bool);1;OMR;ValuePropagation;0;0
mergeEdgeConstraints;mergeEdgeConstraints(struct OMR::ValuePropagation::EdgeConstraints *,struct OMR::ValuePropagation::EdgeConstraints *);1;OMR;ValuePropagation;0;0
mergeRelationships;mergeRelationships(TR_LinkHead<struct OMR::ValuePropagation::Relationship> &,TR_LinkHead<struct OMR::ValuePropagation::Relationship> &,int32_t,_Bool,struct OMR::ValuePropagation::StoreRelationship *,List<TR::Symbol> *,_Bool);1;OMR;ValuePropagation;0;0
mergeStoreRelationships;mergeStoreRelationships(class OMR::ValuePropagation::ValueConstraint *,class OMR::ValuePropagation::ValueConstraint *,_Bool);1;OMR;ValuePropagation;0;0
mergeValueConstraints;mergeValueConstraints(class OMR::ValuePropagation::ValueConstraint *,class OMR::ValuePropagation::ValueConstraint *,_Bool);1;OMR;ValuePropagation;0;0
mustTakeException;mustTakeException();1;OMR;ValuePropagation;0;0
operator=;operator=(const class OMR::ValuePropagation &);0;OMR;ValuePropagation;1;0
operator=;operator=(class OMR::ValuePropagation &&);0;OMR;ValuePropagation;1;0
operator=;operator=(class TR::ValuePropagation &&);0;TR;ValuePropagation;1;0
operator=;operator=(const class TR::ValuePropagation &);0;TR;ValuePropagation;1;0
operator=;operator=(const class TR::GlobalValuePropagation &);0;TR;GlobalValuePropagation;1;0
operator=;operator=(class TR::GlobalValuePropagation &&);0;TR;GlobalValuePropagation;1;0
prepareForBlockVersion;prepareForBlockVersion(TR_LinkHead<struct OMR::ValuePropagation::ArrayLengthToVersion> *);1;OMR;ValuePropagation;0;0
printEdgeConstraints;printEdgeConstraints(struct OMR::ValuePropagation::EdgeConstraints *);1;OMR;ValuePropagation;0;0
printGlobalConstraints;printGlobalConstraints();1;OMR;ValuePropagation;0;0
printParentStructure;printParentStructure(class TR_Structure *);1;OMR;ValuePropagation;0;0
printStructureInfo;printStructureInfo(class TR_Structure *,_Bool,_Bool);1;OMR;ValuePropagation;0;0
printValueConstraints;printValueConstraints(ValueConstraints &);1;OMR;ValuePropagation;0;0
processAcyclicRegion;processAcyclicRegion(class TR_StructureSubGraphNode *,_Bool,_Bool);1;TR;GlobalValuePropagation;0;0
processBlock;processBlock(class TR_StructureSubGraphNode *,_Bool,_Bool);1;TR;GlobalValuePropagation;0;0
processImproperLoop;processImproperLoop(class TR_StructureSubGraphNode *,_Bool,_Bool);1;TR;GlobalValuePropagation;0;0
processNaturalLoop;processNaturalLoop(class TR_StructureSubGraphNode *,_Bool,_Bool);1;TR;GlobalValuePropagation;0;0
processRegionNode;processRegionNode(class TR_StructureSubGraphNode *,_Bool,_Bool);1;TR;GlobalValuePropagation;0;0
processRegionSubgraph;processRegionSubgraph(class TR_StructureSubGraphNode *,_Bool,_Bool,_Bool);1;TR;GlobalValuePropagation;0;0
processStructure;processStructure(class TR_StructureSubGraphNode *,_Bool,_Bool);1;TR;GlobalValuePropagation;0;0
processTrees;processTrees(TR::TreeTop *,TR::TreeTop *);1;OMR;ValuePropagation;0;0
propagateConstraint;propagateConstraint(TR::Node *,int32_t,struct OMR::ValuePropagation::Relationship *,struct OMR::ValuePropagation::Relationship *,ValueConstraints *);1;OMR;ValuePropagation;0;0
propagateOutputConstraints;propagateOutputConstraints(class TR_StructureSubGraphNode *,_Bool,_Bool,List<TR::CFGEdge> &,List<TR::CFGEdge> *);1;TR;GlobalValuePropagation;0;0
registerPreXClass;registerPreXClass(TR::VPConstraint *);1;OMR;ValuePropagation;0;0
removeArrayCopyNode;removeArrayCopyNode(TR::TreeTop *);1;OMR;ValuePropagation;0;0
removeBndChecksFromFastVersion;removeBndChecksFromFastVersion(struct OMR::ValuePropagation::BlockVersionInfo *);1;OMR;ValuePropagation;0;0
removeChildren;removeChildren(TR::Node *,_Bool);1;OMR;ValuePropagation;0;0
removeConstraint;removeConstraint(int32_t,ValueConstraints &,int32_t);1;OMR;ValuePropagation;0;0
removeConstraints;removeConstraints();1;OMR;ValuePropagation;0;0
removeConstraints;removeConstraints(int32_t,ValueConstraints *,_Bool);0;OMR;ValuePropagation;0;0
removeConstraints;removeConstraints(int32_t);0;OMR;ValuePropagation;0;0
removeConstraints;removeConstraints(int32_t,ValueConstraints *);0;OMR;ValuePropagation;0;0
removeNode;removeNode(TR::Node *,_Bool);0;OMR;ValuePropagation;0;0
removeRestOfBlock;removeRestOfBlock();1;OMR;ValuePropagation;0;0
removeStoreConstraints;removeStoreConstraints(ValueConstraints *,int32_t,int32_t);1;OMR;ValuePropagation;0;0
replaceByConstant;replaceByConstant(TR::Node *,TR::VPConstraint *,_Bool);1;OMR;ValuePropagation;0;0
setChTableValidityChecked;setChTableValidityChecked(_Bool);1;OMR;ValuePropagation;0;0
setChTableWasValid;setChTableWasValid(_Bool);1;OMR;ValuePropagation;0;0
setChecksRemoved;setChecksRemoved();1;OMR;ValuePropagation;0;0
setCurrentParent;setCurrentParent(TR::Node *);1;OMR;ValuePropagation;0;1
setEnableSimplifier;setEnableSimplifier();1;OMR;ValuePropagation;0;0
setIntersectionFailed;setIntersectionFailed(_Bool);1;OMR;ValuePropagation;0;0
setUnreachablePath;setUnreachablePath(ValueConstraints &);1;OMR;ValuePropagation;0;0
setUnreachablePath;setUnreachablePath();0;OMR;ValuePropagation;0;0
setUnreachablePath;setUnreachablePath(TR::CFGEdge *);0;OMR;ValuePropagation;0;0
setUnreachableStore;setUnreachableStore(struct OMR::ValuePropagation::StoreRelationship *);1;OMR;ValuePropagation;0;0
setUpInductionVariables;setUpInductionVariables(class TR_StructureSubGraphNode *);1;OMR;ValuePropagation;0;0
transformArrayCopyCall;transformArrayCopyCall(TR::Node *);1;OMR;ValuePropagation;0;0
transformArrayCopySpineCheck;transformArrayCopySpineCheck(struct OMR::ValuePropagation::TR_ArrayCopySpineCheck *);1;OMR;ValuePropagation;0;0
transformRealTimeArrayCopy;transformRealTimeArrayCopy(struct OMR::ValuePropagation::TR_RealTimeArrayCopy *);1;OMR;ValuePropagation;0;0
transformReferenceArrayCopy;transformReferenceArrayCopy(struct OMR::ValuePropagation::TR_TreeTopWrtBarFlag *);1;OMR;ValuePropagation;0;0
transformReferenceArrayCopyWithoutCreatingStoreTrees;transformReferenceArrayCopyWithoutCreatingStoreTrees(struct OMR::ValuePropagation::TR_TreeTopWrtBarFlag *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *);1;OMR;ValuePropagation;0;0
transformStringConcats;transformStringConcats(struct OMR::ValuePropagation::VPStringCached *);1;OMR;ValuePropagation;0;0
transformStringCtors;transformStringCtors(struct OMR::ValuePropagation::VPTreeTopPair *);1;OMR;ValuePropagation;0;0
transformUnknownTypeArrayCopy;transformUnknownTypeArrayCopy(struct OMR::ValuePropagation::TR_TreeTopWrtBarFlag *);1;OMR;ValuePropagation;0;0
transformUnsafeCopyMemoryCall;transformUnsafeCopyMemoryCall(TR::Node *);1;OMR;ValuePropagation;0;0
useDefInfoInvalid;useDefInfoInvalid();1;OMR;ValuePropagation;0;0
usePreexistence;usePreexistence();1;OMR;ValuePropagation;0;0
valueNumberInfoInvalid;valueNumberInfoInvalid();1;OMR;ValuePropagation;0;0
versionBlocks;versionBlocks();1;OMR;ValuePropagation;0;0
~GlobalValuePropagation;~GlobalValuePropagation();1;TR;GlobalValuePropagation;1;1
~ValuePropagation;~ValuePropagation();1;OMR;ValuePropagation;1;1
LocalDeadStoreElimination;LocalDeadStoreElimination(TR::OptimizationManager *);1;TR;LocalDeadStoreElimination;0;0
LocalValuePropagation;LocalValuePropagation(class TR::LocalValuePropagation &&);1;TR;LocalValuePropagation;1;0
LocalValuePropagation;LocalValuePropagation(const class TR::LocalValuePropagation &);0;TR;LocalValuePropagation;1;0
LocalValuePropagation;LocalValuePropagation(TR::OptimizationManager *);0;TR;LocalValuePropagation;0;0
create;create(TR::OptimizationManager *);1;TR;LocalValuePropagation;0;0
operator=;operator=(class TR::LocalValuePropagation &&);0;TR;LocalValuePropagation;1;0
operator=;operator=(const class TR::LocalValuePropagation &);0;TR;LocalValuePropagation;1;0
processBlock;processBlock(TR::TreeTop *);1;TR;LocalValuePropagation;0;0
~LocalValuePropagation;~LocalValuePropagation();1;TR;LocalValuePropagation;1;1
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::SymbolReference *);1;OMR;Node;0;0
OptimizationManager;OptimizationManager(const class TR::OptimizationManager &);0;TR;OptimizationManager;1;0
Optimizer;Optimizer(class OMR::Optimizer &&);1;OMR;Optimizer;1;0
Optimizer;Optimizer(class TR::Optimizer &&);0;TR;Optimizer;1;0
Optimizer;Optimizer(const class TR::Optimizer &);0;TR;Optimizer;1;0
~Optimizer;~Optimizer();1;OMR;Optimizer;1;0
RegDepCopyRemoval;RegDepCopyRemoval(const class TR::RegDepCopyRemoval &);1;TR;RegDepCopyRemoval;1;0
RegDepCopyRemoval;RegDepCopyRemoval(class TR::RegDepCopyRemoval &&);0;TR;RegDepCopyRemoval;1;0
RegDepCopyRemoval;RegDepCopyRemoval(TR::OptimizationManager *);0;TR;RegDepCopyRemoval;0;0
clearRegDepInfo;clearRegDepInfo();1;TR;RegDepCopyRemoval;0;0
create;create(TR::OptimizationManager *);1;TR;RegDepCopyRemoval;0;0
discardAllNodeChoices;discardAllNodeChoices();1;TR;RegDepCopyRemoval;0;0
discardNodeChoice;discardNodeChoice(TR_GlobalRegisterNumber);1;TR;RegDepCopyRemoval;0;0
generateRegcopyDebugCounter;generateRegcopyDebugCounter(const char *);1;TR;RegDepCopyRemoval;0;0
getNodeChoice;getNodeChoice(TR_GlobalRegisterNumber);1;TR;RegDepCopyRemoval;0;0
getRegDepInfo;getRegDepInfo(TR_GlobalRegisterNumber);1;TR;RegDepCopyRemoval;0;0
ignoreRegister;ignoreRegister(TR_GlobalRegisterNumber);1;TR;RegDepCopyRemoval;0;0
makeFreshCopy;makeFreshCopy(TR_GlobalRegisterNumber);1;TR;RegDepCopyRemoval;0;0
operator=;operator=(const class TR::RegDepCopyRemoval &);0;TR;RegDepCopyRemoval;1;0
operator=;operator=(class TR::RegDepCopyRemoval &&);0;TR;RegDepCopyRemoval;1;0
processRegDeps;processRegDeps(TR::Node *,TR::TreeTop *);1;TR;RegDepCopyRemoval;0;0
rangeCheckRegister;rangeCheckRegister(TR_GlobalRegisterNumber);1;TR;RegDepCopyRemoval;0;0
readRegDeps;readRegDeps();1;TR;RegDepCopyRemoval;0;0
registerName;registerName(TR_GlobalRegisterNumber);1;TR;RegDepCopyRemoval;0;0
rememberNodeChoice;rememberNodeChoice(TR_GlobalRegisterNumber,TR::Node *);1;TR;RegDepCopyRemoval;0;0
reuseCopy;reuseCopy(TR_GlobalRegisterNumber);1;TR;RegDepCopyRemoval;0;0
selectNodesToCopy;selectNodesToCopy(TR::NodeChecklist &);1;TR;RegDepCopyRemoval;0;0
selectNodesToReuse;selectNodesToReuse(TR::NodeChecklist &);1;TR;RegDepCopyRemoval;0;0
updateRegDeps;updateRegDeps(TR::NodeChecklist &);1;TR;RegDepCopyRemoval;0;0
updateSingleRegDep;updateSingleRegDep(TR_GlobalRegisterNumber,TR::Node *);1;TR;RegDepCopyRemoval;0;0
~RegDepCopyRemoval;~RegDepCopyRemoval();1;TR;RegDepCopyRemoval;1;1
create;create(TR::Compilation *,TR::TreeTop *,TR::Node *);1;OMR;TreeTop;0;0
removeDeadTrees;removeDeadTrees(TR::Compilation *,TR::TreeTop *,TR::TreeTop *);1;OMR;TreeTop;0;0
removeDeadTrees;removeDeadTrees(TR::Compilation *,TR::TreeTop *[]);0;OMR;TreeTop;0;0
mustBeEqual;mustBeEqual();1;TR;VPConstraint;0;1
mustBeEqual;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);0;TR;VPConstraint;0;1
operator new;operator new(size_t,TR_ArenaAllocator *);1;TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;VPConstraint;0;0
TR_Arraycmp;TR_Arraycmp(TR::Compilation *,class TR_InductionVariable *);1;TR;Arraycmp;0;0
TR_Arraycopy;TR_Arraycopy(TR::Compilation *,class TR_InductionVariable *);1;TR;Arraycopy;0;0
TR_Arrayset;TR_Arrayset(TR::Compilation *,class TR_InductionVariable *);1;TR;Arrayset;0;0
TR_Arraytranslate;TR_Arraytranslate(TR::Compilation *,class TR_InductionVariable *,_Bool,_Bool);1;TR;Arraytranslate;0;0
TR_ArraytranslateAndTest;TR_ArraytranslateAndTest(TR::Compilation *,class TR_InductionVariable *);1;TR;ArraytranslateAndTest;0;0
TR_Array<T>;TR_Array<T>(const TR_Array<T> &);1;TR;Array;0;0
TR_Array<T>;TR_Array<T>(class TR_Memory *,uint32_t,_Bool,enum TR_AllocationKind);0;TR;Array;0;0
TR_BinaryHeap;TR_BinaryHeap(class TR_BlockSplitter::TR_BinaryHeap &&);1;TR_BlockSplitter;TR_BinaryHeap;1;0
TR_BinaryHeap;TR_BinaryHeap(class TR_Memory *,uint32_t);0;TR_BlockSplitter;TR_BinaryHeap;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;Array;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Array;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;Array;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Array;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;Structure;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;Structure;0;0
TR_ByteToCharArraycopy;TR_ByteToCharArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool);1;TR;ByteToCharArraycopy;0;0
TR_CharToByteArraycopy;TR_CharToByteArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool);1;TR;CharToByteArraycopy;0;0
TR_CheckcastAndProfiledGuardCoalescer;TR_CheckcastAndProfiledGuardCoalescer(class TR_CheckcastAndProfiledGuardCoalescer &&);1;TR;CheckcastAndProfiledGuardCoalescer;1;0
TR_CheckcastAndProfiledGuardCoalescer;TR_CheckcastAndProfiledGuardCoalescer(TR::OptimizationManager *);0;TR;CheckcastAndProfiledGuardCoalescer;0;0
createInterferenceBetween;createInterferenceBetween(class TR_BitVector *);1;TR;CompactLocals;0;0
createInterferenceBetween;createInterferenceBetween(class TR_BitVector *,class TR_BitVector *);0;TR;CompactLocals;0;0
TR_IsolatedStoreElimination;TR_IsolatedStoreElimination(class TR_IsolatedStoreElimination &&);1;TR;IsolatedStoreElimination;1;0
TR_IsolatedStoreElimination;TR_IsolatedStoreElimination(const class TR_IsolatedStoreElimination &);0;TR;IsolatedStoreElimination;1;0
TR_BasicInductionVariable;TR_BasicInductionVariable(const class TR_BasicInductionVariable &);1;TR;BasicInductionVariable;1;0
TR_BasicInductionVariable;TR_BasicInductionVariable(class TR_BasicInductionVariable &&);0;TR;BasicInductionVariable;1;0
operator=;operator=(class TR_BasicInductionVariable &&);1;TR;BasicInductionVariable;1;0
operator=;operator=(const class TR_BasicInductionVariable &);0;TR;BasicInductionVariable;1;0
TR_ExceptionCheckMotion;TR_ExceptionCheckMotion(class TR_ExceptionCheckMotion &&);1;TR;ExceptionCheckMotion;1;0
TR_ExceptionCheckMotion;TR_ExceptionCheckMotion(TR::Compilation *,TR::Optimizer *,class TR_PartialRedundancy *);0;TR;ExceptionCheckMotion;0;0
allocateContainer;allocateContainer(int32_t);1;TR;ExceptionCheckMotion;0;0
analyzeNodeIfSuccessorsAnalyzed;analyzeNodeIfSuccessorsAnalyzed(TR::CFGNode *,class TR_RegionStructure *,ContainerType *,ContainerType *);1;TR;ExceptionCheckMotion;0;0
analyzeNodeToInitializeGenAndKillSets;analyzeNodeToInitializeGenAndKillSets(TR::TreeTop *,vcount_t,class TR_BlockStructure *);1;TR;ExceptionCheckMotion;0;0
appendLists;appendLists(List<TR::Node> *,List<TR::Node> *);1;TR;ExceptionCheckMotion;0;0
areExceptionSuccessorsIdentical;areExceptionSuccessorsIdentical(TR::CFGNode *,TR::CFGNode *);1;TR;ExceptionCheckMotion;0;0
checkIfNodeCanSomehowSurvive;checkIfNodeCanSomehowSurvive(TR::Node *,ContainerType *);1;TR;ExceptionCheckMotion;0;0
checkIfNodeCanSurvive;checkIfNodeCanSurvive(TR::Node *,ContainerType *);1;TR;ExceptionCheckMotion;0;0
compareLists;compareLists(List<TR::Node> *,List<TR::Node> *);1;TR;ExceptionCheckMotion;0;0
composeLists;composeLists(List<TR::Node> *,List<TR::Node> *,ContainerType *);1;TR;ExceptionCheckMotion;0;0
copyListFromInto;copyListFromInto(List<TR::Node> *,List<TR::Node> *);1;TR;ExceptionCheckMotion;0;0
createAnalysisInfo;createAnalysisInfo();1;TR;ExceptionCheckMotion;0;0
createAndAddListElement;createAndAddListElement(TR::Node *,int32_t);1;TR;ExceptionCheckMotion;0;0
getActualOptSetInfo;getActualOptSetInfo();1;TR;ExceptionCheckMotion;0;0
getActualRednSetInfo;getActualRednSetInfo();1;TR;ExceptionCheckMotion;0;0
getAnalysisInfo;getAnalysisInfo(class TR_Structure *);1;TR;ExceptionCheckMotion;0;0
getExprsUnaffectedByOrder;getExprsUnaffectedByOrder();1;TR;ExceptionCheckMotion;0;0
getGenSetList;getGenSetList();1;TR;ExceptionCheckMotion;0;0
getOptimisticOptSetInfo;getOptimisticOptSetInfo();1;TR;ExceptionCheckMotion;0;0
getOptimisticRednSetInfo;getOptimisticRednSetInfo();1;TR;ExceptionCheckMotion;0;0
getOrderedOptList;getOrderedOptList();1;TR;ExceptionCheckMotion;0;0
getOrderedOptNumbersList;getOrderedOptNumbersList();1;TR;ExceptionCheckMotion;0;0
getPartialRedundancy;getPartialRedundancy();1;TR;ExceptionCheckMotion;0;0
getTrySecondBestSolution;getTrySecondBestSolution();1;TR;ExceptionCheckMotion;0;0
includeRelevantNodes;includeRelevantNodes(TR::Node *,vcount_t,int32_t);1;TR;ExceptionCheckMotion;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,class TR_Structure *);1;TR;ExceptionCheckMotion;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,TR::Block *);0;TR;ExceptionCheckMotion;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,class TR_RegionStructure *);0;TR;ExceptionCheckMotion;0;0
initializeGenAndKillSetInfo;initializeGenAndKillSetInfo();1;TR;ExceptionCheckMotion;0;1
initializeOutList;initializeOutList(List<TR::Node> *);1;TR;ExceptionCheckMotion;0;0
initializeOutLists;initializeOutLists(List<TR::Node> **);1;TR;ExceptionCheckMotion;0;0
isNodeKilledByChild;isNodeKilledByChild(TR::Node *,TR::Node *,int32_t);1;TR;ExceptionCheckMotion;0;0
isNodeValueZero;isNodeValueZero(TR::Node *);1;TR;ExceptionCheckMotion;0;0
markNodeAsSurvivor;markNodeAsSurvivor(TR::Node *,ContainerType *);1;TR;ExceptionCheckMotion;0;0
operator=;operator=(const class TR_ExceptionCheckMotion &);0;TR;ExceptionCheckMotion;1;0
operator=;operator=(class TR_ExceptionCheckMotion &&);0;TR;ExceptionCheckMotion;1;0
removeFromList;removeFromList(ListElement<TR::Node> *,List<TR::Node> *,ListElement<TR::Node> *);1;TR;ExceptionCheckMotion;0;0
setBlockFenceStatus;setBlockFenceStatus(TR::Block *);1;TR;ExceptionCheckMotion;0;0
~TR_ExceptionCheckMotion;~TR_ExceptionCheckMotion();1;TR;ExceptionCheckMotion;1;1
findUseInRegion;findUseInRegion(TR::Node *,uint16_t,uint16_t);1;TR;ExpressionsSimplification;0;0
findUseInRegion;findUseInRegion(class TR_RegionStructure *,uint16_t,uint16_t);0;TR;ExpressionsSimplification;0;0
removeCandidate;removeCandidate(TR::Node *,TR::TreeTop *);1;TR;ExpressionsSimplification;0;0
removeCandidate;removeCandidate(class TR_RegionStructure *);0;TR;ExpressionsSimplification;0;0
detectWhileLoopsInSubnodesInOrder;detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool);1;TR;LoopTransformer;0;0
detectWhileLoopsInSubnodesInOrder;detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_Structure *,class TR_StructureSubGraphNode *,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool);0;TR;LoopTransformer;0;0
branchContainsInductionVariable;branchContainsInductionVariable(TR::Node *,TR::SymbolReference *);1;TR;GeneralLoopUnroller;0;0
branchContainsInductionVariable;branchContainsInductionVariable(class TR_RegionStructure *,TR::Node *,_Bool);0;TR;GeneralLoopUnroller;0;0
TR_GeneralSinkStores;TR_GeneralSinkStores(class TR_GeneralSinkStores &&);1;TR;GeneralSinkStores;1;0
TR_GeneralSinkStores;TR_GeneralSinkStores(TR::OptimizationManager *);0;TR;GeneralSinkStores;0;0
TR_GeneralSinkStores;TR_GeneralSinkStores(const class TR_GeneralSinkStores &);0;TR;GeneralSinkStores;1;0
TR_SinkStores;TR_SinkStores(const class TR_SinkStores &);1;TR;SinkStores;1;0
TR_SinkStores;TR_SinkStores(class TR_SinkStores &&);0;TR;SinkStores;1;0
TR_SinkStores;TR_SinkStores(TR::OptimizationManager *);0;TR;SinkStores;0;0
checkLiveMergingPaths;checkLiveMergingPaths(class TR_BlockListEntry *,int32_t);1;TR;SinkStores;0;0
coalesceSimilarEdgePlacements;coalesceSimilarEdgePlacements();1;TR;SinkStores;0;0
create;create(TR::OptimizationManager *);1;TR;GeneralSinkStores;0;0
doSinking;doSinking();1;TR;SinkStores;0;0
enablePreciseSymbolTracking;enablePreciseSymbolTracking();1;TR;SinkStores;0;0
findEdgeInformation;findEdgeInformation(TR::CFGEdge *,List<class TR_EdgeInformation> &);1;TR;SinkStores;0;0
findFirstUseOfLoad;findFirstUseOfLoad(TR::Node *);1;TR;SinkStores;0;0
findTempSym;findTempSym(TR::Node *);1;TR;SinkStores;0;0
genHandlerIndex;genHandlerIndex();1;TR;SinkStores;0;0
genStoreToTempSyms;genStoreToTempSyms(TR::TreeTop *,TR::Node *,class TR_BitVector *,class TR_BitVector *,TR::Node *,List<class TR_MovableStore> &);1;TR;SinkStores;0;0
getSinkableSymbol;getSinkableSymbol(TR::Node *);1;TR;SinkStores;0;0
insertAnchoredNodes;insertAnchoredNodes(class TR_MovableStore *,TR::Node *,TR::Node *,TR::Node *,int32_t,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,TR::Block *,List<class TR_IndirectLoadAnchor> *,vcount_t);1;TR;SinkStores;0;0
isCorrectCommonedLoad;isCorrectCommonedLoad(TR::Node *,TR::Node *);1;TR;SinkStores;0;0
isExceptionFlagIsSticky;isExceptionFlagIsSticky();1;TR;SinkStores;0;0
isSafeToSinkThruEdgePlacement;isSafeToSinkThruEdgePlacement(int,TR::CFGNode *,TR::CFGNode *,class TR_BitVector *);1;TR;SinkStores;0;0
isSymUsedInEdgePlacement;isSymUsedInEdgePlacement(TR::CFGNode *,TR::CFGNode *);1;TR;SinkStores;0;0
lookForSinkableStores;lookForSinkableStores();1;TR;SinkStores;0;0
operator=;operator=(class TR_SinkStores &&);0;TR;SinkStores;1;0
operator=;operator=(const class TR_SinkStores &);0;TR;SinkStores;1;0
operator=;operator=(class TR_GeneralSinkStores &&);0;TR;GeneralSinkStores;1;0
operator=;operator=(const class TR_GeneralSinkStores &);0;TR;GeneralSinkStores;1;0
performStoreSinking;performStoreSinking();1;TR;SinkStores;0;0
performThisTransformation;performThisTransformation();1;TR;SinkStores;0;0
placeStoresAlongEdges;placeStoresAlongEdges(List<class TR_StoreInformation> &,List<class TR_EdgeInformation> &);1;TR;SinkStores;0;0
placeStoresInBlock;placeStoresInBlock(List<class TR_StoreInformation> &,TR::Block *);1;TR;SinkStores;0;0
recordPlacementForDefAlongEdge;recordPlacementForDefAlongEdge(class TR_EdgeStorePlacement *);1;TR;SinkStores;0;0
recordPlacementForDefInBlock;recordPlacementForDefInBlock(class TR_BlockStorePlacement *);1;TR;SinkStores;0;0
replaceLoadsWithTempSym;replaceLoadsWithTempSym(TR::Node *,TR::Node *,class TR_BitVector *);1;TR;SinkStores;0;0
searchAndMarkFirstUses;searchAndMarkFirstUses(TR::Node *,TR::TreeTop *,class TR_MovableStore *,TR::Block *,class TR_BitVector *);1;TR;SinkStores;0;0
setExceptionFlagIsSticky;setExceptionFlagIsSticky(_Bool);1;TR;SinkStores;0;0
setSinkMethodMetaDataStores;setSinkMethodMetaDataStores(_Bool);1;TR;SinkStores;0;0
setSinkStoresWithIndirectLoads;setSinkStoresWithIndirectLoads(_Bool);1;TR;SinkStores;0;0
setSinkStoresWithStaticLoads;setSinkStoresWithStaticLoads(_Bool);1;TR;SinkStores;0;0
setUsesDataFlowAnalysis;setUsesDataFlowAnalysis(_Bool);1;TR;SinkStores;0;0
shouldSinkStoreAlongEdge;shouldSinkStoreAlongEdge(int,TR::CFGNode *,TR::CFGNode *,int32_t,_Bool,vcount_t,class TR_BitVector *);1;TR;SinkStores;0;0
sinkMethodMetaDataStores;sinkMethodMetaDataStores();1;TR;SinkStores;0;0
sinkStorePlacement;sinkStorePlacement(class TR_MovableStore *,_Bool);1;TR;SinkStores;0;1
sinkStoresWithIndirectLoads;sinkStoresWithIndirectLoads();1;TR;SinkStores;0;0
sinkStoresWithStaticLoads;sinkStoresWithStaticLoads();1;TR;SinkStores;0;0
storeCanMoveThroughBlock;storeCanMoveThroughBlock(class TR_BitVector *,class TR_BitVector *,int32_t,class TR_BitVector *,class TR_BitVector *);1;TR;SinkStores;0;1
storeIsSinkingCandidate;storeIsSinkingCandidate(TR::Block *,TR::Node *,int32_t,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t &,vcount_t &);1;TR;SinkStores;0;1
treeIsSinkableStore;treeIsSinkableStore(TR::Node *,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t);1;TR;SinkStores;0;0
usesDataFlowAnalysis;usesDataFlowAnalysis();1;TR;SinkStores;0;0
~TR_GeneralSinkStores;~TR_GeneralSinkStores();1;TR;GeneralSinkStores;1;1
~TR_SinkStores;~TR_SinkStores();1;TR;SinkStores;1;1
TR_GlobalRegisterAllocator;TR_GlobalRegisterAllocator(const class TR_GlobalRegisterAllocator &);1;TR;GlobalRegisterAllocator;1;0
TR_GlobalRegisterAllocator;TR_GlobalRegisterAllocator(TR::OptimizationManager *);0;TR;GlobalRegisterAllocator;0;0
assignRegisters;assignRegisters();1;TR;GlobalRegisterAllocator;0;0
assignRegisters;assignRegisters(TR::Block *);0;TR;GlobalRegisterAllocator;0;0
resolveTypeMismatch;resolveTypeMismatch(TR::DataType,TR::Node *,TR::Node *);1;TR;GlobalRegisterAllocator;0;0
resolveTypeMismatch;resolveTypeMismatch(TR::Node *,TR::Node *);0;TR;GlobalRegisterAllocator;0;0
TR_HashValueNumberInfo;TR_HashValueNumberInfo(class TR_HashValueNumberInfo &);1;TR;HashValueNumberInfo;1;0
TR_HashValueNumberInfo;TR_HashValueNumberInfo(TR::Compilation *,TR::Optimizer *,_Bool,_Bool,_Bool);0;TR;HashValueNumberInfo;0;0
TR_IndexExprManipulator;TR_IndexExprManipulator(class TR_IndexExprManipulator &&);1;TR;IndexExprManipulator;1;0
TR_IndexExprManipulator;TR_IndexExprManipulator(TR::OptimizationManager *);0;TR;IndexExprManipulator;0;0
TR_IndexExprManipulator;TR_IndexExprManipulator(const class TR_IndexExprManipulator &);0;TR;IndexExprManipulator;1;0
create;create(TR::OptimizationManager *);1;TR;IndexExprManipulator;0;0
operator=;operator=(const class TR_IndexExprManipulator &);0;TR;IndexExprManipulator;1;0
operator=;operator=(class TR_IndexExprManipulator &&);0;TR;IndexExprManipulator;1;0
rewriteIndexExpression;rewriteIndexExpression(class TR_Structure *);1;TR;IndexExprManipulator;0;0
rewriteIndexExpression;rewriteIndexExpression(class TR_PrimaryInductionVariable *,TR::Node *,TR::Node *,_Bool);0;TR;IndexExprManipulator;0;0
~TR_IndexExprManipulator;~TR_IndexExprManipulator();1;TR;IndexExprManipulator;1;1
TR_InnerPreexistence;TR_InnerPreexistence(class TR_InnerPreexistence &&);1;TR;InnerPreexistence;1;0
TR_InnerPreexistence;TR_InnerPreexistence(const class TR_InnerPreexistence &);0;TR;InnerPreexistence;1;0
TR_InnerPreexistence;TR_InnerPreexistence(TR::OptimizationManager *);0;TR;InnerPreexistence;0;0
create;create(TR::OptimizationManager *);1;TR;InnerPreexistence;0;0
devirtualize;devirtualize(class TR_InnerPreexistence::GuardInfo *);1;TR;InnerPreexistence;0;0
initialize;initialize();1;TR;InnerPreexistence;0;0
operator=;operator=(const class TR_InnerPreexistence &);0;TR;InnerPreexistence;1;0
operator=;operator=(class TR_InnerPreexistence &&);0;TR;InnerPreexistence;1;0
transform;transform();1;TR;InnerPreexistence;0;0
~TR_InnerPreexistence;~TR_InnerPreexistence();1;TR;InnerPreexistence;1;1
TR_InvariantArgumentPreexistence;TR_InvariantArgumentPreexistence(const class TR_InvariantArgumentPreexistence &);1;TR;InvariantArgumentPreexistence;1;0
TR_InvariantArgumentPreexistence;TR_InvariantArgumentPreexistence(class TR_InvariantArgumentPreexistence &&);0;TR;InvariantArgumentPreexistence;1;0
TR_AddressTree;TR_AddressTree(enum TR_AllocationKind,TR::Compilation *);1;TR;AddressTree;0;0
TR_LRAddressTree;TR_LRAddressTree(TR::Compilation *,class TR_InductionVariable *);1;TR;LRAddressTree;0;0
operator delete;operator delete(void *,size_t);1;TR;AddressTree;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;AddressTree;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;AddressTree;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;AddressTree;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;LocalAnalysis;0;0
TR_LoopReplicator;TR_LoopReplicator(const class TR_LoopReplicator &);1;TR;LoopReplicator;1;0
TR_LoopReplicator;TR_LoopReplicator(class TR_LoopReplicator &&);0;TR;LoopReplicator;1;0
gatherRestOfLoop;gatherRestOfLoop(class TR_RegionStructure *,TR_Queue<TR::Block> *);1;TR;LoopReplicator;0;0
gatherRestOfLoop;gatherRestOfLoop(class TR_RegionStructure *,TR::Block *,TR_Queue<TR::Block> &);0;TR;LoopReplicator;0;0
heuristics;heuristics(struct TR_LoopReplicator::LoopInfo *,_Bool);1;TR;LoopReplicator;0;0
heuristics;heuristics(struct TR_LoopReplicator::LoopInfo *);0;TR;LoopReplicator;0;0
TR_LoopSpecializer;TR_LoopSpecializer(class TR_LoopSpecializer &&);1;TR;LoopSpecializer;1;0
TR_LoopSpecializer;TR_LoopSpecializer(const class TR_LoopSpecializer &);0;TR;LoopSpecializer;1;0
TR_OSRDefAnalysis;TR_OSRDefAnalysis(const class TR_OSRDefAnalysis &);1;TR;OSRDefAnalysis;1;0
TR_OSRDefAnalysis;TR_OSRDefAnalysis(TR::OptimizationManager *);0;TR;OSRDefAnalysis;0;0
TR_OSRDefAnalysis;TR_OSRDefAnalysis(class TR_OSRDefAnalysis &&);0;TR;OSRDefAnalysis;1;0
create;create(TR::OptimizationManager *);1;TR;OSRDefAnalysis;0;0
operator=;operator=(const class TR_OSRDefAnalysis &);0;TR;OSRDefAnalysis;1;0
operator=;operator=(class TR_OSRDefAnalysis &&);0;TR;OSRDefAnalysis;1;0
requiresAnalysis;requiresAnalysis();1;TR;OSRDefAnalysis;0;0
~TR_OSRDefAnalysis;~TR_OSRDefAnalysis();1;TR;OSRDefAnalysis;1;1
TR_OSRDefInfo;TR_OSRDefInfo(TR::OptimizationManager *);1;TR;OSRDefInfo;0;0
TR_OSRDefInfo;TR_OSRDefInfo(class TR_OSRDefInfo &&);0;TR;OSRDefInfo;1;0
TR_UseDefInfo;TR_UseDefInfo(const class TR_UseDefInfo &);1;TR;UseDefInfo;1;0
TR_UseDefInfo;TR_UseDefInfo(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool,_Bool,_Bool,_Bool,_Bool,_Bool);0;TR;UseDefInfo;0;0
_runReachingDefinitions;_runReachingDefinitions(class TR_ReachingDefinitions &,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
addSharingInfo;addSharingInfo(class TR_UseDefInfo::AuxiliaryData &);1;TR;OSRDefInfo;0;0
allocator;allocator();1;TR;UseDefInfo;0;0
assignAdjustedNodeIndex;assignAdjustedNodeIndex(TR::Block *,TR::Node *,TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &,_Bool);1;TR;UseDefInfo;0;0
buildDefUseInfo;buildDefUseInfo(_Bool);1;TR;UseDefInfo;0;0
buildOSRDefs;buildOSRDefs(void *,class TR_UseDefInfo::AuxiliaryData &);1;TR;OSRDefInfo;0;0
buildOSRDefs;buildOSRDefs(TR::Node *,void *,class TR_OSRPoint *,class TR_OSRPoint *,TR::Node *,class TR_UseDefInfo::AuxiliaryData &);0;TR;OSRDefInfo;0;0
buildUseDefs;buildUseDefs(TR::Node *,void *,class TR_BitVector &,TR::Node *,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
buildUseDefs;buildUseDefs(void *,class TR_UseDefInfo::AuxiliaryData &);0;TR;UseDefInfo;0;0
buildValueNumbersToMemorySymbolsMap;buildValueNumbersToMemorySymbolsMap();1;TR;UseDefInfo;0;0
canComputeReachingDefs;canComputeReachingDefs();1;TR;UseDefInfo;0;0
childIndexIndicatesImplicitStore;childIndexIndicatesImplicitStore(TR::Node *,int32_t);1;TR;UseDefInfo;0;0
clearNode;clearNode(int32_t);1;TR;UseDefInfo;0;0
clearUseDef;clearUseDef(int32_t);1;TR;UseDefInfo;0;0
comp;comp();1;TR;UseDefInfo;0;0
dereferenceDef;dereferenceDef(BitVector &,int32_t,BitVector &);1;TR;UseDefInfo;0;0
dereferenceDefs;dereferenceDefs(int32_t,BitVector &,BitVector &);1;TR;UseDefInfo;0;0
excludedGlobals;excludedGlobals(TR::Symbol *);1;TR;UseDefInfo;0;0
fillInDataStructures;fillInDataStructures(class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
findAndPopulateVolatileSymbolsIndex;findAndPopulateVolatileSymbolsIndex(TR::BitVector &);1;TR;UseDefInfo;0;0
findMemorySymbols;findMemorySymbols(TR::Node *);1;TR;UseDefInfo;0;0
findTrivialSymbolsToExclude;findTrivialSymbolsToExclude(TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
findUseDefNodes;findUseDefNodes(TR::Block *,TR::Node *,TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &,TR::deque<uint32_t, TR::Region &> &,_Bool);1;TR;UseDefInfo;0;0
getBitVectorSize;getBitVectorSize();1;TR;UseDefInfo;0;0
getDefiningLoads;getDefiningLoads(BitVector &,TR::Node *);1;TR;UseDefInfo;0;0
getDefiningLoads_ref;getDefiningLoads_ref(TR::Node *);1;TR;UseDefInfo;0;0
getDefsForSymbol;getDefsForSymbol(class TR_BitVector &,int32_t,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
getDefsForSymbolIsZero;getDefsForSymbolIsZero(int32_t,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
getExpandedTotalNodes;getExpandedTotalNodes();1;TR;UseDefInfo;0;0
getFirstDefIndex;getFirstDefIndex();1;TR;UseDefInfo;0;0
getFirstRealDefIndex;getFirstRealDefIndex();1;TR;UseDefInfo;0;0
getFirstUseIndex;getFirstUseIndex();1;TR;UseDefInfo;0;0
getLastDefIndex;getLastDefIndex();1;TR;UseDefInfo;0;0
getLastUseIndex;getLastUseIndex();1;TR;UseDefInfo;0;0
getMemorySymbolIndex;getMemorySymbolIndex(TR::Node *);1;TR;UseDefInfo;0;0
getNode;getNode(int32_t);1;TR;UseDefInfo;0;0
getNumAliases;getNumAliases(TR::SymbolReference *,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
getNumDefNodes;getNumDefNodes();1;TR;UseDefInfo;0;0
getNumDefOnlyNodes;getNumDefOnlyNodes();1;TR;UseDefInfo;0;0
getNumDefsOnEntry;getNumDefsOnEntry();1;TR;UseDefInfo;0;0
getNumExpandedDefNodes;getNumExpandedDefNodes();1;TR;UseDefInfo;0;0
getNumExpandedDefsOnEntry;getNumExpandedDefsOnEntry();1;TR;UseDefInfo;0;0
getNumExpandedUseNodes;getNumExpandedUseNodes();1;TR;UseDefInfo;0;0
getNumIrrelevantStores;getNumIrrelevantStores();1;TR;UseDefInfo;0;0
getNumSymbols;getNumSymbols();1;TR;UseDefInfo;0;0
getNumUseNodes;getNumUseNodes();1;TR;UseDefInfo;0;0
getSingleDefiningLoad;getSingleDefiningLoad(TR::Node *);1;TR;UseDefInfo;0;0
getSymRefIndexFromUseDefIndex;getSymRefIndexFromUseDefIndex(int32_t);1;TR;UseDefInfo;0;0
getTotalNodes;getTotalNodes();1;TR;UseDefInfo;0;0
getTreeTop;getTreeTop(int32_t);1;TR;UseDefInfo;0;0
getUseDef;getUseDef(BitVector &,int32_t);1;TR;UseDefInfo;0;0
getUseDefIsZero;getUseDefIsZero(int32_t);1;TR;UseDefInfo;0;0
getUseDef_noExpansion;getUseDef_noExpansion(BitVector &,int32_t);1;TR;UseDefInfo;0;0
getUseDef_ref;getUseDef_ref(int32_t,BitVector *);1;TR;UseDefInfo;0;0
getUseDef_ref_body;getUseDef_ref_body(int32_t,class TR_BitVector *,class TR_UseDefInfo::BitVector *);1;TR;UseDefInfo;0;0
getUsesFromDef;getUsesFromDef(BitVector &,int32_t,_Bool);1;TR;UseDefInfo;0;0
getUsesFromDefIsZero;getUsesFromDefIsZero(int32_t,_Bool);1;TR;UseDefInfo;0;0
getUsesFromDef_ref;getUsesFromDef_ref(int32_t,_Bool);1;TR;UseDefInfo;0;0
hasGlobalsUseDefs;hasGlobalsUseDefs();1;TR;UseDefInfo;0;0
hasLoadsAsDefs;hasLoadsAsDefs();1;TR;UseDefInfo;0;0
indexSymbolsAndNodes;indexSymbolsAndNodes(class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
infoIsValid;infoIsValid();1;TR;UseDefInfo;0;0
insertData;insertData(TR::Block *,TR::Node *,TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &,TR::SparseBitVector &,_Bool);1;TR;UseDefInfo;0;0
invalidateUseDefInfo;invalidateUseDefInfo();1;TR;UseDefInfo;0;0
isChildUse;isChildUse(TR::Node *,int32_t);1;TR;UseDefInfo;0;0
isDefIndex;isDefIndex(uint32_t);1;TR;UseDefInfo;0;0
isExpandedDefIndex;isExpandedDefIndex(uint32_t);1;TR;UseDefInfo;0;0
isExpandedUseDefIndex;isExpandedUseDefIndex(uint32_t);1;TR;UseDefInfo;0;0
isExpandedUseIndex;isExpandedUseIndex(uint32_t);1;TR;UseDefInfo;0;0
isLoadAddrUse;isLoadAddrUse(TR::Node *);1;TR;UseDefInfo;0;0
isPreciseDef;isPreciseDef(TR::Node *,TR::Node *);1;TR;UseDefInfo;0;0
isTrivialUseDefNode;isTrivialUseDefNode(TR::Node *,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
isTrivialUseDefNodeImpl;isTrivialUseDefNodeImpl(TR::Node *,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
isTrivialUseDefSymRef;isTrivialUseDefSymRef(TR::SymbolReference *,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
isUseIndex;isUseIndex(uint32_t);1;TR;UseDefInfo;0;0
isValidAutoOrParm;isValidAutoOrParm(TR::SymbolReference *);1;TR;UseDefInfo;0;0
operator delete;operator delete(void *,size_t);1;TR;UseDefInfo;0;0
operator new;operator new(size_t,TR::Allocator);1;TR;UseDefInfo;0;0
operator=;operator=(const class TR_UseDefInfo &);1;TR;UseDefInfo;1;0
operator=;operator=(const class TR_OSRDefInfo &);0;TR;OSRDefInfo;1;0
operator=;operator=(class TR_OSRDefInfo &&);0;TR;OSRDefInfo;1;0
optimizer;optimizer();1;TR;UseDefInfo;0;0
performAnalysis;performAnalysis(class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;1
performFurtherAnalysis;performFurtherAnalysis(class TR_UseDefInfo::AuxiliaryData &);1;TR;OSRDefInfo;0;0
prepareUseDefInfo;prepareUseDefInfo(_Bool,_Bool,_Bool,_Bool);1;TR;UseDefInfo;0;0
processReachingDefinition;processReachingDefinition(void *,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;1
resetDefUseInfo;resetDefUseInfo();1;TR;UseDefInfo;0;0
resetUseDef;resetUseDef(int32_t,int32_t);1;TR;UseDefInfo;0;0
setSingleDefiningLoad;setSingleDefiningLoad(int32_t,BitVector &,BitVector &);1;TR;UseDefInfo;0;0
setUseDef;setUseDef(int32_t,int32_t);1;TR;UseDefInfo;0;0
setVolatileSymbolsIndexAndRecurse;setVolatileSymbolsIndexAndRecurse(TR::BitVector &,int32_t);1;TR;UseDefInfo;0;0
shouldIndexVolatileSym;shouldIndexVolatileSym(TR::SymbolReference *,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
skipAnalyzingForCompileTime;skipAnalyzingForCompileTime(TR::Node *,TR::Block *,TR::Compilation *,class TR_UseDefInfo::AuxiliaryData &);1;TR;UseDefInfo;0;0
trHeapMemory;trHeapMemory();1;TR;UseDefInfo;0;0
trMemory;trMemory();1;TR;UseDefInfo;0;0
trStackMemory;trStackMemory();1;TR;UseDefInfo;0;0
trace;trace();1;TR;UseDefInfo;0;0
~TR_OSRDefInfo;~TR_OSRDefInfo();1;TR;OSRDefInfo;1;1
~TR_UseDefInfo;~TR_UseDefInfo();1;TR;UseDefInfo;0;1
TR_OSRExceptionEdgeRemoval;TR_OSRExceptionEdgeRemoval(class TR_OSRExceptionEdgeRemoval &&);1;TR;OSRExceptionEdgeRemoval;1;0
TR_OSRExceptionEdgeRemoval;TR_OSRExceptionEdgeRemoval(TR::OptimizationManager *);0;TR;OSRExceptionEdgeRemoval;0;0
TR_OSRExceptionEdgeRemoval;TR_OSRExceptionEdgeRemoval(const class TR_OSRExceptionEdgeRemoval &);0;TR;OSRExceptionEdgeRemoval;1;0
addDeadStores;addDeadStores(TR::Block *,class TR_BitVector &,_Bool);1;TR;OSRExceptionEdgeRemoval;0;0
create;create(TR::OptimizationManager *);1;TR;OSRExceptionEdgeRemoval;0;0
operator=;operator=(const class TR_OSRExceptionEdgeRemoval &);0;TR;OSRExceptionEdgeRemoval;1;0
operator=;operator=(class TR_OSRExceptionEdgeRemoval &&);0;TR;OSRExceptionEdgeRemoval;1;0
removeDeadStores;removeDeadStores(TR::Block *,class TR_BitVector &);1;TR;OSRExceptionEdgeRemoval;0;0
~TR_OSRExceptionEdgeRemoval;~TR_OSRExceptionEdgeRemoval();1;TR;OSRExceptionEdgeRemoval;1;1
TR_OSRLiveRangeAnalysis;TR_OSRLiveRangeAnalysis(class TR_OSRLiveRangeAnalysis &&);1;TR;OSRLiveRangeAnalysis;1;0
TR_OSRLiveRangeAnalysis;TR_OSRLiveRangeAnalysis(const class TR_OSRLiveRangeAnalysis &);0;TR;OSRLiveRangeAnalysis;1;0
TR_OSRLiveRangeAnalysis;TR_OSRLiveRangeAnalysis(TR::OptimizationManager *);0;TR;OSRLiveRangeAnalysis;0;0
buildDeadPendingPushSlotsInfo;buildDeadPendingPushSlotsInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *);1;TR;OSRLiveRangeAnalysis;0;0
buildDeadSlotsInfo;buildDeadSlotsInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *,int32_t *,_Bool);1;TR;OSRLiveRangeAnalysis;0;0
buildOSRLiveRangeInfo;buildOSRLiveRangeInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *,int32_t *,int32_t,class TR_OSRMethodData *,_Bool);1;TR;OSRLiveRangeAnalysis;0;0
buildOSRSlotSharingInfo;buildOSRSlotSharingInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *,int32_t *,class TR_BitVector *);1;TR;OSRLiveRangeAnalysis;0;0
collectPendingPush;collectPendingPush(TR_ByteCodeInfo,TR::TreeTop *,class TR_BitVector *);1;TR;OSRLiveRangeAnalysis;0;0
create;create(TR::OptimizationManager *);1;TR;OSRLiveRangeAnalysis;0;0
fullAnalysis;fullAnalysis(_Bool,_Bool);1;TR;OSRLiveRangeAnalysis;0;0
intersectWithExistingDeadSlots;intersectWithExistingDeadSlots(class TR_OSRPoint *,class TR_BitVector *,class TR_BitVector *,_Bool);1;TR;OSRLiveRangeAnalysis;0;0
maintainLiveness;maintainLiveness(TR::Node *,TR::Node *,int32_t,vcount_t,class TR_Liveness *,class TR_BitVector *,TR::Block *);1;TR;OSRLiveRangeAnalysis;0;0
operator=;operator=(class TR_OSRLiveRangeAnalysis &&);0;TR;OSRLiveRangeAnalysis;1;0
operator=;operator=(const class TR_OSRLiveRangeAnalysis &);0;TR;OSRLiveRangeAnalysis;1;0
partialAnalysis;partialAnalysis();1;TR;OSRLiveRangeAnalysis;0;0
pendingPushLiveRangeInfo;pendingPushLiveRangeInfo(TR::Node *,class TR_BitVector *,class TR_BitVector *,class TR_OSRPoint *,class TR_OSRMethodData *);1;TR;OSRLiveRangeAnalysis;0;0
pendingPushSlotSharingInfo;pendingPushSlotSharingInfo(TR::Node *,class TR_BitVector *,class TR_BitVector *,class TR_OSRPoint *);1;TR;OSRLiveRangeAnalysis;0;0
shouldPerformAnalysis;shouldPerformAnalysis();1;TR;OSRLiveRangeAnalysis;0;0
~TR_OSRLiveRangeAnalysis;~TR_OSRLiveRangeAnalysis();1;TR;OSRLiveRangeAnalysis;1;1
TR_PartialRedundancy;TR_PartialRedundancy(class TR_PartialRedundancy &&);1;TR;PartialRedundancy;1;0
TR_PartialRedundancy;TR_PartialRedundancy(TR::OptimizationManager *);0;TR;PartialRedundancy;0;0
TR_PartialRedundancy;TR_PartialRedundancy(const class TR_PartialRedundancy &);0;TR;PartialRedundancy;1;0
allocateContainer;allocateContainer(int32_t);1;TR;PartialRedundancy;0;0
calculateGlobalRegisterWeightsBasedOnStructure;calculateGlobalRegisterWeightsBasedOnStructure(class TR_Structure *,int32_t *);1;TR;PartialRedundancy;0;0
collectAllNodesToBeAnchored;collectAllNodesToBeAnchored(List<TR::Node> *,TR::Node *,vcount_t);1;TR;PartialRedundancy;0;0
create;create(TR::OptimizationManager *);1;TR;PartialRedundancy;0;0
duplicateExact;duplicateExact(TR::Node *,List<TR::Node> *,List<TR::Node> *,vcount_t);1;TR;PartialRedundancy;0;0
eliminateRedundantComputations;eliminateRedundantComputations(TR::Block *,TR::Node **,ContainerType **,TR::TreeTop *);1;TR;PartialRedundancy;0;0
eliminateRedundantSupportedNodes;eliminateRedundantSupportedNodes(TR::Node *,TR::Node *,_Bool,TR::TreeTop *,int32_t,vcount_t,ContainerType *,ContainerType *,TR::Node **);1;TR;PartialRedundancy;0;0
getAlreadyPresentOptimalNode;getAlreadyPresentOptimalNode(TR::Node *,int32_t,vcount_t,_Bool &);1;TR;PartialRedundancy;0;0
getGlobalRegisterWeights;getGlobalRegisterWeights();1;TR;PartialRedundancy;0;0
getNumNodes;getNumNodes();1;TR;PartialRedundancy;0;0
getNumberOfBits;getNumberOfBits();1;TR;PartialRedundancy;0;1
getOptSetInfo;getOptSetInfo();1;TR;PartialRedundancy;0;0
getOrigOptSetInfo;getOrigOptSetInfo();1;TR;PartialRedundancy;0;0
getRednSetInfo;getRednSetInfo();1;TR;PartialRedundancy;0;0
getSymOptimalNodes;getSymOptimalNodes();1;TR;PartialRedundancy;0;0
getUnavailableSetInfo;getUnavailableSetInfo();1;TR;PartialRedundancy;0;0
ignoreNode;ignoreNode(TR::Node *);1;TR;PartialRedundancy;0;0
invalidateOptimalComputation;invalidateOptimalComputation(int32_t);1;TR;PartialRedundancy;0;0
isNodeAnImplicitNoOp;isNodeAnImplicitNoOp(TR::Node *);1;TR;PartialRedundancy;0;0
isNotPrevTreeStoreIntoFloatTemp;isNotPrevTreeStoreIntoFloatTemp(TR::Symbol *);1;TR;PartialRedundancy;0;0
isOpCodeAnImplicitNoOp;isOpCodeAnImplicitNoOp(TR::ILOpCode &);1;TR;PartialRedundancy;0;0
isSupportedOpCode;isSupportedOpCode(TR::Node *,TR::Node *);1;TR;PartialRedundancy;0;0
operator=;operator=(class TR_PartialRedundancy &&);0;TR;PartialRedundancy;1;0
operator=;operator=(const class TR_PartialRedundancy &);0;TR;PartialRedundancy;1;0
placeComputationsOptimally;placeComputationsOptimally(TR::Block *,TR::Node ***);1;TR;PartialRedundancy;0;0
placeInGlobalRegisters;placeInGlobalRegisters(TR::Block *);1;TR;PartialRedundancy;0;0
printTrees;printTrees();1;TR;PartialRedundancy;0;0
processReusedNode;processReusedNode(TR::Node *,TR::ILOpCodes,TR::SymbolReference *,int);1;TR;PartialRedundancy;0;0
replaceOptimalSubNodes;replaceOptimalSubNodes(TR::TreeTop *,TR::Node *,TR::Node *,int32_t,TR::Node *,TR::Node *,_Bool,int32_t,vcount_t);1;TR;PartialRedundancy;0;0
~TR_PartialRedundancy;~TR_PartialRedundancy();1;TR;PartialRedundancy;1;1
TR_PrefetchInsertion;TR_PrefetchInsertion(class TR_PrefetchInsertion &&);1;TR;PrefetchInsertion;1;0
TR_PrefetchInsertion;TR_PrefetchInsertion(const class TR_PrefetchInsertion &);0;TR;PrefetchInsertion;1;0
TR_PrefetchInsertion;TR_PrefetchInsertion(TR::OptimizationManager *);0;TR;PrefetchInsertion;0;0
collectLoops;collectLoops(class TR_Structure *);1;TR;PrefetchInsertion;0;0
create;create(TR::OptimizationManager *);1;TR;PrefetchInsertion;0;0
createDeltaNode;createDeltaNode(TR::Node *,TR::Node *,int32_t);1;TR;PrefetchInsertion;0;0
examineLoop;examineLoop(class TR_RegionStructure *);1;TR;PrefetchInsertion;0;0
examineNode;examineNode(TR::TreeTop *,TR::Block *,TR::Node *,intptrj_t,class TR_RegionStructure *);1;TR;PrefetchInsertion;0;0
getClosestPIV;getClosestPIV(TR::Block *);1;TR;PrefetchInsertion;0;0
insertPrefetchInstructions;insertPrefetchInstructions();1;TR;PrefetchInsertion;0;0
isBIV;isBIV(TR::SymbolReference *,TR::Block *,class TR_BasicInductionVariable *&);1;TR;PrefetchInsertion;0;0
operator=;operator=(class TR_PrefetchInsertion &&);0;TR;PrefetchInsertion;1;0
operator=;operator=(const class TR_PrefetchInsertion &);0;TR;PrefetchInsertion;1;0
~TR_PrefetchInsertion;~TR_PrefetchInsertion();1;TR;PrefetchInsertion;1;1
TR_RedundantAsyncCheckRemoval;TR_RedundantAsyncCheckRemoval(const class TR_RedundantAsyncCheckRemoval &);1;TR;RedundantAsyncCheckRemoval;1;0
TR_RedundantAsyncCheckRemoval;TR_RedundantAsyncCheckRemoval(class TR_RedundantAsyncCheckRemoval &&);0;TR;RedundantAsyncCheckRemoval;1;0
TR_RedundantAsyncCheckRemoval;TR_RedundantAsyncCheckRemoval(TR::OptimizationManager *);0;TR;RedundantAsyncCheckRemoval;0;0
callDoesAnImplicitAsyncCheck;callDoesAnImplicitAsyncCheck(TR::Node *);1;TR;RedundantAsyncCheckRemoval;0;0
computeCoverageInfo;computeCoverageInfo(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);1;TR;RedundantAsyncCheckRemoval;0;0
containsImplicitInternalPointer;containsImplicitInternalPointer(TR::Node *);1;TR;RedundantAsyncCheckRemoval;0;0
create;create(TR::OptimizationManager *);1;TR;RedundantAsyncCheckRemoval;0;0
enqueueSinks;enqueueSinks(class TR_RegionStructure *,TR_Queue<class TR_StructureSubGraphNode> *,_Bool);1;TR;RedundantAsyncCheckRemoval;0;0
estimateLoopIterations;estimateLoopIterations(class TR_RegionStructure *);1;TR;RedundantAsyncCheckRemoval;0;0
findShallowestCommonCaller;findShallowestCommonCaller(int32_t,int32_t);1;TR;RedundantAsyncCheckRemoval;0;0
findSmallestAncestor;findSmallestAncestor();1;TR;RedundantAsyncCheckRemoval;0;0
getNearestAncestors;getNearestAncestors(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);1;TR;RedundantAsyncCheckRemoval;0;0
hasEarlyExit;hasEarlyExit(class TR_RegionStructure *);1;TR;RedundantAsyncCheckRemoval;0;0
initialize;initialize(class TR_Structure *);1;TR;RedundantAsyncCheckRemoval;0;0
insertAsyncCheckOnSubTree;insertAsyncCheckOnSubTree(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);1;TR;RedundantAsyncCheckRemoval;0;0
isMaxLoopIterationGuardedLoop;isMaxLoopIterationGuardedLoop(class TR_RegionStructure *);1;TR;RedundantAsyncCheckRemoval;0;0
markAncestors;markAncestors(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);1;TR;RedundantAsyncCheckRemoval;0;0
markExtendees;markExtendees(TR::Block *,_Bool);1;TR;RedundantAsyncCheckRemoval;0;0
operator=;operator=(class TR_RedundantAsyncCheckRemoval &&);0;TR;RedundantAsyncCheckRemoval;1;0
operator=;operator=(const class TR_RedundantAsyncCheckRemoval &);0;TR;RedundantAsyncCheckRemoval;1;0
originatesFromShortRunningMethod;originatesFromShortRunningMethod(class TR_RegionStructure *);1;TR;RedundantAsyncCheckRemoval;0;0
perform;perform(class TR_Structure *,_Bool);0;TR;RedundantAsyncCheckRemoval;0;0
performRegionalBackwardAnalysis;performRegionalBackwardAnalysis(class TR_RegionStructure *,_Bool);1;TR;RedundantAsyncCheckRemoval;0;0
processAcyclicRegion;processAcyclicRegion(class TR_RegionStructure *);1;TR;RedundantAsyncCheckRemoval;0;0
processBlockStructure;processBlockStructure(class TR_BlockStructure *);1;TR;RedundantAsyncCheckRemoval;0;0
processImproperRegion;processImproperRegion(class TR_RegionStructure *);1;TR;RedundantAsyncCheckRemoval;0;0
processNaturalLoop;processNaturalLoop(class TR_RegionStructure *,_Bool);1;TR;RedundantAsyncCheckRemoval;0;0
propagateBackwards;propagateBackwards(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *);1;TR;RedundantAsyncCheckRemoval;0;0
solidifySoftAsyncChecks;solidifySoftAsyncChecks(class TR_StructureSubGraphNode *);1;TR;RedundantAsyncCheckRemoval;0;0
~TR_RedundantAsyncCheckRemoval;~TR_RedundantAsyncCheckRemoval();1;TR;RedundantAsyncCheckRemoval;1;1
TR_RedundantExpressionAdjustment;TR_RedundantExpressionAdjustment(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_ExceptionCheckMotion *);1;TR;RedundantExpressionAdjustment;0;0
analyzeNode;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,ContainerType *);0;TR;RedundantExpressionAdjustment;0;1
operator=;operator=(const class TR_RedundantExpressionAdjustment &);0;TR;RedundantExpressionAdjustment;1;0
operator=;operator=(class TR_RedundantExpressionAdjustment &&);0;TR;RedundantExpressionAdjustment;1;0
~TR_RedundantExpressionAdjustment;~TR_RedundantExpressionAdjustment();1;TR;RedundantExpressionAdjustment;1;1
TR_ShrinkWrap;TR_ShrinkWrap(const class TR_ShrinkWrap &);1;TR;ShrinkWrap;1;0
TR_ShrinkWrap;TR_ShrinkWrap(class TR_ShrinkWrap &&);0;TR;ShrinkWrap;1;0
TR_ShrinkWrap;TR_ShrinkWrap(TR::OptimizationManager *);0;TR;ShrinkWrap;0;0
analyzeInstructions;analyzeInstructions();1;TR;ShrinkWrap;0;0
blockEndsInReturn;blockEndsInReturn(int32_t,_Bool &);1;TR;ShrinkWrap;0;0
composeSavesRestores;composeSavesRestores();1;TR;ShrinkWrap;0;0
computeSaveRestoreSets;computeSaveRestoreSets(class TR_RegisterAnticipatability &,class TR_RegisterAvailability &);1;TR;ShrinkWrap;0;0
create;create(TR::OptimizationManager *);1;TR;ShrinkWrap;0;0
doPlacement;doPlacement(class TR_RegisterAnticipatability &,class TR_RegisterAvailability &);1;TR;ShrinkWrap;0;0
findEdgeInfo;findEdgeInfo(TR::CFGEdge *);1;TR;ShrinkWrap;0;0
findJumpInstructionsInBlock;findJumpInstructionsInBlock(int32_t,TR::list<TR::Instruction *> *);1;TR;ShrinkWrap;0;0
findJumpInstructionsInCodeRegion;findJumpInstructionsInCodeRegion(TR::Instruction *,TR::Instruction *,CS2::HashTable<TR::Instruction *, _Bool, TR::Allocator> &);1;TR;ShrinkWrap;0;0
findMultiples;findMultiples(class TR_BitVector *,TR::Instruction *,_Bool,_Bool);1;TR;ShrinkWrap;0;0
findPreservedRegisterInfo;findPreservedRegisterInfo(int32_t);1;TR;ShrinkWrap;0;0
findReturnBlockInfo;findReturnBlockInfo(int32_t);1;TR;ShrinkWrap;0;0
findReturnInBlock;findReturnInBlock(int32_t);1;TR;ShrinkWrap;0;0
markInstrsInBlock;markInstrsInBlock(int32_t);1;TR;ShrinkWrap;0;0
operator=;operator=(const class TR_ShrinkWrap &);0;TR;ShrinkWrap;1;0
operator=;operator=(class TR_ShrinkWrap &&);0;TR;ShrinkWrap;1;0
processInstructionsInSnippet;processInstructionsInSnippet(TR::Instruction *,int32_t);1;TR;ShrinkWrap;0;0
updateMapWithRSD;updateMapWithRSD(TR::Instruction *,int32_t);1;TR;ShrinkWrap;0;0
~TR_ShrinkWrap;~TR_ShrinkWrap();1;TR;ShrinkWrap;1;1
TR_StripMiner;TR_StripMiner(class TR_StripMiner &&);1;TR;StripMiner;1;0
TR_StripMiner;TR_StripMiner(const class TR_StripMiner &);0;TR;StripMiner;1;0
TR_StripMiner;TR_StripMiner(TR::OptimizationManager *);0;TR;StripMiner;0;0
checkIfIncrementalIncreasesOfPIV;checkIfIncrementalIncreasesOfPIV(struct TR_StripMiner::LoopInfo *);1;TR;StripMiner;0;0
collectLoops;collectLoops(class TR_Structure *);1;TR;StripMiner;0;0
create;create(TR::OptimizationManager *);1;TR;StripMiner;0;0
createGotoBlock;createGotoBlock(TR::Block *,TR::Block *);1;TR;StripMiner;0;0
createLoopTest;createLoopTest(struct TR_StripMiner::LoopInfo *,TR_ClonedLoopType);1;TR;StripMiner;0;0
createStartOffsetLoop;createStartOffsetLoop(struct TR_StripMiner::LoopInfo *,TR::Block *);1;TR;StripMiner;0;0
duplicateLoop;duplicateLoop(struct TR_StripMiner::LoopInfo *,TR_ClonedLoopType);1;TR;StripMiner;0;0
examineLoop;examineLoop(struct TR_StripMiner::LoopInfo *,TR_ClonedLoopType,_Bool);1;TR;StripMiner;0;0
examineNode;examineNode(struct TR_StripMiner::LoopInfo *,TR::Node *,TR::Node *,TR::SymbolReference *,vcount_t,TR_ClonedLoopType,_Bool,int32_t);1;TR;StripMiner;0;0
findLeavesInList;findLeavesInList();1;TR;StripMiner;0;0
findPivInSimpleForm;findPivInSimpleForm(TR::Node *,TR::SymbolReference *);1;TR;StripMiner;0;0
getLoopPreHeader;getLoopPreHeader(class TR_Structure *);1;TR;StripMiner;0;0
getLoopTest;getLoopTest(class TR_Structure *,TR::Block *);1;TR;StripMiner;0;0
operator=;operator=(class TR_StripMiner &&);0;TR;StripMiner;1;0
operator=;operator=(const class TR_StripMiner &);0;TR;StripMiner;1;0
redirect;redirect(TR::Block *,TR::Block *,TR::Block *);1;TR;StripMiner;0;0
replaceLoopPivs;replaceLoopPivs(struct TR_StripMiner::LoopInfo *,TR::ILOpCodes,TR::Node *,TR::SymbolReference *,TR_ClonedLoopType);1;TR;StripMiner;0;0
stripMineLoop;stripMineLoop(struct TR_StripMiner::LoopInfo *,TR::Block *);1;TR;StripMiner;0;0
transformLoop;transformLoop(struct TR_StripMiner::LoopInfo *);1;TR;StripMiner;0;0
transformLoops;transformLoops();1;TR;StripMiner;0;0
~TR_StripMiner;~TR_StripMiner();1;TR;StripMiner;1;1
TR_TrivialSinkStores;TR_TrivialSinkStores(class TR_TrivialSinkStores &&);1;TR;TrivialSinkStores;1;0
TR_TrivialSinkStores;TR_TrivialSinkStores(const class TR_TrivialSinkStores &);0;TR;TrivialSinkStores;1;0
TR_TrivialSinkStores;TR_TrivialSinkStores(TR::OptimizationManager *);0;TR;TrivialSinkStores;0;0
create;create(TR::OptimizationManager *);1;TR;TrivialSinkStores;0;0
duplicateNodeForSideExit;duplicateNodeForSideExit(TR::Node *);1;TR;TrivialSinkStores;0;0
duplicateTreeForSideExit;duplicateTreeForSideExit(TR::TreeTop *);1;TR;TrivialSinkStores;0;0
genSideExitTree;genSideExitTree(TR::TreeTop *,TR::Block *,_Bool);1;TR;TrivialSinkStores;0;0
operator=;operator=(class TR_TrivialSinkStores &&);0;TR;TrivialSinkStores;1;0
operator=;operator=(const class TR_TrivialSinkStores &);0;TR;TrivialSinkStores;1;0
passesAnchoringTest;passesAnchoringTest(class TR_MovableStore *,_Bool,_Bool);1;TR;TrivialSinkStores;0;0
storeCanMoveThroughBlock;storeCanMoveThroughBlock(class TR_BitVector *,class TR_BitVector *,int32_t);0;TR;TrivialSinkStores;0;1
~TR_TrivialSinkStores;~TR_TrivialSinkStores();1;TR;TrivialSinkStores;1;1
TR_VirtualGuardHeadMerger;TR_VirtualGuardHeadMerger(class TR_VirtualGuardHeadMerger &&);1;TR;VirtualGuardHeadMerger;1;0
TR_VirtualGuardHeadMerger;TR_VirtualGuardHeadMerger(TR::OptimizationManager *);0;TR;VirtualGuardHeadMerger;0;0
TR_VirtualGuardHeadMerger;TR_VirtualGuardHeadMerger(const class TR_VirtualGuardHeadMerger &);0;TR;VirtualGuardHeadMerger;1;0
create;create(TR::OptimizationManager *);1;TR;VirtualGuardHeadMerger;0;0
operator=;operator=(const class TR_VirtualGuardHeadMerger &);0;TR;VirtualGuardHeadMerger;1;0
operator=;operator=(class TR_VirtualGuardHeadMerger &&);0;TR;VirtualGuardHeadMerger;1;0
tailSplitBlock;tailSplitBlock(TR::Block *,TR::Block *);1;TR;VirtualGuardHeadMerger;0;0
~TR_VirtualGuardHeadMerger;~TR_VirtualGuardHeadMerger();1;TR;VirtualGuardHeadMerger;1;1
TR_VirtualGuardTailSplitter;TR_VirtualGuardTailSplitter(class TR_VirtualGuardTailSplitter &&);1;TR;VirtualGuardTailSplitter;1;0
TR_VirtualGuardTailSplitter;TR_VirtualGuardTailSplitter(TR::OptimizationManager *);0;TR;VirtualGuardTailSplitter;0;0
TR_VirtualGuardTailSplitter;TR_VirtualGuardTailSplitter(const class TR_VirtualGuardTailSplitter &);0;TR;VirtualGuardTailSplitter;1;0
create;create(TR::OptimizationManager *);1;TR;VirtualGuardTailSplitter;0;0
getFirstCallNode;getFirstCallNode(TR::Block *);1;TR;VirtualGuardTailSplitter;0;0
getGuard;getGuard(TR::Node *);1;TR;VirtualGuardTailSplitter;0;0
getGuard;getGuard(TR::Block *);0;TR;VirtualGuardTailSplitter;0;0
getGuard;getGuard(uint32_t);0;TR;VirtualGuardTailSplitter;0;0
getVirtualGuardInfo;getVirtualGuardInfo(TR::Block *);1;TR;VirtualGuardTailSplitter;0;0
initializeDataStructures;initializeDataStructures();1;TR;VirtualGuardTailSplitter;0;0
isBlockInInlinedCallTreeOf;isBlockInInlinedCallTreeOf(class TR_VirtualGuardTailSplitter::VGInfo *,TR::Block *);1;TR;VirtualGuardTailSplitter;0;0
isKill;isKill(TR::Node *);1;TR;VirtualGuardTailSplitter;0;0
isKill;isKill(TR::Block *);0;TR;VirtualGuardTailSplitter;0;0
lookAheadAndSplit;lookAheadAndSplit(class TR_VirtualGuardTailSplitter::VGInfo *,List<TR::Block> *);1;TR;VirtualGuardTailSplitter;0;0
operator=;operator=(class TR_VirtualGuardTailSplitter &&);0;TR;VirtualGuardTailSplitter;1;0
operator=;operator=(const class TR_VirtualGuardTailSplitter &);0;TR;VirtualGuardTailSplitter;1;0
putGuard;putGuard(uint32_t,class TR_VirtualGuardTailSplitter::VGInfo *);1;TR;VirtualGuardTailSplitter;0;0
recognizeVirtualGuard;recognizeVirtualGuard(TR::Block *,class TR_VirtualGuardTailSplitter::VGInfo *);1;TR;VirtualGuardTailSplitter;0;0
remergeGuard;remergeGuard(class TR_BlockCloner &,class TR_VirtualGuardTailSplitter::VGInfo *);1;TR;VirtualGuardTailSplitter;0;0
splitLinear;splitLinear(TR::Block *,TR::Block *);1;TR;VirtualGuardTailSplitter;0;0
transformLinear;transformLinear(TR::Block *,TR::Block *);1;TR;VirtualGuardTailSplitter;0;0
~TR_VirtualGuardTailSplitter;~TR_VirtualGuardTailSplitter();1;TR;VirtualGuardTailSplitter;1;1
TR_BlockOrderingOptimization;TR_BlockOrderingOptimization(class TR_BlockOrderingOptimization &&);1;TR;BlockOrderingOptimization;1;0
TR_BlockOrderingOptimization;TR_BlockOrderingOptimization(const class TR_BlockOrderingOptimization &);0;TR;BlockOrderingOptimization;1;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;CFG;0;0
TR_OrderBlocks;TR_OrderBlocks(const class TR_OrderBlocks &);1;TR;OrderBlocks;1;0
TR_OrderBlocks;TR_OrderBlocks(class TR_OrderBlocks &&);0;TR;OrderBlocks;1;0
TR_OSRDefInfo;TR_OSRDefInfo(const class TR_OSRDefInfo &);1;TR;OSRDefInfo;1;0
TR_OSRDefInfo;TR_OSRDefInfo(TR::OptimizationManager *);0;TR;OSRDefInfo;0;0
TR_BitVectorCursor;TR_BitVectorCursor(class TR_BitVectorCursor &&);1;TR;BitVectorCursor;1;0
TR_BitVectorCursor;TR_BitVectorCursor(const class TR_BitVectorCursor &);0;TR;BitVectorCursor;1;0
TR_ExceptionCheckMotion;TR_ExceptionCheckMotion(const class TR_ExceptionCheckMotion &);1;TR;ExceptionCheckMotion;1;0
TR_ExceptionCheckMotion;TR_ExceptionCheckMotion(class TR_ExceptionCheckMotion &&);0;TR;ExceptionCheckMotion;1;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,class TR_RegionStructure *);1;TR;ExceptionCheckMotion;0;0
initializeAnalysisInfo;initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,class TR_Structure *);0;TR;ExceptionCheckMotion;0;0
TR_Isolatedness;TR_Isolatedness(const class TR_Isolatedness &);1;TR;Isolatedness;1;0
TR_Isolatedness;TR_Isolatedness(class TR_Isolatedness &&);0;TR;Isolatedness;1;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;TR;LocalAnalysis;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Dominators;0;0
TR_RedundantExpressionAdjustment;TR_RedundantExpressionAdjustment(class TR_RedundantExpressionAdjustment &&);1;TR;RedundantExpressionAdjustment;1;0
TR_RedundantExpressionAdjustment;TR_RedundantExpressionAdjustment(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_ExceptionCheckMotion *);0;TR;RedundantExpressionAdjustment;0;0
TR_RedundantExpressionAdjustment;TR_RedundantExpressionAdjustment(const class TR_RedundantExpressionAdjustment &);0;TR;RedundantExpressionAdjustment;1;0
TR_IndirectCallSite;TR_IndirectCallSite(const class TR_IndirectCallSite &);1;TR;IndirectCallSite;1;0
TR_IndirectCallSite;TR_IndirectCallSite(class TR_IndirectCallSite &&);0;TR;IndirectCallSite;1;0
operator delete;operator delete(void *,TR::Region &);1;TR;InlinerTracer;0;0
operator delete;operator delete(void *,size_t);0;TR;InlinerTracer;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;InlinerTracer;0;0
TR_BackwardReachability;TR_BackwardReachability(class TR_BackwardReachability &&);1;TR;BackwardReachability;1;0
TR_BackwardReachability;TR_BackwardReachability(TR::Compilation *);0;TR;BackwardReachability;0;0
TR_BackwardReachability;TR_BackwardReachability(const class TR_BackwardReachability &);0;TR;BackwardReachability;1;0
TR_CanReachGivenBlocks;TR_CanReachGivenBlocks(TR::Compilation *,class TR_BitVector *);1;TR;CanReachGivenBlocks;0;0
TR_ReachabilityAnalysis;TR_ReachabilityAnalysis(class TR_ReachabilityAnalysis &&);1;TR;ReachabilityAnalysis;1;0
TR_ReachabilityAnalysis;TR_ReachabilityAnalysis(const class TR_ReachabilityAnalysis &);0;TR;ReachabilityAnalysis;1;0
TR_ReachabilityAnalysis;TR_ReachabilityAnalysis(TR::Compilation *);0;TR;ReachabilityAnalysis;0;0
comp;comp();1;TR;ReachabilityAnalysis;0;0
getBlock;getBlock(blocknum_t);1;TR;ReachabilityAnalysis;0;0
isOrigin;isOrigin(TR::Block *);1;TR;ReachabilityAnalysis;0;1
operator=;operator=(const class TR_ReachabilityAnalysis &);1;TR;ReachabilityAnalysis;1;0
operator=;operator=(class TR_ReachabilityAnalysis &&);0;TR;ReachabilityAnalysis;1;0
operator=;operator=(const class TR_BackwardReachability &);0;TR;BackwardReachability;1;0
operator=;operator=(class TR_BackwardReachability &&);0;TR;BackwardReachability;1;0
operator=;operator=(const class TR_CanReachGivenBlocks &);0;TR;CanReachGivenBlocks;1;0
operator=;operator=(class TR_CanReachGivenBlocks &&);0;TR;CanReachGivenBlocks;1;0
perform;perform(class TR_BitVector *);1;TR;ReachabilityAnalysis;0;0
propagateInputs;propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);1;TR;ReachabilityAnalysis;0;1
propagateOneInput;propagateOneInput(blocknum_t,blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);1;TR;ReachabilityAnalysis;0;0
traverse;traverse(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);1;TR;ReachabilityAnalysis;0;0
~TR_BackwardReachability;~TR_BackwardReachability();1;TR;BackwardReachability;1;0
~TR_CanReachGivenBlocks;~TR_CanReachGivenBlocks();1;TR;CanReachGivenBlocks;1;0
~TR_ReachabilityAnalysis;~TR_ReachabilityAnalysis();1;TR;ReachabilityAnalysis;1;0
TR_CanBeReachedFromCatchBlock;TR_CanBeReachedFromCatchBlock(TR::Compilation *);1;TR;CanBeReachedFromCatchBlock;0;0
TR_ForwardReachability;TR_ForwardReachability(class TR_ForwardReachability &&);1;TR;ForwardReachability;1;0
TR_ForwardReachability;TR_ForwardReachability(const class TR_ForwardReachability &);0;TR;ForwardReachability;1;0
TR_ForwardReachability;TR_ForwardReachability(TR::Compilation *);0;TR;ForwardReachability;0;0
operator=;operator=(const class TR_ForwardReachability &);0;TR;ForwardReachability;1;0
operator=;operator=(class TR_ForwardReachability &&);0;TR;ForwardReachability;1;0
operator=;operator=(class TR_CanBeReachedFromCatchBlock &&);0;TR;CanBeReachedFromCatchBlock;1;0
operator=;operator=(const class TR_CanBeReachedFromCatchBlock &);0;TR;CanBeReachedFromCatchBlock;1;0
~TR_CanBeReachedFromCatchBlock;~TR_CanBeReachedFromCatchBlock();1;TR;CanBeReachedFromCatchBlock;1;0
~TR_ForwardReachability;~TR_ForwardReachability();1;TR;ForwardReachability;1;0
TR_CanBeReachedWithoutExceptionEdges;TR_CanBeReachedWithoutExceptionEdges(TR::Compilation *);1;TR;CanBeReachedWithoutExceptionEdges;0;0
TR_ForwardReachabilityWithoutExceptionEdges;TR_ForwardReachabilityWithoutExceptionEdges(class TR_ForwardReachabilityWithoutExceptionEdges &&);1;TR;ForwardReachabilityWithoutExceptionEdges;1;0
TR_ForwardReachabilityWithoutExceptionEdges;TR_ForwardReachabilityWithoutExceptionEdges(const class TR_ForwardReachabilityWithoutExceptionEdges &);0;TR;ForwardReachabilityWithoutExceptionEdges;1;0
TR_ForwardReachabilityWithoutExceptionEdges;TR_ForwardReachabilityWithoutExceptionEdges(TR::Compilation *);0;TR;ForwardReachabilityWithoutExceptionEdges;0;0
operator=;operator=(const class TR_ForwardReachabilityWithoutExceptionEdges &);0;TR;ForwardReachabilityWithoutExceptionEdges;1;0
operator=;operator=(class TR_ForwardReachabilityWithoutExceptionEdges &&);0;TR;ForwardReachabilityWithoutExceptionEdges;1;0
operator=;operator=(const class TR_CanBeReachedWithoutExceptionEdges &);0;TR;CanBeReachedWithoutExceptionEdges;1;0
operator=;operator=(class TR_CanBeReachedWithoutExceptionEdges &&);0;TR;CanBeReachedWithoutExceptionEdges;1;0
~TR_CanBeReachedWithoutExceptionEdges;~TR_CanBeReachedWithoutExceptionEdges();1;TR;CanBeReachedWithoutExceptionEdges;1;0
~TR_ForwardReachabilityWithoutExceptionEdges;~TR_ForwardReachabilityWithoutExceptionEdges();1;TR;ForwardReachabilityWithoutExceptionEdges;1;0
TR_CanReachNonColdBlocks;TR_CanReachNonColdBlocks(TR::Compilation *);1;TR;CanReachNonColdBlocks;0;0
operator=;operator=(const class TR_CanReachNonColdBlocks &);0;TR;CanReachNonColdBlocks;1;0
operator=;operator=(class TR_CanReachNonColdBlocks &&);0;TR;CanReachNonColdBlocks;1;0
~TR_CanReachNonColdBlocks;~TR_CanReachNonColdBlocks();1;TR;CanReachNonColdBlocks;1;0
TR_ReachingDefinitions;TR_ReachingDefinitions(class TR_ReachingDefinitions &&);1;TR;ReachingDefinitions;1;0
TR_ReachingDefinitions;TR_ReachingDefinitions(const class TR_ReachingDefinitions &);0;TR;ReachingDefinitions;1;0
TR_ReachingDefinitions;TR_ReachingDefinitions(TR::Compilation *,TR::CFG *,TR::Optimizer *,class TR_UseDefInfo *,class TR_UseDefInfo::AuxiliaryData &,_Bool);0;TR;ReachingDefinitions;0;0
TR_RedundantAsyncCheckRemoval;TR_RedundantAsyncCheckRemoval(class TR_RedundantAsyncCheckRemoval &&);1;TR;RedundantAsyncCheckRemoval;1;0
TR_RedundantAsyncCheckRemoval;TR_RedundantAsyncCheckRemoval(const class TR_RedundantAsyncCheckRemoval &);0;TR;RedundantAsyncCheckRemoval;1;0
TR_RegisterAnticipatability;TR_RegisterAnticipatability(const class TR_RegisterAnticipatability &);1;TR;RegisterAnticipatability;1;0
TR_RegisterAnticipatability;TR_RegisterAnticipatability(class TR_RegisterAnticipatability &&);0;TR;RegisterAnticipatability;1;0
TR_RegisterAnticipatability;TR_RegisterAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool);0;TR;RegisterAnticipatability;0;0
TR_RegisterAvailability;TR_RegisterAvailability(class TR_RegisterAvailability &&);1;TR;RegisterAvailability;1;0
TR_RegisterAvailability;TR_RegisterAvailability(const class TR_RegisterAvailability &);0;TR;RegisterAvailability;1;0
TR_RegisterAvailability;TR_RegisterAvailability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool);0;TR;RegisterAvailability;0;0
TR_RegisterCandidate;TR_RegisterCandidate(const class TR_RegisterCandidate &);1;TR;RegisterCandidate;1;0
TR_ShrinkWrap;TR_ShrinkWrap(TR::OptimizationManager *);1;TR;ShrinkWrap;0;0
TR_ShrinkWrap;TR_ShrinkWrap(const class TR_ShrinkWrap &);0;TR;ShrinkWrap;1;0
Simplifier;Simplifier(class OMR::Simplifier &&);1;OMR;Simplifier;1;0
Simplifier;Simplifier(const class OMR::Simplifier &);0;OMR;Simplifier;1;0
Simplifier;Simplifier(const class TR::Simplifier &);0;TR;Simplifier;1;0
Simplifier;Simplifier(class TR::Simplifier &&);0;TR;Simplifier;1;0
simplify;simplify(TR::Block *);1;OMR;Simplifier;0;0
addProjectSpecializedRelocation;addProjectSpecializedRelocation(TR::Instruction *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *);1;OMR;CodeGenerator;0;0
addProjectSpecializedRelocation;addProjectSpecializedRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *);0;OMR;CodeGenerator;0;0
generateDebugCounter;generateDebugCounter(const char *,TR::Register *,TR::RegisterDependencyConditions &,int8_t,int32_t,TR::Instruction *);1;OMR;CodeGenerator;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;CodeGenerator;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;TransformUtil;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;TransformUtil;0;0
TR_InductionVariable;TR_InductionVariable(const class TR_InductionVariable &);1;TR;InductionVariable;1;0
TR_InductionVariable;TR_InductionVariable(TR::RegisterMappedSymbol *,TR::VPConstraint *,TR::VPConstraint *,TR::VPConstraint *,enum TR_YesNoMaybe);0;TR;InductionVariable;0;0
TR_TranslateTable;TR_TranslateTable(class TR_TranslateTable &&);1;TR;TranslateTable;1;0
TR_TranslateTable;TR_TranslateTable(const class TR_TranslateTable &);0;TR;TranslateTable;1;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;TranslateTable;0;0
operator delete;operator delete(void *,size_t);0;TR;TranslateTable;0;0
TR_SetTranslateTable;TR_SetTranslateTable(class TR_SetTranslateTable &&);1;TR;SetTranslateTable;1;0
TR_SetTranslateTable;TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,void *,int);0;TR;SetTranslateTable;0;0
TR_SetTranslateTable;TR_SetTranslateTable(const class TR_SetTranslateTable &);0;TR;SetTranslateTable;1;0
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &&);1;TR;UnionDFSetAnalysis;1;0
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);0;TR;UnionDFSetAnalysis;0;0
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(const class TR_UnionDFSetAnalysis<class TR_BitVector *> &);0;TR;UnionDFSetAnalysis;1;0
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(const class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &);0;TR;UnionDFSetAnalysis;1;0
TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(class TR_UnionDFSetAnalysis<class TR_BitVector *> &&);0;TR;UnionDFSetAnalysis;1;0
compose;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);0;TR;UnionDFSetAnalysis;0;1
compose;compose(class TR_BitVector *,class TR_BitVector *);0;TR;UnionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_SingleBitContainer *);0;TR;UnionDFSetAnalysis;0;1
initializeInfo;initializeInfo(class TR_BitVector *);0;TR;UnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_BitVector *,class TR_BitVector *);0;TR;UnionDFSetAnalysis;0;1
inverseCompose;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);0;TR;UnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_SingleBitContainer *);0;TR;UnionDFSetAnalysis;0;1
inverseInitializeInfo;inverseInitializeInfo(class TR_BitVector *);0;TR;UnionDFSetAnalysis;0;1
operator=;operator=(const class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &);0;TR;UnionDFSetAnalysis;1;0
operator=;operator=(class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &&);0;TR;UnionDFSetAnalysis;1;0
operator=;operator=(class TR_UnionDFSetAnalysis<class TR_BitVector *> &&);0;TR;UnionDFSetAnalysis;1;0
operator=;operator=(const class TR_UnionDFSetAnalysis<class TR_BitVector *> &);0;TR;UnionDFSetAnalysis;1;0
~TR_UnionDFSetAnalysis;~TR_UnionDFSetAnalysis();1;TR;UnionDFSetAnalysis;1;1
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Optimizer;0;0
TR_ValueNumberInfo;TR_ValueNumberInfo(TR::Compilation *,TR::Optimizer *,_Bool,_Bool,_Bool);1;TR;ValueNumberInfo;0;0
TR_ValueNumberInfo;TR_ValueNumberInfo(class TR_ValueNumberInfo &);0;TR;ValueNumberInfo;1;0
addEdge;addEdge(TR::CFGNode *,TR::CFGNode *,enum TR_AllocationKind);1;OMR;CFG;0;0
addEdge;addEdge(TR::CFGEdge *);0;OMR;CFG;0;0
TR_HashValueNumberInfo;TR_HashValueNumberInfo(class TR_HashValueNumberInfo &);0;TR;HashValueNumberInfo;1;0
fe;fe();1;OMR;Optimization;0;1
fe;fe();1;OMR;OptimizationManager;0;1
TR_Array<T>;TR_Array<T>(class TR_PersistentMemory *,uint32_t,_Bool);1;TR;Array;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;Array;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Array;0;0
allocateValueNumber;allocateValueNumber(TR::Node *,vcount_t);1;TR;ValueNumberInfo;0;1
allocateValueNumber;allocateValueNumber(TR::Node *);0;TR;ValueNumberInfo;0;1
TR_VirtualGuardHeadMerger;TR_VirtualGuardHeadMerger(const class TR_VirtualGuardHeadMerger &);1;TR;VirtualGuardHeadMerger;1;0
TR_VirtualGuardHeadMerger;TR_VirtualGuardHeadMerger(class TR_VirtualGuardHeadMerger &&);0;TR;VirtualGuardHeadMerger;1;0
rewriteIndexExpression;rewriteIndexExpression(class TR_PrimaryInductionVariable *,TR::Node *,TR::Node *,_Bool);1;TR;IndexExprManipulator;0;0
rewriteIndexExpression;rewriteIndexExpression(class TR_Structure *);0;TR;IndexExprManipulator;0;0
TR_OrderedBlockList;TR_OrderedBlockList(const class TR_OrderedBlockList &);1;TR;OrderedBlockList;1;0
TR_OrderedBlockList;TR_OrderedBlockList(class TR_OrderedBlockList &&);0;TR;OrderedBlockList;1;0
TR_OrderedBlockList;TR_OrderedBlockList(class TR_Memory *);0;TR;OrderedBlockList;0;0
add;add(T *,List<T> &);1;;List;0;0
add;add(List<T> &);0;;List;0;0
TR_BackwardUnionBitVectorAnalysis;TR_BackwardUnionBitVectorAnalysis(class TR_BackwardUnionBitVectorAnalysis &&);1;TR;BackwardUnionBitVectorAnalysis;1;0
TR_BackwardUnionBitVectorAnalysis;TR_BackwardUnionBitVectorAnalysis(const class TR_BackwardUnionBitVectorAnalysis &);0;TR;BackwardUnionBitVectorAnalysis;1;0
TR_GeneralSinkStores;TR_GeneralSinkStores(const class TR_GeneralSinkStores &);1;TR;GeneralSinkStores;1;0
TR_GeneralSinkStores;TR_GeneralSinkStores(class TR_GeneralSinkStores &&);0;TR;GeneralSinkStores;1;0
TR_LiveOnAllPaths;TR_LiveOnAllPaths(const class TR_LiveOnAllPaths &);1;TR;LiveOnAllPaths;1;0
TR_LiveOnAllPaths;TR_LiveOnAllPaths(class TR_LiveOnAllPaths &&);0;TR;LiveOnAllPaths;1;0
operator delete;operator delete(void *,size_t);1;TR;LiveVariableInformation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;LiveVariableInformation;0;0
operator new;operator new(size_t,TR::Region &);0;TR;LiveVariableInformation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;LiveVariableInformation;0;0
TR_StripMiner;TR_StripMiner(const class TR_StripMiner &);1;TR;StripMiner;1;0
TR_StripMiner;TR_StripMiner(class TR_StripMiner &&);0;TR;StripMiner;1;0
isClassObject;isClassObject();1;OMR;Symbol;0;1
isConstString;isConstString();1;OMR;Symbol;0;1
ValuePropagation;ValuePropagation(class OMR::ValuePropagation &&);1;OMR;ValuePropagation;1;0
ValuePropagation;ValuePropagation(TR::OptimizationManager *);0;OMR;ValuePropagation;0;0
addGlobalConstraint;addGlobalConstraint(TR::Node *,int32_t,TR::VPConstraint *,int32_t);1;OMR;ValuePropagation;0;0
addGlobalConstraint;addGlobalConstraint(TR::Node *,TR::VPConstraint *,TR::Node *);0;OMR;ValuePropagation;0;0
removeConstraints;removeConstraints(int32_t);1;OMR;ValuePropagation;0;0
removeConstraints;removeConstraints();0;OMR;ValuePropagation;0;0
setUnreachablePath;setUnreachablePath(TR::CFGEdge *);1;OMR;ValuePropagation;0;0
setUnreachablePath;setUnreachablePath(ValueConstraints &);0;OMR;ValuePropagation;0;0
ValueConstraintHandler;ValueConstraintHandler(class OMR::ValuePropagation::ValueConstraintHandler &&);1;OMR::ValuePropagation;ValueConstraintHandler;1;0
ValueConstraintHandler;ValueConstraintHandler(const class OMR::ValuePropagation::ValueConstraintHandler &);0;OMR::ValuePropagation;ValueConstraintHandler;1;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;HedgeTreeHandler;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;HedgeTreeHandler;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;TR;HedgeTreeHandler;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;HedgeTreeHandler;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *);1;OMR;Node;0;0
operator=;operator=(const class TR_Method &);1;TR;Method;1;0
operator=;operator=(class TR_Method &&);0;TR;Method;1;0
VPArrayInfo;VPArrayInfo(const class TR::VPArrayInfo &);1;TR;VPArrayInfo;1;0
VPArrayInfo;VPArrayInfo(int32_t,int32_t,int32_t);0;TR;VPArrayInfo;0;0
VPArrayInfo;VPArrayInfo(class TR::VPArrayInfo &&);0;TR;VPArrayInfo;1;0
getClass;getClass();1;TR;VPConstraint;0;1
isClassObject;isClassObject();1;TR;VPConstraint;0;1
isConstString;isConstString();1;TR;VPConstraint;0;1
operator new[];operator new[](size_t,TR::Region &);1;TR;VPConstraint;0;0
print;print(TR::Compilation *,TR::FILE *);1;TR;VPConstraint;0;0
VPClass;VPClass(const class TR::VPClass &);1;TR;VPClass;1;0
VPClass;VPClass(TR::VPClassType *,TR::VPClassPresence *,TR::VPPreexistentObject *,TR::VPArrayInfo *,TR::VPObjectLocation *);0;TR;VPClass;0;0
VPClass;VPClass(class TR::VPClass &&);0;TR;VPClass;1;0
VPClassType;VPClassType(class TR::VPClassType &&);1;TR;VPClassType;1;0
VPClassType;VPClassType(int32_t);0;TR;VPClassType;0;0
VPEqual;VPEqual(class TR::VPEqual &&);1;TR;VPEqual;1;0
VPEqual;VPEqual(const class TR::VPEqual &);0;TR;VPEqual;1;0
VPEqual;VPEqual(int32_t);0;TR;VPEqual;0;0
VPGreaterThanOrEqual;VPGreaterThanOrEqual(class TR::VPGreaterThanOrEqual &&);1;TR;VPGreaterThanOrEqual;1;0
VPGreaterThanOrEqual;VPGreaterThanOrEqual(const class TR::VPGreaterThanOrEqual &);0;TR;VPGreaterThanOrEqual;1;0
VPGreaterThanOrEqual;VPGreaterThanOrEqual(int32_t);0;TR;VPGreaterThanOrEqual;0;0
VPIntConst;VPIntConst(class TR::VPIntConst &&);1;TR;VPIntConst;1;0
VPIntConst;VPIntConst(const class TR::VPIntConst &);0;TR;VPIntConst;1;0
VPIntConst;VPIntConst(int32_t);0;TR;VPIntConst;0;0
VPLessThanOrEqual;VPLessThanOrEqual(class TR::VPLessThanOrEqual &&);1;TR;VPLessThanOrEqual;1;0
VPLessThanOrEqual;VPLessThanOrEqual(const class TR::VPLessThanOrEqual &);0;TR;VPLessThanOrEqual;1;0
VPLessThanOrEqual;VPLessThanOrEqual(int32_t);0;TR;VPLessThanOrEqual;0;0
VPLongConst;VPLongConst(class TR::VPLongConst &&);1;TR;VPLongConst;1;0
VPLongConst;VPLongConst(const class TR::VPLongConst &);0;TR;VPLongConst;1;0
VPLongConst;VPLongConst(int64_t);0;TR;VPLongConst;0;0
VPMergedConstraints;VPMergedConstraints(class TR::VPMergedConstraints &&);1;TR;VPMergedConstraints;1;0
VPMergedConstraints;VPMergedConstraints(const class TR::VPMergedConstraints &);0;TR;VPMergedConstraints;1;0
VPMergedConstraints;VPMergedConstraints(ListElement<TR::VPConstraint> *,class TR_Memory *);0;TR;VPMergedConstraints;0;0
VPNotEqual;VPNotEqual(const class TR::VPNotEqual &);1;TR;VPNotEqual;1;0
VPNotEqual;VPNotEqual(class TR::VPNotEqual &&);0;TR;VPNotEqual;1;0
VPNotEqual;VPNotEqual(int32_t);0;TR;VPNotEqual;0;0
VPObjectLocation;VPObjectLocation(class TR::VPObjectLocation &&);1;TR;VPObjectLocation;1;0
VPObjectLocation;VPObjectLocation(const class TR::VPObjectLocation &);0;TR;VPObjectLocation;1;0
VPObjectLocation;VPObjectLocation(enum TR::VPObjectLocation::VPObjectLocationKind);0;TR;VPObjectLocation;0;0
VPPreexistentObject;VPPreexistentObject(class TR::VPPreexistentObject &&);1;TR;VPPreexistentObject;1;0
VPPreexistentObject;VPPreexistentObject(class TR_OpaqueClassBlock *);0;TR;VPPreexistentObject;0;0
VPPreexistentObject;VPPreexistentObject(const class TR::VPPreexistentObject &);0;TR;VPPreexistentObject;1;0
VPShortConst;VPShortConst(class TR::VPShortConst &&);1;TR;VPShortConst;1;0
VPShortConst;VPShortConst(const class TR::VPShortConst &);0;TR;VPShortConst;1;0
VPShortConst;VPShortConst(int16_t);0;TR;VPShortConst;0;0
VPShortRange;VPShortRange(class TR::VPShortRange &&);1;TR;VPShortRange;1;0
VPShortRange;VPShortRange(int16_t,int16_t);0;TR;VPShortRange;0;0
VPShortRange;VPShortRange(const class TR::VPShortRange &);0;TR;VPShortRange;1;0
VPSync;VPSync(class TR::VPSync &&);1;TR;VPSync;1;0
VPSync;VPSync(const class TR::VPSync &);0;TR;VPSync;1;0
VPSync;VPSync(enum TR_YesNoMaybe);0;TR;VPSync;0;0
VPUnresolvedClass;VPUnresolvedClass(class TR::VPUnresolvedClass &&);1;TR;VPUnresolvedClass;1;0
VPUnresolvedClass;VPUnresolvedClass(const class TR::VPUnresolvedClass &);0;TR;VPUnresolvedClass;1;0
VPUnresolvedClass;VPUnresolvedClass(const char *,int32_t,class TR_ResolvedMethod *);0;TR;VPUnresolvedClass;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;HedgeNode;0;0
operator delete;operator delete(void *,size_t);0;TR;HedgeNode;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;HedgeNode;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeNode;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;TR;HedgeNode;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;HedgeNode;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;TR;HedgeNode;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;HedgeNode;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;VPConstraint;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;TR;VPConstraint;0;0
ArraycopyTransformation;ArraycopyTransformation(const class TR::ArraycopyTransformation &);1;TR;ArraycopyTransformation;1;0
ArraycopyTransformation;ArraycopyTransformation(class TR::ArraycopyTransformation &&);0;TR;ArraycopyTransformation;1;0
findGlobalConstraint;findGlobalConstraint(int32_t);1;OMR;ValuePropagation;0;0
findGlobalConstraint;findGlobalConstraint(int32_t,int32_t);0;OMR;ValuePropagation;0;0
VPShortRange;VPShortRange(class TR::VPShortRange &&);0;TR;VPShortRange;1;0
TR_CanReachGivenBlocks;TR_CanReachGivenBlocks(const class TR_CanReachGivenBlocks &);1;TR;CanReachGivenBlocks;1;0
TR_CanReachGivenBlocks;TR_CanReachGivenBlocks(TR::Compilation *,class TR_BitVector *);0;TR;CanReachGivenBlocks;0;0
TR_CanReachGivenBlocks;TR_CanReachGivenBlocks(class TR_CanReachGivenBlocks &&);0;TR;CanReachGivenBlocks;1;0
TR_CanBeReachedWithoutExceptionEdges;TR_CanBeReachedWithoutExceptionEdges(class TR_CanBeReachedWithoutExceptionEdges &&);1;TR;CanBeReachedWithoutExceptionEdges;1;0
TR_CanBeReachedWithoutExceptionEdges;TR_CanBeReachedWithoutExceptionEdges(const class TR_CanBeReachedWithoutExceptionEdges &);0;TR;CanBeReachedWithoutExceptionEdges;1;0
TR_CanBeReachedWithoutExceptionEdges;TR_CanBeReachedWithoutExceptionEdges(TR::Compilation *);0;TR;CanBeReachedWithoutExceptionEdges;0;0
TR_CanReachNonColdBlocks;TR_CanReachNonColdBlocks(class TR_CanReachNonColdBlocks &&);1;TR;CanReachNonColdBlocks;1;0
TR_CanReachNonColdBlocks;TR_CanReachNonColdBlocks(const class TR_CanReachNonColdBlocks &);0;TR;CanReachNonColdBlocks;1;0
TR_CanReachNonColdBlocks;TR_CanReachNonColdBlocks(TR::Compilation *);0;TR;CanReachNonColdBlocks;0;0
TR_ClassLoadCheck;TR_ClassLoadCheck(class TR_ClassLoadCheck &&);1;TR;ClassLoadCheck;1;0
TR_ClassLoadCheck;TR_ClassLoadCheck(const class TR_ClassLoadCheck &);0;TR;ClassLoadCheck;1;0
TR_ClassLoadCheck;TR_ClassLoadCheck(char *,int32_t);0;TR;ClassLoadCheck;0;0
ValueConstraint;ValueConstraint(class OMR::ValuePropagation::ValueConstraint &&);1;OMR::ValuePropagation;ValueConstraint;1;0
ValueConstraint;ValueConstraint(int32_t);0;OMR::ValuePropagation;ValueConstraint;0;0
ValueConstraint;ValueConstraint(const class OMR::ValuePropagation::ValueConstraint &);0;OMR::ValuePropagation;ValueConstraint;1;0
ValueConstraintHandler;ValueConstraintHandler();1;OMR::ValuePropagation;ValueConstraintHandler;1;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;VPConstraint;0;0
VPClassPresence;VPClassPresence(class TR::VPClassPresence &&);1;TR;VPClassPresence;1;0
VPClassPresence;VPClassPresence(const class TR::VPClassPresence &);0;TR;VPClassPresence;1;0
VPClassPresence;VPClassPresence();0;TR;VPClassPresence;0;0
VPNonNullObject;VPNonNullObject(class TR::VPNonNullObject &&);1;TR;VPNonNullObject;1;0
VPNonNullObject;VPNonNullObject(const class TR::VPNonNullObject &);0;TR;VPNonNullObject;1;0
VPNonNullObject;VPNonNullObject();0;TR;VPNonNullObject;1;0
VPNullObject;VPNullObject(const class TR::VPNullObject &);1;TR;VPNullObject;1;0
VPNullObject;VPNullObject();0;TR;VPNullObject;1;0
VPNullObject;VPNullObject(class TR::VPNullObject &&);0;TR;VPNullObject;1;0
VPUnreachablePath;VPUnreachablePath(const class TR::VPUnreachablePath &);1;TR;VPUnreachablePath;1;0
VPUnreachablePath;VPUnreachablePath(class TR::VPUnreachablePath &&);0;TR;VPUnreachablePath;1;0
VPUnreachablePath;VPUnreachablePath();0;TR;VPUnreachablePath;0;0
getAliasesAndUnionWith;getAliasesAndUnionWith(class TR_BitVector &);1;TR;AliasSetInterface;0;0
getAliasesAndUnionWith;getAliasesAndUnionWith(TR::SparseBitVector &);0;TR;AliasSetInterface;0;0
TR_Stats;TR_Stats(class TR_Stats &&);1;TR;Stats;1;0
TR_Stats;TR_Stats(const char *);0;TR;Stats;0;0
TR_Stats;TR_Stats(const class TR_Stats &);0;TR;Stats;1;0
TR_Stats;TR_Stats();0;TR;Stats;0;0
TR_StatsHisto<N>;TR_StatsHisto<N>(const char *,double,double);1;TR;StatsHisto;0;0
getName;getName();1;TR;Stats;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;Stats;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;Stats;0;0
maxVal;maxVal();1;TR;Stats;0;0
mean;mean();1;TR;Stats;0;0
minVal;minVal();1;TR;Stats;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;Stats;0;0
operator delete;operator delete(void *,size_t);0;TR;Stats;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Stats;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Stats;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Stats;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;Stats;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Stats;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Stats;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Stats;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Stats;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;Stats;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;Stats;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;Stats;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Stats;0;0
operator new;operator new(size_t,TR::Region &);0;TR;Stats;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Stats;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;Stats;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Stats;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;Stats;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Stats;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;Stats;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Stats;0;0
report;report(FILE *);1;TR;Stats;0;0
report;report(char *);0;TR;Stats;0;0
reset;reset();1;TR;Stats;0;0
samples;samples();1;TR;Stats;0;0
setName;setName(const char *);1;TR;Stats;0;0
stddev;stddev();1;TR;Stats;0;0
sum;sum();1;TR;Stats;0;0
update;update(double);1;TR;Stats;0;0
TR_StatsInterval;TR_StatsInterval(const char *);1;TR;StatsInterval;0;0
intervals;intervals();1;TR;StatsInterval;0;0
lastTime;lastTime();1;TR;StatsInterval;0;0
lastValue;lastValue();1;TR;StatsInterval;0;0
update;update(double,double);0;TR;StatsInterval;0;0
AheadOfTimeCompile;AheadOfTimeCompile(const class OMR::AheadOfTimeCompile &);1;OMR;AheadOfTimeCompile;1;0
AheadOfTimeCompile;AheadOfTimeCompile(class OMR::AheadOfTimeCompile &&);0;OMR;AheadOfTimeCompile;1;0
AheadOfTimeCompile;AheadOfTimeCompile(uint32_t *,TR::Compilation *);0;OMR;AheadOfTimeCompile;0;0
addToSizeOfAOTRelocations;addToSizeOfAOTRelocations(uint32_t);1;OMR;AheadOfTimeCompile;0;0
comp;comp();1;OMR;AheadOfTimeCompile;0;0
dumpRelocationData;dumpRelocationData();1;OMR;AheadOfTimeCompile;0;0
getAOTRelocationTargets;getAOTRelocationTargets();1;OMR;AheadOfTimeCompile;0;0
getDebug;getDebug();1;OMR;AheadOfTimeCompile;0;0
getRelocationData;getRelocationData();1;OMR;AheadOfTimeCompile;0;0
getSizeOfAOTRelocationHeader;getSizeOfAOTRelocationHeader(TR_ExternalRelocationTargetKind);1;OMR;AheadOfTimeCompile;0;0
getSizeOfAOTRelocations;getSizeOfAOTRelocations();1;OMR;AheadOfTimeCompile;0;0
initialiseAOTRelocationHeader;initialiseAOTRelocationHeader(TR::IteratedExternalRelocation *);1;OMR;AheadOfTimeCompile;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;AheadOfTimeCompile;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,size_t);0;OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;AheadOfTimeCompile;0;0
operator=;operator=(class OMR::AheadOfTimeCompile &&);1;OMR;AheadOfTimeCompile;1;0
operator=;operator=(const class OMR::AheadOfTimeCompile &);0;OMR;AheadOfTimeCompile;1;0
operator=;operator=(class TR::AheadOfTimeCompile &&);0;TR;AheadOfTimeCompile;1;0
operator=;operator=(const class TR::AheadOfTimeCompile &);0;TR;AheadOfTimeCompile;1;0
processRelocations;processRelocations();1;OMR;AheadOfTimeCompile;0;1
self;self();1;OMR;AheadOfTimeCompile;0;0
setAOTRelocationKindToHeaderSizeMap;setAOTRelocationKindToHeaderSizeMap(uint32_t *);1;OMR;AheadOfTimeCompile;0;0
setRelocationData;setRelocationData(uint8_t *);1;OMR;AheadOfTimeCompile;0;0
setSizeOfAOTRelocations;setSizeOfAOTRelocations(uint32_t);1;OMR;AheadOfTimeCompile;0;0
trMemory;trMemory();1;OMR;AheadOfTimeCompile;0;0
traceRelocationOffsets;traceRelocationOffsets(uint8_t *&,int32_t,const uint8_t *,_Bool);1;OMR;AheadOfTimeCompile;0;0
~AheadOfTimeCompile;~AheadOfTimeCompile();1;OMR;AheadOfTimeCompile;1;0
BeforeBinaryEncodingExternalRelocation;BeforeBinaryEncodingExternalRelocation();1;TR;BeforeBinaryEncodingExternalRelocation;0;0
BeforeBinaryEncodingExternalRelocation;BeforeBinaryEncodingExternalRelocation(TR::Instruction *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);0;TR;BeforeBinaryEncodingExternalRelocation;0;0
BeforeBinaryEncodingExternalRelocation;BeforeBinaryEncodingExternalRelocation(TR::Instruction *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);0;TR;BeforeBinaryEncodingExternalRelocation;0;0
ExternalRelocation;ExternalRelocation(class TR::ExternalRelocation &&);1;TR;ExternalRelocation;1;0
ExternalRelocation;ExternalRelocation(const class TR::ExternalRelocation &);0;TR;ExternalRelocation;1;0
ExternalRelocation;ExternalRelocation();0;TR;ExternalRelocation;0;0
ExternalRelocation;ExternalRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);0;TR;ExternalRelocation;0;0
ExternalRelocation;ExternalRelocation(uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);0;TR;ExternalRelocation;0;0
Relocation;Relocation(class TR::Relocation &&);1;TR;Relocation;1;0
Relocation;Relocation();0;TR;Relocation;0;0
Relocation;Relocation(const class TR::Relocation &);0;TR;Relocation;1;0
Relocation;Relocation(uint8_t *);0;TR;Relocation;0;0
addAOTRelocation;addAOTRelocation(TR::CodeGenerator *);1;TR;Relocation;0;1
apply;apply(TR::CodeGenerator *);1;TR;Relocation;0;1
collectModifier;collectModifier();1;TR;ExternalRelocation;0;1
getDebugInfo;getDebugInfo();1;TR;Relocation;0;0
getGlobalValue;getGlobalValue(uint32_t);1;TR;ExternalRelocation;0;0
getName;getName(TR_ExternalRelocationTargetKind);1;TR;ExternalRelocation;0;0
getNarrowSize;getNarrowSize();1;TR;ExternalRelocation;0;1
getRelocationRecord;getRelocationRecord();1;TR;ExternalRelocation;0;0
getTargetAddress;getTargetAddress();1;TR;ExternalRelocation;0;0
getTargetAddress2;getTargetAddress2();1;TR;ExternalRelocation;0;0
getTargetKind;getTargetKind();1;TR;ExternalRelocation;0;0
getUpdateInstruction;getUpdateInstruction();1;TR;BeforeBinaryEncodingExternalRelocation;0;0
getUpdateLocation;getUpdateLocation();1;TR;Relocation;0;1
getWideSize;getWideSize();1;TR;ExternalRelocation;0;1
isAOTRelocation;isAOTRelocation();1;TR;Relocation;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;Relocation;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;Relocation;0;0
nameOfGlobal;nameOfGlobal(uint32_t);1;TR;ExternalRelocation;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;Relocation;0;0
operator delete;operator delete(void *,size_t);0;TR;Relocation;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Relocation;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Relocation;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Relocation;0;0
operator delete[];operator delete[](void *,TR::Region &);1;TR;Relocation;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;TR;Relocation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Relocation;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Relocation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Relocation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;TR;Relocation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;TR;Relocation;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;Relocation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Relocation;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Relocation;0;0
operator new;operator new(size_t,TR::Region &);0;TR;Relocation;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;Relocation;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Relocation;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;Relocation;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;Relocation;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;TR;Relocation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;Relocation;0;0
operator=;operator=(const class TR::Relocation &);1;TR;Relocation;1;0
operator=;operator=(class TR::Relocation &&);0;TR;Relocation;1;0
operator=;operator=(const class TR::ExternalRelocation &);0;TR;ExternalRelocation;1;0
operator=;operator=(class TR::ExternalRelocation &&);0;TR;ExternalRelocation;1;0
operator=;operator=(const class TR::BeforeBinaryEncodingExternalRelocation &);0;TR;BeforeBinaryEncodingExternalRelocation;1;0
operator=;operator=(class TR::BeforeBinaryEncodingExternalRelocation &&);0;TR;BeforeBinaryEncodingExternalRelocation;1;0
setDebugInfo;setDebugInfo(TR::RelocationDebugInfo *);1;TR;Relocation;0;0
setGlobalValue;setGlobalValue(uint32_t,uintptr_t);1;TR;ExternalRelocation;0;0
setTargetAddress;setTargetAddress(uint8_t *);1;TR;ExternalRelocation;0;0
setTargetKind;setTargetKind(TR_ExternalRelocationTargetKind);1;TR;ExternalRelocation;0;0
setUpdateLocation;setUpdateLocation(uint8_t *);1;TR;Relocation;0;0
trace;trace(TR::Compilation *);1;TR;Relocation;0;1
~BeforeBinaryEncodingExternalRelocation;~BeforeBinaryEncodingExternalRelocation();1;TR;BeforeBinaryEncodingExternalRelocation;1;0
~ExternalRelocation;~ExternalRelocation();1;TR;ExternalRelocation;1;0
~Relocation;~Relocation();1;TR;Relocation;1;0
processRelocations;processRelocations();1;OMR;CodeGenerator;0;1
setLinkage;setLinkage(TR::Linkage *);1;OMR;CodeGenerator;0;0
setLinkage;setLinkage(enum TR_LinkageConventions,TR::Linkage *);0;OMR;CodeGenerator;0;0
traceRegAssigned;traceRegAssigned(TR::Register *,TR::Register *,TR_RegisterAssignmentFlags);1;OMR;CodeGenerator;0;0
traceRegAssigned;traceRegAssigned(TR::Register *,TR::Register *);0;OMR;CodeGenerator;0;0
ExternalOrderedPair32BitRelocation;ExternalOrderedPair32BitRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);1;TR;ExternalOrderedPair32BitRelocation;0;0
getLocation2;getLocation2();1;TR;ExternalOrderedPair32BitRelocation;0;0
operator=;operator=(const class TR::ExternalOrderedPair32BitRelocation &);0;TR;ExternalOrderedPair32BitRelocation;1;0
operator=;operator=(class TR::ExternalOrderedPair32BitRelocation &&);0;TR;ExternalOrderedPair32BitRelocation;1;0
setLocation2;setLocation2(uint8_t *);1;TR;ExternalOrderedPair32BitRelocation;0;0
~ExternalOrderedPair32BitRelocation;~ExternalOrderedPair32BitRelocation();1;TR;ExternalOrderedPair32BitRelocation;1;0
InstructionAbsoluteRelocation;InstructionAbsoluteRelocation(uint8_t *,TR::Instruction *,_Bool);1;TR;InstructionAbsoluteRelocation;0;0
getInstruction;getInstruction();1;TR;InstructionAbsoluteRelocation;0;0
operator=;operator=(class TR::InstructionAbsoluteRelocation &&);0;TR;InstructionAbsoluteRelocation;1;0
operator=;operator=(const class TR::InstructionAbsoluteRelocation &);0;TR;InstructionAbsoluteRelocation;1;0
useEndAddress;useEndAddress();1;TR;InstructionAbsoluteRelocation;0;0
~InstructionAbsoluteRelocation;~InstructionAbsoluteRelocation();1;TR;InstructionAbsoluteRelocation;1;0
IteratedExternalRelocation;IteratedExternalRelocation();1;TR;IteratedExternalRelocation;0;0
IteratedExternalRelocation;IteratedExternalRelocation(uint8_t *,TR_ExternalRelocationTargetKind,flags8_t,TR::CodeGenerator *);0;TR;IteratedExternalRelocation;0;0
IteratedExternalRelocation;IteratedExternalRelocation(uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,flags8_t,TR::CodeGenerator *);0;TR;IteratedExternalRelocation;0;0
addRelocationEntry;addRelocationEntry(uint32_t);1;TR;IteratedExternalRelocation;0;0
addToSizeOfRelocationData;addToSizeOfRelocationData(uint16_t);1;TR;IteratedExternalRelocation;0;0
full;full();1;TR;IteratedExternalRelocation;0;0
getModifierValue;getModifierValue();1;TR;IteratedExternalRelocation;0;0
getNumberOfRelocationSites;getNumberOfRelocationSites();1;TR;IteratedExternalRelocation;0;0
getRelocationData;getRelocationData();1;TR;IteratedExternalRelocation;0;0
getRelocationDataCursor;getRelocationDataCursor();1;TR;IteratedExternalRelocation;0;0
getSizeOfRelocationData;getSizeOfRelocationData();1;TR;IteratedExternalRelocation;0;0
getTargetAddress;getTargetAddress();1;TR;IteratedExternalRelocation;0;0
getTargetAddress2;getTargetAddress2();1;TR;IteratedExternalRelocation;0;0
getTargetKind;getTargetKind();1;TR;IteratedExternalRelocation;0;0
initialiseRelocation;initialiseRelocation(TR::CodeGenerator *);1;TR;IteratedExternalRelocation;0;0
isOrderedPair;isOrderedPair();1;TR;IteratedExternalRelocation;0;0
needsWideOffsets;needsWideOffsets();1;TR;IteratedExternalRelocation;0;0
setFull;setFull();1;TR;IteratedExternalRelocation;0;0
setModifierValue;setModifierValue(uint8_t);1;TR;IteratedExternalRelocation;0;0
setNeedsWideOffsets;setNeedsWideOffsets();1;TR;IteratedExternalRelocation;0;0
setNumberOfRelocationSites;setNumberOfRelocationSites(uint32_t);1;TR;IteratedExternalRelocation;0;0
setOrderedPair;setOrderedPair();1;TR;IteratedExternalRelocation;0;0
setRelocationData;setRelocationData(uint8_t *);1;TR;IteratedExternalRelocation;0;0
setRelocationDataCursor;setRelocationDataCursor(uint8_t *);1;TR;IteratedExternalRelocation;0;0
setSizeOfRelocationData;setSizeOfRelocationData(uint16_t);1;TR;IteratedExternalRelocation;0;0
setTargetAddress;setTargetAddress(uint8_t *);1;TR;IteratedExternalRelocation;0;0
setTargetKind;setTargetKind(TR_ExternalRelocationTargetKind);1;TR;IteratedExternalRelocation;0;0
LabelAbsoluteRelocation;LabelAbsoluteRelocation();1;TR;LabelAbsoluteRelocation;0;0
LabelAbsoluteRelocation;LabelAbsoluteRelocation(uint8_t *,TR::LabelSymbol *);0;TR;LabelAbsoluteRelocation;0;0
LabelRelocation;LabelRelocation(class TR::LabelRelocation &&);1;TR;LabelRelocation;1;0
LabelRelocation;LabelRelocation(const class TR::LabelRelocation &);0;TR;LabelRelocation;1;0
LabelRelocation;LabelRelocation();0;TR;LabelRelocation;0;0
LabelRelocation;LabelRelocation(uint8_t *,TR::LabelSymbol *);0;TR;LabelRelocation;0;0
getLabel;getLabel();1;TR;LabelRelocation;0;0
operator=;operator=(class TR::LabelRelocation &&);0;TR;LabelRelocation;1;0
operator=;operator=(const class TR::LabelRelocation &);0;TR;LabelRelocation;1;0
operator=;operator=(class TR::LabelAbsoluteRelocation &&);0;TR;LabelAbsoluteRelocation;1;0
operator=;operator=(const class TR::LabelAbsoluteRelocation &);0;TR;LabelAbsoluteRelocation;1;0
setLabel;setLabel(TR::LabelSymbol *);1;TR;LabelRelocation;0;0
~LabelAbsoluteRelocation;~LabelAbsoluteRelocation();1;TR;LabelAbsoluteRelocation;1;0
~LabelRelocation;~LabelRelocation();1;TR;LabelRelocation;1;0
LabelRelative12BitRelocation;LabelRelative12BitRelocation();1;TR;LabelRelative12BitRelocation;0;0
LabelRelative12BitRelocation;LabelRelative12BitRelocation(uint8_t *,TR::LabelSymbol *,_Bool);0;TR;LabelRelative12BitRelocation;0;0
isCheckDisp;isCheckDisp();1;TR;LabelRelative12BitRelocation;0;0
operator=;operator=(class TR::LabelRelative12BitRelocation &&);0;TR;LabelRelative12BitRelocation;1;0
operator=;operator=(const class TR::LabelRelative12BitRelocation &);0;TR;LabelRelative12BitRelocation;1;0
~LabelRelative12BitRelocation;~LabelRelative12BitRelocation();1;TR;LabelRelative12BitRelocation;1;0
LabelRelative16BitRelocation;LabelRelative16BitRelocation(uint8_t *,TR::LabelSymbol *,int8_t,_Bool);1;TR;LabelRelative16BitRelocation;0;0
LabelRelative16BitRelocation;LabelRelative16BitRelocation(uint8_t *,TR::LabelSymbol *);0;TR;LabelRelative16BitRelocation;0;0
LabelRelative16BitRelocation;LabelRelative16BitRelocation();0;TR;LabelRelative16BitRelocation;0;0
getAddressDifferenceDivisor;getAddressDifferenceDivisor();1;TR;LabelRelative16BitRelocation;0;0
isInstructionOffset;isInstructionOffset();1;TR;LabelRelative16BitRelocation;0;0
operator=;operator=(class TR::LabelRelative16BitRelocation &&);0;TR;LabelRelative16BitRelocation;1;0
operator=;operator=(const class TR::LabelRelative16BitRelocation &);0;TR;LabelRelative16BitRelocation;1;0
setAddressDifferenceDivisor;setAddressDifferenceDivisor(int8_t);1;TR;LabelRelative16BitRelocation;0;0
setInstructionOffset;setInstructionOffset(_Bool);1;TR;LabelRelative16BitRelocation;0;0
~LabelRelative16BitRelocation;~LabelRelative16BitRelocation();1;TR;LabelRelative16BitRelocation;1;0
LabelRelative24BitRelocation;LabelRelative24BitRelocation();1;TR;LabelRelative24BitRelocation;0;0
LabelRelative24BitRelocation;LabelRelative24BitRelocation(uint8_t *,TR::LabelSymbol *);0;TR;LabelRelative24BitRelocation;0;0
operator=;operator=(class TR::LabelRelative24BitRelocation &&);0;TR;LabelRelative24BitRelocation;1;0
operator=;operator=(const class TR::LabelRelative24BitRelocation &);0;TR;LabelRelative24BitRelocation;1;0
~LabelRelative24BitRelocation;~LabelRelative24BitRelocation();1;TR;LabelRelative24BitRelocation;1;0
LabelRelative32BitRelocation;LabelRelative32BitRelocation();1;TR;LabelRelative32BitRelocation;0;0
LabelRelative32BitRelocation;LabelRelative32BitRelocation(uint8_t *,TR::LabelSymbol *);0;TR;LabelRelative32BitRelocation;0;0
operator=;operator=(class TR::LabelRelative32BitRelocation &&);0;TR;LabelRelative32BitRelocation;1;0
operator=;operator=(const class TR::LabelRelative32BitRelocation &);0;TR;LabelRelative32BitRelocation;1;0
~LabelRelative32BitRelocation;~LabelRelative32BitRelocation();1;TR;LabelRelative32BitRelocation;1;0
LabelRelative8BitRelocation;LabelRelative8BitRelocation();1;TR;LabelRelative8BitRelocation;0;0
LabelRelative8BitRelocation;LabelRelative8BitRelocation(uint8_t *,TR::LabelSymbol *);0;TR;LabelRelative8BitRelocation;0;0
operator=;operator=(class TR::LabelRelative8BitRelocation &&);0;TR;LabelRelative8BitRelocation;1;0
operator=;operator=(const class TR::LabelRelative8BitRelocation &);0;TR;LabelRelative8BitRelocation;1;0
~LabelRelative8BitRelocation;~LabelRelative8BitRelocation();1;TR;LabelRelative8BitRelocation;1;0
LabelTable32BitRelocation;LabelTable32BitRelocation();1;TR;LabelTable32BitRelocation;0;0
LabelTable32BitRelocation;LabelTable32BitRelocation(uint8_t *,TR::LabelSymbol *);0;TR;LabelTable32BitRelocation;0;0
operator=;operator=(class TR::LabelTable32BitRelocation &&);0;TR;LabelTable32BitRelocation;1;0
operator=;operator=(const class TR::LabelTable32BitRelocation &);0;TR;LabelTable32BitRelocation;1;0
~LabelTable32BitRelocation;~LabelTable32BitRelocation();1;TR;LabelTable32BitRelocation;1;0
LoadLabelRelative16BitRelocation;LoadLabelRelative16BitRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);1;TR;LoadLabelRelative16BitRelocation;0;0
LoadLabelRelative16BitRelocation;LoadLabelRelative16BitRelocation();0;TR;LoadLabelRelative16BitRelocation;0;0
getDeltaToStartLabel;getDeltaToStartLabel();1;TR;LoadLabelRelative16BitRelocation;0;0
getEndLabel;getEndLabel();1;TR;LoadLabelRelative16BitRelocation;0;0
getLastInstruction;getLastInstruction();1;TR;LoadLabelRelative16BitRelocation;0;0
getStartLabel;getStartLabel();1;TR;LoadLabelRelative16BitRelocation;0;0
operator=;operator=(const class TR::LoadLabelRelative16BitRelocation &);0;TR;LoadLabelRelative16BitRelocation;1;0
operator=;operator=(class TR::LoadLabelRelative16BitRelocation &&);0;TR;LoadLabelRelative16BitRelocation;1;0
setDeltaToStartLabel;setDeltaToStartLabel(int32_t);1;TR;LoadLabelRelative16BitRelocation;0;0
setEndLabel;setEndLabel(TR::LabelSymbol *);1;TR;LoadLabelRelative16BitRelocation;0;0
setLastInstruction;setLastInstruction(TR::Instruction *);1;TR;LoadLabelRelative16BitRelocation;0;0
setStartLabel;setStartLabel(TR::LabelSymbol *);1;TR;LoadLabelRelative16BitRelocation;0;0
~LoadLabelRelative16BitRelocation;~LoadLabelRelative16BitRelocation();1;TR;LoadLabelRelative16BitRelocation;1;0
LoadLabelRelative32BitRelocation;LoadLabelRelative32BitRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);1;TR;LoadLabelRelative32BitRelocation;0;0
LoadLabelRelative32BitRelocation;LoadLabelRelative32BitRelocation();0;TR;LoadLabelRelative32BitRelocation;0;0
getDeltaToStartLabel;getDeltaToStartLabel();1;TR;LoadLabelRelative32BitRelocation;0;0
getEndLabel;getEndLabel();1;TR;LoadLabelRelative32BitRelocation;0;0
getLastInstruction;getLastInstruction();1;TR;LoadLabelRelative32BitRelocation;0;0
getStartLabel;getStartLabel();1;TR;LoadLabelRelative32BitRelocation;0;0
operator=;operator=(class TR::LoadLabelRelative32BitRelocation &&);0;TR;LoadLabelRelative32BitRelocation;1;0
operator=;operator=(const class TR::LoadLabelRelative32BitRelocation &);0;TR;LoadLabelRelative32BitRelocation;1;0
setDeltaToStartLabel;setDeltaToStartLabel(int32_t);1;TR;LoadLabelRelative32BitRelocation;0;0
setEndLabel;setEndLabel(TR::LabelSymbol *);1;TR;LoadLabelRelative32BitRelocation;0;0
setLastInstruction;setLastInstruction(TR::Instruction *);1;TR;LoadLabelRelative32BitRelocation;0;0
setStartLabel;setStartLabel(TR::LabelSymbol *);1;TR;LoadLabelRelative32BitRelocation;0;0
~LoadLabelRelative32BitRelocation;~LoadLabelRelative32BitRelocation();1;TR;LoadLabelRelative32BitRelocation;1;0
LoadLabelRelative64BitRelocation;LoadLabelRelative64BitRelocation();1;TR;LoadLabelRelative64BitRelocation;0;0
LoadLabelRelative64BitRelocation;LoadLabelRelative64BitRelocation(TR::Instruction *,TR::LabelSymbol *);0;TR;LoadLabelRelative64BitRelocation;0;0
getLastInstruction;getLastInstruction();1;TR;LoadLabelRelative64BitRelocation;0;0
operator=;operator=(const class TR::LoadLabelRelative64BitRelocation &);0;TR;LoadLabelRelative64BitRelocation;1;0
operator=;operator=(class TR::LoadLabelRelative64BitRelocation &&);0;TR;LoadLabelRelative64BitRelocation;1;0
setLastInstruction;setLastInstruction(TR::Instruction *);1;TR;LoadLabelRelative64BitRelocation;0;0
~LoadLabelRelative64BitRelocation;~LoadLabelRelative64BitRelocation();1;TR;LoadLabelRelative64BitRelocation;1;0
Linkage;Linkage(class OMR::Linkage &&);1;OMR;Linkage;1;0
Linkage;Linkage(const class OMR::Linkage &);0;OMR;Linkage;1;0
loadArguments;loadArguments(TR::Instruction *,TR::ResolvedMethodSymbol *);1;OMR::X86;Linkage;0;0
loadArguments;loadArguments(TR::Node *,uint8_t *,_Bool,int32_t *,_Bool);0;OMR::X86;Linkage;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;Linkage;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;Linkage;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Linkage;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;Linkage;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;Linkage;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;Linkage;0;0
operator=;operator=(const class OMR::Linkage &);1;OMR;Linkage;1;0
operator=;operator=(class OMR::Linkage &&);0;OMR;Linkage;1;0
GCStackAtlas;GCStackAtlas(class TR::GCStackAtlas &&);0;TR;GCStackAtlas;1;0
GCStackAtlas;GCStackAtlas(const class TR::GCStackAtlas &);0;TR;GCStackAtlas;1;0
~GCStackAtlas;~GCStackAtlas();1;OMR;GCStackAtlas;1;0
StackMemoryRegion;StackMemoryRegion(class TR_Memory &);1;TR;StackMemoryRegion;0;0
operator=;operator=(const class TR_BitVectorIterator &);1;TR;BitVectorIterator;1;0
operator=;operator=(class TR_BitVectorIterator &&);0;TR;BitVectorIterator;1;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;GCRegisterMap;0;0
operator delete;operator delete(void *,size_t);0;OMR;GCRegisterMap;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;GCRegisterMap;0;0
operator=;operator=(const class OMR::CFG &);1;OMR;CFG;1;0
operator=;operator=(class OMR::CFG &&);0;OMR;CFG;1;0
CodeGenerator;CodeGenerator(const class OMR::CodeGenerator &);1;OMR;CodeGenerator;1;0
CodeGenerator;CodeGenerator(class OMR::CodeGenerator &&);0;OMR;CodeGenerator;1;0
apply16BitLabelRelativeRelocation;apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,int8_t,_Bool);1;OMR;CodeGenerator;0;0
apply16BitLabelRelativeRelocation;apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);0;OMR;CodeGenerator;0;0
estimateRegisterPressure;estimateRegisterPressure(TR::Node *,int32_t &,int32_t &,int32_t,class TR_BitVector *,_Bool,vcount_t,TR::SymbolReference *,_Bool &,_Bool,_Bool &);1;OMR;CodeGenerator;0;0
estimateRegisterPressure;estimateRegisterPressure(TR::Block *,vcount_t,int32_t,int32_t,_Bool &,int32_t,class TR_BitVector *,TR::SymbolReference *,_Bool);0;OMR;CodeGenerator;0;0
generateDebugCounterBump;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,class TR_ScratchRegisterManager &);1;OMR;CodeGenerator;0;0
getSupportsConstantOffsetInAddressing;getSupportsConstantOffsetInAddressing(int64_t);1;OMR;CodeGenerator;0;0
getSupportsConstantOffsetInAddressing;getSupportsConstantOffsetInAddressing();0;OMR;CodeGenerator;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;GCStackAtlas;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;GCStackAtlas;0;0
findOrCreateSymRefWithKnownObject;findOrCreateSymRefWithKnownObject(TR::SymbolReference *,uintptrj_t *,_Bool);1;OMR;SymbolReferenceTable;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;Symbol;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Linkage;0;0
setParameterLinkageRegisterIndex;setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *);1;OMR;Linkage;0;1
setParameterLinkageRegisterIndex;setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *,List<TR::ParameterSymbol> &);0;OMR;Linkage;0;1
storeArguments;storeArguments(TR::Instruction *,TR::ResolvedMethodSymbol *);1;OMR::X86;Linkage;0;0
storeArguments;storeArguments(TR::Node *,uint8_t *,_Bool,int32_t *);0;OMR::X86;Linkage;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;Instruction;0;0
operator=;operator=(class OMR::Instruction &&);1;OMR;Instruction;1;0
operator=;operator=(const class OMR::Instruction &);0;OMR;Instruction;1;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;CodeGenerator;0;0
Instruction;Instruction();1;OMR;Instruction;0;0
Instruction;Instruction(class OMR::Instruction &&);0;OMR;Instruction;1;0
operator delete;operator delete(void *,TR::Region &);1;OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;GCRegisterMap;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;GCRegisterMap;0;0
LabelSymbol;LabelSymbol(const class OMR::LabelSymbol &);1;OMR;LabelSymbol;1;0
operator delete;operator delete(void *,size_t);1;OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;AheadOfTimeCompile;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;AheadOfTimeCompile;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;AheadOfTimeCompile;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;AheadOfTimeCompile;0;0
operator delete;operator delete(void *,size_t);1;TR;Relocation;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;Relocation;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;TR;Relocation;0;0
operator new[];operator new[](size_t,TR::Region &);0;TR;Relocation;0;0
ExternalOrderedPair32BitRelocation;ExternalOrderedPair32BitRelocation(class TR::ExternalOrderedPair32BitRelocation &&);1;TR;ExternalOrderedPair32BitRelocation;1;0
ExternalOrderedPair32BitRelocation;ExternalOrderedPair32BitRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *);0;TR;ExternalOrderedPair32BitRelocation;0;0
ExternalOrderedPair32BitRelocation;ExternalOrderedPair32BitRelocation(const class TR::ExternalOrderedPair32BitRelocation &);0;TR;ExternalOrderedPair32BitRelocation;1;0
IteratedExternalRelocation;IteratedExternalRelocation(const class TR::IteratedExternalRelocation &);1;TR;IteratedExternalRelocation;1;0
IteratedExternalRelocation;IteratedExternalRelocation();0;TR;IteratedExternalRelocation;0;0
IteratedExternalRelocation;IteratedExternalRelocation(class TR::IteratedExternalRelocation &&);0;TR;IteratedExternalRelocation;1;0
LabelRelocation;LabelRelocation(const class TR::LabelRelocation &);1;TR;LabelRelocation;1;0
LabelRelocation;LabelRelocation(class TR::LabelRelocation &&);0;TR;LabelRelocation;1;0
LoadLabelRelative16BitRelocation;LoadLabelRelative16BitRelocation();1;TR;LoadLabelRelative16BitRelocation;0;0
LoadLabelRelative16BitRelocation;LoadLabelRelative16BitRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t);0;TR;LoadLabelRelative16BitRelocation;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
RegisterDependencyConditions;RegisterDependencyConditions(const class OMR::RegisterDependencyConditions &);1;OMR;RegisterDependencyConditions;1;0
RegisterDependencyConditions;RegisterDependencyConditions(class OMR::RegisterDependencyConditions &&);0;OMR;RegisterDependencyConditions;1;0
RegisterDependencyConditions;RegisterDependencyConditions();0;OMR;RegisterDependencyConditions;0;0
RegisterDependencyConditions;RegisterDependencyConditions(const class OMR::X86::RegisterDependencyConditions &);0;OMR::X86;RegisterDependencyConditions;1;0
RegisterDependencyConditions;RegisterDependencyConditions(class OMR::X86::RegisterDependencyConditions &&);0;OMR::X86;RegisterDependencyConditions;1;0
RegisterDependencyConditions;RegisterDependencyConditions(class TR_X86RegisterDependencyIndex,class TR_X86RegisterDependencyIndex,class TR_Memory *);0;OMR::X86;RegisterDependencyConditions;0;0
RegisterDependencyConditions;RegisterDependencyConditions(TR::Node *,TR::CodeGenerator *,class TR_X86RegisterDependencyIndex,List<TR::Register> *);0;OMR::X86;RegisterDependencyConditions;0;0
addPostCondition;addPostCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);1;OMR::X86;RegisterDependencyConditions;0;0
addPreCondition;addPreCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);1;OMR::X86;RegisterDependencyConditions;0;0
assignPostConditionRegisters;assignPostConditionRegisters(TR::Instruction *,enum TR_RegisterKinds,TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
assignPreConditionRegisters;assignPreConditionRegisters(TR::Instruction *,enum TR_RegisterKinds,TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
blockPostConditionRealDependencyRegisters;blockPostConditionRealDependencyRegisters(TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
blockPostConditionRegisters;blockPostConditionRegisters();1;OMR::X86;RegisterDependencyConditions;0;0
blockPreConditionRealDependencyRegisters;blockPreConditionRealDependencyRegisters(TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
blockPreConditionRegisters;blockPreConditionRegisters();1;OMR::X86;RegisterDependencyConditions;0;0
clone;clone(TR::CodeGenerator *,class TR_X86RegisterDependencyIndex);1;OMR::X86;RegisterDependencyConditions;0;0
createRegisterAssociationDirective;createRegisterAssociationDirective(TR::Instruction *,TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
defsRegister;defsRegister(TR::Register *);1;OMR::X86;RegisterDependencyConditions;0;1
findPostCondition;findPostCondition(TR::class RealRegister::RegNum);1;OMR::X86;RegisterDependencyConditions;0;0
findPostCondition;findPostCondition(TR::Register *);0;OMR::X86;RegisterDependencyConditions;0;0
findPreCondition;findPreCondition(TR::class RealRegister::RegNum);1;OMR::X86;RegisterDependencyConditions;0;0
findPreCondition;findPreCondition(TR::Register *);0;OMR::X86;RegisterDependencyConditions;0;0
getAddCursorForPost;getAddCursorForPost();1;OMR::X86;RegisterDependencyConditions;0;0
getAddCursorForPre;getAddCursorForPre();1;OMR::X86;RegisterDependencyConditions;0;0
getNumPostConditions;getNumPostConditions();1;OMR::X86;RegisterDependencyConditions;0;0
getNumPreConditions;getNumPreConditions();1;OMR::X86;RegisterDependencyConditions;0;0
getPostConditions;getPostConditions();1;OMR::X86;RegisterDependencyConditions;0;0
getPreConditions;getPreConditions();1;OMR::X86;RegisterDependencyConditions;0;0
getRealRegisterFromVirtual;getRealRegisterFromVirtual(TR::Register *,TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;RegisterDependencyConditions;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;RegisterDependencyConditions;0;0
numReferencedFPRegisters;numReferencedFPRegisters(TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
numReferencedGPRegisters;numReferencedGPRegisters(TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,size_t);0;OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;RegisterDependencyConditions;0;0
printDependencyConditions;printDependencyConditions(class TR_X86RegisterDependencyGroup *,class TR_X86RegisterDependencyIndex,char *,FILE *);1;OMR::X86;RegisterDependencyConditions;0;0
printFullRegisterDependencyInfo;printFullRegisterDependencyInfo(FILE *);1;OMR::X86;RegisterDependencyConditions;0;0
refsRegister;refsRegister(TR::Register *);1;OMR::X86;RegisterDependencyConditions;0;1
setAddCursorForPost;setAddCursorForPost(class TR_X86RegisterDependencyIndex);1;OMR::X86;RegisterDependencyConditions;0;0
setAddCursorForPre;setAddCursorForPre(class TR_X86RegisterDependencyIndex);1;OMR::X86;RegisterDependencyConditions;0;0
setMayNeedToPopFPRegisters;setMayNeedToPopFPRegisters(_Bool);1;OMR::X86;RegisterDependencyConditions;0;0
setNeedToClearFPStack;setNeedToClearFPStack(_Bool);1;OMR::X86;RegisterDependencyConditions;0;0
setNumPostConditions;setNumPostConditions(class TR_X86RegisterDependencyIndex,class TR_Memory *);1;OMR::X86;RegisterDependencyConditions;0;0
setNumPreConditions;setNumPreConditions(class TR_X86RegisterDependencyIndex,class TR_Memory *);1;OMR::X86;RegisterDependencyConditions;0;0
stopAddingConditions;stopAddingConditions();1;OMR::X86;RegisterDependencyConditions;0;0
stopAddingPostConditions;stopAddingPostConditions();1;OMR::X86;RegisterDependencyConditions;0;0
stopAddingPreConditions;stopAddingPreConditions();1;OMR::X86;RegisterDependencyConditions;0;0
unblockPostConditionRealDependencyRegisters;unblockPostConditionRealDependencyRegisters(TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
unblockPostConditionRegisters;unblockPostConditionRegisters();1;OMR::X86;RegisterDependencyConditions;0;0
unblockPreConditionRealDependencyRegisters;unblockPreConditionRealDependencyRegisters(TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
unblockPreConditionRegisters;unblockPreConditionRegisters();1;OMR::X86;RegisterDependencyConditions;0;0
unionDependencies;unionDependencies(class TR_X86RegisterDependencyGroup *,class TR_X86RegisterDependencyIndex,TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);1;OMR::X86;RegisterDependencyConditions;0;0
unionNoRegPostCondition;unionNoRegPostCondition(TR::Register *,TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
unionPostCondition;unionPostCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);1;OMR::X86;RegisterDependencyConditions;0;0
unionPreCondition;unionPreCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);1;OMR::X86;RegisterDependencyConditions;0;0
unionRealDependencies;unionRealDependencies(class TR_X86RegisterDependencyGroup *,class TR_X86RegisterDependencyIndex,TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool);1;OMR::X86;RegisterDependencyConditions;0;0
useRegisters;useRegisters(TR::Instruction *,TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;0
usesRegister;usesRegister(TR::Register *);1;OMR::X86;RegisterDependencyConditions;0;1
~RegisterDependencyConditions;~RegisterDependencyConditions();1;OMR;RegisterDependencyConditions;1;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;AliasBuilder;0;0
operator delete;operator delete(void *,TR::Region &);1;TR;ScratchRegisterManager;0;0
operator delete;operator delete(void *,size_t);0;TR;ScratchRegisterManager;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;TR;ScratchRegisterManager;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;ScratchRegisterManager;0;0
operator new[];operator new[](size_t,TR::Region &);1;TR;ScratchRegisterManager;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;TR;ScratchRegisterManager;0;0
Snippet;Snippet(const class TR::Snippet &);0;TR;Snippet;1;0
Snippet;Snippet(class TR::Snippet &&);0;TR;Snippet;1;0
UnresolvedDataSnippet;UnresolvedDataSnippet(class OMR::UnresolvedDataSnippet &&);1;OMR;UnresolvedDataSnippet;1;0
UnresolvedDataSnippet;UnresolvedDataSnippet(const class OMR::UnresolvedDataSnippet &);0;OMR;UnresolvedDataSnippet;1;0
UnresolvedDataSnippet;UnresolvedDataSnippet(TR::CodeGenerator *,TR::Node *,TR::SymbolReference *,_Bool,_Bool);0;OMR;UnresolvedDataSnippet;0;0
UnresolvedDataSnippet;UnresolvedDataSnippet(const class TR::UnresolvedDataSnippet &);0;TR;UnresolvedDataSnippet;1;0
UnresolvedDataSnippet;UnresolvedDataSnippet(class TR::UnresolvedDataSnippet &&);0;TR;UnresolvedDataSnippet;1;0
create;create(TR::CodeGenerator *,TR::Node *,TR::SymbolReference *,_Bool,_Bool);1;OMR;UnresolvedDataSnippet;0;0
getAddressOfDataReference;getAddressOfDataReference();1;OMR;UnresolvedDataSnippet;0;0
getDataReferenceInstruction;getDataReferenceInstruction();1;OMR;UnresolvedDataSnippet;0;0
getDataSymbolReference;getDataSymbolReference();1;OMR;UnresolvedDataSnippet;0;0
isUnresolvedStore;isUnresolvedStore();1;OMR;UnresolvedDataSnippet;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;Snippet;0;0
operator=;operator=(class OMR::UnresolvedDataSnippet &&);0;OMR;UnresolvedDataSnippet;1;0
operator=;operator=(const class OMR::UnresolvedDataSnippet &);0;OMR;UnresolvedDataSnippet;1;0
operator=;operator=(const class TR::UnresolvedDataSnippet &);0;TR;UnresolvedDataSnippet;1;0
operator=;operator=(class TR::UnresolvedDataSnippet &&);0;TR;UnresolvedDataSnippet;1;0
resetUnresolvedStore;resetUnresolvedStore();1;OMR;UnresolvedDataSnippet;0;0
setAddressOfDataReference;setAddressOfDataReference(uint8_t *);1;OMR;UnresolvedDataSnippet;0;0
setDataReferenceInstruction;setDataReferenceInstruction(TR::Instruction *);1;OMR;UnresolvedDataSnippet;0;0
setDataSymbolReference;setDataSymbolReference(TR::SymbolReference *);1;OMR;UnresolvedDataSnippet;0;0
setUnresolvedStore;setUnresolvedStore();1;OMR;UnresolvedDataSnippet;0;0
~UnresolvedDataSnippet;~UnresolvedDataSnippet();1;OMR;UnresolvedDataSnippet;1;0
RegisterPair;RegisterPair(class TR::RegisterPair &&);0;TR;RegisterPair;1;0
RegisterPair;RegisterPair(const class TR::RegisterPair &);0;TR;RegisterPair;1;0
Machine;Machine(class TR::Machine &&);0;TR;Machine;1;0
Machine;Machine(const class TR::Machine &);0;TR;Machine;1;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Relocation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;TR;Relocation;0;0
operator delete[];operator delete[](void *,TR::Region &);0;TR;Relocation;0;0
operator=;operator=(class TR::Relocation &&);1;TR;Relocation;1;0
operator=;operator=(const class TR::Relocation &);0;TR;Relocation;1;0
IteratedExternalRelocation;IteratedExternalRelocation(uint8_t *,TR_ExternalRelocationTargetKind,flags8_t,TR::CodeGenerator *);1;TR;IteratedExternalRelocation;0;0
AheadOfTimeCompile;AheadOfTimeCompile(uint32_t *,TR::Compilation *);1;OMR;AheadOfTimeCompile;0;0
AheadOfTimeCompile;AheadOfTimeCompile(const class OMR::AheadOfTimeCompile &);0;OMR;AheadOfTimeCompile;1;0
operator=;operator=(const class OMR::CodeGenPhase &);1;OMR;CodeGenPhase;1;0
operator=;operator=(class OMR::CodeGenPhase &&);0;OMR;CodeGenPhase;1;0
MemoryReference;MemoryReference(class OMR::MemoryReference &&);1;OMR;MemoryReference;1;0
MemoryReference;MemoryReference();0;OMR;MemoryReference;0;0
MemoryReference;MemoryReference(const class OMR::MemoryReference &);0;OMR;MemoryReference;1;0
MemoryReference;MemoryReference(const class OMR::X86::MemoryReference &);0;OMR::X86;MemoryReference;1;0
MemoryReference;MemoryReference(TR::MemoryReference &,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::Register *,uint8_t,intptrj_t,TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::Register *,uint8_t,TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(intptrj_t,TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::SymbolReference *,TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Register *,TR::SymbolReference *,TR::Register *,uint8_t,TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::SymbolReference *,intptrj_t,TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Node *,TR::CodeGenerator *,_Bool);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::LabelSymbol *,TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(TR::IA32DataSnippet *,TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(class OMR::X86::MemoryReference &&);0;OMR::X86;MemoryReference;1;0
MemoryReference;MemoryReference(TR::Register *,intptrj_t,TR::CodeGenerator *);0;OMR::X86;MemoryReference;0;0
MemoryReference;MemoryReference(const class OMR::X86::AMD64::MemoryReference &);0;OMR::X86::AMD64;MemoryReference;1;0
MemoryReference;MemoryReference(TR::SymbolReference *,TR::CodeGenerator *,class TR_ScratchRegisterManager *);0;OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(class OMR::X86::AMD64::MemoryReference &&);0;OMR::X86::AMD64;MemoryReference;1;0
MemoryReference;MemoryReference(TR::SymbolReference *,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);0;OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(TR::Node *,TR::CodeGenerator *,_Bool,class TR_ScratchRegisterManager *);0;OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);0;OMR::X86::AMD64;MemoryReference;0;0
MemoryReference;MemoryReference(class TR::MemoryReference &,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *);0;TR;MemoryReference;0;0
ModRM;ModRM(uint8_t *);1;OMR::X86;MemoryReference;0;0
SIB;SIB(uint8_t *);1;OMR::X86;MemoryReference;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint32_t,uint8_t *,TR::Node *,TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;0
addMetaDataForCodeAddressDisplacementOnly;addMetaDataForCodeAddressDisplacementOnly(intptrj_t,uint8_t *,TR::CodeGenerator *);1;OMR::X86::AMD64;MemoryReference;0;0
addMetaDataForCodeAddressWithLoad;addMetaDataForCodeAddressWithLoad(uint8_t *,TR::Instruction *,TR::CodeGenerator *);1;OMR::X86::AMD64;MemoryReference;0;0
assignRegisters;assignRegisters(TR::Instruction *,TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;1
blockRegisters;blockRegisters();1;OMR::X86;MemoryReference;0;1
checkAndDecReferenceCount;checkAndDecReferenceCount(TR::Node *,rcount_t,TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;0
consolidateRegisters;consolidateRegisters(TR::Node *,TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;0
convertMultiplierToStride;convertMultiplierToStride(int32_t);1;OMR::X86;MemoryReference;0;0
decNodeReferenceCounts;decNodeReferenceCounts(TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;1
enlarge;enlarge(TR::CodeGenerator *,int32_t,int32_t,_Bool);1;OMR::X86;MemoryReference;0;1
estimateBinaryLength;estimateBinaryLength(TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;1
evaluate;evaluate(TR::Node *,TR::CodeGenerator *,TR::Node *);1;OMR::X86;MemoryReference;0;0
finishInitialization;finishInitialization(TR::CodeGenerator *,class TR_ScratchRegisterManager *);1;OMR::X86::AMD64;MemoryReference;0;0
generateBinaryEncoding;generateBinaryEncoding(uint8_t *,TR::Instruction *,TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;1
getAddressRegister;getAddressRegister();1;OMR::X86;MemoryReference;0;0
getBaseNode;getBaseNode();1;OMR::X86;MemoryReference;0;0
getBaseRegister;getBaseRegister();1;OMR::X86;MemoryReference;0;0
getBinaryLengthLowerBound;getBinaryLengthLowerBound(TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;0
getDataSnippet;getDataSnippet();1;OMR::X86;MemoryReference;0;0
getDisplacement;getDisplacement();1;OMR::X86;MemoryReference;0;0
getFlags;getFlags();1;OMR::X86;MemoryReference;0;0
getIndexNode;getIndexNode();1;OMR::X86;MemoryReference;0;0
getIndexRegister;getIndexRegister();1;OMR::X86;MemoryReference;0;0
getLabel;getLabel();1;OMR::X86;MemoryReference;0;0
getNextRegister;getNextRegister(TR::Register *);1;OMR::X86;MemoryReference;0;0
getNumMRReferencedGPRegisters;getNumMRReferencedGPRegisters();1;OMR::X86;MemoryReference;0;0
getReloKind;getReloKind();1;OMR::X86;MemoryReference;0;0
getStride;getStride();1;OMR::X86;MemoryReference;0;0
getStrideForNode;getStrideForNode(TR::Node *,TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;0
getStrideMultiplier;getStrideMultiplier();1;OMR::X86;MemoryReference;0;0
getSymbolReference;getSymbolReference();1;OMR::X86;MemoryReference;0;0
getUnresolvedDataSnippet;getUnresolvedDataSnippet();1;OMR::X86;MemoryReference;0;0
hasUnresolvedDataSnippet;hasUnresolvedDataSnippet();1;OMR::X86;MemoryReference;0;0
hasUnresolvedVirtualCallSnippet;hasUnresolvedVirtualCallSnippet();1;OMR::X86;MemoryReference;0;0
ignoreVolatile;ignoreVolatile();1;OMR::X86;MemoryReference;0;0
inUpcastingMode;inUpcastingMode();1;OMR::X86;MemoryReference;0;0
initialize;initialize(TR::SymbolReference *,TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;0
isForceSIBByte;isForceSIBByte();1;OMR::X86;MemoryReference;0;0
isForceWideDisplacement;isForceWideDisplacement();1;OMR::X86;MemoryReference;0;0
isValidStrideMultiplier;isValidStrideMultiplier(int32_t);1;OMR::X86;MemoryReference;0;0
isValidStrideShift;isValidStrideShift(int32_t);1;OMR::X86;MemoryReference;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;MemoryReference;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;MemoryReference;0;0
needsAddressLoadInstruction;needsAddressLoadInstruction(intptrj_t,TR::CodeGenerator *);1;OMR::X86::AMD64;MemoryReference;0;0
needsCodeAbsoluteExternalRelocation;needsCodeAbsoluteExternalRelocation();1;OMR::X86;MemoryReference;0;0
needsSIBByte;needsSIBByte();1;OMR::X86;MemoryReference;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;MemoryReference;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;MemoryReference;0;0
operator delete;operator delete(void *,size_t);0;OMR;MemoryReference;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;MemoryReference;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;MemoryReference;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;MemoryReference;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;MemoryReference;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;MemoryReference;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;MemoryReference;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;MemoryReference;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;MemoryReference;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;MemoryReference;0;0
operator=;operator=(class OMR::MemoryReference &&);1;OMR;MemoryReference;1;0
operator=;operator=(const class OMR::MemoryReference &);0;OMR;MemoryReference;1;0
operator=;operator=(class OMR::X86::MemoryReference &&);0;OMR::X86;MemoryReference;1;0
operator=;operator=(const class OMR::X86::MemoryReference &);0;OMR::X86;MemoryReference;1;0
operator=;operator=(const class OMR::X86::AMD64::MemoryReference &);0;OMR::X86::AMD64;MemoryReference;1;0
operator=;operator=(class OMR::X86::AMD64::MemoryReference &&);0;OMR::X86::AMD64;MemoryReference;1;0
operator=;operator=(const class TR::MemoryReference &);0;TR;MemoryReference;1;0
operator=;operator=(class TR::MemoryReference &&);0;TR;MemoryReference;1;0
populateMemoryReference;populateMemoryReference(TR::Node *,TR::CodeGenerator *,TR::Node *);1;OMR::X86;MemoryReference;0;0
processAsFPVolatile;processAsFPVolatile();1;OMR::X86;MemoryReference;0;0
processAsLongVolatileHigh;processAsLongVolatileHigh();1;OMR::X86;MemoryReference;0;0
processAsLongVolatileLow;processAsLongVolatileLow();1;OMR::X86;MemoryReference;0;0
refsRegister;refsRegister(TR::Register *);1;OMR::X86;MemoryReference;0;1
requiresLockPrefix;requiresLockPrefix();1;OMR::X86;MemoryReference;0;0
rexBits;rexBits();1;OMR::X86;MemoryReference;0;1
self;self();1;OMR;MemoryReference;0;0
setBaseNode;setBaseNode(TR::Node *);1;OMR::X86;MemoryReference;0;0
setBaseRegister;setBaseRegister(TR::Register *);1;OMR::X86;MemoryReference;0;0
setConstantDataSnippet;setConstantDataSnippet(TR::IA32DataSnippet *);1;OMR::X86;MemoryReference;0;0
setFlags;setFlags(uint8_t);1;OMR::X86;MemoryReference;0;0
setForceSIBByte;setForceSIBByte();1;OMR::X86;MemoryReference;0;0
setForceWideDisplacement;setForceWideDisplacement();1;OMR::X86;MemoryReference;0;0
setHasUnresolvedDataSnippet;setHasUnresolvedDataSnippet();1;OMR::X86;MemoryReference;0;0
setHasUnresolvedVirtualCallSnippet;setHasUnresolvedVirtualCallSnippet();1;OMR::X86;MemoryReference;0;0
setIgnoreVolatile;setIgnoreVolatile();1;OMR::X86;MemoryReference;0;0
setInUpcastingMode;setInUpcastingMode(_Bool);1;OMR::X86;MemoryReference;0;0
setIndexNode;setIndexNode(TR::Node *);1;OMR::X86;MemoryReference;0;0
setIndexRegister;setIndexRegister(TR::Register *);1;OMR::X86;MemoryReference;0;0
setLabel;setLabel(TR::LabelSymbol *);1;OMR::X86;MemoryReference;0;0
setNeedsCodeAbsoluteExternalRelocation;setNeedsCodeAbsoluteExternalRelocation();1;OMR::X86;MemoryReference;0;0
setPreferRIPRelative;setPreferRIPRelative(_Bool);1;OMR::X86::AMD64;MemoryReference;0;0
setProcessAsFPVolatile;setProcessAsFPVolatile();1;OMR::X86;MemoryReference;0;0
setProcessAsLongVolatileHigh;setProcessAsLongVolatileHigh();1;OMR::X86;MemoryReference;0;0
setProcessAsLongVolatileLow;setProcessAsLongVolatileLow();1;OMR::X86;MemoryReference;0;0
setReloKind;setReloKind(int32_t);1;OMR::X86;MemoryReference;0;0
setRequiresLockPrefix;setRequiresLockPrefix();1;OMR::X86;MemoryReference;0;0
setStride;setStride(uint8_t);1;OMR::X86;MemoryReference;0;0
setStrideFieldInSIB;setStrideFieldInSIB(uint8_t *);1;OMR::X86;MemoryReference;0;0
setStrideFromMultiplier;setStrideFromMultiplier(uint8_t);1;OMR::X86;MemoryReference;0;0
setUnresolvedDataSnippet;setUnresolvedDataSnippet(TR::UnresolvedDataSnippet *);1;OMR::X86;MemoryReference;0;0
stopUsingRegisters;stopUsingRegisters(TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;1
unblockRegisters;unblockRegisters();1;OMR::X86;MemoryReference;0;1
useRegisters;useRegisters(TR::Instruction *,TR::CodeGenerator *);1;OMR::X86;MemoryReference;0;1
~MemoryReference;~MemoryReference();1;OMR;MemoryReference;1;0
IA32ConstantDataSnippet;IA32ConstantDataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t);1;TR;IA32ConstantDataSnippet;0;0
IA32DataSnippet;IA32DataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t);1;TR;IA32DataSnippet;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;IA32DataSnippet;0;0
getConstantSize;getConstantSize();1;TR;IA32ConstantDataSnippet;0;0
getDataAs2Bytes;getDataAs2Bytes();1;TR;IA32DataSnippet;0;0
getDataAs4Bytes;getDataAs4Bytes();1;TR;IA32DataSnippet;0;0
getDataAs8Bytes;getDataAs8Bytes();1;TR;IA32DataSnippet;0;0
getDataSize;getDataSize();1;TR;IA32DataSnippet;0;1
getValue;getValue();1;TR;IA32DataSnippet;0;0
operator=;operator=(class TR::IA32DataSnippet &&);0;TR;IA32DataSnippet;1;0
operator=;operator=(const class TR::IA32DataSnippet &);0;TR;IA32DataSnippet;1;0
operator=;operator=(class TR::IA32ConstantDataSnippet &&);0;TR;IA32ConstantDataSnippet;1;0
operator=;operator=(const class TR::IA32ConstantDataSnippet &);0;TR;IA32ConstantDataSnippet;1;0
setClassAddress;setClassAddress(_Bool);1;TR;IA32DataSnippet;0;1
~IA32ConstantDataSnippet;~IA32ConstantDataSnippet();1;TR;IA32ConstantDataSnippet;1;0
~IA32DataSnippet;~IA32DataSnippet();1;TR;IA32DataSnippet;1;0
Register;Register(enum TR_RegisterKinds,uint16_t);1;OMR;Register;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Machine;0;0
RealRegister;RealRegister(const class OMR::RealRegister &);1;OMR;RealRegister;1;0
RealRegister;RealRegister(class OMR::RealRegister &&);0;OMR;RealRegister;1;0
Register;Register(uint32_t);1;OMR;Register;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Register;0;0
fpMapToStackRelativeRegister;fpMapToStackRelativeRegister(TR::Register *);1;OMR::X86;Machine;0;0
fpMapToStackRelativeRegister;fpMapToStackRelativeRegister(int32_t);0;OMR::X86;Machine;0;0
UnresolvedDataSnippet;UnresolvedDataSnippet(const class OMR::UnresolvedDataSnippet &);1;OMR;UnresolvedDataSnippet;1;0
UnresolvedDataSnippet;UnresolvedDataSnippet(class OMR::UnresolvedDataSnippet &&);0;OMR;UnresolvedDataSnippet;1;0
operator delete;operator delete(void *,size_t);1;OMR;MemoryReference;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;MemoryReference;0;0
operator=;operator=(const class OMR::MemoryReference &);1;OMR;MemoryReference;1;0
operator=;operator=(class OMR::MemoryReference &&);0;OMR;MemoryReference;1;0
bitwise32;bitwise32(TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);1;TR;X86ComputeCC;0;0
setCarryBorrow;setCarryBorrow(TR::Node *,_Bool,TR::CodeGenerator *);1;TR;X86ComputeCC;0;0
RegisterDependencyConditions;RegisterDependencyConditions(class OMR::RegisterDependencyConditions &&);1;OMR;RegisterDependencyConditions;1;0
RegisterDependencyConditions;RegisterDependencyConditions(const class OMR::RegisterDependencyConditions &);0;OMR;RegisterDependencyConditions;1;0
operator delete;operator delete(void *,size_t);1;OMR;RegisterDependencyConditions;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;RegisterDependencyConditions;0;0
useRegisters;useRegisters(TR::Instruction *,TR::CodeGenerator *);1;OMR::X86;RegisterDependencyConditions;0;1
AMD64Imm64Instruction;AMD64Imm64Instruction(const class TR::AMD64Imm64Instruction &);1;TR;AMD64Imm64Instruction;1;0
AMD64Imm64Instruction;AMD64Imm64Instruction(TR::RegisterDependencyConditions *,uint64_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(class TR::AMD64Imm64Instruction &&);0;TR;AMD64Imm64Instruction;1;0
AMD64Imm64Instruction;AMD64Imm64Instruction(TR::RegisterDependencyConditions *,uint64_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::CodeGenerator *);0;TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(uint64_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(uint64_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::CodeGenerator *);0;TR;AMD64Imm64Instruction;0;0
AMD64Imm64Instruction;AMD64Imm64Instruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;AMD64Imm64Instruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);1;TR;AMD64Imm64SymInstruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;AMD64Imm64SymInstruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *,uint8_t *);0;TR;AMD64Imm64SymInstruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;AMD64Imm64SymInstruction;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;AMD64Imm64SymInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;AMD64Imm64Instruction;0;0
getSourceImmediate;getSourceImmediate();1;TR;AMD64Imm64Instruction;0;0
getSymbolReference;getSymbolReference();1;TR;AMD64Imm64SymInstruction;0;0
operator=;operator=(class TR::AMD64Imm64Instruction &&);0;TR;AMD64Imm64Instruction;1;0
operator=;operator=(const class TR::AMD64Imm64Instruction &);0;TR;AMD64Imm64Instruction;1;0
operator=;operator=(class TR::AMD64Imm64SymInstruction &&);0;TR;AMD64Imm64SymInstruction;1;0
operator=;operator=(const class TR::AMD64Imm64SymInstruction &);0;TR;AMD64Imm64SymInstruction;1;0
setSourceImmediate;setSourceImmediate(uint64_t);1;TR;AMD64Imm64Instruction;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);1;TR;AMD64Imm64SymInstruction;0;0
~AMD64Imm64Instruction;~AMD64Imm64Instruction();1;TR;AMD64Imm64Instruction;1;0
~AMD64Imm64SymInstruction;~AMD64Imm64SymInstruction();1;TR;AMD64Imm64SymInstruction;1;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t);1;TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(uint64_t,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);0;TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t);0;TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(uint64_t,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);0;TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);0;TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);0;TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64SymInstruction;AMD64RegImm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *);1;TR;AMD64RegImm64SymInstruction;0;0
AMD64RegImm64SymInstruction;AMD64RegImm64SymInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;AMD64RegImm64SymInstruction;0;0
X86RegInstruction;X86RegInstruction(class TR::X86RegInstruction &&);1;TR;X86RegInstruction;1;0
X86RegInstruction;X86RegInstruction(const class TR::X86RegInstruction &);0;TR;X86RegInstruction;1;0
X86RegInstruction;X86RegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::CodeGenerator *);0;TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *);0;TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86RegInstruction;0;0
X86RegInstruction;X86RegInstruction(TR::RegisterDependencyConditions *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86RegInstruction;0;0
aboutToAssignTargetRegister;aboutToAssignTargetRegister();1;TR;X86RegInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;AMD64RegImm64Instruction;0;0
applyTargetRegisterToModRMByte;applyTargetRegisterToModRMByte(uint8_t *);1;TR;X86RegInstruction;0;0
autoSetReloKind;autoSetReloKind();1;TR;AMD64RegImm64SymInstruction;0;0
getIA32RegMemInstruction;getIA32RegMemInstruction();1;TR;X86RegInstruction;0;1
getIA32RegRegInstruction;getIA32RegRegInstruction();1;TR;X86RegInstruction;0;1
getReloKind;getReloKind();1;TR;AMD64RegImm64Instruction;0;0
getSourceImmediate;getSourceImmediate();1;TR;AMD64RegImm64Instruction;0;0
getSymbolReference;getSymbolReference();1;TR;AMD64RegImm64SymInstruction;0;0
operator=;operator=(class TR::X86RegInstruction &&);0;TR;X86RegInstruction;1;0
operator=;operator=(const class TR::X86RegInstruction &);0;TR;X86RegInstruction;1;0
operator=;operator=(const class TR::AMD64RegImm64Instruction &);0;TR;AMD64RegImm64Instruction;1;0
operator=;operator=(class TR::AMD64RegImm64Instruction &&);0;TR;AMD64RegImm64Instruction;1;0
operator=;operator=(const class TR::AMD64RegImm64SymInstruction &);0;TR;AMD64RegImm64SymInstruction;1;0
operator=;operator=(class TR::AMD64RegImm64SymInstruction &&);0;TR;AMD64RegImm64SymInstruction;1;0
setReloKind;setReloKind(int32_t);1;TR;AMD64RegImm64Instruction;0;0
setSourceImmediate;setSourceImmediate(uint64_t);1;TR;AMD64RegImm64Instruction;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);1;TR;AMD64RegImm64SymInstruction;0;0
setTargetRegister;setTargetRegister(TR::Register *);1;TR;X86RegInstruction;0;0
targetRegisterRexBits;targetRegisterRexBits();1;TR;X86RegInstruction;0;0
~AMD64RegImm64Instruction;~AMD64RegImm64Instruction();1;TR;AMD64RegImm64Instruction;1;0
~AMD64RegImm64SymInstruction;~AMD64RegImm64SymInstruction();1;TR;AMD64RegImm64SymInstruction;1;0
~X86RegInstruction;~X86RegInstruction();1;TR;X86RegInstruction;1;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Instruction *,uint8_t,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);1;TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Instruction *,uint8_t,uint8_t,TR::CodeGenerator *);0;TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Node *,uint8_t,TR::CodeGenerator *);0;TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *);0;TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Node *,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Node *,uint8_t,uint8_t,TR::CodeGenerator *);0;TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Node *,uint8_t,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Instruction *,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86AlignmentInstruction;0;0
getBoundary;getBoundary();1;TR;X86AlignmentInstruction;0;0
getMargin;getMargin();1;TR;X86AlignmentInstruction;0;0
operator=;operator=(class TR::X86AlignmentInstruction &&);0;TR;X86AlignmentInstruction;1;0
operator=;operator=(const class TR::X86AlignmentInstruction &);0;TR;X86AlignmentInstruction;1;0
~X86AlignmentInstruction;~X86AlignmentInstruction();1;TR;X86AlignmentInstruction;1;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(TR::Instruction *,const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::CodeGenerator *);1;TR;X86BoundaryAvoidanceInstruction;0;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(int32_t,const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::Instruction *,TR::CodeGenerator *);0;TR;X86BoundaryAvoidanceInstruction;0;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::Instruction *,TR::CodeGenerator *);0;TR;X86BoundaryAvoidanceInstruction;0;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(class TR::X86BoundaryAvoidanceInstruction &&);0;TR;X86BoundaryAvoidanceInstruction;1;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(const class TR::X86BoundaryAvoidanceInstruction &);0;TR;X86BoundaryAvoidanceInstruction;1;0
X86PatchableCodeAlignmentInstruction;X86PatchableCodeAlignmentInstruction(const struct TR_AtomicRegion *,TR::Instruction *,TR::CodeGenerator *);1;TR;X86PatchableCodeAlignmentInstruction;0;0
X86PatchableCodeAlignmentInstruction;X86PatchableCodeAlignmentInstruction(TR::Instruction *,const struct TR_AtomicRegion *,TR::CodeGenerator *);0;TR;X86PatchableCodeAlignmentInstruction;0;0
X86PatchableCodeAlignmentInstruction;X86PatchableCodeAlignmentInstruction(const struct TR_AtomicRegion *,TR::Instruction *,int32_t,TR::CodeGenerator *);0;TR;X86PatchableCodeAlignmentInstruction;0;0
betterPadLength;betterPadLength(int32_t,const struct TR_AtomicRegion *,int32_t);1;TR;X86BoundaryAvoidanceInstruction;0;1
getAtomicRegions;getAtomicRegions();1;TR;X86BoundaryAvoidanceInstruction;0;0
getBoundarySpacing;getBoundarySpacing();1;TR;X86BoundaryAvoidanceInstruction;0;0
getMaxPadding;getMaxPadding();1;TR;X86BoundaryAvoidanceInstruction;0;0
getPatchableCode;getPatchableCode();1;TR;X86PatchableCodeAlignmentInstruction;0;0
getSizeOfProtectiveNop;getSizeOfProtectiveNop();1;TR;X86BoundaryAvoidanceInstruction;0;0
getTargetCode;getTargetCode();1;TR;X86BoundaryAvoidanceInstruction;0;0
operator=;operator=(class TR::X86BoundaryAvoidanceInstruction &&);0;TR;X86BoundaryAvoidanceInstruction;1;0
operator=;operator=(const class TR::X86BoundaryAvoidanceInstruction &);0;TR;X86BoundaryAvoidanceInstruction;1;0
operator=;operator=(class TR::X86PatchableCodeAlignmentInstruction &&);0;TR;X86PatchableCodeAlignmentInstruction;1;0
operator=;operator=(const class TR::X86PatchableCodeAlignmentInstruction &);0;TR;X86PatchableCodeAlignmentInstruction;1;0
~X86BoundaryAvoidanceInstruction;~X86BoundaryAvoidanceInstruction();1;TR;X86BoundaryAvoidanceInstruction;1;0
~X86PatchableCodeAlignmentInstruction;~X86PatchableCodeAlignmentInstruction();1;TR;X86PatchableCodeAlignmentInstruction;1;0
X86CallMemInstruction;X86CallMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::CodeGenerator *);1;TR;X86CallMemInstruction;0;0
X86CallMemInstruction;X86CallMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86CallMemInstruction;0;0
X86CallMemInstruction;X86CallMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86CallMemInstruction;0;0
X86MemInstruction;X86MemInstruction(class TR::X86MemInstruction &&);1;TR;X86MemInstruction;1;0
X86MemInstruction;X86MemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,TR::Register *);0;TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(const class TR::X86MemInstruction &);0;TR;X86MemInstruction;1;0
X86MemInstruction;X86MemInstruction(TR::RegisterDependencyConditions *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,TR::Register *);0;TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,TR::Register *);0;TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,TR::Register *);0;TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,TR::Register *);0;TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::CodeGenerator *,TR::Register *);0;TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(TR::RegisterDependencyConditions *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,TR::Register *);0;TR;X86MemInstruction;0;0
X86MemInstruction;X86MemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::CodeGenerator *,TR::Register *);0;TR;X86MemInstruction;0;0
getAdjustsFramePointerBy;getAdjustsFramePointerBy();1;TR;X86CallMemInstruction;0;0
operator=;operator=(class TR::X86MemInstruction &&);0;TR;X86MemInstruction;1;0
operator=;operator=(const class TR::X86MemInstruction &);0;TR;X86MemInstruction;1;0
operator=;operator=(class TR::X86CallMemInstruction &&);0;TR;X86CallMemInstruction;1;0
operator=;operator=(const class TR::X86CallMemInstruction &);0;TR;X86CallMemInstruction;1;0
setAdjustsFramePointerBy;setAdjustsFramePointerBy(int32_t);1;TR;X86CallMemInstruction;0;0
setMemoryReference;setMemoryReference(TR::MemoryReference *,TR::CodeGenerator *);1;TR;X86MemInstruction;0;0
~X86CallMemInstruction;~X86CallMemInstruction();1;TR;X86CallMemInstruction;1;0
~X86MemInstruction;~X86MemInstruction();1;TR;X86MemInstruction;1;0
X86FPArithmeticRegRegInstruction;X86FPArithmeticRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPArithmeticRegRegInstruction;0;0
X86FPArithmeticRegRegInstruction;X86FPArithmeticRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPArithmeticRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86FPRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86FPRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86FPRegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(class TR::X86RegRegInstruction &&);1;TR;X86RegRegInstruction;1;0
X86RegRegInstruction;X86RegRegInstruction(const class TR::X86RegRegInstruction &);0;TR;X86RegRegInstruction;1;0
X86RegRegInstruction;X86RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86RegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86RegRegInstruction;0;0
aboutToAssignSourceRegister;aboutToAssignSourceRegister();1;TR;X86RegRegInstruction;0;0
applyDestinationBitToOpCode;applyDestinationBitToOpCode(uint8_t *,TR::Machine *);1;TR;X86FPArithmeticRegRegInstruction;0;0
applyDirectionBitToOpCode;applyDirectionBitToOpCode(uint8_t *,TR::Machine *);1;TR;X86FPArithmeticRegRegInstruction;0;0
applyRegistersToOpCode;applyRegistersToOpCode(uint8_t *,TR::Machine *);1;TR;X86FPRegRegInstruction;0;0
applySourceRegisterToModRMByte;applySourceRegisterToModRMByte(uint8_t *);1;TR;X86RegRegInstruction;0;0
applySourceRegisterToOpCode;applySourceRegisterToOpCode(uint8_t *,TR::Machine *);1;TR;X86FPRegRegInstruction;0;0
applyTargetRegisterToOpCode;applyTargetRegisterToOpCode(uint8_t *,TR::Machine *);1;TR;X86FPRegRegInstruction;0;0
assignTargetSourceRegisters;assignTargetSourceRegisters();1;TR;X86FPRegRegInstruction;0;0
operator=;operator=(class TR::X86RegRegInstruction &&);0;TR;X86RegRegInstruction;1;0
operator=;operator=(const class TR::X86RegRegInstruction &);0;TR;X86RegRegInstruction;1;0
operator=;operator=(const class TR::X86FPRegRegInstruction &);0;TR;X86FPRegRegInstruction;1;0
operator=;operator=(class TR::X86FPRegRegInstruction &&);0;TR;X86FPRegRegInstruction;1;0
operator=;operator=(const class TR::X86FPArithmeticRegRegInstruction &);0;TR;X86FPArithmeticRegRegInstruction;1;0
operator=;operator=(class TR::X86FPArithmeticRegRegInstruction &&);0;TR;X86FPArithmeticRegRegInstruction;1;0
setSourceRegister;setSourceRegister(TR::Register *);1;TR;X86RegRegInstruction;0;0
sourceRegisterRexBits;sourceRegisterRexBits();1;TR;X86RegRegInstruction;0;0
~X86FPArithmeticRegRegInstruction;~X86FPArithmeticRegRegInstruction();1;TR;X86FPArithmeticRegRegInstruction;1;0
~X86FPRegRegInstruction;~X86FPRegRegInstruction();1;TR;X86FPRegRegInstruction;1;0
~X86RegRegInstruction;~X86RegRegInstruction();1;TR;X86RegRegInstruction;1;0
X86FPCompareEvalInstruction;X86FPCompareEvalInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPCompareEvalInstruction;0;0
X86FPCompareEvalInstruction;X86FPCompareEvalInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86FPCompareEvalInstruction;0;0
operator=;operator=(const class TR::X86FPCompareEvalInstruction &);0;TR;X86FPCompareEvalInstruction;1;0
operator=;operator=(class TR::X86FPCompareEvalInstruction &&);0;TR;X86FPCompareEvalInstruction;1;0
~X86FPCompareEvalInstruction;~X86FPCompareEvalInstruction();1;TR;X86FPCompareEvalInstruction;1;0
X86FPCompareRegRegInstruction;X86FPCompareRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPCompareRegRegInstruction;0;0
X86FPCompareRegRegInstruction;X86FPCompareRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPCompareRegRegInstruction;0;0
operator=;operator=(class TR::X86FPCompareRegRegInstruction &&);0;TR;X86FPCompareRegRegInstruction;1;0
operator=;operator=(const class TR::X86FPCompareRegRegInstruction &);0;TR;X86FPCompareRegRegInstruction;1;0
swapOperands;swapOperands();1;TR;X86FPCompareRegRegInstruction;0;0
~X86FPCompareRegRegInstruction;~X86FPCompareRegRegInstruction();1;TR;X86FPCompareRegRegInstruction;1;0
X86FPMemRegInstruction;X86FPMemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPMemRegInstruction;0;0
X86FPMemRegInstruction;X86FPMemRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPMemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(class TR::X86MemRegInstruction &&);1;TR;X86MemRegInstruction;1;0
X86MemRegInstruction;X86MemRegInstruction(const class TR::X86MemRegInstruction &);0;TR;X86MemRegInstruction;1;0
X86MemRegInstruction;X86MemRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *);0;TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::Register *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::Register *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86MemRegInstruction;0;0
X86MemRegInstruction;X86MemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *);0;TR;X86MemRegInstruction;0;0
aboutToAssignSourceRegister;aboutToAssignSourceRegister();1;TR;X86MemRegInstruction;0;0
operator=;operator=(const class TR::X86MemRegInstruction &);0;TR;X86MemRegInstruction;1;0
operator=;operator=(class TR::X86MemRegInstruction &&);0;TR;X86MemRegInstruction;1;0
operator=;operator=(const class TR::X86FPMemRegInstruction &);0;TR;X86FPMemRegInstruction;1;0
operator=;operator=(class TR::X86FPMemRegInstruction &&);0;TR;X86FPMemRegInstruction;1;0
setSourceRegister;setSourceRegister(TR::Register *);1;TR;X86MemRegInstruction;0;0
~X86FPMemRegInstruction;~X86FPMemRegInstruction();1;TR;X86FPMemRegInstruction;1;0
~X86MemRegInstruction;~X86MemRegInstruction();1;TR;X86MemRegInstruction;1;0
X86FPRegInstruction;X86FPRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPRegInstruction;0;0
X86FPRegInstruction;X86FPRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::CodeGenerator *);0;TR;X86FPRegInstruction;0;0
applyTargetRegisterToOpCode;applyTargetRegisterToOpCode(uint8_t *);1;TR;X86FPRegInstruction;0;0
operator=;operator=(const class TR::X86FPRegInstruction &);0;TR;X86FPRegInstruction;1;0
operator=;operator=(class TR::X86FPRegInstruction &&);0;TR;X86FPRegInstruction;1;0
~X86FPRegInstruction;~X86FPRegInstruction();1;TR;X86FPRegInstruction;1;0
X86FPRegMemInstruction;X86FPRegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *);1;TR;X86FPRegMemInstruction;0;0
X86FPRegMemInstruction;X86FPRegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *);0;TR;X86FPRegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(class TR::X86RegMemInstruction &&);1;TR;X86RegMemInstruction;1;0
X86RegMemInstruction;X86RegMemInstruction(const class TR::X86RegMemInstruction &);0;TR;X86RegMemInstruction;1;0
X86RegMemInstruction;X86RegMemInstruction(TR::MemoryReference *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(TR::MemoryReference *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *);0;TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86RegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *);0;TR;X86RegMemInstruction;0;0
operator=;operator=(const class TR::X86RegMemInstruction &);0;TR;X86RegMemInstruction;1;0
operator=;operator=(class TR::X86RegMemInstruction &&);0;TR;X86RegMemInstruction;1;0
operator=;operator=(class TR::X86FPRegMemInstruction &&);0;TR;X86FPRegMemInstruction;1;0
operator=;operator=(const class TR::X86FPRegMemInstruction &);0;TR;X86FPRegMemInstruction;1;0
setMemoryReference;setMemoryReference(TR::MemoryReference *,TR::CodeGenerator *);1;TR;X86RegMemInstruction;0;0
~X86FPRegMemInstruction;~X86FPRegMemInstruction();1;TR;X86FPRegMemInstruction;1;0
~X86RegMemInstruction;~X86RegMemInstruction();1;TR;X86RegMemInstruction;1;0
X86FPRemainderRegRegInstruction;X86FPRemainderRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPRemainderRegRegInstruction;0;0
X86FPRemainderRegRegInstruction;X86FPRemainderRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86FPRemainderRegRegInstruction;0;0
X86FPRemainderRegRegInstruction;X86FPRemainderRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPRemainderRegRegInstruction;0;0
X86FPST0ST1RegRegInstruction;X86FPST0ST1RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPST0ST1RegRegInstruction;0;0
X86FPST0ST1RegRegInstruction;X86FPST0ST1RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPST0ST1RegRegInstruction;0;0
X86FPST0ST1RegRegInstruction;X86FPST0ST1RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86FPST0ST1RegRegInstruction;0;0
operator=;operator=(class TR::X86FPST0ST1RegRegInstruction &&);0;TR;X86FPST0ST1RegRegInstruction;1;0
operator=;operator=(const class TR::X86FPST0ST1RegRegInstruction &);0;TR;X86FPST0ST1RegRegInstruction;1;0
operator=;operator=(const class TR::X86FPRemainderRegRegInstruction &);0;TR;X86FPRemainderRegRegInstruction;1;0
operator=;operator=(class TR::X86FPRemainderRegRegInstruction &&);0;TR;X86FPRemainderRegRegInstruction;1;0
~X86FPRemainderRegRegInstruction;~X86FPRemainderRegRegInstruction();1;TR;X86FPRemainderRegRegInstruction;1;0
~X86FPST0ST1RegRegInstruction;~X86FPST0ST1RegRegInstruction();1;TR;X86FPST0ST1RegRegInstruction;1;0
X86FPST0STiRegRegInstruction;X86FPST0STiRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPST0STiRegRegInstruction;0;0
X86FPST0STiRegRegInstruction;X86FPST0STiRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPST0STiRegRegInstruction;0;0
operator=;operator=(class TR::X86FPST0STiRegRegInstruction &&);0;TR;X86FPST0STiRegRegInstruction;1;0
operator=;operator=(const class TR::X86FPST0STiRegRegInstruction &);0;TR;X86FPST0STiRegRegInstruction;1;0
~X86FPST0STiRegRegInstruction;~X86FPST0STiRegRegInstruction();1;TR;X86FPST0STiRegRegInstruction;1;0
X86FPSTiST0RegRegInstruction;X86FPSTiST0RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *,_Bool);1;TR;X86FPSTiST0RegRegInstruction;0;0
X86FPSTiST0RegRegInstruction;X86FPSTiST0RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *,_Bool);0;TR;X86FPSTiST0RegRegInstruction;0;0
operator=;operator=(const class TR::X86FPSTiST0RegRegInstruction &);0;TR;X86FPSTiST0RegRegInstruction;1;0
operator=;operator=(class TR::X86FPSTiST0RegRegInstruction &&);0;TR;X86FPSTiST0RegRegInstruction;1;0
~X86FPSTiST0RegRegInstruction;~X86FPSTiST0RegRegInstruction();1;TR;X86FPSTiST0RegRegInstruction;1;0
X86FenceInstruction;X86FenceInstruction(enum TR_X86OpCodes,TR::Node *,TR::Node *,TR::CodeGenerator *);1;TR;X86FenceInstruction;0;0
X86FenceInstruction;X86FenceInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Node *,TR::CodeGenerator *);0;TR;X86FenceInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;X86FenceInstruction;0;0
getFenceNode;getFenceNode();1;TR;X86FenceInstruction;0;0
operator=;operator=(class TR::X86FenceInstruction &&);0;TR;X86FenceInstruction;1;0
operator=;operator=(const class TR::X86FenceInstruction &);0;TR;X86FenceInstruction;1;0
~X86FenceInstruction;~X86FenceInstruction();1;TR;X86FenceInstruction;1;0
X86ImmInstruction;X86ImmInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);1;TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);0;TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(int32_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);0;TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::CodeGenerator *,int32_t);0;TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);0;TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::CodeGenerator *,int32_t);0;TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(int32_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);0;TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(TR::RegisterDependencyConditions *,int32_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);0;TR;X86ImmInstruction;0;0
X86ImmInstruction;X86ImmInstruction(TR::RegisterDependencyConditions *,int32_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);0;TR;X86ImmInstruction;0;0
X86ImmSnippetInstruction;X86ImmSnippetInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::UnresolvedDataSnippet *,TR::CodeGenerator *);1;TR;X86ImmSnippetInstruction;0;0
X86ImmSnippetInstruction;X86ImmSnippetInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::UnresolvedDataSnippet *,TR::CodeGenerator *);0;TR;X86ImmSnippetInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;X86ImmInstruction;0;0
getAdjustsFramePointerBy;getAdjustsFramePointerBy();1;TR;X86ImmInstruction;0;0
getReloKind;getReloKind();1;TR;X86ImmInstruction;0;0
getSourceImmediate;getSourceImmediate();1;TR;X86ImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();1;TR;X86ImmInstruction;0;0
getUnresolvedSnippet;getUnresolvedSnippet();1;TR;X86ImmSnippetInstruction;0;0
operator=;operator=(class TR::X86ImmInstruction &&);0;TR;X86ImmInstruction;1;0
operator=;operator=(const class TR::X86ImmInstruction &);0;TR;X86ImmInstruction;1;0
operator=;operator=(class TR::X86ImmSnippetInstruction &&);0;TR;X86ImmSnippetInstruction;1;0
operator=;operator=(const class TR::X86ImmSnippetInstruction &);0;TR;X86ImmSnippetInstruction;1;0
setAdjustsFramePointerBy;setAdjustsFramePointerBy(int32_t);1;TR;X86ImmInstruction;0;0
setReloKind;setReloKind(int32_t);1;TR;X86ImmInstruction;0;0
setSourceImmediate;setSourceImmediate(int32_t);1;TR;X86ImmInstruction;0;0
setUnresolvedSnippet;setUnresolvedSnippet(TR::UnresolvedDataSnippet *);1;TR;X86ImmSnippetInstruction;0;0
~X86ImmInstruction;~X86ImmInstruction();1;TR;X86ImmInstruction;1;0
~X86ImmSnippetInstruction;~X86ImmSnippetInstruction();1;TR;X86ImmSnippetInstruction;1;0
X86ImmSymInstruction;X86ImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);1;TR;X86ImmSymInstruction;0;0
X86ImmSymInstruction;X86ImmSymInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86ImmSymInstruction;0;0
X86ImmSymInstruction;X86ImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;X86ImmSymInstruction;0;0
X86ImmSymInstruction;X86ImmSymInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;X86ImmSymInstruction;0;0
getSymbolReference;getSymbolReference();1;TR;X86ImmSymInstruction;0;0
operator=;operator=(const class TR::X86ImmSymInstruction &);0;TR;X86ImmSymInstruction;1;0
operator=;operator=(class TR::X86ImmSymInstruction &&);0;TR;X86ImmSymInstruction;1;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);1;TR;X86ImmSymInstruction;0;0
~X86ImmSymInstruction;~X86ImmSymInstruction();1;TR;X86ImmSymInstruction;1;0
X86LabelInstruction;X86LabelInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::LabelSymbol *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,_Bool);1;TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(enum TR_X86OpCodes,TR::Node *,TR::LabelSymbol *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,_Bool);0;TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(TR::LabelSymbol *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,_Bool);0;TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(TR::LabelSymbol *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,_Bool);0;TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(enum TR_X86OpCodes,TR::Node *,TR::LabelSymbol *,TR::CodeGenerator *,_Bool);0;TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::LabelSymbol *,TR::CodeGenerator *,_Bool);0;TR;X86LabelInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;X86LabelInstruction;0;0
addPostDepsToOutlinedInstructionsBranch;addPostDepsToOutlinedInstructionsBranch();1;TR;X86LabelInstruction;0;0
assignOutlinedInstructions;assignOutlinedInstructions(enum TR_RegisterKinds,TR::X86LabelInstruction *);1;TR;X86LabelInstruction;0;0
getNeedToClearFPStack;getNeedToClearFPStack();1;TR;X86LabelInstruction;0;0
getReloType;getReloType();1;TR;X86LabelInstruction;0;0
operator=;operator=(class TR::X86LabelInstruction &&);0;TR;X86LabelInstruction;1;0
operator=;operator=(const class TR::X86LabelInstruction &);0;TR;X86LabelInstruction;1;0
prohibitShortening;prohibitShortening();1;TR;X86LabelInstruction;0;0
setLabelSymbol;setLabelSymbol(TR::LabelSymbol *);1;TR;X86LabelInstruction;0;0
setNeedToClearFPStack;setNeedToClearFPStack(_Bool);1;TR;X86LabelInstruction;0;0
setOutlinedInstructionBranch;setOutlinedInstructionBranch(TR::X86LabelInstruction *);1;TR;X86LabelInstruction;0;0
setReloType;setReloType(uint8_t);1;TR;X86LabelInstruction;0;0
~X86LabelInstruction;~X86LabelInstruction();1;TR;X86LabelInstruction;1;0
X86MemImmInstruction;X86MemImmInstruction(int32_t,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);1;TR;X86MemImmInstruction;0;0
X86MemImmInstruction;X86MemImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,int32_t,TR::CodeGenerator *,int32_t);0;TR;X86MemImmInstruction;0;0
X86MemImmInstruction;X86MemImmInstruction(int32_t,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);0;TR;X86MemImmInstruction;0;0
X86MemImmInstruction;X86MemImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,int32_t,TR::CodeGenerator *,int32_t);0;TR;X86MemImmInstruction;0;0
X86MemImmSymInstruction;X86MemImmSymInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);1;TR;X86MemImmSymInstruction;0;0
X86MemImmSymInstruction;X86MemImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;X86MemImmSymInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;X86MemImmInstruction;0;0
getSourceImmediate;getSourceImmediate();1;TR;X86MemImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();1;TR;X86MemImmInstruction;0;0
getSymbolReference;getSymbolReference();1;TR;X86MemImmSymInstruction;0;0
operator=;operator=(const class TR::X86MemImmInstruction &);0;TR;X86MemImmInstruction;1;0
operator=;operator=(class TR::X86MemImmInstruction &&);0;TR;X86MemImmInstruction;1;0
operator=;operator=(const class TR::X86MemImmSymInstruction &);0;TR;X86MemImmSymInstruction;1;0
operator=;operator=(class TR::X86MemImmSymInstruction &&);0;TR;X86MemImmSymInstruction;1;0
setSourceImmediate;setSourceImmediate(int32_t);1;TR;X86MemImmInstruction;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);1;TR;X86MemImmSymInstruction;0;0
~X86MemImmInstruction;~X86MemImmInstruction();1;TR;X86MemImmInstruction;1;0
~X86MemImmSymInstruction;~X86MemImmSymInstruction();1;TR;X86MemImmSymInstruction;1;0
X86MemRegImmInstruction;X86MemRegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,int32_t,TR::CodeGenerator *);1;TR;X86MemRegImmInstruction;0;0
X86MemRegImmInstruction;X86MemRegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,int32_t,TR::CodeGenerator *);0;TR;X86MemRegImmInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;X86MemRegImmInstruction;0;0
getSourceImmediate;getSourceImmediate();1;TR;X86MemRegImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();1;TR;X86MemRegImmInstruction;0;0
operator=;operator=(class TR::X86MemRegImmInstruction &&);0;TR;X86MemRegImmInstruction;1;0
operator=;operator=(const class TR::X86MemRegImmInstruction &);0;TR;X86MemRegImmInstruction;1;0
setSourceImmediate;setSourceImmediate(int32_t);1;TR;X86MemRegImmInstruction;0;0
~X86MemRegImmInstruction;~X86MemRegImmInstruction();1;TR;X86MemRegImmInstruction;1;0
X86MemRegRegInstruction;X86MemRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::Register *,TR::CodeGenerator *);1;TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(TR::Register *,TR::Register *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(TR::Register *,TR::Register *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86MemRegRegInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86MemRegRegInstruction;0;0
aboutToAssignSourceRightRegister;aboutToAssignSourceRightRegister();1;TR;X86MemRegRegInstruction;0;0
operator=;operator=(class TR::X86MemRegRegInstruction &&);0;TR;X86MemRegRegInstruction;1;0
operator=;operator=(const class TR::X86MemRegRegInstruction &);0;TR;X86MemRegRegInstruction;1;0
setSourceRightRegister;setSourceRightRegister(TR::Register *);1;TR;X86MemRegRegInstruction;0;0
~X86MemRegRegInstruction;~X86MemRegRegInstruction();1;TR;X86MemRegRegInstruction;1;0
X86MemTableInstruction;X86MemTableInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,ncount_t,TR::CodeGenerator *);1;TR;X86MemTableInstruction;0;0
X86MemTableInstruction;X86MemTableInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,ncount_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86MemTableInstruction;0;0
addRelocation;addRelocation(TR::LabelRelocation *);1;TR;X86MemTableInstruction;0;0
getNumRelocations;getNumRelocations();1;TR;X86MemTableInstruction;0;0
getRelocation;getRelocation(ncount_t);1;TR;X86MemTableInstruction;0;0
getRelocationCapacity;getRelocationCapacity();1;TR;X86MemTableInstruction;0;0
operator=;operator=(class TR::X86MemTableInstruction &&);0;TR;X86MemTableInstruction;1;0
operator=;operator=(const class TR::X86MemTableInstruction &);0;TR;X86MemTableInstruction;1;0
~X86MemTableInstruction;~X86MemTableInstruction();1;TR;X86MemTableInstruction;1;0
X86PaddingInstruction;X86PaddingInstruction(class TR::X86PaddingInstruction &&);1;TR;X86PaddingInstruction;1;0
X86PaddingInstruction;X86PaddingInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *);0;TR;X86PaddingInstruction;0;0
X86PaddingInstruction;X86PaddingInstruction(TR::Instruction *,uint8_t,enum TR_PaddingProperties,TR::CodeGenerator *);0;TR;X86PaddingInstruction;0;0
X86PaddingInstruction;X86PaddingInstruction(const class TR::X86PaddingInstruction &);0;TR;X86PaddingInstruction;1;0
X86PaddingInstruction;X86PaddingInstruction(uint8_t,TR::Node *,TR::CodeGenerator *);0;TR;X86PaddingInstruction;0;0
X86PaddingInstruction;X86PaddingInstruction(uint8_t,enum TR_PaddingProperties,TR::Node *,TR::CodeGenerator *);0;TR;X86PaddingInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(TR::Instruction *,uint8_t,enum TR_PaddingProperties,TR::CodeGenerator *);1;TR;X86PaddingSnippetInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *);0;TR;X86PaddingSnippetInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(uint8_t,enum TR_PaddingProperties,TR::Node *,TR::CodeGenerator *);0;TR;X86PaddingSnippetInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(uint8_t,TR::Node *,TR::CodeGenerator *);0;TR;X86PaddingSnippetInstruction;0;0
getLength;getLength();1;TR;X86PaddingInstruction;0;0
getProperties;getProperties();1;TR;X86PaddingInstruction;0;0
getUnresolvedSnippet;getUnresolvedSnippet();1;TR;X86PaddingSnippetInstruction;0;0
operator=;operator=(class TR::X86PaddingInstruction &&);0;TR;X86PaddingInstruction;1;0
operator=;operator=(const class TR::X86PaddingInstruction &);0;TR;X86PaddingInstruction;1;0
operator=;operator=(const class TR::X86PaddingSnippetInstruction &);0;TR;X86PaddingSnippetInstruction;1;0
operator=;operator=(class TR::X86PaddingSnippetInstruction &&);0;TR;X86PaddingSnippetInstruction;1;0
setUnresolvedSnippet;setUnresolvedSnippet(TR::UnresolvedDataSnippet *);1;TR;X86PaddingSnippetInstruction;0;0
~X86PaddingInstruction;~X86PaddingInstruction();1;TR;X86PaddingInstruction;1;0
~X86PaddingSnippetInstruction;~X86PaddingSnippetInstruction();1;TR;X86PaddingSnippetInstruction;1;0
X86RegImmInstruction;X86RegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::CodeGenerator *,int32_t);1;TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::CodeGenerator *,int32_t);0;TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(int32_t,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);0;TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);0;TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);0;TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(int32_t,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t);0;TR;X86RegImmInstruction;0;0
X86RegImmSymInstruction;X86RegImmSymInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);1;TR;X86RegImmSymInstruction;0;0
X86RegImmSymInstruction;X86RegImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;X86RegImmSymInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;X86RegImmInstruction;0;0
autoSetReloKind;autoSetReloKind();1;TR;X86RegImmSymInstruction;0;0
getReloKind;getReloKind();1;TR;X86RegImmInstruction;0;0
getSourceImmediate;getSourceImmediate();1;TR;X86RegImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();1;TR;X86RegImmInstruction;0;0
getSymbolReference;getSymbolReference();1;TR;X86RegImmSymInstruction;0;0
operator=;operator=(class TR::X86RegImmInstruction &&);0;TR;X86RegImmInstruction;1;0
operator=;operator=(const class TR::X86RegImmInstruction &);0;TR;X86RegImmInstruction;1;0
operator=;operator=(class TR::X86RegImmSymInstruction &&);0;TR;X86RegImmSymInstruction;1;0
operator=;operator=(const class TR::X86RegImmSymInstruction &);0;TR;X86RegImmSymInstruction;1;0
setReloKind;setReloKind(int32_t);1;TR;X86RegImmInstruction;0;0
setSourceImmediate;setSourceImmediate(int32_t);1;TR;X86RegImmInstruction;0;0
setSymbolReference;setSymbolReference(TR::SymbolReference *);1;TR;X86RegImmSymInstruction;0;0
~X86RegImmInstruction;~X86RegImmInstruction();1;TR;X86RegImmInstruction;1;0
~X86RegImmSymInstruction;~X86RegImmSymInstruction();1;TR;X86RegImmSymInstruction;1;0
X86RegMemImmInstruction;X86RegMemImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,int32_t,TR::CodeGenerator *);1;TR;X86RegMemImmInstruction;0;0
X86RegMemImmInstruction;X86RegMemImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,int32_t,TR::CodeGenerator *);0;TR;X86RegMemImmInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;X86RegMemImmInstruction;0;0
getSourceImmediate;getSourceImmediate();1;TR;X86RegMemImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();1;TR;X86RegMemImmInstruction;0;0
operator=;operator=(class TR::X86RegMemImmInstruction &&);0;TR;X86RegMemImmInstruction;1;0
operator=;operator=(const class TR::X86RegMemImmInstruction &);0;TR;X86RegMemImmInstruction;1;0
setSourceImmediate;setSourceImmediate(int32_t);1;TR;X86RegMemImmInstruction;0;0
~X86RegMemImmInstruction;~X86RegMemImmInstruction();1;TR;X86RegMemImmInstruction;1;0
X86RegRegImmInstruction;X86RegRegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,int32_t,TR::CodeGenerator *);1;TR;X86RegRegImmInstruction;0;0
X86RegRegImmInstruction;X86RegRegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,int32_t,TR::CodeGenerator *);0;TR;X86RegRegImmInstruction;0;0
addMetaDataForCodeAddress;addMetaDataForCodeAddress(uint8_t *);1;TR;X86RegRegImmInstruction;0;0
getSourceImmediate;getSourceImmediate();1;TR;X86RegRegImmInstruction;0;0
getSourceImmediateAsAddress;getSourceImmediateAsAddress();1;TR;X86RegRegImmInstruction;0;0
operator=;operator=(class TR::X86RegRegImmInstruction &&);0;TR;X86RegRegImmInstruction;1;0
operator=;operator=(const class TR::X86RegRegImmInstruction &);0;TR;X86RegRegImmInstruction;1;0
setSourceImmediate;setSourceImmediate(int32_t);1;TR;X86RegRegImmInstruction;0;0
~X86RegRegImmInstruction;~X86RegRegImmInstruction();1;TR;X86RegRegImmInstruction;1;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::Register *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);1;TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::Register *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);0;TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86RegRegRegInstruction;0;0
aboutToAssignSourceRightRegister;aboutToAssignSourceRightRegister();1;TR;X86RegRegRegInstruction;0;0
operator=;operator=(class TR::X86RegRegRegInstruction &&);0;TR;X86RegRegRegInstruction;1;0
operator=;operator=(const class TR::X86RegRegRegInstruction &);0;TR;X86RegRegRegInstruction;1;0
setSourceRightRegister;setSourceRightRegister(TR::Register *);1;TR;X86RegRegRegInstruction;0;0
~X86RegRegRegInstruction;~X86RegRegRegInstruction();1;TR;X86RegRegRegInstruction;1;0
X86VFPCallCleanupInstruction;X86VFPCallCleanupInstruction(int32_t,TR::Node *,TR::CodeGenerator *);1;TR;X86VFPCallCleanupInstruction;0;0
X86VFPCallCleanupInstruction;X86VFPCallCleanupInstruction(TR::Instruction *,int32_t,TR::CodeGenerator *);0;TR;X86VFPCallCleanupInstruction;0;0
getStackPointerAdjustment;getStackPointerAdjustment();1;TR;X86VFPCallCleanupInstruction;0;0
operator=;operator=(class TR::X86VFPCallCleanupInstruction &&);0;TR;X86VFPCallCleanupInstruction;1;0
operator=;operator=(const class TR::X86VFPCallCleanupInstruction &);0;TR;X86VFPCallCleanupInstruction;1;0
~X86VFPCallCleanupInstruction;~X86VFPCallCleanupInstruction();1;TR;X86VFPCallCleanupInstruction;1;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(TR::RealRegister *,TR::Node *,TR::CodeGenerator *);1;TR;X86VFPDedicateInstruction;0;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(class TR::X86VFPDedicateInstruction &&);0;TR;X86VFPDedicateInstruction;1;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(TR::Instruction *,TR::RealRegister *,TR::CodeGenerator *);0;TR;X86VFPDedicateInstruction;0;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(TR::Instruction *,TR::RealRegister *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86VFPDedicateInstruction;0;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(TR::RealRegister *,TR::Node *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86VFPDedicateInstruction;0;0
getSavedState;getSavedState();1;TR;X86VFPDedicateInstruction;0;0
memref;memref(TR::CodeGenerator *);1;TR;X86VFPDedicateInstruction;0;0
operator=;operator=(const class TR::X86VFPDedicateInstruction &);0;TR;X86VFPDedicateInstruction;1;0
operator=;operator=(class TR::X86VFPDedicateInstruction &&);0;TR;X86VFPDedicateInstruction;1;0
~X86VFPDedicateInstruction;~X86VFPDedicateInstruction();1;TR;X86VFPDedicateInstruction;1;0
X86VFPReleaseInstruction;X86VFPReleaseInstruction(TR::X86VFPDedicateInstruction *,TR::Node *,TR::CodeGenerator *);1;TR;X86VFPReleaseInstruction;0;0
X86VFPReleaseInstruction;X86VFPReleaseInstruction(TR::Instruction *,TR::X86VFPDedicateInstruction *,TR::CodeGenerator *);0;TR;X86VFPReleaseInstruction;0;0
getDedicateInstruction;getDedicateInstruction();1;TR;X86VFPReleaseInstruction;0;0
operator=;operator=(const class TR::X86VFPReleaseInstruction &);0;TR;X86VFPReleaseInstruction;1;0
operator=;operator=(class TR::X86VFPReleaseInstruction &&);0;TR;X86VFPReleaseInstruction;1;0
~X86VFPReleaseInstruction;~X86VFPReleaseInstruction();1;TR;X86VFPReleaseInstruction;1;0
X86VFPRestoreInstruction;X86VFPRestoreInstruction(TR::X86VFPSaveInstruction *,TR::Node *,TR::CodeGenerator *);1;TR;X86VFPRestoreInstruction;0;0
X86VFPRestoreInstruction;X86VFPRestoreInstruction(TR::Instruction *,TR::X86VFPSaveInstruction *,TR::CodeGenerator *);0;TR;X86VFPRestoreInstruction;0;0
getSaveInstruction;getSaveInstruction();1;TR;X86VFPRestoreInstruction;0;0
operator=;operator=(class TR::X86VFPRestoreInstruction &&);0;TR;X86VFPRestoreInstruction;1;0
operator=;operator=(const class TR::X86VFPRestoreInstruction &);0;TR;X86VFPRestoreInstruction;1;0
~X86VFPRestoreInstruction;~X86VFPRestoreInstruction();1;TR;X86VFPRestoreInstruction;1;0
X86VFPSaveInstruction;X86VFPSaveInstruction(TR::Instruction *,TR::CodeGenerator *);1;TR;X86VFPSaveInstruction;0;0
X86VFPSaveInstruction;X86VFPSaveInstruction(TR::Node *,TR::CodeGenerator *);0;TR;X86VFPSaveInstruction;0;0
X86VFPSaveInstruction;X86VFPSaveInstruction(class TR::X86VFPSaveInstruction &&);0;TR;X86VFPSaveInstruction;1;0
getSavedState;getSavedState();1;TR;X86VFPSaveInstruction;0;0
operator=;operator=(const class TR::X86VFPSaveInstruction &);0;TR;X86VFPSaveInstruction;1;0
operator=;operator=(class TR::X86VFPSaveInstruction &&);0;TR;X86VFPSaveInstruction;1;0
~X86VFPSaveInstruction;~X86VFPSaveInstruction();1;TR;X86VFPSaveInstruction;1;0
TR_Analyser;TR_Analyser(class TR_Analyser &&);1;TR;Analyser;1;0
TR_Analyser;TR_Analyser(const class TR_Analyser &);0;TR;Analyser;1;0
TR_Analyser;TR_Analyser();0;TR;Analyser;0;0
TR_X86BinaryCommutativeAnalyser;TR_X86BinaryCommutativeAnalyser(TR::CodeGenerator *);1;TR;X86BinaryCommutativeAnalyser;0;0
genericAnalyser;genericAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool);1;TR;X86BinaryCommutativeAnalyser;0;0
genericAnalyserImpl;genericAnalyserImpl(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool);1;TR;X86BinaryCommutativeAnalyser;0;0
genericAnalyserWithExplicitOperands;genericAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool);1;TR;X86BinaryCommutativeAnalyser;0;0
genericLongAnalyser;genericLongAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes);1;TR;X86BinaryCommutativeAnalyser;0;0
getCopyReg1;getCopyReg1();1;TR;X86BinaryCommutativeAnalyser;0;0
getCopyReg2;getCopyReg2();1;TR;X86BinaryCommutativeAnalyser;0;0
getCopyRegs;getCopyRegs();1;TR;X86BinaryCommutativeAnalyser;0;0
getEvalChild1;getEvalChild1();1;TR;X86BinaryCommutativeAnalyser;0;0
getEvalChild2;getEvalChild2();1;TR;X86BinaryCommutativeAnalyser;0;0
getInputs;getInputs();1;TR;Analyser;0;0
getMem1;getMem1();1;TR;Analyser;0;0
getMem2;getMem2();1;TR;Analyser;0;0
getOpReg1Mem2;getOpReg1Mem2();1;TR;X86BinaryCommutativeAnalyser;0;0
getOpReg1Reg2;getOpReg1Reg2();1;TR;X86BinaryCommutativeAnalyser;0;0
getOpReg2Mem1;getOpReg2Mem1();1;TR;X86BinaryCommutativeAnalyser;0;0
getOpReg2Reg1;getOpReg2Reg1();1;TR;X86BinaryCommutativeAnalyser;0;0
getReversedOperands;getReversedOperands();1;TR;X86BinaryCommutativeAnalyser;0;0
integerAddAnalyser;integerAddAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *);1;TR;X86BinaryCommutativeAnalyser;0;0
integerAddAnalyserImpl;integerAddAnalyserImpl(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *);1;TR;X86BinaryCommutativeAnalyser;0;0
integerAddAnalyserWithExplicitOperands;integerAddAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *);1;TR;X86BinaryCommutativeAnalyser;0;0
longAddAnalyser;longAddAnalyser(TR::Node *);1;TR;X86BinaryCommutativeAnalyser;0;0
longAddAnalyserImpl;longAddAnalyserImpl(TR::Node *,TR::Node *&,TR::Node *&);1;TR;X86BinaryCommutativeAnalyser;0;0
longAddAnalyserWithExplicitOperands;longAddAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *);1;TR;X86BinaryCommutativeAnalyser;0;0
longDualMultiplyAnalyser;longDualMultiplyAnalyser(TR::Node *);1;TR;X86BinaryCommutativeAnalyser;0;0
longMultiplyAnalyser;longMultiplyAnalyser(TR::Node *);1;TR;X86BinaryCommutativeAnalyser;0;0
notReversedOperands;notReversedOperands();1;TR;X86BinaryCommutativeAnalyser;0;0
resetClob1;resetClob1();1;TR;Analyser;0;0
resetClob2;resetClob2();1;TR;Analyser;0;0
resetMem1;resetMem1();1;TR;Analyser;0;0
resetMem2;resetMem2();1;TR;Analyser;0;0
resetReg1;resetReg1();1;TR;Analyser;0;0
resetReg2;resetReg2();1;TR;Analyser;0;0
setClob1;setClob1();1;TR;Analyser;0;0
setClob2;setClob2();1;TR;Analyser;0;0
setInputs;setInputs(TR::Node *,TR::Register *,TR::Node *,TR::Register *,_Bool,_Bool,TR::Compilation *,_Bool,_Bool);1;TR;Analyser;0;0
setMem1;setMem1();1;TR;Analyser;0;0
setMem2;setMem2();1;TR;Analyser;0;0
setReg1;setReg1();1;TR;Analyser;0;0
setReg2;setReg2();1;TR;Analyser;0;0
setReversedOperands;setReversedOperands(_Bool);1;TR;X86BinaryCommutativeAnalyser;0;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(class TR::X86BoundaryAvoidanceInstruction &&);1;TR;X86BoundaryAvoidanceInstruction;1;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(TR::Instruction *,const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::CodeGenerator *);0;TR;X86BoundaryAvoidanceInstruction;0;0
X86DivideCheckSnippet;X86DivideCheckSnippet(class TR::X86DivideCheckSnippet &&);1;TR;X86DivideCheckSnippet;1;0
X86DivideCheckSnippet;X86DivideCheckSnippet(const class TR::X86DivideCheckSnippet &);0;TR;X86DivideCheckSnippet;1;0
X86DivideCheckSnippet;X86DivideCheckSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::LabelSymbol *,TR::ILOpCode &,TR::DataType,TR::X86RegRegInstruction *,TR::CodeGenerator *);0;TR;X86DivideCheckSnippet;0;0
X86RestartSnippet;X86RestartSnippet(class TR::X86RestartSnippet &&);1;TR;X86RestartSnippet;1;0
X86RestartSnippet;X86RestartSnippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,_Bool);0;TR;X86RestartSnippet;0;0
X86RestartSnippet;X86RestartSnippet(const class TR::X86RestartSnippet &);0;TR;X86RestartSnippet;1;0
estimateRestartJumpLength;estimateRestartJumpLength(enum TR_X86OpCodes,int32_t);1;TR;X86RestartSnippet;0;0
estimateRestartJumpLength;estimateRestartJumpLength(int32_t);0;TR;X86RestartSnippet;0;0
estimateRestartJumpLength;estimateRestartJumpLength(int32_t,TR::LabelSymbol *);0;TR;X86RestartSnippet;0;0
estimateRestartJumpLength;estimateRestartJumpLength(enum TR_X86OpCodes,int32_t,TR::LabelSymbol *);0;TR;X86RestartSnippet;0;0
genRestartJump;genRestartJump(enum TR_X86OpCodes,uint8_t *,TR::LabelSymbol *);1;TR;X86RestartSnippet;0;0
genRestartJump;genRestartJump(uint8_t *,TR::LabelSymbol *);0;TR;X86RestartSnippet;0;0
genRestartJump;genRestartJump(uint8_t *);0;TR;X86RestartSnippet;0;0
getDivideInstruction;getDivideInstruction();1;TR;X86DivideCheckSnippet;0;0
getDivideLabel;getDivideLabel();1;TR;X86DivideCheckSnippet;0;0
getForceLongRestartJump;getForceLongRestartJump();1;TR;X86RestartSnippet;0;0
getOpCode;getOpCode();1;TR;X86DivideCheckSnippet;0;0
getRestartLabel;getRestartLabel();1;TR;X86RestartSnippet;0;0
getType;getType();1;TR;X86DivideCheckSnippet;0;0
operator=;operator=(class TR::X86RestartSnippet &&);0;TR;X86RestartSnippet;1;0
operator=;operator=(const class TR::X86RestartSnippet &);0;TR;X86RestartSnippet;1;0
operator=;operator=(class TR::X86DivideCheckSnippet &&);0;TR;X86DivideCheckSnippet;1;0
operator=;operator=(const class TR::X86DivideCheckSnippet &);0;TR;X86DivideCheckSnippet;1;0
setDivideLabel;setDivideLabel(TR::LabelSymbol *);1;TR;X86DivideCheckSnippet;0;0
setForceLongRestartJump;setForceLongRestartJump();1;TR;X86RestartSnippet;0;0
setRestartLabel;setRestartLabel(TR::LabelSymbol *);1;TR;X86RestartSnippet;0;0
~X86DivideCheckSnippet;~X86DivideCheckSnippet();1;TR;X86DivideCheckSnippet;1;0
~X86RestartSnippet;~X86RestartSnippet();1;TR;X86RestartSnippet;1;0
X86LabelInstruction;X86LabelInstruction(enum TR_X86OpCodes,TR::Node *,TR::LabelSymbol *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,_Bool);1;TR;X86LabelInstruction;0;0
X86LabelInstruction;X86LabelInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::LabelSymbol *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,_Bool);0;TR;X86LabelInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(uint8_t,enum TR_PaddingProperties,TR::Node *,TR::CodeGenerator *);1;TR;X86PaddingSnippetInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(TR::Instruction *,uint8_t,enum TR_PaddingProperties,TR::CodeGenerator *);0;TR;X86PaddingSnippetInstruction;0;0
TR_Analyser;TR_Analyser();1;TR;Analyser;0;0
TR_Analyser;TR_Analyser(class TR_Analyser &&);0;TR;Analyser;1;0
TR_X86BinaryCommutativeAnalyser;TR_X86BinaryCommutativeAnalyser(class TR_X86BinaryCommutativeAnalyser &&);1;TR;X86BinaryCommutativeAnalyser;1;0
TR_X86BinaryCommutativeAnalyser;TR_X86BinaryCommutativeAnalyser(const class TR_X86BinaryCommutativeAnalyser &);0;TR;X86BinaryCommutativeAnalyser;1;0
TR_X86BinaryCommutativeAnalyser;TR_X86BinaryCommutativeAnalyser(TR::CodeGenerator *);0;TR;X86BinaryCommutativeAnalyser;0;0
~TR_Analyser;~TR_Analyser();1;TR;Analyser;1;0
~TR_X86BinaryCommutativeAnalyser;~TR_X86BinaryCommutativeAnalyser();1;TR;X86BinaryCommutativeAnalyser;1;0
Estimator;Estimator(class TR_X86OpCode::Estimator &&);1;TR_X86OpCode;Estimator;1;0
Estimator;Estimator(const class TR_X86OpCode::Estimator &);0;TR_X86OpCode;Estimator;1;0
Estimator;Estimator(cursor_t);0;TR_X86OpCode;Estimator;0;0
Writer;Writer(class TR_X86OpCode::Writer &&);1;TR_X86OpCode;Writer;1;0
Writer;Writer(const class TR_X86OpCode::Writer &);0;TR_X86OpCode;Writer;1;0
Writer;Writer(cursor_t);0;TR_X86OpCode;Writer;0;0
TR_X86SubtractAnalyser;TR_X86SubtractAnalyser(class TR_X86SubtractAnalyser &&);1;TR;X86SubtractAnalyser;1;0
TR_X86SubtractAnalyser;TR_X86SubtractAnalyser(TR::CodeGenerator *);0;TR;X86SubtractAnalyser;0;0
TR_X86SubtractAnalyser;TR_X86SubtractAnalyser(const class TR_X86SubtractAnalyser &);0;TR;X86SubtractAnalyser;1;0
getCopyReg1;getCopyReg1();1;TR;X86SubtractAnalyser;0;0
getEvalChild1;getEvalChild1();1;TR;X86SubtractAnalyser;0;0
getEvalChild2;getEvalChild2();1;TR;X86SubtractAnalyser;0;0
getSubReg1Mem2;getSubReg1Mem2();1;TR;X86SubtractAnalyser;0;0
getSubReg1Reg2;getSubReg1Reg2();1;TR;X86SubtractAnalyser;0;0
getSubReg3Mem2;getSubReg3Mem2();1;TR;X86SubtractAnalyser;0;0
getSubReg3Reg2;getSubReg3Reg2();1;TR;X86SubtractAnalyser;0;0
integerSubtractAnalyser;integerSubtractAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *);1;TR;X86SubtractAnalyser;0;0
integerSubtractAnalyserImpl;integerSubtractAnalyserImpl(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *);1;TR;X86SubtractAnalyser;0;0
integerSubtractAnalyserWithExplicitOperands;integerSubtractAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *);1;TR;X86SubtractAnalyser;0;0
longSubtractAnalyser;longSubtractAnalyser(TR::Node *);1;TR;X86SubtractAnalyser;0;0
longSubtractAnalyserImpl;longSubtractAnalyserImpl(TR::Node *,TR::Node *&,TR::Node *&);1;TR;X86SubtractAnalyser;0;0
longSubtractAnalyserWithExplicitOperands;longSubtractAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *);1;TR;X86SubtractAnalyser;0;0
~TR_X86SubtractAnalyser;~TR_X86SubtractAnalyser();1;TR;X86SubtractAnalyser;1;0
Linkage;Linkage();1;OMR;Linkage;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Linkage;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;Linkage;0;0
X86BoundaryAvoidanceInstruction;X86BoundaryAvoidanceInstruction(const class TR::X86BoundaryAvoidanceInstruction &);1;TR;X86BoundaryAvoidanceInstruction;1;0
X86PaddingInstruction;X86PaddingInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *);1;TR;X86PaddingInstruction;0;0
X86PaddingInstruction;X86PaddingInstruction(class TR::X86PaddingInstruction &&);0;TR;X86PaddingInstruction;1;0
TR_X86CompareAnalyser;TR_X86CompareAnalyser(TR::CodeGenerator *);1;TR;X86CompareAnalyser;0;0
cg;cg();1;TR;X86CompareAnalyser;0;0
getCmpMem1Reg2;getCmpMem1Reg2();1;TR;X86CompareAnalyser;0;0
getCmpReg1Mem2;getCmpReg1Mem2();1;TR;X86CompareAnalyser;0;0
getCmpReg1Reg2;getCmpReg1Reg2();1;TR;X86CompareAnalyser;0;0
getEvalChild1;getEvalChild1();1;TR;X86CompareAnalyser;0;0
getEvalChild2;getEvalChild2();1;TR;X86CompareAnalyser;0;0
integerCompareAnalyser;integerCompareAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes);1;TR;X86CompareAnalyser;0;0
integerCompareAnalyser;integerCompareAnalyser(TR::Node *,TR::Node *,TR::Node *,_Bool,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes);0;TR;X86CompareAnalyser;0;0
longCMPAnalyser;longCMPAnalyser(TR::Node *);1;TR;X86CompareAnalyser;0;0
longEqualityBooleanAnalyser;longEqualityBooleanAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes);1;TR;X86CompareAnalyser;0;0
longEqualityCompareAndBranchAnalyser;longEqualityCompareAndBranchAnalyser(TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,enum TR_X86OpCodes);1;TR;X86CompareAnalyser;0;0
longOrderedBooleanAnalyser;longOrderedBooleanAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes);1;TR;X86CompareAnalyser;0;0
longOrderedCompareAndBranchAnalyser;longOrderedCompareAndBranchAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes);1;TR;X86CompareAnalyser;0;0
Cursor;Cursor(const class CS2::ABitVector::Cursor &);1;CS2::ABitVector;Cursor;0;0
Cursor;Cursor(const ABitVector<Allocator> &);0;CS2::ABitVector;Cursor;0;0
IA32ConstantDataSnippet;IA32ConstantDataSnippet(class TR::IA32ConstantDataSnippet &&);1;TR;IA32ConstantDataSnippet;1;0
IA32ConstantDataSnippet;IA32ConstantDataSnippet(const class TR::IA32ConstantDataSnippet &);0;TR;IA32ConstantDataSnippet;1;0
IA32ConstantDataSnippet;IA32ConstantDataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t);0;TR;IA32ConstantDataSnippet;0;0
IA32DataSnippet;IA32DataSnippet(class TR::IA32DataSnippet &&);1;TR;IA32DataSnippet;1;0
IA32DataSnippet;IA32DataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t);0;TR;IA32DataSnippet;0;0
IA32DataSnippet;IA32DataSnippet(const class TR::IA32DataSnippet &);0;TR;IA32DataSnippet;1;0
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *);1;OMR;Snippet;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Snippet;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;Linkage;0;0
IteratedExternalRelocation;IteratedExternalRelocation(uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,flags8_t,TR::CodeGenerator *);1;TR;IteratedExternalRelocation;0;0
LabelAbsoluteRelocation;LabelAbsoluteRelocation(class TR::LabelAbsoluteRelocation &&);1;TR;LabelAbsoluteRelocation;1;0
LabelAbsoluteRelocation;LabelAbsoluteRelocation(const class TR::LabelAbsoluteRelocation &);0;TR;LabelAbsoluteRelocation;1;0
LabelAbsoluteRelocation;LabelAbsoluteRelocation();0;TR;LabelAbsoluteRelocation;0;0
X86PaddingInstruction;X86PaddingInstruction(TR::Instruction *,uint8_t,enum TR_PaddingProperties,TR::CodeGenerator *);1;TR;X86PaddingInstruction;0;0
TR_X86CompareAnalyser;TR_X86CompareAnalyser(const class TR_X86CompareAnalyser &);1;TR;X86CompareAnalyser;1;0
TR_X86CompareAnalyser;TR_X86CompareAnalyser(TR::CodeGenerator *);0;TR;X86CompareAnalyser;0;0
TR_X86CompareAnalyser;TR_X86CompareAnalyser(class TR_X86CompareAnalyser &&);0;TR;X86CompareAnalyser;1;0
integerCompareAnalyser;integerCompareAnalyser(TR::Node *,TR::Node *,TR::Node *,_Bool,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes);1;TR;X86CompareAnalyser;0;0
integerCompareAnalyser;integerCompareAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes);0;TR;X86CompareAnalyser;0;0
X86DivideCheckSnippet;X86DivideCheckSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::LabelSymbol *,TR::ILOpCode &,TR::DataType,TR::X86RegRegInstruction *,TR::CodeGenerator *);1;TR;X86DivideCheckSnippet;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;RegisterDependencyConditions;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;RegisterDependencyConditions;0;0
TR_IA32XMMCompareAnalyser;TR_IA32XMMCompareAnalyser(TR::CodeGenerator *);1;TR;IA32XMMCompareAnalyser;0;0
TR_X86FPCompareAnalyser;TR_X86FPCompareAnalyser(const class TR_X86FPCompareAnalyser &);1;TR;X86FPCompareAnalyser;1;0
TR_X86FPCompareAnalyser;TR_X86FPCompareAnalyser(TR::CodeGenerator *);0;TR;X86FPCompareAnalyser;0;0
TR_X86FPCompareAnalyser;TR_X86FPCompareAnalyser(class TR_X86FPCompareAnalyser &&);0;TR;X86FPCompareAnalyser;1;0
fpCompareAnalyser;fpCompareAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool);1;TR;X86FPCompareAnalyser;0;1
getCmpReg1Mem2;getCmpReg1Mem2();1;TR;X86FPCompareAnalyser;0;0
getCmpReg1Reg2;getCmpReg1Reg2();1;TR;X86FPCompareAnalyser;0;0
getCmpReg2Mem1;getCmpReg2Mem1();1;TR;X86FPCompareAnalyser;0;0
getCmpReg2Reg1;getCmpReg2Reg1();1;TR;X86FPCompareAnalyser;0;0
getEvalChild1;getEvalChild1();1;TR;X86FPCompareAnalyser;0;0
getEvalChild2;getEvalChild2();1;TR;X86FPCompareAnalyser;0;0
getReversedOperands;getReversedOperands();1;TR;X86FPCompareAnalyser;0;0
notReversedOperands;notReversedOperands();1;TR;X86FPCompareAnalyser;0;0
operator=;operator=(const class TR_X86FPCompareAnalyser &);1;TR;X86FPCompareAnalyser;1;0
operator=;operator=(class TR_X86FPCompareAnalyser &&);0;TR;X86FPCompareAnalyser;1;0
operator=;operator=(class TR_IA32XMMCompareAnalyser &&);0;TR;IA32XMMCompareAnalyser;1;0
operator=;operator=(const class TR_IA32XMMCompareAnalyser &);0;TR;IA32XMMCompareAnalyser;1;0
setClob1;setClob1();1;TR;X86FPCompareAnalyser;0;0
setClob2;setClob2();1;TR;X86FPCompareAnalyser;0;0
setInputs;setInputs(TR::Node *,TR::Register *,TR::Node *,TR::Register *,_Bool,_Bool);1;TR;X86FPCompareAnalyser;0;0
setMem1;setMem1();1;TR;X86FPCompareAnalyser;0;0
setMem2;setMem2();1;TR;X86FPCompareAnalyser;0;0
setNoOperandSwapping;setNoOperandSwapping();1;TR;X86FPCompareAnalyser;0;0
setReg1;setReg1();1;TR;X86FPCompareAnalyser;0;0
setReg2;setReg2();1;TR;X86FPCompareAnalyser;0;0
setReversedOperands;setReversedOperands(_Bool);1;TR;X86FPCompareAnalyser;0;0
xmmCompareAnalyser;xmmCompareAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes);1;TR;IA32XMMCompareAnalyser;0;0
~TR_IA32XMMCompareAnalyser;~TR_IA32XMMCompareAnalyser();1;TR;IA32XMMCompareAnalyser;1;0
~TR_X86FPCompareAnalyser;~TR_X86FPCompareAnalyser();1;TR;X86FPCompareAnalyser;1;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;CodeGenerator;0;0
X86FPConversionSnippet;X86FPConversionSnippet(const class TR::X86FPConversionSnippet &);1;TR;X86FPConversionSnippet;1;0
X86FPConversionSnippet;X86FPConversionSnippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *);0;TR;X86FPConversionSnippet;0;0
X86FPConversionSnippet;X86FPConversionSnippet(class TR::X86FPConversionSnippet &&);0;TR;X86FPConversionSnippet;1;0
X86FPConvertToIntSnippet;X86FPConvertToIntSnippet(const class TR::X86FPConvertToIntSnippet &);1;TR;X86FPConvertToIntSnippet;1;0
X86FPConvertToIntSnippet;X86FPConvertToIntSnippet(class TR::X86FPConvertToIntSnippet &&);0;TR;X86FPConvertToIntSnippet;1;0
X86FPConvertToIntSnippet;X86FPConvertToIntSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,TR::X86RegInstruction *,TR::CodeGenerator *);0;TR;X86FPConvertToIntSnippet;0;0
X86RestartSnippet;X86RestartSnippet(const class TR::X86RestartSnippet &);1;TR;X86RestartSnippet;1;0
X86RestartSnippet;X86RestartSnippet(class TR::X86RestartSnippet &&);0;TR;X86RestartSnippet;1;0
emitCallToConversionHelper;emitCallToConversionHelper(uint8_t *);1;TR;X86FPConversionSnippet;0;0
genFPConversion;genFPConversion(uint8_t *);1;TR;X86FPConversionSnippet;0;1
getConvertInstruction;getConvertInstruction();1;TR;X86FPConvertToIntSnippet;0;0
getHelperSymRef;getHelperSymRef();1;TR;X86FPConversionSnippet;0;0
operator=;operator=(class TR::X86FPConversionSnippet &&);0;TR;X86FPConversionSnippet;1;0
operator=;operator=(const class TR::X86FPConversionSnippet &);0;TR;X86FPConversionSnippet;1;0
operator=;operator=(class TR::X86FPConvertToIntSnippet &&);0;TR;X86FPConvertToIntSnippet;1;0
operator=;operator=(const class TR::X86FPConvertToIntSnippet &);0;TR;X86FPConvertToIntSnippet;1;0
setHelperSymRef;setHelperSymRef(TR::SymbolReference *);1;TR;X86FPConversionSnippet;0;0
~X86FPConversionSnippet;~X86FPConversionSnippet();1;TR;X86FPConversionSnippet;1;0
~X86FPConvertToIntSnippet;~X86FPConvertToIntSnippet();1;TR;X86FPConvertToIntSnippet;1;0
X86FPConvertToLongSnippet;X86FPConvertToLongSnippet(class TR::X86FPConvertToLongSnippet &&);1;TR;X86FPConvertToLongSnippet;1;0
X86FPConvertToLongSnippet;X86FPConvertToLongSnippet(const class TR::X86FPConvertToLongSnippet &);0;TR;X86FPConvertToLongSnippet;1;0
X86FPConvertToLongSnippet;X86FPConvertToLongSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,TR::X86FPST0STiRegRegInstruction *,TR::X86RegMemInstruction *,TR::X86RegMemInstruction *,TR::CodeGenerator *);0;TR;X86FPConvertToLongSnippet;0;0
analyseLongConversion;analyseLongConversion();1;TR;X86FPConvertToLongSnippet;0;0
getAction;getAction();1;TR;X86FPConvertToLongSnippet;0;0
getDoubleRegister;getDoubleRegister();1;TR;X86FPConvertToLongSnippet;0;0
getHighRegister;getHighRegister();1;TR;X86FPConvertToLongSnippet;0;0
getLowRegister;getLowRegister();1;TR;X86FPConvertToLongSnippet;0;0
operator=;operator=(class TR::X86FPConvertToLongSnippet &&);0;TR;X86FPConvertToLongSnippet;1;0
operator=;operator=(const class TR::X86FPConvertToLongSnippet &);0;TR;X86FPConvertToLongSnippet;1;0
~X86FPConvertToLongSnippet;~X86FPConvertToLongSnippet();1;TR;X86FPConvertToLongSnippet;1;0
TR_IA32XMMCompareAnalyser;TR_IA32XMMCompareAnalyser(class TR_IA32XMMCompareAnalyser &&);1;TR;IA32XMMCompareAnalyser;1;0
TR_IA32XMMCompareAnalyser;TR_IA32XMMCompareAnalyser(const class TR_IA32XMMCompareAnalyser &);0;TR;IA32XMMCompareAnalyser;1;0
TR_IA32XMMCompareAnalyser;TR_IA32XMMCompareAnalyser(TR::CodeGenerator *);0;TR;IA32XMMCompareAnalyser;0;0
X86CheckAsyncMessagesSnippet;X86CheckAsyncMessagesSnippet(TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,TR::CodeGenerator *);1;TR;X86CheckAsyncMessagesSnippet;0;0
X86HelperCallSnippet;X86HelperCallSnippet(const class TR::X86HelperCallSnippet &);1;TR;X86HelperCallSnippet;1;0
X86HelperCallSnippet;X86HelperCallSnippet(TR::CodeGenerator *,TR::LabelSymbol *,TR::LabelSymbol *,TR::Node *,int32_t);0;TR;X86HelperCallSnippet;0;0
X86HelperCallSnippet;X86HelperCallSnippet(class TR::X86HelperCallSnippet &&);0;TR;X86HelperCallSnippet;1;0
X86HelperCallSnippet;X86HelperCallSnippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,int32_t);0;TR;X86HelperCallSnippet;0;0
addMetaDataForLoadAddrArg;addMetaDataForLoadAddrArg(uint8_t *,TR::Node *);1;TR;X86HelperCallSnippet;0;0
branchDisplacementToHelper;branchDisplacementToHelper(uint8_t *,TR::SymbolReference *,TR::CodeGenerator *);1;TR;X86HelperCallSnippet;0;0
genHelperCall;genHelperCall(uint8_t *);1;TR;X86HelperCallSnippet;0;1
getAlignCallDisplacementForPatching;getAlignCallDisplacementForPatching();1;TR;X86HelperCallSnippet;0;0
getCallInstructionBufferAddress;getCallInstructionBufferAddress();1;TR;X86HelperCallSnippet;0;0
getCallNode;getCallNode();1;TR;X86HelperCallSnippet;0;0
getDestination;getDestination();1;TR;X86HelperCallSnippet;0;0
getOffset;getOffset();1;TR;X86HelperCallSnippet;0;0
getStackPointerAdjustment;getStackPointerAdjustment();1;TR;X86HelperCallSnippet;0;0
operator=;operator=(const class TR::X86HelperCallSnippet &);0;TR;X86HelperCallSnippet;1;0
operator=;operator=(class TR::X86HelperCallSnippet &&);0;TR;X86HelperCallSnippet;1;0
operator=;operator=(const class TR::X86CheckAsyncMessagesSnippet &);0;TR;X86CheckAsyncMessagesSnippet;1;0
operator=;operator=(class TR::X86CheckAsyncMessagesSnippet &&);0;TR;X86CheckAsyncMessagesSnippet;1;0
setAlignCallDisplacementForPatching;setAlignCallDisplacementForPatching(_Bool);1;TR;X86HelperCallSnippet;0;0
setDestination;setDestination(TR::SymbolReference *);1;TR;X86HelperCallSnippet;0;0
~X86CheckAsyncMessagesSnippet;~X86CheckAsyncMessagesSnippet();1;TR;X86CheckAsyncMessagesSnippet;1;0
~X86HelperCallSnippet;~X86HelperCallSnippet();1;TR;X86HelperCallSnippet;1;0
getSourceRegister;getSourceRegister();1;OMR::X86;Instruction;0;0
MemoryReference;MemoryReference(class TR::MemoryReference &&);0;TR;MemoryReference;1;0
MemoryReference;MemoryReference(const class TR::MemoryReference &);0;TR;MemoryReference;1;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;RegisterDependencyConditions;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;Relocation;0;0
LabelRelative32BitRelocation;LabelRelative32BitRelocation(class TR::LabelRelative32BitRelocation &&);1;TR;LabelRelative32BitRelocation;1;0
LabelRelative32BitRelocation;LabelRelative32BitRelocation(const class TR::LabelRelative32BitRelocation &);0;TR;LabelRelative32BitRelocation;1;0
LabelRelative32BitRelocation;LabelRelative32BitRelocation();0;TR;LabelRelative32BitRelocation;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;GCRegisterMap;0;0
X86LabelInstruction;X86LabelInstruction(class TR::X86LabelInstruction &&);1;TR;X86LabelInstruction;1;0
X86LabelInstruction;X86LabelInstruction(const class TR::X86LabelInstruction &);0;TR;X86LabelInstruction;1;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;RegisterDependencyConditions;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;RegisterDependencyConditions;0;0
TR_Analyser;TR_Analyser(const class TR_Analyser &);1;TR;Analyser;1;0
TR_X86SubtractAnalyser;TR_X86SubtractAnalyser(TR::CodeGenerator *);1;TR;X86SubtractAnalyser;0;0
genRestartJump;genRestartJump(uint8_t *,TR::LabelSymbol *);1;TR;X86RestartSnippet;0;0
genRestartJump;genRestartJump(enum TR_X86OpCodes,uint8_t *,TR::LabelSymbol *);0;TR;X86RestartSnippet;0;0
operator delete;operator delete(void *,TR::Region &);1;OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;MemoryReference;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;MemoryReference;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;MemoryReference;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;MemoryReference;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;CodeGenerator;0;0
LabelRelative12BitRelocation;LabelRelative12BitRelocation(uint8_t *,TR::LabelSymbol *,_Bool);1;TR;LabelRelative12BitRelocation;0;0
LabelRelative12BitRelocation;LabelRelative12BitRelocation();0;TR;LabelRelative12BitRelocation;0;0
LabelRelative32BitRelocation;LabelRelative32BitRelocation(const class TR::LabelRelative32BitRelocation &);1;TR;LabelRelative32BitRelocation;1;0
LabelRelative32BitRelocation;LabelRelative32BitRelocation(class TR::LabelRelative32BitRelocation &&);0;TR;LabelRelative32BitRelocation;1;0
LabelRelative8BitRelocation;LabelRelative8BitRelocation(const class TR::LabelRelative8BitRelocation &);1;TR;LabelRelative8BitRelocation;1;0
LabelRelative8BitRelocation;LabelRelative8BitRelocation();0;TR;LabelRelative8BitRelocation;0;0
LabelRelative8BitRelocation;LabelRelative8BitRelocation(class TR::LabelRelative8BitRelocation &&);0;TR;LabelRelative8BitRelocation;1;0
X86FPConvertToIntSnippet;X86FPConvertToIntSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,TR::X86RegInstruction *,TR::CodeGenerator *);1;TR;X86FPConvertToIntSnippet;0;0
X86FPConvertToLongSnippet;X86FPConvertToLongSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,TR::X86FPST0STiRegRegInstruction *,TR::X86RegMemInstruction *,TR::X86RegMemInstruction *,TR::CodeGenerator *);1;TR;X86FPConvertToLongSnippet;0;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(class TR::AMD64Imm64SymInstruction &&);1;TR;AMD64Imm64SymInstruction;1;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(const class TR::AMD64Imm64SymInstruction &);0;TR;AMD64Imm64SymInstruction;1;0
AMD64Imm64SymInstruction;AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;AMD64Imm64SymInstruction;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(class TR::AMD64RegImm64Instruction &&);1;TR;AMD64RegImm64Instruction;1;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(const class TR::AMD64RegImm64Instruction &);0;TR;AMD64RegImm64Instruction;1;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t);0;TR;AMD64RegImm64Instruction;0;0
AMD64RegImm64SymInstruction;AMD64RegImm64SymInstruction(class TR::AMD64RegImm64SymInstruction &&);1;TR;AMD64RegImm64SymInstruction;1;0
AMD64RegImm64SymInstruction;AMD64RegImm64SymInstruction(const class TR::AMD64RegImm64SymInstruction &);0;TR;AMD64RegImm64SymInstruction;1;0
AMD64RegImm64SymInstruction;AMD64RegImm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;AMD64RegImm64SymInstruction;0;0
X86RegInstruction;X86RegInstruction(const class TR::X86RegInstruction &);1;TR;X86RegInstruction;1;0
X86RegInstruction;X86RegInstruction(class TR::X86RegInstruction &&);0;TR;X86RegInstruction;1;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;TR;Relocation;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;TR;Relocation;0;0
X86AlignmentInstruction;X86AlignmentInstruction(const class TR::X86AlignmentInstruction &);1;TR;X86AlignmentInstruction;1;0
X86AlignmentInstruction;X86AlignmentInstruction(TR::Instruction *,uint8_t,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86AlignmentInstruction;0;0
X86AlignmentInstruction;X86AlignmentInstruction(class TR::X86AlignmentInstruction &&);0;TR;X86AlignmentInstruction;1;0
X86PatchableCodeAlignmentInstruction;X86PatchableCodeAlignmentInstruction(class TR::X86PatchableCodeAlignmentInstruction &&);1;TR;X86PatchableCodeAlignmentInstruction;1;0
X86PatchableCodeAlignmentInstruction;X86PatchableCodeAlignmentInstruction(const class TR::X86PatchableCodeAlignmentInstruction &);0;TR;X86PatchableCodeAlignmentInstruction;1;0
X86PatchableCodeAlignmentInstruction;X86PatchableCodeAlignmentInstruction(const struct TR_AtomicRegion *,TR::Instruction *,TR::CodeGenerator *);0;TR;X86PatchableCodeAlignmentInstruction;0;0
X86CallMemInstruction;X86CallMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);1;TR;X86CallMemInstruction;0;0
X86CallMemInstruction;X86CallMemInstruction(class TR::X86CallMemInstruction &&);0;TR;X86CallMemInstruction;1;0
X86CallMemInstruction;X86CallMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::CodeGenerator *);0;TR;X86CallMemInstruction;0;0
X86CallMemInstruction;X86CallMemInstruction(const class TR::X86CallMemInstruction &);0;TR;X86CallMemInstruction;1;0
X86FPArithmeticRegRegInstruction;X86FPArithmeticRegRegInstruction(class TR::X86FPArithmeticRegRegInstruction &&);1;TR;X86FPArithmeticRegRegInstruction;1;0
X86FPArithmeticRegRegInstruction;X86FPArithmeticRegRegInstruction(const class TR::X86FPArithmeticRegRegInstruction &);0;TR;X86FPArithmeticRegRegInstruction;1;0
X86FPArithmeticRegRegInstruction;X86FPArithmeticRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPArithmeticRegRegInstruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(class TR::X86FPRegRegInstruction &&);1;TR;X86FPRegRegInstruction;1;0
X86FPRegRegInstruction;X86FPRegRegInstruction(const class TR::X86FPRegRegInstruction &);0;TR;X86FPRegRegInstruction;1;0
X86FPRegRegInstruction;X86FPRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPRegRegInstruction;0;0
X86RegRegInstruction;X86RegRegInstruction(const class TR::X86RegRegInstruction &);1;TR;X86RegRegInstruction;1;0
X86RegRegInstruction;X86RegRegInstruction(class TR::X86RegRegInstruction &&);0;TR;X86RegRegInstruction;1;0
X86FPCompareEvalInstruction;X86FPCompareEvalInstruction(class TR::X86FPCompareEvalInstruction &&);1;TR;X86FPCompareEvalInstruction;1;0
X86FPCompareEvalInstruction;X86FPCompareEvalInstruction(const class TR::X86FPCompareEvalInstruction &);0;TR;X86FPCompareEvalInstruction;1;0
X86FPCompareEvalInstruction;X86FPCompareEvalInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPCompareEvalInstruction;0;0
X86FPCompareRegRegInstruction;X86FPCompareRegRegInstruction(class TR::X86FPCompareRegRegInstruction &&);1;TR;X86FPCompareRegRegInstruction;1;0
X86FPCompareRegRegInstruction;X86FPCompareRegRegInstruction(const class TR::X86FPCompareRegRegInstruction &);0;TR;X86FPCompareRegRegInstruction;1;0
X86FPCompareRegRegInstruction;X86FPCompareRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPCompareRegRegInstruction;0;0
X86FPMemRegInstruction;X86FPMemRegInstruction(class TR::X86FPMemRegInstruction &&);1;TR;X86FPMemRegInstruction;1;0
X86FPMemRegInstruction;X86FPMemRegInstruction(const class TR::X86FPMemRegInstruction &);0;TR;X86FPMemRegInstruction;1;0
X86FPMemRegInstruction;X86FPMemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPMemRegInstruction;0;0
X86FPRegInstruction;X86FPRegInstruction(class TR::X86FPRegInstruction &&);1;TR;X86FPRegInstruction;1;0
X86FPRegInstruction;X86FPRegInstruction(const class TR::X86FPRegInstruction &);0;TR;X86FPRegInstruction;1;0
X86FPRegInstruction;X86FPRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPRegInstruction;0;0
X86FPRegMemInstruction;X86FPRegMemInstruction(const class TR::X86FPRegMemInstruction &);1;TR;X86FPRegMemInstruction;1;0
X86FPRegMemInstruction;X86FPRegMemInstruction(class TR::X86FPRegMemInstruction &&);0;TR;X86FPRegMemInstruction;1;0
X86FPRegMemInstruction;X86FPRegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *);0;TR;X86FPRegMemInstruction;0;0
X86RegMemInstruction;X86RegMemInstruction(const class TR::X86RegMemInstruction &);1;TR;X86RegMemInstruction;1;0
X86RegMemInstruction;X86RegMemInstruction(class TR::X86RegMemInstruction &&);0;TR;X86RegMemInstruction;1;0
X86FPRemainderRegRegInstruction;X86FPRemainderRegRegInstruction(class TR::X86FPRemainderRegRegInstruction &&);1;TR;X86FPRemainderRegRegInstruction;1;0
X86FPRemainderRegRegInstruction;X86FPRemainderRegRegInstruction(const class TR::X86FPRemainderRegRegInstruction &);0;TR;X86FPRemainderRegRegInstruction;1;0
X86FPRemainderRegRegInstruction;X86FPRemainderRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPRemainderRegRegInstruction;0;0
X86FPST0ST1RegRegInstruction;X86FPST0ST1RegRegInstruction(const class TR::X86FPST0ST1RegRegInstruction &);1;TR;X86FPST0ST1RegRegInstruction;1;0
X86FPST0ST1RegRegInstruction;X86FPST0ST1RegRegInstruction(class TR::X86FPST0ST1RegRegInstruction &&);0;TR;X86FPST0ST1RegRegInstruction;1;0
X86FPST0ST1RegRegInstruction;X86FPST0ST1RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPST0ST1RegRegInstruction;0;0
X86FPST0STiRegRegInstruction;X86FPST0STiRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *);1;TR;X86FPST0STiRegRegInstruction;0;0
X86FPST0STiRegRegInstruction;X86FPST0STiRegRegInstruction(class TR::X86FPST0STiRegRegInstruction &&);0;TR;X86FPST0STiRegRegInstruction;1;0
X86FPST0STiRegRegInstruction;X86FPST0STiRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *);0;TR;X86FPST0STiRegRegInstruction;0;0
X86FPST0STiRegRegInstruction;X86FPST0STiRegRegInstruction(const class TR::X86FPST0STiRegRegInstruction &);0;TR;X86FPST0STiRegRegInstruction;1;0
X86FPSTiST0RegRegInstruction;X86FPSTiST0RegRegInstruction(class TR::X86FPSTiST0RegRegInstruction &&);1;TR;X86FPSTiST0RegRegInstruction;1;0
X86FPSTiST0RegRegInstruction;X86FPSTiST0RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *,_Bool);0;TR;X86FPSTiST0RegRegInstruction;0;0
X86FPSTiST0RegRegInstruction;X86FPSTiST0RegRegInstruction(const class TR::X86FPSTiST0RegRegInstruction &);0;TR;X86FPSTiST0RegRegInstruction;1;0
X86FenceInstruction;X86FenceInstruction(const class TR::X86FenceInstruction &);1;TR;X86FenceInstruction;1;0
X86FenceInstruction;X86FenceInstruction(enum TR_X86OpCodes,TR::Node *,TR::Node *,TR::CodeGenerator *);0;TR;X86FenceInstruction;0;0
X86FenceInstruction;X86FenceInstruction(class TR::X86FenceInstruction &&);0;TR;X86FenceInstruction;1;0
X86ImmInstruction;X86ImmInstruction(class TR::X86ImmInstruction &&);1;TR;X86ImmInstruction;1;0
X86ImmInstruction;X86ImmInstruction(const class TR::X86ImmInstruction &);0;TR;X86ImmInstruction;1;0
X86ImmInstruction;X86ImmInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t);0;TR;X86ImmInstruction;0;0
X86ImmSnippetInstruction;X86ImmSnippetInstruction(const class TR::X86ImmSnippetInstruction &);1;TR;X86ImmSnippetInstruction;1;0
X86ImmSnippetInstruction;X86ImmSnippetInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::UnresolvedDataSnippet *,TR::CodeGenerator *);0;TR;X86ImmSnippetInstruction;0;0
X86ImmSnippetInstruction;X86ImmSnippetInstruction(class TR::X86ImmSnippetInstruction &&);0;TR;X86ImmSnippetInstruction;1;0
X86ImmSymInstruction;X86ImmSymInstruction(class TR::X86ImmSymInstruction &&);1;TR;X86ImmSymInstruction;1;0
X86ImmSymInstruction;X86ImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);0;TR;X86ImmSymInstruction;0;0
X86ImmSymInstruction;X86ImmSymInstruction(const class TR::X86ImmSymInstruction &);0;TR;X86ImmSymInstruction;1;0
X86MemImmInstruction;X86MemImmInstruction(const class TR::X86MemImmInstruction &);1;TR;X86MemImmInstruction;1;0
X86MemImmInstruction;X86MemImmInstruction(int32_t,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t);0;TR;X86MemImmInstruction;0;0
X86MemImmInstruction;X86MemImmInstruction(class TR::X86MemImmInstruction &&);0;TR;X86MemImmInstruction;1;0
X86MemImmSymInstruction;X86MemImmSymInstruction(const class TR::X86MemImmSymInstruction &);1;TR;X86MemImmSymInstruction;1;0
X86MemImmSymInstruction;X86MemImmSymInstruction(class TR::X86MemImmSymInstruction &&);0;TR;X86MemImmSymInstruction;1;0
X86MemImmSymInstruction;X86MemImmSymInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;X86MemImmSymInstruction;0;0
X86MemRegImmInstruction;X86MemRegImmInstruction(class TR::X86MemRegImmInstruction &&);1;TR;X86MemRegImmInstruction;1;0
X86MemRegImmInstruction;X86MemRegImmInstruction(const class TR::X86MemRegImmInstruction &);0;TR;X86MemRegImmInstruction;1;0
X86MemRegImmInstruction;X86MemRegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,int32_t,TR::CodeGenerator *);0;TR;X86MemRegImmInstruction;0;0
X86MemRegRegInstruction;X86MemRegRegInstruction(class TR::X86MemRegRegInstruction &&);0;TR;X86MemRegRegInstruction;1;0
X86MemRegRegInstruction;X86MemRegRegInstruction(const class TR::X86MemRegRegInstruction &);0;TR;X86MemRegRegInstruction;1;0
X86MemTableInstruction;X86MemTableInstruction(class TR::X86MemTableInstruction &&);1;TR;X86MemTableInstruction;1;0
X86MemTableInstruction;X86MemTableInstruction(const class TR::X86MemTableInstruction &);0;TR;X86MemTableInstruction;1;0
X86MemTableInstruction;X86MemTableInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,ncount_t,TR::CodeGenerator *);0;TR;X86MemTableInstruction;0;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(class TR::X86PaddingSnippetInstruction &&);1;TR;X86PaddingSnippetInstruction;1;0
X86PaddingSnippetInstruction;X86PaddingSnippetInstruction(const class TR::X86PaddingSnippetInstruction &);0;TR;X86PaddingSnippetInstruction;1;0
X86RegImmInstruction;X86RegImmInstruction(class TR::X86RegImmInstruction &&);1;TR;X86RegImmInstruction;1;0
X86RegImmInstruction;X86RegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::CodeGenerator *,int32_t);0;TR;X86RegImmInstruction;0;0
X86RegImmInstruction;X86RegImmInstruction(const class TR::X86RegImmInstruction &);0;TR;X86RegImmInstruction;1;0
X86RegImmSymInstruction;X86RegImmSymInstruction(const class TR::X86RegImmSymInstruction &);1;TR;X86RegImmSymInstruction;1;0
X86RegImmSymInstruction;X86RegImmSymInstruction(class TR::X86RegImmSymInstruction &&);0;TR;X86RegImmSymInstruction;1;0
X86RegImmSymInstruction;X86RegImmSymInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);0;TR;X86RegImmSymInstruction;0;0
X86RegMemImmInstruction;X86RegMemImmInstruction(class TR::X86RegMemImmInstruction &&);1;TR;X86RegMemImmInstruction;1;0
X86RegMemImmInstruction;X86RegMemImmInstruction(const class TR::X86RegMemImmInstruction &);0;TR;X86RegMemImmInstruction;1;0
X86RegMemImmInstruction;X86RegMemImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,int32_t,TR::CodeGenerator *);0;TR;X86RegMemImmInstruction;0;0
X86RegRegImmInstruction;X86RegRegImmInstruction(const class TR::X86RegRegImmInstruction &);1;TR;X86RegRegImmInstruction;1;0
X86RegRegImmInstruction;X86RegRegImmInstruction(class TR::X86RegRegImmInstruction &&);0;TR;X86RegRegImmInstruction;1;0
X86RegRegImmInstruction;X86RegRegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,int32_t,TR::CodeGenerator *);0;TR;X86RegRegImmInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(class TR::X86RegRegRegInstruction &&);1;TR;X86RegRegRegInstruction;1;0
X86RegRegRegInstruction;X86RegRegRegInstruction(TR::Register *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *);0;TR;X86RegRegRegInstruction;0;0
X86RegRegRegInstruction;X86RegRegRegInstruction(const class TR::X86RegRegRegInstruction &);0;TR;X86RegRegRegInstruction;1;0
X86VFPCallCleanupInstruction;X86VFPCallCleanupInstruction(class TR::X86VFPCallCleanupInstruction &&);1;TR;X86VFPCallCleanupInstruction;1;0
X86VFPCallCleanupInstruction;X86VFPCallCleanupInstruction(int32_t,TR::Node *,TR::CodeGenerator *);0;TR;X86VFPCallCleanupInstruction;0;0
X86VFPCallCleanupInstruction;X86VFPCallCleanupInstruction(const class TR::X86VFPCallCleanupInstruction &);0;TR;X86VFPCallCleanupInstruction;1;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(const class TR::X86VFPDedicateInstruction &);1;TR;X86VFPDedicateInstruction;1;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(TR::RealRegister *,TR::Node *,TR::CodeGenerator *);0;TR;X86VFPDedicateInstruction;0;0
X86VFPReleaseInstruction;X86VFPReleaseInstruction(class TR::X86VFPReleaseInstruction &&);1;TR;X86VFPReleaseInstruction;1;0
X86VFPReleaseInstruction;X86VFPReleaseInstruction(const class TR::X86VFPReleaseInstruction &);0;TR;X86VFPReleaseInstruction;1;0
X86VFPReleaseInstruction;X86VFPReleaseInstruction(TR::X86VFPDedicateInstruction *,TR::Node *,TR::CodeGenerator *);0;TR;X86VFPReleaseInstruction;0;0
X86VFPRestoreInstruction;X86VFPRestoreInstruction(class TR::X86VFPRestoreInstruction &&);1;TR;X86VFPRestoreInstruction;1;0
X86VFPRestoreInstruction;X86VFPRestoreInstruction(const class TR::X86VFPRestoreInstruction &);0;TR;X86VFPRestoreInstruction;1;0
X86VFPRestoreInstruction;X86VFPRestoreInstruction(TR::X86VFPSaveInstruction *,TR::Node *,TR::CodeGenerator *);0;TR;X86VFPRestoreInstruction;0;0
X86VFPSaveInstruction;X86VFPSaveInstruction(const class TR::X86VFPSaveInstruction &);1;TR;X86VFPSaveInstruction;1;0
X86VFPSaveInstruction;X86VFPSaveInstruction(TR::Instruction *,TR::CodeGenerator *);0;TR;X86VFPSaveInstruction;0;0
TR_X86FPStackRegister;TR_X86FPStackRegister(const class TR_X86FPStackRegister &);1;TR;X86FPStackRegister;1;0
TR_X86FPStackRegister;TR_X86FPStackRegister(class TR_X86FPStackRegister &&);0;TR;X86FPStackRegister;1;0
TR_X86FPStackRegister;TR_X86FPStackRegister(RegState,TR_X86FPStackRegisters,TR::class RealRegister::RegNum,TR::CodeGenerator *);0;TR;X86FPStackRegister;0;0
AMD64RegImm64Instruction;AMD64RegImm64Instruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t);1;TR;AMD64RegImm64Instruction;0;0
X86FPRegRegInstruction;X86FPRegRegInstruction(TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *);1;TR;X86FPRegRegInstruction;0;0
X86VFPDedicateInstruction;X86VFPDedicateInstruction(class TR::X86VFPDedicateInstruction &&);1;TR;X86VFPDedicateInstruction;1;0
X86VFPReleaseInstruction;X86VFPReleaseInstruction(TR::Instruction *,TR::X86VFPDedicateInstruction *,TR::CodeGenerator *);1;TR;X86VFPReleaseInstruction;0;0
X86VFPRestoreInstruction;X86VFPRestoreInstruction(TR::Instruction *,TR::X86VFPSaveInstruction *,TR::CodeGenerator *);1;TR;X86VFPRestoreInstruction;0;0
X86SystemLinkage;X86SystemLinkage(TR::CodeGenerator *);1;TR;X86SystemLinkage;0;0
buildArgs;buildArgs(TR::Node *,TR::RegisterDependencyConditions *);1;TR;X86SystemLinkage;0;1
buildVolatileAndReturnDependencies;buildVolatileAndReturnDependencies(TR::Node *,TR::RegisterDependencyConditions *);1;TR;X86SystemLinkage;0;1
computeMemoryArgSize;computeMemoryArgSize(TR::Node *,int32_t,int32_t,int8_t);1;TR;X86SystemLinkage;0;0
copyParametersToHomeLocation;copyParametersToHomeLocation(TR::Instruction *);1;TR;X86SystemLinkage;0;0
getAlignment;getAlignment(TR::DataType);1;TR;X86SystemLinkage;0;1
getParameterStartingPos;getParameterStartingPos(int32_t &,uint32_t);1;TR;X86SystemLinkage;0;0
getSingleWordFrameAllocationRegister;getSingleWordFrameAllocationRegister();1;TR;X86SystemLinkage;0;1
layoutParm;layoutParm(TR::Node *,int32_t &,uint16_t &,uint16_t &,TR::parmLayoutResult &);1;TR;X86SystemLinkage;0;1
layoutParm;layoutParm(TR::ParameterSymbol *,int32_t &,uint16_t &,uint16_t &,TR::parmLayoutResult &);0;TR;X86SystemLinkage;0;1
layoutTypeOnStack;layoutTypeOnStack(TR::DataType,int32_t &,TR::parmLayoutResult &);1;TR;X86SystemLinkage;0;0
mapIncomingParms;mapIncomingParms(TR::ResolvedMethodSymbol *,uint32_t &);0;TR;X86SystemLinkage;0;1
operator=;operator=(const class TR::X86SystemLinkage &);0;TR;X86SystemLinkage;1;0
operator=;operator=(class TR::X86SystemLinkage &&);0;TR;X86SystemLinkage;1;0
restorePreservedRegisters;restorePreservedRegisters(TR::Instruction *);1;TR;X86SystemLinkage;0;0
savePreservedRegisters;savePreservedRegisters(TR::Instruction *);1;TR;X86SystemLinkage;0;0
setUpStackSizeForCallNode;setUpStackSizeForCallNode(TR::Node *);1;TR;X86SystemLinkage;0;0
~X86SystemLinkage;~X86SystemLinkage();1;TR;X86SystemLinkage;1;0
createStore;createStore(TR::SymbolReference *,TR::Node *,TR::ILOpCodes);1;OMR;Node;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
operator=;operator=(class TR_IGBase &&);1;TR;IGBase;1;0
operator=;operator=(const class TR_IGBase &);0;TR;IGBase;1;0
RegisterDependencyConditions;RegisterDependencyConditions(class TR::RegisterDependencyConditions &&);0;TR;RegisterDependencyConditions;1;0
RegisterDependencyConditions;RegisterDependencyConditions(const class TR::RegisterDependencyConditions &);0;TR;RegisterDependencyConditions;1;0
Linkage;Linkage(class TR::Linkage &&);0;TR;Linkage;1;0
Linkage;Linkage(const class TR::Linkage &);0;TR;Linkage;1;0
X86SystemLinkage;X86SystemLinkage(class TR::X86SystemLinkage &&);1;TR;X86SystemLinkage;1;0
X86SystemLinkage;X86SystemLinkage(const class TR::X86SystemLinkage &);0;TR;X86SystemLinkage;1;0
X86SystemLinkage;X86SystemLinkage(TR::CodeGenerator *);0;TR;X86SystemLinkage;0;0
RegisterDependencyConditions;RegisterDependencyConditions();1;OMR;RegisterDependencyConditions;0;0
AMD64ABILinkage;AMD64ABILinkage(class TR::AMD64ABILinkage &&);1;TR;AMD64ABILinkage;1;0
AMD64ABILinkage;AMD64ABILinkage(const class TR::AMD64ABILinkage &);0;TR;AMD64ABILinkage;1;0
AMD64ABILinkage;AMD64ABILinkage(TR::CodeGenerator *);0;TR;AMD64ABILinkage;0;0
AMD64SystemLinkage;AMD64SystemLinkage(class TR::AMD64SystemLinkage &&);1;TR;AMD64SystemLinkage;1;0
AMD64SystemLinkage;AMD64SystemLinkage(const class TR::AMD64SystemLinkage &);0;TR;AMD64SystemLinkage;1;0
AMD64SystemLinkage;AMD64SystemLinkage(TR::CodeGenerator *);0;TR;AMD64SystemLinkage;0;0
layoutTypeInRegs;layoutTypeInRegs(TR::DataType,uint16_t &,uint16_t &,TR::parmLayoutResult &);1;TR;AMD64SystemLinkage;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;Linkage;0;0
operator=;operator=(const class TR::AMD64SystemLinkage &);0;TR;AMD64SystemLinkage;1;0
operator=;operator=(class TR::AMD64SystemLinkage &&);0;TR;AMD64SystemLinkage;1;0
operator=;operator=(class TR::AMD64ABILinkage &&);0;TR;AMD64ABILinkage;1;0
operator=;operator=(const class TR::AMD64ABILinkage &);0;TR;AMD64ABILinkage;1;0
~AMD64ABILinkage;~AMD64ABILinkage();1;TR;AMD64ABILinkage;1;0
~AMD64SystemLinkage;~AMD64SystemLinkage();1;TR;AMD64SystemLinkage;1;0
AMD64Win64FastCallLinkage;AMD64Win64FastCallLinkage(class TR::AMD64Win64FastCallLinkage &&);1;TR;AMD64Win64FastCallLinkage;1;0
AMD64Win64FastCallLinkage;AMD64Win64FastCallLinkage(const class TR::AMD64Win64FastCallLinkage &);0;TR;AMD64Win64FastCallLinkage;1;0
AMD64Win64FastCallLinkage;AMD64Win64FastCallLinkage(TR::CodeGenerator *);0;TR;AMD64Win64FastCallLinkage;0;0
operator=;operator=(const class TR::AMD64Win64FastCallLinkage &);0;TR;AMD64Win64FastCallLinkage;1;0
operator=;operator=(class TR::AMD64Win64FastCallLinkage &&);0;TR;AMD64Win64FastCallLinkage;1;0
~AMD64Win64FastCallLinkage;~AMD64Win64FastCallLinkage();1;TR;AMD64Win64FastCallLinkage;1;0
IA32DataSnippet;IA32DataSnippet(const class TR::IA32DataSnippet &);1;TR;IA32DataSnippet;1;0
IA32DataSnippet;IA32DataSnippet(class TR::IA32DataSnippet &&);0;TR;IA32DataSnippet;1;0
operator delete;operator delete(void *,TR::Region &);1;OMR;Recompilation;0;0
operator delete;operator delete(void *,size_t);0;OMR;Recompilation;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Recompilation;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);1;OMR;Recompilation;0;0
TR_X86FPStackIterator;TR_X86FPStackIterator(class TR_X86FPStackIterator &&);1;TR;X86FPStackIterator;1;0
TR_X86FPStackIterator;TR_X86FPStackIterator(const class TR_X86FPStackIterator &);0;TR;X86FPStackIterator;1;0
TR_X86FPStackIterator;TR_X86FPStackIterator(TR::Machine *,enum TR_RegisterKinds);0;TR;X86FPStackIterator;0;0
X86ImmSymInstruction;X86ImmSymInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *);1;TR;X86ImmSymInstruction;0;0
TR_X86ScratchRegisterManager;TR_X86ScratchRegisterManager(class TR_X86ScratchRegisterManager &&);1;TR;X86ScratchRegisterManager;1;0
TR_X86ScratchRegisterManager;TR_X86ScratchRegisterManager(const class TR_X86ScratchRegisterManager &);0;TR;X86ScratchRegisterManager;1;0
TR_X86ScratchRegisterManager;TR_X86ScratchRegisterManager(int32_t,TR::CodeGenerator *);0;TR;X86ScratchRegisterManager;0;0
~TR_ScratchRegisterManager;~TR_ScratchRegisterManager();1;TR;ScratchRegisterManager;1;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;Register;0;0
AMD64SystemLinkage;AMD64SystemLinkage(TR::CodeGenerator *);1;TR;AMD64SystemLinkage;0;0
AMD64SystemLinkage;AMD64SystemLinkage(class TR::AMD64SystemLinkage &&);0;TR;AMD64SystemLinkage;1;0
adjustRegisterUseCountsDown;adjustRegisterUseCountsDown(int *,_Bool);1;OMR::X86;Machine;0;0
adjustRegisterUseCountsUp;adjustRegisterUseCountsUp(int *,_Bool);1;OMR::X86;Machine;0;0
createCondForLiveAndSpilledGPRs;createCondForLiveAndSpilledGPRs(_Bool,int *);1;OMR::X86;Machine;0;0
Compilation;Compilation(const class OMR::Compilation &);1;OMR;Compilation;1;0
getCurrentBlock;getCurrentBlock();1;OMR;Compilation;0;1
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;TR;DebugCounter;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;TR;DebugCounter;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;TR;DebugCounter;0;0
prependDebugCounterBump;prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,TR::Node *);1;TR;DebugCounter;0;0
prependDebugCounterBump;prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,int32_t);0;TR;DebugCounter;0;0
operator new;operator new(size_t,TR::IlGeneratorMethodDetails &);1;OMR;IlGeneratorMethodDetails;0;0
operator new;operator new(size_t,TR::IlGeneratorMethodDetails *);0;OMR;IlGeneratorMethodDetails;0;0
IlType;IlType(const class OMR::IlType &);1;OMR;IlType;1;0
IlType;IlType(const char *);0;OMR;IlType;0;0
IlType;IlType();0;OMR;IlType;0;0
IlType;IlType(class TR::IlType &&);0;TR;IlType;1;0
baseType;baseType();1;OMR;IlType;0;1
getName;getName();1;OMR;IlType;0;0
getPrimitiveType;getPrimitiveType();1;OMR;IlType;0;1
getSignatureName;getSignatureName();1;OMR;IlType;0;1
getSize;getSize();1;OMR;IlType;0;0
isArray;isArray();1;OMR;IlType;0;1
isPointer;isPointer();1;OMR;IlType;0;1
isStruct;isStruct();1;OMR;IlType;0;1
isUnion;isUnion();1;OMR;IlType;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;IlType;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;IlType;0;0
operator delete;operator delete(void *,size_t);1;OMR;IlType;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;IlType;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlType;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlType;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlType;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;IlType;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlType;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlType;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlType;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;IlType;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;IlType;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlType;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;IlType;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;IlType;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlType;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;IlType;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;IlType;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;IlType;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;IlType;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlType;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlType;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlType;0;0
operator=;operator=(const class OMR::IlType &);1;OMR;IlType;1;0
operator=;operator=(class TR::IlType &&);0;TR;IlType;1;0
operator=;operator=(const class TR::IlType &);0;TR;IlType;1;0
~IlType;~IlType();1;OMR;IlType;0;1
IlValue;IlValue(class OMR::IlValue &&);1;OMR;IlValue;1;0
IlValue;IlValue(TR::Node *,TR::TreeTop *,TR::Block *,TR::MethodBuilder *);0;OMR;IlValue;0;0
IlValue;IlValue(const class OMR::IlValue &);0;OMR;IlValue;1;0
getDataType;getDataType();1;OMR;IlValue;0;0
getID;getID();1;OMR;IlValue;0;0
getSymbolReference;getSymbolReference();1;OMR;IlValue;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;IlValue;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;IlValue;0;0
load;load(TR::Block *);1;OMR;IlValue;0;0
operator delete;operator delete(void *,size_t);1;OMR;IlValue;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlValue;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlValue;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlValue;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;IlValue;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;IlValue;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlValue;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlValue;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlValue;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;IlValue;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlValue;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;IlValue;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;IlValue;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;IlValue;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlValue;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlValue;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;IlValue;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;IlValue;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlValue;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlValue;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;IlValue;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlValue;0;0
storeOver;storeOver(TR::IlValue *,TR::Block *);1;OMR;IlValue;0;0
storeToAuto;storeToAuto();1;OMR;IlValue;0;0
KnownObjectTable;KnownObjectTable(const class OMR::KnownObjectTable &);1;OMR;KnownObjectTable;1;0
KnownObjectTable;KnownObjectTable(class OMR::KnownObjectTable &&);0;OMR;KnownObjectTable;1;0
AbsDiffIfThenElseMethod;AbsDiffIfThenElseMethod(class TestCompiler::AbsDiffIfThenElseMethod &&);1;TestCompiler;AbsDiffIfThenElseMethod;1;0
AbsDiffIfThenElseMethod;AbsDiffIfThenElseMethod(const class TestCompiler::AbsDiffIfThenElseMethod &);0;TestCompiler;AbsDiffIfThenElseMethod;1;0
AbsDiffIfThenElseMethod;AbsDiffIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;AbsDiffIfThenElseMethod;0;0
Add;Add(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
AddWithOverflow;AddWithOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
AddWithUnsignedOverflow;AddWithUnsignedOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
AllLocalsHaveBeenDefined;AllLocalsHaveBeenDefined();1;OMR;MethodBuilder;0;0
And;And(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
AppendBuilder;AppendBuilder(TR::IlBuilder *);1;OMR;IlBuilder;0;0
AppendBuilder;AppendBuilder(TR::BytecodeBuilder *);0;OMR;MethodBuilder;0;0
AppendBytecodeBuilder;AppendBytecodeBuilder(TR::BytecodeBuilder *);1;OMR;MethodBuilder;0;0
AtomicAdd;AtomicAdd(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
Call;Call(const char *,int32_t);1;OMR;IlBuilder;0;0
Call;Call(const char *,int32_t,TR::IlValue **);0;OMR;IlBuilder;0;0
ComputedCall;ComputedCall(const char *,int32_t);1;OMR;IlBuilder;0;0
ComputedCall;ComputedCall(const char *,int32_t,TR::IlValue **);0;OMR;IlBuilder;0;0
Const;Const(const void *const);1;OMR;IlBuilder;0;0
Const;Const(double);0;OMR;IlBuilder;0;0
Const;Const(float);0;OMR;IlBuilder;0;0
Const;Const(int64_t);0;OMR;IlBuilder;0;0
Const;Const(int32_t);0;OMR;IlBuilder;0;0
Const;Const(int16_t);0;OMR;IlBuilder;0;0
Const;Const(int8_t);0;OMR;IlBuilder;0;0
ConstAddress;ConstAddress(const void *const);1;OMR;IlBuilder;0;0
ConstDouble;ConstDouble(double);1;OMR;IlBuilder;0;0
ConstFloat;ConstFloat(float);1;OMR;IlBuilder;0;0
ConstInt16;ConstInt16(int16_t);1;OMR;IlBuilder;0;0
ConstInt32;ConstInt32(int32_t);1;OMR;IlBuilder;0;0
ConstInt64;ConstInt64(int64_t);1;OMR;IlBuilder;0;0
ConstInt8;ConstInt8(int8_t);1;OMR;IlBuilder;0;0
ConstInteger;ConstInteger(TR::IlType *,int64_t);1;OMR;IlBuilder;0;0
ConstString;ConstString(const char *const);1;OMR;IlBuilder;0;0
ConvertTo;ConvertTo(TR::IlType *,TR::IlValue *);1;OMR;IlBuilder;0;0
Copy;Copy(TR::IlValue *);1;OMR;IlBuilder;0;0
CreateLocalArray;CreateLocalArray(int32_t,TR::IlType *);1;OMR;IlBuilder;0;0
CreateLocalStruct;CreateLocalStruct(TR::IlType *);1;OMR;IlBuilder;0;0
DefineArrayParameter;DefineArrayParameter(const char *,TR::IlType *);1;OMR;MethodBuilder;0;0
DefineFile;DefineFile(const char *);1;OMR;MethodBuilder;0;0
DefineFunction;DefineFunction(const char *const,const char *const,const char *const,void *,TR::IlType *,int32_t);1;OMR;MethodBuilder;0;0
DefineFunction;DefineFunction(const char *const,const char *const,const char *const,void *,TR::IlType *,int32_t,TR::IlType **);0;OMR;MethodBuilder;0;0
DefineLine;DefineLine(int);1;OMR;MethodBuilder;0;0
DefineLine;DefineLine(const char *);0;OMR;MethodBuilder;0;0
DefineLocal;DefineLocal(const char *,TR::IlType *);1;OMR;MethodBuilder;0;0
DefineMemory;DefineMemory(const char *,TR::IlType *,void *);1;OMR;MethodBuilder;0;0
DefineName;DefineName(const char *);1;OMR;MethodBuilder;0;0
DefineParameter;DefineParameter(const char *,TR::IlType *);1;OMR;MethodBuilder;0;0
DefineReturnType;DefineReturnType(TR::IlType *);1;OMR;MethodBuilder;0;0
Div;Div(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
DoWhileLoop;DoWhileLoop(const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **);1;OMR;IlBuilder;0;1
DoWhileLoopWithBreak;DoWhileLoopWithBreak(const char *,TR::IlBuilder **,TR::IlBuilder **);1;OMR;IlBuilder;0;0
DoWhileLoopWithContinue;DoWhileLoopWithContinue(const char *,TR::IlBuilder **,TR::IlBuilder **);1;OMR;IlBuilder;0;0
EqualTo;EqualTo(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
ForLoop;ForLoop(_Bool,const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;1
ForLoopDown;ForLoopDown(const char *,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
ForLoopUp;ForLoopUp(const char *,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
ForLoopWithBreak;ForLoopWithBreak(_Bool,const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
ForLoopWithContinue;ForLoopWithContinue(_Bool,const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
GetNextBytecodeFromWorklist;GetNextBytecodeFromWorklist();1;OMR;MethodBuilder;0;0
Goto;Goto(TR::IlBuilder **);1;OMR;IlBuilder;0;0
Goto;Goto(TR::IlBuilder *);0;OMR;IlBuilder;0;0
GreaterOrEqualTo;GreaterOrEqualTo(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
GreaterThan;GreaterThan(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfAnd;IfAnd(TR::IlBuilder **,TR::IlBuilder **,int32_t);1;OMR;IlBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpEqualZero;IfCmpEqualZero(TR::IlBuilder **,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpEqualZero;IfCmpEqualZero(TR::IlBuilder *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::IlBuilder *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::IlBuilder **,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfOr;IfOr(TR::IlBuilder **,TR::IlBuilder **,int32_t);1;OMR;IlBuilder;0;0
IfThen;IfThen(TR::IlBuilder **,TR::IlValue *);1;OMR;IlBuilder;0;1
IfThenElse;IfThenElse(TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *);1;OMR;IlBuilder;0;0
IlBuilder;IlBuilder(const class OMR::IlBuilder &);1;OMR;IlBuilder;1;0
IlBuilder;IlBuilder(TR::IlBuilder *);0;OMR;IlBuilder;0;0
IlBuilder;IlBuilder(TR::MethodBuilder *,TR::TypeDictionary *);0;OMR;IlBuilder;0;0
IlBuilder;IlBuilder(class TestCompiler::IlBuilder &&);0;TestCompiler;IlBuilder;1;0
IlBuilder;IlBuilder(class TestCompiler::TestDriver *,TR::MethodBuilder *,TR::TypeDictionary *);0;TestCompiler;IlBuilder;0;0
IlBuilder;IlBuilder(const class TestCompiler::IlBuilder &);0;TestCompiler;IlBuilder;1;0
IlBuilder;IlBuilder(TR::MethodBuilder *,class TR::TypeDictionary *);0;TR;IlBuilder;0;0
IlBuilder;IlBuilder(TestCompiler::TestDriver *,TR::MethodBuilder *,TR::TypeDictionary *);0;TR;IlBuilder;0;0
IlInjector;IlInjector(TR::TypeDictionary *);1;OMR;IlInjector;0;0
IlInjector;IlInjector(const class OMR::IlInjector &);0;OMR;IlInjector;1;0
IlInjector;IlInjector(TR::IlInjector *);0;OMR;IlInjector;0;0
IlInjector;IlInjector(const class TestCompiler::IlInjector &);0;TestCompiler;IlInjector;1;0
IlInjector;IlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);0;TestCompiler;IlInjector;0;0
IlInjector;IlInjector(TR::ResolvedMethod *,TR::TypeDictionary *,class TestCompiler::TestDriver *);0;TestCompiler;IlInjector;0;0
IlInjector;IlInjector(class TestCompiler::IlInjector &&);0;TestCompiler;IlInjector;1;0
IlInjector;IlInjector(class TR::IlInjector &&);0;TR;IlInjector;1;0
IlInjector;IlInjector(TR::ResolvedMethod *,TR::TypeDictionary *,TestCompiler::TestDriver *);0;TR;IlInjector;0;0
IlInjector;IlInjector(TR::TypeDictionary *,TestCompiler::TestDriver *);0;TR;IlInjector;0;0
IlInjector;IlInjector(const class TR::IlInjector &);0;TR;IlInjector;1;0
IndexAt;IndexAt(TR::IlType *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
LessOrEqualTo;LessOrEqualTo(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
LessThan;LessThan(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
Load;Load(const char *);1;OMR;IlBuilder;0;0
LoadAt;LoadAt(TR::IlType *,TR::IlValue *);1;OMR;IlBuilder;0;0
LoadIndirect;LoadIndirect(const char *,const char *,TR::IlValue *);1;OMR;IlBuilder;0;0
MethodBuilder;MethodBuilder(const class OMR::MethodBuilder &);1;OMR;MethodBuilder;0;0
MethodBuilder;MethodBuilder(TR::TypeDictionary *,OMR::VirtualMachineState *);0;OMR;MethodBuilder;0;0
MethodBuilder;MethodBuilder(class TestCompiler::MethodBuilder &&);0;TestCompiler;MethodBuilder;1;0
MethodBuilder;MethodBuilder(TR::TypeDictionary *);0;TestCompiler;MethodBuilder;0;0
MethodBuilder;MethodBuilder(TR::TypeDictionary *,class TestCompiler::TestDriver *);0;TestCompiler;MethodBuilder;0;0
MethodBuilder;MethodBuilder(const class TestCompiler::MethodBuilder &);0;TestCompiler;MethodBuilder;1;0
MethodBuilder;MethodBuilder(class TR::MethodBuilder &&);0;TR;MethodBuilder;1;0
MethodBuilder;MethodBuilder(const class TR::MethodBuilder &);0;TR;MethodBuilder;1;0
MethodBuilder;MethodBuilder(TR::TypeDictionary *,TestCompiler::TestDriver *);0;TR;MethodBuilder;0;0
Mul;Mul(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
MulWithOverflow;MulWithOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
NewValue;NewValue(TR::IlType *);1;OMR;IlBuilder;0;0
NotEqualTo;NotEqualTo(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
NullAddress;NullAddress();1;OMR;IlBuilder;0;0
Or;Or(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
OrphanBuilder;OrphanBuilder();1;OMR;IlBuilder;0;0
OrphanBytecodeBuilder;OrphanBytecodeBuilder(int32_t,char *);1;OMR;MethodBuilder;0;0
Rem;Rem(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
RequestFunction;RequestFunction(const char *);1;OMR;MethodBuilder;0;1
Return;Return();1;OMR;IlBuilder;0;0
Return;Return(TR::IlValue *);0;OMR;IlBuilder;0;0
ShiftL;ShiftL(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
ShiftL;ShiftL(TR::IlValue *,int8_t);0;OMR;IlBuilder;0;0
ShiftR;ShiftR(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
ShiftR;ShiftR(TR::IlValue *,int8_t);0;OMR;IlBuilder;0;0
Store;Store(const char *,TR::IlValue *);1;OMR;IlBuilder;0;0
StoreAt;StoreAt(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
StoreIndirect;StoreIndirect(const char *,const char *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
StoreOver;StoreOver(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
StructFieldInstanceAddress;StructFieldInstanceAddress(const char *,const char *,TR::IlValue *);1;OMR;IlBuilder;0;0
Sub;Sub(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
SubWithOverflow;SubWithOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
SubWithUnsignedOverflow;SubWithUnsignedOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
Switch;Switch(const char *,TR::IlBuilder **,uint32_t);1;OMR;IlBuilder;0;0
Switch;Switch(const char *,TR::IlBuilder **,uint32_t,int32_t *,TR::IlBuilder **,_Bool *);0;OMR;IlBuilder;0;0
TR_IlGenerator;TR_IlGenerator(const class TR_IlGenerator &);1;TR;IlGenerator;1;0
TraceEnabled_log;TraceEnabled_log();1;OMR;IlBuilder;0;0
TraceIL_log;TraceIL_log(const char *);1;OMR;IlBuilder;0;0
Transaction;Transaction(TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **);1;OMR;IlBuilder;0;0
TransactionAbort;TransactionAbort();1;OMR;IlBuilder;0;0
UnionFieldInstanceAddress;UnionFieldInstanceAddress(const char *,const char *,TR::IlValue *);1;OMR;IlBuilder;0;0
UnsignedConvertTo;UnsignedConvertTo(TR::IlType *,TR::IlValue *);1;OMR;IlBuilder;0;0
UnsignedGreaterOrEqualTo;UnsignedGreaterOrEqualTo(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
UnsignedGreaterThan;UnsignedGreaterThan(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
UnsignedLessOrEqualTo;UnsignedLessOrEqualTo(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
UnsignedLessThan;UnsignedLessThan(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
UnsignedShiftR;UnsignedShiftR(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
UnsignedShiftR;UnsignedShiftR(TR::IlValue *,int8_t);0;OMR;IlBuilder;0;0
VectorLoad;VectorLoad(const char *);1;OMR;IlBuilder;0;0
VectorLoadAt;VectorLoadAt(TR::IlType *,TR::IlValue *);1;OMR;IlBuilder;0;0
VectorStore;VectorStore(const char *,TR::IlValue *);1;OMR;IlBuilder;0;0
VectorStoreAt;VectorStoreAt(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
WhileDoLoop;WhileDoLoop(const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **);1;OMR;IlBuilder;0;1
WhileDoLoopWithBreak;WhileDoLoopWithBreak(const char *,TR::IlBuilder **,TR::IlBuilder **);1;OMR;IlBuilder;0;0
WhileDoLoopWithContinue;WhileDoLoopWithContinue(const char *,TR::IlBuilder **,TR::IlBuilder **);1;OMR;IlBuilder;0;0
Xor;Xor(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
aconst;aconst(uintptrj_t);1;OMR;IlInjector;0;0
addBytecodeBuilderToWorklist;addBytecodeBuilderToWorklist(TR::BytecodeBuilder *);1;OMR;MethodBuilder;0;0
addToAllBytecodeBuildersList;addToAllBytecodeBuildersList(TR::BytecodeBuilder *);1;OMR;MethodBuilder;0;0
addToBlockCountingWorklist;addToBlockCountingWorklist(TR::BytecodeBuilder *);1;OMR;MethodBuilder;0;0
addToTreeConnectingWorklist;addToTreeConnectingWorklist(TR::BytecodeBuilder *);1;OMR;MethodBuilder;0;0
allocateBlocks;allocateBlocks(int32_t);1;OMR;IlInjector;0;0
appendBlock;appendBlock(TR::Block *,_Bool);1;OMR;IlBuilder;0;1
appendExceptionHandler;appendExceptionHandler(TR::Block *,TR::IlBuilder **,uint32_t);1;OMR;IlBuilder;0;0
appendGoto;appendGoto(TR::Block *);1;OMR;IlBuilder;0;0
appendNoFallThroughBlock;appendNoFallThroughBlock(TR::Block *);1;OMR;IlBuilder;0;0
arrayLoad;arrayLoad(TR::Node *,TR::Node *,TR::IlType *);1;OMR;IlInjector;0;0
asMethodBuilder;asMethodBuilder();1;OMR;IlInjector;0;1
bconst;bconst(int8_t);1;OMR;IlInjector;0;0
binaryOpFromNodes;binaryOpFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *);1;OMR;IlBuilder;0;0
binaryOpFromOpCode;binaryOpFromOpCode(TR::ILOpCodes,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
binaryOpFromOpMap;binaryOpFromOpMap(OpCodeMapper,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
binaryOpNodeFromNodes;binaryOpNodeFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *);1;OMR;IlBuilder;0;0
block;block(int32_t);1;OMR;IlInjector;0;0
blockEntry;blockEntry(TR::Block *);1;OMR;IlBuilder;0;0
blocks;blocks();1;OMR;IlInjector;0;0
blocksHaveBeenCounted;blocksHaveBeenCounted();1;OMR;IlBuilder;0;0
branchToBlock;branchToBlock(int32_t);1;OMR;IlInjector;0;0
buildIL;buildIL();1;OMR;IlBuilder;0;1
builderEntry;builderEntry(TR::IlBuilder *);1;OMR;IlBuilder;0;0
callFunction;callFunction(TR::ResolvedMethod *,TR::IlType *,int32_t,TR::Node *);1;TestCompiler;IlInjector;0;0
cfg;cfg();1;OMR;IlInjector;0;0
comesBack;comesBack();1;OMR;IlBuilder;0;0
comp;comp();1;OMR;IlInjector;0;0
compareOp;compareOp(enum TR_ComparisonTypes,_Bool,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
connectTrees;connectTrees();1;OMR;IlBuilder;0;1
connectTrees;connectTrees(uint32_t *);0;OMR;IlBuilder;0;1
convertTo;convertTo(TR::IlType *,TR::IlValue *,_Bool);1;OMR;IlBuilder;0;0
countBlocks;countBlocks();1;OMR;IlBuilder;0;1
createBlocks;createBlocks(int32_t);1;OMR;IlInjector;0;0
createBuilderIfNeeded;createBuilderIfNeeded(TR::IlBuilder *);1;OMR;IlBuilder;0;0
createWithoutSymRef;createWithoutSymRef(TR::ILOpCodes,uint16_t);1;OMR;IlInjector;0;0
currentByteCodeIndex;currentByteCodeIndex();1;TR;IlGenerator;0;1
currentCallSiteIndex;currentCallSiteIndex();1;TR;IlGenerator;0;1
dconst;dconst(double);1;OMR;IlInjector;0;0
defineSymbol;defineSymbol(const char *,TR::SymbolReference *);1;OMR;IlBuilder;0;0
defineValue;defineValue(const char *,TR::IlType *);1;OMR;IlBuilder;0;0
details;details();1;OMR;IlInjector;0;0
doVectorConversions;doVectorConversions(TR::Node **,TR::Node **);1;OMR;IlBuilder;0;0
emptyBlock;emptyBlock();1;OMR;IlBuilder;0;0
fconst;fconst(float);1;OMR;IlInjector;0;0
fe;fe();1;OMR;IlInjector;0;1
genCall;genCall(TR::SymbolReference *,int32_t,TR::IlValue **,_Bool);1;OMR;IlBuilder;0;0
genIL;genIL();1;TR;IlGenerator;0;1
genOperationWithOverflowCHK;genOperationWithOverflowCHK(TR::ILOpCodes,TR::Node *,TR::Node *,TR::IlBuilder **,TR::ILOpCodes);1;OMR;IlBuilder;0;0
genOverflowCHKTreeTop;genOverflowCHKTreeTop(TR::Node *,TR::ILOpCodes);1;OMR;IlBuilder;0;0
genTreeTop;genTreeTop(TR::Node *);1;OMR;IlInjector;0;0
generateFallThrough;generateFallThrough();1;OMR;IlInjector;0;0
generateToBlock;generateToBlock(int32_t);1;OMR;IlInjector;0;0
getCurrentBlock;getCurrentBlock();1;TR;IlGenerator;0;1
getDefiningFile;getDefiningFile();1;OMR;MethodBuilder;0;0
getDefiningLine;getDefiningLine();1;OMR;MethodBuilder;0;0
getEntry;getEntry();1;OMR;IlBuilder;0;0
getExit;getExit();1;OMR;IlBuilder;0;0
getFirstTree;getFirstTree();1;OMR;IlBuilder;0;0
getLastTree;getLastTree();1;OMR;IlBuilder;0;0
getMethodName;getMethodName();1;OMR;MethodBuilder;0;0
getNextValueID;getNextValueID();1;OMR;MethodBuilder;0;0
getNumParameters;getNumParameters();1;OMR;MethodBuilder;0;0
getOpCode;getOpCode(TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
getParameterTypes;getParameterTypes();1;OMR;MethodBuilder;0;0
getReturnType;getReturnType();1;OMR;MethodBuilder;0;0
getSignature;getSignature(TR::IlType **);1;OMR;MethodBuilder;0;0
getSignature;getSignature(int32_t,TR::IlType **);0;OMR;MethodBuilder;0;0
getSymbolName;getSymbolName(int32_t);1;OMR;MethodBuilder;0;0
gotoBlock;gotoBlock(TR::Block *);1;OMR;IlInjector;0;0
i2l;i2l(TR::Node *);1;OMR;IlInjector;0;0
iconst;iconst(int32_t);1;OMR;IlInjector;0;0
ifCmpCondition;ifCmpCondition(enum TR_ComparisonTypes,_Bool,TR::IlValue *,TR::IlValue *,TR::Block *);1;OMR;IlBuilder;0;0
ifCmpEqualZero;ifCmpEqualZero(TR::IlValue *,TR::Block *);1;OMR;IlBuilder;0;0
ifCmpNotEqualZero;ifCmpNotEqualZero(TR::IlValue *,TR::Block *);1;OMR;IlBuilder;0;0
ifjump;ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,int32_t);1;OMR;IlInjector;0;0
ifjump;ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Block *);0;OMR;IlInjector;0;0
indirectLoadNode;indirectLoadNode(TR::IlType *,TR::Node *,_Bool);1;OMR;IlBuilder;0;0
indirectStoreNode;indirectStoreNode(TR::Node *,TR::Node *);1;OMR;IlBuilder;0;0
initPrimitiveTypes;initPrimitiveTypes();1;OMR;IlInjector;0;1
initSequence;initSequence();1;OMR;IlBuilder;0;0
initialize;initialize(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *);1;OMR;IlInjector;0;1
injectIL;injectIL();1;OMR;IlInjector;0;1
integerizeAddresses;integerizeAddresses(TR::IlValue **,TR::IlValue **);1;OMR;IlBuilder;0;0
isBytecodeBuilder;isBytecodeBuilder();1;OMR;IlBuilder;0;1
isMethodBuilder;isMethodBuilder();1;OMR;IlInjector;0;1
isSymbolAnArray;isSymbolAnArray(const char *);1;OMR;MethodBuilder;0;0
iu2l;iu2l(TR::Node *);1;OMR;IlInjector;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;IlInjector;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;IlInjector;0;0
lconst;lconst(int64_t);1;OMR;IlInjector;0;0
loadTemp;loadTemp(TR::SymbolReference *);1;OMR;IlInjector;0;0
loadValue;loadValue(TR::IlValue *);1;OMR;IlBuilder;0;0
lookupFunction;lookupFunction(const char *);1;OMR;MethodBuilder;0;0
lookupSymbol;lookupSymbol(const char *);1;OMR;IlBuilder;0;0
methodSymbol;methodSymbol();1;TR;IlGenerator;0;1
multiplyBy;multiplyBy(TR::Node *,int64_t);1;OMR;IlInjector;0;0
newBlock;newBlock();1;OMR;IlInjector;0;0
newTemp;newTemp(TR::IlType *);1;OMR;IlInjector;0;0
newValue;newValue(TR::IlType *,TR::Node *);1;OMR;IlBuilder;0;0
newValue;newValue(TR::DataType,TR::Node *);0;OMR;IlBuilder;0;0
numBlocks;numBlocks();1;OMR;IlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;IlInjector;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlInjector;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlInjector;0;0
operator delete;operator delete(void *,size_t);0;OMR;IlInjector;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlInjector;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlInjector;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;IlInjector;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlInjector;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;IlInjector;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;IlInjector;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;IlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlInjector;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlInjector;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;IlInjector;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlInjector;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlInjector;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;IlInjector;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;IlInjector;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;IlInjector;0;0
operator=;operator=(const class TR_IlGenerator &);1;TR;IlGenerator;1;0
operator=;operator=(const class OMR::IlInjector &);0;OMR;IlInjector;1;0
operator=;operator=(const class TestCompiler::IlInjector &);0;TestCompiler;IlInjector;1;0
operator=;operator=(class TestCompiler::IlInjector &&);0;TestCompiler;IlInjector;1;0
operator=;operator=(class TR::IlInjector &&);0;TR;IlInjector;1;0
operator=;operator=(const class TR::IlInjector &);0;TR;IlInjector;1;0
operator=;operator=(const class OMR::IlBuilder &);0;OMR;IlBuilder;1;0
operator=;operator=(class TestCompiler::IlBuilder &&);0;TestCompiler;IlBuilder;1;0
operator=;operator=(const class TestCompiler::IlBuilder &);0;TestCompiler;IlBuilder;1;0
operator=;operator=(class TR::IlBuilder &&);0;TR;IlBuilder;1;0
operator=;operator=(const class TR::IlBuilder &);0;TR;IlBuilder;1;0
parameter;parameter(int32_t,TR::IlType *);1;OMR;IlInjector;0;0
print;print(const char *,_Bool);1;OMR;IlBuilder;0;0
printBlock;printBlock(TR::Block *);1;OMR;IlBuilder;0;0
processCallArgs;processCallArgs(TR::Compilation *,int,va_list);1;OMR;IlBuilder;0;0
pullInBuilderTrees;pullInBuilderTrees(TR::IlBuilder *,uint32_t *,TR::TreeTop **,TR::TreeTop **);1;OMR;IlBuilder;0;0
resolvedMethod;resolvedMethod();1;TestCompiler;IlInjector;0;0
returnNoValue;returnNoValue();1;OMR;IlInjector;0;0
returnValue;returnValue(TR::Node *);1;OMR;IlInjector;0;0
sconst;sconst(int16_t);1;OMR;IlInjector;0;0
setCallerMethod;setCallerMethod(TR::ResolvedMethodSymbol *);1;TR;IlGenerator;0;1
setComesBack;setComesBack();1;OMR;IlBuilder;0;0
setDoesNotComeBack;setDoesNotComeBack();1;OMR;IlBuilder;0;0
setHandlerInfo;setHandlerInfo(uint32_t);1;OMR;IlBuilder;0;1
setMethodAndTest;setMethodAndTest(TR::IlInjector *);1;TestCompiler;IlInjector;0;0
setMethodAndTest;setMethodAndTest(TR::ResolvedMethod *,class TestCompiler::TestDriver *);0;TestCompiler;IlInjector;0;0
setUseBytecodeBuilders;setUseBytecodeBuilders();1;OMR;MethodBuilder;0;0
setVMState;setVMState(OMR::VirtualMachineState *);1;OMR;MethodBuilder;0;0
setupForBuildIL;setupForBuildIL();1;OMR;IlBuilder;0;1
shiftLeftBy;shiftLeftBy(TR::Node *,int32_t);1;OMR;IlInjector;0;0
shiftOpFromNodes;shiftOpFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *);1;OMR;IlBuilder;0;0
shiftOpFromOpMap;shiftOpFromOpMap(OpCodeMapper,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
shiftOpNodeFromNodes;shiftOpNodeFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *);1;OMR;IlBuilder;0;0
staticAddress;staticAddress(void *);1;OMR;IlInjector;0;0
storeNode;storeNode(TR::SymbolReference *,TR::Node *);1;OMR;IlBuilder;0;0
storeToTemp;storeToTemp(TR::SymbolReference *,TR::Node *);1;OMR;IlInjector;0;0
symRefTab;symRefTab();1;OMR;IlInjector;0;0
symbolDefined;symbolDefined(const char *);1;OMR;MethodBuilder;0;0
test;test();1;TestCompiler;IlInjector;0;0
typeDictionary;typeDictionary();1;OMR;IlInjector;0;0
unaryOp;unaryOp(TR::ILOpCodes,TR::IlValue *);1;OMR;IlBuilder;0;0
usesBytecodeBuilders;usesBytecodeBuilders();1;OMR;MethodBuilder;0;0
validateTargetBlock;validateTargetBlock();1;OMR;IlInjector;0;0
vmState;vmState();1;OMR;MethodBuilder;0;0
widenIntegerTo32Bits;widenIntegerTo32Bits(TR::IlValue *);1;OMR;IlBuilder;0;0
zero;zero(TR::DataType);1;OMR;IlBuilder;0;0
zero;zero(TR::IlType *);0;OMR;IlBuilder;0;0
zeroForValue;zeroForValue(TR::IlValue *);1;OMR;IlBuilder;0;0
zeroNodeForValue;zeroNodeForValue(TR::IlValue *);1;OMR;IlBuilder;0;0
~IlBuilder;~IlBuilder();1;OMR;IlBuilder;0;1
~IlInjector;~IlInjector();1;OMR;IlInjector;0;1
~MethodBuilder;~MethodBuilder();1;OMR;MethodBuilder;0;1
~TR_IlGenerator;~TR_IlGenerator();1;TR;IlGenerator;0;1
remove;remove(class TR::NodeChecklist &);1;TR;NodeChecklist;0;0
remove;remove(TR::Node *);0;TR;NodeChecklist;0;0
TR_ResolvedMethod;TR_ResolvedMethod(const class TR_ResolvedMethod &);1;TR;ResolvedMethod;1;0
TR_ResolvedMethod;TR_ResolvedMethod();0;TR;ResolvedMethod;1;0
Method;Method(const class TestCompiler::Method &);1;TestCompiler;Method;1;0
Method;Method(class TestCompiler::Method &&);0;TestCompiler;Method;1;0
CloseStruct;CloseStruct(const char *);1;OMR;TypeDictionary;0;0
CloseStruct;CloseStruct(const char *,size_t);0;OMR;TypeDictionary;0;0
CloseUnion;CloseUnion(const char *);1;OMR;TypeDictionary;0;0
DefineField;DefineField(const char *,const char *,TR::IlType *);1;OMR;TypeDictionary;0;0
DefineField;DefineField(const char *,const char *,TR::IlType *,size_t);0;OMR;TypeDictionary;0;0
DefineStruct;DefineStruct(const char *);1;OMR;TypeDictionary;0;0
DefineUnion;DefineUnion(const char *);1;OMR;TypeDictionary;0;0
FieldReference;FieldReference(const char *,const char *);1;OMR;TypeDictionary;0;0
GetFieldType;GetFieldType(const char *,const char *);1;OMR;TypeDictionary;0;0
LookupStruct;LookupStruct(const char *);1;OMR;TypeDictionary;0;0
LookupUnion;LookupUnion(const char *);1;OMR;TypeDictionary;0;0
NotifyCompilationDone;NotifyCompilationDone();1;OMR;TypeDictionary;0;0
OffsetOf;OffsetOf(const char *,const char *);1;OMR;TypeDictionary;0;0
PointerTo;PointerTo(TR::DataType);1;OMR;TypeDictionary;0;0
PointerTo;PointerTo(TR::IlType *);0;OMR;TypeDictionary;0;0
PointerTo;PointerTo(const char *);0;OMR;TypeDictionary;0;0
PrimitiveType;PrimitiveType(TR::DataType);1;OMR;TypeDictionary;0;0
TypeDictionary;TypeDictionary();1;OMR;TypeDictionary;0;0
TypeDictionary;TypeDictionary(const class OMR::TypeDictionary &);0;OMR;TypeDictionary;0;0
TypeDictionary;TypeDictionary(class TR::TypeDictionary &&);0;TR;TypeDictionary;1;0
TypeDictionary;TypeDictionary(const class TR::TypeDictionary &);0;TR;TypeDictionary;1;0
UnionField;UnionField(const char *,const char *,TR::IlType *);1;OMR;TypeDictionary;0;0
UnionFieldType;UnionFieldType(const char *,const char *);1;OMR;TypeDictionary;0;0
getStruct;getStruct(const char *);1;OMR;TypeDictionary;0;0
getUnion;getUnion(const char *);1;OMR;TypeDictionary;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;TypeDictionary;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;TypeDictionary;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;TypeDictionary;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;TypeDictionary;0;0
operator delete;operator delete(void *,size_t);0;OMR;TypeDictionary;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;TypeDictionary;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;TypeDictionary;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;OMR;TypeDictionary;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;TypeDictionary;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;TypeDictionary;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;TypeDictionary;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;TypeDictionary;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;TypeDictionary;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;TypeDictionary;0;0
trMemory;trMemory();1;OMR;TypeDictionary;0;0
~TypeDictionary;~TypeDictionary();1;OMR;TypeDictionary;0;0
BasicForLoopDownMethod;BasicForLoopDownMethod(class TestCompiler::BasicForLoopDownMethod &&);1;TestCompiler;BasicForLoopDownMethod;1;0
BasicForLoopDownMethod;BasicForLoopDownMethod(const class TestCompiler::BasicForLoopDownMethod &);0;TestCompiler;BasicForLoopDownMethod;1;0
BasicForLoopDownMethod;BasicForLoopDownMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;BasicForLoopDownMethod;0;0
BasicForLoopUpMethod;BasicForLoopUpMethod(class TestCompiler::BasicForLoopUpMethod &&);1;TestCompiler;BasicForLoopUpMethod;1;0
BasicForLoopUpMethod;BasicForLoopUpMethod(const class TestCompiler::BasicForLoopUpMethod &);0;TestCompiler;BasicForLoopUpMethod;1;0
BasicForLoopUpMethod;BasicForLoopUpMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;BasicForLoopUpMethod;0;0
BinaryOpIlInjector;BinaryOpIlInjector(const class TestCompiler::BinaryOpIlInjector &);1;TestCompiler;BinaryOpIlInjector;1;0
BinaryOpIlInjector;BinaryOpIlInjector(class TestCompiler::BinaryOpIlInjector &&);0;TestCompiler;BinaryOpIlInjector;1;0
BinaryOpIlInjector;BinaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;BinaryOpIlInjector;0;0
IndirectStoreIlInjector;IndirectStoreIlInjector(class TestCompiler::IndirectStoreIlInjector &&);1;TestCompiler;IndirectStoreIlInjector;1;0
IndirectStoreIlInjector;IndirectStoreIlInjector(const class TestCompiler::IndirectStoreIlInjector &);0;TestCompiler;IndirectStoreIlInjector;1;0
IndirectStoreIlInjector;IndirectStoreIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;IndirectStoreIlInjector;0;0
OpIlInjector;OpIlInjector(const class TestCompiler::OpIlInjector &);1;TestCompiler;OpIlInjector;1;0
OpIlInjector;OpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;OpIlInjector;0;0
OpIlInjector;OpIlInjector(class TestCompiler::OpIlInjector &&);0;TestCompiler;OpIlInjector;1;0
aconstParm;aconstParm(uint32_t,uintptrj_t);1;TestCompiler;OpIlInjector;0;1
bconstParm;bconstParm(uint32_t,int8_t);1;TestCompiler;OpIlInjector;0;1
dconstParm;dconstParm(uint32_t,double);1;TestCompiler;OpIlInjector;0;1
fconstParm;fconstParm(uint32_t,float);1;TestCompiler;OpIlInjector;0;1
iconstParm;iconstParm(uint32_t,int32_t);1;TestCompiler;OpIlInjector;0;1
initOptArgs;initOptArgs(uint32_t);1;TestCompiler;OpIlInjector;0;0
isOpCodeSupported;isOpCodeSupported();1;TestCompiler;OpIlInjector;0;0
lconstParm;lconstParm(uint32_t,int64_t);1;TestCompiler;OpIlInjector;0;1
operator=;operator=(class TestCompiler::OpIlInjector &&);0;TestCompiler;OpIlInjector;1;0
operator=;operator=(const class TestCompiler::OpIlInjector &);0;TestCompiler;OpIlInjector;1;0
operator=;operator=(class TestCompiler::BinaryOpIlInjector &&);0;TestCompiler;BinaryOpIlInjector;1;0
operator=;operator=(const class TestCompiler::BinaryOpIlInjector &);0;TestCompiler;BinaryOpIlInjector;1;0
operator=;operator=(class TestCompiler::IndirectStoreIlInjector &&);0;TestCompiler;IndirectStoreIlInjector;1;0
operator=;operator=(const class TestCompiler::IndirectStoreIlInjector &);0;TestCompiler;IndirectStoreIlInjector;1;0
parm;parm(uint32_t);1;TestCompiler;OpIlInjector;0;0
sconstParm;sconstParm(uint32_t,int16_t);1;TestCompiler;OpIlInjector;0;1
setDataType;setDataType();1;TestCompiler;OpIlInjector;0;0
~BinaryOpIlInjector;~BinaryOpIlInjector();1;TestCompiler;BinaryOpIlInjector;1;1
~IndirectStoreIlInjector;~IndirectStoreIlInjector();1;TestCompiler;IndirectStoreIlInjector;1;1
~OpIlInjector;~OpIlInjector();1;TestCompiler;OpIlInjector;1;1
BuilderTest;BuilderTest(class TestCompiler::BuilderTest &&);1;TestCompiler;BuilderTest;1;0
BuilderTest;BuilderTest(const class TestCompiler::BuilderTest &);0;TestCompiler;BuilderTest;1;0
BuilderTest;BuilderTest();0;TestCompiler;BuilderTest;1;0
RunTest;RunTest();1;TestCompiler;TestDriver;0;0
TestDriver;TestDriver(const class TestCompiler::TestDriver &);1;TestCompiler;TestDriver;1;0
TestDriver;TestDriver();0;TestCompiler;TestDriver;1;0
TestDriver;TestDriver(class TestCompiler::TestDriver &&);0;TestCompiler;TestDriver;1;0
absDiff;absDiff(int32_t,int32_t);1;TestCompiler;BuilderTest;0;0
basicForLoop;basicForLoop(int32_t,int32_t,int32_t,_Bool);1;TestCompiler;BuilderTest;0;0
compileControlFlowTestMethods;compileControlFlowTestMethods();1;TestCompiler;BuilderTest;0;1
compileMethodBuilder;compileMethodBuilder(TR::MethodBuilder *,uint8_t **);1;TestCompiler;TestDriver;0;0
compileNestedControlFlowLoopTestMethods;compileNestedControlFlowLoopTestMethods();1;TestCompiler;BuilderTest;0;1
compileTestMethods;compileTestMethods();1;TestCompiler;TestDriver;0;1
doWhileFib;doWhileFib(int32_t);1;TestCompiler;BuilderTest;0;0
doWhileIfThenElse;doWhileIfThenElse(int32_t,int32_t,int32_t,int32_t);1;TestCompiler;BuilderTest;0;0
doWhileWithBreak;doWhileWithBreak(int32_t);1;TestCompiler;BuilderTest;0;0
doWhileWithBreakAndContinue;doWhileWithBreakAndContinue(int32_t);1;TestCompiler;BuilderTest;0;0
doWhileWithContinue;doWhileWithContinue(int32_t);1;TestCompiler;BuilderTest;0;0
forLoopBreak;forLoopBreak(int32_t);1;TestCompiler;BuilderTest;0;0
forLoopBreakAndContinue;forLoopBreakAndContinue(int32_t);1;TestCompiler;BuilderTest;0;0
forLoopContinue;forLoopContinue(int32_t);1;TestCompiler;BuilderTest;0;0
forLoopIfThenElse;forLoopIfThenElse(int32_t,int32_t,int32_t,int32_t,_Bool);1;TestCompiler;BuilderTest;0;0
ifThenElseLoop;ifThenElseLoop(int32_t,int32_t);1;TestCompiler;BuilderTest;0;0
invokeControlFlowTests;invokeControlFlowTests();1;TestCompiler;BuilderTest;0;1
invokeNestedControlFlowLoopTests;invokeNestedControlFlowLoopTests();1;TestCompiler;BuilderTest;0;1
invokeTests;invokeTests();1;TestCompiler;TestDriver;0;1
iterativeFib;iterativeFib(int32_t);1;TestCompiler;BuilderTest;0;0
maxIfThen;maxIfThen(int32_t,int32_t);1;TestCompiler;BuilderTest;0;0
operator=;operator=(class TestCompiler::TestDriver &&);1;TestCompiler;TestDriver;1;0
operator=;operator=(const class TestCompiler::TestDriver &);0;TestCompiler;TestDriver;1;0
operator=;operator=(class TestCompiler::BuilderTest &&);0;TestCompiler;BuilderTest;1;0
operator=;operator=(const class TestCompiler::BuilderTest &);0;TestCompiler;BuilderTest;1;0
recursiveFib;recursiveFib(int32_t);1;TestCompiler;BuilderTest;0;0
shootoutNestedLoop;shootoutNestedLoop(int32_t);1;TestCompiler;BuilderTest;0;0
subIfFalseThen;subIfFalseThen(int64_t,int64_t);1;TestCompiler;BuilderTest;0;0
traceEnabledLocation;traceEnabledLocation();1;TestCompiler;BuilderTest;0;0
whileDoFib;whileDoFib(int32_t);1;TestCompiler;BuilderTest;0;0
whileDoIfThenElse;whileDoIfThenElse(int32_t,int32_t,int32_t,int32_t);1;TestCompiler;BuilderTest;0;0
whileDoWithBreak;whileDoWithBreak(int32_t);1;TestCompiler;BuilderTest;0;0
whileDoWithBreakAndContinue;whileDoWithBreakAndContinue(int32_t);1;TestCompiler;BuilderTest;0;0
whileDoWithContinue;whileDoWithContinue(int32_t);1;TestCompiler;BuilderTest;0;0
~BuilderTest;~BuilderTest();1;TestCompiler;BuilderTest;1;0
~TestDriver;~TestDriver();1;TestCompiler;TestDriver;1;0
CallIlInjector;CallIlInjector(class TestCompiler::CallIlInjector &&);1;TestCompiler;CallIlInjector;1;0
CallIlInjector;CallIlInjector(const class TestCompiler::CallIlInjector &);0;TestCompiler;CallIlInjector;1;0
CallIlInjector;CallIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;CallIlInjector;0;0
UnaryOpIlInjector;UnaryOpIlInjector(class TestCompiler::UnaryOpIlInjector &&);1;TestCompiler;UnaryOpIlInjector;1;0
UnaryOpIlInjector;UnaryOpIlInjector(const class TestCompiler::UnaryOpIlInjector &);0;TestCompiler;UnaryOpIlInjector;1;0
UnaryOpIlInjector;UnaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;UnaryOpIlInjector;0;0
operator=;operator=(class TestCompiler::UnaryOpIlInjector &&);0;TestCompiler;UnaryOpIlInjector;1;0
operator=;operator=(const class TestCompiler::UnaryOpIlInjector &);0;TestCompiler;UnaryOpIlInjector;1;0
operator=;operator=(class TestCompiler::CallIlInjector &&);0;TestCompiler;CallIlInjector;1;0
operator=;operator=(const class TestCompiler::CallIlInjector &);0;TestCompiler;CallIlInjector;1;0
~CallIlInjector;~CallIlInjector();1;TestCompiler;CallIlInjector;1;1
~UnaryOpIlInjector;~UnaryOpIlInjector();1;TestCompiler;UnaryOpIlInjector;1;1
ChildlessUnaryOpIlInjector;ChildlessUnaryOpIlInjector(class TestCompiler::ChildlessUnaryOpIlInjector &&);1;TestCompiler;ChildlessUnaryOpIlInjector;1;0
ChildlessUnaryOpIlInjector;ChildlessUnaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;ChildlessUnaryOpIlInjector;0;0
ChildlessUnaryOpIlInjector;ChildlessUnaryOpIlInjector(const class TestCompiler::ChildlessUnaryOpIlInjector &);0;TestCompiler;ChildlessUnaryOpIlInjector;1;0
operator=;operator=(const class TestCompiler::ChildlessUnaryOpIlInjector &);0;TestCompiler;ChildlessUnaryOpIlInjector;1;0
operator=;operator=(class TestCompiler::ChildlessUnaryOpIlInjector &&);0;TestCompiler;ChildlessUnaryOpIlInjector;1;0
~ChildlessUnaryOpIlInjector;~ChildlessUnaryOpIlInjector();1;TestCompiler;ChildlessUnaryOpIlInjector;1;1
CmpBranchOpIlInjector;CmpBranchOpIlInjector(const class TestCompiler::CmpBranchOpIlInjector &);1;TestCompiler;CmpBranchOpIlInjector;1;0
CmpBranchOpIlInjector;CmpBranchOpIlInjector(class TestCompiler::CmpBranchOpIlInjector &&);0;TestCompiler;CmpBranchOpIlInjector;1;0
CmpBranchOpIlInjector;CmpBranchOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;CmpBranchOpIlInjector;0;0
operator=;operator=(const class TestCompiler::CmpBranchOpIlInjector &);0;TestCompiler;CmpBranchOpIlInjector;1;0
operator=;operator=(class TestCompiler::CmpBranchOpIlInjector &&);0;TestCompiler;CmpBranchOpIlInjector;1;0
~CmpBranchOpIlInjector;~CmpBranchOpIlInjector();1;TestCompiler;CmpBranchOpIlInjector;1;1
DoWhileFibonnaciMethod;DoWhileFibonnaciMethod(class TestCompiler::DoWhileFibonnaciMethod &&);1;TestCompiler;DoWhileFibonnaciMethod;1;0
DoWhileFibonnaciMethod;DoWhileFibonnaciMethod(const class TestCompiler::DoWhileFibonnaciMethod &);0;TestCompiler;DoWhileFibonnaciMethod;1;0
DoWhileFibonnaciMethod;DoWhileFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;DoWhileFibonnaciMethod;0;0
DoWhileIfThenElseMethod;DoWhileIfThenElseMethod(class TestCompiler::DoWhileIfThenElseMethod &&);1;TestCompiler;DoWhileIfThenElseMethod;1;0
DoWhileIfThenElseMethod;DoWhileIfThenElseMethod(const class TestCompiler::DoWhileIfThenElseMethod &);0;TestCompiler;DoWhileIfThenElseMethod;1;0
DoWhileIfThenElseMethod;DoWhileIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;DoWhileIfThenElseMethod;0;0
DoWhileWithBreakAndContinueMethod;DoWhileWithBreakAndContinueMethod(class TestCompiler::DoWhileWithBreakAndContinueMethod &&);1;TestCompiler;DoWhileWithBreakAndContinueMethod;1;0
DoWhileWithBreakAndContinueMethod;DoWhileWithBreakAndContinueMethod(const class TestCompiler::DoWhileWithBreakAndContinueMethod &);0;TestCompiler;DoWhileWithBreakAndContinueMethod;1;0
DoWhileWithBreakAndContinueMethod;DoWhileWithBreakAndContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;DoWhileWithBreakAndContinueMethod;0;0
DoWhileWithBreakMethod;DoWhileWithBreakMethod(class TestCompiler::DoWhileWithBreakMethod &&);1;TestCompiler;DoWhileWithBreakMethod;1;0
DoWhileWithBreakMethod;DoWhileWithBreakMethod(const class TestCompiler::DoWhileWithBreakMethod &);0;TestCompiler;DoWhileWithBreakMethod;1;0
DoWhileWithBreakMethod;DoWhileWithBreakMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;DoWhileWithBreakMethod;0;0
DoWhileWithContinueMethod;DoWhileWithContinueMethod(class TestCompiler::DoWhileWithContinueMethod &&);1;TestCompiler;DoWhileWithContinueMethod;1;0
DoWhileWithContinueMethod;DoWhileWithContinueMethod(const class TestCompiler::DoWhileWithContinueMethod &);0;TestCompiler;DoWhileWithContinueMethod;1;0
DoWhileWithContinueMethod;DoWhileWithContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;DoWhileWithContinueMethod;0;0
ForLoopBreakAndContinueMethod;ForLoopBreakAndContinueMethod(class TestCompiler::ForLoopBreakAndContinueMethod &&);1;TestCompiler;ForLoopBreakAndContinueMethod;1;0
ForLoopBreakAndContinueMethod;ForLoopBreakAndContinueMethod(const class TestCompiler::ForLoopBreakAndContinueMethod &);0;TestCompiler;ForLoopBreakAndContinueMethod;1;0
ForLoopBreakAndContinueMethod;ForLoopBreakAndContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;ForLoopBreakAndContinueMethod;0;0
ForLoopBreakMethod;ForLoopBreakMethod(const class TestCompiler::ForLoopBreakMethod &);1;TestCompiler;ForLoopBreakMethod;1;0
ForLoopBreakMethod;ForLoopBreakMethod(class TestCompiler::ForLoopBreakMethod &&);0;TestCompiler;ForLoopBreakMethod;1;0
ForLoopBreakMethod;ForLoopBreakMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;ForLoopBreakMethod;0;0
ForLoopContinueMethod;ForLoopContinueMethod(class TestCompiler::ForLoopContinueMethod &&);1;TestCompiler;ForLoopContinueMethod;1;0
ForLoopContinueMethod;ForLoopContinueMethod(const class TestCompiler::ForLoopContinueMethod &);0;TestCompiler;ForLoopContinueMethod;1;0
ForLoopContinueMethod;ForLoopContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;ForLoopContinueMethod;0;0
ForLoopUPIfThenElseMethod;ForLoopUPIfThenElseMethod(class TestCompiler::ForLoopUPIfThenElseMethod &&);1;TestCompiler;ForLoopUPIfThenElseMethod;1;0
ForLoopUPIfThenElseMethod;ForLoopUPIfThenElseMethod(const class TestCompiler::ForLoopUPIfThenElseMethod &);0;TestCompiler;ForLoopUPIfThenElseMethod;1;0
ForLoopUPIfThenElseMethod;ForLoopUPIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;ForLoopUPIfThenElseMethod;0;0
IfThenElseLoopMethod;IfThenElseLoopMethod(class TestCompiler::IfThenElseLoopMethod &&);1;TestCompiler;IfThenElseLoopMethod;1;0
IfThenElseLoopMethod;IfThenElseLoopMethod(const class TestCompiler::IfThenElseLoopMethod &);0;TestCompiler;IfThenElseLoopMethod;1;0
IfThenElseLoopMethod;IfThenElseLoopMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;IfThenElseLoopMethod;0;0
IndirectLoadIlInjector;IndirectLoadIlInjector(class TestCompiler::IndirectLoadIlInjector &&);1;TestCompiler;IndirectLoadIlInjector;1;0
IndirectLoadIlInjector;IndirectLoadIlInjector(const class TestCompiler::IndirectLoadIlInjector &);0;TestCompiler;IndirectLoadIlInjector;1;0
IndirectLoadIlInjector;IndirectLoadIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;IndirectLoadIlInjector;0;0
operator=;operator=(class TestCompiler::IndirectLoadIlInjector &&);0;TestCompiler;IndirectLoadIlInjector;1;0
operator=;operator=(const class TestCompiler::IndirectLoadIlInjector &);0;TestCompiler;IndirectLoadIlInjector;1;0
~IndirectLoadIlInjector;~IndirectLoadIlInjector();1;TestCompiler;IndirectLoadIlInjector;1;1
IterativeFibonnaciMethod;IterativeFibonnaciMethod(class TestCompiler::IterativeFibonnaciMethod &&);1;TestCompiler;IterativeFibonnaciMethod;1;0
IterativeFibonnaciMethod;IterativeFibonnaciMethod(const class TestCompiler::IterativeFibonnaciMethod &);0;TestCompiler;IterativeFibonnaciMethod;1;0
IterativeFibonnaciMethod;IterativeFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;IterativeFibonnaciMethod;0;0
MaxIfThenMethod;MaxIfThenMethod(class TestCompiler::MaxIfThenMethod &&);1;TestCompiler;MaxIfThenMethod;1;0
MaxIfThenMethod;MaxIfThenMethod(const class TestCompiler::MaxIfThenMethod &);0;TestCompiler;MaxIfThenMethod;1;0
MaxIfThenMethod;MaxIfThenMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;MaxIfThenMethod;0;0
UnsupportedOpCodesTests;UnsupportedOpCodesTests();1;TestCompiler;OpCodesTest;0;1
addUnsupportedOpCodeTest;addUnsupportedOpCodeTest(int32_t,TR::ILOpCodes,char *,TR::DataType *,TR::DataType);1;TestCompiler;OpCodesTest;0;0
byteswap;byteswap(int64_t);1;TestCompiler;OpCodesTest;0;0
byteswap;byteswap(int32_t);0;TestCompiler;OpCodesTest;0;0
byteswap;byteswap(uint32_t);0;TestCompiler;OpCodesTest;0;0
byteswap;byteswap(uint16_t);0;TestCompiler;OpCodesTest;0;0
byteswap;byteswap(uint64_t);0;TestCompiler;OpCodesTest;0;0
byteswap;byteswap(int16_t);0;TestCompiler;OpCodesTest;0;0
compileAddressTestMethods;compileAddressTestMethods();1;TestCompiler;OpCodesTest;0;1
compileBitwiseMethods;compileBitwiseMethods();1;TestCompiler;OpCodesTest;0;1
compileCompareTestMethods;compileCompareTestMethods();1;TestCompiler;OpCodesTest;0;1
compileDisabledOpCodesTests;compileDisabledOpCodesTests();1;TestCompiler;OpCodesTest;0;1
compileIntegerArithmeticTestMethods;compileIntegerArithmeticTestMethods();1;TestCompiler;OpCodesTest;0;1
compileMemoryOperationTestMethods;compileMemoryOperationTestMethods();1;TestCompiler;OpCodesTest;0;1
compileTernaryTestMethods;compileTernaryTestMethods();1;TestCompiler;OpCodesTest;0;1
compileUnaryTestMethods;compileUnaryTestMethods();1;TestCompiler;OpCodesTest;0;1
invokeAddressTests;invokeAddressTests();1;TestCompiler;OpCodesTest;0;1
invokeBitwiseTests;invokeBitwiseTests();1;TestCompiler;OpCodesTest;0;1
invokeCompareTests;invokeCompareTests();1;TestCompiler;OpCodesTest;0;1
invokeDisabledOpCodesTests;invokeDisabledOpCodesTests();1;TestCompiler;OpCodesTest;0;1
invokeIntegerArithmeticTests;invokeIntegerArithmeticTests();1;TestCompiler;OpCodesTest;0;1
invokeMemoryOperationTests;invokeMemoryOperationTests();1;TestCompiler;OpCodesTest;0;1
invokeNoHelperUnaryTests;invokeNoHelperUnaryTests();1;TestCompiler;OpCodesTest;0;1
invokeTernaryTests;invokeTernaryTests();1;TestCompiler;OpCodesTest;0;1
invokeUnaryTests;invokeUnaryTests();1;TestCompiler;OpCodesTest;0;1
operator=;operator=(class TestCompiler::OpCodesTest &&);0;TestCompiler;OpCodesTest;1;0
operator=;operator=(const class TestCompiler::OpCodesTest &);0;TestCompiler;OpCodesTest;1;0
resolvedMethod;resolvedMethod(TR::DataType);1;TestCompiler;OpCodesTest;0;0
~OpCodesTest;~OpCodesTest();1;TestCompiler;OpCodesTest;1;0
RecursiveFibonnaciMethod;RecursiveFibonnaciMethod(const class TestCompiler::RecursiveFibonnaciMethod &);1;TestCompiler;RecursiveFibonnaciMethod;1;0
RecursiveFibonnaciMethod;RecursiveFibonnaciMethod(class TestCompiler::RecursiveFibonnaciMethod &&);0;TestCompiler;RecursiveFibonnaciMethod;1;0
RecursiveFibonnaciMethod;RecursiveFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;RecursiveFibonnaciMethod;0;0
ShootoutNestedLoopMethod;ShootoutNestedLoopMethod(class TestCompiler::ShootoutNestedLoopMethod &&);1;TestCompiler;ShootoutNestedLoopMethod;1;0
ShootoutNestedLoopMethod;ShootoutNestedLoopMethod(const class TestCompiler::ShootoutNestedLoopMethod &);0;TestCompiler;ShootoutNestedLoopMethod;1;0
ShootoutNestedLoopMethod;ShootoutNestedLoopMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;ShootoutNestedLoopMethod;0;0
StoreOpIlInjector;StoreOpIlInjector(const class TestCompiler::StoreOpIlInjector &);1;TestCompiler;StoreOpIlInjector;1;0
StoreOpIlInjector;StoreOpIlInjector(class TestCompiler::StoreOpIlInjector &&);0;TestCompiler;StoreOpIlInjector;1;0
StoreOpIlInjector;StoreOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;StoreOpIlInjector;0;0
operator=;operator=(class TestCompiler::StoreOpIlInjector &&);0;TestCompiler;StoreOpIlInjector;1;0
operator=;operator=(const class TestCompiler::StoreOpIlInjector &);0;TestCompiler;StoreOpIlInjector;1;0
~StoreOpIlInjector;~StoreOpIlInjector();1;TestCompiler;StoreOpIlInjector;1;1
TernaryOpIlInjector;TernaryOpIlInjector(class TestCompiler::TernaryOpIlInjector &&);1;TestCompiler;TernaryOpIlInjector;1;0
TernaryOpIlInjector;TernaryOpIlInjector(const class TestCompiler::TernaryOpIlInjector &);0;TestCompiler;TernaryOpIlInjector;1;0
TernaryOpIlInjector;TernaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes);0;TestCompiler;TernaryOpIlInjector;0;0
operator=;operator=(class TestCompiler::TernaryOpIlInjector &&);0;TestCompiler;TernaryOpIlInjector;1;0
operator=;operator=(const class TestCompiler::TernaryOpIlInjector &);0;TestCompiler;TernaryOpIlInjector;1;0
~TernaryOpIlInjector;~TernaryOpIlInjector();1;TestCompiler;TernaryOpIlInjector;1;1
WhileDoFibonnaciMethod;WhileDoFibonnaciMethod(class TestCompiler::WhileDoFibonnaciMethod &&);1;TestCompiler;WhileDoFibonnaciMethod;1;0
WhileDoFibonnaciMethod;WhileDoFibonnaciMethod(const class TestCompiler::WhileDoFibonnaciMethod &);0;TestCompiler;WhileDoFibonnaciMethod;1;0
WhileDoFibonnaciMethod;WhileDoFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;WhileDoFibonnaciMethod;0;0
WhileDoIfThenElseMethod;WhileDoIfThenElseMethod(const class TestCompiler::WhileDoIfThenElseMethod &);1;TestCompiler;WhileDoIfThenElseMethod;1;0
WhileDoIfThenElseMethod;WhileDoIfThenElseMethod(class TestCompiler::WhileDoIfThenElseMethod &&);0;TestCompiler;WhileDoIfThenElseMethod;1;0
WhileDoIfThenElseMethod;WhileDoIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;WhileDoIfThenElseMethod;0;0
WhileDoWithBreakAndContinueMethod;WhileDoWithBreakAndContinueMethod(class TestCompiler::WhileDoWithBreakAndContinueMethod &&);1;TestCompiler;WhileDoWithBreakAndContinueMethod;1;0
WhileDoWithBreakAndContinueMethod;WhileDoWithBreakAndContinueMethod(const class TestCompiler::WhileDoWithBreakAndContinueMethod &);0;TestCompiler;WhileDoWithBreakAndContinueMethod;1;0
WhileDoWithBreakAndContinueMethod;WhileDoWithBreakAndContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;WhileDoWithBreakAndContinueMethod;0;0
WhileDoWithBreakMethod;WhileDoWithBreakMethod(class TestCompiler::WhileDoWithBreakMethod &&);1;TestCompiler;WhileDoWithBreakMethod;1;0
WhileDoWithBreakMethod;WhileDoWithBreakMethod(const class TestCompiler::WhileDoWithBreakMethod &);0;TestCompiler;WhileDoWithBreakMethod;1;0
WhileDoWithBreakMethod;WhileDoWithBreakMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;WhileDoWithBreakMethod;0;0
WhileDoWithContinueMethod;WhileDoWithContinueMethod(class TestCompiler::WhileDoWithContinueMethod &&);1;TestCompiler;WhileDoWithContinueMethod;1;0
WhileDoWithContinueMethod;WhileDoWithContinueMethod(const class TestCompiler::WhileDoWithContinueMethod &);0;TestCompiler;WhileDoWithContinueMethod;1;0
WhileDoWithContinueMethod;WhileDoWithContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *);0;TestCompiler;WhileDoWithContinueMethod;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;TR;CFGNode;0;0
operator delete;operator delete(void *,TR::Region &);0;TR;CFGNode;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;TR;CFGNode;0;0
operator new;operator new(size_t,TR::Region &);0;TR;CFGNode;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Compilation;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;Compilation;0;0
Const;Const(float);1;OMR;IlBuilder;0;0
Const;Const(const void *const);0;OMR;IlBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
UnsignedShiftR;UnsignedShiftR(TR::IlValue *,int8_t);1;OMR;IlBuilder;0;0
UnsignedShiftR;UnsignedShiftR(TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
ResolvedMethod;ResolvedMethod(class TR::ResolvedMethod &&);0;TR;ResolvedMethod;1;0
ResolvedMethod;ResolvedMethod(const class TR::ResolvedMethod &);0;TR;ResolvedMethod;1;0
Method;Method();1;TestCompiler;Method;0;0
operator=;operator=(const class OMR::TypeDictionary &);1;OMR;TypeDictionary;1;0
operator=;operator=(class TR::TypeDictionary &&);0;TR;TypeDictionary;1;0
BarIlInjector;BarIlInjector(class TestCompiler::BarIlInjector &&);1;TestCompiler;BarIlInjector;1;0
BarIlInjector;BarIlInjector(const class TestCompiler::BarIlInjector &);0;TestCompiler;BarIlInjector;1;0
BarIlInjector;BarIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);0;TestCompiler;BarIlInjector;0;0
indexParameter;indexParameter();1;TestCompiler;BarIlInjector;0;0
operator=;operator=(const class TestCompiler::BarIlInjector &);0;TestCompiler;BarIlInjector;1;0
operator=;operator=(class TestCompiler::BarIlInjector &&);0;TestCompiler;BarIlInjector;1;0
~BarIlInjector;~BarIlInjector();1;TestCompiler;BarIlInjector;1;1
OpIlInjector;OpIlInjector(class TestCompiler::OpIlInjector &&);1;TestCompiler;OpIlInjector;1;0
OpIlInjector;OpIlInjector(const class TestCompiler::OpIlInjector &);0;TestCompiler;OpIlInjector;1;0
FooBarTest;FooBarTest();1;TestCompiler;FooBarTest;1;0
FooBarTest;FooBarTest(const class TestCompiler::FooBarTest &);0;TestCompiler;FooBarTest;1;0
FooBarTest;FooBarTest(class TestCompiler::FooBarTest &&);0;TestCompiler;FooBarTest;1;0
bar;bar(int32_t);1;TestCompiler;FooBarTest;0;0
barMethod;barMethod();1;TestCompiler;FooBarTest;0;0
dataArray;dataArray();1;TestCompiler;FooBarTest;0;0
dataArraySize;dataArraySize();1;TestCompiler;FooBarTest;0;0
foo;foo(int32_t);1;TestCompiler;FooBarTest;0;0
operator=;operator=(class TestCompiler::FooBarTest &&);0;TestCompiler;FooBarTest;1;0
operator=;operator=(const class TestCompiler::FooBarTest &);0;TestCompiler;FooBarTest;1;0
~FooBarTest;~FooBarTest();1;TestCompiler;FooBarTest;1;0
FooIlInjector;FooIlInjector(const class TestCompiler::FooIlInjector &);1;TestCompiler;FooIlInjector;1;0
FooIlInjector;FooIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);0;TestCompiler;FooIlInjector;0;0
FooIlInjector;FooIlInjector(class TestCompiler::FooIlInjector &&);0;TestCompiler;FooIlInjector;1;0
indexParameter;indexParameter();1;TestCompiler;FooIlInjector;0;0
operator=;operator=(const class TestCompiler::FooIlInjector &);0;TestCompiler;FooIlInjector;1;0
operator=;operator=(class TestCompiler::FooIlInjector &&);0;TestCompiler;FooIlInjector;1;0
~FooIlInjector;~FooIlInjector();1;TestCompiler;FooIlInjector;1;1
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Register;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;Register;0;0
Compilation;Compilation(const class OMR::Compilation &);0;OMR;Compilation;1;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;Compilation;0;0
IlInjector;IlInjector(const class OMR::IlInjector &);1;OMR;IlInjector;1;0
IlInjector;IlInjector(TR::TypeDictionary *);0;OMR;IlInjector;0;0
getCurrentBlock;getCurrentBlock();1;TR;IlGenerator;0;0
setMethodAndTest;setMethodAndTest(TR::ResolvedMethod *,class TestCompiler::TestDriver *);1;TestCompiler;IlInjector;0;0
setMethodAndTest;setMethodAndTest(TR::IlInjector *);0;TestCompiler;IlInjector;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;IlValue;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;IlValue;0;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;IlValue;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;IlValue;0;0
duplicateTreeWithCommoningImpl;duplicateTreeWithCommoningImpl(int &);1;OMR;Node;0;0
gatherAllNodesWhichMightKillCondCode;gatherAllNodesWhichMightKillCondCode(vcount_t,int &);1;OMR;Node;0;0
TR_Memory;TR_Memory(class TR_PersistentMemory &,TR::Region &);1;TR;Memory;0;0
TR_MemoryBase;TR_MemoryBase(const class TR_MemoryBase &);1;TR;MemoryBase;0;0
TR_MemoryBase;TR_MemoryBase(void *);0;TR;MemoryBase;0;0
TR_PersistentMemory;TR_PersistentMemory(void *,TR::PersistentAllocator &);1;TR;PersistentMemory;0;0
OpCodesTest;OpCodesTest(class TestCompiler::OpCodesTest &&);1;TestCompiler;OpCodesTest;1;0
OpCodesTest;OpCodesTest();0;TestCompiler;OpCodesTest;1;0
OpCodesTest;OpCodesTest(const class TestCompiler::OpCodesTest &);0;TestCompiler;OpCodesTest;1;0
LimitFileTest;LimitFileTest();1;TestCompiler;LimitFileTest;0;0
applyOptionSets;applyOptionSets(const char *,const char *,const TestCompiler::MethodSets &);1;TestCompiler;OptionSetTest;0;0
checkVLogForMethod;checkVLogForMethod(const char *,const char *,const char *,int *);1;TestCompiler;LimitFileTest;0;0
compileTests;compileTests();1;TestCompiler;LimitFileTest;0;0
createAndCheckVLog;createAndCheckVLog(const char *,const char *,int *);1;TestCompiler;LimitFileTest;0;0
createVLog;createVLog(const char *,const char *);1;TestCompiler;LimitFileTest;0;0
delayUnlink;delayUnlink(const char *);1;TestCompiler;LimitFileTest;0;0
fileExists;fileExists(const char *);1;TestCompiler;LimitFileTest;0;0
generateVLog;generateVLog(const char *,const char *);1;TestCompiler;LimitFileTest;0;0
~LimitFileTest;~LimitFileTest();1;TestCompiler;LimitFileTest;0;0
fe;fe();1;OMR;IlInjector;0;0
ifjump;ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Block *);1;OMR;IlInjector;0;0
ifjump;ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,int32_t);0;OMR;IlInjector;0;0
OpCodesTest;OpCodesTest();1;TestCompiler;OpCodesTest;1;0
OpCodesTest;OpCodesTest(class TestCompiler::OpCodesTest &&);0;TestCompiler;OpCodesTest;1;0
TestDriver;TestDriver(class TestCompiler::TestDriver &&);1;TestCompiler;TestDriver;1;0
TestDriver;TestDriver(const class TestCompiler::TestDriver &);0;TestCompiler;TestDriver;1;0
byteswap;byteswap(int32_t);1;TestCompiler;OpCodesTest;0;0
byteswap;byteswap(int64_t);0;TestCompiler;OpCodesTest;0;0
operator=;operator=(const class TestCompiler::TestDriver &);1;TestCompiler;TestDriver;1;0
operator=;operator=(class TestCompiler::TestDriver &&);0;TestCompiler;TestDriver;1;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;Compilation;0;0
compileBitwiseTestMethods;compileBitwiseTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
compileDisabledBitwiseTestMethods;compileDisabledBitwiseTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
compileDisabledCompareTestMethods;compileDisabledCompareTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
compileDisabledConvertTestMethods;compileDisabledConvertTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
compileDisabledDirectCallTestMethods;compileDisabledDirectCallTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
compileDisabledFloatArithmeticTestMethods;compileDisabledFloatArithmeticTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
compileDisabledIntegerArithmeticTestMethods;compileDisabledIntegerArithmeticTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
compileDisabledMemoryOperationTestMethods;compileDisabledMemoryOperationTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
compileDisabledTernaryTestMethods;compileDisabledTernaryTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
compileDisabledUnaryTestMethods;compileDisabledUnaryTestMethods();1;TestCompiler;PPCOpCodesTest;0;1
invokeDisabledBitwiseTests;invokeDisabledBitwiseTests();1;TestCompiler;PPCOpCodesTest;0;1
invokeDisabledCompareTests;invokeDisabledCompareTests();1;TestCompiler;PPCOpCodesTest;0;1
invokeDisabledConvertTests;invokeDisabledConvertTests();1;TestCompiler;PPCOpCodesTest;0;1
invokeDisabledDirectCallTest;invokeDisabledDirectCallTest();1;TestCompiler;PPCOpCodesTest;0;1
invokeDisabledFloatArithmeticTests;invokeDisabledFloatArithmeticTests();1;TestCompiler;PPCOpCodesTest;0;1
invokeDisabledIntegerArithmeticTests;invokeDisabledIntegerArithmeticTests();1;TestCompiler;PPCOpCodesTest;0;1
invokeDisabledMemoryOperationTests;invokeDisabledMemoryOperationTests();1;TestCompiler;PPCOpCodesTest;0;1
invokeDisabledTernaryTest;invokeDisabledTernaryTest();1;TestCompiler;PPCOpCodesTest;0;1
invokeDisabledUnaryTests;invokeDisabledUnaryTests();1;TestCompiler;PPCOpCodesTest;0;1
operator=;operator=(class TestCompiler::PPCOpCodesTest &&);0;TestCompiler;PPCOpCodesTest;1;0
operator=;operator=(const class TestCompiler::PPCOpCodesTest &);0;TestCompiler;PPCOpCodesTest;1;0
~PPCOpCodesTest;~PPCOpCodesTest();1;TestCompiler;PPCOpCodesTest;1;0
Qux2IlInjector;Qux2IlInjector(class TestCompiler::Qux2IlInjector &&);1;TestCompiler;Qux2IlInjector;1;0
Qux2IlInjector;Qux2IlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);0;TestCompiler;Qux2IlInjector;0;0
Qux2IlInjector;Qux2IlInjector(const class TestCompiler::Qux2IlInjector &);0;TestCompiler;Qux2IlInjector;1;0
intParameter;intParameter();1;TestCompiler;Qux2IlInjector;0;0
operator=;operator=(class TestCompiler::Qux2IlInjector &&);0;TestCompiler;Qux2IlInjector;1;0
operator=;operator=(const class TestCompiler::Qux2IlInjector &);0;TestCompiler;Qux2IlInjector;1;0
~Qux2IlInjector;~Qux2IlInjector();1;TestCompiler;Qux2IlInjector;1;1
Qux2Test;Qux2Test(const class TestCompiler::Qux2Test &);1;TestCompiler;Qux2Test;1;0
Qux2Test;Qux2Test(class TestCompiler::Qux2Test &&);0;TestCompiler;Qux2Test;1;0
Qux2Test;Qux2Test();0;TestCompiler;Qux2Test;1;0
operator=;operator=(const class TestCompiler::Qux2Test &);0;TestCompiler;Qux2Test;1;0
operator=;operator=(class TestCompiler::Qux2Test &&);0;TestCompiler;Qux2Test;1;0
qux2;qux2(int32_t);1;TestCompiler;Qux2Test;0;0
~Qux2Test;~Qux2Test();1;TestCompiler;Qux2Test;1;0
ReversePostorderSnapshotBlockIterator;ReversePostorderSnapshotBlockIterator(TR::Block *,TR::Compilation *,const char *);1;TR;ReversePostorderSnapshotBlockIterator;0;0
OptTestDriver;OptTestDriver(const class TestCompiler::OptTestDriver &);1;TestCompiler;OptTestDriver;1;0
OptTestDriver;OptTestDriver();0;TestCompiler;OptTestDriver;1;0
SetupStrategy;SetupStrategy();1;TestCompiler;OptTestDriver;0;0
SimplifierFoldAndTest;SimplifierFoldAndTest();1;TestCompiler;SimplifierFoldAndTest;0;0
TestDriver;TestDriver();1;TestCompiler;TestDriver;1;0
Verify;Verify();1;TestCompiler;OptTestDriver;0;0
VerifyAndInvoke;VerifyAndInvoke();1;TestCompiler;OptTestDriver;0;0
addOptimization;addOptimization(OMR::Optimizations);1;TestCompiler;OptTestDriver;0;0
addOptimizations;addOptimizations(const struct OptimizationStrategy *);1;TestCompiler;OptTestDriver;0;0
makeOptimizationStrategyArray;makeOptimizationStrategyArray(struct OptimizationStrategy *);1;TestCompiler;OptTestDriver;0;0
setIlVerifier;setIlVerifier(TR::IlVerifier *);1;TestCompiler;OptTestDriver;0;0
setMethodInfo;setMethodInfo(TestCompiler::MethodInfo *);1;TestCompiler;OptTestDriver;0;0
~OptTestDriver;~OptTestDriver();1;TestCompiler;OptTestDriver;0;0
SimplifierFoldAndIlInjector;SimplifierFoldAndIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *);1;TestCompiler;SimplifierFoldAndIlInjector;0;0
operator=;operator=(class TestCompiler::SimplifierFoldAndIlInjector &&);0;TestCompiler;SimplifierFoldAndIlInjector;1;0
operator=;operator=(const class TestCompiler::SimplifierFoldAndIlInjector &);0;TestCompiler;SimplifierFoldAndIlInjector;1;0
~SimplifierFoldAndIlInjector;~SimplifierFoldAndIlInjector();1;TestCompiler;SimplifierFoldAndIlInjector;1;1
IlVerifier;IlVerifier(class TR::IlVerifier &&);1;TR;IlVerifier;1;0
IlVerifier;IlVerifier();0;TR;IlVerifier;1;0
IlVerifier;IlVerifier(const class TR::IlVerifier &);0;TR;IlVerifier;1;0
SimplifierFoldAndIlVerifier;SimplifierFoldAndIlVerifier(const class TestCompiler::SimplifierFoldAndIlVerifier &);1;TestCompiler;SimplifierFoldAndIlVerifier;1;0
SimplifierFoldAndIlVerifier;SimplifierFoldAndIlVerifier();0;TestCompiler;SimplifierFoldAndIlVerifier;1;0
SimplifierFoldAndIlVerifier;SimplifierFoldAndIlVerifier(class TestCompiler::SimplifierFoldAndIlVerifier &&);0;TestCompiler;SimplifierFoldAndIlVerifier;1;0
operator=;operator=(const class TR::IlVerifier &);1;TR;IlVerifier;1;0
operator=;operator=(class TR::IlVerifier &&);0;TR;IlVerifier;1;0
operator=;operator=(const class TestCompiler::SimplifierFoldAndIlVerifier &);0;TestCompiler;SimplifierFoldAndIlVerifier;1;0
operator=;operator=(class TestCompiler::SimplifierFoldAndIlVerifier &&);0;TestCompiler;SimplifierFoldAndIlVerifier;1;0
verify;verify(TR::ResolvedMethodSymbol *);1;TR;IlVerifier;0;1
verifyNode;verifyNode(TR::Node *);1;TestCompiler;SimplifierFoldAndIlVerifier;0;0
~IlVerifier;~IlVerifier();1;TR;IlVerifier;1;0
~SimplifierFoldAndIlVerifier;~SimplifierFoldAndIlVerifier();1;TestCompiler;SimplifierFoldAndIlVerifier;1;0
DefineFunction;DefineFunction(char *,char *,char *,int32_t,TR::IlType **,TR::IlType *);1;TestCompiler;MethodInfo;0;0
DefineILInjector;DefineILInjector(TR::IlInjector *);1;TestCompiler;MethodInfo;0;0
MethodInfo;MethodInfo();1;TestCompiler;MethodInfo;0;0
ResolvedMethod;ResolvedMethod();1;TestCompiler;MethodInfo;0;0
SimplifierFoldAndInfo;SimplifierFoldAndInfo(class TestCompiler::TestDriver *);1;TestCompiler;SimplifierFoldAndInfo;0;0
compileBitwiseTestMethods;compileBitwiseTestMethods();1;TestCompiler;S390OpCodesTest;0;1
compileDirectCallTestMethods;compileDirectCallTestMethods();1;TestCompiler;S390OpCodesTest;0;1
compileDisabledBitwiseTestMethods;compileDisabledBitwiseTestMethods();1;TestCompiler;S390OpCodesTest;0;1
compileDisabledCompareOpCodesTestMethods;compileDisabledCompareOpCodesTestMethods();1;TestCompiler;S390OpCodesTest;0;1
compileDisabledDirectCallTestMethods;compileDisabledDirectCallTestMethods();1;TestCompiler;S390OpCodesTest;0;1
compileDisabledIntegerArithmeticTestMethods;compileDisabledIntegerArithmeticTestMethods();1;TestCompiler;S390OpCodesTest;0;1
compileDisabledMemoryOperationTestMethods;compileDisabledMemoryOperationTestMethods();1;TestCompiler;S390OpCodesTest;0;1
compileDisabledS390ConvertToAddressOpCodesTests;compileDisabledS390ConvertToAddressOpCodesTests();1;TestCompiler;S390OpCodesTest;0;1
compileDisabledTernaryTestMethods;compileDisabledTernaryTestMethods();1;TestCompiler;S390OpCodesTest;0;1
compileDisabledUnaryTestMethods;compileDisabledUnaryTestMethods();1;TestCompiler;S390OpCodesTest;0;1
compileFloatArithmeticTestMethods;compileFloatArithmeticTestMethods();1;TestCompiler;S390OpCodesTest;0;1
invokeDirectCallTests;invokeDirectCallTests();1;TestCompiler;S390OpCodesTest;0;1
invokeDisabledBitwiseTests;invokeDisabledBitwiseTests();1;TestCompiler;S390OpCodesTest;0;1
invokeDisabledCompareOpCodesTests;invokeDisabledCompareOpCodesTests();1;TestCompiler;S390OpCodesTest;0;1
invokeDisabledDirectCallTests;invokeDisabledDirectCallTests();1;TestCompiler;S390OpCodesTest;0;1
invokeDisabledIntegerArithmeticTests;invokeDisabledIntegerArithmeticTests();1;TestCompiler;S390OpCodesTest;0;1
invokeDisabledMemoryOperationTests;invokeDisabledMemoryOperationTests();1;TestCompiler;S390OpCodesTest;0;1
invokeDisabledS390ConvertToAddressOpCodesTests;invokeDisabledS390ConvertToAddressOpCodesTests();1;TestCompiler;S390OpCodesTest;0;1
invokeDisabledTernaryTests;invokeDisabledTernaryTests();1;TestCompiler;S390OpCodesTest;0;1
invokeDisabledUnaryTests;invokeDisabledUnaryTests();1;TestCompiler;S390OpCodesTest;0;1
invokeFloatArithmeticTests;invokeFloatArithmeticTests();1;TestCompiler;S390OpCodesTest;0;1
operator=;operator=(const class TestCompiler::S390OpCodesTest &);0;TestCompiler;S390OpCodesTest;1;0
operator=;operator=(class TestCompiler::S390OpCodesTest &&);0;TestCompiler;S390OpCodesTest;1;0
~S390OpCodesTest;~S390OpCodesTest();1;TestCompiler;S390OpCodesTest;1;0
add;add(TR::IlVerifier *);1;TR;AllIlVerifier;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;IlInjector;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;IlInjector;0;0
NoCodegenVerifier;NoCodegenVerifier(class TR::NoCodegenVerifier &&);1;TR;NoCodegenVerifier;1;0
NoCodegenVerifier;NoCodegenVerifier(TR::IlVerifier *);0;TR;NoCodegenVerifier;0;0
NoCodegenVerifier;NoCodegenVerifier(const class TR::NoCodegenVerifier &);0;TR;NoCodegenVerifier;1;0
getReturnCode;getReturnCode();1;TR;NoCodegenVerifier;0;0
hasRun;hasRun();1;TR;NoCodegenVerifier;0;0
operator=;operator=(class TR::NoCodegenVerifier &&);0;TR;NoCodegenVerifier;1;0
operator=;operator=(const class TR::NoCodegenVerifier &);0;TR;NoCodegenVerifier;1;0
~NoCodegenVerifier;~NoCodegenVerifier();1;TR;NoCodegenVerifier;1;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;Optimizer;0;0
getSignature;getSignature(int32_t,TR::IlType **);1;OMR;MethodBuilder;0;0
getSignature;getSignature(TR::IlType **);0;OMR;MethodBuilder;0;0
operator=;operator=(const class OMR::MethodBuilder &);0;OMR;MethodBuilder;1;0
operator=;operator=(class TestCompiler::MethodBuilder &&);0;TestCompiler;MethodBuilder;1;0
operator=;operator=(const class TestCompiler::MethodBuilder &);0;TestCompiler;MethodBuilder;1;0
operator=;operator=(const class TR::MethodBuilder &);0;TR;MethodBuilder;1;0
operator=;operator=(class TR::MethodBuilder &&);0;TR;MethodBuilder;1;0
X86OpCodesTest;X86OpCodesTest();1;TestCompiler;X86OpCodesTest;1;0
X86OpCodesTest;X86OpCodesTest(const class TestCompiler::X86OpCodesTest &);0;TestCompiler;X86OpCodesTest;1;0
X86OpCodesTest;X86OpCodesTest(class TestCompiler::X86OpCodesTest &&);0;TestCompiler;X86OpCodesTest;1;0
compileBitwiseTestMethods;compileBitwiseTestMethods();1;TestCompiler;X86OpCodesTest;0;1
compileDirectCallTestMethods;compileDirectCallTestMethods();1;TestCompiler;X86OpCodesTest;0;1
compileDisabledConvertOpCodesTest;compileDisabledConvertOpCodesTest();1;TestCompiler;X86OpCodesTest;0;1
compileDisabledIntegerArithmeticTestMethods;compileDisabledIntegerArithmeticTestMethods();1;TestCompiler;X86OpCodesTest;0;1
compileDisabledMemoryOpCodesTest;compileDisabledMemoryOpCodesTest();1;TestCompiler;X86OpCodesTest;0;1
compileFloatArithmeticTestMethods;compileFloatArithmeticTestMethods();1;TestCompiler;X86OpCodesTest;0;1
invokeDirectCallTests;invokeDirectCallTests();1;TestCompiler;X86OpCodesTest;0;1
invokeDisabledConvertOpCodesTest;invokeDisabledConvertOpCodesTest();1;TestCompiler;X86OpCodesTest;0;1
invokeDisabledIntegerArithmeticTests;invokeDisabledIntegerArithmeticTests();1;TestCompiler;X86OpCodesTest;0;1
invokeDisabledMemoryOpCodesTest;invokeDisabledMemoryOpCodesTest();1;TestCompiler;X86OpCodesTest;0;1
invokeFloatArithmeticTests;invokeFloatArithmeticTests();1;TestCompiler;X86OpCodesTest;0;1
operator=;operator=(class TestCompiler::X86OpCodesTest &&);0;TestCompiler;X86OpCodesTest;1;0
operator=;operator=(const class TestCompiler::X86OpCodesTest &);0;TestCompiler;X86OpCodesTest;1;0
~X86OpCodesTest;~X86OpCodesTest();1;TestCompiler;X86OpCodesTest;1;0
CodeCache;CodeCache(const class OMR::CodeCache &);1;OMR;CodeCache;1;0
CodeCache;CodeCache(class OMR::CodeCache &&);0;OMR;CodeCache;1;0
CodeCache;CodeCache();0;OMR;CodeCache;0;0
CodeCacheBase;CodeCacheBase(class OMR::CodeCacheBase &&);1;OMR;CodeCacheBase;1;0
CodeCacheBase;CodeCacheBase();0;OMR;CodeCacheBase;1;0
CodeCacheBase;CodeCacheBase(const class OMR::CodeCacheBase &);0;OMR;CodeCacheBase;1;0
addFlags;addFlags(uint32_t);1;OMR;CodeCache;0;0
addFreeBlock;addFreeBlock(void *);1;OMR;CodeCache;0;0
addFreeBlock2WithCallSite;addFreeBlock2WithCallSite(uint8_t *,uint8_t *,char *,uint32_t);1;OMR;CodeCache;0;0
addResolvedMethod;addResolvedMethod(class TR_OpaqueMethodBlock *);1;OMR;CodeCache;0;0
alignColdCodeAlloc;alignColdCodeAlloc(uint32_t);1;OMR;CodeCacheBase;0;0
alignWarmCodeAlloc;alignWarmCodeAlloc(uint32_t);1;OMR;CodeCacheBase;0;0
allocate;allocate(TR::CodeCacheManager *,size_t,int32_t);1;OMR;CodeCache;0;0
allocateCodeMemory;allocateCodeMemory(size_t,size_t,uint8_t **,_Bool,_Bool);1;OMR;CodeCache;0;0
allocateHashEntry;allocateHashEntry();1;OMR;CodeCache;0;0
allocateTempTrampoline;allocateTempTrampoline();1;OMR;CodeCache;0;0
allocateTempTrampolineSyncBlock;allocateTempTrampolineSyncBlock();1;OMR;CodeCache;0;0
allocateTrampoline;allocateTrampoline();1;OMR;CodeCache;0;0
almostFull;almostFull();1;OMR;CodeCache;0;0
checkForErrors;checkForErrors();1;OMR;CodeCache;0;0
createTrampoline;createTrampoline(CodeCacheTrampolineCode *,void *,class TR_OpaqueMethodBlock *);1;OMR;CodeCache;0;0
destroy;destroy(TR::CodeCacheManager *);1;OMR;CodeCache;0;0
dumpCodeCache;dumpCodeCache();1;OMR;CodeCache;0;0
findFreeBlock;findFreeBlock(size_t,_Bool,_Bool);1;OMR;CodeCache;0;0
findOrAddResolvedMethod;findOrAddResolvedMethod(class TR_OpaqueMethodBlock *);1;OMR;CodeCache;0;0
findResolvedMethod;findResolvedMethod(class TR_OpaqueMethodBlock *);1;OMR;CodeCache;0;0
findTrampoline;findTrampoline(class TR_OpaqueMethodBlock *);1;OMR;CodeCache;0;0
findTrampoline;findTrampoline(int32_t);0;OMR;CodeCache;0;0
flags;flags();1;OMR;CodeCache;0;0
freeHashEntry;freeHashEntry(struct OMR::CodeCacheHashEntry *);1;OMR;CodeCache;0;0
getCCPreLoadedCodeAddress;getCCPreLoadedCodeAddress(enum TR_CCPreLoadedCode,TR::CodeGenerator *);1;OMR;CodeCache;0;0
getCodeAlloc;getCodeAlloc();1;OMR;CodeCache;0;0
getCodeBase;getCodeBase();1;OMR;CodeCache;0;0
getCodeTop;getCodeTop();1;OMR;CodeCache;0;0
getColdCodeAlloc;getColdCodeAlloc();1;OMR;CodeCacheBase;0;0
getFreeContiguousSpace;getFreeContiguousSpace();1;OMR;CodeCache;0;0
getHelperBase;getHelperBase();1;OMR;CodeCache;0;0
getHelperTop;getHelperTop();1;OMR;CodeCache;0;0
getNextCodeCache;getNextCodeCache();1;OMR;CodeCache;0;0
getReservingCompThreadID;getReservingCompThreadID();1;OMR;CodeCache;0;0
getSizeOfLargestFreeColdBlock;getSizeOfLargestFreeColdBlock();1;OMR;CodeCache;0;0
getSizeOfLargestFreeWarmBlock;getSizeOfLargestFreeWarmBlock();1;OMR;CodeCache;0;0
getWarmCodeAlloc;getWarmCodeAlloc();1;OMR;CodeCacheBase;0;0
initialize;initialize(TR::CodeCacheManager *,TR::CodeCacheMemorySegment *,size_t,class OMR::CodeCacheHashEntrySlab *);1;OMR;CodeCache;0;0
isCCPreLoadedCodeInitialized;isCCPreLoadedCodeInitialized();1;OMR;CodeCache;0;0
isReserved;isReserved();1;OMR;CodeCache;0;0
linkTo;linkTo(TR::CodeCache *);1;OMR;CodeCache;0;0
next;next();1;OMR;CodeCache;0;0
operator new;operator new(size_t,TR::CodeCache *);1;OMR;CodeCache;0;0
patchCallPoint;patchCallPoint(class TR_OpaqueMethodBlock *,void *,void *,void *);1;OMR;CodeCache;0;0
printFreeBlocks;printFreeBlocks();1;OMR;CodeCache;0;0
printOccupancyStats;printOccupancyStats();1;OMR;CodeCache;0;0
removeFreeBlock;removeFreeBlock(size_t,struct OMR::CodeCacheFreeCacheBlock *,struct OMR::CodeCacheFreeCacheBlock *);1;OMR;CodeCache;0;0
replaceTrampoline;replaceTrampoline(class TR_OpaqueMethodBlock *,void *,void *,void *,_Bool);1;OMR;CodeCache;0;0
reserve;reserve(int32_t);1;OMR;CodeCache;0;0
reserveNTrampolines;reserveNTrampolines(int64_t);1;OMR;CodeCache;0;0
reserveResolvedTrampoline;reserveResolvedTrampoline(class TR_OpaqueMethodBlock *,_Bool);1;OMR;CodeCache;0;0
reserveTrampoline;reserveTrampoline();1;OMR;CodeCache;0;0
resizeCodeMemory;resizeCodeMemory(void *,size_t);1;OMR;CodeCache;0;0
saveTempTrampoline;saveTempTrampoline(struct OMR::CodeCacheHashEntry *);1;OMR;CodeCache;0;0
segment;segment();1;OMR;CodeCache;0;0
self;self();1;OMR;CodeCache;0;0
setAlmostFull;setAlmostFull(enum TR_YesNoMaybe);1;OMR;CodeCache;0;0
setCCPreLoadedCodeAddress;setCCPreLoadedCodeAddress(enum TR_CCPreLoadedCode,void *);1;OMR;CodeCache;0;0
setColdCodeAlloc;setColdCodeAlloc(uint8_t *);1;OMR;CodeCacheBase;0;0
setReservingCompThreadID;setReservingCompThreadID(int32_t);1;OMR;CodeCache;0;0
setWarmCodeAlloc;setWarmCodeAlloc(uint8_t *);1;OMR;CodeCacheBase;0;0
syncTempTrampolines;syncTempTrampolines();1;OMR;CodeCache;0;0
tempTrampolinesMax;tempTrampolinesMax();1;OMR;CodeCache;0;0
unreserve;unreserve();1;OMR;CodeCache;0;0
unreserveTrampoline;unreserveTrampoline();1;OMR;CodeCache;0;0
updateMaxSizeOfFreeBlocks;updateMaxSizeOfFreeBlocks(struct OMR::CodeCacheFreeCacheBlock *,size_t);1;OMR;CodeCache;0;0
writeMethodHeader;writeMethodHeader(void *,size_t,_Bool);1;OMR;CodeCache;0;0
~CodeCacheBase;~CodeCacheBase();1;OMR;CodeCacheBase;1;0
CacheCriticalSection;CacheCriticalSection(class OMR::CodeCache::CacheCriticalSection &&);1;OMR::CodeCache;CacheCriticalSection;1;0
CacheCriticalSection;CacheCriticalSection(TR::CodeCache *);0;OMR::CodeCache;CacheCriticalSection;0;0
CriticalSection;CriticalSection(const class OMR::CriticalSection &);1;OMR;CriticalSection;0;0
CriticalSection;CriticalSection(TR::Monitor *);0;OMR;CriticalSection;0;0
operator=;operator=(class OMR::CriticalSection);1;OMR;CriticalSection;0;0
operator=;operator=(class OMR::CodeCache::CacheCriticalSection &&);0;OMR::CodeCache;CacheCriticalSection;1;0
~CacheCriticalSection;~CacheCriticalSection();1;OMR::CodeCache;CacheCriticalSection;1;0
~CriticalSection;~CriticalSection();1;OMR;CriticalSection;0;0
CacheListCriticalSection;CacheListCriticalSection(class OMR::CodeCacheManager::CacheListCriticalSection &&);1;OMR::CodeCacheManager;CacheListCriticalSection;1;0
CacheListCriticalSection;CacheListCriticalSection(TR::CodeCacheManager *);0;OMR::CodeCacheManager;CacheListCriticalSection;0;0
operator=;operator=(class OMR::CodeCacheManager::CacheListCriticalSection &&);0;OMR::CodeCacheManager;CacheListCriticalSection;1;0
~CacheListCriticalSection;~CacheListCriticalSection();1;OMR::CodeCacheManager;CacheListCriticalSection;1;0
RepositoryMonitorCriticalSection;RepositoryMonitorCriticalSection(class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &&);1;OMR::CodeCacheManager;RepositoryMonitorCriticalSection;1;0
RepositoryMonitorCriticalSection;RepositoryMonitorCriticalSection(TR::CodeCacheManager *);0;OMR::CodeCacheManager;RepositoryMonitorCriticalSection;0;0
operator=;operator=(class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &&);0;OMR::CodeCacheManager;RepositoryMonitorCriticalSection;1;0
~RepositoryMonitorCriticalSection;~RepositoryMonitorCriticalSection();1;OMR::CodeCacheManager;RepositoryMonitorCriticalSection;1;0
CodeCacheConfig;CodeCacheConfig(class OMR::CodeCacheConfig &&);1;OMR;CodeCacheConfig;1;0
CodeCacheConfig;CodeCacheConfig();0;OMR;CodeCacheConfig;0;0
CodeCacheConfig;CodeCacheConfig(const class OMR::CodeCacheConfig &);0;OMR;CodeCacheConfig;1;0
CodeCacheConfig;CodeCacheConfig(const class TR::CodeCacheConfig &);0;TR;CodeCacheConfig;1;0
CodeCacheConfig;CodeCacheConfig(class TR::CodeCacheConfig &&);0;TR;CodeCacheConfig;1;0
allowedToGrowCache;allowedToGrowCache();1;OMR;CodeCacheConfig;0;0
canChangeNumCodeCaches;canChangeNumCodeCaches();1;OMR;CodeCacheConfig;0;0
ccPreLoadedCodeSize;ccPreLoadedCodeSize();1;OMR;CodeCacheConfig;0;0
codeCacheAlignment;codeCacheAlignment();1;OMR;CodeCacheConfig;0;0
codeCacheFreeBlockRecylingEnabled;codeCacheFreeBlockRecylingEnabled();1;OMR;CodeCacheConfig;0;0
codeCacheHashEntryAllocatorSlabSize;codeCacheHashEntryAllocatorSlabSize();1;OMR;CodeCacheConfig;0;0
codeCacheHelperAlignment;codeCacheHelperAlignment();1;OMR;CodeCacheConfig;0;0
codeCacheHelperAlignmentMask;codeCacheHelperAlignmentMask();1;OMR;CodeCacheConfig;0;0
codeCacheKB;codeCacheKB();1;OMR;CodeCacheConfig;0;0
codeCacheMethodBodyAllocRetries;codeCacheMethodBodyAllocRetries();1;OMR;CodeCacheConfig;0;0
codeCachePadKB;codeCachePadKB();1;OMR;CodeCacheConfig;0;0
codeCacheTempTrampolineSyncArraySize;codeCacheTempTrampolineSyncArraySize();1;OMR;CodeCacheConfig;0;0
codeCacheTotalKB;codeCacheTotalKB();1;OMR;CodeCacheConfig;0;0
codeCacheTrampolineAlignmentBytes;codeCacheTrampolineAlignmentBytes();1;OMR;CodeCacheConfig;0;0
coldEyeCatcher;coldEyeCatcher();1;OMR;CodeCacheConfig;0;0
doSanityChecks;doSanityChecks();1;OMR;CodeCacheConfig;0;0
emitELFObjectFile;emitELFObjectFile();1;OMR;CodeCacheConfig;0;0
emitElfObject;emitElfObject();1;OMR;CodeCacheConfig;0;0
largeCodePageFlags;largeCodePageFlags();1;OMR;CodeCacheConfig;0;0
largeCodePageSize;largeCodePageSize();1;OMR;CodeCacheConfig;0;0
lowCodeCacheThreshold;lowCodeCacheThreshold();1;OMR;CodeCacheConfig;0;0
maxNumberOfCodeCaches;maxNumberOfCodeCaches();1;OMR;CodeCacheConfig;0;0
mccCallbacks;mccCallbacks();1;OMR;CodeCacheConfig;0;0
needsMethodTrampolines;needsMethodTrampolines();1;OMR;CodeCacheConfig;0;0
numRuntimeHelpers;numRuntimeHelpers();1;OMR;CodeCacheConfig;0;0
operator=;operator=(class OMR::CodeCacheConfig &&);1;OMR;CodeCacheConfig;1;0
operator=;operator=(const class OMR::CodeCacheConfig &);0;OMR;CodeCacheConfig;1;0
operator=;operator=(class TR::CodeCacheConfig &&);0;TR;CodeCacheConfig;1;0
operator=;operator=(const class TR::CodeCacheConfig &);0;TR;CodeCacheConfig;1;0
self;self();1;OMR;CodeCacheConfig;0;0
setCodeCacheHelperAlignment;setCodeCacheHelperAlignment(size_t);1;OMR;CodeCacheConfig;0;0
trampolineCodeSize;trampolineCodeSize();1;OMR;CodeCacheConfig;0;0
trampolineSpacePercentage;trampolineSpacePercentage();1;OMR;CodeCacheConfig;0;0
verboseCodeCache;verboseCodeCache();1;OMR;CodeCacheConfig;0;0
verbosePerformance;verbosePerformance();1;OMR;CodeCacheConfig;0;0
verboseReclamation;verboseReclamation();1;OMR;CodeCacheConfig;0;0
warmEyeCatcher;warmEyeCatcher();1;OMR;CodeCacheConfig;0;0
~CodeCacheConfig;~CodeCacheConfig();1;OMR;CodeCacheConfig;1;0
CodeCacheManager;CodeCacheManager(const class OMR::CodeCacheManager &);1;OMR;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(class OMR::CodeCacheManager &&);0;OMR;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(TR::RawAllocator);0;OMR;CodeCacheManager;0;0
CodeCacheManager;CodeCacheManager(class TestCompiler::CodeCacheManager &&);0;TestCompiler;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(const class TestCompiler::CodeCacheManager &);0;TestCompiler;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(class TR::CodeCacheManager &&);0;TR;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(const class TR::CodeCacheManager &);0;TR;CodeCacheManager;1;0
addCodeCache;addCodeCache(TR::CodeCache *);1;OMR;CodeCacheManager;0;0
addFreeBlock;addFreeBlock(void *,uint8_t *);1;OMR;CodeCacheManager;0;0
allocateCodeCacheObject;allocateCodeCacheObject(TR::CodeCacheMemorySegment *,size_t,class OMR::CodeCacheHashEntrySlab *);1;OMR;CodeCacheManager;0;0
allocateCodeCacheRepository;allocateCodeCacheRepository(size_t);1;OMR;CodeCacheManager;0;0
allocateCodeCacheSegment;allocateCodeCacheSegment(size_t,size_t &,void *);1;TestCompiler;CodeCacheManager;0;0
allocateCodeMemory;allocateCodeMemory(size_t,size_t,TR::CodeCache **,uint8_t **,_Bool,_Bool);1;OMR;CodeCacheManager;0;0
allocateCodeMemoryWithRetries;allocateCodeMemoryWithRetries(size_t,size_t,TR::CodeCache **,int32_t,uint8_t **,_Bool,_Bool);1;OMR;CodeCacheManager;0;0
allocateRepositoryCodeCache;allocateRepositoryCodeCache();1;OMR;CodeCacheManager;0;0
almostOutOfCodeCache;almostOutOfCodeCache();1;OMR;CodeCacheManager;0;0
cacheListMutex;cacheListMutex();1;OMR;CodeCacheManager;0;0
canAddNewCodeCache;canAddNewCodeCache();1;OMR;CodeCacheManager;0;0
carveCodeCacheSpaceFromRepository;carveCodeCacheSpaceFromRepository(size_t,size_t &);1;OMR;CodeCacheManager;0;0
chooseCacheStartAddress;chooseCacheStartAddress(size_t);1;OMR;CodeCacheManager;0;0
codeCacheConfig;codeCacheConfig();1;OMR;CodeCacheManager;0;0
codeCacheIsFull;codeCacheIsFull();1;OMR;CodeCacheManager;0;0
decreaseFreeSpaceInCodeCacheRepository;decreaseFreeSpaceInCodeCacheRepository(size_t);1;OMR;CodeCacheManager;0;0
destroy;destroy();1;OMR;CodeCacheManager;0;0
dumpCodeCaches;dumpCodeCaches();1;OMR;CodeCacheManager;0;0
findCodeCacheFromPC;findCodeCacheFromPC(void *);1;OMR;CodeCacheManager;0;0
findHelperTrampoline;findHelperTrampoline(void *,int32_t);1;OMR;CodeCacheManager;0;0
findMethodTrampoline;findMethodTrampoline(class TR_OpaqueMethodBlock *,void *);1;OMR;CodeCacheManager;0;0
freeMemory;freeMemory(void *);1;OMR;CodeCacheManager;0;0
freeMemorySegment;freeMemorySegment(TR::CodeCacheMemorySegment *);1;OMR;CodeCacheManager;0;0
getCodeCacheRepositoryMonitor;getCodeCacheRepositoryMonitor();1;OMR;CodeCacheManager;0;0
getCurrentNumberOfCodeCaches;getCurrentNumberOfCodeCaches();1;OMR;CodeCacheManager;0;0
getFirstCodeCache;getFirstCodeCache();1;OMR;CodeCacheManager;0;0
getMemory;getMemory(size_t);1;OMR;CodeCacheManager;0;0
getNewCacheMemorySegment;getNewCacheMemorySegment(size_t,size_t &);1;OMR;CodeCacheManager;0;0
getNewCodeCache;getNewCodeCache(int32_t);1;OMR;CodeCacheManager;0;0
getRepositoryCodeCacheAddress;getRepositoryCodeCacheAddress();1;OMR;CodeCacheManager;0;0
increaseFreeSpaceInCodeCacheRepository;increaseFreeSpaceInCodeCacheRepository(size_t);1;OMR;CodeCacheManager;0;0
initialize;initialize(_Bool,uint32_t);1;OMR;CodeCacheManager;0;0
initializeELFHeader;initializeELFHeader();1;OMR;CodeCacheManager;0;0
initializeELFHeaderForPlatform;initializeELFHeaderForPlatform(struct OMR::ELFCodeCacheHeader *);1;OMR;CodeCacheManager;0;0
initializeELFTrailer;initializeELFTrailer();1;OMR;CodeCacheManager;0;0
initializeObjectFileGenerator;initializeObjectFileGenerator();1;OMR;CodeCacheManager;0;0
initialized;initialized();1;OMR;CodeCacheManager;0;0
instance;instance();1;TestCompiler;CodeCacheManager;0;0
lateInitialization;lateInitialization();1;OMR;CodeCacheManager;0;0
lowCodeCacheSpaceThresholdReached;lowCodeCacheSpaceThresholdReached();1;OMR;CodeCacheManager;0;0
operator new;operator new(size_t,TR::CodeCacheManager *);1;TestCompiler;CodeCacheManager;0;0
operator=;operator=(class OMR::CodeCacheManager &&);1;OMR;CodeCacheManager;1;0
performSizeAdjustments;performSizeAdjustments(size_t &,size_t &,_Bool,_Bool);1;OMR;CodeCacheManager;0;0
printMccStats;printMccStats();1;OMR;CodeCacheManager;0;0
printOccupancyStats;printOccupancyStats();1;OMR;CodeCacheManager;0;0
printRemainingSpaceInCodeCaches;printRemainingSpaceInCodeCaches();1;OMR;CodeCacheManager;0;0
registerCompiledMethod;registerCompiledMethod(const char *,uint8_t *,uint32_t);1;OMR;CodeCacheManager;0;0
registerStaticRelocation;registerStaticRelocation(const TR::StaticRelocation &);1;OMR;CodeCacheManager;0;0
replaceTrampoline;replaceTrampoline(class TR_OpaqueMethodBlock *,void *,void *,void *,void *,_Bool);1;OMR;CodeCacheManager;0;0
repositoryCodeCacheCreated;repositoryCodeCacheCreated();1;OMR;CodeCacheManager;0;0
reservationInterfaceCache;reservationInterfaceCache(void *,class TR_OpaqueMethodBlock *);1;OMR;CodeCacheManager;0;0
reserveCodeCache;reserveCodeCache(_Bool,size_t,int32_t,int32_t *);1;OMR;CodeCacheManager;0;0
self;self();1;OMR;CodeCacheManager;0;0
setCodeCacheFull;setCodeCacheFull();1;OMR;CodeCacheManager;0;0
setCodeCacheIsFull;setCodeCacheIsFull(_Bool);1;OMR;CodeCacheManager;0;0
setHasFailedCodeCacheAllocation;setHasFailedCodeCacheAllocation();1;OMR;CodeCacheManager;0;0
setupMemorySegmentFromRepository;setupMemorySegmentFromRepository(uint8_t *,uint8_t *,size_t &);1;OMR;CodeCacheManager;0;0
synchronizeTrampolines;synchronizeTrampolines();1;OMR;CodeCacheManager;0;0
undoCarvingFromRepository;undoCarvingFromRepository(TR::CodeCacheMemorySegment *);1;OMR;CodeCacheManager;0;0
unreserveCodeCache;unreserveCodeCache(TR::CodeCache *);1;OMR;CodeCacheManager;0;0
usingRepository;usingRepository();1;OMR;CodeCacheManager;0;0
~CodeCacheManager;~CodeCacheManager();1;OMR;CodeCacheManager;1;0
FEBase<Derived>;FEBase<Derived>();1;TR;FEBase;0;0
FECommon;FECommon(const class TR::FECommon &);1;TR;FECommon;1;0
FECommon;FECommon();0;TR;FECommon;0;0
FECommon;FECommon(class TR::FECommon &&);0;TR;FECommon;1;0
FrontEnd;FrontEnd(const class TestCompiler::FrontEnd &);1;TestCompiler;FrontEnd;1;0
FrontEnd;FrontEnd();0;TestCompiler;FrontEnd;0;0
FrontEnd;FrontEnd(class TestCompiler::FrontEnd &&);0;TestCompiler;FrontEnd;1;0
FrontEnd;FrontEnd(class TR::FrontEnd &&);0;TR;FrontEnd;1;0
TR_FrontEnd;TR_FrontEnd(const class TR_FrontEnd &);1;TR;FrontEnd;1;0
calculateSizeOfStackAtlas;calculateSizeOfStackAtlas(_Bool,uint32_t,uint32_t,TR::Compilation *);1;TestCompiler;FrontEnd;0;0
codeCacheManager;codeCacheManager();1;TR;FEBase;0;0
createStackAtlas;createStackAtlas(_Bool,uint32_t,uint32_t,uint8_t *,uint32_t,TR::Compilation *);1;TestCompiler;FrontEnd;0;0
encodeStackMap;encodeStackMap(class TR_GCStackMap *,uint8_t *,_Bool,uint32_t,TR::Compilation *);1;TestCompiler;FrontEnd;0;0
getStartTime;getStartTime();1;TR;FEBase;0;0
instance;instance();1;TestCompiler;FrontEnd;0;0
jitConfig;jitConfig();1;TR;FEBase;0;0
mapsAreIdentical;mapsAreIdentical(class TR_GCStackMap *,class TR_GCStackMap *,TR::GCStackAtlas *,TR::Compilation *);1;TestCompiler;FrontEnd;0;0
operator=;operator=(class TR::FECommon &&);0;TR;FECommon;1;0
operator=;operator=(const class TR::FECommon &);0;TR;FECommon;1;0
operator=;operator=(const class TestCompiler::FrontEnd &);0;TestCompiler;FrontEnd;1;0
operator=;operator=(class TestCompiler::FrontEnd &&);0;TestCompiler;FrontEnd;1;0
operator=;operator=(const class TR::FrontEnd &);0;TR;FrontEnd;1;0
operator=;operator=(class TR::FrontEnd &&);0;TR;FrontEnd;1;0
persistentMemory;persistentMemory();1;TR;FECommon;0;1
singleton;singleton();1;TR;FEBase;0;0
switchCodeCache;switchCodeCache(TR::CodeCache *);1;TR;FEBase;0;0
~FECommon;~FECommon();1;TR;FECommon;1;0
~FrontEnd;~FrontEnd();1;TestCompiler;FrontEnd;1;0
~TR_PersistentMemory;~TR_PersistentMemory();1;TR;PersistentMemory;1;0
JitConfig;JitConfig();1;TR;JitConfig;0;0
JitConfig;JitConfig(const class TR::JitConfig &);0;TR;JitConfig;1;0
JitConfig;JitConfig(class TR::JitConfig &&);0;TR;JitConfig;1;0
getInterpreterTOC;getInterpreterTOC();1;TR;JitConfig;0;0
getProcessorInfo;getProcessorInfo();1;TR;JitConfig;0;0
getPseudoTOC;getPseudoTOC();1;TR;JitConfig;0;0
instance;instance();1;TR;JitConfig;0;0
setInterpreterTOC;setInterpreterTOC(size_t);1;TR;JitConfig;0;0
setProcessorInfo;setProcessorInfo(void *);1;TR;JitConfig;0;0
setPseudoTOC;setPseudoTOC(void *);1;TR;JitConfig;0;0
~JitConfig;~JitConfig();1;TR;JitConfig;1;0
CodeCache;CodeCache(class OMR::CodeCache &&);1;OMR;CodeCache;1;0
CodeCache;CodeCache(const class OMR::CodeCache &);0;OMR;CodeCache;1;0
CodeCacheBase;CodeCacheBase(const class OMR::CodeCacheBase &);1;OMR;CodeCacheBase;1;0
CodeCacheBase;CodeCacheBase(class OMR::CodeCacheBase &&);0;OMR;CodeCacheBase;1;0
operator=;operator=(const class OMR::CodeCacheConfig &);1;OMR;CodeCacheConfig;1;0
operator=;operator=(class OMR::CodeCacheConfig &&);0;OMR;CodeCacheConfig;1;0
switchCodeCache;switchCodeCache(TR::CodeCache *);1;TR;FEBase;0;1
JitConfig;JitConfig(class TR::JitConfig &&);1;TR;JitConfig;1;0
JitConfig;JitConfig();0;TR;JitConfig;0;0
CompilationStrategy;CompilationStrategy(const class TR::CompilationStrategy &);1;TR;CompilationStrategy;1;0
CompilationStrategy;CompilationStrategy(class TR::CompilationStrategy &&);0;TR;CompilationStrategy;1;0
CompilationStrategy;CompilationStrategy();0;TR;CompilationStrategy;1;0
DefaultCompilationStrategy;DefaultCompilationStrategy(const class TR::DefaultCompilationStrategy &);1;TR;DefaultCompilationStrategy;1;0
DefaultCompilationStrategy;DefaultCompilationStrategy(class TR::DefaultCompilationStrategy &&);0;TR;DefaultCompilationStrategy;1;0
DefaultCompilationStrategy;DefaultCompilationStrategy();0;TR;DefaultCompilationStrategy;0;0
adjustOptimizationPlan;adjustOptimizationPlan(struct TR_MethodToBeCompiled *,int32_t);1;TR;CompilationStrategy;0;1
beforeCodeGen;beforeCodeGen(class TR_OptimizationPlan *,TR::Recompilation *);1;TR;CompilationStrategy;0;1
enableSwitchToProfiling;enableSwitchToProfiling();1;TR;CompilationStrategy;0;1
jitPersistentAlloc;jitPersistentAlloc(size_t);1;TR;DefaultCompilationStrategy;0;0
jitPersistentFree;jitPersistentFree(void *);1;TR;DefaultCompilationStrategy;0;0
operator delete;operator delete(void *,size_t);1;TR;DefaultCompilationStrategy;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);1;TR;DefaultCompilationStrategy;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;TR;DefaultCompilationStrategy;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;TR;DefaultCompilationStrategy;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;TR;DefaultCompilationStrategy;0;0
operator=;operator=(const class TR::CompilationStrategy &);1;TR;CompilationStrategy;1;0
operator=;operator=(class TR::CompilationStrategy &&);0;TR;CompilationStrategy;1;0
operator=;operator=(class TR::DefaultCompilationStrategy &&);0;TR;DefaultCompilationStrategy;1;0
operator=;operator=(const class TR::DefaultCompilationStrategy &);0;TR;DefaultCompilationStrategy;1;0
postCompilation;postCompilation(class TR_OptimizationPlan *,TR::Recompilation *);1;TR;CompilationStrategy;0;1
processEvent;processEvent(class TR_MethodEvent *,_Bool *);1;TR;CompilationStrategy;0;1
shutdown;shutdown();1;TR;CompilationStrategy;0;1
~CompilationStrategy;~CompilationStrategy();1;TR;CompilationStrategy;1;0
~DefaultCompilationStrategy;~DefaultCompilationStrategy();1;TR;DefaultCompilationStrategy;1;0
bytesAllocated;bytesAllocated();1;TR;SegmentProvider;0;0
Compilation;Compilation(class TR::Compilation &);0;TR;Compilation;1;0
dumpMethodTrees;dumpMethodTrees(char *,const char *,TR::ResolvedMethodSymbol *);1;OMR;Compilation;0;0
dumpMethodTrees;dumpMethodTrees(char *,TR::ResolvedMethodSymbol *);0;OMR;Compilation;0;0
switchCodeCache;switchCodeCache(TR::CodeCache *);1;OMR;Compilation;0;1
CompileIlGenRequest;CompileIlGenRequest(const class TR::CompileIlGenRequest &);1;TR;CompileIlGenRequest;1;0
CompileIlGenRequest;CompileIlGenRequest(TR::IlGeneratorMethodDetails &);0;TR;CompileIlGenRequest;0;0
CompileIlGenRequest;CompileIlGenRequest(class TR::CompileIlGenRequest &&);0;TR;CompileIlGenRequest;1;0
DebugSegmentProvider;DebugSegmentProvider(const class TR::DebugSegmentProvider &);1;TR;DebugSegmentProvider;1;0
DebugSegmentProvider;DebugSegmentProvider(size_t,TR::RawAllocator);0;TR;DebugSegmentProvider;0;0
operator=;operator=(const class TR::DebugSegmentProvider &);0;TR;DebugSegmentProvider;1;0
~DebugSegmentProvider;~DebugSegmentProvider();1;TR;DebugSegmentProvider;0;1
FrontEnd;FrontEnd();1;TestCompiler;FrontEnd;0;0
FrontEnd;FrontEnd(const class TestCompiler::FrontEnd &);0;TestCompiler;FrontEnd;1;0
AddFallThroughBuilder;AddFallThroughBuilder(TR::BytecodeBuilder *);1;OMR;BytecodeBuilder;0;0
AddSuccessorBuilder;AddSuccessorBuilder(TR::BytecodeBuilder **);1;OMR;BytecodeBuilder;0;0
AddSuccessorBuilders;AddSuccessorBuilders(uint32_t);1;OMR;BytecodeBuilder;0;0
BytecodeBuilder;BytecodeBuilder(const class OMR::BytecodeBuilder &);1;OMR;BytecodeBuilder;1;0
BytecodeBuilder;BytecodeBuilder(class OMR::BytecodeBuilder &&);0;OMR;BytecodeBuilder;1;0
BytecodeBuilder;BytecodeBuilder(TR::MethodBuilder *,int32_t,char *);0;OMR;BytecodeBuilder;0;0
Call;Call(const char *,int32_t,TR::IlValue **);1;OMR;IlBuilder;0;0
Call;Call(const char *,int32_t);0;OMR;IlBuilder;0;0
Const;Const(double);1;OMR;IlBuilder;0;0
Goto;Goto(TR::IlBuilder *);1;OMR;IlBuilder;0;0
Goto;Goto(TR::IlBuilder **);0;OMR;IlBuilder;0;0
Goto;Goto(TR::BytecodeBuilder **);0;OMR;BytecodeBuilder;0;0
Goto;Goto(TR::BytecodeBuilder *);0;OMR;BytecodeBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpEqual;IfCmpEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpEqualZero;IfCmpEqualZero(TR::BytecodeBuilder **,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpEqualZero;IfCmpEqualZero(TR::BytecodeBuilder *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpGreaterOrEqual;IfCmpGreaterOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpGreaterThan;IfCmpGreaterThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpNotEqual;IfCmpNotEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::IlBuilder **,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::IlBuilder *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::BytecodeBuilder *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpNotEqualZero;IfCmpNotEqualZero(TR::BytecodeBuilder **,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpUnsignedGreaterOrEqual;IfCmpUnsignedGreaterOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpUnsignedGreaterThan;IfCmpUnsignedGreaterThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpUnsignedLessOrEqual;IfCmpUnsignedLessOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IfCmpUnsignedLessThan;IfCmpUnsignedLessThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;BytecodeBuilder;0;0
IlBuilder;IlBuilder(TR::IlBuilder *);1;OMR;IlBuilder;0;0
IlBuilder;IlBuilder(const class OMR::IlBuilder &);0;OMR;IlBuilder;1;0
IlBuilder;IlBuilder(class TR::IlBuilder &&);0;TR;IlBuilder;1;0
IlBuilder;IlBuilder(const class TR::IlBuilder &);0;TR;IlBuilder;1;0
Return;Return(TR::IlValue *);1;OMR;IlBuilder;0;0
Return;Return();0;OMR;IlBuilder;0;0
SetCurrentIlGenerator;SetCurrentIlGenerator();1;OMR;BytecodeBuilder;0;0
ShiftR;ShiftR(TR::IlValue *,int8_t);1;OMR;IlBuilder;0;0
ShiftR;ShiftR(TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
Switch;Switch(const char *,TR::IlBuilder **,uint32_t,int32_t *,TR::IlBuilder **,_Bool *);1;OMR;IlBuilder;0;0
Switch;Switch(const char *,TR::IlBuilder **,uint32_t);0;OMR;IlBuilder;0;0
addAllSuccessorBuildersToWorklist;addAllSuccessorBuildersToWorklist();1;OMR;BytecodeBuilder;0;0
bcIndex;bcIndex();1;OMR;BytecodeBuilder;0;0
initialVMState;initialVMState();1;OMR;BytecodeBuilder;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;BytecodeBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;BytecodeBuilder;0;0
name;name();1;OMR;BytecodeBuilder;0;0
newValue;newValue(TR::DataType,TR::Node *);1;OMR;IlBuilder;0;0
newValue;newValue(TR::IlType *,TR::Node *);0;OMR;IlBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;BytecodeBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;BytecodeBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;BytecodeBuilder;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;BytecodeBuilder;0;0
operator delete;operator delete(void *,size_t);0;OMR;BytecodeBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;BytecodeBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;BytecodeBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;BytecodeBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;BytecodeBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;BytecodeBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;BytecodeBuilder;0;0
operator=;operator=(class OMR::BytecodeBuilder &&);0;OMR;BytecodeBuilder;1;0
operator=;operator=(const class OMR::BytecodeBuilder &);0;OMR;BytecodeBuilder;1;0
operator=;operator=(const class TR::BytecodeBuilder &);0;TR;BytecodeBuilder;1;0
operator=;operator=(class TR::BytecodeBuilder &&);0;TR;BytecodeBuilder;1;0
propagateVMState;propagateVMState(OMR::VirtualMachineState *);1;OMR;BytecodeBuilder;0;0
setVMState;setVMState(OMR::VirtualMachineState *);1;OMR;BytecodeBuilder;0;0
transferVMState;transferVMState(TR::BytecodeBuilder **);1;OMR;BytecodeBuilder;0;0
vmState;vmState();1;OMR;BytecodeBuilder;0;0
~BytecodeBuilder;~BytecodeBuilder();1;OMR;BytecodeBuilder;1;1
Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,_Bool);1;OMR;Snippet;0;0
getCurrentBlock;getCurrentBlock();1;OMR;CodeGenerator;0;1
IlValue;IlValue(class TR::IlValue &&);0;TR;IlValue;1;0
IlValue;IlValue(const class TR::IlValue &);0;TR;IlValue;1;0
~IlValue;~IlValue();1;OMR;IlValue;1;0
DefineFunction;DefineFunction(const char *const,const char *const,const char *const,void *,TR::IlType *,int32_t,TR::IlType **);1;OMR;MethodBuilder;0;0
DefineFunction;DefineFunction(const char *const,const char *const,const char *const,void *,TR::IlType *,int32_t);0;OMR;MethodBuilder;0;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;MethodBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;MethodBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;MethodBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;MethodBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;MethodBuilder;0;0
operator delete;operator delete(void *,size_t);0;OMR;MethodBuilder;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;MethodBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;MethodBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;MethodBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;MethodBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;MethodBuilder;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;MethodBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;MethodBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;MethodBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;MethodBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;MethodBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);0;OMR;MethodBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;MethodBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;MethodBuilder;0;0
recreateWithoutProperties;recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
IlValue;IlValue(const class OMR::IlValue &);1;OMR;IlValue;1;0
IlValue;IlValue(class OMR::IlValue &&);0;OMR;IlValue;1;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);1;OMR;IlValue;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpLessOrEqual;IfCmpLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpLessThan;IfCmpLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
ShiftL;ShiftL(TR::IlValue *,int8_t);1;OMR;IlBuilder;0;0
ShiftL;ShiftL(TR::IlValue *,TR::IlValue *);0;OMR;IlBuilder;0;0
TR_IlGenerator;TR_IlGenerator();0;TR;IlGenerator;1;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;IlInjector;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;IlInjector;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlInjector;0;0
BytecodeBuilder;BytecodeBuilder(class TR::BytecodeBuilder &&);0;TR;BytecodeBuilder;1;0
BytecodeBuilder;BytecodeBuilder(const class TR::BytecodeBuilder &);0;TR;BytecodeBuilder;1;0
IfCmpEqualZero;IfCmpEqualZero(TR::IlBuilder *,TR::IlValue *);1;OMR;IlBuilder;0;0
IfCmpEqualZero;IfCmpEqualZero(TR::IlBuilder **,TR::IlValue *);0;OMR;IlBuilder;0;0
connectTrees;connectTrees(uint32_t *);1;OMR;IlBuilder;0;1
connectTrees;connectTrees();0;OMR;IlBuilder;0;1
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);1;OMR;Instruction;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);1;OMR;IlType;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;IlType;0;0
CloseStruct;CloseStruct(const char *,size_t);1;OMR;TypeDictionary;0;0
CloseStruct;CloseStruct(const char *);0;OMR;TypeDictionary;0;0
DefineField;DefineField(const char *,const char *,TR::IlType *,size_t);1;OMR;TypeDictionary;0;0
DefineField;DefineField(const char *,const char *,TR::IlType *);0;OMR;TypeDictionary;0;0
PointerTo;PointerTo(TR::IlType *);1;OMR;TypeDictionary;0;0
PointerTo;PointerTo(TR::DataType);0;OMR;TypeDictionary;0;0
TypeDictionary;TypeDictionary(const class OMR::TypeDictionary &);1;OMR;TypeDictionary;0;0
TypeDictionary;TypeDictionary();0;OMR;TypeDictionary;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;TypeDictionary;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);1;OMR;TypeDictionary;0;0
operator delete[];operator delete[](void *,TR::Region &);0;OMR;TypeDictionary;0;0
operator new;operator new(size_t,TR::Region &);1;OMR;TypeDictionary;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);1;OMR;TypeDictionary;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;TypeDictionary;0;0
~TR_Memory;~TR_Memory();1;TR;Memory;1;0
TR_FrontEnd;TR_FrontEnd(const class TR_FrontEnd &);0;TR;FrontEnd;1;0
operator new[];operator new[](size_t,TR::Region &);1;OMR;IlType;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;IlType;0;0
JitConfig;JitConfig(const class TR::JitConfig &);1;TR;JitConfig;1;0
IlType;IlType(const class TR::IlType &);0;TR;IlType;1;0
PointerType;PointerType(TR::IlType *);1;OMR;PointerType;0;0
PointerType;PointerType(class OMR::PointerType &&);0;OMR;PointerType;1;0
PointerType;PointerType(const class OMR::PointerType &);0;OMR;PointerType;1;0
operator=;operator=(const class OMR::PointerType &);0;OMR;PointerType;1;0
operator=;operator=(class OMR::PointerType &&);0;OMR;PointerType;1;0
~PointerType;~PointerType();1;OMR;PointerType;1;1
PrimitiveType;PrimitiveType(const class OMR::PrimitiveType &);1;OMR;PrimitiveType;1;0
PrimitiveType;PrimitiveType(const char *,TR::DataType);0;OMR;PrimitiveType;0;0
operator=;operator=(const class OMR::PrimitiveType &);0;OMR;PrimitiveType;1;0
~PrimitiveType;~PrimitiveType();1;OMR;PrimitiveType;0;1
AddField;AddField(const char *,TR::IlType *);1;OMR;StructType;0;0
AddField;AddField(const char *,TR::IlType *,size_t);0;OMR;StructType;0;0
Close;Close();1;OMR;StructType;0;0
Close;Close(size_t);0;OMR;StructType;0;0
StructType;StructType(const char *);1;OMR;StructType;0;0
StructType;StructType(const class OMR::StructType &);0;OMR;StructType;1;0
clearSymRefs;clearSymRefs();1;OMR;StructType;0;0
findField;findField(const char *);1;OMR;StructType;0;0
getFieldOffset;getFieldOffset(const char *);1;OMR;StructType;0;0
getFieldSymRef;getFieldSymRef(const char *);1;OMR;StructType;0;0
getFieldType;getFieldType(const char *);1;OMR;StructType;0;0
operator=;operator=(const class OMR::StructType &);0;OMR;StructType;1;0
~StructType;~StructType();1;OMR;StructType;0;1
AddField;AddField(const char *,TR::IlType *);1;OMR;UnionType;0;0
Close;Close();1;OMR;UnionType;0;0
UnionType;UnionType(const class OMR::UnionType &);1;OMR;UnionType;1;0
UnionType;UnionType(const char *,class TR_Memory *);0;OMR;UnionType;0;0
clearSymRefs;clearSymRefs();1;OMR;UnionType;0;0
findField;findField(const char *);1;OMR;UnionType;0;0
getFieldSymRef;getFieldSymRef(const char *);1;OMR;UnionType;0;0
getFieldType;getFieldType(const char *);1;OMR;UnionType;0;0
operator=;operator=(const class OMR::UnionType &);0;OMR;UnionType;1;0
~UnionType;~UnionType();1;OMR;UnionType;0;1
CacheCriticalSection;CacheCriticalSection(const class OMR::CodeCache::CacheCriticalSection &);1;OMR::CodeCache;CacheCriticalSection;1;0
CacheCriticalSection;CacheCriticalSection(class OMR::CodeCache::CacheCriticalSection &&);0;OMR::CodeCache;CacheCriticalSection;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment(const class OMR::CodeCacheMemorySegment &);1;OMR;CodeCacheMemorySegment;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment();0;OMR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment(uint8_t *,uint8_t *);0;OMR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment(uint8_t *,size_t);0;OMR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment(class OMR::CodeCacheMemorySegment &&);0;OMR;CodeCacheMemorySegment;1;0
adjustAlloc;adjustAlloc(int64_t);1;OMR;CodeCacheMemorySegment;0;0
free;free(TR::CodeCacheManager *);1;OMR;CodeCacheMemorySegment;0;0
operator new;operator new(size_t,TR::CodeCacheMemorySegment *);1;OMR;CodeCacheMemorySegment;0;0
segmentAlloc;segmentAlloc();1;OMR;CodeCacheMemorySegment;0;0
segmentBase;segmentBase();1;OMR;CodeCacheMemorySegment;0;0
segmentTop;segmentTop();1;OMR;CodeCacheMemorySegment;0;0
self;self();1;OMR;CodeCacheMemorySegment;0;0
setSegmentAlloc;setSegmentAlloc(uint8_t *);1;OMR;CodeCacheMemorySegment;0;0
setSegmentBase;setSegmentBase(uint8_t *);1;OMR;CodeCacheMemorySegment;0;0
setSegmentTop;setSegmentTop(uint8_t *);1;OMR;CodeCacheMemorySegment;0;0
CodeCache;CodeCache(class TR::CodeCache &&);0;TR;CodeCache;1;0
CodeCache;CodeCache(const class TR::CodeCache &);0;TR;CodeCache;1;0
findTrampoline;findTrampoline(int32_t);1;OMR;CodeCache;0;0
findTrampoline;findTrampoline(class TR_OpaqueMethodBlock *);0;OMR;CodeCache;0;0
~CodeCache;~CodeCache();1;OMR;CodeCache;1;0
CacheListCriticalSection;CacheListCriticalSection(const class OMR::CodeCacheManager::CacheListCriticalSection &);1;OMR::CodeCacheManager;CacheListCriticalSection;1;0
CacheListCriticalSection;CacheListCriticalSection(class OMR::CodeCacheManager::CacheListCriticalSection &&);0;OMR::CodeCacheManager;CacheListCriticalSection;1;0
RepositoryMonitorCriticalSection;RepositoryMonitorCriticalSection(const class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &);1;OMR::CodeCacheManager;RepositoryMonitorCriticalSection;1;0
RepositoryMonitorCriticalSection;RepositoryMonitorCriticalSection(class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &&);0;OMR::CodeCacheManager;RepositoryMonitorCriticalSection;1;0
ELFRelocationResolver;ELFRelocationResolver(class OMR::ELFRelocationResolver &&);1;OMR;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(const class OMR::ELFRelocationResolver &);0;OMR;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(class OMR::X86::AMD64::ELFRelocationResolver &&);0;OMR::X86::AMD64;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(const class OMR::X86::AMD64::ELFRelocationResolver &);0;OMR::X86::AMD64;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(class TR::ELFRelocationResolver &&);0;TR;ELFRelocationResolver;1;0
ELFRelocationResolver;ELFRelocationResolver(const class TR::ELFRelocationResolver &);0;TR;ELFRelocationResolver;1;0
resolveRelocationType;resolveRelocationType(const TR::StaticRelocation &);1;OMR;ELFRelocationResolver;0;0
~ELFRelocationResolver;~ELFRelocationResolver();1;OMR;ELFRelocationResolver;1;0
CodeCacheManager;CodeCacheManager(class OMR::CodeCacheManager &&);1;OMR;CodeCacheManager;1;0
CodeCacheManager;CodeCacheManager(const class OMR::CodeCacheManager &);0;OMR;CodeCacheManager;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment(uint8_t *,size_t);1;OMR;CodeCacheMemorySegment;0;0
CodeCacheMemorySegment;CodeCacheMemorySegment(const class OMR::CodeCacheMemorySegment &);0;OMR;CodeCacheMemorySegment;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment(class TR::CodeCacheMemorySegment &&);0;TR;CodeCacheMemorySegment;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment(const class TR::CodeCacheMemorySegment &);0;TR;CodeCacheMemorySegment;1;0
~CodeCacheMemorySegment;~CodeCacheMemorySegment();1;OMR;CodeCacheMemorySegment;1;0
CodeCacheMemorySegment;CodeCacheMemorySegment(class OMR::CodeCacheMemorySegment &&);1;OMR;CodeCacheMemorySegment;1;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails();1;OMR;IlGeneratorMethodDetails;0;0
IlGeneratorMethodDetails;IlGeneratorMethodDetails(const class OMR::IlGeneratorMethodDetails &);0;OMR;IlGeneratorMethodDetails;1;0
CompilerEnv;CompilerEnv(const class TR::CompilerEnv &);0;TR;CompilerEnv;1;0
jitPersistentAlloc;jitPersistentAlloc(size_t);1;OMR;IlBuilder;0;0
jitPersistentFree;jitPersistentFree(void *);1;OMR;IlBuilder;0;0
operator delete;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;IlBuilder;0;0
operator delete;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlBuilder;0;0
operator delete;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlBuilder;0;0
operator delete;operator delete(void *,TR::Region &);0;OMR;IlBuilder;0;0
operator delete;operator delete(void *,size_t);0;OMR;IlBuilder;0;0
operator delete[];operator delete[](void *,TR::Region &);1;OMR;IlBuilder;0;0
operator delete[];operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlBuilder;0;0
operator delete[];operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlBuilder;0;0
operator delete[];operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlBuilder;0;0
operator new;operator new(size_t,class TR_PersistentMemory *);1;OMR;IlBuilder;0;0
operator new;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);0;OMR;IlBuilder;0;0
operator new;operator new(size_t,TR::Internal::PersistentNewType);0;OMR;IlBuilder;0;0
operator new;operator new(size_t,TR::Region &);0;OMR;IlBuilder;0;0
operator new;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlBuilder;0;0
operator new;operator new(size_t,TR_ArenaAllocator *);0;OMR;IlBuilder;0;0
operator new;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);1;OMR;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_PersistentMemory *);0;OMR;IlBuilder;0;0
operator new[];operator new[](size_t,TR::Region &);0;OMR;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);0;OMR;IlBuilder;0;0
operator new[];operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);0;OMR;IlBuilder;0;0
operator new[];operator new[](size_t,TR::Internal::PersistentNewType);0;OMR;IlBuilder;0;0
create;create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *);1;OMR;Node;0;0
DebugEnv;DebugEnv(class OMR::DebugEnv &&);1;OMR;DebugEnv;1;0
