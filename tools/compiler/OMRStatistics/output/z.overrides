(Arch: AMD64): Compiling ../../../../compiler/compile/OSRData.cpp
BaseNamespace; BaseClassName; FunctionSignature; OverridingNamespace; OverridingClassName; isImplicit; isVirtual
CS2::ABitVector;Cursor;operator unsigned int();CS2::ABitVector;iterator;0;0
CS2;BSDTimer;Read();CS2;Timer;0;0
CS2;BSDTimer;Reset();CS2;Timer;0;0
CS2;BSDTimer;Start();CS2;Timer;0;0
CS2;BSDTimer;Stop();CS2;Timer;0;0
OMR;Block;Block(class TR_Memory *);TR;Block;0;0
OMR;Block;Block(TR::TreeTop *,TR::TreeTop *,class TR_Memory *);TR;Block;0;0
TR;CFGNode;asBlock();OMR;Block;0;1
TR;CFGNode;removeFromCFG(TR::Compilation *);OMR;Block;0;1
OMR;Block;~Block();TR;Block;0;0
OMR;LabelSymbol;LabelSymbol();TR;LabelSymbol;0;0
OMR;LabelSymbol;LabelSymbol(TR::CodeGenerator *,TR::Block *);TR;LabelSymbol;0;0
OMR;LabelSymbol;LabelSymbol(TR::CodeGenerator *);TR;LabelSymbol;0;0
OMR;Symbol;Symbol(TR::DataType);TR;Symbol;0;0
OMR;Symbol;Symbol();TR;Symbol;0;0
OMR;Symbol;Symbol(TR::DataType,uint32_t);TR;Symbol;0;0
OMR;Symbol;self();OMR;LabelSymbol;0;0
OMR;LabelSymbol;~LabelSymbol();TR;LabelSymbol;1;1
OMR;Symbol;~Symbol();TR;Symbol;0;1
OMR::Z;RealRegister;RealRegister(TR::CodeGenerator *);TR;RealRegister;0;0
OMR::Z;RealRegister;RealRegister(enum TR_RegisterKinds,uint16_t,RegState,RegNum,RegMask,TR::CodeGenerator *);TR;RealRegister;0;0
OMR;Register;Register(enum TR_RegisterKinds);OMR::Z;Register;0;0
OMR::Z;Register;Register(enum TR_RegisterKinds);TR;Register;0;0
OMR;Register;Register(enum TR_RegisterKinds,uint16_t);OMR::Z;Register;0;0
OMR::Z;Register;Register(enum TR_RegisterKinds,uint16_t);TR;Register;0;0
OMR;Register;Register(uint32_t);OMR::Z;Register;0;0
OMR::Z;Register;Register(uint32_t);TR;Register;0;0
OMR;Register;block();OMR;RealRegister;0;1
OMR;Register;containsCollectedReference();OMR::Z;Register;0;0
OMR;Register;decFutureUseCount(ncount_t);OMR::Z;Register;0;0
OMR;Register;getRealRegister();OMR;RealRegister;0;1
OMR;Register;getRegister();OMR;RealRegister;0;1
OMR;Register;resetIsLive();OMR::Z;Register;0;0
OMR;Register;self();OMR;RealRegister;0;0
OMR;Register;setAssignedRegister(TR::Register *);OMR;RealRegister;0;0
OMR;Register;setContainsCollectedReference();OMR::Z;Register;0;0
OMR;RealRegister;setHasBeenAssignedInMethod(_Bool);OMR::Z;RealRegister;0;0
OMR;Register;setPlaceholderReg();OMR::Z;Register;0;0
OMR;Register;unblock();OMR;RealRegister;0;1
OMR;RealRegister;~RealRegister();OMR::Z;RealRegister;1;0
OMR::Z;RealRegister;~RealRegister();TR;RealRegister;1;0
OMR;Register;~Register();OMR::Z;Register;1;0
OMR::Z;Register;~Register();TR;Register;1;0
OMR;RegisterMappedSymbol;RegisterMappedSymbol(TR::DataType,uint32_t);TR;RegisterMappedSymbol;0;0
OMR;RegisterMappedSymbol;RegisterMappedSymbol(int32_t);TR;RegisterMappedSymbol;0;0
OMR;RegisterMappedSymbol;RegisterMappedSymbol(TR::DataType);TR;RegisterMappedSymbol;0;0
OMR;Symbol;getOffset();OMR;RegisterMappedSymbol;0;0
OMR;Symbol;self();OMR;RegisterMappedSymbol;0;0
OMR;RegisterMappedSymbol;~RegisterMappedSymbol();TR;RegisterMappedSymbol;1;1
OMR;MethodSymbol;MethodSymbol(enum TR_LinkageConventions,class TR_Method *);TR;MethodSymbol;0;0
OMR;ResolvedMethodSymbol;ResolvedMethodSymbol(class TR_ResolvedMethod *,TR::Compilation *);TR;ResolvedMethodSymbol;0;0
OMR;Symbol;isStatic();OMR;MethodSymbol;0;0
OMR;Symbol;self();OMR;MethodSymbol;0;0
OMR;MethodSymbol;self();OMR;ResolvedMethodSymbol;0;0
OMR;MethodSymbol;~MethodSymbol();TR;MethodSymbol;1;1
OMR;ResolvedMethodSymbol;~ResolvedMethodSymbol();TR;ResolvedMethodSymbol;1;1
OMR;CPU;CPU();OMR::Z;CPU;0;0
OMR::Z;CPU;CPU();TR;CPU;0;0
OMR;CPU;getSupportsHardwareSQRT();OMR::Z;CPU;0;0
OMR;CPU;~CPU();OMR::Z;CPU;1;0
OMR::Z;CPU;~CPU();TR;CPU;1;0
OMR;CodeGenPhase;CodeGenPhase(TR::CodeGenerator *);OMR::Z;CodeGenPhase;0;0
OMR::Z;CodeGenPhase;CodeGenPhase(TR::CodeGenerator *);TR;CodeGenPhase;0;0
OMR;CodeGenPhase;getName();OMR::Z;CodeGenPhase;0;0
OMR;CodeGenPhase;getName(enum OMR::CodeGenPhase::PhaseValue);OMR::Z;CodeGenPhase;0;0
OMR;CodeGenPhase;getNumPhases();OMR::Z;CodeGenPhase;0;0
OMR;CodeGenPhase;~CodeGenPhase();OMR::Z;CodeGenPhase;1;0
OMR::Z;CodeGenPhase;~CodeGenPhase();TR;CodeGenPhase;1;0
OMR;DebugEnv;DebugEnv();OMR::Z;DebugEnv;0;0
OMR::Z;DebugEnv;DebugEnv();TR;DebugEnv;0;0
OMR;DebugEnv;~DebugEnv();OMR::Z;DebugEnv;1;0
OMR::Z;DebugEnv;~DebugEnv();TR;DebugEnv;1;0
OMR;InstOpCode;InstOpCode();OMR::Z;InstOpCode;0;0
OMR::Z;InstOpCode;InstOpCode();TR;InstOpCode;0;0
OMR;InstOpCode;InstOpCode(enum OMR::InstOpCode::Mnemonic);OMR::Z;InstOpCode;0;0
OMR::Z;InstOpCode;InstOpCode(enum OMR::InstOpCode::Mnemonic);TR;InstOpCode;0;0
OMR;InstOpCode;~InstOpCode();OMR::Z;InstOpCode;1;0
OMR::Z;InstOpCode;~InstOpCode();TR;InstOpCode;1;0
OMR;Instruction;Instruction(TR::CodeGenerator *,TR::Instruction *,TR::class InstOpCode::Mnemonic,TR::Node *);OMR::Z;Instruction;0;0
OMR;Instruction;Instruction(TR::CodeGenerator *,TR::class InstOpCode::Mnemonic,TR::Node *);OMR::Z;Instruction;0;0
OMR;Instruction;assignRegisters(enum TR_RegisterKinds);OMR::Z;Instruction;0;1
OMR;Instruction;defsRegister(TR::Register *);OMR::Z;Instruction;0;1
OMR;Instruction;dependencyRefsRegister(TR::Register *);OMR::Z;Instruction;0;1
OMR;Instruction;estimateBinaryLength(int32_t);OMR::Z;Instruction;0;1
OMR;Instruction;generateBinaryEncoding();OMR::Z;Instruction;0;1
OMR;Instruction;getKind();OMR::Z;Instruction;0;1
OMR;Instruction;refsRegister(TR::Register *);OMR::Z;Instruction;0;1
OMR;Instruction;usesRegister(TR::Register *);OMR::Z;Instruction;0;1
OMR;Instruction;~Instruction();OMR::Z;Instruction;1;0
OMR::Z;Instruction;~Instruction();TR;Instruction;1;0
OMR::Z;Machine;Machine(TR::CodeGenerator *);TR;Machine;0;0
OMR;Machine;getRealRegister(TR_GlobalRegisterNumber);OMR::Z;Machine;0;1
OMR;Machine;~Machine();OMR::Z;Machine;1;0
OMR::Z;Machine;~Machine();TR;Machine;1;0
OMR;Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *);OMR::Z;Snippet;0;0
OMR::Z;Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *);TR;Snippet;0;0
OMR;Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,_Bool);OMR::Z;Snippet;0;0
OMR::Z;Snippet;Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,_Bool);TR;Snippet;0;0
OMR;Snippet;~Snippet();OMR::Z;Snippet;1;0
OMR::Z;Snippet;~Snippet();TR;Snippet;1;0
OMR;TreeEvaluator;badILOpEvaluator(TR::Node *,TR::CodeGenerator *);OMR::Z;TreeEvaluator;0;0
OMR;AliasBuilder;AliasBuilder(TR::SymbolReferenceTable *,size_t,TR::Compilation *);TR;AliasBuilder;0;0
OMR;AliasBuilder;~AliasBuilder();TR;AliasBuilder;1;0
OMR;ArithEnv;ArithEnv();TR;ArithEnv;1;0
OMR;ArithEnv;~ArithEnv();TR;ArithEnv;1;0
TR;Relocation;addAOTRelocation(TR::CodeGenerator *);TR;ExternalRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;ExternalRelocation;0;1
TR;Relocation;getUpdateLocation();TR;BeforeBinaryEncodingExternalRelocation;0;1
TR;Relocation;trace(TR::Compilation *);TR;ExternalRelocation;0;1
OMR;CFG;CFG(TR::Compilation *,TR::ResolvedMethodSymbol *);TR;CFG;0;0
;TR_Link;jitPersistentAlloc(size_t);TR;CFGEdge;0;0
;TR_Link;jitPersistentFree(void *);TR;CFGEdge;0;0
;TR_Link;operator delete(void *,TR::Region &);TR;CFGEdge;0;0
;TR_Link;operator delete(void *,size_t);TR;CFGEdge;0;0
;TR_Link;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
;TR_Link;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
;TR_Link;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
;TR_Link;operator delete[](void *,TR::Region &);TR;CFGEdge;0;0
;TR_Link;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
;TR_Link;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
;TR_Link;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
;TR_Link;operator new(size_t,class TR_PersistentMemory *);TR;CFGEdge;0;0
;TR_Link;operator new(size_t,TR_ArenaAllocator *);TR;CFGEdge;0;0
;TR_Link;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
;TR_Link;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
;TR_Link;operator new(size_t,TR::Region &);TR;CFGEdge;0;0
;TR_Link;operator new(size_t,TR::Internal::PersistentNewType);TR;CFGEdge;0;0
;TR_Link;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
;TR_Link;operator new[](size_t,TR::Region &);TR;CFGEdge;0;0
;TR_Link;operator new[](size_t,class TR_PersistentMemory *);TR;CFGEdge;0;0
;TR_Link;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
;TR_Link;operator new[](size_t,TR::Internal::PersistentNewType);TR;CFGEdge;0;0
;TR_Link;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TR;CFGEdge;0;0
;TR_Link;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TR;CFGEdge;0;0
OMR;ClassEnv;ClassEnv();TR;ClassEnv;1;0
OMR;ClassEnv;~ClassEnv();TR;ClassEnv;1;0
OMR;CodeGenerator;CodeGenerator();OMR::Z;CodeGenerator;0;0
OMR::Z;CodeGenerator;CodeGenerator();TestCompiler;CodeGenerator;0;0
TestCompiler;CodeGenerator;CodeGenerator();TestCompiler::Z;CodeGenerator;0;0
TestCompiler::Z;CodeGenerator;CodeGenerator();TR;CodeGenerator;0;0
OMR;CodeGenerator;IsInMemoryType(TR::DataType);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;allowGlobalRegisterAcrossBranch(class TR_RegisterCandidate *,TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;apply12BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,_Bool);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,int8_t,_Bool);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;apply32BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;apply32BitLabelTableRelocation(int32_t *,TR::LabelSymbol *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;arithmeticNeedsLiteralFromPool(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;arrayInitMinimumNumberOfBytes();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;arrayTranslateAndTestMinimumNumberOfIterations();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;arrayTranslateMinimumNumberOfElements(_Bool,_Bool);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;arrayTranslateTableRequiresAlignment(_Bool,_Bool);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;beginInstructionSelection();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;bitwiseOpNeedsLiteralFromPool(TR::Node *,TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;bndsChkNeedsLiteralFromPool(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;buildRegisterMapForInstruction(class TR_GCStackMap *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;canBeAffectedByStoreTagStalls();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;canTransformUnsafeCopyToArrayCopy();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;canUseImmedInstruction(int64_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;codegenSupportsLoadlessBNDCheck();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;computeRegisterSaveDescription(class TR_BitVector *,_Bool);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;considerTypeForGRA(TR::DataType);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;considerTypeForGRA(TR::SymbolReference *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;considerTypeForGRA(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;constLoadNeedsLiteralFromPool(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;createLinkage(enum TR_LinkageConventions);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;doBinaryEncoding();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;doInstructionSelection();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;doPeephole();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;doRegisterAssignment(enum TR_RegisterKinds);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;doRematerialization();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;dumpDataSnippets(TR::FILE *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;dumpTargetAddressSnippets(TR::FILE *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;emitDataSnippets();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;emitTargetAddressSnippets();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;enableLiteralPoolRegisterForGRA();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;endInstructionSelection();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;endInternalControlFlow(TR::Instruction *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;excludeInvariantsFromGRAEnabled();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,class TR_ScratchRegisterManager &);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,TR::RegisterDependencyConditions *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,TR::RegisterDependencyConditions *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,class TR_ScratchRegisterManager &);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;generateNop(TR::Node *,TR::Instruction *,enum TR_NOPKind);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getCurrentBlockIndex();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getGlobalFPRsPreservedAcrossCalls();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getGlobalGPRFromHPR(TR_GlobalRegisterNumber);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getGlobalGPRsPreservedAcrossCalls();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getGlobalHPRFromGPR(TR_GlobalRegisterNumber);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getGlobalRegisterNumber(uint32_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getGlobalRegisters(enum TR_SpillKinds,enum TR_LinkageConventions);OMR::Z;CodeGenerator;0;1
OMR;CodeGenerator;getLinkageGlobalRegisterNumber(int8_t,TR::DataType);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getMaximumNumberOfFPRsAllowedAcrossEdge(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Block *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getMaximumNumberOfVRFsAllowedAcrossEdge(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getMaximumNumbersOfAssignableFPRs();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getMaximumNumbersOfAssignableGPRs();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getMaximumNumbersOfAssignableVRs();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getMinByteForLongCompareNarrower();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getMinShortForLongCompareNarrower();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getNextAvailableBlockIndex();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getSupportsBitOpCodes();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getSupportsConstantOffsetInAddressing(int64_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getSupportsEncodeUtf16BigWithSurrogateTest();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;getSupportsOpCodeForAutoSIMD(TR::ILOpCode,TR::DataType);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;hasDataSnippets();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;hasTargetAddressSnippets();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;ilOpCodeIsSupported(TR::ILOpCodes);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;internalPointerSupportImplemented();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isAddressScaleIndexSupported(int32_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isAlignmentInstruction(TR::Instruction *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isBranchInstruction(TR::Instruction *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isFenceInstruction(TR::Instruction *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isGlobalRegisterAvailable(TR_GlobalRegisterNumber,TR::DataType);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isInternalControlFlowReg(TR::Register *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isLabelInstruction(TR::Instruction *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isLiteralPoolOnDemandOn();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isOutOfLineHotPath();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isPreservedRegister(int32_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isReturnInstruction(TR::Instruction *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;isTargetSnippetOrOutOfLine(TR::Instruction *,TR::Instruction **,TR::Instruction **);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;lowerTreeIfNeeded(TR::Node *,int32_t,TR::Node *,TR::TreeTop *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;lowerTreesPropagateBlockToNode(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;lowerTreesWalk(TR::Node *,TR::TreeTop *,vcount_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;materializesLargeConstants();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;nodeMayCauseException(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;opCodeIsNoOpOnThisPlatform(TR::ILOpCode &);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;preLowerTrees();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;prepareForGRA();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;prepareRegistersForAssignment();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;processIncomingParameterUsage(class TR_BitVector **,int32_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;processInstruction(TR::Instruction *,class TR_BitVector **,int32_t &,int32_t &,_Bool);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;removeUnavailableRegisters(class TR_RegisterCandidate *,TR::Block **,class TR_BitVector &);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;setCurrentBlockIndex(int32_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;setEstimatedLocationsForDataSnippetLabels(int32_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;setEstimatedLocationsForTargetAddressSnippetLabels(int32_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;setNextAvailableBlockIndex(int32_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;setOnDemandLiteralPoolRun(_Bool);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;setUnavailableRegistersUsage(TR_Array<class TR_BitVector> &,TR_Array<class TR_BitVector> &);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;setVMThreadRequired(_Bool);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;shouldValueBeInACommonedNode(int64_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;shouldYankCompressedRefs();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;simulateNodeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *);OMR::Z;CodeGenerator;0;1
OMR;CodeGenerator;splitBlockEntry(TR::Instruction *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;splitEdge(TR::Instruction *,_Bool,_Bool,TR::Instruction *,TR::list<TR::Instruction *> *,_Bool);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;startInternalControlFlow(TR::Instruction *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supports32bitAiadd();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsDirectIntegralLoadStoresFromLiteralPool();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsDirectJNICallsForAOT();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsFusedMultiplyAdd();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsHighWordFacility();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsInliningOfIsInstance();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsLengthMinusOneForMemoryOpts();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsLongRegAllocation();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsMergingGuards();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsOnDemandLiteralPool();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsSinglePrecisionSQRT();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;supportsTrapsInTMRegion();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;updateSnippetMapWithRSD(TR::Instruction *,int32_t);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;usesImplicit64BitGPRs(TR::Node *);OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;yankIndexScalingOp();OMR::Z;CodeGenerator;0;0
OMR;CodeGenerator;~CodeGenerator();OMR::Z;CodeGenerator;1;0
OMR::Z;CodeGenerator;~CodeGenerator();TestCompiler;CodeGenerator;1;0
TestCompiler;CodeGenerator;~CodeGenerator();TestCompiler::Z;CodeGenerator;1;0
TestCompiler::Z;CodeGenerator;~CodeGenerator();TR;CodeGenerator;1;0
OMR;Compilation;Compilation(int32_t,OMR_VMThread *,class TR_FrontEnd *,class TR_ResolvedMethod *,TR::IlGenRequest &,TR::Options &,TR::Region &,class TR_Memory *,class TR_OptimizationPlan *);TR;Compilation;0;0
OMR;Compilation;~Compilation();TR;Compilation;0;0
OMR;CompilerEnv;CompilerEnv(TR::RawAllocator,const TR::PersistentAllocatorKit &);TR;CompilerEnv;0;0
OMR;DataType;DataType(TR::DataTypes);TR;DataType;0;0
OMR;DataType;DataType();TR;DataType;0;0
OMR;DataType;self();OMR;DataType;0;0
OMR;DataType;~DataType();TR;DataType;1;0
TR;DebugCounterBase;accumulate();TR;DebugCounter;0;1
TR;DebugCounterBase;getBumpCountAddress();TR;DebugCounter;0;1
TR;DebugCounterBase;getBumpCountSymRef(TR::Compilation *);TR;DebugCounter;0;1
TR;DebugCounterBase;accumulate();TR;DebugCounterAggregation;0;1
TR;DebugCounterBase;getBumpCountAddress();TR;DebugCounterAggregation;0;1
TR;DebugCounterBase;getBumpCountSymRef(TR::Compilation *);TR;DebugCounterAggregation;0;1
OMR;Environment;Environment();TR;Environment;0;0
OMR;Environment;Environment(TR::MajorOperatingSystem,TR::Bitness);TR;Environment;0;0
OMR;Environment;~Environment();TR;Environment;1;0
TR;ExternalRelocation;apply(TR::CodeGenerator *);TR;ExternalOrderedPair32BitRelocation;0;1
TR;ExternalRelocation;collectModifier();TR;ExternalOrderedPair32BitRelocation;0;1
TR;ExternalRelocation;getNarrowSize();TR;ExternalOrderedPair32BitRelocation;0;1
TR;ExternalRelocation;getWideSize();TR;ExternalOrderedPair32BitRelocation;0;1
OMR;IL;~IL();TR;IL;1;0
OMR;ILOpCode;ILOpCode();TR;ILOpCode;0;0
OMR;ILOpCode;ILOpCode(TR::ILOpCodes);TR;ILOpCode;0;0
OMR;ILOpCode;~ILOpCode();TR;ILOpCode;1;0
TR;Relocation;apply(TR::CodeGenerator *);TR;InstructionAbsoluteRelocation;0;1
TR;Relocation;isAOTRelocation();TR;InstructionAbsoluteRelocation;0;1
OMR;KnownObjectTable;KnownObjectTable(TR::Compilation *);TR;KnownObjectTable;0;0
OMR;KnownObjectTable;~KnownObjectTable();TR;KnownObjectTable;1;0
TR;Relocation;apply(TR::CodeGenerator *);TR;LabelAbsoluteRelocation;0;1
TR;Relocation;isAOTRelocation();TR;LabelRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;LabelRelative12BitRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;LabelRelative16BitRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;LabelRelative24BitRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;LabelRelative32BitRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;LabelRelative8BitRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;LabelTable32BitRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;LoadLabelRelative16BitRelocation;0;1
TR;Relocation;isAOTRelocation();TR;LoadLabelRelative16BitRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;LoadLabelRelative32BitRelocation;0;1
TR;Relocation;isAOTRelocation();TR;LoadLabelRelative32BitRelocation;0;1
TR;Relocation;apply(TR::CodeGenerator *);TR;LoadLabelRelative64BitRelocation;0;1
OMR;Monitor;Monitor();TR;Monitor;1;0
OMR;Monitor;~Monitor();TR;Monitor;0;0
OMR;Node;Node(TR::Node *,TR::ILOpCodes,uint16_t);TR;Node;0;0
OMR;Node;Node();TR;Node;0;0
OMR;Node;~Node();TR;Node;0;0
OMR;ObjectModel;ObjectModel();TestCompiler;ObjectModel;0;0
TestCompiler;ObjectModel;ObjectModel();TR;ObjectModel;0;0
OMR;ObjectModel;sizeofReferenceField();TestCompiler;ObjectModel;0;0
OMR;ObjectModel;~ObjectModel();TestCompiler;ObjectModel;1;0
TestCompiler;ObjectModel;~ObjectModel();TR;ObjectModel;1;0
OMR;Optimizer;Optimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool,const struct OptimizationStrategy *,uint16_t);TR;Optimizer;0;0
OMR;Options;Options();TR;Options;0;0
OMR;Options;Options(class TR_Memory *,int32_t,int32_t,class TR_ResolvedMethod *,void *,class TR_OptimizationPlan *,_Bool,int32_t);TR;Options;0;0
OMR;Options;Options(TR::Options &);TR;Options;0;0
OMR;Options;self();OMR;Options;0;0
OMR;PersistentInfo;PersistentInfo(class TR_PersistentMemory *);TR;PersistentInfo;0;0
OMR;PersistentInfo;~PersistentInfo();TR;PersistentInfo;1;0
TestCompiler;ResolvedMethod;ResolvedMethod(class TR_OpaqueMethodBlock *);TR;ResolvedMethod;0;0
TestCompiler;ResolvedMethod;ResolvedMethod(TR::MethodBuilder *);TR;ResolvedMethod;0;0
;TR_ResolvedMethod;classNameChars();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;classNameLength();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;convertToMethod();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;getPersistentIdentifier();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;hasBackwardBranches();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isAbstract();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isCompilable(class TR_Memory *);TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isConstructor();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isFinal();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isInterpreted();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;isJITInternalNative();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isJNINative();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isNative();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isNewInstanceImplThunk();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isNonEmptyObjectConstructor();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isPrivate();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isProtected();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isPublic();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isSameMethod(class TR_ResolvedMethod *);TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isStatic();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isStrictFP();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isSubjectToPhaseChange(TR::Compilation *);TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;isSynchronized();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;localName(uint32_t,uint32_t,int32_t &,class TR_Memory *);TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;makeParameterList(TR::ResolvedMethodSymbol *);TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;maxBytecodeIndex();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;nameChars();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;nameLength();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;numberOfExceptionHandlers();TestCompiler;ResolvedMethodBase;0;1
;TR_ResolvedMethod;numberOfParameterSlots();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;numberOfTemps();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;parmType(uint32_t);TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;resolvedMethodAddress();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;returnType();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;signature(class TR_Memory *,enum TR_AllocationKind);TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;signatureChars();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;signatureLength();TestCompiler;ResolvedMethodBase;0;1
TestCompiler;ResolvedMethodBase;signatureLength();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;startAddressForInterpreterOfJittedMethod();TestCompiler;ResolvedMethod;0;1
;TR_ResolvedMethod;startAddressForJittedMethod();TestCompiler;ResolvedMethod;0;1
TestCompiler;ResolvedMethod;~ResolvedMethod();TR;ResolvedMethod;1;0
;TR_Method;classNameChars();TestCompiler;Method;0;1
TestCompiler;Method;classNameChars();TestCompiler;ResolvedMethod;0;1
;TR_Method;classNameLength();TestCompiler;Method;0;1
;TR_Method;isConstructor();TestCompiler;Method;0;1
;TR_Method;isFinalInObject();TestCompiler;Method;0;1
;TR_Method;jitPersistentAlloc(size_t);TestCompiler;Method;0;0
;TR_Method;jitPersistentFree(void *);TestCompiler;Method;0;0
;TR_Method;nameChars();TestCompiler;Method;0;1
TestCompiler;Method;nameChars();TestCompiler;ResolvedMethod;0;1
;TR_Method;nameLength();TestCompiler;Method;0;1
;TR_Method;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
;TR_Method;operator delete(void *,TR::Region &);TestCompiler;Method;0;0
;TR_Method;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
;TR_Method;operator delete(void *,size_t);TestCompiler;Method;0;0
;TR_Method;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Method;0;0
;TR_Method;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
;TR_Method;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Method;0;0
;TR_Method;operator delete[](void *,TR::Region &);TestCompiler;Method;0;0
;TR_Method;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
;TR_Method;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Method;0;0
;TR_Method;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;Method;0;0
;TR_Method;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
;TR_Method;operator new(size_t,class TR_PersistentMemory *);TestCompiler;Method;0;0
;TR_Method;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
;TR_Method;operator new(size_t,TR_ArenaAllocator *);TestCompiler;Method;0;0
;TR_Method;operator new(size_t,TR::Region &);TestCompiler;Method;0;0
;TR_Method;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Method;0;0
;TR_Method;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
;TR_Method;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Method;0;0
;TR_Method;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;Method;0;0
;TR_Method;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;Method;0;0
;TR_Method;operator new[](size_t,TR::Region &);TestCompiler;Method;0;0
;TR_Method;parmType(uint32_t);TestCompiler;ResolvedMethod;0;1
;TR_Method;returnType();TestCompiler;ResolvedMethod;0;1
;TR_Method;signature(class TR_Memory *,enum TR_AllocationKind);TestCompiler;ResolvedMethod;0;1
;TR_Method;signatureChars();TestCompiler;Method;0;1
TestCompiler;Method;signatureChars();TestCompiler;ResolvedMethod;0;1
;TR_Method;signatureLength();TestCompiler;Method;0;1
TestCompiler;Method;signatureLength();TestCompiler;ResolvedMethod;0;1
OMR;SnippetGCMap;SnippetGCMap();TR;SnippetGCMap;0;0
OMR;SnippetGCMap;~SnippetGCMap();TR;SnippetGCMap;1;0
OMR;SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t);TR;SymbolReference;0;0
OMR;SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::SymbolReference &,intptrj_t,TR::class KnownObjectTable::Index);TR;SymbolReference;0;0
OMR;SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,class mcount_t,int32_t,int32_t);TR;SymbolReference;0;0
OMR;SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::class SymbolReferenceTable::CommonNonhelperSymbol,TR::Symbol *,intptrj_t);TR;SymbolReference;0;0
OMR;SymbolReference;SymbolReference(TR::SymbolReferenceTable *);TR;SymbolReference;0;0
OMR;SymbolReference;SymbolReference(TR::SymbolReferenceTable *,int32_t,TR::Symbol *,intptrj_t);TR;SymbolReference;0;0
OMR;SymbolReference;SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t,const char *);TR;SymbolReference;0;0
OMR;SymbolReference;~SymbolReference();TR;SymbolReference;1;0
OMR;SymbolReferenceTable;SymbolReferenceTable(size_t,TR::Compilation *);TR;SymbolReferenceTable;0;0
OMR;TreeTop;TreeTop(TR::Node *,TR::TreeTop *,TR::TreeTop *);TR;TreeTop;0;0
OMR;TreeTop;TreeTop(TR::TreeTop *,TR::Node *,TR::Compilation *);TR;TreeTop;0;0
OMR;VMEnv;VMEnv();TR;VMEnv;1;0
OMR;VMEnv;~VMEnv();TR;VMEnv;1;0
OMR;VMMethodEnv;VMMethodEnv();TR;VMMethodEnv;1;0
OMR;VMMethodEnv;~VMMethodEnv();TR;VMMethodEnv;1;0
TR;VPConstraint;asArrayInfo();TR;VPArrayInfo;0;1
TR;VPConstraint;getArrayInfo();TR;VPArrayInfo;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPArrayInfo;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPArrayInfo;0;1
TR;VPConstraint;name();TR;VPArrayInfo;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPArrayInfo;0;1
TR;VPConstraint;asClass();TR;VPClass;0;1
TR;VPConstraint;getArrayInfo();TR;VPClass;0;1
TR;VPConstraint;getClass();TR;VPClass;0;1
TR;VPConstraint;getClassPresence();TR;VPClass;0;1
TR;VPConstraint;getClassSignature(int32_t &);TR;VPClass;0;1
TR;VPConstraint;getClassType();TR;VPClass;0;1
TR;VPConstraint;getConstString();TR;VPClass;0;1
TR;VPConstraint;getKnownObject();TR;VPClass;0;1
TR;VPConstraint;getObjectLocation();TR;VPClass;0;1
TR;VPConstraint;getPreexistence();TR;VPClass;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPClass;0;1
TR;VPConstraint;isClassObject();TR;VPClass;0;1
TR;VPConstraint;isConstString();TR;VPClass;0;1
TR;VPConstraint;isFixedClass();TR;VPClass;0;1
TR;VPConstraint;isHeapObject();TR;VPClass;0;1
TR;VPConstraint;isJ9ClassObject();TR;VPClass;0;1
TR;VPConstraint;isJavaLangClassObject();TR;VPClass;0;1
TR;VPConstraint;isNonNullObject();TR;VPClass;0;1
TR;VPConstraint;isNullObject();TR;VPClass;0;1
TR;VPConstraint;isPreexistentObject();TR;VPClass;0;1
TR;VPConstraint;isStackObject();TR;VPClass;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPClass;0;1
TR;VPConstraint;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPClass;0;1
TR;VPConstraint;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPClass;0;1
TR;VPConstraint;name();TR;VPClass;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPClass;0;1
TR;VPConstraint;asClassPresence();TR;VPClassPresence;0;1
TR;VPConstraint;asNonNullObject();TR;VPNonNullObject;0;1
TR;VPConstraint;getClassPresence();TR;VPClassPresence;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNonNullObject;0;1
TR;VPConstraint;isNonNullObject();TR;VPNonNullObject;0;1
TR;VPConstraint;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNonNullObject;0;1
TR;VPConstraint;name();TR;VPNonNullObject;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPNonNullObject;0;1
TR;VPConstraint;asClassType();TR;VPClassType;0;1
TR;VPConstraint;asConstString();TR;VPConstString;0;1
TR;VPConstraint;asFixedClass();TR;VPFixedClass;0;1
TR;VPConstraint;asResolvedClass();TR;VPResolvedClass;0;1
TR;VPResolvedClass;create(OMR::ValuePropagation *,class TR_OpaqueClassBlock *);TR;VPFixedClass;0;0
TR;VPClassType;getArrayClass(OMR::ValuePropagation *);TR;VPResolvedClass;0;1
TR;VPResolvedClass;getArrayClass(OMR::ValuePropagation *);TR;VPFixedClass;0;1
TR;VPConstraint;getClass();TR;VPResolvedClass;0;1
TR;VPConstraint;getClassSignature(int32_t &);TR;VPClassType;0;1
TR;VPClassType;getClassSignature(int32_t &);TR;VPResolvedClass;0;1
TR;VPConstraint;getClassType();TR;VPClassType;0;1
TR;VPConstraint;getConstString();TR;VPConstString;0;1
TR;VPFixedClass;hasMoreThanFixedClassInfo();TR;VPConstString;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPResolvedClass;0;1
TR;VPResolvedClass;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPFixedClass;0;1
TR;VPFixedClass;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstString;0;1
TR;VPClassType;isArray();TR;VPFixedClass;0;1
TR;VPConstraint;isClassObject();TR;VPClassType;0;1
TR;VPConstraint;isConstString();TR;VPConstString;0;1
TR;VPConstraint;isFixedClass();TR;VPFixedClass;0;1
TR;VPConstraint;isJ9ClassObject();TR;VPClassType;0;1
TR;VPConstraint;isJavaLangClassObject();TR;VPClassType;0;1
TR;VPClassType;isJavaLangObject(OMR::ValuePropagation *);TR;VPResolvedClass;0;1
TR;VPClassType;isPrimitiveArray(TR::Compilation *);TR;VPResolvedClass;0;1
TR;VPClassType;isReferenceArray(TR::Compilation *);TR;VPResolvedClass;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPResolvedClass;0;1
TR;VPResolvedClass;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPFixedClass;0;1
TR;VPFixedClass;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstString;0;1
TR;VPConstraint;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstString;0;1
TR;VPConstraint;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPConstString;0;1
TR;VPConstraint;name();TR;VPResolvedClass;0;1
TR;VPResolvedClass;name();TR;VPFixedClass;0;1
TR;VPFixedClass;name();TR;VPConstString;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPResolvedClass;0;1
TR;VPResolvedClass;print(TR::Compilation *,TR::FILE *);TR;VPFixedClass;0;1
TR;VPFixedClass;print(TR::Compilation *,TR::FILE *);TR;VPConstString;0;1
TR;VPConstraint;asEqual();TR;VPEqual;0;1
TR;VPConstraint;asRelation();TR;VPRelation;0;1
TR;VPRelation;getComplement(OMR::ValuePropagation *);TR;VPEqual;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPEqual;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPEqual;0;1
TR;VPConstraint;mustBeEqual();TR;VPEqual;0;1
TR;VPConstraint;mustBeGreaterThan();TR;VPEqual;0;1
TR;VPConstraint;mustBeGreaterThanOrEqual();TR;VPEqual;0;1
TR;VPConstraint;mustBeLessThan();TR;VPEqual;0;1
TR;VPConstraint;mustBeLessThanOrEqual();TR;VPEqual;0;1
TR;VPConstraint;mustBeNotEqual();TR;VPEqual;0;1
TR;VPConstraint;name();TR;VPEqual;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *,int32_t);TR;VPEqual;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPEqual;0;1
TR;VPRelation;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);TR;VPEqual;0;1
TR;VPRelation;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);TR;VPEqual;0;1
TR;VPConstraint;asGreaterThanOrEqual();TR;VPGreaterThanOrEqual;0;1
TR;VPRelation;getComplement(OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
TR;VPConstraint;mustBeGreaterThan();TR;VPGreaterThanOrEqual;0;1
TR;VPConstraint;mustBeGreaterThanOrEqual();TR;VPGreaterThanOrEqual;0;1
TR;VPConstraint;mustBeNotEqual();TR;VPGreaterThanOrEqual;0;1
TR;VPConstraint;name();TR;VPGreaterThanOrEqual;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *,int32_t);TR;VPGreaterThanOrEqual;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPGreaterThanOrEqual;0;1
TR;VPRelation;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
TR;VPRelation;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);TR;VPGreaterThanOrEqual;0;1
TR;VPConstraint;add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
TR;VPConstraint;asIntConst();TR;VPIntConst;0;1
TR;VPConstraint;asIntConstraint();TR;VPIntConstraint;0;1
TR;VPConstraint;canOverflow();TR;VPIntConstraint;0;1
TR;VPIntConstraint;getHigh();TR;VPIntConst;0;1
TR;VPConstraint;getHighInt();TR;VPIntConstraint;0;1
TR;VPConstraint;getLowInt();TR;VPIntConstraint;0;1
TR;VPConstraint;getPrecision();TR;VPIntConstraint;0;1
TR;VPIntConstraint;getPrecision();TR;VPIntConst;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
TR;VPConstraint;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConst;0;1
TR;VPConstraint;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
TR;VPConstraint;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
TR;VPConstraint;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
TR;VPConstraint;name();TR;VPIntConst;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPIntConst;0;1
TR;VPConstraint;setCanOverflow(enum TR_YesNoMaybe);TR;VPIntConstraint;0;1
TR;VPConstraint;subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPIntConstraint;0;1
TR;VPConstraint;asIntRange();TR;VPIntRange;0;1
TR;VPIntConstraint;getHigh();TR;VPIntRange;0;1
TR;VPIntConstraint;getPrecision();TR;VPIntRange;0;1
TR;VPConstraint;name();TR;VPIntRange;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPIntRange;0;1
TR;VPConstraint;asKnownObject();TR;VPKnownObject;0;1
TR;VPConstraint;getKnownObject();TR;VPKnownObject;0;1
TR;VPFixedClass;hasMoreThanFixedClassInfo();TR;VPKnownObject;0;1
TR;VPFixedClass;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPKnownObject;0;1
TR;VPClassType;isJavaLangClassObject();TR;VPKnownObject;0;1
TR;VPFixedClass;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPKnownObject;0;1
TR;VPConstraint;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPKnownObject;0;1
TR;VPConstraint;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPKnownObject;0;1
TR;VPFixedClass;name();TR;VPKnownObject;0;1
TR;VPFixedClass;print(TR::Compilation *,TR::FILE *);TR;VPKnownObject;0;1
TR;VPConstraint;asLessThanOrEqual();TR;VPLessThanOrEqual;0;1
TR;VPRelation;getComplement(OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
TR;VPConstraint;mustBeLessThan();TR;VPLessThanOrEqual;0;1
TR;VPConstraint;mustBeLessThanOrEqual();TR;VPLessThanOrEqual;0;1
TR;VPConstraint;mustBeNotEqual();TR;VPLessThanOrEqual;0;1
TR;VPConstraint;name();TR;VPLessThanOrEqual;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *,int32_t);TR;VPLessThanOrEqual;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPLessThanOrEqual;0;1
TR;VPRelation;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
TR;VPRelation;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);TR;VPLessThanOrEqual;0;1
TR;VPConstraint;add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
TR;VPConstraint;asLongConst();TR;VPLongConst;0;1
TR;VPConstraint;asLongConstraint();TR;VPLongConstraint;0;1
TR;VPConstraint;canOverflow();TR;VPLongConstraint;0;1
TR;VPLongConstraint;getHigh();TR;VPLongConst;0;1
TR;VPConstraint;getHighLong();TR;VPLongConstraint;0;1
TR;VPConstraint;getLowLong();TR;VPLongConstraint;0;1
TR;VPConstraint;getPrecision();TR;VPLongConstraint;0;1
TR;VPLongConstraint;getPrecision();TR;VPLongConst;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
TR;VPConstraint;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConst;0;1
TR;VPConstraint;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
TR;VPConstraint;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
TR;VPConstraint;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
TR;VPConstraint;name();TR;VPLongConst;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPLongConst;0;1
TR;VPConstraint;setCanOverflow(enum TR_YesNoMaybe);TR;VPLongConstraint;0;1
TR;VPConstraint;subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPLongConstraint;0;1
TR;VPConstraint;asLongRange();TR;VPLongRange;0;1
TR;VPLongConstraint;getHigh();TR;VPLongRange;0;1
TR;VPLongConstraint;getPrecision();TR;VPLongRange;0;1
TR;VPConstraint;name();TR;VPLongRange;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPLongRange;0;1
TR;VPConstraint;asMergedConstraints();TR;VPMergedConstraints;0;1
TR;VPConstraint;asMergedIntConstraints();TR;VPMergedConstraints;0;1
TR;VPConstraint;asMergedLongConstraints();TR;VPMergedConstraints;0;1
TR;VPConstraint;asMergedShortConstraints();TR;VPMergedConstraints;0;1
TR;VPConstraint;getHighInt();TR;VPMergedConstraints;0;1
TR;VPConstraint;getHighLong();TR;VPMergedConstraints;0;1
TR;VPConstraint;getHighShort();TR;VPMergedConstraints;0;1
TR;VPConstraint;getLowInt();TR;VPMergedConstraints;0;1
TR;VPConstraint;getLowLong();TR;VPMergedConstraints;0;1
TR;VPConstraint;getLowShort();TR;VPMergedConstraints;0;1
TR;VPConstraint;getUnsignedHighInt();TR;VPMergedConstraints;0;1
TR;VPConstraint;getUnsignedHighLong();TR;VPMergedConstraints;0;1
TR;VPConstraint;getUnsignedHighShort();TR;VPMergedConstraints;0;1
TR;VPConstraint;getUnsignedLowInt();TR;VPMergedConstraints;0;1
TR;VPConstraint;getUnsignedLowLong();TR;VPMergedConstraints;0;1
TR;VPConstraint;getUnsignedLowShort();TR;VPMergedConstraints;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
TR;VPConstraint;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
TR;VPConstraint;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
TR;VPConstraint;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPMergedConstraints;0;1
TR;VPConstraint;name();TR;VPMergedConstraints;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPMergedConstraints;0;1
TR;VPConstraint;asNotEqual();TR;VPNotEqual;0;1
TR;VPRelation;getComplement(OMR::ValuePropagation *);TR;VPNotEqual;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNotEqual;0;1
TR;VPConstraint;mustBeNotEqual();TR;VPNotEqual;0;1
TR;VPConstraint;name();TR;VPNotEqual;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *,int32_t);TR;VPNotEqual;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPNotEqual;0;1
TR;VPRelation;propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *);TR;VPNotEqual;0;1
TR;VPRelation;propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *);TR;VPNotEqual;0;1
TR;VPConstraint;asNullObject();TR;VPNullObject;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNullObject;0;1
TR;VPConstraint;isNullObject();TR;VPNullObject;0;1
TR;VPConstraint;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNullObject;0;1
TR;VPConstraint;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPNullObject;0;1
TR;VPConstraint;name();TR;VPNullObject;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPNullObject;0;1
TR;VPConstraint;asObjectLocation();TR;VPObjectLocation;0;1
TR;VPConstraint;getObjectLocation();TR;VPObjectLocation;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPObjectLocation;0;1
TR;VPConstraint;isClassObject();TR;VPObjectLocation;0;1
TR;VPConstraint;isHeapObject();TR;VPObjectLocation;0;1
TR;VPConstraint;isJ9ClassObject();TR;VPObjectLocation;0;1
TR;VPConstraint;isJavaLangClassObject();TR;VPObjectLocation;0;1
TR;VPConstraint;isStackObject();TR;VPObjectLocation;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPObjectLocation;0;1
TR;VPConstraint;name();TR;VPObjectLocation;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPObjectLocation;0;1
TR;VPConstraint;asPreexistentObject();TR;VPPreexistentObject;0;1
TR;VPConstraint;getPreexistence();TR;VPPreexistentObject;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPPreexistentObject;0;1
TR;VPConstraint;isPreexistentObject();TR;VPPreexistentObject;0;1
TR;VPConstraint;name();TR;VPPreexistentObject;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPPreexistentObject;0;1
TR;VPConstraint;add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
TR;VPConstraint;asShortConst();TR;VPShortConst;0;1
TR;VPConstraint;asShortConstraint();TR;VPShortConstraint;0;1
TR;VPConstraint;canOverflow();TR;VPShortConstraint;0;1
TR;VPShortConstraint;getHigh();TR;VPShortConst;0;1
TR;VPConstraint;getHighShort();TR;VPShortConstraint;0;1
TR;VPConstraint;getLowShort();TR;VPShortConstraint;0;1
TR;VPConstraint;getPrecision();TR;VPShortConstraint;0;1
TR;VPShortConstraint;getPrecision();TR;VPShortConst;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
TR;VPConstraint;mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConst;0;1
TR;VPConstraint;mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
TR;VPConstraint;mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
TR;VPConstraint;mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
TR;VPConstraint;name();TR;VPShortConst;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPShortConst;0;1
TR;VPConstraint;setCanOverflow(enum TR_YesNoMaybe);TR;VPShortConstraint;0;1
TR;VPConstraint;subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *);TR;VPShortConstraint;0;1
TR;VPConstraint;asShortRange();TR;VPShortRange;0;1
TR;VPShortConstraint;getHigh();TR;VPShortRange;0;1
TR;VPShortConstraint;getPrecision();TR;VPShortRange;0;1
TR;VPConstraint;name();TR;VPShortRange;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPShortRange;0;1
TR;VPConstraint;asVPSync();TR;VPSync;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPSync;0;1
TR;VPConstraint;merge1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPSync;0;1
TR;VPConstraint;name();TR;VPSync;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPSync;0;1
TR;VPConstraint;asUnreachablePath();TR;VPUnreachablePath;0;1
TR;VPConstraint;name();TR;VPUnreachablePath;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPUnreachablePath;0;1
TR;VPConstraint;asUnresolvedClass();TR;VPUnresolvedClass;0;1
TR;VPClassType;getArrayClass(OMR::ValuePropagation *);TR;VPUnresolvedClass;0;1
TR;VPClassType;getClassSignature(int32_t &);TR;VPUnresolvedClass;0;1
TR;VPConstraint;intersect1(TR::VPConstraint *,OMR::ValuePropagation *);TR;VPUnresolvedClass;0;1
TR;VPClassType;isPrimitiveArray(TR::Compilation *);TR;VPUnresolvedClass;0;1
TR;VPClassType;isReferenceArray(TR::Compilation *);TR;VPUnresolvedClass;0;1
TR;VPConstraint;name();TR;VPUnresolvedClass;0;1
TR;VPConstraint;print(TR::Compilation *,TR::FILE *);TR;VPUnresolvedClass;0;1
;TR_DataFlowAnalysis;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_BackwardDFSetAnalysis;0;1
;TR_DataFlowAnalysis;analyzeRegionStructure(class TR_RegionStructure *,_Bool);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_GlobalAnticipatability;0;1
;TR_DataFlowAnalysis;asGlobalAnticipatability();;TR_GlobalAnticipatability;0;1
;TR_BasicDFSetAnalysis;canGenAndKillForStructure(class TR_Structure *);;TR_BackwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;compose(Container *,Container *);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;compose(Container *,Container *);;TR_BackwardIntersectionDFSetAnalysis;0;1
;TR_DataFlowAnalysis;getKind();;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;getKind();;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;getKind();;TR_BackwardIntersectionDFSetAnalysis;0;1
;TR_BackwardIntersectionDFSetAnalysis;getKind();;TR_GlobalAnticipatability;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_GlobalAnticipatability;0;1
;TR_BackwardDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_BackwardIntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeDFSetAnalysis();;TR_BackwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *);;TR_BackwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *);;TR_BackwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeInfo(Container *);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;initializeInfo(Container *);;TR_BackwardIntersectionDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;initializeOutSetInfo();;TR_BackwardIntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;inverseCompose(Container *,Container *);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;inverseCompose(Container *,Container *);;TR_BackwardIntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;inverseInitializeInfo(Container *);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;inverseInitializeInfo(Container *);;TR_BackwardIntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_GlobalAnticipatability;0;1
;TR_BackwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_Liveness;0;1
;TR_DataFlowAnalysis;asLiveness();;TR_Liveness;0;1
;TR_BackwardDFSetAnalysis;compose(Container *,Container *);;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;getKind();;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BackwardUnionDFSetAnalysis;getKind();;TR_Liveness;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_Liveness;0;1
;TR_BackwardDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfo();;TR_Liveness;0;1
;TR_BackwardDFSetAnalysis;initializeInfo(Container *);;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;initializeOutSetInfo();;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;inverseCompose(Container *,Container *);;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;inverseInitializeInfo(Container *);;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_Liveness;0;1
;TR_BasicDFSetAnalysis;supportsGenAndKillSets();;TR_Liveness;0;1
;TR_BitVectorIterator;getFirstElement();;TR_BitContainerIterator;0;0
;TR_BitVectorIterator;getNextElement();;TR_BitContainerIterator;0;0
;TR_BitVectorIterator;hasMoreElements();;TR_BitContainerIterator;0;0
;TR_Structure;addExternalEdge(class TR_Structure *,int32_t,_Bool);;TR_BlockStructure;0;1
;TR_Structure;asBlock();;TR_BlockStructure;0;1
;TR_Structure;changeContinueLoopsToNestedLoops(class TR_RegionStructure *);;TR_BlockStructure;0;1
;TR_Structure;checkStructure(class TR_BitVector *);;TR_BlockStructure;0;1
;TR_Structure;clearAnalysisInfo();;TR_BlockStructure;0;1
;TR_Structure;cloneStructure(TR::Block **,class TR_StructureSubGraphNode **,List<class TR_Structure> *,List<class TR_Structure> *);;TR_BlockStructure;0;1
;TR_Structure;cloneStructureEdges(TR::Block **);;TR_BlockStructure;0;1
;TR_Structure;collectCFGEdgesTo(int32_t,List<TR::CFGEdge> *);;TR_BlockStructure;0;1
;TR_Structure;collectExitBlocks(List<TR::Block> *,List<TR::CFGEdge> *);;TR_BlockStructure;0;1
;TR_Structure;doDataFlowAnalysis(class TR_DataFlowAnalysis *,_Bool);;TR_BlockStructure;0;1
;TR_Structure;getBlocks(List<TR::Block> *,vcount_t);;TR_BlockStructure;0;1
;TR_Structure;getBlocks(List<TR::Block> *);;TR_BlockStructure;0;1
;TR_Structure;getEntryBlock();;TR_BlockStructure;0;1
;TR_Structure;getKind();;TR_BlockStructure;0;1
;TR_Structure;hoistInvariantsOutOfNestedLoops(class TR_LocalTransparency *,class TR_BitVector **,_Bool,class TR_BlockStructure *,class TR_RegionStructure *,int32_t);;TR_BlockStructure;0;1
;TR_Structure;isExpressionTransparentIn(int32_t,class TR_LocalTransparency *);;TR_BlockStructure;0;1
;TR_Structure;markStructuresWithImproperRegions();;TR_BlockStructure;0;1
;TR_Structure;removeEdge(class TR_Structure *,class TR_Structure *);;TR_BlockStructure;0;1
;TR_Structure;removeExternalEdgeTo(class TR_Structure *,int32_t);;TR_BlockStructure;0;1
;TR_Structure;renumber(int32_t);;TR_BlockStructure;0;1
;TR_Structure;renumberRecursively(int32_t,int32_t);;TR_BlockStructure;0;1
;TR_Structure;replacePart(class TR_Structure *,class TR_Structure *);;TR_BlockStructure;0;1
;TR_Structure;resetAnalysisInfo();;TR_BlockStructure;0;1
;TR_Structure;resetAnalyzedStatus();;TR_BlockStructure;0;1
;TR_Structure;resetVisitCounts(vcount_t);;TR_BlockStructure;0;1
;TR_DataFlowAnalysis;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_ForwardDFSetAnalysis;0;1
;TR_DataFlowAnalysis;analyzeRegionStructure(class TR_RegionStructure *,_Bool);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_Delayedness;0;1
;TR_DataFlowAnalysis;asDelayedness();;TR_Delayedness;0;1
;TR_BasicDFSetAnalysis;canGenAndKillForStructure(class TR_Structure *);;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;compose(Container *,Container *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;compose(Container *,Container *);;TR_IntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;getKind();;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;getKind();;TR_IntersectionDFSetAnalysis;0;1
;TR_IntersectionDFSetAnalysis;getKind();;TR_Delayedness;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_Delayedness;0;1
;TR_BasicDFSetAnalysis;initialize();;TR_ForwardDFSetAnalysis;0;0
;TR_ForwardDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_IntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeDFSetAnalysis();;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *);;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initializeInSetInfo();;TR_IntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeInfo(Container *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initializeInfo(Container *);;TR_IntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;inverseCompose(Container *,Container *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;inverseCompose(Container *,Container *);;TR_IntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;inverseInitializeInfo(Container *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;inverseInitializeInfo(Container *);;TR_IntersectionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_Delayedness;0;1
;TR_ForwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_Earliestness;0;1
;TR_DataFlowAnalysis;asEarliestness();;TR_Earliestness;0;1
;TR_ForwardDFSetAnalysis;compose(Container *,Container *);;TR_UnionDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;getKind();;TR_UnionDFSetAnalysis;0;1
;TR_UnionDFSetAnalysis;getKind();;TR_Earliestness;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_Earliestness;0;1
;TR_ForwardDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_UnionDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initializeInSetInfo();;TR_UnionDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initializeInfo(Container *);;TR_UnionDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;inverseCompose(Container *,Container *);;TR_UnionDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;inverseInitializeInfo(Container *);;TR_UnionDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_Earliestness;0;1
;TR_ForwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_FlowSensitiveEscapeAnalysis;0;1
;TR_DataFlowAnalysis;asFlowSensitiveEscapeAnalysis();;TR_FlowSensitiveEscapeAnalysis;0;1
;TR_IntersectionDFSetAnalysis;getKind();;TR_FlowSensitiveEscapeAnalysis;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_FlowSensitiveEscapeAnalysis;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_FlowSensitiveEscapeAnalysis;0;1
;TR_BasicDFSetAnalysis;supportsGenAndKillSets();;TR_FlowSensitiveEscapeAnalysis;0;1
;TR_HashTab;calculateHash(const void *);;TR_HashTabDouble;0;1
;TR_HashTab;isEqual(const void *,const void *);;TR_HashTabDouble;0;1
;TR_HashTab;calculateHash(const void *);;TR_HashTabFloat;0;1
;TR_HashTab;isEqual(const void *,const void *);;TR_HashTabFloat;0;1
;TR_HashTab;calculateHash(const void *);;TR_HashTabInt;0;1
;TR_HashTab;calculateHash(const void *);;TR_HashTabLong;0;1
;TR_HashTab;isEqual(const void *,const void *);;TR_HashTabLong;0;1
;TR_HashTab;calculateHash(const void *);;TR_HashTabString;0;1
;TR_HashTab;isEqual(const void *,const void *);;TR_HashTabString;0;1
;TR_DataFlowAnalysis;asIsolatedness();;TR_Isolatedness;0;1
;TR_BackwardIntersectionDFSetAnalysis;getKind();;TR_Isolatedness;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_Isolatedness;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_Isolatedness;0;1
;TR_BackwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_Latestness;0;1
;TR_DataFlowAnalysis;asLatestness();;TR_Latestness;0;1
;TR_BackwardIntersectionDFSetAnalysis;getKind();;TR_Latestness;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_Latestness;0;1
;TR_BackwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_LiveOnAllPaths;0;1
;TR_DataFlowAnalysis;asLiveOnAllPaths();;TR_LiveOnAllPaths;0;1
;TR_BackwardIntersectionDFSetAnalysis;getKind();;TR_LiveOnAllPaths;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_LiveOnAllPaths;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfo();;TR_LiveOnAllPaths;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_LiveOnAllPaths;0;1
;TR_BasicDFSetAnalysis;supportsGenAndKillSets();;TR_LiveOnAllPaths;0;1
;TR_LiveVariableInformation;findUseOfLocal(TR::Node *,int32_t,class TR_BitVector **,class TR_BitVector **,class TR_BitVector *,_Bool,vcount_t);;TR_OSRLiveVariableInformation;0;1
;TR_LiveVariableInformation;jitPersistentAlloc(size_t);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;jitPersistentFree(void *);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator delete(void *,TR::Region &);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator delete(void *,size_t);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator delete[](void *,TR::Region &);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new(size_t,TR::Internal::PersistentNewType);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new(size_t,TR::Region &);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new(size_t,TR_ArenaAllocator *);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new(size_t,class TR_PersistentMemory *);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new[](size_t,class TR_PersistentMemory *);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new[](size_t,TR::Region &);;TR_OSRLiveVariableInformation;0;0
;TR_LiveVariableInformation;operator new[](size_t,TR::Internal::PersistentNewType);;TR_OSRLiveVariableInformation;0;0
;TR_Dominators;jitPersistentAlloc(size_t);;TR_PostDominators;0;0
;TR_Dominators;jitPersistentFree(void *);;TR_PostDominators;0;0
;TR_Dominators;operator delete(void *,size_t);;TR_PostDominators;0;0
;TR_Dominators;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
;TR_Dominators;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
;TR_Dominators;operator delete(void *,TR::Region &);;TR_PostDominators;0;0
;TR_Dominators;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_PostDominators;0;0
;TR_Dominators;operator delete[](void *,TR::Region &);;TR_PostDominators;0;0
;TR_Dominators;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
;TR_Dominators;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
;TR_Dominators;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_PostDominators;0;0
;TR_Dominators;operator new(size_t,TR::Region &);;TR_PostDominators;0;0
;TR_Dominators;operator new(size_t,TR::Internal::PersistentNewType);;TR_PostDominators;0;0
;TR_Dominators;operator new(size_t,class TR_PersistentMemory *);;TR_PostDominators;0;0
;TR_Dominators;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_PostDominators;0;0
;TR_Dominators;operator new(size_t,TR_ArenaAllocator *);;TR_PostDominators;0;0
;TR_Dominators;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
;TR_Dominators;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
;TR_Dominators;operator new[](size_t,TR::Region &);;TR_PostDominators;0;0
;TR_Dominators;operator new[](size_t,class TR_PersistentMemory *);;TR_PostDominators;0;0
;TR_Dominators;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
;TR_Dominators;operator new[](size_t,TR::Internal::PersistentNewType);;TR_PostDominators;0;0
;TR_Dominators;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PostDominators;0;0
;TR_Dominators;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_PostDominators;0;0
;TR_ForwardDFSetAnalysis;analyzeBlockZeroStructure(class TR_BlockStructure *);;TR_ReachingDefinitions;0;1
;TR_UnionDFSetAnalysis;getKind();;TR_ReachingDefinitions;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_ReachingDefinitions;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfo();;TR_ReachingDefinitions;0;1
;TR_DataFlowAnalysis;perform();;TR_ReachingDefinitions;0;1
;TR_BasicDFSetAnalysis;supportsGenAndKillSets();;TR_ReachingDefinitions;0;1
;TR_Structure;addEdge(TR::CFGEdge *,_Bool);;TR_RegionStructure;0;1
;TR_Structure;addExternalEdge(class TR_Structure *,int32_t,_Bool);;TR_RegionStructure;0;1
;TR_Structure;asRegion();;TR_RegionStructure;0;1
;TR_Structure;changeContinueLoopsToNestedLoops(class TR_RegionStructure *);;TR_RegionStructure;0;1
;TR_Structure;checkStructure(class TR_BitVector *);;TR_RegionStructure;0;1
;TR_Structure;clearAnalysisInfo();;TR_RegionStructure;0;1
;TR_Structure;cloneStructure(TR::Block **,class TR_StructureSubGraphNode **,List<class TR_Structure> *,List<class TR_Structure> *);;TR_RegionStructure;0;1
;TR_Structure;cloneStructureEdges(TR::Block **);;TR_RegionStructure;0;1
;TR_Structure;collectCFGEdgesTo(int32_t,List<TR::CFGEdge> *);;TR_RegionStructure;0;1
;TR_Structure;collectExitBlocks(List<TR::Block> *,List<TR::CFGEdge> *);;TR_RegionStructure;0;1
;TR_Structure;doDataFlowAnalysis(class TR_DataFlowAnalysis *,_Bool);;TR_RegionStructure;0;1
;TR_Structure;getBlocks(List<TR::Block> *,vcount_t);;TR_RegionStructure;0;1
;TR_Structure;getBlocks(List<TR::Block> *);;TR_RegionStructure;0;1
;TR_Structure;getEntryBlock();;TR_RegionStructure;0;1
;TR_Structure;getKind();;TR_RegionStructure;0;1
;TR_Structure;getMaxNestingDepth(int32_t *,int32_t *);;TR_RegionStructure;0;1
;TR_Structure;hoistInvariantsOutOfNestedLoops(class TR_LocalTransparency *,class TR_BitVector **,_Bool,class TR_BlockStructure *,class TR_RegionStructure *,int32_t);;TR_RegionStructure;0;1
;TR_Structure;isExpressionTransparentIn(int32_t,class TR_LocalTransparency *);;TR_RegionStructure;0;1
;TR_Structure;markStructuresWithImproperRegions();;TR_RegionStructure;0;1
;TR_Structure;mergeInto(TR::Block *,TR::Block *);;TR_RegionStructure;0;1
;TR_Structure;removeEdge(class TR_Structure *,class TR_Structure *);;TR_RegionStructure;0;1
;TR_Structure;removeExternalEdgeTo(class TR_Structure *,int32_t);;TR_RegionStructure;0;1
;TR_Structure;removeMergedBlock(TR::Block *,TR::Block *);;TR_RegionStructure;0;1
;TR_Structure;renumber(int32_t);;TR_RegionStructure;0;1
;TR_Structure;renumberRecursively(int32_t,int32_t);;TR_RegionStructure;0;1
;TR_Structure;replacePart(class TR_Structure *,class TR_Structure *);;TR_RegionStructure;0;1
;TR_Structure;resetAnalysisInfo();;TR_RegionStructure;0;1
;TR_Structure;resetAnalyzedStatus();;TR_RegionStructure;0;1
;TR_Structure;resetVisitCounts(vcount_t);;TR_RegionStructure;0;1
;TR_BackwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_RegisterAnticipatability;0;1
;TR_DataFlowAnalysis;asRegisterAnticipatability();;TR_RegisterAnticipatability;0;1
;TR_BackwardIntersectionDFSetAnalysis;getKind();;TR_RegisterAnticipatability;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_RegisterAnticipatability;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_RegisterAnticipatability;0;1
;TR_ForwardDFSetAnalysis;analyzeBlockZeroStructure(class TR_BlockStructure *);;TR_RegisterAvailability;0;1
;TR_ForwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_RegisterAvailability;0;1
;TR_DataFlowAnalysis;asRegisterAvailability();;TR_RegisterAvailability;0;1
;TR_IntersectionDFSetAnalysis;getKind();;TR_RegisterAvailability;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_RegisterAvailability;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_RegisterAvailability;0;1
;TR_OutOfLineCodeSection;assignRegisters(enum TR_RegisterKinds);;TR_S390OutOfLineCodeSection;0;1
TR;CFGNode;asStructureSubGraphNode();;TR_StructureSubGraphNode;0;1
(Arch: AMD64): Compiling ../../../../compiler/compile/Method.cpp
OMR;ParameterSymbol;ParameterSymbol(TR::DataType,int32_t,size_t);TR;ParameterSymbol;0;0
OMR;ParameterSymbol;ParameterSymbol(TR::DataType,int32_t);TR;ParameterSymbol;0;0
OMR;RegisterMappedSymbol;self();OMR;ParameterSymbol;0;0
OMR;ParameterSymbol;~ParameterSymbol();TR;ParameterSymbol;1;1
(Arch: AMD64): Compiling ../../../../compiler/compile/VirtualGuard.cpp
(Arch: AMD64): Compiling ../../../../compiler/control/OMROptions.cpp
OMR;Recompilation;Recompilation(TR::Compilation *);TR;Recompilation;0;0
OMR;Recompilation;~Recompilation();TR;Recompilation;1;0
(Arch: AMD64): Compiling ../../../../compiler/control/OptimizationPlan.cpp
(Arch: AMD64): Compiling ../../../../compiler/control/OMRRecompilation.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/ExceptionTable.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/Assert.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/BitVector.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/Checklist.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/HashTab.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/STLUtils.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/IGBase.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/IGNode.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/ILWalk.cpp
OMR;Optimization;Optimization(TR::OptimizationManager *);TR;Optimization;0;0
OMR;Optimization;~Optimization();TR;Optimization;0;1
TR;TreeTopIteratorImpl;currentNode();TR;NodeIterator;0;0
TR;NodeIterator;currentNode();TR;NodeOccurrenceIterator;0;0
TR;TreeTopIteratorImpl;currentTree();TR;NodeIterator;0;0
TR;TreeTopIteratorImpl;isAt(class TR::PreorderNodeIterator &);TR;NodeIterator;0;0
TR;TreeTopIteratorImpl;isAt(TR::TreeTop *);TR;NodeIterator;0;0
TR;TreeTopIteratorImpl;logCurrentLocation();TR;NodeIterator;0;0
TR;NodeIterator;logCurrentLocation();TR;NodeOccurrenceIterator;0;0
TR;TreeTopIteratorImpl;operator!=(TR::TreeTop *);TR;NodeIterator;0;0
TR;TreeTopIteratorImpl;operator++();TR;PostorderNodeOccurrenceIterator;0;0
TR;TreeTopIteratorImpl;operator==(TR::TreeTop *);TR;NodeIterator;0;0
TR;TreeTopIteratorImpl;stepForward();TR;PostorderNodeOccurrenceIterator;0;0
OMR;OptimizationManager;OptimizationManager(TR::Optimizer *,OptimizationFactory,OMR::Optimizations,const struct OptimizationStrategy *);TR;OptimizationManager;0;0
OMR;OptimizationManager;~OptimizationManager();TR;OptimizationManager;0;1
TR;TreeTopIteratorImpl;operator++();TR;PostorderNodeIterator;0;0
TR;TreeTopIteratorImpl;stepForward();TR;PostorderNodeIterator;0;0
TR;TreeTopIteratorImpl;operator++();TR;PreorderNodeIterator;0;0
TR;TreeTopIteratorImpl;stepForward();TR;PreorderNodeIterator;0;0
TR;TreeTopIteratorImpl;operator++();TR;PreorderNodeOccurrenceIterator;0;0
TR;TreeTopIteratorImpl;stepForward();TR;PreorderNodeOccurrenceIterator;0;0
TR;TreeTopIteratorImpl;stepBackward();TR;TreeTopIterator;0;0
TR;TreeTopIteratorImpl;stepForward();TR;TreeTopIterator;0;0
(Arch: AMD64): Compiling ../../../../compiler/ras/ILValidationRules.cpp
TR;MethodValidationRule;validate(TR::ResolvedMethodSymbol *);TR;SoundnessRule;0;1
TR;NodeValidationRule;validate(TR::Node *);TR;ValidateChildCount;0;1
TR;NodeValidationRule;validate(TR::Node *);TR;ValidateChildTypes;0;1
TR;MethodValidationRule;validate(TR::ResolvedMethodSymbol *);TR;ValidateLivenessBoundaries;0;1
TR;BlockValidationRule;validate(TR::TreeTop *,TR::TreeTop *);TR;ValidateNodeRefCountWithinBlock;0;1
TR;NodeValidationRule;validate(TR::Node *);TR;Validate_ireturnReturnType;0;1
(Arch: AMD64): Compiling ../../../../compiler/ras/ILValidationUtils.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/ILValidator.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/InterferenceGraph.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/OMRMonitor.cpp
OMR;MonitorTable;MonitorTable();TR;MonitorTable;1;0
(Arch: AMD64): Compiling ../../../../compiler/infra/OMRMonitorTable.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/Random.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/Timer.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/TreeServices.cpp
;TR_Pattern;getName();;TR_AnythingPattern;0;1
;TR_Pattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_AnythingPattern;0;1
;TR_Pattern;getName();;TR_ChildPattern;0;1
;TR_Pattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_ChildPattern;0;1
;TR_Pattern;getName();;TR_ChildrenPattern;0;1
;TR_ChildrenPattern;getName();;TR_CommutativePattern;0;1
;TR_Pattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_ChildrenPattern;0;1
;TR_ChildrenPattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_CommutativePattern;0;1
;TR_Pattern;getName();;TR_ChoicePattern;0;1
;TR_Pattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_ChoicePattern;0;1
;TR_Pattern;getName();;TR_OpCodePattern;0;1
;TR_OpCodePattern;getName();;TR_IConstPattern;0;1
;TR_Pattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_OpCodePattern;0;1
;TR_OpCodePattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_IConstPattern;0;1
;TR_Pattern;tracePattern(TR::Node *);;TR_OpCodePattern;0;1
;TR_OpCodePattern;getName();;TR_LConstPattern;0;1
;TR_OpCodePattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_LConstPattern;0;1
;TR_Pattern;getName();;TR_NoRegisterPattern;0;1
;TR_Pattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_NoRegisterPattern;0;1
;TR_Pattern;getName();;TR_UnifyPattern;0;1
;TR_Pattern;thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *);;TR_UnifyPattern;0;1
(Arch: AMD64): Compiling ../../../../compiler/infra/OMRCfg.cpp
(Arch: AMD64): Compiling ../../../../compiler/infra/SimpleRegex.cpp
(Arch: AMD64): Compiling ../../../../compiler/ilgen/IlGenRequest.cpp
OMR;IlGenRequest;IlGenRequest(TR::IlGeneratorMethodDetails &);TR;IlGenRequest;0;0
OMR;IlGenRequest;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *);TR;CompileIlGenRequest;0;1
OMR;IlGenRequest;print(class TR_FrontEnd *,TR::FILE *,const char *);TR;CompileIlGenRequest;0;1
OMR;IlGenRequest;~IlGenRequest();TR;IlGenRequest;1;0
OMR;IlGeneratorMethodDetails;IlGeneratorMethodDetails();TestCompiler;IlGeneratorMethodDetails;0;0
TestCompiler;IlGeneratorMethodDetails;IlGeneratorMethodDetails();TR;IlGeneratorMethodDetails;0;0
TestCompiler;IlGeneratorMethodDetails;IlGeneratorMethodDetails(class TR_ResolvedMethod *);TR;IlGeneratorMethodDetails;0;0
TestCompiler;IlGeneratorMethodDetails;IlGeneratorMethodDetails(TR::ResolvedMethod *);TR;IlGeneratorMethodDetails;0;0
OMR;IlGeneratorMethodDetails;print(class TR_FrontEnd *,TR::FILE *);TestCompiler;IlGeneratorMethodDetails;0;0
OMR;IlGeneratorMethodDetails;self();OMR;IlGeneratorMethodDetails;0;0
OMR;IlGeneratorMethodDetails;~IlGeneratorMethodDetails();TestCompiler;IlGeneratorMethodDetails;0;1
TestCompiler;IlGeneratorMethodDetails;~IlGeneratorMethodDetails();TR;IlGeneratorMethodDetails;0;1
TR;IlGenRequest;allowIlGenOptimizations();TR;InliningIlGenRequest;0;1
OMR;IlGenRequest;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *);TR;InliningIlGenRequest;0;1
TR;InliningIlGenRequest;getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *);TR;PartialInliningIlGenRequest;0;1
OMR;IlGenRequest;print(class TR_FrontEnd *,TR::FILE *,const char *);TR;InliningIlGenRequest;0;1
TR;InliningIlGenRequest;print(class TR_FrontEnd *,TR::FILE *,const char *);TR;PartialInliningIlGenRequest;0;1
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRSymbol.cpp
OMR;AutomaticSymbol;AutomaticSymbol(TR::DataType);TR;AutomaticSymbol;0;0
OMR;AutomaticSymbol;AutomaticSymbol(TR::DataType,uint32_t);TR;AutomaticSymbol;0;0
OMR;AutomaticSymbol;AutomaticSymbol(TR::DataType,uint32_t,const char *);TR;AutomaticSymbol;0;0
OMR;Symbol;getKind();OMR;AutomaticSymbol;0;0
OMR;Symbol;isReferenced();OMR;AutomaticSymbol;0;0
OMR;RegisterMappedSymbol;self();OMR;AutomaticSymbol;0;0
OMR;AutomaticSymbol;~AutomaticSymbol();TR;AutomaticSymbol;1;1
OMR;StaticSymbol;StaticSymbol(TR::DataType,uint32_t);TR;StaticSymbol;0;0
OMR;StaticSymbol;StaticSymbol(TR::DataType,void *);TR;StaticSymbol;0;0
OMR;StaticSymbol;StaticSymbol(TR::DataType);TR;StaticSymbol;0;0
OMR;Symbol;getName();OMR;StaticSymbol;0;0
OMR;Symbol;self();OMR;StaticSymbol;0;0
OMR;StaticSymbol;~StaticSymbol();TR;StaticSymbol;1;1
(Arch: AMD64): Compiling ../../../../compiler/il/OMRBlock.cpp
OMR;Optimization;optDetailString();;TR_Inliner;0;1
OMR;Optimization;perform();;TR_Inliner;0;1
OMR;TransformUtil;TransformUtil();TR;TransformUtil;0;0
;TR_Link;jitPersistentAlloc(size_t);;TR_DirectCallSite;0;0
;TR_Link;jitPersistentFree(void *);;TR_DirectCallSite;0;0
;TR_Link;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_DirectCallSite;0;0
;TR_Link;operator delete(void *,size_t);;TR_DirectCallSite;0;0
;TR_Link;operator delete(void *,TR::Region &);;TR_DirectCallSite;0;0
;TR_Link;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
;TR_Link;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
;TR_Link;operator delete[](void *,TR::Region &);;TR_DirectCallSite;0;0
;TR_Link;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
;TR_Link;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
;TR_Link;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_DirectCallSite;0;0
;TR_Link;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_DirectCallSite;0;0
;TR_Link;operator new(size_t,class TR_PersistentMemory *);;TR_DirectCallSite;0;0
;TR_Link;operator new(size_t,TR_ArenaAllocator *);;TR_DirectCallSite;0;0
;TR_Link;operator new(size_t,TR::Internal::PersistentNewType);;TR_DirectCallSite;0;0
;TR_Link;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
;TR_Link;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
;TR_Link;operator new(size_t,TR::Region &);;TR_DirectCallSite;0;0
;TR_Link;operator new[](size_t,TR::Internal::PersistentNewType);;TR_DirectCallSite;0;0
;TR_Link;operator new[](size_t,TR::Region &);;TR_DirectCallSite;0;0
;TR_Link;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
;TR_Link;operator new[](size_t,class TR_PersistentMemory *);;TR_DirectCallSite;0;0
;TR_Link;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DirectCallSite;0;0
;TR_Link;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_DirectCallSite;0;0
;TR_InlinerBase;inlineCallTargets(TR::ResolvedMethodSymbol *,class TR_CallStack *,class TR_InnerPreexistenceInfo *);;TR_DumbInliner;0;1
;TR_InlinerBase;inlineRecognizedMethod(TR::RecognizedMethod);;TR_InlineCall;0;1
;TR_Link;jitPersistentAlloc(size_t);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;jitPersistentAlloc(size_t);;TR_FunctionPointerCallSite;0;0
;TR_Link;jitPersistentFree(void *);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;jitPersistentFree(void *);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator delete(void *,size_t);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator delete(void *,size_t);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator delete(void *,TR::Region &);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator delete(void *,TR::Region &);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator delete[](void *,TR::Region &);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator delete[](void *,TR::Region &);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new(size_t,class TR_PersistentMemory *);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new(size_t,class TR_PersistentMemory *);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new(size_t,TR_ArenaAllocator *);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new(size_t,TR_ArenaAllocator *);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new(size_t,TR::Internal::PersistentNewType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new(size_t,TR::Internal::PersistentNewType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new(size_t,TR::Region &);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new(size_t,TR::Region &);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new[](size_t,TR::Internal::PersistentNewType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new[](size_t,TR::Internal::PersistentNewType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new[](size_t,TR::Region &);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new[](size_t,TR::Region &);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new[](size_t,class TR_PersistentMemory *);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new[](size_t,class TR_PersistentMemory *);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_FunctionPointerCallSite;0;0
;TR_Link;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_IndirectCallSite;0;0
;TR_IndirectCallSite;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_FunctionPointerCallSite;0;0
OMR;Optimization;optDetailString();;TR_TrivialInliner;0;1
OMR;Optimization;perform();;TR_TrivialInliner;0;1
(Arch: AMD64): Compiling ../../../../compiler/compile/OMRSymbolReferenceTable.cpp
(Arch: AMD64): Compiling ../../../../compiler/compile/OMRAliasBuilder.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRAutomaticSymbol.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRLabelSymbol.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRMethodSymbol.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRParameterSymbol.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRRegisterMappedSymbol.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRResolvedMethodSymbol.cpp
OMR::Z;Linkage;Linkage(TR::CodeGenerator *,enum TR_S390LinkageConventions,enum TR_LinkageConventions);TR;Linkage;0;0
OMR;Linkage;createEpilogue(TR::Instruction *);OMR::Z;Linkage;0;1
OMR;Linkage;createPrologue(TR::Instruction *);OMR::Z;Linkage;0;1
OMR;Linkage;getRegisterSaveSize();OMR::Z;Linkage;0;1
OMR;Linkage;getRightToLeft();OMR::Z;Linkage;0;1
OMR;Linkage;hasToBeOnStack(TR::ParameterSymbol *);OMR::Z;Linkage;0;1
OMR;Linkage;mapSingleAutomatic(TR::AutomaticSymbol *,uint32_t &);OMR::Z;Linkage;0;1
OMR;Linkage;mapStack(TR::ResolvedMethodSymbol *);OMR::Z;Linkage;0;1
OMR;Linkage;numArgumentRegisters(enum TR_RegisterKinds);OMR::Z;Linkage;0;1
OMR;Linkage;setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *,List<TR::ParameterSymbol> &);OMR::Z;Linkage;0;1
OMR;Linkage;setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *);OMR::Z;Linkage;0;1
OMR;Linkage;useCachedStaticAreaAddresses(TR::Compilation *);OMR::Z;Linkage;0;1
OMR;Linkage;~Linkage();OMR::Z;Linkage;1;0
OMR::Z;Linkage;~Linkage();TR;Linkage;1;0
OMR::Z;MemoryReference;MemoryReference(TR::Node *,_Bool,TR::CodeGenerator *);TR;MemoryReference;0;0
OMR::Z;MemoryReference;MemoryReference(TR::CodeGenerator *);TR;MemoryReference;0;0
OMR::Z;MemoryReference;MemoryReference(TR::Register *,int32_t,TR::CodeGenerator *,const char *);TR;MemoryReference;0;0
OMR::Z;MemoryReference;MemoryReference(TR::Node *,TR::CodeGenerator *,_Bool,class TR_StorageReference *);TR;MemoryReference;0;0
OMR::Z;MemoryReference;MemoryReference(TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *);TR;MemoryReference;0;0
OMR::Z;MemoryReference;MemoryReference(TR::Register *,TR::Register *,int32_t,TR::CodeGenerator *);TR;MemoryReference;0;0
OMR::Z;MemoryReference;MemoryReference(TR::Snippet *,TR::CodeGenerator *,TR::Register *,TR::Node *);TR;MemoryReference;0;0
OMR::Z;MemoryReference;MemoryReference(TR::Snippet *,TR::Register *,int32_t,TR::CodeGenerator *);TR;MemoryReference;0;0
OMR::Z;MemoryReference;MemoryReference(int32_t,TR::CodeGenerator *,_Bool);TR;MemoryReference;0;0
OMR::Z;MemoryReference;MemoryReference(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *,class TR_StorageReference *);TR;MemoryReference;0;0
OMR;MemoryReference;jitPersistentAlloc(size_t);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;jitPersistentFree(void *);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator delete(void *,size_t);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator delete(void *,TR::Region &);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator delete[](void *,TR::Region &);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new(size_t,TR_ArenaAllocator *);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new(size_t,TR::Internal::PersistentNewType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new(size_t,TR::Region &);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new(size_t,class TR_PersistentMemory *);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new[](size_t,TR::Region &);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new[](size_t,class TR_PersistentMemory *);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new[](size_t,TR::Internal::PersistentNewType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::Z;MemoryReference;0;0
OMR;MemoryReference;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR::Z;MemoryReference;0;0
OMR;RegisterDependencyConditions;RegisterDependencyConditions();OMR::Z;RegisterDependencyConditions;0;0
OMR::Z;RegisterDependencyConditions;RegisterDependencyConditions();TR;RegisterDependencyConditions;0;0
OMR::Z;RegisterDependencyConditions;RegisterDependencyConditions(uint16_t,uint16_t,TR::CodeGenerator *);TR;RegisterDependencyConditions;0;0
OMR::Z;RegisterDependencyConditions;RegisterDependencyConditions(TR::CodeGenerator *,TR::Node *,uint32_t,TR::Instruction **);TR;RegisterDependencyConditions;0;0
OMR::Z;RegisterDependencyConditions;RegisterDependencyConditions(class TR_S390RegisterDependencyGroup *,class TR_S390RegisterDependencyGroup *,uint16_t,uint16_t,TR::CodeGenerator *);TR;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;jitPersistentAlloc(size_t);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;jitPersistentFree(void *);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator delete(void *,TR::Region &);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator delete(void *,size_t);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator delete[](void *,TR::Region &);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new(size_t,TR_ArenaAllocator *);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new(size_t,class TR_PersistentMemory *);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new(size_t,TR::Region &);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new(size_t,TR::Internal::PersistentNewType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new[](size_t,class TR_PersistentMemory *);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new[](size_t,TR::Internal::PersistentNewType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new[](size_t,TR::Region &);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR::Z;RegisterDependencyConditions;0;0
OMR;RegisterDependencyConditions;~RegisterDependencyConditions();OMR::Z;RegisterDependencyConditions;1;0
OMR;Snippet;emitSnippetBody();TR;S390ConstantDataSnippet;0;1
TR;S390ConstantDataSnippet;emitSnippetBody();TR;S390ConstantInstructionSnippet;0;1
TR;S390ConstantDataSnippet;getConstantSize();TR;S390ConstantInstructionSnippet;0;1
TR;S390ConstantDataSnippet;getDataAs8Bytes();TR;S390ConstantInstructionSnippet;0;1
OMR::Z;Snippet;getKind();TR;S390ConstantDataSnippet;0;1
TR;S390ConstantDataSnippet;getKind();TR;S390ConstantInstructionSnippet;0;1
OMR;Snippet;getLength(int32_t);TR;S390ConstantDataSnippet;0;1
TR;S390ConstantDataSnippet;getLength(int32_t);TR;S390ConstantInstructionSnippet;0;1
TR;S390ConstantDataSnippet;emitSnippetBody();TR;S390EyeCatcherDataSnippet;0;1
TR;S390ConstantDataSnippet;getKind();TR;S390EyeCatcherDataSnippet;0;1
TR;S390ConstantDataSnippet;emitSnippetBody();TR;S390InterfaceCallDataSnippet;0;1
TR;S390ConstantDataSnippet;getKind();TR;S390InterfaceCallDataSnippet;0;1
TR;S390ConstantDataSnippet;getLength(int32_t);TR;S390InterfaceCallDataSnippet;0;1
TR;S390ConstantDataSnippet;emitSnippetBody();TR;S390JNICallDataSnippet;0;1
TR;S390ConstantDataSnippet;getKind();TR;S390JNICallDataSnippet;0;1
TR;S390ConstantDataSnippet;getLength(int32_t);TR;S390JNICallDataSnippet;0;1
OMR;Snippet;print(TR::FILE *,class TR_Debug *);TR;S390JNICallDataSnippet;0;1
TR;S390ConstantDataSnippet;emitSnippetBody();TR;S390LabelTableSnippet;0;1
TR;S390ConstantDataSnippet;getKind();TR;S390LabelTableSnippet;0;1
TR;S390ConstantDataSnippet;getLength(int32_t);TR;S390LabelTableSnippet;0;1
OMR;Snippet;emitSnippetBody();TR;S390TargetAddressSnippet;0;1
TR;S390TargetAddressSnippet;emitSnippetBody();TR;S390LookupSwitchSnippet;0;1
OMR::Z;Snippet;getKind();TR;S390TargetAddressSnippet;0;1
TR;S390TargetAddressSnippet;getKind();TR;S390LookupSwitchSnippet;0;1
OMR;Snippet;getLength(int32_t);TR;S390TargetAddressSnippet;0;1
TR;S390TargetAddressSnippet;getLength(int32_t);TR;S390LookupSwitchSnippet;0;1
TR;S390ConstantDataSnippet;getKind();TR;S390WritableDataSnippet;0;1
(Arch: AMD64): Compiling ../../../../compiler/il/symbol/OMRStaticSymbol.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRNode.cpp
OMR;Optimization;optDetailString();;TR_LoadExtensions;0;1
OMR;Optimization;perform();;TR_LoadExtensions;0;1
OMR::Z;Register;FlattenRegisterPairs(TR_Queue<TR::Register> *);OMR;RegisterPair;0;1
OMR;RegisterPair;RegisterPair();OMR::Z;RegisterPair;0;0
OMR::Z;RegisterPair;RegisterPair();TR;RegisterPair;0;0
OMR;RegisterPair;RegisterPair(enum TR_RegisterKinds);OMR::Z;RegisterPair;0;0
OMR::Z;RegisterPair;RegisterPair(enum TR_RegisterKinds);TR;RegisterPair;0;0
OMR;RegisterPair;RegisterPair(TR::Register *,TR::Register *);OMR::Z;RegisterPair;0;0
OMR::Z;RegisterPair;RegisterPair(TR::Register *,TR::Register *);TR;RegisterPair;0;0
OMR;Register;block();OMR;RegisterPair;0;1
OMR;Register;getHighOrder();OMR;RegisterPair;0;1
OMR;Register;getLowOrder();OMR;RegisterPair;0;1
OMR;Register;getRegister();OMR;RegisterPair;0;1
OMR;Register;getRegisterPair();OMR;RegisterPair;0;1
OMR;RegisterPair;setHighOrder(TR::Register *,TR::CodeGenerator *);OMR::Z;RegisterPair;0;0
OMR;RegisterPair;setLowOrder(TR::Register *,TR::CodeGenerator *);OMR::Z;RegisterPair;0;0
OMR;Register;unblock();OMR;RegisterPair;0;1
OMR::Z;Register;usesRegister(TR::Register *);OMR;RegisterPair;0;1
OMR;RegisterPair;~RegisterPair();OMR::Z;RegisterPair;1;0
OMR::Z;RegisterPair;~RegisterPair();TR;RegisterPair;1;0
;TR_ValueNumberInfo;allocateValueNumber(TR::Node *);;TR_HashValueNumberInfo;0;1
;TR_ValueNumberInfo;initializeNode(TR::Node *,int32_t &);;TR_HashValueNumberInfo;0;1
(Arch: AMD64): Compiling ../../../../compiler/il/NodePool.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/NodeUtils.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRIL.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRSymbolReference.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/Aliases.cpp
(Arch: AMD64): Compiling ../../../../compiler/compile/OMRCompilation.cpp
OMR;IL;IL();TR;IL;1;0
(Arch: AMD64): Compiling ../../../../compiler/compile/TLSCompilationManager.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRCPU.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRObjectModel.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRArithEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRClassEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRDebugEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRVMEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/SegmentProvider.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/SegmentAllocator.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/SystemSegmentProvider.cpp
TR;SegmentAllocator;allocationLimit();OMR;SystemSegmentProvider;0;1
TR;SegmentProvider;bytesAllocated();OMR;SystemSegmentProvider;0;1
TR;SegmentAllocator;regionBytesAllocated();OMR;SystemSegmentProvider;0;1
TR;SegmentProvider;release(TR::MemorySegment &);OMR;SystemSegmentProvider;0;1
TR;SegmentProvider;request(size_t);OMR;SystemSegmentProvider;0;1
TR;SegmentAllocator;setAllocationLimit(size_t);OMR;SystemSegmentProvider;0;1
TR;SegmentAllocator;systemBytesAllocated();OMR;SystemSegmentProvider;0;1
(Arch: AMD64): Compiling ../../../../compiler/env/DebugSegmentProvider.cpp
TR;SegmentAllocator;allocationLimit();TR;DebugSegmentProvider;0;1
TR;SegmentProvider;bytesAllocated();TR;DebugSegmentProvider;0;1
TR;SegmentAllocator;regionBytesAllocated();TR;DebugSegmentProvider;0;1
TR;SegmentProvider;release(TR::MemorySegment &);TR;DebugSegmentProvider;0;1
TR;SegmentProvider;request(size_t);TR;DebugSegmentProvider;0;1
TR;SegmentAllocator;setAllocationLimit(size_t);TR;DebugSegmentProvider;0;1
TR;SegmentAllocator;systemBytesAllocated();TR;DebugSegmentProvider;0;1
(Arch: AMD64): Compiling ../../../../compiler/env/Region.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/StackMemoryRegion.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRPersistentInfo.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/TRMemory.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/TRPersistentMemory.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/VerboseLog.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRDataTypes.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRTreeTop.cpp
(Arch: AMD64): Compiling ../../../../compiler/il/OMRILOps.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/CallStack.cpp
;TR_CallStackIterator;printStackBacktrace(TR::Compilation *);;TR_LinuxCallStackIterator;0;1
__cxxabiv1;__pbase_type_info;__pointer_catch(const class __cxxabiv1::__pbase_type_info *,void **,unsigned int);__cxxabiv1;__pointer_to_member_type_info;0;1
__cxxabiv1;__pbase_type_info;__pointer_catch(const class __cxxabiv1::__pbase_type_info *,void **,unsigned int);__cxxabiv1;__pointer_type_info;0;1
__cxxabiv1;__class_type_info;__do_dyncast(ptrdiff_t,enum __cxxabiv1::__class_type_info::__sub_kind,const class __cxxabiv1::__class_type_info *,const void *,const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__dyncast_result &);__cxxabiv1;__si_class_type_info;0;1
__cxxabiv1;__class_type_info;__do_find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *);__cxxabiv1;__si_class_type_info;0;1
__cxxabiv1;__class_type_info;__do_upcast(const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__upcast_result &__restrict);__cxxabiv1;__si_class_type_info;0;1
__cxxabiv1;__class_type_info;__do_dyncast(ptrdiff_t,enum __cxxabiv1::__class_type_info::__sub_kind,const class __cxxabiv1::__class_type_info *,const void *,const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__dyncast_result &);__cxxabiv1;__vmi_class_type_info;0;1
__cxxabiv1;__class_type_info;__do_find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *);__cxxabiv1;__vmi_class_type_info;0;1
__cxxabiv1;__class_type_info;__do_upcast(const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__upcast_result &__restrict);__cxxabiv1;__vmi_class_type_info;0;1
(Arch: AMD64): Compiling ../../../../compiler/ras/CFGChecker.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/Debug.cpp
OMR;GCRegisterMap;GCRegisterMap();TR;GCRegisterMap;0;0
OMR;GCRegisterMap;~GCRegisterMap();TR;GCRegisterMap;1;0
OMR;GCStackAtlas;GCStackAtlas(uint32_t,uint32_t,class TR_Memory *);TR;GCStackAtlas;0;0
OMR::Z;RegisterIterator;RegisterIterator(TR::Machine *,enum TR_RegisterKinds);TR;RegisterIterator;0;0
(Arch: AMD64): Compiling ../../../../compiler/ras/DebugCounter.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/IgnoreLocale.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/LimitFile.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/LogTracer.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/OptionsDebug.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/PPCOpNames.cpp
(Arch: AMD64): Compiling ../../../../compiler/ras/Tree.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/AsyncCheckInsertion.cpp
OMR;Optimization;optDetailString();;TR_AsyncCheckInsertion;0;1
OMR;Optimization;perform();;TR_AsyncCheckInsertion;0;1
OMR;Optimization;shouldPerform();;TR_AsyncCheckInsertion;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/BackwardBitVectorAnalysis.cpp
;TR_BackwardDFSetAnalysis;TR_BackwardDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardDFSetAnalysis;0;0
;TR_BackwardDFSetAnalysis;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_GlobalAnticipatability;0;1
;TR_BackwardDFSetAnalysis;analyzeNodeIfSuccessorsAnalyzed(class TR_RegionStructure *,class TR_BitVector &,class TR_BitVector &);;TR_BackwardDFSetAnalysis;0;0
;TR_BackwardDFSetAnalysis;analyzeRegionStructure(class TR_RegionStructure *,_Bool);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;canGenAndKillForStructure(class TR_Structure *);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;getKind();;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;initializeDFSetAnalysis();;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;initializeGenAndKillSetInfo(class TR_RegionStructure *,class TR_BitVector &,class TR_BitVector &,_Bool);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *);;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;initializeOutSetInfo();;TR_BackwardDFSetAnalysis;0;1
;TR_BackwardDFSetAnalysis;traceBBVA();;TR_BackwardDFSetAnalysis;0;0
;TR_BackwardDFSetAnalysis;~TR_BackwardDFSetAnalysis();;TR_BackwardDFSetAnalysis;1;1
;TR_BackwardDFSetAnalysis;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_Liveness;0;1
;TR_BackwardDFSetAnalysis;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_LiveOnAllPaths;0;1
;TR_BackwardDFSetAnalysis;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_RegisterAnticipatability;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/BackwardIntersectionBitVectorAnalysis.cpp
;TR_BackwardIntersectionDFSetAnalysis;getKind();;TR_BackwardIntersectionDFSetAnalysis;0;1
;TR_BackwardIntersectionDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_BackwardIntersectionDFSetAnalysis;0;1
;TR_BackwardIntersectionDFSetAnalysis;initializeOutSetInfo();;TR_BackwardIntersectionDFSetAnalysis;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/BackwardUnionBitVectorAnalysis.cpp
;TR_BackwardUnionDFSetAnalysis;TR_BackwardUnionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BackwardUnionDFSetAnalysis;0;0
;TR_BackwardUnionDFSetAnalysis;getKind();;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BackwardUnionDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BackwardUnionDFSetAnalysis;initializeOutSetInfo();;TR_BackwardUnionDFSetAnalysis;0;1
;TR_BackwardUnionDFSetAnalysis;~TR_BackwardUnionDFSetAnalysis();;TR_BackwardUnionDFSetAnalysis;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/BitVectorAnalysis.cpp
;TR_BasicDFSetAnalysis;TR_BasicDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;canGenAndKillForStructure(class TR_Structure *);;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;createAnalysisInfo();;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;doAnalysis(class TR_Structure *,_Bool);;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;getAnalysisInfo(class TR_Structure *);;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;getKind();;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initialize();;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;initializeBasicDFSetAnalysis();;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeBlockInfo(_Bool);;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;initializeDFSetAnalysis();;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfo();;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *);;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *);;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfoForStructure(class TR_Structure *);;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfoForStructures();;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfoPropertyForStructure(class TR_Structure *,_Bool);;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;performAnalysis(class TR_Structure *,_Bool);;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;supportsGenAndKillSets();;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;supportsGenAndKillSetsForStructures();;TR_BasicDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;traceBVA();;TR_BasicDFSetAnalysis;0;0
;TR_BasicDFSetAnalysis;~TR_BasicDFSetAnalysis();;TR_BasicDFSetAnalysis;1;1
;TR_ForwardDFSetAnalysis;TR_ForwardDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_ForwardDFSetAnalysis;0;0
;TR_ForwardDFSetAnalysis;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;analyzeBlockZeroStructure(class TR_BlockStructure *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;analyzeNodeIfPredecessorsAnalyzed(class TR_RegionStructure *,class TR_BitVector &);;TR_ForwardDFSetAnalysis;0;0
;TR_ForwardDFSetAnalysis;analyzeRegionStructure(class TR_RegionStructure *,_Bool);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;analyzeTreeTopsInBlockStructure(class TR_BlockStructure *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;canGenAndKillForStructure(class TR_Structure *);;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;compose(class TR_BitVector *,class TR_BitVector *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;compose(class TR_BitVector *,class TR_BitVector *);;TR_IntersectionBitVectorAnalysis;0;1
;TR_BasicDFSetAnalysis;compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;getKind();;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initialize();;TR_ForwardDFSetAnalysis;0;0
;TR_ForwardDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initializeDFSetAnalysis();;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initializeGenAndKillSetInfo(class TR_RegionStructure *,class TR_BitVector &);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;initializeInSetInfo();;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeInfo(class TR_BitVector *);;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;initializeInfo(class TR_SingleBitContainer *);;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;inverseCompose(class TR_BitVector *,class TR_BitVector *);;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *);;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;inverseInitializeInfo(class TR_SingleBitContainer *);;TR_ForwardDFSetAnalysis;0;1
;TR_BasicDFSetAnalysis;inverseInitializeInfo(class TR_BitVector *);;TR_ForwardDFSetAnalysis;0;1
;TR_ForwardDFSetAnalysis;~TR_ForwardDFSetAnalysis();;TR_ForwardDFSetAnalysis;1;1
;TR_ForwardDFSetAnalysis;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_Earliestness;0;1
;TR_ForwardDFSetAnalysis;analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *);;TR_RegisterAvailability;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/CatchBlockRemover.cpp
OMR;Optimization;optDetailString();;TR_CatchBlockRemover;0;1
OMR;Optimization;perform();;TR_CatchBlockRemover;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/CFGSimplifier.cpp
OMR;Optimization;optDetailString();;TR_CFGSimplifier;0;1
OMR;Optimization;perform();;TR_CFGSimplifier;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/CompactLocals.cpp
OMR;Optimization;optDetailString();;TR_CompactLocals;0;1
OMR;Optimization;perform();;TR_CompactLocals;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/CopyPropagation.cpp
OMR;Optimization;optDetailString();;TR_CopyPropagation;0;1
OMR;Optimization;perform();;TR_CopyPropagation;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DataFlowAnalysis.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DeadStoreElimination.cpp
;TR_IsolatedStoreElimination;create(TR::OptimizationManager *);;TR_DeadStoreElimination;0;0
OMR;Optimization;optDetailString();;TR_IsolatedStoreElimination;0;1
;TR_IsolatedStoreElimination;optDetailString();;TR_DeadStoreElimination;0;1
OMR;Optimization;perform();;TR_IsolatedStoreElimination;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DeadTreesElimination.cpp
OMR;Optimization;optDetailString();TR;DeadTreesElimination;0;1
OMR;Optimization;perform();TR;DeadTreesElimination;0;1
OMR;Optimization;performOnBlock(TR::Block *);TR;DeadTreesElimination;0;1
OMR;Optimization;prePerformOnBlocks();TR;DeadTreesElimination;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DebuggingCounters.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Delayedness.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Dominators.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DominatorVerifier.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/DominatorsChk.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Earliestness.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ExpressionsSimplification.cpp
OMR;Optimization;optDetailString();;TR_ExpressionsSimplification;0;1
OMR;Optimization;perform();;TR_ExpressionsSimplification;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/FieldPrivatizer.cpp
;TR_LoopTransformer;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);;TR_FieldPrivatizer;0;1
OMR;Optimization;optDetailString();;TR_FieldPrivatizer;0;1
OMR;Optimization;perform();;TR_LoopTransformer;0;1
;TR_LoopTransformer;perform();;TR_FieldPrivatizer;0;1
;TR_LoopTransformer;asLoopCanonicalizer();;TR_LoopCanonicalizer;0;1
;TR_LoopCanonicalizer;create(TR::OptimizationManager *);;TR_RedundantInductionVarElimination;0;0
;TR_LoopTransformer;examineTreeForInductionVariableUse(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t,TR::SymbolReference **);;TR_LoopCanonicalizer;0;1
OMR;Optimization;optDetailString();;TR_LoopCanonicalizer;0;1
;TR_LoopCanonicalizer;optDetailString();;TR_RedundantInductionVarElimination;0;1
;TR_LoopTransformer;perform();;TR_LoopCanonicalizer;0;1
;TR_LoopCanonicalizer;perform();;TR_RedundantInductionVarElimination;0;1
;TR_LoopTransformer;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);;TR_LoopInverter;0;1
OMR;Optimization;optDetailString();;TR_LoopInverter;0;1
;TR_LoopTransformer;perform();;TR_LoopInverter;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/GeneralLoopUnroller.cpp
OMR;Optimization;optDetailString();;TR_InductionVariableAnalysis;0;1
OMR;Optimization;perform();;TR_InductionVariableAnalysis;0;1
;TR_BasicInductionVariable;getExitValue();;TR_DerivedInductionVariable;0;1
;TR_BasicInductionVariable;getIterationCount();;TR_DerivedInductionVariable;0;1
;TR_BasicInductionVariable;jitPersistentAlloc(size_t);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;jitPersistentFree(void *);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,size_t);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,TR::Region &);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator delete[](void *,TR::Region &);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,TR_ArenaAllocator *);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,TR::Internal::PersistentNewType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,class TR_PersistentMemory *);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,TR::Region &);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,TR::Region &);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,TR::Internal::PersistentNewType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,class TR_PersistentMemory *);;TR_DerivedInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_DerivedInductionVariable;0;0
OMR;Optimization;optDetailString();;TR_GeneralLoopUnroller;0;1
;TR_LoopTransformer;perform();;TR_GeneralLoopUnroller;0;1
OMR;Optimization;optDetailString();;TR_IVTypeTransformer;0;1
;TR_LoopTransformer;perform();;TR_IVTypeTransformer;0;1
;TR_LoopTransformer;checkIfIncrementInDifferentExtendedBlock(TR::Block *,int32_t);;TR_LoopStrider;0;1
;TR_LoopTransformer;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);;TR_LoopStrider;0;1
;TR_LoopTransformer;examineTreeForInductionVariableUse(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t,TR::SymbolReference **);;TR_LoopStrider;0;1
;TR_LoopTransformer;isStoreInRequiredForm(int32_t,class TR_Structure *);;TR_LoopStrider;0;1
OMR;Optimization;optDetailString();;TR_LoopStrider;0;1
;TR_LoopTransformer;perform();;TR_LoopStrider;0;1
;TR_LoopTransformer;updateLoadUsedInLoopIncrement(TR::Node *,int32_t);;TR_LoopStrider;0;1
;TR_LoopTransformer;updateStoreInfo(int32_t,TR::TreeTop *);;TR_LoopStrider;0;1
;TR_BasicInductionVariable;getExitValue();;TR_PrimaryInductionVariable;0;1
;TR_BasicInductionVariable;getIterationCount();;TR_PrimaryInductionVariable;0;1
;TR_BasicInductionVariable;jitPersistentAlloc(size_t);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;jitPersistentFree(void *);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,size_t);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator delete(void *,TR::Region &);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator delete[](void *,TR::Region &);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,TR_ArenaAllocator *);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,TR::Internal::PersistentNewType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,class TR_PersistentMemory *);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,TR::Region &);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,TR::Region &);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,TR::Internal::PersistentNewType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,class TR_PersistentMemory *);;TR_PrimaryInductionVariable;0;0
;TR_BasicInductionVariable;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_PrimaryInductionVariable;0;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/GlobalAnticipatability.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/GlobalRegisterAllocator.cpp
OMR;Optimization;optDetailString();;TR_GlobalRegisterAllocator;0;1
OMR;Optimization;perform();;TR_GlobalRegisterAllocator;0;1
OMR;Optimization;optDetailString();;TR_LiveRangeSplitter;0;1
OMR;Optimization;perform();;TR_LiveRangeSplitter;0;1
;SuccessorIterator;getFirstSuccessor();;multipleJumpSuccessorIterator;0;1
;SuccessorIterator;getNextSuccessor();;multipleJumpSuccessorIterator;0;1
;SuccessorIterator;asSwitchSuccessor();;switchSuccessorIterator;0;1
;SuccessorIterator;getFirstSuccessor();;switchSuccessorIterator;0;1
;SuccessorIterator;getNextSuccessor();;switchSuccessorIterator;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Inliner.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RematTools.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/InductionVariable.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/IntersectionBitVectorAnalysis.cpp
;TR_IntersectionDFSetAnalysis;compose(class TR_BitVector *,class TR_BitVector *);;TR_IntersectionBitVectorAnalysis;0;1
;TR_IntersectionDFSetAnalysis;getKind();;TR_IntersectionDFSetAnalysis;0;1
;TR_IntersectionDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_IntersectionDFSetAnalysis;0;1
;TR_IntersectionDFSetAnalysis;initializeInSetInfo();;TR_IntersectionDFSetAnalysis;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Isolatedness.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/IsolatedStoreElimination.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Latestness.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LiveOnAllPaths.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LiveVariableInformation.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Liveness.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoadExtensions.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalAnalysis.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalAnticipatability.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalLiveRangeReducer.cpp
OMR;Optimization;optDetailString();;TR_LocalLiveRangeReduction;0;1
OMR;Optimization;perform();;TR_LocalLiveRangeReduction;0;1
OMR;Optimization;postPerformOnBlocks();;TR_LocalLiveRangeReduction;0;1
OMR;Optimization;prePerformOnBlocks();;TR_LocalLiveRangeReduction;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalReordering.cpp
OMR;Optimization;optDetailString();;TR_LocalReordering;0;1
OMR;Optimization;perform();;TR_LocalReordering;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_LocalReordering;0;1
OMR;Optimization;postPerformOnBlocks();;TR_LocalReordering;0;1
OMR;Optimization;prePerformOnBlocks();;TR_LocalReordering;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalTransparency.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoopCanonicalizer.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoopReducer.cpp
;TR_AddressTree;processBaseAndIndex(TR::Node *);;TR_LRAddressTree;0;1
;TR_LoopTransformer;asLoopReducer();;TR_LoopReducer;0;1
OMR;Optimization;optDetailString();;TR_LoopReducer;0;1
;TR_LoopTransformer;perform();;TR_LoopReducer;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoopReplicator.cpp
OMR;Optimization;optDetailString();;TR_LoopReplicator;0;1
;TR_LoopTransformer;perform();;TR_LoopReplicator;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LoopVersioner.cpp
;TR_LoopTransformer;asLoopVersioner();;TR_LoopVersioner;0;1
;TR_LoopVersioner;create(TR::OptimizationManager *);;TR_LoopSpecializer;0;0
;TR_LoopTransformer;detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t);;TR_LoopVersioner;0;1
;TR_LoopTransformer;isStoreInRequiredForm(int32_t,class TR_Structure *);;TR_LoopVersioner;0;1
OMR;Optimization;optDetailString();;TR_LoopVersioner;0;1
;TR_LoopVersioner;optDetailString();;TR_LoopSpecializer;0;1
;TR_LoopTransformer;perform();;TR_LoopVersioner;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRLocalCSE.cpp
OMR;LocalCSE;LocalCSE(TR::OptimizationManager *);TR;LocalCSE;0;0
OMR;Optimization;optDetailString();OMR;LocalCSE;0;1
OMR;Optimization;perform();OMR;LocalCSE;0;1
OMR;Optimization;performOnBlock(TR::Block *);OMR;LocalCSE;0;1
OMR;Optimization;postPerformOnBlocks();OMR;LocalCSE;0;1
OMR;Optimization;prePerformOnBlocks();OMR;LocalCSE;0;1
OMR;LocalCSE;~LocalCSE();TR;LocalCSE;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalDeadStoreElimination.cpp
OMR;Optimization;optDetailString();TR;LocalDeadStoreElimination;0;1
OMR;Optimization;perform();TR;LocalDeadStoreElimination;0;1
OMR;Optimization;performOnBlock(TR::Block *);TR;LocalDeadStoreElimination;0;1
OMR;Optimization;postPerformOnBlocks();TR;LocalDeadStoreElimination;0;1
OMR;Optimization;prePerformOnBlocks();TR;LocalDeadStoreElimination;0;1
OMR;Optimization;self();TR;LocalDeadStoreElimination;0;0
(Arch: AMD64): Compiling ../../../../compiler/optimizer/LocalOpts.cpp
OMR;Optimization;optDetailString();;TR_ArraysetStoreElimination;0;1
OMR;Optimization;perform();;TR_ArraysetStoreElimination;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_ArraysetStoreElimination;0;1
OMR;Optimization;optDetailString();;TR_CleanseTrees;0;1
OMR;Optimization;perform();;TR_CleanseTrees;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_CleanseTrees;0;1
OMR;Optimization;prePerformOnBlocks();;TR_CleanseTrees;0;1
OMR;Optimization;optDetailString();;TR_BlockShuffling;0;1
OMR;Optimization;perform();;TR_BlockShuffling;0;1
OMR;Optimization;optDetailString();;TR_BlockSplitter;0;1
OMR;Optimization;perform();;TR_BlockSplitter;0;1
;TR_Array;operator[](uint32_t);;TR_Array;0;0
OMR;Optimization;optDetailString();;TR_CheckcastAndProfiledGuardCoalescer;0;1
OMR;Optimization;perform();;TR_CheckcastAndProfiledGuardCoalescer;0;1
;TR_ColdBlockMarker;create(TR::OptimizationManager *);;TR_ColdBlockOutlining;0;0
OMR;Optimization;optDetailString();;TR_ColdBlockMarker;0;1
;TR_ColdBlockMarker;optDetailString();;TR_ColdBlockOutlining;0;1
OMR;Optimization;perform();;TR_ColdBlockMarker;0;1
;TR_ColdBlockMarker;perform();;TR_ColdBlockOutlining;0;1
OMR;Optimization;optDetailString();;TR_CompactNullChecks;0;1
OMR;Optimization;perform();;TR_CompactNullChecks;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_CompactNullChecks;0;1
OMR;Optimization;optDetailString();;TR_EliminateRedundantGotos;0;1
OMR;Optimization;perform();;TR_EliminateRedundantGotos;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_EliminateRedundantGotos;0;1
OMR;Optimization;optDetailString();;TR_ExtendBasicBlocks;0;1
OMR;Optimization;perform();;TR_ExtendBasicBlocks;0;1
OMR;Optimization;optDetailString();;TR_HoistBlocks;0;1
OMR;Optimization;perform();;TR_HoistBlocks;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_HoistBlocks;0;1
OMR;Optimization;optDetailString();;TR_InvariantArgumentPreexistence;0;1
OMR;Optimization;perform();;TR_InvariantArgumentPreexistence;0;1
;TR_Rematerialization;create(TR::OptimizationManager *);;TR_LongRegAllocation;0;0
OMR;Optimization;optDetailString();;TR_Rematerialization;0;1
;TR_Rematerialization;optDetailString();;TR_LongRegAllocation;0;1
OMR;Optimization;perform();;TR_Rematerialization;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_Rematerialization;0;1
OMR;Optimization;postPerformOnBlocks();;TR_LongRegAllocation;0;1
OMR;Optimization;prePerformOnBlocks();;TR_Rematerialization;0;1
OMR;Optimization;optDetailString();;TR_OrderBlocks;0;1
OMR;Optimization;perform();;TR_OrderBlocks;0;1
OMR;Optimization;shouldPerform();;TR_OrderBlocks;0;1
OMR;Optimization;optDetailString();;TR_PeepHoleBasicBlocks;0;1
OMR;Optimization;perform();;TR_PeepHoleBasicBlocks;0;1
OMR;Optimization;optDetailString();;TR_ProfiledNodeVersioning;0;1
OMR;Optimization;perform();;TR_ProfiledNodeVersioning;0;1
OMR;Optimization;optDetailString();;TR_SimplifyAnds;0;1
OMR;Optimization;perform();;TR_SimplifyAnds;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_SimplifyAnds;0;1
OMR;Optimization;optDetailString();;TR_TrivialBlockExtension;0;1
OMR;Optimization;perform();;TR_TrivialBlockExtension;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_TrivialBlockExtension;0;1
OMR;Optimization;optDetailString();;TR_TrivialDeadTreeRemoval;0;1
OMR;Optimization;perform();;TR_TrivialDeadTreeRemoval;0;1
OMR;Optimization;performOnBlock(TR::Block *);;TR_TrivialDeadTreeRemoval;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMROptimization.cpp
OMR;Simplifier;Simplifier(TR::OptimizationManager *);TR;Simplifier;0;0
OMR;Optimization;optDetailString();OMR;Simplifier;0;1
OMR;Optimization;perform();OMR;Simplifier;0;1
OMR;Optimization;performOnBlock(TR::Block *);OMR;Simplifier;0;1
OMR;Optimization;postPerformOnBlocks();OMR;Simplifier;0;1
OMR;Optimization;prePerformOnBlocks();OMR;Simplifier;0;1
OMR;Optimization;prepareToReplaceNode(TR::Node *);OMR;Simplifier;0;0
OMR;Simplifier;~Simplifier();TR;Simplifier;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMROptimizationManager.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRTransformUtil.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMROptimizer.cpp
;ListBase;jitPersistentAlloc(size_t);;List;0;0
;List;jitPersistentAlloc(size_t);;TR_OrderedBlockList;0;0
;ListBase;jitPersistentFree(void *);;List;0;0
;List;jitPersistentFree(void *);;TR_OrderedBlockList;0;0
;ListBase;operator delete(void *,TR::Region &);;List;0;0
;List;operator delete(void *,TR::Region &);;TR_OrderedBlockList;0;0
;ListBase;operator delete(void *,size_t);;List;0;0
;List;operator delete(void *,size_t);;TR_OrderedBlockList;0;0
;ListBase;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;List;0;0
;List;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
;ListBase;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;List;0;0
;List;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);;TR_OrderedBlockList;0;0
;ListBase;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;List;0;0
;List;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
;ListBase;operator delete[](void *,TR::Region &);;List;0;0
;List;operator delete[](void *,TR::Region &);;TR_OrderedBlockList;0;0
;ListBase;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;List;0;0
;List;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);;TR_OrderedBlockList;0;0
;ListBase;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;List;0;0
;List;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
;ListBase;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;List;0;0
;List;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
;ListBase;operator new(size_t,TR::Region &);;List;0;0
;List;operator new(size_t,TR::Region &);;TR_OrderedBlockList;0;0
;ListBase;operator new(size_t,class TR_PersistentMemory *);;List;0;0
;List;operator new(size_t,class TR_PersistentMemory *);;TR_OrderedBlockList;0;0
;ListBase;operator new(size_t,TR::Internal::PersistentNewType);;List;0;0
;List;operator new(size_t,TR::Internal::PersistentNewType);;TR_OrderedBlockList;0;0
;ListBase;operator new(size_t,TR_ArenaAllocator *);;List;0;0
;List;operator new(size_t,TR_ArenaAllocator *);;TR_OrderedBlockList;0;0
;ListBase;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;List;0;0
;List;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
;ListBase;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;List;0;0
;List;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
;ListBase;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;List;0;0
;List;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);;TR_OrderedBlockList;0;0
;ListBase;operator new[](size_t,TR::Internal::PersistentNewType);;List;0;0
;List;operator new[](size_t,TR::Internal::PersistentNewType);;TR_OrderedBlockList;0;0
;ListBase;operator new[](size_t,TR::Region &);;List;0;0
;List;operator new[](size_t,TR::Region &);;TR_OrderedBlockList;0;0
;ListBase;operator new[](size_t,class TR_PersistentMemory *);;List;0;0
;List;operator new[](size_t,class TR_PersistentMemory *);;TR_OrderedBlockList;0;0
;ListBase;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;List;0;0
;List;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
;ListBase;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;List;0;0
;List;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);;TR_OrderedBlockList;0;0
;ListBase;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;List;0;0
;List;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);;TR_OrderedBlockList;0;0
OMR;RecognizedCallTransformer;RecognizedCallTransformer(TR::OptimizationManager *);TR;RecognizedCallTransformer;0;0
OMR;Optimization;optDetailString();OMR;RecognizedCallTransformer;0;1
OMR;Optimization;perform();OMR;RecognizedCallTransformer;0;1
OMR;RecognizedCallTransformer;~RecognizedCallTransformer();TR;RecognizedCallTransformer;1;1
;TR_HedgeTreeHandler;allocate(int32_t);OMR::ValuePropagation;ValueConstraintHandler;0;1
;TR_HedgeTreeHandler;comp();OMR::ValuePropagation;ValueConstraintHandler;0;1
OMR;Optimization;optDetailString();TR;ArraycopyTransformation;0;1
OMR;Optimization;perform();TR;ArraycopyTransformation;0;1
OMR;ValuePropagation;ValuePropagation(TR::OptimizationManager *);TR;ValuePropagation;0;0
OMR;Optimization;optDetailString();TR;GlobalValuePropagation;0;1
OMR;Optimization;perform();TR;GlobalValuePropagation;0;1
OMR;ValuePropagation;~ValuePropagation();TR;ValuePropagation;1;1
OMR;Optimization;optDetailString();TR;LocalValuePropagation;0;1
OMR;Optimization;perform();TR;LocalValuePropagation;0;1
OMR;Optimization;performOnBlock(TR::Block *);TR;LocalValuePropagation;0;1
OMR;Optimization;postPerformOnBlocks();TR;LocalValuePropagation;0;1
OMR;Optimization;prePerformOnBlocks();TR;LocalValuePropagation;0;1
OMR;Optimization;optDetailString();TR;RegDepCopyRemoval;0;1
OMR;Optimization;perform();TR;RegDepCopyRemoval;0;1
;TR_DataFlowAnalysis;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_ExceptionCheckMotion;0;1
;TR_DataFlowAnalysis;analyzeRegionStructure(class TR_RegionStructure *,_Bool);;TR_ExceptionCheckMotion;0;1
;TR_DataFlowAnalysis;asExceptionCheckMotion();;TR_ExceptionCheckMotion;0;1
;TR_DataFlowAnalysis;getKind();;TR_ExceptionCheckMotion;0;1
;TR_DataFlowAnalysis;perform();;TR_ExceptionCheckMotion;0;1
;TR_DataFlowAnalysis;trace();;TR_ExceptionCheckMotion;0;0
OMR;Optimization;optDetailString();;TR_GeneralSinkStores;0;1
OMR;Optimization;perform();;TR_GeneralSinkStores;0;1
;TR_SinkStores;sinkStorePlacement(class TR_MovableStore *,_Bool);;TR_GeneralSinkStores;0;1
;TR_SinkStores;storeIsSinkingCandidate(TR::Block *,TR::Node *,int32_t,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t &,vcount_t &);;TR_GeneralSinkStores;0;1
OMR;Optimization;optDetailString();;TR_IndexExprManipulator;0;1
OMR;Optimization;perform();;TR_IndexExprManipulator;0;1
OMR;Optimization;optDetailString();;TR_InnerPreexistence;0;1
OMR;Optimization;perform();;TR_InnerPreexistence;0;1
OMR;Optimization;optDetailString();;TR_OSRDefAnalysis;0;1
OMR;Optimization;perform();;TR_OSRDefAnalysis;0;1
;TR_UseDefInfo;performAnalysis(class TR_UseDefInfo::AuxiliaryData &);;TR_OSRDefInfo;0;1
;TR_UseDefInfo;processReachingDefinition(void *,class TR_UseDefInfo::AuxiliaryData &);;TR_OSRDefInfo;0;1
OMR;Optimization;optDetailString();;TR_OSRExceptionEdgeRemoval;0;1
OMR;Optimization;perform();;TR_OSRExceptionEdgeRemoval;0;1
OMR;Optimization;optDetailString();;TR_OSRLiveRangeAnalysis;0;1
OMR;Optimization;perform();;TR_OSRLiveRangeAnalysis;0;1
OMR;Optimization;optDetailString();;TR_PartialRedundancy;0;1
OMR;Optimization;perform();;TR_PartialRedundancy;0;1
OMR;Optimization;optDetailString();;TR_PrefetchInsertion;0;1
;TR_LoopTransformer;perform();;TR_PrefetchInsertion;0;1
OMR;Optimization;optDetailString();;TR_RedundantAsyncCheckRemoval;0;1
OMR;Optimization;perform();;TR_RedundantAsyncCheckRemoval;0;1
OMR;Optimization;shouldPerform();;TR_RedundantAsyncCheckRemoval;0;1
;TR_ForwardDFSetAnalysis;analyzeBlockStructure(class TR_BlockStructure *,_Bool);;TR_RedundantExpressionAdjustment;0;1
;TR_DataFlowAnalysis;asRedundantExpressionAdjustment();;TR_RedundantExpressionAdjustment;0;1
;TR_IntersectionDFSetAnalysis;getKind();;TR_RedundantExpressionAdjustment;0;1
;TR_BasicDFSetAnalysis;getNumberOfBits();;TR_RedundantExpressionAdjustment;0;1
;TR_BasicDFSetAnalysis;initializeGenAndKillSetInfo();;TR_RedundantExpressionAdjustment;0;1
;TR_BasicDFSetAnalysis;postInitializationProcessing();;TR_RedundantExpressionAdjustment;0;1
;TR_BasicDFSetAnalysis;supportsGenAndKillSets();;TR_RedundantExpressionAdjustment;0;1
;TR_BasicDFSetAnalysis;supportsGenAndKillSetsForStructures();;TR_RedundantExpressionAdjustment;0;1
OMR;Optimization;optDetailString();;TR_ShrinkWrap;0;1
OMR;Optimization;perform();;TR_ShrinkWrap;0;1
OMR;Optimization;prePerformOnBlocks();;TR_ShrinkWrap;0;1
OMR;Optimization;optDetailString();;TR_StripMiner;0;1
;TR_LoopTransformer;perform();;TR_StripMiner;0;1
OMR;Optimization;shouldPerform();;TR_StripMiner;0;1
OMR;Optimization;optDetailString();;TR_TrivialSinkStores;0;1
OMR;Optimization;perform();;TR_TrivialSinkStores;0;1
;TR_SinkStores;sinkStorePlacement(class TR_MovableStore *,_Bool);;TR_TrivialSinkStores;0;1
;TR_SinkStores;storeIsSinkingCandidate(TR::Block *,TR::Node *,int32_t,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t &,vcount_t &);;TR_TrivialSinkStores;0;1
OMR;Optimization;optDetailString();;TR_VirtualGuardHeadMerger;0;1
OMR;Optimization;perform();;TR_VirtualGuardHeadMerger;0;1
OMR;Optimization;optDetailString();;TR_VirtualGuardTailSplitter;0;1
OMR;Optimization;perform();;TR_VirtualGuardTailSplitter;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OrderBlocks.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OSRDefAnalysis.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/PartialRedundancy.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/PreExistence.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/PrefetchInsertion.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Reachability.cpp
;TR_ReachabilityAnalysis;isOrigin(TR::Block *);;TR_CanReachGivenBlocks;0;1
;TR_ReachabilityAnalysis;propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);;TR_BackwardReachability;0;1
;TR_ReachabilityAnalysis;isOrigin(TR::Block *);;TR_CanBeReachedFromCatchBlock;0;1
;TR_ReachabilityAnalysis;propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);;TR_ForwardReachability;0;1
;TR_ReachabilityAnalysis;isOrigin(TR::Block *);;TR_CanBeReachedWithoutExceptionEdges;0;1
;TR_ReachabilityAnalysis;propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *);;TR_ForwardReachabilityWithoutExceptionEdges;0;1
;TR_ReachabilityAnalysis;isOrigin(TR::Block *);;TR_CanReachNonColdBlocks;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ReachingDefinitions.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRRecognizedCallTransformer.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RedundantAsyncCheckRemoval.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RegisterAnticipatability.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RegisterAvailability.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RegisterCandidate.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ShrinkWrapping.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRSimplifier.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRSimplifierHelpers.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRSimplifierHandlers.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/StructuralAnalysis.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/Structure.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/TranslateTable.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/UnionBitVectorAnalysis.cpp
;TR_UnionDFSetAnalysis;TR_UnionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool);;TR_UnionDFSetAnalysis;0;0
;TR_UnionDFSetAnalysis;getKind();;TR_UnionDFSetAnalysis;0;1
;TR_UnionDFSetAnalysis;initializeCurrentGenKillSetInfo();;TR_UnionDFSetAnalysis;0;1
;TR_UnionDFSetAnalysis;initializeInSetInfo();;TR_UnionDFSetAnalysis;0;1
;TR_UnionDFSetAnalysis;~TR_UnionDFSetAnalysis();;TR_UnionDFSetAnalysis;1;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/UseDefInfo.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ValueNumberInfo.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VirtualGuardCoalescer.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VirtualGuardHeadMerger.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/RegDepCopyRemoval.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ReorderIndexExpr.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/SinkStores.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/StripMiner.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VPConstraint.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VPHandlers.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/VPHandlersCommon.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/OMRValuePropagation.cpp
(Arch: AMD64): Compiling ../../../../compiler/optimizer/ValuePropagationCommon.cpp
;TR_Stats;report(FILE *);;TR_StatsHisto;0;0
;TR_Stats;reset();;TR_StatsHisto;0;0
;TR_Stats;update(double);;TR_StatsHisto;0;0
;TR_Stats;mean();;TR_StatsInterval;0;0
;TR_Stats;report(FILE *);;TR_StatsInterval;0;0
;TR_Stats;stddev();;TR_StatsInterval;0;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRAheadOfTimeCompile.cpp
OMR;AheadOfTimeCompile;AheadOfTimeCompile(uint32_t *,TR::Compilation *);TR;AheadOfTimeCompile;0;0
OMR;AheadOfTimeCompile;~AheadOfTimeCompile();TR;AheadOfTimeCompile;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/Analyser.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/CodeGenPrep.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/CodeGenGC.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/CodeGenRA.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/FrontEnd.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRGCRegisterMap.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRGCStackAtlas.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRLinkage.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/LiveRegister.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OutOfLineCodeSection.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/Relocation.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/ScratchRegisterManager.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/StorageInfo.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRTreeEvaluator.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/PreInstructionSelection.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/NodeEvaluation.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRSnippet.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRUnresolvedDataSnippet.cpp
OMR;UnresolvedDataSnippet;UnresolvedDataSnippet(TR::CodeGenerator *,TR::Node *,TR::SymbolReference *,_Bool,_Bool);TR;UnresolvedDataSnippet;0;0
OMR;Snippet;emitSnippetBody();OMR;UnresolvedDataSnippet;0;1
OMR;Snippet;getLength(int32_t);OMR;UnresolvedDataSnippet;0;1
OMR;Snippet;self();OMR;UnresolvedDataSnippet;0;0
OMR;UnresolvedDataSnippet;~UnresolvedDataSnippet();TR;UnresolvedDataSnippet;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRSnippetGCMap.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRCodeGenerator.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRCodeGenPhase.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRMemoryReference.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRMachine.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRRegister.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRRealRegister.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRRegisterPair.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRInstruction.cpp
(Arch: AMD64): Compiling ../../../../compiler/codegen/ELFObjectFileGenerator.cpp
OMR;CodeCacheConfig;CodeCacheConfig();TR;CodeCacheConfig;0;0
OMR;CodeCacheConfig;~CodeCacheConfig();TR;CodeCacheConfig;1;0
OMR;CodeCacheManager;CodeCacheManager(TR::RawAllocator);TestCompiler;CodeCacheManager;0;0
TestCompiler;CodeCacheManager;CodeCacheManager(TR::RawAllocator);TR;CodeCacheManager;0;0
OMR;CodeCacheManager;self();TestCompiler;CodeCacheManager;0;0
OMR;ELFRelocationResolver;ELFRelocationResolver();TR;ELFRelocationResolver;1;0
OMR;ELFRelocationResolver;~ELFRelocationResolver();TR;ELFRelocationResolver;1;0
(Arch: AMD64): Compiling ../../../../compiler/codegen/OMRELFRelocationResolver.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/BinaryAnalyser.cpp
OMR::Z;Instruction;description();TR;S390AnnotationInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390AnnotationInstruction;0;1
OMR::Z;Instruction;assignRegistersAndDependencies(enum TR_RegisterKinds);TR;S390BranchInstruction;0;1
OMR::Z;Instruction;description();TR;S390LabeledInstruction;0;1
TR;S390LabeledInstruction;description();TR;S390BranchInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390LabeledInstruction;0;1
TR;S390LabeledInstruction;estimateBinaryLength(int32_t);TR;S390BranchInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390LabeledInstruction;0;1
TR;S390LabeledInstruction;generateBinaryEncoding();TR;S390BranchInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390LabeledInstruction;0;1
TR;S390LabeledInstruction;getKind();TR;S390BranchInstruction;0;1
OMR;Instruction;getLabelSymbol();TR;S390LabeledInstruction;0;1
OMR;Instruction;getSnippetForGC();TR;S390BranchInstruction;0;1
TR;S390LabeledInstruction;description();TR;S390BranchOnCountInstruction;0;1
TR;S390LabeledInstruction;estimateBinaryLength(int32_t);TR;S390BranchOnCountInstruction;0;1
TR;S390LabeledInstruction;generateBinaryEncoding();TR;S390BranchOnCountInstruction;0;1
TR;S390LabeledInstruction;getKind();TR;S390BranchOnCountInstruction;0;1
OMR::Z;Instruction;refsRegister(TR::Register *);TR;S390BranchOnCountInstruction;0;1
TR;S390LabeledInstruction;description();TR;S390BranchOnIndexInstruction;0;1
TR;S390LabeledInstruction;estimateBinaryLength(int32_t);TR;S390BranchOnIndexInstruction;0;1
TR;S390LabeledInstruction;generateBinaryEncoding();TR;S390BranchOnIndexInstruction;0;1
TR;S390LabeledInstruction;getKind();TR;S390BranchOnIndexInstruction;0;1
OMR::Z;Instruction;refsRegister(TR::Register *);TR;S390BranchOnIndexInstruction;0;1
OMR::Z;Instruction;description();TR;S390PseudoInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390PseudoInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390PseudoInstruction;0;1
TR;S390PseudoInstruction;generateBinaryEncoding();TR;S390DebugCounterBumpInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390PseudoInstruction;0;1
OMR::Z;Instruction;description();TR;S390EInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390EInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390EInstruction;0;1
OMR::Z;Instruction;description();TR;S390IEInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390IEInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390IEInstruction;0;1
OMR::Z;Instruction;description();TR;S390IInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390IInstruction;0;1
OMR::Z;Instruction;description();TR;S390Imm2Instruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390Imm2Instruction;0;1
OMR::Z;Instruction;getKind();TR;S390Imm2Instruction;0;1
OMR::Z;Instruction;description();TR;S390ImmInstruction;0;1
TR;S390ImmInstruction;description();TR;S390ImmSnippetInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390ImmInstruction;0;1
TR;S390ImmInstruction;generateBinaryEncoding();TR;S390ImmSnippetInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390ImmInstruction;0;1
TR;S390ImmInstruction;getKind();TR;S390ImmSnippetInstruction;0;1
OMR::Z;Instruction;getS390ImmInstruction();TR;S390ImmInstruction;0;1
TR;S390ImmInstruction;description();TR;S390ImmSymInstruction;0;1
TR;S390ImmInstruction;generateBinaryEncoding();TR;S390ImmSymInstruction;0;1
TR;S390ImmInstruction;getKind();TR;S390ImmSymInstruction;0;1
OMR::Z;Instruction;assignRegistersAndDependencies(enum TR_RegisterKinds);TR;S390LabelInstruction;0;1
TR;S390LabeledInstruction;description();TR;S390LabelInstruction;0;1
TR;S390LabeledInstruction;estimateBinaryLength(int32_t);TR;S390LabelInstruction;0;1
TR;S390LabeledInstruction;generateBinaryEncoding();TR;S390LabelInstruction;0;1
TR;S390LabeledInstruction;getKind();TR;S390LabelInstruction;0;1
OMR::Z;Instruction;description();TR;S390MIIInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390MIIInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390MIIInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390MIIInstruction;0;1
OMR;Instruction;getLabelSymbol();TR;S390MIIInstruction;0;1
OMR::Z;Instruction;description();TR;S390MemInstruction;0;1
TR;S390MemInstruction;description();TR;S390MemMemInstruction;0;1
TR;S390MemMemInstruction;description();TR;S390SS1Instruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390MemMemInstruction;0;1
TR;S390MemMemInstruction;estimateBinaryLength(int32_t);TR;S390SS1Instruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390MemInstruction;0;1
TR;S390MemInstruction;generateBinaryEncoding();TR;S390MemMemInstruction;0;1
TR;S390MemMemInstruction;generateBinaryEncoding();TR;S390SS1Instruction;0;1
OMR::Z;Instruction;getKind();TR;S390MemInstruction;0;1
TR;S390MemInstruction;getKind();TR;S390MemMemInstruction;0;1
TR;S390MemMemInstruction;getKind();TR;S390SS1Instruction;0;1
OMR::Z;Instruction;getMemoryReference();TR;S390MemInstruction;0;1
OMR::Z;Instruction;getMemoryReference2();TR;S390MemMemInstruction;0;1
OMR::Z;Instruction;refsRegister(TR::Register *);TR;S390MemInstruction;0;1
OMR::Z;Instruction;description();TR;S390NOPInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390NOPInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390NOPInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390NOPInstruction;0;1
OMR::Z;Instruction;description();TR;S390OpCodeOnlyInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390OpCodeOnlyInstruction;0;1
OMR::Z;Instruction;description();TR;S390RegInstruction;0;1
TR;S390RegInstruction;description();TR;S390RIEInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390RIEInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390RegInstruction;0;1
TR;S390RegInstruction;generateBinaryEncoding();TR;S390RIEInstruction;0;1
TR;S390RegInstruction;getBranchCondition();TR;S390RIEInstruction;0;0
OMR::Z;Instruction;getKind();TR;S390RegInstruction;0;1
TR;S390RegInstruction;getKind();TR;S390RIEInstruction;0;1
OMR;Instruction;getLabelSymbol();TR;S390RIEInstruction;0;1
TR;S390RegInstruction;getMask();TR;S390RIEInstruction;0;0
OMR;Instruction;getSnippetForGC();TR;S390RIEInstruction;0;1
OMR::Z;Instruction;isRegInstruction();TR;S390RegInstruction;0;1
OMR::Z;Instruction;matchesTargetRegister(TR::Register *);TR;S390RegInstruction;0;1
OMR::Z;Instruction;refsRegister(TR::Register *);TR;S390RegInstruction;0;1
TR;S390RegInstruction;setBranchCondition(TR::class InstOpCode::S390BranchCondition);TR;S390RIEInstruction;0;0
TR;S390RegInstruction;description();TR;S390RIInstruction;0;1
TR;S390RIInstruction;description();TR;S390RISInstruction;0;1
TR;S390RegInstruction;generateBinaryEncoding();TR;S390RIInstruction;0;1
TR;S390RIInstruction;generateBinaryEncoding();TR;S390RISInstruction;0;1
TR;S390RegInstruction;getBranchCondition();TR;S390RISInstruction;0;0
TR;S390RegInstruction;getKind();TR;S390RIInstruction;0;1
TR;S390RIInstruction;getKind();TR;S390RISInstruction;0;1
TR;S390RegInstruction;getMask();TR;S390RISInstruction;0;0
TR;S390RegInstruction;setBranchCondition(TR::class InstOpCode::S390BranchCondition);TR;S390RISInstruction;0;0
OMR::Z;Instruction;description();TR;S390RILInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390RILInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390RILInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390RILInstruction;0;1
OMR::Z;Instruction;matchesTargetRegister(TR::Register *);TR;S390RILInstruction;0;1
OMR::Z;Instruction;refsRegister(TR::Register *);TR;S390RILInstruction;0;1
TR;S390RegInstruction;description();TR;S390RRInstruction;0;1
TR;S390RRInstruction;description();TR;S390RREInstruction;0;1
TR;S390RegInstruction;generateBinaryEncoding();TR;S390RRInstruction;0;1
TR;S390RegInstruction;getKind();TR;S390RRInstruction;0;1
TR;S390RRInstruction;getKind();TR;S390RREInstruction;0;1
TR;S390RegInstruction;refsRegister(TR::Register *);TR;S390RRInstruction;0;1
TR;S390RRInstruction;description();TR;S390RRFInstruction;0;1
TR;S390RRInstruction;generateBinaryEncoding();TR;S390RRFInstruction;0;1
TR;S390RRInstruction;getKind();TR;S390RRFInstruction;0;1
TR;S390RegInstruction;getMask();TR;S390RRFInstruction;0;0
TR;S390RRInstruction;refsRegister(TR::Register *);TR;S390RRFInstruction;0;1
TR;S390RRInstruction;description();TR;S390RRRInstruction;0;1
TR;S390RRInstruction;generateBinaryEncoding();TR;S390RRRInstruction;0;1
TR;S390RRInstruction;getKind();TR;S390RRRInstruction;0;1
TR;S390RRInstruction;refsRegister(TR::Register *);TR;S390RRRInstruction;0;1
TR;S390RRInstruction;description();TR;S390RRSInstruction;0;1
TR;S390RRInstruction;generateBinaryEncoding();TR;S390RRSInstruction;0;1
TR;S390RegInstruction;getBranchCondition();TR;S390RRSInstruction;0;0
TR;S390RRInstruction;getKind();TR;S390RRSInstruction;0;1
TR;S390RegInstruction;getMask();TR;S390RRSInstruction;0;0
TR;S390RegInstruction;setBranchCondition(TR::class InstOpCode::S390BranchCondition);TR;S390RRSInstruction;0;0
TR;S390RegInstruction;description();TR;S390RSInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390RSInstruction;0;1
TR;S390RegInstruction;generateBinaryEncoding();TR;S390RSInstruction;0;1
TR;S390RegInstruction;getFirstRegister();TR;S390RSInstruction;0;0
TR;S390RegInstruction;getKind();TR;S390RSInstruction;0;1
TR;S390RegInstruction;getLastRegister();TR;S390RSInstruction;0;0
OMR::Z;Instruction;getMemoryReference();TR;S390RSInstruction;0;1
OMR::Z;Instruction;setKind(enum OMR::Instruction::Kind);TR;S390RSInstruction;0;1
OMR::Z;Instruction;swap_operands(int,int);TR;S390RSWithImplicitPairStoresInstruction;0;0
TR;S390MemInstruction;description();TR;S390RSLInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390RSLInstruction;0;1
TR;S390MemInstruction;generateBinaryEncoding();TR;S390RSLInstruction;0;1
TR;S390MemInstruction;getKind();TR;S390RSLInstruction;0;1
TR;S390RegInstruction;description();TR;S390RSLbInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390RSLbInstruction;0;1
TR;S390RegInstruction;generateBinaryEncoding();TR;S390RSLbInstruction;0;1
TR;S390RegInstruction;getKind();TR;S390RSLbInstruction;0;1
TR;S390RegInstruction;getMask();TR;S390RSLbInstruction;0;0
OMR::Z;Instruction;getMemoryReference();TR;S390RSLbInstruction;0;1
TR;S390RSInstruction;description();TR;S390RSYInstruction;0;1
TR;S390RSInstruction;getKind();TR;S390RSYInstruction;0;1
TR;S390RegInstruction;description();TR;S390RXInstruction;0;1
TR;S390RXInstruction;description();TR;S390RXEInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390RXInstruction;0;1
TR;S390RXInstruction;estimateBinaryLength(int32_t);TR;S390RXEInstruction;0;1
TR;S390RegInstruction;generateBinaryEncoding();TR;S390RXInstruction;0;1
TR;S390RXInstruction;generateBinaryEncoding();TR;S390RXEInstruction;0;1
TR;S390RegInstruction;getKind();TR;S390RXInstruction;0;1
TR;S390RXInstruction;getKind();TR;S390RXEInstruction;0;1
OMR::Z;Instruction;getMemoryReference();TR;S390RXInstruction;0;1
TR;S390RegInstruction;refsRegister(TR::Register *);TR;S390RXInstruction;0;1
OMR::Z;Instruction;setKind(enum OMR::Instruction::Kind);TR;S390RXInstruction;0;1
TR;S390RRInstruction;description();TR;S390RXFInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390RXFInstruction;0;1
TR;S390RRInstruction;generateBinaryEncoding();TR;S390RXFInstruction;0;1
TR;S390RRInstruction;getKind();TR;S390RXFInstruction;0;1
OMR::Z;Instruction;getMemoryReference();TR;S390RXFInstruction;0;1
TR;S390RRInstruction;refsRegister(TR::Register *);TR;S390RXFInstruction;0;1
TR;S390RXInstruction;description();TR;S390RXYInstruction;0;1
TR;S390RXInstruction;estimateBinaryLength(int32_t);TR;S390RXYInstruction;0;1
TR;S390RXInstruction;generateBinaryEncoding();TR;S390RXYInstruction;0;1
TR;S390RXInstruction;getKind();TR;S390RXYInstruction;0;1
TR;S390MemInstruction;description();TR;S390RXYbInstruction;0;1
TR;S390MemInstruction;getKind();TR;S390RXYbInstruction;0;1
OMR::Z;Instruction;setKind(enum OMR::Instruction::Kind);TR;S390RXYbInstruction;0;1
TR;S390MemInstruction;description();TR;S390SIInstruction;0;1
TR;S390SIInstruction;description();TR;S390SIYInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390SIInstruction;0;1
TR;S390SIInstruction;estimateBinaryLength(int32_t);TR;S390SIYInstruction;0;1
TR;S390MemInstruction;generateBinaryEncoding();TR;S390SIInstruction;0;1
TR;S390SIInstruction;generateBinaryEncoding();TR;S390SIYInstruction;0;1
TR;S390MemInstruction;getKind();TR;S390SIInstruction;0;1
TR;S390SIInstruction;getKind();TR;S390SIYInstruction;0;1
OMR::Z;Instruction;setKind(enum OMR::Instruction::Kind);TR;S390SIInstruction;0;1
TR;S390MemInstruction;description();TR;S390SILInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390SILInstruction;0;1
TR;S390MemInstruction;generateBinaryEncoding();TR;S390SILInstruction;0;1
TR;S390MemInstruction;getKind();TR;S390SILInstruction;0;1
TR;S390MemInstruction;description();TR;S390SInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390SInstruction;0;1
TR;S390MemInstruction;generateBinaryEncoding();TR;S390SInstruction;0;1
TR;S390MemInstruction;getKind();TR;S390SInstruction;0;1
OMR::Z;Instruction;description();TR;S390SMIInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390SMIInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390SMIInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390SMIInstruction;0;1
OMR;Instruction;getLabelSymbol();TR;S390SMIInstruction;0;1
OMR::Z;Instruction;getMemoryReference();TR;S390SMIInstruction;0;1
TR;S390SS1Instruction;description();TR;S390SS2Instruction;0;1
TR;S390SS1Instruction;generateBinaryEncoding();TR;S390SS2Instruction;0;1
TR;S390SS1Instruction;getKind();TR;S390SS2Instruction;0;1
TR;S390SS1Instruction;description();TR;S390SS4Instruction;0;1
TR;S390SS1Instruction;generateBinaryEncoding();TR;S390SS4Instruction;0;1
TR;S390SS1Instruction;getKind();TR;S390SS4Instruction;0;1
TR;S390MemMemInstruction;description();TR;S390SSEInstruction;0;1
TR;S390MemMemInstruction;getKind();TR;S390SSEInstruction;0;1
TR;S390RXInstruction;description();TR;S390SSFInstruction;0;1
TR;S390RXInstruction;estimateBinaryLength(int32_t);TR;S390SSFInstruction;0;1
TR;S390RXInstruction;generateBinaryEncoding();TR;S390SSFInstruction;0;1
TR;S390RXInstruction;getKind();TR;S390SSFInstruction;0;1
OMR::Z;Instruction;getMemoryReference2();TR;S390SSFInstruction;0;1
TR;S390RXInstruction;refsRegister(TR::Register *);TR;S390SSFInstruction;0;1
OMR::Z;Instruction;description();TR;S390TranslateInstruction;0;1
OMR::Z;Instruction;generateBinaryEncoding();TR;S390TranslateInstruction;0;1
OMR::Z;Instruction;getKind();TR;S390TranslateInstruction;0;1
OMR::Z;Instruction;refsRegister(TR::Register *);TR;S390TranslateInstruction;0;1
TR;S390RegInstruction;description();TR;S390VInstruction;0;1
TR;S390VInstruction;description();TR;S390VRIInstruction;0;1
TR;S390VRIInstruction;description();TR;S390VRIaInstruction;0;1
OMR::Z;Instruction;estimateBinaryLength(int32_t);TR;S390VInstruction;0;1
TR;S390RegInstruction;generateBinaryEncoding();TR;S390VInstruction;0;1
TR;S390VInstruction;generateBinaryEncoding();TR;S390VRIInstruction;0;1
TR;S390VRIInstruction;generateBinaryEncoding();TR;S390VRIaInstruction;0;1
TR;S390VInstruction;getExtendedMnemonicName();TR;S390VRIInstruction;0;1
TR;S390RegInstruction;getKind();TR;S390VInstruction;0;1
TR;S390VInstruction;getKind();TR;S390VRIInstruction;0;1
TR;S390VRIInstruction;getKind();TR;S390VRIaInstruction;0;1
TR;S390VRIInstruction;description();TR;S390VRIbInstruction;0;1
TR;S390VRIInstruction;generateBinaryEncoding();TR;S390VRIbInstruction;0;1
TR;S390VRIInstruction;getKind();TR;S390VRIbInstruction;0;1
TR;S390VRIInstruction;description();TR;S390VRIcInstruction;0;1
TR;S390VRIInstruction;generateBinaryEncoding();TR;S390VRIcInstruction;0;1
TR;S390VRIInstruction;getKind();TR;S390VRIcInstruction;0;1
TR;S390VRIInstruction;description();TR;S390VRIdInstruction;0;1
TR;S390VRIInstruction;generateBinaryEncoding();TR;S390VRIdInstruction;0;1
TR;S390VRIInstruction;getKind();TR;S390VRIdInstruction;0;1
TR;S390VRIInstruction;description();TR;S390VRIeInstruction;0;1
TR;S390VRIInstruction;generateBinaryEncoding();TR;S390VRIeInstruction;0;1
TR;S390VRIInstruction;getKind();TR;S390VRIeInstruction;0;1
TR;S390VRIInstruction;description();TR;S390VRIfInstruction;0;1
TR;S390VRIInstruction;generateBinaryEncoding();TR;S390VRIfInstruction;0;1
TR;S390VRIInstruction;getKind();TR;S390VRIfInstruction;0;1
TR;S390VRIInstruction;description();TR;S390VRIgInstruction;0;1
TR;S390VRIInstruction;generateBinaryEncoding();TR;S390VRIgInstruction;0;1
TR;S390VRIInstruction;getKind();TR;S390VRIgInstruction;0;1
TR;S390VRIInstruction;description();TR;S390VRIhInstruction;0;1
TR;S390VRIInstruction;generateBinaryEncoding();TR;S390VRIhInstruction;0;1
TR;S390VRIInstruction;getKind();TR;S390VRIhInstruction;0;1
TR;S390VRIInstruction;description();TR;S390VRIiInstruction;0;1
TR;S390VRIInstruction;generateBinaryEncoding();TR;S390VRIiInstruction;0;1
TR;S390VRIInstruction;getKind();TR;S390VRIiInstruction;0;1
TR;S390VInstruction;description();TR;S390VRRInstruction;0;1
TR;S390VRRInstruction;description();TR;S390VRRaInstruction;0;1
TR;S390VInstruction;generateBinaryEncoding();TR;S390VRRInstruction;0;1
TR;S390VRRInstruction;generateBinaryEncoding();TR;S390VRRaInstruction;0;1
TR;S390VInstruction;getExtendedMnemonicName();TR;S390VRRInstruction;0;1
TR;S390VInstruction;getKind();TR;S390VRRInstruction;0;1
TR;S390VRRInstruction;getKind();TR;S390VRRaInstruction;0;1
TR;S390VRRInstruction;description();TR;S390VRRbInstruction;0;1
TR;S390VRRInstruction;generateBinaryEncoding();TR;S390VRRbInstruction;0;1
TR;S390VRRInstruction;getKind();TR;S390VRRbInstruction;0;1
TR;S390VRRInstruction;description();TR;S390VRRcInstruction;0;1
TR;S390VRRInstruction;generateBinaryEncoding();TR;S390VRRcInstruction;0;1
TR;S390VRRInstruction;getKind();TR;S390VRRcInstruction;0;1
TR;S390VRRInstruction;description();TR;S390VRRdInstruction;0;1
TR;S390VRRInstruction;generateBinaryEncoding();TR;S390VRRdInstruction;0;1
TR;S390VRRInstruction;getKind();TR;S390VRRdInstruction;0;1
TR;S390VRRInstruction;description();TR;S390VRReInstruction;0;1
TR;S390VRRInstruction;generateBinaryEncoding();TR;S390VRReInstruction;0;1
TR;S390VRRInstruction;getKind();TR;S390VRReInstruction;0;1
TR;S390VRRInstruction;description();TR;S390VRRfInstruction;0;1
TR;S390VRRInstruction;generateBinaryEncoding();TR;S390VRRfInstruction;0;1
TR;S390VRRInstruction;getKind();TR;S390VRRfInstruction;0;1
TR;S390VRRInstruction;description();TR;S390VRRgInstruction;0;1
TR;S390VRRInstruction;generateBinaryEncoding();TR;S390VRRgInstruction;0;1
TR;S390VRRInstruction;getKind();TR;S390VRRgInstruction;0;1
TR;S390VRRInstruction;description();TR;S390VRRhInstruction;0;1
TR;S390VRRInstruction;generateBinaryEncoding();TR;S390VRRhInstruction;0;1
TR;S390VRRInstruction;getKind();TR;S390VRRhInstruction;0;1
TR;S390VRRInstruction;description();TR;S390VRRiInstruction;0;1
TR;S390VRRInstruction;generateBinaryEncoding();TR;S390VRRiInstruction;0;1
TR;S390VRRInstruction;getKind();TR;S390VRRiInstruction;0;1
TR;S390RegInstruction;getFirstRegister();TR;S390VRSInstruction;0;0
TR;S390RegInstruction;getLastRegister();TR;S390VRSInstruction;0;0
TR;S390VInstruction;description();TR;S390VStorageInstruction;0;1
TR;S390VStorageInstruction;description();TR;S390VRSaInstruction;0;1
TR;S390VInstruction;estimateBinaryLength(int32_t);TR;S390VStorageInstruction;0;1
TR;S390VInstruction;generateBinaryEncoding();TR;S390VStorageInstruction;0;1
TR;S390VInstruction;getExtendedMnemonicName();TR;S390VStorageInstruction;0;1
TR;S390VInstruction;getKind();TR;S390VStorageInstruction;0;1
TR;S390VStorageInstruction;getKind();TR;S390VRSaInstruction;0;1
OMR::Z;Instruction;getMemoryReference();TR;S390VStorageInstruction;0;1
TR;S390VStorageInstruction;description();TR;S390VRSbInstruction;0;1
TR;S390VStorageInstruction;getKind();TR;S390VRSbInstruction;0;1
TR;S390VStorageInstruction;description();TR;S390VRScInstruction;0;1
TR;S390VStorageInstruction;getKind();TR;S390VRScInstruction;0;1
TR;S390VStorageInstruction;description();TR;S390VRSdInstruction;0;1
TR;S390VStorageInstruction;generateBinaryEncoding();TR;S390VRSdInstruction;0;1
TR;S390VStorageInstruction;getKind();TR;S390VRSdInstruction;0;1
TR;S390VStorageInstruction;generateBinaryEncoding();TR;S390VRVInstruction;0;1
TR;S390VStorageInstruction;getKind();TR;S390VRVInstruction;0;1
TR;S390VStorageInstruction;getKind();TR;S390VRXInstruction;0;1
TR;S390VStorageInstruction;description();TR;S390VSIInstruction;0;1
TR;S390VStorageInstruction;generateBinaryEncoding();TR;S390VSIInstruction;0;1
TR;S390VStorageInstruction;getKind();TR;S390VSIInstruction;0;1
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/BinaryCommutativeAnalyser.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/BinaryEvaluator.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/CallSnippet.cpp
OMR;Snippet;emitSnippetBody();TR;S390CallSnippet;0;1
OMR::Z;Snippet;getKind();TR;S390CallSnippet;0;1
OMR;Snippet;getLength(int32_t);TR;S390CallSnippet;0;1
OMR::Z;Snippet;isCallSnippet();TR;S390CallSnippet;0;1
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/CompareAnalyser.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/ConstantDataSnippet.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/ControlFlowEvaluator.cpp
OMR;Snippet;emitSnippetBody();TR;S390HelperCallSnippet;0;1
OMR::Z;Snippet;getKind();TR;S390HelperCallSnippet;0;1
OMR;Snippet;getLength(int32_t);TR;S390HelperCallSnippet;0;1
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/FPTreeEvaluator.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRMemoryReference.cpp
OMR;MemoryReference;~MemoryReference();OMR::Z;MemoryReference;1;0
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OpMemToMem.cpp
;MemToMemMacroOp;generateDependencies();;BitOpMemConstLenMacroOp;0;1
;MemToMemMacroOp;generateLoop();;MemToMemConstLenMacroOp;0;1
;MemToMemMacroOp;generateRemainder();;MemToMemConstLenMacroOp;0;1
;MemToMemMacroOp;generateDependencies();;BitOpMemVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;generateInstruction(int32_t,int64_t);;BitOpMemVarLenMacroOp;0;1
;MemToMemMacroOp;generateLoop();;MemToMemVarLenMacroOp;0;1
;MemToMemMacroOp;generateRemainder();;MemToMemVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelper();;BitOpMemVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelperSymRef();;BitOpMemVarLenMacroOp;0;1
;MemToMemMacroOp;getKind();;BitOpMemVarLenMacroOp;0;1
;MemToMemMacroOp;generateDependencies();;MemClearConstLenMacroOp;0;1
;MemToMemConstLenMacroOp;generateInstruction(int32_t,int64_t,TR::Instruction *);;MemClearConstLenMacroOp;0;1
;MemToMemMacroOp;generateDependencies();;MemClearVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;generateInstruction(int32_t,int64_t);;MemClearVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;generateRemainder();;MemClearVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelper();;MemClearVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelperSymRef();;MemClearVarLenMacroOp;0;1
;MemToMemMacroOp;getKind();;MemClearVarLenMacroOp;0;1
;MemToMemMacroOp;generate(TR::Register *,TR::Register *);;MemCmpConstLenMacroOp;0;1
;MemCmpConstLenMacroOp;generate(TR::Register *,TR::Register *);;MemCmpConstLenSignMacroOp;0;1
;MemCmpConstLenMacroOp;generate(TR::Register *,TR::Register *,TR::Register *,int32_t,TR::Instruction *);;MemCmpConstLenSignMacroOp;0;1
;MemToMemMacroOp;generateDependencies();;MemCmpConstLenMacroOp;0;1
;MemToMemConstLenMacroOp;generateInstruction(int32_t,int64_t,TR::Instruction *);;MemCmpConstLenMacroOp;0;1
;MemToMemMacroOp;generate(TR::Register *,TR::Register *);;MemCmpVarLenMacroOp;0;1
;MemCmpVarLenMacroOp;generate(TR::Register *,TR::Register *);;MemCmpVarLenSignMacroOp;0;1
;MemCmpVarLenMacroOp;generate(TR::Register *,TR::Register *,TR::Register *,int32_t,TR::Instruction *);;MemCmpVarLenSignMacroOp;0;1
;MemToMemMacroOp;generateDependencies();;MemCmpVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;generateInstruction(int32_t,int64_t);;MemCmpVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelper();;MemCmpVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelperSymRef();;MemCmpVarLenMacroOp;0;1
;MemToMemMacroOp;getKind();;MemCmpVarLenMacroOp;0;1
;MemCmpVarLenMacroOp;getKind();;MemCmpVarLenSignMacroOp;0;1
;MemToMemTypedMacroOp;createLoopDependencies(TR::Instruction *);;MemCpyAtomicMacroOp;0;1
;MemToMemTypedVarLenMacroOp;generateInstruction();;MemCpyAtomicMacroOp;0;1
;MemToMemTypedMacroOp;generateLoop();;MemToMemTypedVarLenMacroOp;0;1
;MemToMemTypedVarLenMacroOp;generateLoop();;MemCpyAtomicMacroOp;0;1
;MemToMemMacroOp;generateDependencies();;MemCpyConstLenMacroOp;0;1
;MemToMemMacroOp;generateDependencies();;MemCpyVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;generateInstruction(int32_t,int64_t);;MemCpyVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelper();;MemCpyVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelperSymRef();;MemCpyVarLenMacroOp;0;1
;MemToMemMacroOp;getKind();;MemCpyVarLenMacroOp;0;1
;MemToMemTypedMacroOp;createLoopDependencies(TR::Instruction *);;MemCpyVarLenTypedMacroOp;0;1
;MemToMemTypedVarLenMacroOp;generateInstruction();;MemCpyVarLenTypedMacroOp;0;1
;MemToMemMacroOp;generateDependencies();;MemInitConstLenMacroOp;0;1
;MemToMemConstLenMacroOp;generateInstruction(int32_t,int64_t,TR::Instruction *);;MemInitConstLenMacroOp;0;1
;MemToMemConstLenMacroOp;generateLoop();;MemInitConstLenMacroOp;0;1
;MemToMemConstLenMacroOp;generateRemainder();;MemInitConstLenMacroOp;0;1
;MemToMemMacroOp;generateDependencies();;MemInitVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;generateInstruction(int32_t,int64_t);;MemInitVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;generateRemainder();;MemInitVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelper();;MemInitVarLenMacroOp;0;1
;MemToMemVarLenMacroOp;getHelperSymRef();;MemInitVarLenMacroOp;0;1
;MemToMemMacroOp;getKind();;MemInitVarLenMacroOp;0;1
;MemToMemTypedMacroOp;createLoopDependencies(TR::Instruction *);;MemInitVarLenTypedMacroOp;0;1
;MemToMemTypedVarLenMacroOp;generateInstruction();;MemInitVarLenTypedMacroOp;0;1
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRMachine.cpp
OMR::Z;Linkage;buildDirectDispatch(TR::Node *);TR;S390SystemLinkage;0;1
OMR::Z;Linkage;buildIndirectDispatch(TR::Node *);TR;S390SystemLinkage;0;1
TR;S390SystemLinkage;callNativeFunction(TR::Node *,TR::RegisterDependencyConditions *,intptrj_t,TR::Register *,TR::Register *,TR::LabelSymbol *,TR::S390JNICallDataSnippet *,_Bool);TR;S390zLinuxSystemLinkage;0;1
OMR::Z;Linkage;canDataTypeBePassedByReference(TR::DataType);TR;S390zLinuxSystemLinkage;0;1
TR;S390SystemLinkage;checkLeafRoutine(int32_t,TR::Instruction **);TR;S390zLinuxSystemLinkage;0;1
OMR::Z;Linkage;createEpilogue(TR::Instruction *);TR;S390SystemLinkage;0;1
OMR::Z;Linkage;createPrologue(TR::Instruction *);TR;S390SystemLinkage;0;1
TR;S390SystemLinkage;generateInstructionsForCall(TR::Node *,TR::RegisterDependencyConditions *,intptrj_t,TR::Register *,TR::Register *,TR::LabelSymbol *,TR::S390JNICallDataSnippet *,_Bool);TR;S390zLinuxSystemLinkage;0;1
OMR::Z;Linkage;getNormalStackPointerRealRegister();TR;S390SystemLinkage;0;1
OMR::Z;Linkage;getNormalStackPointerRegister();TR;S390SystemLinkage;0;1
TR;S390SystemLinkage;getRegisterSaveOffset(TR::class RealRegister::RegNum);TR;S390zLinuxSystemLinkage;0;1
OMR::Z;Linkage;hasToBeOnStack(TR::ParameterSymbol *);TR;S390SystemLinkage;0;1
TR;S390SystemLinkage;initParamOffset(TR::ResolvedMethodSymbol *,int32_t,List<TR::ParameterSymbol> *);TR;S390zLinuxSystemLinkage;0;1
OMR::Z;Linkage;initS390RealRegisterLinkage();TR;S390SystemLinkage;0;1
OMR::Z;Linkage;isSymbolPassedByReference(TR::Symbol *);TR;S390zLinuxSystemLinkage;0;1
OMR::Z;Linkage;mapSingleAutomatic(TR::AutomaticSymbol *,uint32_t &);TR;S390SystemLinkage;0;1
OMR::Z;Linkage;mapStack(TR::ResolvedMethodSymbol *);TR;S390SystemLinkage;0;1
OMR;Linkage;self();TR;S390SystemLinkage;0;0
TR;S390SystemLinkage;callNativeFunction(TR::Node *,TR::RegisterDependencyConditions *,intptrj_t,TR::Register *,TR::Register *,TR::LabelSymbol *,TR::S390JNICallDataSnippet *,_Bool);TR;S390zOSSystemLinkage;0;1
TR;S390SystemLinkage;generateInstructionsForCall(TR::Node *,TR::RegisterDependencyConditions *,intptrj_t,TR::Register *,TR::Register *,TR::LabelSymbol *,TR::S390JNICallDataSnippet *,_Bool);TR;S390zOSSystemLinkage;0;1
OMR::Z;Linkage;getCAAPointerRegister();TR::Z;ZOSBaseSystemLinkage;0;1
OMR::Z;Linkage;getEnvironmentPointerRegister();TR;S390zOSSystemLinkage;0;1
OMR::Z;Linkage;getFrameType();TR;S390zOSSystemLinkage;0;0
OMR::Z;Linkage;getIsLeafRoutine();TR;S390zOSSystemLinkage;0;1
OMR::Z;Linkage;getOutgoingParameterBlockSize();TR;S390zOSSystemLinkage;0;1
OMR::Z;Linkage;getParentDSAPointerRegister();TR::Z;ZOSBaseSystemLinkage;0;1
TR;S390SystemLinkage;getRegisterSaveOffset(TR::class RealRegister::RegNum);TR;S390zOSSystemLinkage;0;1
OMR::Z;Linkage;isAggregateReturnedInIntRegisters(int32_t);TR::Z;ZOSBaseSystemLinkage;0;1
TR::Z;ZOSBaseSystemLinkage;isAggregateReturnedInIntRegisters(int32_t);TR;S390zOSSystemLinkage;0;1
OMR::Z;Linkage;isAggregateReturnedInIntRegistersAndMemory(int32_t);TR::Z;ZOSBaseSystemLinkage;0;1
OMR::Z;Linkage;isCAASpecialArgumentRegister(int8_t);TR;S390zOSSystemLinkage;0;1
OMR::Z;Linkage;isEnvironmentSpecialArgumentRegister(int8_t);TR;S390zOSSystemLinkage;0;1
OMR::Z;Linkage;isParentDSASpecialArgumentRegister(int8_t);TR;S390zOSSystemLinkage;0;1
OMR;Linkage;isSpecialNonVolatileArgumentRegister(int8_t);TR;S390zOSSystemLinkage;0;1
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/S390BranchCondNames.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/S390Debug.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/S390GenerateInstructions.cpp
OMR;Snippet;emitSnippetBody();TR;S390RestoreGPR7Snippet;0;1
OMR::Z;Snippet;getKind();TR;S390RestoreGPR7Snippet;0;1
OMR;Snippet;getLength(int32_t);TR;S390RestoreGPR7Snippet;0;1
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/S390HelperCallSnippet.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/S390Instruction.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRLinkage.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/SystemLinkage.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/S390OutOfLineCodeSection.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRRegisterDependency.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRSnippet.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/S390Snippets.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/TranslateEvaluator.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRTreeEvaluator.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/UnaryEvaluator.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRInstruction.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/InstOpCode.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/InstOpCodeTables.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRRegister.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRRealRegister.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRRegisterIterator.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRRegisterPair.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRCodeGenPhase.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/codegen/OMRCodeGenerator.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/BinaryOpIlInjector.cpp
OMR;CodeCache;CodeCache();TR;CodeCache;0;0
OMR;CodeCacheManager;~CodeCacheManager();TestCompiler;CodeCacheManager;1;0
TestCompiler;CodeCacheManager;~CodeCacheManager();TR;CodeCacheManager;1;0
TestCompiler;FrontEnd;FrontEnd();TR;FrontEnd;0;0
;TR_FrontEnd;allocateCodeMemory(TR::Compilation *,uint32_t,uint32_t,uint8_t **,_Bool);TR;FEBase;0;1
;TR_FrontEnd;allocateRelocationData(TR::Compilation *,uint32_t);TR;FEBase;0;1
;TR_FrontEnd;createDebug(TR::Compilation *);TR;FECommon;0;1
;TR_FrontEnd;createResolvedMethod(class TR_Memory *,class TR_OpaqueMethodBlock *,class TR_ResolvedMethod *,class TR_OpaqueClassBlock *);TestCompiler;FrontEnd;0;1
;TR_FrontEnd;generateBinaryEncodingPrologue(struct TR_BinaryEncodingData *,TR::CodeGenerator *);TestCompiler;FrontEnd;0;1
;TR_FrontEnd;getClassFromSignature(const char *,int32_t,class TR_ResolvedMethod *,_Bool);TR;FECommon;0;1
;TR_FrontEnd;getClassFromSignature(const char *,int32_t,class TR_OpaqueMethodBlock *,_Bool);TR;FECommon;0;1
;TR_FrontEnd;getDesignatedCodeCache(TR::Compilation *);TR;FEBase;0;1
;TR_FrontEnd;getOffsetOfIndexableSizeField();TR;FECommon;0;1
;TR_FrontEnd;getPersistentInfo();TR;FEBase;0;1
;TR_FrontEnd;indexedTrampolineLookup(int32_t,void *);TR;FEBase;0;1
;TR_FrontEnd;methodTrampolineLookup(TR::Compilation *,TR::SymbolReference *,void *);TestCompiler;FrontEnd;0;1
TR;FECommon;persistentMemory();TR;FEBase;0;1
;TR_FrontEnd;reserveTrampolineIfNecessary(TR::Compilation *,TR::SymbolReference *,_Bool);TestCompiler;FrontEnd;0;1
;TR_FrontEnd;resizeCodeMemory(TR::Compilation *,uint8_t *,uint32_t);TR;FEBase;0;1
;TR_FrontEnd;sampleSignature(class TR_OpaqueMethodBlock *,char *,int32_t,class TR_Memory *);TR;FECommon;0;1
TestCompiler;FrontEnd;~FrontEnd();TR;FrontEnd;1;0
OMR;IlInjector;IlInjector(TR::TypeDictionary *);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;IlInjector(TR::TypeDictionary *);TR;IlInjector;0;0
OMR;IlInjector;IlInjector(TR::IlInjector *);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;IlInjector(TR::IlInjector *);TR;IlInjector;0;0
OMR;IlInjector;block(int32_t);OMR;IlInjector;0;0
;TR_IlGenerator;currentByteCodeIndex();OMR;IlInjector;0;1
;TR_IlGenerator;genIL();OMR;IlInjector;0;1
;TR_IlGenerator;getCurrentBlock();OMR;IlInjector;0;1
OMR;IlInjector;initialize(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *);TestCompiler;IlInjector;0;1
OMR;IlInjector;injectIL();TestCompiler;OpIlInjector;0;1
TestCompiler;OpIlInjector;injectIL();TestCompiler;BinaryOpIlInjector;0;1
OMR;IlInjector;jitPersistentAlloc(size_t);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;jitPersistentAlloc(size_t);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;jitPersistentAlloc(size_t);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;jitPersistentFree(void *);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;jitPersistentFree(void *);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;jitPersistentFree(void *);TestCompiler;BinaryOpIlInjector;0;0
;TR_IlGenerator;methodSymbol();OMR;IlInjector;0;1
OMR;IlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator delete(void *,TR::Region &);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,TR::Region &);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,TR::Region &);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator delete(void *,size_t);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,size_t);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,size_t);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator delete[](void *,TR::Region &);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,TR::Region &);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,TR::Region &);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new(size_t,TR::Region &);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Region &);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Region &);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;operator new[](size_t,TR::Region &);TestCompiler;IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Region &);TestCompiler;OpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Region &);TestCompiler;BinaryOpIlInjector;0;0
OMR;IlInjector;~IlInjector();TestCompiler;IlInjector;0;1
TestCompiler;IlInjector;~IlInjector();TR;IlInjector;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/ChildlessUnaryOpIlInjector.cpp
TestCompiler;OpIlInjector;injectIL();TestCompiler;UnaryOpIlInjector;0;1
TestCompiler;UnaryOpIlInjector;injectIL();TestCompiler;ChildlessUnaryOpIlInjector;0;1
TestCompiler;OpIlInjector;jitPersistentAlloc(size_t);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;jitPersistentAlloc(size_t);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;jitPersistentFree(void *);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;jitPersistentFree(void *);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,TR::Region &);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,TR::Region &);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,size_t);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,size_t);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,TR::Region &);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,TR::Region &);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Region &);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,TR::Region &);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;ChildlessUnaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Region &);TestCompiler;UnaryOpIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,TR::Region &);TestCompiler;ChildlessUnaryOpIlInjector;0;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/CmpBranchOpIlInjector.cpp
TestCompiler;OpIlInjector;injectIL();TestCompiler;CmpBranchOpIlInjector;0;1
TestCompiler;OpIlInjector;jitPersistentAlloc(size_t);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;jitPersistentFree(void *);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,TR::Region &);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,size_t);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,TR::Region &);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Region &);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;CmpBranchOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Region &);TestCompiler;CmpBranchOpIlInjector;0;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/OpIlInjector.cpp
OMR;IlBuilder;IlBuilder(TR::MethodBuilder *,TR::TypeDictionary *);TestCompiler;IlBuilder;0;0
OMR;IlBuilder;IlBuilder(TR::IlBuilder *);TestCompiler;IlBuilder;0;0
TestCompiler;IlBuilder;IlBuilder(TR::IlBuilder *);TR;IlBuilder;0;0
OMR;IlInjector;asMethodBuilder();OMR;IlBuilder;0;1
OMR;IlInjector;injectIL();OMR;IlBuilder;0;1
OMR;IlInjector;isMethodBuilder();OMR;IlBuilder;0;1
TestCompiler;IlInjector;jitPersistentAlloc(size_t);OMR;IlBuilder;0;0
OMR;IlBuilder;jitPersistentAlloc(size_t);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;jitPersistentFree(void *);OMR;IlBuilder;0;0
OMR;IlBuilder;jitPersistentFree(void *);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator delete(void *,size_t);OMR;IlBuilder;0;0
OMR;IlBuilder;operator delete(void *,size_t);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlBuilder;0;0
OMR;IlBuilder;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator delete(void *,TR::Region &);OMR;IlBuilder;0;0
OMR;IlBuilder;operator delete(void *,TR::Region &);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator delete[](void *,TR::Region &);OMR;IlBuilder;0;0
OMR;IlBuilder;operator delete[](void *,TR::Region &);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;IlBuilder;0;0
OMR;IlBuilder;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Region &);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new(size_t,TR::Region &);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_PersistentMemory *);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new(size_t,class TR_PersistentMemory *);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new(size_t,TR_ArenaAllocator *);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new(size_t,TR_ArenaAllocator *);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Internal::PersistentNewType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_PersistentMemory *);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Region &);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new[](size_t,TR::Region &);TestCompiler;IlBuilder;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Internal::PersistentNewType);OMR;IlBuilder;0;0
OMR;IlBuilder;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;IlBuilder;0;0
OMR;IlBuilder;~IlBuilder();TestCompiler;IlBuilder;0;1
TestCompiler;IlBuilder;~IlBuilder();TR;IlBuilder;0;1
OMR;IlType;IlType();TR;IlType;0;0
OMR;IlType;IlType(const char *);TR;IlType;0;0
OMR;IlType;~IlType();TR;IlType;0;1
OMR;IlValue;IlValue(TR::Node *,TR::TreeTop *,TR::Block *,TR::MethodBuilder *);TR;IlValue;0;0
OMR;TypeDictionary;TypeDictionary();TR;TypeDictionary;0;0
OMR;TypeDictionary;~TypeDictionary();TR;TypeDictionary;0;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/StoreOpIlInjector.cpp
TestCompiler;OpIlInjector;injectIL();TestCompiler;StoreOpIlInjector;0;1
TestCompiler;OpIlInjector;jitPersistentAlloc(size_t);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;jitPersistentFree(void *);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,TR::Region &);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,size_t);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,TR::Region &);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Region &);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;StoreOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Region &);TestCompiler;StoreOpIlInjector;0;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/TernaryOpIlInjector.cpp
TestCompiler;OpIlInjector;injectIL();TestCompiler;TernaryOpIlInjector;0;1
TestCompiler;OpIlInjector;jitPersistentAlloc(size_t);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;jitPersistentFree(void *);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,TR::Region &);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,size_t);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator delete[](void *,TR::Region &);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new(size_t,TR::Region &);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;TernaryOpIlInjector;0;0
TestCompiler;OpIlInjector;operator new[](size_t,TR::Region &);TestCompiler;TernaryOpIlInjector;0;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/UnaryOpIlInjector.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/BarIlInjector.cpp
OMR;IlInjector;injectIL();TestCompiler;BarIlInjector;0;1
TestCompiler;IlInjector;jitPersistentAlloc(size_t);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;jitPersistentFree(void *);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,TR::Region &);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,size_t);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,TR::Region &);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Region &);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;BarIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Region &);TestCompiler;BarIlInjector;0;0
TestCompiler;TestDriver;compileTestMethods();TestCompiler;FooBarTest;0;1
TestCompiler;TestDriver;invokeTests();TestCompiler;FooBarTest;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/CallIlInjector.cpp
TestCompiler;BinaryOpIlInjector;injectIL();TestCompiler;IndirectStoreIlInjector;0;1
TestCompiler;BinaryOpIlInjector;jitPersistentAlloc(size_t);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;jitPersistentFree(void *);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator delete(void *,TR::Region &);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator delete(void *,size_t);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator delete[](void *,TR::Region &);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new(size_t,TR::Region &);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;BinaryOpIlInjector;operator new[](size_t,TR::Region &);TestCompiler;IndirectStoreIlInjector;0;0
TestCompiler;UnaryOpIlInjector;injectIL();TestCompiler;CallIlInjector;0;1
TestCompiler;UnaryOpIlInjector;jitPersistentAlloc(size_t);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;jitPersistentFree(void *);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,TR::Region &);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,size_t);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,TR::Region &);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,TR::Region &);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,TR::Region &);TestCompiler;CallIlInjector;0;0
TestCompiler;UnaryOpIlInjector;injectIL();TestCompiler;IndirectLoadIlInjector;0;1
TestCompiler;UnaryOpIlInjector;jitPersistentAlloc(size_t);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;jitPersistentFree(void *);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,TR::Region &);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,size_t);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator delete[](void *,TR::Region &);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new(size_t,TR::Region &);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;UnaryOpIlInjector;operator new[](size_t,TR::Region &);TestCompiler;IndirectLoadIlInjector;0;0
TestCompiler;TestDriver;compileTestMethods();TestCompiler;OpCodesTest;0;1
TestCompiler;TestDriver;invokeTests();TestCompiler;OpCodesTest;0;1
testing;TestEventListener;OnEnvironmentsSetUpEnd(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnEnvironmentsSetUpStart(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnEnvironmentsTearDownEnd(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnEnvironmentsTearDownStart(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnTestCaseEnd(const class testing::TestCase &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnTestCaseStart(const class testing::TestCase &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnTestEnd(const class testing::TestInfo &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnTestIterationEnd(const class testing::UnitTest &,int);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnTestIterationStart(const class testing::UnitTest &,int);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnTestPartResult(const class testing::TestPartResult &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnTestProgramEnd(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnTestProgramStart(const class testing::UnitTest &);testing;EmptyTestEventListener;0;1
testing;TestEventListener;OnTestStart(const class testing::TestInfo &);testing;EmptyTestEventListener;0;1
testing::internal;DeathTestFactory;Create(const char *,const class testing::internal::RE *,const char *,int,class testing::internal::DeathTest **);testing::internal;DefaultDeathTestFactory;0;1
testing;TestPartResultReporterInterface;ReportTestPartResult(const class testing::TestPartResult &);testing::internal;HasNewFatalFailureHelper;0;1
testing::internal;ParameterizedTestCaseInfoBase;GetTestCaseName();testing::internal;ParameterizedTestCaseInfo;0;1
testing::internal;ParameterizedTestCaseInfoBase;GetTestCaseTypeId();testing::internal;ParameterizedTestCaseInfo;0;1
testing::internal;ParameterizedTestCaseInfoBase;RegisterTests();testing::internal;ParameterizedTestCaseInfo;0;1
testing::internal;TestFactoryBase;CreateTest();testing::internal;ParameterizedTestFactory;0;1
testing::internal;TestFactoryBase;CreateTest();testing::internal;TestFactoryImpl;0;1
testing::internal::ThreadLocal;ValueHolderFactory;MakeNewHolder();testing::internal::ThreadLocal;DefaultValueHolderFactory;0;1
testing::internal::ThreadLocal;ValueHolderFactory;MakeNewHolder();testing::internal::ThreadLocal;InstanceValueHolderFactory;0;1
testing::internal;ThreadWithParamBase;Run();testing::internal;ThreadWithParam;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/IndirectLoadIlInjector.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/IndirectStoreIlInjector.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/FooIlInjector.cpp
OMR;IlInjector;injectIL();TestCompiler;FooIlInjector;0;1
TestCompiler;IlInjector;jitPersistentAlloc(size_t);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;jitPersistentFree(void *);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,TR::Region &);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,size_t);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,TR::Region &);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Region &);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;FooIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Region &);TestCompiler;FooIlInjector;0;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/injectors/Qux2IlInjector.cpp
OMR;IlInjector;injectIL();TestCompiler;Qux2IlInjector;0;1
TestCompiler;IlInjector;jitPersistentAlloc(size_t);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;jitPersistentFree(void *);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,TR::Region &);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,size_t);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,TR::Region &);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Region &);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;Qux2IlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Region &);TestCompiler;Qux2IlInjector;0;0
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/BuilderTest.cpp
testing;Test;TestBody();;JITILBuilderTest_ControlFlowTest_Test;0;1
testing;Test;TestBody();;JITILBuilderTest_NestedControlFlowLoopTest_Test;0;1
testing;Test;TestBody();;JITTest_BuilderTest_Test;0;1
OMR;IlBuilder;AppendBuilder(TR::IlBuilder *);OMR;MethodBuilder;0;0
TestCompiler;MethodBuilder;MethodBuilder(TR::TypeDictionary *);TR;MethodBuilder;0;0
OMR;IlBuilder;asMethodBuilder();OMR;MethodBuilder;0;1
OMR;IlBuilder;buildIL();TestCompiler;AbsDiffIfThenElseMethod;0;1
OMR;IlBuilder;connectTrees();OMR;MethodBuilder;0;1
OMR;IlBuilder;countBlocks();OMR;MethodBuilder;0;1
OMR;IlBuilder;defineSymbol(const char *,TR::SymbolReference *);OMR;MethodBuilder;0;0
OMR;IlBuilder;injectIL();OMR;MethodBuilder;0;1
OMR;IlBuilder;isMethodBuilder();OMR;MethodBuilder;0;1
TestCompiler;IlBuilder;jitPersistentAlloc(size_t);OMR;MethodBuilder;0;0
OMR;MethodBuilder;jitPersistentAlloc(size_t);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;jitPersistentFree(void *);OMR;MethodBuilder;0;0
OMR;MethodBuilder;jitPersistentFree(void *);TestCompiler;MethodBuilder;0;0
OMR;IlBuilder;lookupSymbol(const char *);OMR;MethodBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,size_t);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator delete(void *,size_t);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,TR::Region &);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator delete(void *,TR::Region &);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator delete[](void *,TR::Region &);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator delete[](void *,TR::Region &);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,TR::Region &);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new(size_t,TR::Region &);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,class TR_PersistentMemory *);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new(size_t,class TR_PersistentMemory *);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,TR_ArenaAllocator *);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new(size_t,TR_ArenaAllocator *);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,TR::Internal::PersistentNewType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,class TR_PersistentMemory *);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,TR::Region &);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new[](size_t,TR::Region &);TestCompiler;MethodBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,TR::Internal::PersistentNewType);OMR;MethodBuilder;0;0
OMR;MethodBuilder;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;MethodBuilder;0;0
OMR;IlBuilder;setupForBuildIL();OMR;MethodBuilder;0;1
OMR;IlInjector;typeDictionary();OMR;MethodBuilder;0;0
OMR;MethodBuilder;~MethodBuilder();TestCompiler;MethodBuilder;0;1
TestCompiler;MethodBuilder;~MethodBuilder();TR;MethodBuilder;0;1
OMR;IlBuilder;buildIL();TestCompiler;BasicForLoopDownMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;BasicForLoopUpMethod;0;1
TestCompiler;TestDriver;compileTestMethods();TestCompiler;BuilderTest;0;1
TestCompiler;TestDriver;invokeTests();TestCompiler;BuilderTest;0;1
OMR;IlBuilder;buildIL();TestCompiler;DoWhileFibonnaciMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;DoWhileIfThenElseMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;DoWhileWithBreakAndContinueMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;DoWhileWithBreakMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;DoWhileWithContinueMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;ForLoopBreakAndContinueMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;ForLoopBreakMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;ForLoopContinueMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;ForLoopUPIfThenElseMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;IfThenElseLoopMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;IterativeFibonnaciMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;MaxIfThenMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;RecursiveFibonnaciMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;ShootoutNestedLoopMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;WhileDoFibonnaciMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;WhileDoIfThenElseMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;WhileDoWithBreakAndContinueMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;WhileDoWithBreakMethod;0;1
OMR;IlBuilder;buildIL();TestCompiler;WhileDoWithContinueMethod;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/FooBarTest.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/LimitFileTest.cpp
testing;Test;TestBody();TestCompiler;LimitFileTest_CheckVLogTest_Test;0;1
testing;Test;TestBody();TestCompiler;LimitFileTest_CreateVLogTest_Test;0;1
testing;Test;TestBody();TestCompiler;LimitFileTest_UseLimitFileBoundTest_Test;0;1
testing;Test;TestBody();TestCompiler;LimitFileTest_UseLimitFileRangeTest_Test;0;1
testing;Test;TestBody();TestCompiler;LimitFileTest_UseLimitFileTest_Test;0;1
testing;Environment;SetUp();TestCompiler;OMRTestEnv;0;1
testing;Environment;TearDown();TestCompiler;OMRTestEnv;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/LogFileTest.cpp
testing;Test;TestBody();TestCompiler;LogFileTest_CreateTFLogTest_Test;0;1
testing;Test;TestBody();TestCompiler;LogFileTest_EmptyTFLogTest_Test;0;1
testing;Test;TestBody();TestCompiler;LogFileTest_KeywordsLogTest_Test;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/OMRTestEnv.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/OptionSetTest.cpp
testing;Test;TestBody();TestCompiler;OptionSetTest_UseOptionSets_Test;0;1
testing;Test;TestBody();TestCompiler;OptionSetTest_WithDefault_Test;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/OpCodesTest.cpp
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_AddressTest_Test;0;1
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_BitwiseTest_Test;0;1
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_CompareTest_Test;0;1
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test;0;1
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test;0;1
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test;0;1
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test;0;1
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_TernaryTest_Test;0;1
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_UnaryTest_Test;0;1
testing;Test;TestBody();;JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/PPCOpCodesTest.cpp
TestCompiler;OpCodesTest;UnsupportedOpCodesTests();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;compileAddressTestMethods();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;compileCompareTestMethods();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;compileMemoryOperationTestMethods();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;compileTernaryTestMethods();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;compileUnaryTestMethods();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;invokeAddressTests();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;invokeBitwiseTests();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;invokeCompareTests();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;invokeMemoryOperationTests();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;invokeTernaryTests();TestCompiler;PPCOpCodesTest;0;1
TestCompiler;OpCodesTest;invokeUnaryTests();TestCompiler;PPCOpCodesTest;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/Qux2Test.cpp
testing;Test;TestBody();;JITQuxTest_QuxTest2_Test;0;1
TestCompiler;TestDriver;compileTestMethods();TestCompiler;Qux2Test;0;1
TestCompiler;TestDriver;invokeTests();TestCompiler;Qux2Test;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/SimplifierFoldAndTest.cpp
TestCompiler;TestDriver;compileTestMethods();TestCompiler;OptTestDriver;0;1
TestCompiler;TestDriver;invokeTests();TestCompiler;SimplifierFoldAndTest;0;1
testing;Test;TestBody();TestCompiler;SimplifierFoldAndTest_SimplifierFoldAndTest_Test;0;1
OMR;IlInjector;injectIL();TestCompiler;SimplifierFoldAndIlInjector;0;1
TestCompiler;IlInjector;jitPersistentAlloc(size_t);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;jitPersistentFree(void *);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,TR::Region &);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,size_t);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,TR::Region &);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Region &);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR_ArenaAllocator *);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_PersistentMemory *);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new(size_t,TR::Internal::PersistentNewType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Internal::PersistentNewType);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,class TR_PersistentMemory *);TestCompiler;SimplifierFoldAndIlInjector;0;0
TestCompiler;IlInjector;operator new[](size_t,TR::Region &);TestCompiler;SimplifierFoldAndIlInjector;0;0
TR;IlVerifier;verify(TR::ResolvedMethodSymbol *);TestCompiler;SimplifierFoldAndIlVerifier;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/S390OpCodesTest.cpp
testing;Test;TestBody();;JITS390OpCodesTest_BitwiseTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_CompareTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_DISABLED_S390BitwiseTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_DISABLED_S390CompareTests_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_DISABLED_S390ConvertToAddressTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_DISABLED_S390DirectCallTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_DISABLED_S390IntegerArithmeticTests_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_DISABLED_S390MemoryOperationTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_DISABLED_S390TernaryTests_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_DISABLED_S390UnaryTests_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_DirectCallTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_FloatArithmeticTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_IntegerArithmeticTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_MemoryOperationTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_S390AddressTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_TernaryTest_Test;0;1
testing;Test;TestBody();;JITS390OpCodesTest_UnaryTest_Test;0;1
TestCompiler;OpCodesTest;compileAddressTestMethods();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;compileCompareTestMethods();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;compileIntegerArithmeticTestMethods();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;compileMemoryOperationTestMethods();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;compileTernaryTestMethods();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;compileUnaryTestMethods();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeAddressTests();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeBitwiseTests();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeCompareTests();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeIntegerArithmeticTests();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeMemoryOperationTests();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeTernaryTests();TestCompiler;S390OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeUnaryTests();TestCompiler;S390OpCodesTest;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/OptTestDriver.cpp
TR;IlVerifier;verify(TR::ResolvedMethodSymbol *);TR;AllIlVerifier;0;1
TR;IlVerifier;verify(TR::ResolvedMethodSymbol *);TR;NoCodegenVerifier;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/TestDriver.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/X86OpCodesTest.cpp
TestCompiler;OpCodesTest;UnsupportedOpCodesTests();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;compileAddressTestMethods();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;compileCompareTestMethods();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;compileIntegerArithmeticTestMethods();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;compileMemoryOperationTestMethods();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;compileTernaryTestMethods();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;compileUnaryTestMethods();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeAddressTests();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeBitwiseTests();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeCompareTests();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeIntegerArithmeticTests();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeMemoryOperationTests();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeNoHelperUnaryTests();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeTernaryTests();TestCompiler;X86OpCodesTest;0;1
TestCompiler;OpCodesTest;invokeUnaryTests();TestCompiler;X86OpCodesTest;0;1
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/tests/main.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/FEBase.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/JitConfig.cpp
(Arch: AMD64): Compiling ../../../../compiler/control/CompilationController.cpp
TR;CompilationStrategy;enableSwitchToProfiling();TR;DefaultCompilationStrategy;0;1
TR;CompilationStrategy;processEvent(class TR_MethodEvent *,_Bool *);TR;DefaultCompilationStrategy;0;1
TR;CompilationStrategy;shutdown();TR;DefaultCompilationStrategy;0;1
(Arch: AMD64): Compiling ../../../../compiler/optimizer/FEInliner.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/Runtime.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/Trampoline.cpp
(Arch: AMD64): Compiling ../../../../compiler/control/CompileMethod.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRIO.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRKnownObjectTable.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/Globals.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/OMRCompilerEnv.cpp
(Arch: AMD64): Compiling ../../../../compiler/env/PersistentAllocator.cpp
(Arch: AMD64): Compiling ../../../../compiler/ilgen/IlBuilder.cpp
OMR;BytecodeBuilder;BytecodeBuilder(TR::MethodBuilder *,int32_t,char *);TR;BytecodeBuilder;0;0
OMR;IlBuilder;appendBlock(TR::Block *,_Bool);OMR;BytecodeBuilder;0;1
OMR;IlBuilder;connectTrees();OMR;BytecodeBuilder;0;1
OMR;IlBuilder;countBlocks();OMR;BytecodeBuilder;0;1
OMR;IlInjector;currentByteCodeIndex();OMR;BytecodeBuilder;0;1
TestCompiler;IlInjector;initialize(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *);TR;BytecodeBuilder;0;1
OMR;IlBuilder;isBytecodeBuilder();OMR;BytecodeBuilder;0;1
OMR;IlBuilder;setHandlerInfo(uint32_t);OMR;BytecodeBuilder;0;1
OMR;BytecodeBuilder;~BytecodeBuilder();TR;BytecodeBuilder;1;1
(Arch: AMD64): Compiling ../../../../compiler/ilgen/IlValue.cpp
(Arch: AMD64): Compiling ../../../../compiler/ilgen/IlInjector.cpp
(Arch: AMD64): Compiling ../../../../compiler/ilgen/MethodBuilder.cpp
TestCompiler;IlBuilder;jitPersistentAlloc(size_t);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;jitPersistentFree(void *);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,TR::Region &);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator delete(void *,size_t);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator delete[](void *,TR::Region &);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,TR::Region &);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,TR::Internal::PersistentNewType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,TR_ArenaAllocator *);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,class TR_PersistentMemory *);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,class TR_PersistentMemory *);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,TR::Internal::PersistentNewType);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,TR::Region &);OMR;BytecodeBuilder;0;0
TestCompiler;IlBuilder;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;BytecodeBuilder;0;0
(Arch: AMD64): Compiling ../../../../compiler/ilgen/BytecodeBuilder.cpp
(Arch: AMD64): Compiling ../../../../compiler/ilgen/TypeDictionary.cpp
OMR;IlType;baseType();OMR;PointerType;0;1
OMR;IlType;getName();OMR;PointerType;0;0
OMR;IlType;getPrimitiveType();OMR;PointerType;0;1
OMR;IlType;getSize();OMR;PointerType;0;1
OMR;IlType;isPointer();OMR;PointerType;0;1
OMR;IlType;jitPersistentAlloc(size_t);OMR;PointerType;0;0
OMR;IlType;jitPersistentFree(void *);OMR;PointerType;0;0
OMR;IlType;operator delete(void *,size_t);OMR;PointerType;0;0
OMR;IlType;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
OMR;IlType;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
OMR;IlType;operator delete(void *,TR::Region &);OMR;PointerType;0;0
OMR;IlType;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;PointerType;0;0
OMR;IlType;operator delete[](void *,TR::Region &);OMR;PointerType;0;0
OMR;IlType;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
OMR;IlType;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
OMR;IlType;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;PointerType;0;0
OMR;IlType;operator new(size_t,TR::Region &);OMR;PointerType;0;0
OMR;IlType;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;PointerType;0;0
OMR;IlType;operator new(size_t,class TR_PersistentMemory *);OMR;PointerType;0;0
OMR;IlType;operator new(size_t,TR::Internal::PersistentNewType);OMR;PointerType;0;0
OMR;IlType;operator new(size_t,TR_ArenaAllocator *);OMR;PointerType;0;0
OMR;IlType;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
OMR;IlType;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
OMR;IlType;operator new[](size_t,TR::Region &);OMR;PointerType;0;0
OMR;IlType;operator new[](size_t,class TR_PersistentMemory *);OMR;PointerType;0;0
OMR;IlType;operator new[](size_t,TR::Internal::PersistentNewType);OMR;PointerType;0;0
OMR;IlType;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
OMR;IlType;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PointerType;0;0
OMR;IlType;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;PointerType;0;0
OMR;IlType;getPrimitiveType();OMR;PrimitiveType;0;1
OMR;IlType;getSignatureName();OMR;PrimitiveType;0;1
OMR;IlType;getSize();OMR;PrimitiveType;0;1
OMR;IlType;jitPersistentAlloc(size_t);OMR;PrimitiveType;0;0
OMR;IlType;jitPersistentFree(void *);OMR;PrimitiveType;0;0
OMR;IlType;operator delete(void *,size_t);OMR;PrimitiveType;0;0
OMR;IlType;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
OMR;IlType;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
OMR;IlType;operator delete(void *,TR::Region &);OMR;PrimitiveType;0;0
OMR;IlType;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;PrimitiveType;0;0
OMR;IlType;operator delete[](void *,TR::Region &);OMR;PrimitiveType;0;0
OMR;IlType;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
OMR;IlType;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
OMR;IlType;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;PrimitiveType;0;0
OMR;IlType;operator new(size_t,TR::Region &);OMR;PrimitiveType;0;0
OMR;IlType;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;PrimitiveType;0;0
OMR;IlType;operator new(size_t,class TR_PersistentMemory *);OMR;PrimitiveType;0;0
OMR;IlType;operator new(size_t,TR::Internal::PersistentNewType);OMR;PrimitiveType;0;0
OMR;IlType;operator new(size_t,TR_ArenaAllocator *);OMR;PrimitiveType;0;0
OMR;IlType;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
OMR;IlType;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
OMR;IlType;operator new[](size_t,TR::Region &);OMR;PrimitiveType;0;0
OMR;IlType;operator new[](size_t,class TR_PersistentMemory *);OMR;PrimitiveType;0;0
OMR;IlType;operator new[](size_t,TR::Internal::PersistentNewType);OMR;PrimitiveType;0;0
OMR;IlType;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
OMR;IlType;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;PrimitiveType;0;0
OMR;IlType;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;PrimitiveType;0;0
OMR;IlType;getPrimitiveType();OMR;StructType;0;1
OMR;IlType;getSize();OMR;StructType;0;1
OMR;IlType;isStruct();OMR;StructType;0;1
OMR;IlType;jitPersistentAlloc(size_t);OMR;StructType;0;0
OMR;IlType;jitPersistentFree(void *);OMR;StructType;0;0
OMR;IlType;operator delete(void *,size_t);OMR;StructType;0;0
OMR;IlType;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
OMR;IlType;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
OMR;IlType;operator delete(void *,TR::Region &);OMR;StructType;0;0
OMR;IlType;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;StructType;0;0
OMR;IlType;operator delete[](void *,TR::Region &);OMR;StructType;0;0
OMR;IlType;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
OMR;IlType;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
OMR;IlType;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;StructType;0;0
OMR;IlType;operator new(size_t,TR::Region &);OMR;StructType;0;0
OMR;IlType;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;StructType;0;0
OMR;IlType;operator new(size_t,class TR_PersistentMemory *);OMR;StructType;0;0
OMR;IlType;operator new(size_t,TR::Internal::PersistentNewType);OMR;StructType;0;0
OMR;IlType;operator new(size_t,TR_ArenaAllocator *);OMR;StructType;0;0
OMR;IlType;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
OMR;IlType;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
OMR;IlType;operator new[](size_t,TR::Region &);OMR;StructType;0;0
OMR;IlType;operator new[](size_t,class TR_PersistentMemory *);OMR;StructType;0;0
OMR;IlType;operator new[](size_t,TR::Internal::PersistentNewType);OMR;StructType;0;0
OMR;IlType;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
OMR;IlType;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;StructType;0;0
OMR;IlType;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;StructType;0;0
OMR;IlType;getPrimitiveType();OMR;UnionType;0;1
OMR;IlType;getSize();OMR;UnionType;0;1
OMR;IlType;isUnion();OMR;UnionType;0;1
OMR;IlType;jitPersistentAlloc(size_t);OMR;UnionType;0;0
OMR;IlType;jitPersistentFree(void *);OMR;UnionType;0;0
OMR;IlType;operator delete(void *,size_t);OMR;UnionType;0;0
OMR;IlType;operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
OMR;IlType;operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
OMR;IlType;operator delete(void *,TR::Region &);OMR;UnionType;0;0
OMR;IlType;operator delete(void *,class TR_Memory *,enum TR_AllocationKind);OMR;UnionType;0;0
OMR;IlType;operator delete[](void *,TR::Region &);OMR;UnionType;0;0
OMR;IlType;operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
OMR;IlType;operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
OMR;IlType;operator delete[](void *,class TR_Memory *,enum TR_AllocationKind);OMR;UnionType;0;0
OMR;IlType;operator new(size_t,TR::Region &);OMR;UnionType;0;0
OMR;IlType;operator new(size_t,class TR_Memory *,enum TR_AllocationKind);OMR;UnionType;0;0
OMR;IlType;operator new(size_t,class TR_PersistentMemory *);OMR;UnionType;0;0
OMR;IlType;operator new(size_t,TR::Internal::PersistentNewType);OMR;UnionType;0;0
OMR;IlType;operator new(size_t,TR_ArenaAllocator *);OMR;UnionType;0;0
OMR;IlType;operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
OMR;IlType;operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
OMR;IlType;operator new[](size_t,TR::Region &);OMR;UnionType;0;0
OMR;IlType;operator new[](size_t,class TR_PersistentMemory *);OMR;UnionType;0;0
OMR;IlType;operator new[](size_t,TR::Internal::PersistentNewType);OMR;UnionType;0;0
OMR;IlType;operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
OMR;IlType;operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType);OMR;UnionType;0;0
OMR;IlType;operator new[](size_t,class TR_Memory *,enum TR_AllocationKind);OMR;UnionType;0;0
(Arch: AMD64): Compiling ../../../../compiler/runtime/Alignment.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/CodeCacheTypes.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/OMRCodeCache.cpp
OMR;CodeCacheMemorySegment;CodeCacheMemorySegment(uint8_t *,uint8_t *);TR;CodeCacheMemorySegment;0;0
OMR;CodeCacheMemorySegment;CodeCacheMemorySegment(uint8_t *,size_t);TR;CodeCacheMemorySegment;0;0
OMR;CodeCacheMemorySegment;CodeCacheMemorySegment();TR;CodeCacheMemorySegment;0;0
(Arch: AMD64): Compiling ../../../../compiler/runtime/OMRCodeCacheManager.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/OMRCodeCacheMemorySegment.cpp
(Arch: AMD64): Compiling ../../../../compiler/runtime/OMRCodeCacheConfig.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/compile/Method.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/control/TestJit.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/env/FrontEnd.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/ilgen/IlInjector.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/ilgen/TestIlGeneratorMethodDetails.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/runtime/TestCodeCacheManager.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/runtime/TestJitConfig.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/z/codegen/TestCodeGenerator.cpp
(Arch: AMD64): Compiling ../../../../fvtest/compilertest/z/codegen/Evaluator.cpp
(Arch: AMD64): Compiling ../../../../compiler/z/env/OMRDebugEnv.cpp
