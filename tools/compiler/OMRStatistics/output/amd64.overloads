FunctionName, FunctionSignature, IsFirstOccurence, Namespace, ClassName
Cursor,Cursor(const class CS2::ABitVector::Cursor &),1,CS2,ABitVector::Cursor
Cursor,Cursor(const ABitVector<Allocator> &),0,CS2,ABitVector::Cursor
SetToFirstOne,SetToFirstOne(),1,CS2,ABitVector::Cursor
SetToFirstZero,SetToFirstZero(),1,CS2,ABitVector::Cursor
SetToNextOne,SetToNextOne(),1,CS2,ABitVector::Cursor
SetToNextOneAfter,SetToNextOneAfter(uint32_t),1,CS2,ABitVector::Cursor
SetToNextZero,SetToNextZero(),1,CS2,ABitVector::Cursor
Valid,Valid(),1,CS2,ABitVector::Cursor
iterator,iterator(const ABitVector<Allocator> &,BitIndex),1,CS2,ABitVector::iterator
operator unsigned int,operator unsigned int(),1,CS2,ABitVector::Cursor
operator!=,operator!=(const class CS2::ABitVector::iterator &),1,CS2,ABitVector::iterator
operator*,operator*(),1,CS2,ABitVector::iterator
operator++,operator++(),1,CS2,ABitVector::iterator
operator=,operator=(const class CS2::ABitVector::Cursor &),1,CS2,ABitVector::Cursor
operator==,operator==(const class CS2::ABitVector::iterator &),1,CS2,ABitVector::iterator
ConstCursor,ConstCursor(const class CS2::TableOf::ConstCursor &,const SupportingBitVector<Allocator> &),1,CS2,TableOf::ConstCursor
ConstCursor,ConstCursor(const TableOf<AElementType, Allocator, segmentBits, SupportingBitVector> &),0,CS2,TableOf::ConstCursor
ConstCursor,ConstCursor(const TableOf<AElementType, Allocator, segmentBits, SupportingBitVector> &,const SupportingBitVector<Allocator> &),0,CS2,TableOf::ConstCursor
ConstCursor,ConstCursor(const class CS2::TableOf::ConstCursor &),0,CS2,TableOf::ConstCursor
Cursor,Cursor(const class CS2::TableOf::Cursor &),1,CS2,TableOf::Cursor
Cursor,Cursor(const TableOf<AElementType, Allocator, segmentBits, SupportingBitVector> &),0,CS2,TableOf::Cursor
SetToFirst,SetToFirst(),1,CS2,TableOf::ConstCursor
SetToNext,SetToNext(),1,CS2,TableOf::ConstCursor
Valid,Valid(),1,CS2,TableOf::ConstCursor
operator unsigned long,operator unsigned long(),1,CS2,TableOf::ConstCursor
operator=,operator=(const class CS2::TableOf::ConstCursor &),1,CS2,TableOf::ConstCursor
Name,Name(_Bool),1,CS2,Timer
Read,Read(),1,CS2,BSDTimer
Reset,Reset(),1,CS2,BSDTimer
Start,Start(),1,CS2,BSDTimer
Stop,Stop(),1,CS2,BSDTimer
UnitsText,UnitsText(_Bool),1,CS2,Timer
sprintfMetric,sprintfMetric(char *,Metric,Metric,_Bool,_Bool),1,CS2,Timer
GlobalSingletonAllocator,GlobalSingletonAllocator(const GlobalBaseAllocator &),1,TR,GlobalSingletonAllocator
GlobalSingletonAllocator,GlobalSingletonAllocator(class TR::GlobalSingletonAllocator &&),0,TR,GlobalSingletonAllocator
TRPersistentMemoryAllocator,TRPersistentMemoryAllocator(class TR_Memory *),1,TR,PersistentMemoryAllocator
TRPersistentMemoryAllocator,TRPersistentMemoryAllocator(class TR_PersistentMemory *),0,TR,PersistentMemoryAllocator
TRPersistentMemoryAllocator,TRPersistentMemoryAllocator(const class TRPersistentMemoryAllocator &),0,TR,PersistentMemoryAllocator
allocate,allocate(size_t,const char *,int),1,TR,PersistentMemoryAllocator
allocate,allocate(size_t,const char *),0,CS2,stat_allocator
createInstance,createInstance(),1,TR,GlobalSingletonAllocator
deallocate,deallocate(void *,size_t,const char *,int),1,TR,PersistentMemoryAllocator
deallocate,deallocate(void *,size_t,const char *),0,CS2,stat_allocator
instance,instance(),1,TR,GlobalSingletonAllocator
operator=,operator=(const class TRPersistentMemoryAllocator &),1,TR,PersistentMemoryAllocator
operator=,operator=(class TR::GlobalSingletonAllocator &&),0,TR,GlobalSingletonAllocator
reallocate,reallocate(size_t,void *,size_t,const char *,int),1,TR,PersistentMemoryAllocator
reallocate,reallocate(size_t,void *,size_t,const char *),0,CS2,stat_allocator
stat_allocator<base_allocator>,stat_allocator<base_allocator>(const base_allocator &,_Bool),1,CS2,stat_allocator
~GlobalSingletonAllocator,~GlobalSingletonAllocator(),1,TR,GlobalSingletonAllocator
~TRPersistentMemoryAllocator,~TRPersistentMemoryAllocator(),1,TR,PersistentMemoryAllocator
~stat_allocator<base_allocator>,~stat_allocator<base_allocator>(),1,CS2,stat_allocator
AutomaticSymbol,AutomaticSymbol(),1,OMR,AutomaticSymbol
AutomaticSymbol,AutomaticSymbol(const class OMR::AutomaticSymbol &),0,OMR,AutomaticSymbol
AutomaticSymbol,AutomaticSymbol(TR::DataType,uint32_t,const char *),0,OMR,AutomaticSymbol
AutomaticSymbol,AutomaticSymbol(TR::DataType),0,OMR,AutomaticSymbol
AutomaticSymbol,AutomaticSymbol(class OMR::AutomaticSymbol &&),0,OMR,AutomaticSymbol
AutomaticSymbol,AutomaticSymbol(TR::DataType,uint32_t),0,OMR,AutomaticSymbol
AutomaticSymbol,AutomaticSymbol(int32_t),0,TR,AutomaticSymbol
RegisterMappedSymbol,RegisterMappedSymbol(class OMR::RegisterMappedSymbol &&),1,OMR,RegisterMappedSymbol
RegisterMappedSymbol,RegisterMappedSymbol(const class OMR::RegisterMappedSymbol &),0,OMR,RegisterMappedSymbol
RegisterMappedSymbol,RegisterMappedSymbol(TR::DataType,uint32_t),0,OMR,RegisterMappedSymbol
RegisterMappedSymbol,RegisterMappedSymbol(TR::DataType),0,OMR,RegisterMappedSymbol
RegisterMappedSymbol,RegisterMappedSymbol(int32_t),0,OMR,RegisterMappedSymbol
RegisterMappedSymbol,RegisterMappedSymbol(class TR::RegisterMappedSymbol &&),0,TR,RegisterMappedSymbol
RegisterMappedSymbol,RegisterMappedSymbol(const class TR::RegisterMappedSymbol &),0,TR,RegisterMappedSymbol
Symbol,Symbol(),1,OMR,Symbol
Symbol,Symbol(const class OMR::Symbol &),0,OMR,Symbol
Symbol,Symbol(TR::DataType,uint32_t),0,OMR,Symbol
Symbol,Symbol(TR::DataType),0,OMR,Symbol
Symbol,Symbol(const class TR::Symbol &),0,TR,Symbol
Symbol,Symbol(class TR::Symbol &&),0,TR,Symbol
addressIsCPIndexOfStatic,addressIsCPIndexOfStatic(),1,OMR,Symbol
behaveLikeNonTemp,behaveLikeNonTemp(),1,OMR,Symbol
castToAutoMarkerSymbol,castToAutoMarkerSymbol(),1,OMR,Symbol
castToAutoSymbol,castToAutoSymbol(),1,OMR,Symbol
castToCallSiteTableEntrySymbol,castToCallSiteTableEntrySymbol(),1,OMR,Symbol
castToInternalPointerAutoSymbol,castToInternalPointerAutoSymbol(),1,OMR,Symbol
castToJittedMethodSymbol,castToJittedMethodSymbol(),1,OMR,Symbol
castToLabelSymbol,castToLabelSymbol(),1,OMR,Symbol
castToLocalObjectSymbol,castToLocalObjectSymbol(),1,OMR,Symbol
castToMethodMetaDataSymbol,castToMethodMetaDataSymbol(),1,OMR,Symbol
castToMethodSymbol,castToMethodSymbol(),1,OMR,Symbol
castToMethodTypeTableEntrySymbol,castToMethodTypeTableEntrySymbol(),1,OMR,Symbol
castToNamedStaticSymbol,castToNamedStaticSymbol(),1,OMR,Symbol
castToParmSymbol,castToParmSymbol(),1,OMR,Symbol
castToRegisterMappedSymbol,castToRegisterMappedSymbol(),1,OMR,Symbol
castToRegisterSymbol,castToRegisterSymbol(),1,OMR,Symbol
castToResolvedMethodSymbol,castToResolvedMethodSymbol(),1,OMR,Symbol
castToShadowSymbol,castToShadowSymbol(),1,OMR,Symbol
castToStaticSymbol,castToStaticSymbol(),1,OMR,Symbol
castToVariableSizeSymbol,castToVariableSizeSymbol(),1,OMR,Symbol
convertSigCharToType,convertSigCharToType(char),1,OMR,Symbol
convertTypeToNumberOfSlots,convertTypeToNumberOfSlots(TR::DataType),1,OMR,Symbol
convertTypeToSize,convertTypeToSize(TR::DataType),1,OMR,Symbol
decReferenceCount,decReferenceCount(),1,OMR,AutomaticSymbol
dontEliminateStores,dontEliminateStores(TR::Compilation *,_Bool),1,OMR,Symbol
getActiveSize,getActiveSize(),1,OMR,AutomaticSymbol
getArrayType,getArrayType(),1,OMR,AutomaticSymbol
getAutoSymbol,getAutoSymbol(),1,OMR,Symbol
getCallSiteTableEntrySymbol,getCallSiteTableEntrySymbol(),1,OMR,Symbol
getClassSymbolReference,getClassSymbolReference(),1,OMR,AutomaticSymbol
getDataType,getDataType(),1,OMR,Symbol
getFlags,getFlags(),1,OMR,Symbol
getFlags2,getFlags2(),1,OMR,Symbol
getGCMapIndex,getGCMapIndex(),1,OMR,RegisterMappedSymbol
getGlobalRegisterNumber,getGlobalRegisterNumber(),1,OMR,AutomaticSymbol
getInternalPointerAutoSymbol,getInternalPointerAutoSymbol(),1,OMR,Symbol
getJittedMethodSymbol,getJittedMethodSymbol(),1,OMR,Symbol
getKind,getKind(),1,OMR,Symbol
getLabelSymbol,getLabelSymbol(),1,OMR,Symbol
getLiveLocalIndex,getLiveLocalIndex(),1,OMR,RegisterMappedSymbol
getLocalIndex,getLocalIndex(),1,OMR,Symbol
getLocalObjectSymbol,getLocalObjectSymbol(),1,OMR,Symbol
getMethodMetaDataSymbol,getMethodMetaDataSymbol(),1,OMR,Symbol
getMethodMetaDataType,getMethodMetaDataType(),1,OMR,RegisterMappedSymbol
getMethodSymbol,getMethodSymbol(),1,OMR,Symbol
getMethodTypeTableEntrySymbol,getMethodTypeTableEntrySymbol(),1,OMR,Symbol
getName,getName(),1,OMR,Symbol
getNamedShadowSymbol,getNamedShadowSymbol(),1,OMR,Symbol
getNodeToFreeAfter,getNodeToFreeAfter(),1,OMR,AutomaticSymbol
getNumberOfSlots,getNumberOfSlots(),1,OMR,Symbol
getOffset,getOffset(),1,OMR,Symbol
getParmSymbol,getParmSymbol(),1,OMR,Symbol
getPinningArrayPointer,getPinningArrayPointer(),1,OMR,AutomaticSymbol
getRecognizedStaticSymbol,getRecognizedStaticSymbol(),1,OMR,Symbol
getReferenceCount,getReferenceCount(),1,OMR,AutomaticSymbol
getReferenceSlots,getReferenceSlots(),1,OMR,AutomaticSymbol
getRegisterKind,getRegisterKind(),1,OMR,AutomaticSymbol
getRegisterMappedSymbol,getRegisterMappedSymbol(),1,OMR,Symbol
getRegisterSymbol,getRegisterSymbol(),1,OMR,Symbol
getResolvedMethodSymbol,getResolvedMethodSymbol(),1,OMR,Symbol
getRestrictedRegisterNumber,getRestrictedRegisterNumber(),1,OMR,Symbol
getRoundedSize,getRoundedSize(),1,OMR,Symbol
getShadowSymbol,getShadowSymbol(),1,OMR,Symbol
getSize,getSize(),1,OMR,Symbol
getStaticSymbol,getStaticSymbol(),1,OMR,Symbol
getType,getType(),1,OMR,Symbol
getVariableSizeSymbol,getVariableSizeSymbol(),1,OMR,Symbol
holdsMonitoredObject,holdsMonitoredObject(),1,OMR,Symbol
incReferenceCount,incReferenceCount(),1,OMR,AutomaticSymbol
init,init(),1,OMR,AutomaticSymbol
isAddressOfClassObject,isAddressOfClassObject(),1,OMR,Symbol
isAddressTaken,isAddressTaken(),1,OMR,AutomaticSymbol
isArrayShadowSymbol,isArrayShadowSymbol(),1,OMR,Symbol
isArrayletShadowSymbol,isArrayletShadowSymbol(),1,OMR,Symbol
isAuto,isAuto(),1,OMR,Symbol
isAutoAddressTaken,isAutoAddressTaken(),1,OMR,Symbol
isAutoField,isAutoField(),1,OMR,Symbol
isAutoMarkerSymbol,isAutoMarkerSymbol(),1,OMR,Symbol
isAutoOrParm,isAutoOrParm(),1,OMR,Symbol
isCallSiteTableEntry,isCallSiteTableEntry(),1,OMR,Symbol
isClassObject,isClassObject(),1,OMR,Symbol
isCollectedReference,isCollectedReference(),1,OMR,Symbol
isCompiledMethod,isCompiledMethod(),1,OMR,Symbol
isConst,isConst(),1,OMR,Symbol
isConstMethodHandle,isConstMethodHandle(),1,OMR,Symbol
isConstMethodType,isConstMethodType(),1,OMR,Symbol
isConstObjectRef,isConstObjectRef(),1,OMR,Symbol
isConstString,isConstString(),1,OMR,Symbol
isCountForRecompile,isCountForRecompile(),1,OMR,Symbol
isEndInternalControlFlow,isEndInternalControlFlow(),1,OMR,Symbol
isEndOfColdInstructionStream,isEndOfColdInstructionStream(),1,OMR,Symbol
isFinal,isFinal(),1,OMR,Symbol
isFixedObjectRef,isFixedObjectRef(),1,OMR,Symbol
isGCRPatchPoint,isGCRPatchPoint(),1,OMR,Symbol
isGlobalFragmentShadowSymbol,isGlobalFragmentShadowSymbol(),1,OMR,Symbol
isGlobalLabel,isGlobalLabel(),1,OMR,Symbol
isHasAddrTaken,isHasAddrTaken(),1,OMR,Symbol
isImmutableField,isImmutableField(),1,OMR,Symbol
isInGlobalRegister,isInGlobalRegister(),1,OMR,Symbol
isInitializedReference,isInitializedReference(),1,OMR,Symbol
isInternalControlFlowMerge,isInternalControlFlowMerge(),1,OMR,Symbol
isInternalPointer,isInternalPointer(),1,OMR,Symbol
isInternalPointerAuto,isInternalPointerAuto(),1,OMR,Symbol
isJittedMethod,isJittedMethod(),1,OMR,Symbol
isLabel,isLabel(),1,OMR,Symbol
isLiveLocalIndexUninitialized,isLiveLocalIndexUninitialized(),1,OMR,RegisterMappedSymbol
isLocalObject,isLocalObject(),1,OMR,Symbol
isMemoryTypeShadowSymbol,isMemoryTypeShadowSymbol(),1,OMR,Symbol
isMethod,isMethod(),1,OMR,Symbol
isMethodMetaData,isMethodMetaData(),1,OMR,Symbol
isMethodTypeTableEntry,isMethodTypeTableEntry(),1,OMR,Symbol
isNamed,isNamed(),1,OMR,Symbol
isNamedShadowSymbol,isNamedShadowSymbol(),1,OMR,Symbol
isNonLinear,isNonLinear(),1,OMR,Symbol
isNotCollected,isNotCollected(),1,OMR,Symbol
isNotDataAddress,isNotDataAddress(),1,OMR,Symbol
isOrdered,isOrdered(),1,OMR,Symbol
isParm,isParm(),1,OMR,Symbol
isParmField,isParmField(),1,OMR,Symbol
isParmHasToBeOnStack,isParmHasToBeOnStack(),1,OMR,Symbol
isPendingPush,isPendingPush(),1,OMR,Symbol
isPinningArrayPointer,isPinningArrayPointer(),1,OMR,Symbol
isPrivate,isPrivate(),1,OMR,Symbol
isPythonConstantShadowSymbol,isPythonConstantShadowSymbol(),1,OMR,Symbol
isPythonLocalVariableShadowSymbol,isPythonLocalVariableShadowSymbol(),1,OMR,Symbol
isPythonNameShadowSymbol,isPythonNameShadowSymbol(),1,OMR,Symbol
isRealRegister,isRealRegister(),1,OMR,AutomaticSymbol
isRecognizedShadow,isRecognizedShadow(),1,OMR,Symbol
isRecognizedStatic,isRecognizedStatic(),1,OMR,Symbol
isRecompilationCounter,isRecompilationCounter(),1,OMR,Symbol
isReferenced,isReferenced(),1,OMR,Symbol
isReferencedParameter,isReferencedParameter(),1,OMR,Symbol
isRegisterMappedSymbol,isRegisterMappedSymbol(),1,OMR,Symbol
isRegisterSymbol,isRegisterSymbol(),1,OMR,Symbol
isRegularShadow,isRegularShadow(),1,OMR,Symbol
isReinstatedReceiver,isReinstatedReceiver(),1,OMR,Symbol
isRelativeLabel,isRelativeLabel(),1,OMR,Symbol
isResolvedMethod,isResolvedMethod(),1,OMR,Symbol
isShadow,isShadow(),1,OMR,Symbol
isSingleUse,isSingleUse(),1,OMR,AutomaticSymbol
isSlotSharedByRefAndNonRef,isSlotSharedByRefAndNonRef(),1,OMR,Symbol
isSpillTempAuto,isSpillTempAuto(),1,OMR,Symbol
isSpillTempLoaded,isSpillTempLoaded(),1,OMR,Symbol
isStartInternalControlFlow,isStartInternalControlFlow(),1,OMR,Symbol
isStartOfColdInstructionStream,isStartOfColdInstructionStream(),1,OMR,Symbol
isStartPC,isStartPC(),1,OMR,Symbol
isStatic,isStatic(),1,OMR,Symbol
isStaticField,isStaticField(),1,OMR,Symbol
isSyncVolatile,isSyncVolatile(),1,OMR,Symbol
isThisTempForObjectCtor,isThisTempForObjectCtor(),1,OMR,Symbol
isUnsafeShadowSymbol,isUnsafeShadowSymbol(),1,OMR,Symbol
isVMThreadLive,isVMThreadLive(),1,OMR,Symbol
isVariableSizeSymbol,isVariableSizeSymbol(),1,OMR,Symbol
isVolatile,isVolatile(),1,OMR,Symbol
isWeakSymbol,isWeakSymbol(),1,OMR,Symbol
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Symbol
jitPersistentFree,jitPersistentFree(void *),1,OMR,Symbol
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Symbol
operator delete,operator delete(void *,TR::Region &),0,OMR,Symbol
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Symbol
operator delete,operator delete(void *,size_t),0,OMR,Symbol
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Symbol
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Symbol
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Symbol
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Symbol
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Symbol
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,Symbol
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Symbol
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Symbol
operator new,operator new(size_t,TR::Region &),0,OMR,Symbol
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Symbol
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Symbol
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Symbol
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,Symbol
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Symbol
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Symbol
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Symbol
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Symbol
operator new[],operator new[](size_t,TR::Region &),0,OMR,Symbol
operator=,operator=(const class OMR::Symbol &),1,OMR,Symbol
operator=,operator=(class TR::Symbol &&),0,TR,Symbol
operator=,operator=(const class TR::Symbol &),0,TR,Symbol
operator=,operator=(const class OMR::RegisterMappedSymbol &),0,OMR,RegisterMappedSymbol
operator=,operator=(class OMR::RegisterMappedSymbol &&),0,OMR,RegisterMappedSymbol
operator=,operator=(class TR::RegisterMappedSymbol &&),0,TR,RegisterMappedSymbol
operator=,operator=(const class TR::RegisterMappedSymbol &),0,TR,RegisterMappedSymbol
operator=,operator=(class OMR::AutomaticSymbol &&),0,OMR,AutomaticSymbol
operator=,operator=(const class OMR::AutomaticSymbol &),0,OMR,AutomaticSymbol
operator=,operator=(class TR::AutomaticSymbol &&),0,TR,AutomaticSymbol
operator=,operator=(const class TR::AutomaticSymbol &),0,TR,AutomaticSymbol
resetReferencedParameter,resetReferencedParameter(),1,OMR,Symbol
resetVolatile,resetVolatile(),1,OMR,Symbol
self,self(),1,OMR,Symbol
setActiveSize,setActiveSize(uint32_t),1,OMR,AutomaticSymbol
setAddressIsCPIndexOfStatic,setAddressIsCPIndexOfStatic(_Bool),1,OMR,Symbol
setAddressOfClassObject,setAddressOfClassObject(),1,OMR,Symbol
setArrayShadowSymbol,setArrayShadowSymbol(),1,OMR,Symbol
setArrayletShadowSymbol,setArrayletShadowSymbol(),1,OMR,Symbol
setAutoAddressTaken,setAutoAddressTaken(),1,OMR,Symbol
setAutoMarkerSymbol,setAutoMarkerSymbol(),1,OMR,Symbol
setBehaveLikeNonTemp,setBehaveLikeNonTemp(),1,OMR,Symbol
setCallSiteTableEntry,setCallSiteTableEntry(),1,OMR,Symbol
setClassObject,setClassObject(),1,OMR,Symbol
setClassSymbolReference,setClassSymbolReference(TR::SymbolReference *),1,OMR,AutomaticSymbol
setCompiledMethod,setCompiledMethod(),1,OMR,Symbol
setConst,setConst(),1,OMR,Symbol
setConstMethodHandle,setConstMethodHandle(),1,OMR,Symbol
setConstMethodType,setConstMethodType(),1,OMR,Symbol
setConstString,setConstString(),1,OMR,Symbol
setCountForRecompile,setCountForRecompile(),1,OMR,Symbol
setDataType,setDataType(TR::DataType),1,OMR,Symbol
setEndInternalControlFlow,setEndInternalControlFlow(),1,OMR,Symbol
setEndOfColdInstructionStream,setEndOfColdInstructionStream(),1,OMR,Symbol
setFinal,setFinal(),1,OMR,Symbol
setFlagValue,setFlagValue(uint32_t,_Bool),1,OMR,Symbol
setGCMapIndex,setGCMapIndex(int32_t),1,OMR,RegisterMappedSymbol
setGCRPatchPoint,setGCRPatchPoint(),1,OMR,Symbol
setGlobalFragmentShadowSymbol,setGlobalFragmentShadowSymbol(),1,OMR,Symbol
setGlobalLabel,setGlobalLabel(),1,OMR,Symbol
setGlobalRegisterNumber,setGlobalRegisterNumber(uint32_t),1,OMR,AutomaticSymbol
setHasAddrTaken,setHasAddrTaken(),1,OMR,Symbol
setHoldsMonitoredObject,setHoldsMonitoredObject(),1,OMR,Symbol
setImmutableField,setImmutableField(),1,OMR,Symbol
setInitializedReference,setInitializedReference(),1,OMR,Symbol
setInternalControlFlowMerge,setInternalControlFlowMerge(),1,OMR,Symbol
setInternalPointer,setInternalPointer(),1,OMR,Symbol
setIsAddressTaken,setIsAddressTaken(_Bool),1,OMR,AutomaticSymbol
setIsInGlobalRegister,setIsInGlobalRegister(_Bool),1,OMR,Symbol
setIsLabel,setIsLabel(),1,OMR,Symbol
setIsPendingPush,setIsPendingPush(),1,OMR,Symbol
setIsReferenced,setIsReferenced(_Bool),1,OMR,AutomaticSymbol
setIsRegisterSymbol,setIsRegisterSymbol(),1,OMR,Symbol
setIsSingleUse,setIsSingleUse(_Bool),1,OMR,AutomaticSymbol
setLiveLocalIndex,setLiveLocalIndex(uint16_t,class TR_FrontEnd *),1,OMR,RegisterMappedSymbol
setLiveLocalIndexUninitialized,setLiveLocalIndexUninitialized(),1,OMR,RegisterMappedSymbol
setLocalIndex,setLocalIndex(uint16_t),1,OMR,Symbol
setLocalObject,setLocalObject(),1,OMR,Symbol
setMemoryTypeShadowSymbol,setMemoryTypeShadowSymbol(),1,OMR,Symbol
setMethodMetaDataType,setMethodMetaDataType(enum TR_MethodMetaDataType),1,OMR,RegisterMappedSymbol
setMethodTypeTableEntry,setMethodTypeTableEntry(),1,OMR,Symbol
setName,setName(const char *),1,OMR,Symbol
setNamedShadowSymbol,setNamedShadowSymbol(),1,OMR,Symbol
setNodeToFreeAfter,setNodeToFreeAfter(TR::Node *),1,OMR,AutomaticSymbol
setNonLinear,setNonLinear(),1,OMR,Symbol
setNotCollected,setNotCollected(),1,OMR,Symbol
setNotDataAddress,setNotDataAddress(),1,OMR,Symbol
setOffset,setOffset(int32_t),1,OMR,RegisterMappedSymbol
setOrdered,setOrdered(),1,OMR,Symbol
setParmHasToBeOnStack,setParmHasToBeOnStack(),1,OMR,Symbol
setPinningArrayPointer,setPinningArrayPointer(),1,OMR,Symbol
setPinningArrayPointer,setPinningArrayPointer(TR::AutomaticSymbol *),0,OMR,AutomaticSymbol
setPrivate,setPrivate(),1,OMR,Symbol
setPythonConstantShadowSymbol,setPythonConstantShadowSymbol(),1,OMR,Symbol
setPythonLocalVariableShadowSymbol,setPythonLocalVariableShadowSymbol(),1,OMR,Symbol
setPythonNameShadowSymbol,setPythonNameShadowSymbol(),1,OMR,Symbol
setRealRegister,setRealRegister(),1,OMR,AutomaticSymbol
setRecompilationCounter,setRecompilationCounter(),1,OMR,Symbol
setReferenceCount,setReferenceCount(rcount_t),1,OMR,AutomaticSymbol
setReferenceSlots,setReferenceSlots(int32_t *),1,OMR,AutomaticSymbol
setReferencedParameter,setReferencedParameter(),1,OMR,Symbol
setReinstatedReceiver,setReinstatedReceiver(),1,OMR,Symbol
setRelativeLabel,setRelativeLabel(),1,OMR,Symbol
setSize,setSize(size_t),1,OMR,Symbol
setSlotSharedByRefAndNonRef,setSlotSharedByRefAndNonRef(_Bool),1,OMR,Symbol
setSpillTempAuto,setSpillTempAuto(),1,OMR,Symbol
setSpillTempLoaded,setSpillTempLoaded(),1,OMR,Symbol
setStartInternalControlFlow,setStartInternalControlFlow(),1,OMR,Symbol
setStartOfColdInstructionStream,setStartOfColdInstructionStream(),1,OMR,Symbol
setStartPC,setStartPC(),1,OMR,Symbol
setThisTempForObjectCtor,setThisTempForObjectCtor(),1,OMR,Symbol
setUninitializedReference,setUninitializedReference(),1,OMR,Symbol
setUnsafeShadowSymbol,setUnsafeShadowSymbol(),1,OMR,Symbol
setVMThreadLive,setVMThreadLive(),1,OMR,Symbol
setVariableSizeSymbol,setVariableSizeSymbol(),1,OMR,Symbol
setVolatile,setVolatile(),1,OMR,Symbol
~AutomaticSymbol,~AutomaticSymbol(),1,OMR,AutomaticSymbol
~RegisterMappedSymbol,~RegisterMappedSymbol(),1,OMR,RegisterMappedSymbol
~Symbol,~Symbol(),1,OMR,Symbol
Block,Block(const class OMR::Block &),1,OMR,Block
Block,Block(TR::TreeTop *,TR::TreeTop *,class TR_Memory *),0,OMR,Block
Block,Block(TR::Block &,TR::TreeTop *,TR::TreeTop *),0,OMR,Block
Block,Block(class TR_Memory *),0,OMR,Block
Block,Block(class TR::Block &&),0,TR,Block
Block,Block(class TR::Block &,TR::TreeTop *,TR::TreeTop *),0,TR,Block
CFGNode,CFGNode(const class TR::CFGNode &),1,TR,CFGNode
CFGNode,CFGNode(class TR::CFGNode &&),0,TR,CFGNode
CFGNode,CFGNode(class TR_Memory *),0,TR,CFGNode
CFGNode,CFGNode(int32_t,TR::Region &),0,TR,CFGNode
CFGNode,CFGNode(TR::Region &),0,TR,CFGNode
CFGNode,CFGNode(int32_t,class TR_Memory *),0,TR,CFGNode
TR_Link1<T>,TR_Link1<T>(T *),1,TR,Link1
addExceptionPredecessor,addExceptionPredecessor(class TR::CFGEdge *,enum TR_AllocationKind),1,TR,CFGNode
addExceptionPredecessor,addExceptionPredecessor(class TR::CFGEdge *),0,TR,CFGNode
addExceptionRangeForSnippet,addExceptionRangeForSnippet(uint32_t,uint32_t),1,OMR,Block
addExceptionSuccessor,addExceptionSuccessor(class TR::CFGEdge *,enum TR_AllocationKind),1,TR,CFGNode
addExceptionSuccessor,addExceptionSuccessor(class TR::CFGEdge *),0,TR,CFGNode
addPredecessor,addPredecessor(class TR::CFGEdge *),1,TR,CFGNode
addPredecessor,addPredecessor(class TR::CFGEdge *,enum TR_AllocationKind),0,TR,CFGNode
addSuccessor,addSuccessor(class TR::CFGEdge *,enum TR_AllocationKind),1,TR,CFGNode
addSuccessor,addSuccessor(class TR::CFGEdge *),0,TR,CFGNode
append,append(TR::TreeTop *),1,OMR,Block
asBlock,asBlock(),1,TR,CFGNode
asStructureSubGraphNode,asStructureSubGraphNode(),1,TR,CFGNode
branchesBackwards,branchesBackwards(),1,OMR,Block
breakFallThrough,breakFallThrough(TR::Compilation *,TR::Block *,TR::Block *),1,OMR,Block
canCatchExceptions,canCatchExceptions(uint32_t),1,OMR,Block
canFallThroughToNextBlock,canFallThroughToNextBlock(),1,OMR,Block
changeBranchDestination,changeBranchDestination(TR::TreeTop *,TR::CFG *),1,OMR,Block
clearGlobalRegisters,clearGlobalRegisters(),1,OMR,Block
collectReferencedAutoSymRefsIn,collectReferencedAutoSymRefsIn(TR::Compilation *,TR::Node *,class TR_BitVector *,vcount_t),1,OMR,Block
collectReferencedAutoSymRefsIn,collectReferencedAutoSymRefsIn(TR::Compilation *,class TR_BitVector *,vcount_t),0,OMR,Block
containsCall,containsCall(),1,OMR,Block
createConditionalBlocksBeforeTree,createConditionalBlocksBeforeTree(TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::CFG *,_Bool,_Bool),1,OMR,Block
createConditionalSideExitBeforeTree,createConditionalSideExitBeforeTree(TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,TR::CFG *,_Bool),1,OMR,Block
createEmptyBlock,createEmptyBlock(TR::Compilation *,int32_t,TR::Block *),1,OMR,Block
createEmptyBlock,createEmptyBlock(TR::Node *,TR::Compilation *,int32_t,TR::Block *),0,OMR,Block
denormalizeFrequency,denormalizeFrequency(int32_t),1,TR,CFGNode
denormalizedFrequency,denormalizedFrequency(int32_t,int32_t),1,TR,CFGNode
doNotProfile,doNotProfile(),1,OMR,Block
doesNotNeedLabelAtStart,doesNotNeedLabelAtStart(),1,OMR,Block
endsInBranch,endsInBranch(),1,OMR,Block
endsInGoto,endsInGoto(),1,OMR,Block
ensureCatchBlockExtensionExists,ensureCatchBlockExtensionExists(TR::Compilation *),1,OMR,Block
findFirstReference,findFirstReference(TR::Symbol *,vcount_t),1,OMR,Block
findVirtualGuardBlock,findVirtualGuardBlock(TR::CFG *),1,OMR,Block
firstBlockInLoop,firstBlockInLoop(),1,OMR,Block
fromBlockGetter,fromBlockGetter(class TR::CFGEdge *),1,TR,CFGNode
getBackwardTraversalIndex,getBackwardTraversalIndex(),1,TR,CFGNode
getBlockBCIndex,getBlockBCIndex(),1,OMR,Block
getBlockSize,getBlockSize(),1,OMR,Block
getByteCodeInfo,getByteCodeInfo(),1,OMR,Block
getCatchBlockExtension,getCatchBlockExtension(),1,OMR,Block
getCatchType,getCatchType(),1,OMR,Block
getCommonParentStructureIfExists,getCommonParentStructureIfExists(TR::Block *,TR::CFG *),1,OMR,Block
getDebugCounters,getDebugCounters(),1,OMR,Block
getEdge,getEdge(class TR::CFGNode *),1,TR,CFGNode
getEntry,getEntry(),1,OMR,Block
getExceptingTree,getExceptingTree(),1,OMR,Block
getExceptionClass,getExceptionClass(),1,OMR,Block
getExceptionClassNameChars,getExceptionClassNameChars(),1,OMR,Block
getExceptionClassNameLength,getExceptionClassNameLength(),1,OMR,Block
getExceptionPredecessorEdge,getExceptionPredecessorEdge(class TR::CFGNode *),1,TR,CFGNode
getExceptionPredecessors,getExceptionPredecessors(),1,TR,CFGNode
getExceptionSuccessorEdge,getExceptionSuccessorEdge(class TR::CFGNode *),1,TR,CFGNode
getExceptionSuccessors,getExceptionSuccessors(),1,TR,CFGNode
getExit,getExit(),1,OMR,Block
getFallThroughEdgeInEBB,getFallThroughEdgeInEBB(),1,OMR,Block
getFirstInstruction,getFirstInstruction(),1,OMR,Block
getFirstRealTreeTop,getFirstRealTreeTop(),1,OMR,Block
getFirstSnippetBoundaries,getFirstSnippetBoundaries(),1,OMR,Block
getForwardTraversalIndex,getForwardTraversalIndex(),1,TR,CFGNode
getFrequency,getFrequency(),1,TR,CFGNode
getGlobalNormalizedFrequency,getGlobalNormalizedFrequency(TR::CFG *),1,OMR,Block
getGlobalRegisters,getGlobalRegisters(TR::Compilation *),1,OMR,Block
getHandlerIndex,getHandlerIndex(),1,OMR,Block
getInlineDepth,getInlineDepth(),1,OMR,Block
getInstructionBoundaries,getInstructionBoundaries(),1,OMR,Block
getJ9EstimateCodeSizeMethod,getJ9EstimateCodeSizeMethod(),1,OMR,Block
getLastInstruction,getLastInstruction(),1,OMR,Block
getLastNonControlFlowTreeTop,getLastNonControlFlowTreeTop(),1,OMR,Block
getLastRealTreeTop,getLastRealTreeTop(),1,OMR,Block
getLiveLocals,getLiveLocals(),1,OMR,Block
getMaxColdFrequency,getMaxColdFrequency(TR::Block *,TR::Block *),1,OMR,Block
getMinColdFrequency,getMinColdFrequency(TR::Block *,TR::Block *),1,OMR,Block
getName,getName(class TR_Debug *),1,OMR,Block
getNestingDepth,getNestingDepth(),1,OMR,Block
getNext,getNext(),1,TR,Link1
getNextBlock,getNextBlock(),1,OMR,Block
getNextExtendedBlock,getNextExtendedBlock(),1,OMR,Block
getNormalizedFrequency,getNormalizedFrequency(TR::CFG *),1,OMR,Block
getNumber,getNumber(),1,TR,CFGNode
getNumberOfRealTreeTops,getNumberOfRealTreeTops(),1,OMR,Block
getOwningMethod,getOwningMethod(),1,OMR,Block
getParentStructureIfExists,getParentStructureIfExists(TR::CFG *),1,OMR,Block
getPartialFlags,getPartialFlags(),1,OMR,Block
getPredecessorEdge,getPredecessorEdge(class TR::CFGNode *),1,TR,CFGNode
getPredecessors,getPredecessors(),1,TR,CFGNode
getPrevBlock,getPrevBlock(),1,OMR,Block
getRegisterSaveDescriptionBits,getRegisterSaveDescriptionBits(),1,OMR,Block
getScaledSpecializedFrequency,getScaledSpecializedFrequency(int32_t),1,OMR,Block
getStructureOf,getStructureOf(),1,OMR,Block
getSuccessorEdge,getSuccessorEdge(class TR::CFGNode *),1,TR,CFGNode
getSuccessors,getSuccessors(),1,TR,CFGNode
getUnrollFactor,getUnrollFactor(),1,OMR,Block
getVisitCount,getVisitCount(),1,TR,CFGNode
hasBeenVisited,hasBeenVisited(),1,OMR,Block
hasCallToSuperCold,hasCallToSuperCold(),1,OMR,Block
hasCalls,hasCalls(),1,OMR,Block
hasExceptionPredecessor,hasExceptionPredecessor(class TR::CFGNode *),1,TR,CFGNode
hasExceptionPredecessors,hasExceptionPredecessors(),1,OMR,Block
hasExceptionSuccessor,hasExceptionSuccessor(class TR::CFGNode *),1,TR,CFGNode
hasExceptionSuccessors,hasExceptionSuccessors(),1,OMR,Block
hasPredecessor,hasPredecessor(class TR::CFGNode *),1,TR,CFGNode
hasSuccessor,hasSuccessor(class TR::CFGNode *),1,TR,CFGNode
incVisitCount,incVisitCount(),1,TR,CFGNode
inheritBlockInfo,inheritBlockInfo(TR::Block *,_Bool),1,OMR,Block
insertBlockAsFallThrough,insertBlockAsFallThrough(TR::Compilation *,TR::Block *,TR::Block *),1,OMR,Block
isAdded,isAdded(),1,OMR,Block
isCatchBlock,isCatchBlock(),1,OMR,Block
isCold,isCold(),1,OMR,Block
isCreatedAtCodeGen,isCreatedAtCodeGen(),1,OMR,Block
isCreatedByVersioning,isCreatedByVersioning(),1,OMR,Block
isDifficultBlock,isDifficultBlock(),1,OMR,Block
isEmptyBlock,isEmptyBlock(),1,OMR,Block
isEndBlock,isEndBlock(),1,OMR,Block
isEntryOfShortRunningLoop,isEntryOfShortRunningLoop(),1,OMR,Block
isExtensionOfPreviousBlock,isExtensionOfPreviousBlock(),1,OMR,Block
isGotoBlock,isGotoBlock(TR::Compilation *,_Bool),1,OMR,Block
isLastWarmBlock,isLastWarmBlock(),1,OMR,Block
isLoopInvariantBlock,isLoopInvariantBlock(),1,OMR,Block
isOSRCatchBlock,isOSRCatchBlock(),1,OMR,Block
isOSRCodeBlock,isOSRCodeBlock(),1,OMR,Block
isOSRInduceBlock,isOSRInduceBlock(),1,OMR,Block
isPRECandidate,isPRECandidate(),1,OMR,Block
isPartialInlineBlock,isPartialInlineBlock(),1,OMR,Block
isRestartBlock,isRestartBlock(),1,OMR,Block
isSpecialized,isSpecialized(),1,OMR,Block
isSuperCold,isSuperCold(),1,OMR,Block
isSynchronizedHandler,isSynchronizedHandler(),1,OMR,Block
isTargetOfJumpWhoseTargetCanBeChanged,isTargetOfJumpWhoseTargetCanBeChanged(TR::Compilation *),1,OMR,Block
isUnreachable,isUnreachable(),1,TR,CFGNode
isUnsanitizeable,isUnsanitizeable(),1,OMR,Block
isValid,isValid(),1,TR,Link1
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,CFGNode
jitPersistentFree,jitPersistentFree(void *),1,TR,CFGNode
movePredecessors,movePredecessors(class TR::CFGNode *),1,TR,CFGNode
moveSuccessors,moveSuccessors(class TR::CFGNode *),1,TR,CFGNode
nodeIsRemoved,nodeIsRemoved(),1,TR,CFGNode
normalizeFrequency,normalizeFrequency(int32_t,int32_t),1,TR,CFGNode
normalizeFrequency,normalizeFrequency(int32_t),0,TR,CFGNode
normalizedFrequency,normalizedFrequency(int32_t,int32_t),1,TR,CFGNode
operator delete,operator delete(void *,TR::Region &),1,TR,CFGNode
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,CFGNode
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,CFGNode
operator delete,operator delete(void *,size_t),0,TR,CFGNode
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,CFGNode
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,CFGNode
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,CFGNode
operator delete[],operator delete[](void *,TR::Region &),0,TR,CFGNode
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,CFGNode
operator new,operator new(size_t,TR::Region &),1,TR,CFGNode
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,CFGNode
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,CFGNode
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,CFGNode
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,CFGNode
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,CFGNode
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,CFGNode
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,CFGNode
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,CFGNode
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,CFGNode
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,CFGNode
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,CFGNode
operator new[],operator new[](size_t,TR::Region &),0,TR,CFGNode
operator=,operator=(class TR::CFGNode &&),1,TR,CFGNode
operator=,operator=(const class TR::CFGNode &),0,TR,CFGNode
operator=,operator=(const class OMR::Block &),0,OMR,Block
operator=,operator=(class TR::Block &&),0,TR,Block
operator=,operator=(const class TR::Block &),0,TR,Block
prepend,prepend(TR::TreeTop *),1,OMR,Block
redirectFlowToNewDestination,redirectFlowToNewDestination(TR::Compilation *,TR::CFGEdge *,TR::Block *,_Bool),1,OMR,Block
removeBranch,removeBranch(TR::Compilation *),1,OMR,Block
removeExceptionPredecessor,removeExceptionPredecessor(class TR::CFGEdge *),1,TR,CFGNode
removeExceptionSuccessor,removeExceptionSuccessor(class TR::CFGEdge *),1,TR,CFGNode
removeFromCFG,removeFromCFG(TR::Compilation *),1,TR,CFGNode
removeNode,removeNode(),1,TR,CFGNode
removePredecessor,removePredecessor(class TR::CFGEdge *),1,TR,CFGNode
removeSuccessor,removeSuccessor(class TR::CFGEdge *),1,TR,CFGNode
self,self(),1,OMR,Block
setAsLoopInvariantBlock,setAsLoopInvariantBlock(_Bool),1,OMR,Block
setBackwardTraversalIndex,setBackwardTraversalIndex(int32_t),1,TR,CFGNode
setBlockBCIndex,setBlockBCIndex(int32_t),1,OMR,Block
setBlockSize,setBlockSize(int32_t),1,OMR,Block
setBranchesBackwards,setBranchesBackwards(),1,OMR,Block
setByteCodeIndex,setByteCodeIndex(int32_t,TR::Compilation *),1,OMR,Block
setCatchBlockExtension,setCatchBlockExtension(class OMR::Block::TR_CatchBlockExtension *),1,OMR,Block
setContainsCall,setContainsCall(_Bool),1,OMR,Block
setCreatedByVersioning,setCreatedByVersioning(_Bool),1,OMR,Block
setDebugCounters,setDebugCounters(TR::DebugCounterAggregation *),1,OMR,Block
setDoNotProfile,setDoNotProfile(),1,OMR,Block
setEntry,setEntry(TR::TreeTop *),1,OMR,Block
setExceptionClassName,setExceptionClassName(char *,int32_t,TR::Compilation *),1,OMR,Block
setExit,setExit(TR::TreeTop *),1,OMR,Block
setFirstBlockInLoop,setFirstBlockInLoop(),1,OMR,Block
setFirstInstruction,setFirstInstruction(TR::Instruction *),1,OMR,Block
setForwardTraversalIndex,setForwardTraversalIndex(int32_t),1,TR,CFGNode
setFrequency,setFrequency(int32_t),1,TR,CFGNode
setHandlerInfo,setHandlerInfo(uint32_t,uint8_t,uint16_t,class TR_ResolvedMethod *,TR::Compilation *),1,OMR,Block
setHandlerInfoWithOutBCInfo,setHandlerInfoWithOutBCInfo(uint32_t,uint8_t,uint16_t,class TR_ResolvedMethod *,TR::Compilation *),1,OMR,Block
setHasBeenVisited,setHasBeenVisited(_Bool),1,OMR,Block
setHasCallToSuperCold,setHasCallToSuperCold(_Bool),1,OMR,Block
setHasCalls,setHasCalls(_Bool),1,OMR,Block
setInstructionBoundaries,setInstructionBoundaries(uint32_t,uint32_t),1,OMR,Block
setIsAdded,setIsAdded(),1,OMR,Block
setIsCold,setIsCold(_Bool),1,OMR,Block
setIsCreatedAtCodeGen,setIsCreatedAtCodeGen(_Bool),1,OMR,Block
setIsDifficultBlock,setIsDifficultBlock(_Bool),1,OMR,Block
setIsEndBlock,setIsEndBlock(_Bool),1,OMR,Block
setIsEntryOfShortRunningLoop,setIsEntryOfShortRunningLoop(),1,OMR,Block
setIsExtensionOfPreviousBlock,setIsExtensionOfPreviousBlock(_Bool),1,OMR,Block
setIsLastWarmBlock,setIsLastWarmBlock(_Bool),1,OMR,Block
setIsOSRCatchBlock,setIsOSRCatchBlock(),1,OMR,Block
setIsOSRCodeBlock,setIsOSRCodeBlock(),1,OMR,Block
setIsOSRInduceBlock,setIsOSRInduceBlock(),1,OMR,Block
setIsPRECandidate,setIsPRECandidate(_Bool),1,OMR,Block
setIsSpecialized,setIsSpecialized(_Bool),1,OMR,Block
setIsSuperCold,setIsSuperCold(_Bool),1,OMR,Block
setIsSynchronizedHandler,setIsSynchronizedHandler(),1,OMR,Block
setIsUnsanitizeable,setIsUnsanitizeable(_Bool),1,OMR,Block
setJ9EstimateCodeSizeMethod,setJ9EstimateCodeSizeMethod(class TR_ResolvedMethod *),1,OMR,Block
setLastInstruction,setLastInstruction(TR::Instruction *),1,OMR,Block
setLiveLocals,setLiveLocals(class TR_BitVector *),1,OMR,Block
setNext,setNext(T *),1,TR,Link1
setNumber,setNumber(int32_t),1,TR,CFGNode
setPartialInlineBlock,setPartialInlineBlock(_Bool),1,OMR,Block
setRegisterSaveDescriptionBits,setRegisterSaveDescriptionBits(class TR_BitVector *),1,OMR,Block
setRestartBlock,setRestartBlock(_Bool),1,OMR,Block
setSpecializedDesyncCatchBlock,setSpecializedDesyncCatchBlock(),1,OMR,Block
setStructureOf,setStructureOf(class TR_BlockStructure *),1,OMR,Block
setUnrollFactor,setUnrollFactor(int),1,OMR,Block
setValid,setValid(_Bool),1,TR,Link1
setVisitCount,setVisitCount(vcount_t),1,TR,CFGNode
setWasHeaderOfCanonicalizedLoop,setWasHeaderOfCanonicalizedLoop(_Bool),1,OMR,Block
specializedDesyncCatchBlock,specializedDesyncCatchBlock(),1,OMR,Block
split,split(TR::TreeTop *,TR::CFG *,_Bool,_Bool,TR::ResolvedMethodSymbol *),1,OMR,Block
splitBlockAndAddConditional,splitBlockAndAddConditional(TR::TreeTop *,TR::TreeTop *,TR::CFG *,_Bool),1,OMR,Block
splitEdge,splitEdge(TR::Block *,TR::Block *,TR::Compilation *,TR::TreeTop **,_Bool),1,OMR,Block
splitWithGivenMethodSymbol,splitWithGivenMethodSymbol(TR::ResolvedMethodSymbol *,TR::TreeTop *,TR::CFG *,_Bool,_Bool),1,OMR,Block
startOfExtendedBlock,startOfExtendedBlock(),1,OMR,Block
takeGlRegDeps,takeGlRegDeps(TR::Compilation *,TR::Node *),1,OMR,Block
toBlockGetter,toBlockGetter(class TR::CFGEdge *),1,TR,CFGNode
uncommonNodesBetweenBlocks,uncommonNodesBetweenBlocks(TR::Compilation *,TR::Block *,TR::ResolvedMethodSymbol *),1,OMR,Block
verifyOSRInduceBlock,verifyOSRInduceBlock(TR::Compilation *),1,OMR,Block
wasHeaderOfCanonicalizedLoop,wasHeaderOfCanonicalizedLoop(),1,OMR,Block
~Block,~Block(),1,OMR,Block
~CFGNode,~CFGNode(),1,TR,CFGNode
LabelSymbol,LabelSymbol(class OMR::LabelSymbol &&),1,OMR,LabelSymbol
LabelSymbol,LabelSymbol(const class OMR::LabelSymbol &),0,OMR,LabelSymbol
LabelSymbol,LabelSymbol(TR::CodeGenerator *,TR::Block *),0,OMR,LabelSymbol
LabelSymbol,LabelSymbol(),0,OMR,LabelSymbol
LabelSymbol,LabelSymbol(TR::CodeGenerator *),0,OMR,LabelSymbol
getCodeLocation,getCodeLocation(),1,OMR,LabelSymbol
getDistance,getDistance(),1,OMR,LabelSymbol
getEstimatedCodeLocation,getEstimatedCodeLocation(),1,OMR,LabelSymbol
getInstruction,getInstruction(),1,OMR,LabelSymbol
getName,getName(class TR_Debug *),0,OMR,LabelSymbol
getSnippet,getSnippet(),1,OMR,LabelSymbol
getVMThreadRestoringLabel,getVMThreadRestoringLabel(),1,OMR,LabelSymbol
isTargeted,isTargeted(),1,OMR,LabelSymbol
makeRelativeLabelSymbol,makeRelativeLabelSymbol(intptr_t),1,OMR,LabelSymbol
operator=,operator=(const class OMR::LabelSymbol &),0,OMR,LabelSymbol
operator=,operator=(class OMR::LabelSymbol &&),0,OMR,LabelSymbol
operator=,operator=(class TR::LabelSymbol &&),0,TR,LabelSymbol
operator=,operator=(const class TR::LabelSymbol &),0,TR,LabelSymbol
setCodeLocation,setCodeLocation(uint8_t *),1,OMR,LabelSymbol
setDirectlyTargeted,setDirectlyTargeted(),1,OMR,LabelSymbol
setEstimatedCodeLocation,setEstimatedCodeLocation(int32_t),1,OMR,LabelSymbol
setInstruction,setInstruction(TR::Instruction *),1,OMR,LabelSymbol
setSnippet,setSnippet(TR::Snippet *),1,OMR,LabelSymbol
setVMThreadRestoringLabel,setVMThreadRestoringLabel(TR::LabelSymbol *),1,OMR,LabelSymbol
~LabelSymbol,~LabelSymbol(),1,OMR,LabelSymbol
MethodSymbol,MethodSymbol(const class OMR::MethodSymbol &),1,OMR,MethodSymbol
MethodSymbol,MethodSymbol(class OMR::MethodSymbol &&),0,OMR,MethodSymbol
MethodSymbol,MethodSymbol(enum TR_LinkageConventions,class TR_Method *),0,OMR,MethodSymbol
MethodSymbol,MethodSymbol(class TR::MethodSymbol &&),0,TR,MethodSymbol
MethodSymbol,MethodSymbol(const class TR::MethodSymbol &),0,TR,MethodSymbol
ResolvedMethodSymbol,ResolvedMethodSymbol(const class OMR::ResolvedMethodSymbol &),1,OMR,ResolvedMethodSymbol
ResolvedMethodSymbol,ResolvedMethodSymbol(class OMR::ResolvedMethodSymbol &&),0,OMR,ResolvedMethodSymbol
ResolvedMethodSymbol,ResolvedMethodSymbol(class TR_ResolvedMethod *,TR::Compilation *),0,OMR,ResolvedMethodSymbol
addAutomatic,addAutomatic(TR::AutomaticSymbol *),1,OMR,ResolvedMethodSymbol
addMethodMetaDataSymbol,addMethodMetaDataSymbol(TR::RegisterMappedSymbol *),1,OMR,ResolvedMethodSymbol
addOSRPoint,addOSRPoint(class TR_OSRPoint *),1,OMR,ResolvedMethodSymbol
addProfilingOffsetInfo,addProfilingOffsetInfo(int32_t,int32_t),1,OMR,ResolvedMethodSymbol
addTrivialDeadTreeBlock,addTrivialDeadTreeBlock(TR::Block *),1,OMR,ResolvedMethodSymbol
addVariableSizeSymbol,addVariableSizeSymbol(TR::AutomaticSymbol *),1,OMR,ResolvedMethodSymbol
canDirectNativeCall,canDirectNativeCall(),1,OMR,ResolvedMethodSymbol
canInjectInduceOSR,canInjectInduceOSR(TR::Node *),1,OMR,ResolvedMethodSymbol
canReplaceWithHWInstr,canReplaceWithHWInstr(),1,OMR,ResolvedMethodSymbol
cannotAttemptOSRAt,cannotAttemptOSRAt(TR_ByteCodeInfo &,TR::Block *,TR::Compilation *),1,OMR,ResolvedMethodSymbol
cannotAttemptOSRDuring,cannotAttemptOSRDuring(int32_t,TR::Compilation *,_Bool),1,OMR,ResolvedMethodSymbol
catchBlocksHaveRealPredecessors,catchBlocksHaveRealPredecessors(TR::CFG *,TR::Compilation *),1,OMR,ResolvedMethodSymbol
cleanupUnreachableOSRBlocks,cleanupUnreachableOSRBlocks(int32_t,TR::Compilation *),1,OMR,ResolvedMethodSymbol
clearProfilingOffsetInfo,clearProfilingOffsetInfo(),1,OMR,ResolvedMethodSymbol
comp,comp(),1,OMR,ResolvedMethodSymbol
containsOnlySinglePrecision,containsOnlySinglePrecision(),1,OMR,ResolvedMethodSymbol
detectInternalCycles,detectInternalCycles(TR::CFG *,TR::Compilation *),1,OMR,ResolvedMethodSymbol
doJSR292PerfTweaks,doJSR292PerfTweaks(),1,OMR,ResolvedMethodSymbol
dumpProfilingOffsetInfo,dumpProfilingOffsetInfo(TR::Compilation *),1,OMR,ResolvedMethodSymbol
findOSRPoint,findOSRPoint(TR_ByteCodeInfo &),1,OMR,ResolvedMethodSymbol
firstArgumentIsReceiver,firstArgumentIsReceiver(),1,OMR,MethodSymbol
genAndAttachOSRCodeBlocks,genAndAttachOSRCodeBlocks(int32_t),1,OMR,ResolvedMethodSymbol
genIL,genIL(class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *,TR::IlGenRequest &),1,OMR,ResolvedMethodSymbol
genInduceOSRCall,genInduceOSRCall(TR::TreeTop *,int32_t,class TR_OSRMethodData *,int32_t,_Bool,_Bool,TR::CFG *),1,OMR,ResolvedMethodSymbol
genInduceOSRCall,genInduceOSRCall(TR::TreeTop *,int32_t,int32_t,_Bool,_Bool,TR::CFG *),0,OMR,ResolvedMethodSymbol
genInduceOSRCallAndCleanUpFollowingTreesImmediately,genInduceOSRCallAndCleanUpFollowingTreesImmediately(TR::TreeTop *,TR_ByteCodeInfo,_Bool,TR::Compilation *),1,OMR,ResolvedMethodSymbol
genInduceOSRCallNode,genInduceOSRCallNode(TR::TreeTop *,int32_t,_Bool,_Bool,TR::CFG *),1,OMR,ResolvedMethodSymbol
genOSRHelperCall,genOSRHelperCall(int32_t,TR::SymbolReferenceTable *,TR::CFG *),1,OMR,ResolvedMethodSymbol
genPartialIL,genPartialIL(class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *,_Bool,class TR_InlineBlocks *),1,OMR,ResolvedMethodSymbol
generateAccurateNodeCount,generateAccurateNodeCount(),1,OMR,ResolvedMethodSymbol
getArrayCopyTempSlot,getArrayCopyTempSlot(class TR_FrontEnd *),1,OMR,ResolvedMethodSymbol
getAutoSymRefs,getAutoSymRefs(int32_t),1,OMR,ResolvedMethodSymbol
getAutoSymRefs,getAutoSymRefs(),0,OMR,ResolvedMethodSymbol
getAutomaticList,getAutomaticList(),1,OMR,ResolvedMethodSymbol
getFirstJitTempIndex,getFirstJitTempIndex(),1,OMR,ResolvedMethodSymbol
getFirstTreeTop,getFirstTreeTop(),1,OMR,ResolvedMethodSymbol
getFlowGraph,getFlowGraph(),1,OMR,ResolvedMethodSymbol
getLastTreeTop,getLastTreeTop(TR::Block *),1,OMR,ResolvedMethodSymbol
getLinkageConvention,getLinkageConvention(),1,OMR,MethodSymbol
getLocalMappingCursor,getLocalMappingCursor(),1,OMR,ResolvedMethodSymbol
getLogicalParameterList,getLogicalParameterList(TR::Compilation *),1,OMR,ResolvedMethodSymbol
getMandatoryRecognizedMethod,getMandatoryRecognizedMethod(),1,OMR,MethodSymbol
getMethod,getMethod(),1,OMR,MethodSymbol
getMethodAddress,getMethodAddress(),1,OMR,MethodSymbol
getMethodKind,getMethodKind(),1,OMR,MethodSymbol
getMethodMetaDataList,getMethodMetaDataList(),1,OMR,ResolvedMethodSymbol
getNumOSRPoints,getNumOSRPoints(),1,OMR,ResolvedMethodSymbol
getNumPPSlots,getNumPPSlots(),1,OMR,ResolvedMethodSymbol
getNumParameterSlots,getNumParameterSlots(),1,OMR,ResolvedMethodSymbol
getNumberOfBackEdges,getNumberOfBackEdges(),1,OMR,ResolvedMethodSymbol
getOSRByteCodeInfo,getOSRByteCodeInfo(TR::Node *),1,OMR,ResolvedMethodSymbol
getOSRPoints,getOSRPoints(),1,OMR,ResolvedMethodSymbol
getOSRTransitionTreeTop,getOSRTransitionTreeTop(TR::TreeTop *),1,OMR,ResolvedMethodSymbol
getObjectTempSlots,getObjectTempSlots(),1,OMR,ResolvedMethodSymbol
getParameterList,getParameterList(),1,OMR,ResolvedMethodSymbol
getParmSymRef,getParmSymRef(int32_t),1,OMR,ResolvedMethodSymbol
getPendingPushSymRefs,getPendingPushSymRefs(),1,OMR,ResolvedMethodSymbol
getPendingPushSymRefs,getPendingPushSymRefs(int32_t),0,OMR,ResolvedMethodSymbol
getProfilerFrequency,getProfilerFrequency(int32_t),1,OMR,ResolvedMethodSymbol
getProfilingByteCodeIndex,getProfilingByteCodeIndex(int32_t),1,OMR,ResolvedMethodSymbol
getProloguePushSlots,getProloguePushSlots(),1,OMR,ResolvedMethodSymbol
getPythonConstsSymbolRef,getPythonConstsSymbolRef(),1,OMR,ResolvedMethodSymbol
getRecognizedMethod,getRecognizedMethod(),1,OMR,MethodSymbol
getResolvedMethod,getResolvedMethod(),1,OMR,ResolvedMethodSymbol
getResolvedMethodIndex,getResolvedMethodIndex(),1,OMR,ResolvedMethodSymbol
getScalarTempSlots,getScalarTempSlots(),1,OMR,ResolvedMethodSymbol
getSyncObjectTemp,getSyncObjectTemp(),1,OMR,ResolvedMethodSymbol
getSyncObjectTempIndex,getSyncObjectTempIndex(),1,OMR,ResolvedMethodSymbol
getTempIndex,getTempIndex(),1,OMR,ResolvedMethodSymbol
getThisTempForObjectCtor,getThisTempForObjectCtor(),1,OMR,ResolvedMethodSymbol
getThisTempForObjectCtorIndex,getThisTempForObjectCtorIndex(),1,OMR,ResolvedMethodSymbol
getTrivialDeadTreeBlocksList,getTrivialDeadTreeBlocksList(),1,OMR,ResolvedMethodSymbol
getVariableSizeSymbolList,getVariableSizeSymbolList(),1,OMR,ResolvedMethodSymbol
hasBranches,hasBranches(),1,OMR,ResolvedMethodSymbol
hasCheckCasts,hasCheckCasts(),1,OMR,ResolvedMethodSymbol
hasCheckcastsOrInstanceOfs,hasCheckcastsOrInstanceOfs(),1,OMR,ResolvedMethodSymbol
hasDememoizationOpportunities,hasDememoizationOpportunities(),1,OMR,ResolvedMethodSymbol
hasEscapeAnalysisOpportunities,hasEscapeAnalysisOpportunities(),1,OMR,ResolvedMethodSymbol
hasInstanceOfs,hasInstanceOfs(),1,OMR,ResolvedMethodSymbol
hasMethodHandleInvokes,hasMethodHandleInvokes(),1,OMR,ResolvedMethodSymbol
hasNews,hasNews(),1,OMR,ResolvedMethodSymbol
hasOSRProhibitions,hasOSRProhibitions(),1,OMR,ResolvedMethodSymbol
hasSnapshots,hasSnapshots(),1,OMR,ResolvedMethodSymbol
hasThisCalls,hasThisCalls(),1,OMR,ResolvedMethodSymbol
hasUnkilledTemps,hasUnkilledTemps(),1,OMR,ResolvedMethodSymbol
hasVeryRefinedAliasSets,hasVeryRefinedAliasSets(),1,OMR,MethodSymbol
incTempIndex,incTempIndex(class TR_FrontEnd *),1,OMR,ResolvedMethodSymbol
induceImmediateOSRWithoutChecksBefore,induceImmediateOSRWithoutChecksBefore(TR::TreeTop *),1,OMR,ResolvedMethodSymbol
induceOSRAfter,induceOSRAfter(TR::TreeTop *,TR_ByteCodeInfo,TR::TreeTop *,_Bool,int32_t),1,OMR,ResolvedMethodSymbol
initForCompilation,initForCompilation(TR::Compilation *),1,OMR,ResolvedMethodSymbol
insertRematableStoresFromCallSites,insertRematableStoresFromCallSites(TR::Compilation *,int32_t,TR::TreeTop *),1,OMR,ResolvedMethodSymbol
insertStoresForDeadStackSlots,insertStoresForDeadStackSlots(TR::Compilation *,TR_ByteCodeInfo &,TR::TreeTop *,_Bool),1,OMR,ResolvedMethodSymbol
insertStoresForDeadStackSlotsBeforeInducingOSR,insertStoresForDeadStackSlotsBeforeInducingOSR(TR::Compilation *,int32_t,TR_ByteCodeInfo &,TR::TreeTop *),1,OMR,ResolvedMethodSymbol
isComputed,isComputed(),1,OMR,MethodSymbol
isComputedStatic,isComputedStatic(),1,OMR,MethodSymbol
isComputedVirtual,isComputedVirtual(),1,OMR,MethodSymbol
isEHAware,isEHAware(),1,OMR,MethodSymbol
isHelper,isHelper(),1,OMR,MethodSymbol
isInlinedByCG,isInlinedByCG(),1,OMR,MethodSymbol
isInterface,isInterface(),1,OMR,MethodSymbol
isInterpreted,isInterpreted(),1,OMR,MethodSymbol
isJITInternalNative,isJITInternalNative(),1,OMR,MethodSymbol
isJNI,isJNI(),1,OMR,MethodSymbol
isNative,isNative(),1,OMR,MethodSymbol
isNoTemps,isNoTemps(),1,OMR,ResolvedMethodSymbol
isNonReturning,isNonReturning(),1,OMR,MethodSymbol
isOSRRelatedNode,isOSRRelatedNode(TR::Node *),1,OMR,ResolvedMethodSymbol
isOSRRelatedNode,isOSRRelatedNode(TR::Node *,TR_ByteCodeInfo &),0,OMR,ResolvedMethodSymbol
isPureFunction,isPureFunction(),1,OMR,MethodSymbol
isSideEffectFree,isSideEffectFree(),1,OMR,ResolvedMethodSymbol
isSpecial,isSpecial(),1,OMR,MethodSymbol
isSynchronised,isSynchronised(),1,OMR,MethodSymbol
isSystemLinkageDispatch,isSystemLinkageDispatch(),1,OMR,MethodSymbol
isVMInternalNative,isVMInternalNative(),1,OMR,MethodSymbol
isVirtual,isVirtual(),1,OMR,MethodSymbol
matchInduceOSRCall,matchInduceOSRCall(TR::TreeTop *,int16_t,int16_t,const char *),1,OMR,ResolvedMethodSymbol
mayContainMonitors,mayContainMonitors(),1,OMR,ResolvedMethodSymbol
mayHaveIndirectCalls,mayHaveIndirectCalls(),1,OMR,ResolvedMethodSymbol
mayHaveInlineableCall,mayHaveInlineableCall(),1,OMR,ResolvedMethodSymbol
mayHaveLongOps,mayHaveLongOps(),1,OMR,ResolvedMethodSymbol
mayHaveLoops,mayHaveLoops(),1,OMR,ResolvedMethodSymbol
mayHaveNestedLoops,mayHaveNestedLoops(),1,OMR,ResolvedMethodSymbol
operator=,operator=(class OMR::MethodSymbol &&),0,OMR,MethodSymbol
operator=,operator=(const class OMR::MethodSymbol &),0,OMR,MethodSymbol
operator=,operator=(const class TR::MethodSymbol &),0,TR,MethodSymbol
operator=,operator=(class TR::MethodSymbol &&),0,TR,MethodSymbol
operator=,operator=(class OMR::ResolvedMethodSymbol &&),0,OMR,ResolvedMethodSymbol
operator=,operator=(const class OMR::ResolvedMethodSymbol &),0,OMR,ResolvedMethodSymbol
operator=,operator=(class TR::ResolvedMethodSymbol &&),0,TR,ResolvedMethodSymbol
operator=,operator=(const class TR::ResolvedMethodSymbol &),0,TR,ResolvedMethodSymbol
prependEmptyFirstBlock,prependEmptyFirstBlock(),1,OMR,ResolvedMethodSymbol
preservesAllRegisters,preservesAllRegisters(),1,OMR,MethodSymbol
recursivelyCountChildren,recursivelyCountChildren(TR::Node *),1,OMR,ResolvedMethodSymbol
removeTree,removeTree(TR::TreeTop *),1,OMR,ResolvedMethodSymbol
removeUnusedLocals,removeUnusedLocals(),1,OMR,ResolvedMethodSymbol
resetLiveLocalIndices,resetLiveLocalIndices(),1,OMR,ResolvedMethodSymbol
safeToSkipArrayStoreChecks,safeToSkipArrayStoreChecks(),1,OMR,MethodSymbol
safeToSkipBoundChecks,safeToSkipBoundChecks(),1,OMR,MethodSymbol
safeToSkipCheckCasts,safeToSkipCheckCasts(),1,OMR,MethodSymbol
safeToSkipChecksOnArrayCopies,safeToSkipChecksOnArrayCopies(),1,OMR,MethodSymbol
safeToSkipDivChecks,safeToSkipDivChecks(),1,OMR,MethodSymbol
safeToSkipNullChecks,safeToSkipNullChecks(),1,OMR,MethodSymbol
safeToSkipZeroInitializationOnNewarrays,safeToSkipZeroInitializationOnNewarrays(),1,OMR,MethodSymbol
setAutoSymRefs,setAutoSymRefs(TR_Array<List<TR::SymbolReference> > *),1,OMR,ResolvedMethodSymbol
setAutomaticList,setAutomaticList(List<TR::AutomaticSymbol>),1,OMR,ResolvedMethodSymbol
setCanDirectNativeCall,setCanDirectNativeCall(_Bool),1,OMR,ResolvedMethodSymbol
setCanReplaceWithHWInstr,setCanReplaceWithHWInstr(_Bool),1,OMR,ResolvedMethodSymbol
setCannotAttemptOSR,setCannotAttemptOSR(int32_t),1,OMR,ResolvedMethodSymbol
setComp,setComp(TR::Compilation *),1,OMR,ResolvedMethodSymbol
setContainsOnlySinglePrecision,setContainsOnlySinglePrecision(_Bool),1,OMR,ResolvedMethodSymbol
setEHAware,setEHAware(),1,OMR,MethodSymbol
setFirstJitTempIndex,setFirstJitTempIndex(int32_t),1,OMR,ResolvedMethodSymbol
setFirstTreeTop,setFirstTreeTop(TR::TreeTop *),1,OMR,ResolvedMethodSymbol
setFlowGraph,setFlowGraph(TR::CFG *),1,OMR,ResolvedMethodSymbol
setHasBranches,setHasBranches(_Bool),1,OMR,ResolvedMethodSymbol
setHasCheckCasts,setHasCheckCasts(_Bool),1,OMR,ResolvedMethodSymbol
setHasDememoizationOpportunities,setHasDememoizationOpportunities(_Bool),1,OMR,ResolvedMethodSymbol
setHasInstanceOfs,setHasInstanceOfs(_Bool),1,OMR,ResolvedMethodSymbol
setHasMethodHandleInvokes,setHasMethodHandleInvokes(_Bool),1,OMR,ResolvedMethodSymbol
setHasNews,setHasNews(_Bool),1,OMR,ResolvedMethodSymbol
setHasSnapshots,setHasSnapshots(_Bool),1,OMR,ResolvedMethodSymbol
setHasThisCalls,setHasThisCalls(_Bool),1,OMR,ResolvedMethodSymbol
setHasUnkilledTemps,setHasUnkilledTemps(_Bool),1,OMR,ResolvedMethodSymbol
setHasVeryRefinedAliasSets,setHasVeryRefinedAliasSets(_Bool),1,OMR,MethodSymbol
setHelper,setHelper(),1,OMR,MethodSymbol
setInterface,setInterface(),1,OMR,MethodSymbol
setInterpreted,setInterpreted(_Bool),1,OMR,MethodSymbol
setIsInlinedByCG,setIsInlinedByCG(),1,OMR,MethodSymbol
setIsSideEffectFree,setIsSideEffectFree(_Bool),1,OMR,ResolvedMethodSymbol
setJITInternalNative,setJITInternalNative(_Bool),1,OMR,MethodSymbol
setJNI,setJNI(),1,OMR,MethodSymbol
setLinkage,setLinkage(enum TR_LinkageConventions),1,OMR,MethodSymbol
setLocalMappingCursor,setLocalMappingCursor(uint32_t),1,OMR,ResolvedMethodSymbol
setMayContainMonitors,setMayContainMonitors(_Bool),1,OMR,ResolvedMethodSymbol
setMayHaveIndirectCalls,setMayHaveIndirectCalls(_Bool),1,OMR,ResolvedMethodSymbol
setMayHaveInlineableCall,setMayHaveInlineableCall(_Bool),1,OMR,ResolvedMethodSymbol
setMayHaveLongOps,setMayHaveLongOps(_Bool),1,OMR,ResolvedMethodSymbol
setMayHaveLoops,setMayHaveLoops(_Bool),1,OMR,ResolvedMethodSymbol
setMayHaveNestedLoops,setMayHaveNestedLoops(_Bool),1,OMR,ResolvedMethodSymbol
setMethod,setMethod(class TR_Method *),1,OMR,MethodSymbol
setMethodAddress,setMethodAddress(void *),1,OMR,MethodSymbol
setMethodKind,setMethodKind(int32_t),1,OMR,MethodSymbol
setNoTemps,setNoTemps(_Bool),1,OMR,ResolvedMethodSymbol
setNonReturning,setNonReturning(),1,OMR,MethodSymbol
setObjectTempSlots,setObjectTempSlots(uint32_t),1,OMR,ResolvedMethodSymbol
setParameterList,setParameterList(),1,OMR,ResolvedMethodSymbol
setParmSymRef,setParmSymRef(int32_t,TR::SymbolReference *),1,OMR,ResolvedMethodSymbol
setPendingPushSymRefs,setPendingPushSymRefs(TR_Array<List<TR::SymbolReference> > *),1,OMR,ResolvedMethodSymbol
setPreservesAllRegisters,setPreservesAllRegisters(),1,OMR,MethodSymbol
setProfilerFrequency,setProfilerFrequency(int32_t,int32_t),1,OMR,ResolvedMethodSymbol
setProloguePushSlots,setProloguePushSlots(uint32_t),1,OMR,ResolvedMethodSymbol
setResolvedMethod,setResolvedMethod(class TR_ResolvedMethod *),1,OMR,ResolvedMethodSymbol
setResolvedMethodIndex,setResolvedMethodIndex(class mcount_t),1,OMR,ResolvedMethodSymbol
setScalarTempSlots,setScalarTempSlots(uint32_t),1,OMR,ResolvedMethodSymbol
setSpecial,setSpecial(),1,OMR,MethodSymbol
setStatic,setStatic(),1,OMR,MethodSymbol
setSyncObjectTemp,setSyncObjectTemp(TR::SymbolReference *),1,OMR,ResolvedMethodSymbol
setSynchronised,setSynchronised(),1,OMR,MethodSymbol
setSystemLinkageDispatch,setSystemLinkageDispatch(),1,OMR,MethodSymbol
setTempIndex,setTempIndex(int32_t,class TR_FrontEnd *),1,OMR,ResolvedMethodSymbol
setThisTempForObjectCtor,setThisTempForObjectCtor(TR::SymbolReference *),0,OMR,ResolvedMethodSymbol
setTreatAsAlwaysExpandBIF,setTreatAsAlwaysExpandBIF(_Bool),1,OMR,MethodSymbol
setUnimplementedOpcode,setUnimplementedOpcode(uint8_t),1,OMR,ResolvedMethodSymbol
setUnsynchronised,setUnsynchronised(),1,OMR,MethodSymbol
setUsesSinglePrecisionMode,setUsesSinglePrecisionMode(_Bool),1,OMR,ResolvedMethodSymbol
setVMInternalNative,setVMInternalNative(_Bool),1,OMR,MethodSymbol
setVirtual,setVirtual(),1,OMR,MethodSymbol
sharesStackSlot,sharesStackSlot(TR::SymbolReference *),1,OMR,ResolvedMethodSymbol
sharesStackSlots,sharesStackSlots(TR::Compilation *),1,OMR,ResolvedMethodSymbol
signature,signature(class TR_Memory *),1,OMR,ResolvedMethodSymbol
skipArrayStoreChecks,skipArrayStoreChecks(),1,OMR,ResolvedMethodSymbol
skipBoundChecks,skipBoundChecks(),1,OMR,ResolvedMethodSymbol
skipCheckCasts,skipCheckCasts(),1,OMR,ResolvedMethodSymbol
skipChecksOnArrayCopies,skipChecksOnArrayCopies(),1,OMR,ResolvedMethodSymbol
skipDivChecks,skipDivChecks(),1,OMR,ResolvedMethodSymbol
skipNullChecks,skipNullChecks(),1,OMR,ResolvedMethodSymbol
skipZeroInitializationOnNewarrays,skipZeroInitializationOnNewarrays(),1,OMR,ResolvedMethodSymbol
supportsInduceOSR,supportsInduceOSR(TR_ByteCodeInfo &,TR::Block *,TR::Compilation *,_Bool),1,OMR,ResolvedMethodSymbol
treatAsAlwaysExpandBIF,treatAsAlwaysExpandBIF(),1,OMR,MethodSymbol
uncheckedSetTempIndex,uncheckedSetTempIndex(int32_t),1,OMR,ResolvedMethodSymbol
unimplementedOpcode,unimplementedOpcode(),1,OMR,ResolvedMethodSymbol
usesSinglePrecisionMode,usesSinglePrecisionMode(),1,OMR,ResolvedMethodSymbol
~MethodSymbol,~MethodSymbol(),1,OMR,MethodSymbol
~ResolvedMethodSymbol,~ResolvedMethodSymbol(),1,OMR,ResolvedMethodSymbol
StaticSymbol,StaticSymbol(class OMR::StaticSymbol &&),1,OMR,StaticSymbol
StaticSymbol,StaticSymbol(TR::DataType,uint32_t),0,OMR,StaticSymbol
StaticSymbol,StaticSymbol(TR::DataType),0,OMR,StaticSymbol
StaticSymbol,StaticSymbol(TR::DataType,void *),0,OMR,StaticSymbol
StaticSymbol,StaticSymbol(const class OMR::StaticSymbol &),0,OMR,StaticSymbol
getStaticAddress,getStaticAddress(),1,OMR,StaticSymbol
getTOCIndex,getTOCIndex(),1,OMR,StaticSymbol
makeNamed,makeNamed(const char *),1,OMR,StaticSymbol
operator=,operator=(class OMR::StaticSymbol &&),0,OMR,StaticSymbol
operator=,operator=(const class OMR::StaticSymbol &),0,OMR,StaticSymbol
operator=,operator=(class TR::StaticSymbol &&),0,TR,StaticSymbol
operator=,operator=(const class TR::StaticSymbol &),0,TR,StaticSymbol
setStaticAddress,setStaticAddress(void *),1,OMR,StaticSymbol
setTOCIndex,setTOCIndex(uint32_t),1,OMR,StaticSymbol
setUpDLPFlags,setUpDLPFlags(int32_t),1,OMR,StaticSymbol
~StaticSymbol,~StaticSymbol(),1,OMR,StaticSymbol
Machine,Machine(class OMR::Machine &&),1,OMR,Machine
Machine,Machine(uint8_t,uint8_t,uint8_t),0,OMR,Machine
Machine,Machine(const class OMR::Machine &),0,OMR,Machine
Machine,Machine(),0,OMR,Machine
Machine,Machine(class OMR::X86::Machine &&),0,OMR,X86::Machine
Machine,Machine(const class OMR::X86::Machine &),0,OMR,X86::Machine
Machine,Machine(uint8_t,uint8_t,TR::CodeGenerator *,TR::RealRegister **,TR::Register **,uint8_t,uint8_t,uint8_t,TR::Register **,uint32_t *),0,OMR,X86::Machine
Machine,Machine(class OMR::X86::AMD64::Machine &&),0,OMR,X86::AMD64::Machine
Machine,Machine(const class OMR::X86::AMD64::Machine &),0,OMR,X86::AMD64::Machine
Machine,Machine(TR::CodeGenerator *),0,OMR,X86::AMD64::Machine
adjustRegisterUseCountsDown,adjustRegisterUseCountsDown(TR::list<OMR::RegisterUsage *> *,_Bool),1,OMR,X86::Machine
adjustRegisterUseCountsUp,adjustRegisterUseCountsUp(TR::list<OMR::RegisterUsage *> *,_Bool),1,OMR,X86::Machine
captureRegisterAssociations,captureRegisterAssociations(),1,OMR,X86::Machine
captureRegisterFile,captureRegisterFile(),1,OMR,X86::Machine
captureSpilledRegistersList,captureSpilledRegistersList(),1,OMR,X86::Machine
cg,cg(),1,OMR,X86::Machine
clearRegisterAssociations,clearRegisterAssociations(),1,OMR,X86::Machine
cloneRegisterFile,cloneRegisterFile(TR::RealRegister **,enum TR_AllocationKind),1,OMR,X86::Machine
coerceGPRegisterAssignment,coerceGPRegisterAssignment(TR::Instruction *,TR::Register *,TR::class RealRegister::RegNum,_Bool),1,OMR,X86::Machine
coerceGPRegisterAssignment,coerceGPRegisterAssignment(TR::Instruction *,TR::Register *,enum TR_RegisterSizes),0,OMR,X86::Machine
coerceXMMRegisterAssignment,coerceXMMRegisterAssignment(TR::Instruction *,TR::Register *,TR::class RealRegister::RegNum,_Bool),1,OMR,X86::Machine
createCondForLiveAndSpilledGPRs,createCondForLiveAndSpilledGPRs(_Bool,TR::list<TR::Register *> *),1,OMR,X86::Machine
createDepCondForLiveGPRs,createDepCondForLiveGPRs(),1,OMR,X86::Machine
createRegisterAssociationDirective,createRegisterAssociationDirective(TR::Instruction *),1,OMR,X86::Machine
disableNewPickRegister,disableNewPickRegister(),1,OMR,X86::AMD64::Machine
disassociateUnspilledBackingStorage,disassociateUnspilledBackingStorage(),1,OMR,X86::Machine
enableNewPickRegister,enableNewPickRegister(),1,OMR,X86::AMD64::Machine
findBestFreeGPRegister,findBestFreeGPRegister(TR::Instruction *,TR::Register *,enum TR_RegisterSizes,_Bool),1,OMR,X86::Machine
findFreeFPRegister,findFreeFPRegister(),1,OMR,X86::Machine
fpCoerceRegistersToTopOfStack,fpCoerceRegistersToTopOfStack(TR::Instruction *,TR::Register *,TR::Register *,_Bool),1,OMR,X86::Machine
fpDeterminePopOpCode,fpDeterminePopOpCode(enum TR_X86OpCodes),1,OMR,X86::Machine
fpDetermineReverseOpCode,fpDetermineReverseOpCode(enum TR_X86OpCodes),1,OMR,X86::Machine
fpGetNumberOfLiveFPRs,fpGetNumberOfLiveFPRs(),1,OMR,X86::Machine
fpGetNumberOfLiveXMMRs,fpGetNumberOfLiveXMMRs(),1,OMR,X86::Machine
fpMapToStackRelativeRegister,fpMapToStackRelativeRegister(TR::Register *),1,OMR,X86::Machine
fpMapToStackRelativeRegister,fpMapToStackRelativeRegister(int32_t),0,OMR,X86::Machine
fpSpillFPR,fpSpillFPR(TR::Instruction *,TR::Register *),1,OMR,X86::Machine
fpSpillStack,fpSpillStack(TR::Instruction *),1,OMR,X86::Machine
fpStackCoerce,fpStackCoerce(TR::Register *,int32_t),1,OMR,X86::Machine
fpStackFXCH,fpStackFXCH(TR::Instruction *,int32_t),1,OMR,X86::Machine
fpStackFXCH,fpStackFXCH(TR::Instruction *,TR::Register *,_Bool),0,OMR,X86::Machine
fpStackPop,fpStackPop(),1,OMR,X86::Machine
fpStackPush,fpStackPush(TR::Register *),1,OMR,X86::Machine
freeBestFPRegister,freeBestFPRegister(TR::Instruction *),1,OMR,X86::Machine
freeBestGPRegister,freeBestGPRegister(TR::Instruction *,TR::Register *,enum TR_RegisterSizes,TR::class RealRegister::RegNum,_Bool),1,OMR,X86::Machine
getCopiedFPStackRegister,getCopiedFPStackRegister(int32_t),1,OMR,X86::Machine
getDebug,getDebug(),1,OMR,X86::Machine
getDummyLocalMR,getDummyLocalMR(TR::DataType),1,OMR,X86::Machine
getFPStackLocationPtr,getFPStackLocationPtr(int32_t),1,OMR,X86::Machine
getFPStackRegister,getFPStackRegister(int32_t),1,OMR,X86::Machine
getFPStackRegisterNode,getFPStackRegisterNode(int32_t),1,OMR,X86::Machine
getFPStackShape,getFPStackShape(),1,OMR,X86::Machine
getFPTopOfStack,getFPTopOfStack(),1,OMR,X86::Machine
getFPTopOfStackPtr,getFPTopOfStackPtr(),1,OMR,X86::Machine
getFirstGlobalRegisterNumber,getFirstGlobalRegisterNumber(enum TR_RegisterKinds),1,OMR,Machine
getGlobalFPRPartitionLimit,getGlobalFPRPartitionLimit(),1,OMR,X86::Machine
getGlobalGPRPartitionLimit,getGlobalGPRPartitionLimit(),1,OMR,X86::Machine
getGlobalReg,getGlobalReg(TR::class RealRegister::RegNum),1,OMR,X86::Machine
getGlobalRegisterTable,getGlobalRegisterTable(const struct TR::X86LinkageProperties &),1,OMR,X86::Machine
getLast8BitGlobalGPRRegisterNumber,getLast8BitGlobalGPRRegisterNumber(),1,OMR,X86::Machine
getLastGlobalFPRRegisterNumber,getLastGlobalFPRRegisterNumber(),1,OMR,X86::Machine
getLastGlobalGPRRegisterNumber,getLastGlobalGPRRegisterNumber(),1,OMR,X86::Machine
getLastGlobalRegisterNumber,getLastGlobalRegisterNumber(enum TR_RegisterKinds),1,OMR,Machine
getLastGlobalRegisterNumber,getLastGlobalRegisterNumber(),0,OMR,Machine
getLastRealRegisterGlobalRegisterNumber,getLastRealRegisterGlobalRegisterNumber(),1,OMR,Machine
getNextGlobalRegisterNumber,getNextGlobalRegisterNumber(),1,OMR,Machine
getNumGlobalGPRs,getNumGlobalGPRs(),1,OMR,X86::Machine
getNumberOfFPRs,getNumberOfFPRs(),1,OMR,Machine
getNumberOfGPRs,getNumberOfGPRs(),1,OMR,Machine
getNumberOfRegisters,getNumberOfRegisters(enum TR_RegisterKinds),1,OMR,Machine
getRealRegister,getRealRegister(TR_GlobalRegisterNumber),1,OMR,Machine
getRegisterAssociations,getRegisterAssociations(),1,OMR,X86::Machine
getRegisterFile,getRegisterFile(),1,OMR,X86::Machine
getSpilledRegistersList,getSpilledRegistersList(),1,OMR,X86::Machine
getVirtualAssociatedWithReal,getVirtualAssociatedWithReal(TR::class RealRegister::RegNum),1,OMR,X86::Machine
getX86RealRegister,getX86RealRegister(TR::class RealRegister::RegNum),1,OMR,X86::Machine
getXMMGlobalRegister,getXMMGlobalRegister(int32_t),1,OMR,X86::Machine
initialiseFPStackRegisterFile,initialiseFPStackRegisterFile(),1,OMR,X86::Machine
initialiseRegisterFile,initialiseRegisterFile(const struct TR::X86LinkageProperties &),1,OMR,X86::Machine
installRegisterFile,installRegisterFile(TR::RealRegister **),1,OMR,X86::Machine
isFPRTopOfStack,isFPRTopOfStack(TR::Register *),1,OMR,X86::Machine
isFPStackFull,isFPStackFull(),1,OMR,X86::Machine
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Machine
jitPersistentFree,jitPersistentFree(void *),1,OMR,Machine
numGPRRegsWithheld,numGPRRegsWithheld(TR::CodeGenerator *),1,OMR,X86::AMD64::Machine
numRegsWithheld,numRegsWithheld(TR::CodeGenerator *),1,OMR,X86::AMD64::Machine
operator delete,operator delete(void *,TR::Region &),1,OMR,Machine
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Machine
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Machine
operator delete,operator delete(void *,size_t),0,OMR,Machine
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Machine
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Machine
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Machine
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Machine
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Machine
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Machine
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Machine
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Machine
operator new,operator new(size_t,TR::Region &),0,OMR,Machine
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Machine
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Machine
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Machine
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Machine
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Machine
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Machine
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Machine
operator new[],operator new[](size_t,TR::Region &),0,OMR,Machine
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Machine
operator=,operator=(const class OMR::Machine &),1,OMR,Machine
operator=,operator=(class OMR::Machine &&),0,OMR,Machine
operator=,operator=(class OMR::X86::Machine &&),0,OMR,X86::Machine
operator=,operator=(const class OMR::X86::Machine &),0,OMR,X86::Machine
operator=,operator=(class OMR::X86::AMD64::Machine &&),0,OMR,X86::AMD64::Machine
operator=,operator=(const class OMR::X86::AMD64::Machine &),0,OMR,X86::AMD64::Machine
operator=,operator=(class TR::Machine &&),0,TR,Machine
operator=,operator=(const class TR::Machine &),0,TR,Machine
popEntireStack,popEntireStack(),1,OMR,X86::Machine
printFPRegisterStatus,printFPRegisterStatus(class TR_FrontEnd *,TR::FILE *),1,OMR,X86::Machine
printGPRegisterStatus,printGPRegisterStatus(class TR_FrontEnd *,TR::RealRegister **,TR::FILE *),1,OMR,X86::Machine
purgeDeadRegistersFromRegisterFile,purgeDeadRegistersFromRegisterFile(),1,OMR,X86::Machine
resetFPStackRegisters,resetFPStackRegisters(),1,OMR,X86::Machine
resetXMMGlobalRegisters,resetXMMGlobalRegisters(),1,OMR,X86::Machine
reverseFPRSpillState,reverseFPRSpillState(TR::Instruction *,TR::Register *),1,OMR,X86::Machine
reverseGPRSpillState,reverseGPRSpillState(TR::Instruction *,TR::Register *,TR::RealRegister *,enum TR_RegisterSizes),1,OMR,X86::Machine
self,self(),1,OMR,Machine
setCopiedFPStackRegister,setCopiedFPStackRegister(int32_t,class TR_X86FPStackRegister *),1,OMR,X86::Machine
setFPStackRegister,setFPStackRegister(int32_t,class TR_X86FPStackRegister *),1,OMR,X86::Machine
setFPStackRegisterNode,setFPStackRegisterNode(int32_t,TR::Node *),1,OMR,X86::Machine
setFPTopOfStack,setFPTopOfStack(TR::Register *),1,OMR,X86::Machine
setFirstGlobalRegisterNumber,setFirstGlobalRegisterNumber(enum TR_RegisterKinds,TR_GlobalRegisterNumber),1,OMR,Machine
setGPRWeightsFromAssociations,setGPRWeightsFromAssociations(),1,OMR,X86::Machine
setLastGlobalRegisterNumber,setLastGlobalRegisterNumber(enum TR_RegisterKinds,TR_GlobalRegisterNumber),1,OMR,Machine
setLastRealRegisterGlobalRegisterNumber,setLastRealRegisterGlobalRegisterNumber(TR_GlobalRegisterNumber),1,OMR,Machine
setNumberOfFPRs,setNumberOfFPRs(uint8_t),1,OMR,Machine
setNumberOfGPRs,setNumberOfGPRs(uint8_t),1,OMR,Machine
setNumberOfRegisters,setNumberOfRegisters(enum TR_RegisterKinds,uint8_t),1,OMR,Machine
setRegisterAssociations,setRegisterAssociations(TR::Register **),1,OMR,X86::Machine
setRegisterFile,setRegisterFile(TR::RealRegister **),1,OMR,X86::Machine
setSpilledRegistersList,setSpilledRegistersList(List<TR::Register> *),1,OMR,X86::Machine
setVirtualAssociatedWithReal,setVirtualAssociatedWithReal(TR::class RealRegister::RegNum,TR::Register *),1,OMR,X86::Machine
setXMMGlobalRegister,setXMMGlobalRegister(int32_t,TR::Register *),1,OMR,X86::Machine
swapGPRegisters,swapGPRegisters(TR::Instruction *,TR::class RealRegister::RegNum,TR::class RealRegister::RegNum),1,OMR,X86::Machine
~Machine,~Machine(),1,OMR,Machine
RealRegister,RealRegister(class OMR::RealRegister &&),1,OMR,RealRegister
RealRegister,RealRegister(const class OMR::RealRegister &),0,OMR,RealRegister
RealRegister,RealRegister(enum TR_RegisterKinds,uint16_t,RegState,uint16_t,RegNum,RegMask,TR::CodeGenerator *),0,OMR,RealRegister
RealRegister,RealRegister(TR::CodeGenerator *,RegNum),0,OMR,RealRegister
RealRegister,RealRegister(class OMR::X86::RealRegister &&),0,OMR,X86::RealRegister
RealRegister,RealRegister(const class OMR::X86::RealRegister &),0,OMR,X86::RealRegister
RealRegister,RealRegister(enum TR_RegisterKinds,uint16_t,RegState,RegNum,RegMask,TR::CodeGenerator *),0,OMR,X86::RealRegister
RealRegister,RealRegister(TR::CodeGenerator *),0,OMR,X86::RealRegister
RealRegister,RealRegister(class OMR::X86::AMD64::RealRegister &&),0,OMR,X86::AMD64::RealRegister
RealRegister,RealRegister(const class OMR::X86::AMD64::RealRegister &),0,OMR,X86::AMD64::RealRegister
RealRegister,RealRegister(class TR::RealRegister &&),0,TR,RealRegister
RealRegister,RealRegister(const class TR::RealRegister &),0,TR,RealRegister
RealRegister,RealRegister(enum TR_RegisterKinds,uint16_t,RegState,TR::class RealRegister::RegNum,TR::class RealRegister::RegMask,TR::CodeGenerator *),0,TR,RealRegister
Register,Register(class OMR::Register &&),1,OMR,Register
Register,Register(enum TR_RegisterKinds,uint16_t),0,OMR,Register
Register,Register(enum TR_RegisterKinds),0,OMR,Register
Register,Register(uint32_t),0,OMR,Register
Register,Register(const class OMR::Register &),0,OMR,Register
Register,Register(class OMR::X86::Register &&),0,OMR,X86::Register
Register,Register(const class OMR::X86::Register &),0,OMR,X86::Register
Register,Register(class TR::Register &&),0,TR,Register
Register,Register(const class TR::Register &),0,TR,Register
TR_X86FPStackRegister,TR_X86FPStackRegister(RegState,TR_X86FPStackRegisters,TR::class RealRegister::RegNum,TR::CodeGenerator *),1,TR,X86FPStackRegister
areUpperBitsZero,areUpperBitsZero(),1,OMR,X86::Register
block,block(),1,OMR,Register
containsCollectedReference,containsCollectedReference(),1,OMR,Register
containsInternalPointer,containsInternalPointer(),1,OMR,Register
decFutureUseCount,decFutureUseCount(ncount_t),1,OMR,Register
decOutOfLineUseCount,decOutOfLineUseCount(ncount_t),1,OMR,Register
decTotalUseCount,decTotalUseCount(ncount_t),1,OMR,Register
fprMask,fprMask(RegNum),1,OMR,X86::AMD64::RealRegister
getAssignedRealRegister,getAssignedRealRegister(),1,OMR,Register
getAssignedRegister,getAssignedRegister(),1,OMR,Register
getAssociation,getAssociation(),1,OMR,Register
getAvailableRegistersMask,getAvailableRegistersMask(enum TR_RegisterKinds),1,OMR,RealRegister
getBackingStorage,getBackingStorage(),1,OMR,Register
getBitPosInMask,getBitPosInMask(TR_RegisterMask),1,OMR,RealRegister
getCCRegister,getCCRegister(),1,OMR,Register
getColouredRegister,getColouredRegister(),1,OMR,Register
getEndOfRange,getEndOfRange(),1,OMR,Register
getFPStackRegisterNumber,getFPStackRegisterNumber(),1,TR,X86FPStackRegister
getFlags,getFlags(),1,OMR,Register
getFutureUseCount,getFutureUseCount(),1,OMR,Register
getHasBeenAssignedInMethod,getHasBeenAssignedInMethod(),1,OMR,RealRegister
getHighOrder,getHighOrder(),1,OMR,Register
getIndex,getIndex(),1,OMR,Register
getInterference,getInterference(),1,OMR,X86::Register
getIsAssignedMoreThanOnce,getIsAssignedMoreThanOnce(),1,OMR,RealRegister
getIsAssignedOnce,getIsAssignedOnce(),1,OMR,RealRegister
getIsFreeOnExit,getIsFreeOnExit(),1,OMR,RealRegister
getIsSpillExtendedOutOfLoop,getIsSpillExtendedOutOfLoop(),1,OMR,RealRegister
getKind,getKind(),1,OMR,Register
getKindAsMask,getKindAsMask(),1,OMR,Register
getLiveRegisterInfo,getLiveRegisterInfo(),1,OMR,X86::Register
getLowOrder,getLowOrder(),1,OMR,Register
getMemRef,getMemRef(),1,OMR,X86::Register
getOutOfLineUseCount,getOutOfLineUseCount(),1,OMR,Register
getPinningArrayPointer,getPinningArrayPointer(),1,OMR,Register
getRealRegister,getRealRegister(),1,OMR,Register
getRealRegisterMask,getRealRegisterMask(),1,OMR,RealRegister
getRealRegisterMask,getRealRegisterMask(enum TR_RegisterKinds,RegNum),0,OMR,X86::RealRegister
getRegister,getRegister(),1,OMR,Register
getRegisterKindName,getRegisterKindName(TR::Compilation *,enum TR_RegisterKinds),1,OMR,Register
getRegisterName,getRegisterName(TR::Compilation *,enum TR_RegisterSizes),1,OMR,Register
getRegisterNumber,getRegisterNumber(),1,OMR,RealRegister
getRegisterPair,getRegisterPair(),1,OMR,Register
getRematerializationInfo,getRematerializationInfo(),1,OMR,X86::Register
getSiblingRegister,getSiblingRegister(),1,OMR,Register
getStartOfRange,getStartOfRange(),1,OMR,Register
getStartOfRangeNode,getStartOfRangeNode(),1,OMR,Register
getState,getState(),1,OMR,RealRegister
getTotalUseCount,getTotalUseCount(),1,OMR,Register
getWeight,getWeight(),1,OMR,RealRegister
gprMask,gprMask(RegNum),1,OMR,X86::AMD64::RealRegister
hasBetterSpillPlacement,hasBetterSpillPlacement(),1,OMR,X86::Register
incFutureUseCount,incFutureUseCount(ncount_t),1,OMR,Register
incOutOfLineUseCount,incOutOfLineUseCount(ncount_t),1,OMR,Register
incTotalUseCount,incTotalUseCount(ncount_t),1,OMR,Register
isAssignedAsByteRegister,isAssignedAsByteRegister(),1,OMR,X86::Register
isDiscardable,isDiscardable(),1,OMR,X86::Register
isLive,isLive(),1,OMR,Register
isPlaceholderReg,isPlaceholderReg(),1,OMR,Register
isSinglePrecision,isSinglePrecision(),1,OMR,Register
isSpilledToSecondHalf,isSpilledToSecondHalf(),1,OMR,X86::Register
isUpperHalfDead,isUpperHalfDead(),1,OMR,Register
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Register
jitPersistentFree,jitPersistentFree(void *),1,OMR,Register
mayNeedPrecisionAdjustment,mayNeedPrecisionAdjustment(),1,OMR,X86::Register
mmIndex,mmIndex(uint8_t),1,OMR,X86::AMD64::RealRegister
mmrMask,mmrMask(RegNum),1,OMR,X86::AMD64::RealRegister
needsDisp,needsDisp(),1,OMR,X86::AMD64::RealRegister
needsLazyClobbering,needsLazyClobbering(),1,OMR,X86::Register
needsPrecisionAdjustment,needsPrecisionAdjustment(),1,OMR,X86::Register
needsSIB,needsSIB(),1,OMR,X86::AMD64::RealRegister
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Register
operator delete,operator delete(void *,size_t),0,OMR,Register
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Register
operator delete,operator delete(void *,TR::Region &),0,OMR,Register
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Register
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Register
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Register
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Register
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Register
operator new,operator new(size_t,TR::Region &),1,OMR,Register
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Register
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Register
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Register
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Register
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Register
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Register
operator new[],operator new[](size_t,TR::Region &),1,OMR,Register
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Register
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Register
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Register
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Register
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Register
operator=,operator=(const class OMR::Register &),1,OMR,Register
operator=,operator=(class OMR::Register &&),0,OMR,Register
operator=,operator=(const class OMR::X86::Register &),0,OMR,X86::Register
operator=,operator=(class OMR::X86::Register &&),0,OMR,X86::Register
operator=,operator=(class TR::Register &&),0,TR,Register
operator=,operator=(const class TR::Register &),0,TR,Register
operator=,operator=(class OMR::RealRegister &&),0,OMR,RealRegister
operator=,operator=(const class OMR::RealRegister &),0,OMR,RealRegister
operator=,operator=(class OMR::X86::RealRegister &&),0,OMR,X86::RealRegister
operator=,operator=(const class OMR::X86::RealRegister &),0,OMR,X86::RealRegister
operator=,operator=(class OMR::X86::AMD64::RealRegister &&),0,OMR,X86::AMD64::RealRegister
operator=,operator=(const class OMR::X86::AMD64::RealRegister &),0,OMR,X86::AMD64::RealRegister
operator=,operator=(class TR::RealRegister &&),0,TR,RealRegister
operator=,operator=(const class TR::RealRegister &),0,TR,RealRegister
operator=,operator=(class TR_X86FPStackRegister &&),0,TR,X86FPStackRegister
operator=,operator=(const class TR_X86FPStackRegister &),0,TR,X86FPStackRegister
print,print(TR::Compilation *,TR::FILE *,enum TR_RegisterSizes),1,OMR,Register
rIndex,rIndex(uint8_t),1,OMR,X86::AMD64::RealRegister
regMaskToRealRegister,regMaskToRealRegister(TR_RegisterMask,enum TR_RegisterKinds,TR::CodeGenerator *),1,OMR,RealRegister
resetIsDiscardable,resetIsDiscardable(),1,OMR,X86::Register
resetIsLive,resetIsLive(),1,OMR,Register
resetMayNeedPrecisionAdjustment,resetMayNeedPrecisionAdjustment(),1,OMR,X86::Register
resetNeedsPrecisionAdjustment,resetNeedsPrecisionAdjustment(),1,OMR,X86::Register
resetPlaceholderReg,resetPlaceholderReg(),1,OMR,Register
resetState,resetState(RegState),1,OMR,RealRegister
rexBits,rexBits(uint8_t,_Bool),1,OMR,X86::AMD64::RealRegister
self,self(),1,OMR,Register
setAssignedAsByteRegister,setAssignedAsByteRegister(_Bool),1,OMR,X86::Register
setAssignedRegister,setAssignedRegister(TR::Register *),1,OMR,Register
setAssociation,setAssociation(uint32_t),1,OMR,Register
setBackingStorage,setBackingStorage(class TR_BackingStore *),1,OMR,Register
setBaseRegisterFieldInSIB,setBaseRegisterFieldInSIB(uint8_t *),1,OMR,X86::AMD64::RealRegister
setCCRegister,setCCRegister(TR::Register *),1,OMR,Register
setColouredRegister,setColouredRegister(TR::Register *),1,OMR,Register
setContainsCollectedReference,setContainsCollectedReference(),1,OMR,Register
setContainsInternalPointer,setContainsInternalPointer(),1,OMR,Register
setEndOfRange,setEndOfRange(TR::Instruction *),1,OMR,Register
setFPStackRegisterNumber,setFPStackRegisterNumber(TR_X86FPStackRegisters),1,TR,X86FPStackRegister
setFlags,setFlags(uint32_t),1,OMR,Register
setFutureUseCount,setFutureUseCount(ncount_t),1,OMR,Register
setHasBeenAssignedInMethod,setHasBeenAssignedInMethod(_Bool),1,OMR,RealRegister
setHasBetterSpillPlacement,setHasBetterSpillPlacement(_Bool),1,OMR,X86::Register
setIndex,setIndex(uint32_t),1,OMR,Register
setIndexRegisterFieldInSIB,setIndexRegisterFieldInSIB(uint8_t *),1,OMR,X86::AMD64::RealRegister
setInterference,setInterference(uint32_t),1,OMR,X86::Register
setIsAssignedMoreThanOnce,setIsAssignedMoreThanOnce(_Bool),1,OMR,RealRegister
setIsAssignedOnce,setIsAssignedOnce(_Bool),1,OMR,RealRegister
setIsDiscardable,setIsDiscardable(),1,OMR,X86::Register
setIsFreeOnExit,setIsFreeOnExit(_Bool),1,OMR,RealRegister
setIsLive,setIsLive(),1,OMR,Register
setIsSinglePrecision,setIsSinglePrecision(_Bool),1,OMR,Register
setIsSpillExtendedOutOfLoop,setIsSpillExtendedOutOfLoop(_Bool),1,OMR,RealRegister
setIsSpilledToSecondHalf,setIsSpilledToSecondHalf(_Bool),1,OMR,X86::Register
setIsUpperHalfDead,setIsUpperHalfDead(_Bool),1,OMR,Register
setKind,setKind(enum TR_RegisterKinds),1,OMR,Register
setLiveRegisterInfo,setLiveRegisterInfo(class TR_LiveRegisterInfo *),1,OMR,X86::Register
setMayNeedPrecisionAdjustment,setMayNeedPrecisionAdjustment(),1,OMR,X86::Register
setMemRef,setMemRef(TR::MemoryReference *),1,OMR,X86::Register
setNeedsLazyClobbering,setNeedsLazyClobbering(_Bool),1,OMR,X86::Register
setNeedsPrecisionAdjustment,setNeedsPrecisionAdjustment(),1,OMR,X86::Register
setOutOfLineUseCount,setOutOfLineUseCount(ncount_t),1,OMR,Register
setPinningArrayPointer,setPinningArrayPointer(TR::AutomaticSymbol *),1,OMR,Register
setPlaceholderReg,setPlaceholderReg(),1,OMR,Register
setRMRegisterFieldInModRM,setRMRegisterFieldInModRM(uint8_t *),1,OMR,X86::AMD64::RealRegister
setRealRegisterMask,setRealRegisterMask(RegMask),1,OMR,RealRegister
setRegisterFieldInModRM,setRegisterFieldInModRM(uint8_t *),1,OMR,X86::AMD64::RealRegister
setRegisterFieldInOpcode,setRegisterFieldInOpcode(uint8_t *),1,OMR,X86::AMD64::RealRegister
setRegisterNumber,setRegisterNumber(RegNum),1,OMR,RealRegister
setRegisterNumber,setRegisterNumber(),0,OMR,X86::AMD64::RealRegister
setRematerializationInfo,setRematerializationInfo(class TR_RematerializationInfo *),1,OMR,X86::Register
setSiblingRegister,setSiblingRegister(TR::Register *),1,OMR,Register
setStartOfRange,setStartOfRange(TR::Instruction *),1,OMR,Register
setStartOfRangeNode,setStartOfRangeNode(TR::Node *),1,OMR,Register
setState,setState(RegState,_Bool),1,OMR,RealRegister
setTotalUseCount,setTotalUseCount(ncount_t),1,OMR,Register
setUpperBitsAreZero,setUpperBitsAreZero(_Bool),1,OMR,X86::Register
setWeight,setWeight(uint16_t),1,OMR,RealRegister
unblock,unblock(),1,OMR,Register
xmmIndex,xmmIndex(uint8_t),1,OMR,X86::AMD64::RealRegister
xmmrMask,xmmrMask(RegNum),1,OMR,X86::AMD64::RealRegister
~RealRegister,~RealRegister(),1,OMR,RealRegister
~Register,~Register(),1,OMR,Register
~TR_X86FPStackRegister,~TR_X86FPStackRegister(),1,TR,X86FPStackRegister
BBEndEvaluator,BBEndEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
BBStartEvaluator,BBStartEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
FloatingPointAndVectorBinaryArithmeticEvaluator,FloatingPointAndVectorBinaryArithmeticEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
GlRegDepsEvaluator,GlRegDepsEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
NOPEvaluator,NOPEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
PrefetchEvaluator,PrefetchEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
SIMDRegLoadEvaluator,SIMDRegLoadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
SIMDRegStoreEvaluator,SIMDRegStoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
SIMDloadEvaluator,SIMDloadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
SIMDsplatsEvaluator,SIMDsplatsEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
SIMDstoreEvaluator,SIMDstoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
SSE2ArraycmpEvaluator,SSE2ArraycmpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
SSE2ArraycmpLenEvaluator,SSE2ArraycmpLenEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
SSE2IfArraycmpEvaluator,SSE2IfArraycmpEvaluator(TR::Node *,TR::LabelSymbol *,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
VMarrayStoreCheckArrayCopyEvaluator,VMarrayStoreCheckArrayCopyEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
VMifArrayCmpEvaluator,VMifArrayCmpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
VMifInstanceOfEvaluator,VMifInstanceOfEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
VMinlineCallEvaluator,VMinlineCallEvaluator(TR::Node *,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
VMmergenewEvaluator,VMmergenewEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
VMtestForReferenceArray,VMtestForReferenceArray(TR::Node *,TR::Register *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
a2lEvaluator,a2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
aRegLoadEvaluator,aRegLoadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
acmpeqEvaluator,acmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
aconstEvaluator,aconstEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
aiaddEvaluator,aiaddEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
aloadEvaluator,aloadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
analyseAddForLEA,analyseAddForLEA(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
analyseSubForLEA,analyseSubForLEA(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
arraycmpEvaluator,arraycmpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
arraycopyEvaluator,arraycopyEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
arraysetEvaluator,arraysetEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
arraytranslateAndTestEvaluator,arraytranslateAndTestEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
arraytranslateEvaluator,arraytranslateEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
atomicorEvaluator,atomicorEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
b2iEvaluator,b2iEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
b2lEvaluator,b2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
b2sEvaluator,b2sEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
badILOpEvaluator,badILOpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,TreeEvaluator
baddEvaluator,baddEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bandEvaluator,bandEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bcmpEvaluator,bcmpEvaluator(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bcmpEvaluator,bcmpEvaluator(TR::Node *,TR::CodeGenerator *),0,OMR,X86::TreeEvaluator
bcmpeqEvaluator,bcmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bcmpgeEvaluator,bcmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bcmpgtEvaluator,bcmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bcmpleEvaluator,bcmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bcmpltEvaluator,bcmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bconstEvaluator,bconstEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bloadEvaluator,bloadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bnegEvaluator,bnegEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
borEvaluator,borEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bshlEvaluator,bshlEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bshrEvaluator,bshrEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bstoreEvaluator,bstoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bsubEvaluator,bsubEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bu2iEvaluator,bu2iEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bu2lEvaluator,bu2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
bu2sEvaluator,bu2sEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bucmpEvaluator,bucmpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bushrEvaluator,bushrEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
butestEvaluator,butestEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bxorEvaluator,bxorEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
bztestnsetEvaluator,bztestnsetEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
c2iEvaluator,c2iEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
c2lEvaluator,c2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
caddEvaluator,caddEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
canUseFCOMIInstructions,canUseFCOMIInstructions(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
candEvaluator,candEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
cconstEvaluator,cconstEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
cdivEvaluator,cdivEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
checkNonNegativePowerOfTwo,checkNonNegativePowerOfTwo(int64_t),1,OMR,TreeEvaluator
checkNonNegativePowerOfTwo,checkNonNegativePowerOfTwo(int32_t),0,OMR,TreeEvaluator
checkPositiveOrNegativePowerOfTwo,checkPositiveOrNegativePowerOfTwo(int32_t),1,OMR,TreeEvaluator
checkPositiveOrNegativePowerOfTwo,checkPositiveOrNegativePowerOfTwo(int64_t),0,OMR,TreeEvaluator
classDepth,classDepth(TR::Node *,TR::CodeGenerator *),1,OMR,TreeEvaluator
cmp2BytesEvaluator,cmp2BytesEvaluator(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
cmulEvaluator,cmulEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
coerceFPOperandsToXMMRs,coerceFPOperandsToXMMRs(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
coerceFPRToXMMR,coerceFPRToXMMR(TR::Node *,TR::Register *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
coerceXMMRToFPR,coerceXMMRToFPR(TR::Node *,TR::Register *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
commonFPRemEvaluator,commonFPRemEvaluator(TR::Node *,TR::CodeGenerator *,_Bool),1,OMR,X86::TreeEvaluator
compare2BytesForOrder,compare2BytesForOrder(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareBytesForOrder,compareBytesForOrder(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareDoubleAndBranchEvaluator,compareDoubleAndBranchEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareDoubleAndSetEvaluator,compareDoubleAndSetEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareDoubleEvaluator,compareDoubleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareFloatAndBranchEvaluator,compareFloatAndBranchEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareFloatAndSetEvaluator,compareFloatAndSetEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareFloatEvaluator,compareFloatEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareFloatOrDoubleForOrder,compareFloatOrDoubleForOrder(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareGPMemoryToImmediate,compareGPMemoryToImmediate(TR::Node *,TR::MemoryReference *,int32_t,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareGPRegisterToConstantForEquality,compareGPRegisterToConstantForEquality(TR::Node *,int32_t,TR::Register *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareGPRegisterToImmediate,compareGPRegisterToImmediate(TR::Node *,TR::Register *,int32_t,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareGPRegisterToImmediateForEquality,compareGPRegisterToImmediateForEquality(TR::Node *,TR::Register *,int32_t,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareIntegersForEquality,compareIntegersForEquality(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareIntegersForOrder,compareIntegersForOrder(TR::Node *,TR::Node *,TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
compareIntegersForOrder,compareIntegersForOrder(TR::Node *,TR::CodeGenerator *),0,OMR,X86::TreeEvaluator
compressedRefsEvaluator,compressedRefsEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,TreeEvaluator
computeCCEvaluator,computeCCEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,TreeEvaluator
conditionalHelperEvaluator,conditionalHelperEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
constLengthArrayCopyEvaluator,constLengthArrayCopyEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
constNodeValueIs32BitSigned,constNodeValueIs32BitSigned(TR::Node *,intptrj_t *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
conversionAnalyser,conversionAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
corEvaluator,corEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
cremEvaluator,cremEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
cshlEvaluator,cshlEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
cstoreEvaluator,cstoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
csubEvaluator,csubEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
cushrEvaluator,cushrEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
cxorEvaluator,cxorEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
d2bEvaluator,d2bEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
d2cEvaluator,d2cEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
d2fEvaluator,d2fEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
d2lEvaluator,d2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
d2sEvaluator,d2sEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
dRegLoadEvaluator,dRegLoadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
dRegStoreEvaluator,dRegStoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
daddEvaluator,daddEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
dbits2lEvaluator,dbits2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
dconstEvaluator,dconstEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ddivEvaluator,ddivEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
directCallEvaluator,directCallEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
dloadEvaluator,dloadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
dmulEvaluator,dmulEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
dnegEvaluator,dnegEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
dstoreEvaluatorHelper,dstoreEvaluatorHelper(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
dsubEvaluator,dsubEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
evaluateNULLCHKWithPossibleResolve,evaluateNULLCHKWithPossibleResolve(TR::Node *,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
evaluateNodesWithFutureUses,evaluateNodesWithFutureUses(TR::Node *,TR::CodeGenerator *),1,OMR,TreeEvaluator
f2bEvaluator,f2bEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
f2cEvaluator,f2cEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
f2dEvaluator,f2dEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
f2iEvaluator,f2iEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
f2lEvaluator,f2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
f2sEvaluator,f2sEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fRegLoadEvaluator,fRegLoadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fRegStoreEvaluator,fRegStoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
faddEvaluator,faddEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fbits2iEvaluator,fbits2iEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fconstEvaluator,fconstEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fdivEvaluator,fdivEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fenceEvaluator,fenceEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
floadEvaluator,floadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
floatingPointStoreEvaluator,floatingPointStoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fmulEvaluator,fmulEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fnegEvaluator,fnegEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fpBinaryArithmeticEvaluator,fpBinaryArithmeticEvaluator(TR::Node *,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fpConvertToInt,fpConvertToInt(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fpConvertToLong,fpConvertToLong(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fpRemEvaluator,fpRemEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fpReturnEvaluator,fpReturnEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
fsubEvaluator,fsubEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
genArithmeticInstructionsForOverflowCHK,genArithmeticInstructionsForOverflowCHK(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
genNullTestSequence,genNullTestSequence(TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
generateBranchOrSetOnFPCompare,generateBranchOrSetOnFPCompare(TR::Node *,TR::Register *,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
generateFPCompareResult,generateFPCompareResult(TR::Node *,TR::Register *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
generateIAddOrSubForOverflowCheck,generateIAddOrSubForOverflowCheck(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
generateLAddOrSubForOverflowCheck,generateLAddOrSubForOverflowCheck(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
generateLEAForLoadAddr,generateLEAForLoadAddr(TR::Node *,TR::MemoryReference *,TR::SymbolReference *,TR::CodeGenerator *,_Bool),1,OMR,X86::TreeEvaluator
generateMemoryShift,generateMemoryShift(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
generateRegisterShift,generateRegisterShift(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
getHighGlobalRegisterNumberIfAny,getHighGlobalRegisterNumberIfAny(TR::Node *,TR::CodeGenerator *),1,OMR,TreeEvaluator
getNodeIs64Bit,getNodeIs64Bit(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
getOverflowCatchBlock,getOverflowCatchBlock(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
gotoEvaluator,gotoEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
i2aEvaluator,i2aEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
i2bEvaluator,i2bEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
i2dEvaluator,i2dEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
i2fEvaluator,i2fEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
i2lEvaluator,i2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
iRegStoreEvaluator,iRegStoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
iandEvaluator,iandEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ibits2fEvaluator,ibits2fEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ibyteswapEvaluator,ibyteswapEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
icmpEvaluator,icmpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
icmpsetEvaluator,icmpsetEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
iconstEvaluator,iconstEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifacmpeqEvaluator,ifacmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
ifbcmpeqEvaluator,ifbcmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifbcmpgeEvaluator,ifbcmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifbcmpgtEvaluator,ifbcmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifbcmpleEvaluator,ifbcmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifbcmpltEvaluator,ifbcmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifbucmpgeEvaluator,ifbucmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifbucmpgtEvaluator,ifbucmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifbucmpleEvaluator,ifbucmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifbucmpltEvaluator,ifbucmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
iflcmpeqEvaluator,iflcmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
iflcmpgeEvaluator,iflcmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
iflcmpgtEvaluator,iflcmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
iflcmpleEvaluator,iflcmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
iflcmpltEvaluator,iflcmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
iflcmpneEvaluator,iflcmpneEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
ifscmpeqEvaluator,ifscmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifscmpgeEvaluator,ifscmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifscmpgtEvaluator,ifscmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifscmpleEvaluator,ifscmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifscmpltEvaluator,ifscmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifsucmpeqEvaluator,ifsucmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifsucmpgeEvaluator,ifsucmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifsucmpgtEvaluator,ifsucmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifsucmpleEvaluator,ifsucmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifsucmpltEvaluator,ifsucmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ifxcmpoEvaluator,ifxcmpoEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
igotoEvaluator,igotoEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
iloadEvaluator,iloadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ilstoreEvaluator,ilstoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
indirectCallEvaluator,indirectCallEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
initializeStrictlyFutureUseCounts,initializeStrictlyFutureUseCounts(TR::Node *,vcount_t,TR::CodeGenerator *),1,OMR,TreeEvaluator
insertLoadConstant,insertLoadConstant(TR::Node *,TR::Register *,intptrj_t,enum TR_RematerializableTypes,TR::CodeGenerator *,TR::Instruction *),1,OMR,X86::TreeEvaluator
insertLoadMemory,insertLoadMemory(TR::Node *,TR::Register *,TR::MemoryReference *,enum TR_RematerializableTypes,TR::CodeGenerator *,TR::Instruction *),1,OMR,X86::TreeEvaluator
insertPrecisionAdjustment,insertPrecisionAdjustment(TR::Register *,TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
instanceOfOrCheckCastNeedEqualityTest,instanceOfOrCheckCastNeedEqualityTest(TR::Node *,TR::CodeGenerator *),1,OMR,TreeEvaluator
instanceOfOrCheckCastNeedSuperTest,instanceOfOrCheckCastNeedSuperTest(TR::Node *,TR::CodeGenerator *),1,OMR,TreeEvaluator
intOrLongClobberEvaluate,intOrLongClobberEvaluate(TR::Node *,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerAbsEvaluator,integerAbsEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerAddEvaluator,integerAddEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerCmpeqEvaluator,integerCmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerCmpgeEvaluator,integerCmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerCmpgtEvaluator,integerCmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerCmpleEvaluator,integerCmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerCmpltEvaluator,integerCmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerCmpneEvaluator,integerCmpneEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerConstNodeValue,integerConstNodeValue(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerDivOrRemEvaluator,integerDivOrRemEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerDualAddOrSubEvaluator,integerDualAddOrSubEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerDualMulEvaluator,integerDualMulEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerEqualityHelper,integerEqualityHelper(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerIfCmpeqEvaluator,integerIfCmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerIfCmpgeEvaluator,integerIfCmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerIfCmpgtEvaluator,integerIfCmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerIfCmpleEvaluator,integerIfCmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerIfCmpltEvaluator,integerIfCmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerIfCmpneEvaluator,integerIfCmpneEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerMulEvaluator,integerMulEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerMulhEvaluator,integerMulhEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerNegEvaluator,integerNegEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerOrderHelper,integerOrderHelper(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerRegLoadEvaluator,integerRegLoadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerReturnEvaluator,integerReturnEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerRolEvaluator,integerRolEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerShlEvaluator,integerShlEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerShrEvaluator,integerShrEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerStoreEvaluator,integerStoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerSubEvaluator,integerSubEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
integerUshrEvaluator,integerUshrEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
iorEvaluator,iorEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
isStaticClassSymRef,isStaticClassSymRef(TR::SymbolReference *),1,OMR,TreeEvaluator
istoreEvaluator,istoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
iternaryEvaluator,iternaryEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
iu2lEvaluator,iu2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
iucmpEvaluator,iucmpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ixorEvaluator,ixorEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
l2aEvaluator,l2aEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
l2dEvaluator,l2dEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
l2fEvaluator,l2fEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
l2iEvaluator,l2iEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lRegLoadEvaluator,lRegLoadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lRegStoreEvaluator,lRegStoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
laddEvaluator,laddEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
landEvaluator,landEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lbits2dEvaluator,lbits2dEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lcmpEvaluator,lcmpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lcmpeqEvaluator,lcmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lcmpgeEvaluator,lcmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lcmpgtEvaluator,lcmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lcmpleEvaluator,lcmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lcmpltEvaluator,lcmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lcmpneEvaluator,lcmpneEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lconstEvaluator,lconstEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lloadEvaluator,lloadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
loadConstant,loadConstant(TR::Node *,intptrj_t,enum TR_RematerializableTypes,TR::CodeGenerator *,TR::Register *),1,OMR,X86::TreeEvaluator
loadMemory,loadMemory(TR::Node *,TR::MemoryReference *,enum TR_RematerializableTypes,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
loadaddrEvaluator,loadaddrEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
logicalEvaluator,logicalEvaluator(TR::Node *,enum TR_X86OpCodes [],TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
longStoreEvaluator,longStoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lookupEvaluator,lookupEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
lorEvaluator,lorEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lstoreEvaluator,lstoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lsubEvaluator,lsubEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
lxorEvaluator,lxorEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
minmaxEvaluator,minmaxEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
negEvaluatorHelper,negEvaluatorHelper(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
nodeIsIAddOverflowCheck,nodeIsIAddOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *),1,OMR,TreeEvaluator
nodeIsIArithmeticOverflowCheck,nodeIsIArithmeticOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *),1,OMR,TreeEvaluator
nodeIsISubOverflowCheck,nodeIsISubOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *),1,OMR,TreeEvaluator
nodeIsLAddOverflowCheck,nodeIsLAddOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *),1,OMR,TreeEvaluator
nodeIsLArithmeticOverflowCheck,nodeIsLArithmeticOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *),1,OMR,TreeEvaluator
nodeIsLSubOverflowCheck,nodeIsLSubOverflowCheck(TR::Node *,struct OMR::TreeEvaluator::TR_ArithmeticOverflowCheckNodes *),1,OMR,TreeEvaluator
overflowCHKEvaluator,overflowCHKEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
padUnresolvedDataReferences,padUnresolvedDataReferences(TR::Node *,TR::SymbolReference &,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
passThroughEvaluator,passThroughEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
performCall,performCall(TR::Node *,_Bool,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
performDload,performDload(TR::Node *,TR::MemoryReference *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
performFload,performFload(TR::Node *,TR::MemoryReference *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
performHelperCall,performHelperCall(TR::Node *,TR::SymbolReference *,TR::ILOpCodes,_Bool,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
performIload,performIload(TR::Node *,TR::MemoryReference *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
performSimpleAtomicMemoryUpdate,performSimpleAtomicMemoryUpdate(TR::Node *,int8_t,enum TR_X86OpCodes,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
removeLiveDiscardableStatics,removeLiveDiscardableStatics(TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
returnEvaluator,returnEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
reverseLoadEvaluator,reverseLoadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
reverseStoreEvaluator,reverseStoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
rotateMask,rotateMask(_Bool),1,OMR,X86::TreeEvaluator
s2iEvaluator,s2iEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
s2lEvaluator,s2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
saddEvaluator,saddEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sandEvaluator,sandEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sbyteswapEvaluator,sbyteswapEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
scmpEvaluator,scmpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
scmpeqEvaluator,scmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
scmpgeEvaluator,scmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
scmpgtEvaluator,scmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
scmpleEvaluator,scmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
scmpltEvaluator,scmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sconstEvaluator,sconstEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
setupProfiledGuardRelocation,setupProfiledGuardRelocation(TR::X86RegImmInstruction *,TR::Node *,TR_ExternalRelocationTargetKind),1,OMR,X86::TreeEvaluator
shiftMask,shiftMask(_Bool),1,OMR,X86::TreeEvaluator
signedIntegerDivOrRemAnalyser,signedIntegerDivOrRemAnalyser(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sloadEvaluator,sloadEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
snegEvaluator,snegEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sorEvaluator,sorEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sshlEvaluator,sshlEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sshrEvaluator,sshrEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sstoreEvaluator,sstoreEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
ssubEvaluator,ssubEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
stopUsingCopyRegAddr,stopUsingCopyRegAddr(TR::Node *,TR::Register *&,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
stopUsingCopyRegInteger,stopUsingCopyRegInteger(TR::Node *,TR::Register *&,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
su2iEvaluator,su2iEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
su2lEvaluator,su2lEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::AMD64::TreeEvaluator
sucmpEvaluator,sucmpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sucmpeqEvaluator,sucmpeqEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sucmpgeEvaluator,sucmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sucmpgtEvaluator,sucmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sucmpleEvaluator,sucmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sucmpltEvaluator,sucmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sushrEvaluator,sushrEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sutestEvaluator,sutestEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
sxorEvaluator,sxorEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
tableEvaluator,tableEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
tabortEvaluator,tabortEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
tfinishEvaluator,tfinishEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
treetopEvaluator,treetopEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
tstartEvaluator,tstartEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
unImpOpEvaluator,unImpOpEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,TreeEvaluator
unsignedIntegerCmpgeEvaluator,unsignedIntegerCmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
unsignedIntegerCmpgtEvaluator,unsignedIntegerCmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
unsignedIntegerCmpleEvaluator,unsignedIntegerCmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
unsignedIntegerCmpltEvaluator,unsignedIntegerCmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
unsignedIntegerIfCmpgeEvaluator,unsignedIntegerIfCmpgeEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
unsignedIntegerIfCmpgtEvaluator,unsignedIntegerIfCmpgtEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
unsignedIntegerIfCmpleEvaluator,unsignedIntegerIfCmpleEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
unsignedIntegerIfCmpltEvaluator,unsignedIntegerIfCmpltEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
zccAddSubEvaluator,zccAddSubEvaluator(TR::Node *,TR::CodeGenerator *),1,OMR,X86::TreeEvaluator
CPU,CPU(const class OMR::CPU &),1,OMR,CPU
CPU,CPU(class OMR::CPU &&),0,OMR,CPU
CPU,CPU(),0,OMR,CPU
CPU,CPU(class OMR::X86::CPU &&),0,OMR,X86::CPU
CPU,CPU(const class OMR::X86::CPU &),0,OMR,X86::CPU
CPU,CPU(const class TR::CPU &),0,TR,CPU
CPU,CPU(class TR::CPU &&),0,TR,CPU
endianness,endianness(),1,OMR,CPU
getSupportsHardwareCopySign,getSupportsHardwareCopySign(),1,OMR,CPU
getSupportsHardwareRound,getSupportsHardwareRound(),1,OMR,CPU
getSupportsHardwareSQRT,getSupportsHardwareSQRT(),1,OMR,CPU
getX86OSSupportsSSE,getX86OSSupportsSSE(TR::Compilation *),1,OMR,X86::CPU
getX86OSSupportsSSE2,getX86OSSupportsSSE2(TR::Compilation *),1,OMR,X86::CPU
getX86ProcessorFeatureFlags,getX86ProcessorFeatureFlags(TR::Compilation *),1,OMR,X86::CPU
getX86ProcessorFeatureFlags2,getX86ProcessorFeatureFlags2(TR::Compilation *),1,OMR,X86::CPU
getX86ProcessorFeatureFlags8,getX86ProcessorFeatureFlags8(TR::Compilation *),1,OMR,X86::CPU
getX86ProcessorSignature,getX86ProcessorSignature(TR::Compilation *),1,OMR,X86::CPU
getX86ProcessorVendorId,getX86ProcessorVendorId(TR::Compilation *),1,OMR,X86::CPU
getX86SupportsTM,getX86SupportsTM(TR::Compilation *),1,OMR,X86::CPU
hasFPU,hasFPU(),1,OMR,CPU
hasPopulationCountInstruction,hasPopulationCountInstruction(),1,OMR,CPU
id,id(),1,OMR,CPU
initializeByHostQuery,initializeByHostQuery(),1,OMR,CPU
is,is(enum TR_Processor),1,OMR,CPU
isAMD64,isAMD64(),1,OMR,CPU
isARM,isARM(),1,OMR,CPU
isAtLeast,isAtLeast(enum TR_Processor),1,OMR,CPU
isAtMost,isAtMost(enum TR_Processor),1,OMR,CPU
isBigEndian,isBigEndian(),1,OMR,CPU
isEarlierThan,isEarlierThan(enum TR_Processor),1,OMR,CPU
isI386,isI386(),1,OMR,CPU
isLaterThan,isLaterThan(enum TR_Processor),1,OMR,CPU
isLittleEndian,isLittleEndian(),1,OMR,CPU
isNot,isNot(enum TR_Processor),1,OMR,CPU
isPower,isPower(),1,OMR,CPU
isX86,isX86(),1,OMR,CPU
isZ,isZ(),1,OMR,CPU
majorArch,majorArch(),1,OMR,CPU
minorArch,minorArch(),1,OMR,CPU
operator=,operator=(const class OMR::CPU &),1,OMR,CPU
operator=,operator=(class OMR::CPU &&),0,OMR,CPU
operator=,operator=(class OMR::X86::CPU &&),0,OMR,X86::CPU
operator=,operator=(const class OMR::X86::CPU &),0,OMR,X86::CPU
operator=,operator=(class TR::CPU &&),0,TR,CPU
operator=,operator=(const class TR::CPU &),0,TR,CPU
queryX86TargetCPUID,queryX86TargetCPUID(TR::Compilation *),1,OMR,X86::CPU
self,self(),1,OMR,CPU
setEndianness,setEndianness(TR::Endianness),1,OMR,CPU
setMajorArch,setMajorArch(TR::MajorArchitecture),1,OMR,CPU
setMinorArch,setMinorArch(TR::MinorArchitecture),1,OMR,CPU
setProcessor,setProcessor(enum TR_Processor),1,OMR,CPU
supportsDecimalFloatingPoint,supportsDecimalFloatingPoint(),1,OMR,CPU
testOSForSSESupport,testOSForSSESupport(TR::Compilation *),1,OMR,X86::CPU
~CPU,~CPU(),1,OMR,CPU
DebugEnv,DebugEnv(),1,OMR,DebugEnv
DebugEnv,DebugEnv(const class OMR::DebugEnv &),0,OMR,DebugEnv
DebugEnv,DebugEnv(class OMR::DebugEnv &&),0,OMR,DebugEnv
DebugEnv,DebugEnv(const class OMR::X86::DebugEnv &),0,OMR,X86::DebugEnv
DebugEnv,DebugEnv(class OMR::X86::DebugEnv &&),0,OMR,X86::DebugEnv
DebugEnv,DebugEnv(const class TR::DebugEnv &),0,TR,DebugEnv
DebugEnv,DebugEnv(class TR::DebugEnv &&),0,TR,DebugEnv
breakPoint,breakPoint(),1,OMR,DebugEnv
codeByteColumnWidth,codeByteColumnWidth(),1,OMR,DebugEnv
extraAssertMessage,extraAssertMessage(TR::Compilation *),1,OMR,DebugEnv
hexAddressFieldWidthInChars,hexAddressFieldWidthInChars(),1,OMR,DebugEnv
hexAddressWidthInChars,hexAddressWidthInChars(),1,OMR,DebugEnv
operator=,operator=(const class OMR::DebugEnv &),1,OMR,DebugEnv
operator=,operator=(class OMR::DebugEnv &&),0,OMR,DebugEnv
operator=,operator=(class OMR::X86::DebugEnv &&),0,OMR,X86::DebugEnv
operator=,operator=(const class OMR::X86::DebugEnv &),0,OMR,X86::DebugEnv
operator=,operator=(class TR::DebugEnv &&),0,TR,DebugEnv
operator=,operator=(const class TR::DebugEnv &),0,TR,DebugEnv
pointerPrintfMaxLenInChars,pointerPrintfMaxLenInChars(),1,OMR,DebugEnv
~DebugEnv,~DebugEnv(),1,OMR,DebugEnv
Instruction,Instruction(),1,OMR,Instruction
Instruction,Instruction(class OMR::Instruction &&),0,OMR,Instruction
Instruction,Instruction(TR::CodeGenerator *,TR::Instruction *,TR::class InstOpCode::Mnemonic,TR::Node *),0,OMR,Instruction
Instruction,Instruction(TR::CodeGenerator *,TR::class InstOpCode::Mnemonic,TR::Node *),0,OMR,Instruction
Instruction,Instruction(const class OMR::Instruction &),0,OMR,Instruction
Instruction,Instruction(class OMR::X86::Instruction &&),0,OMR,X86::Instruction
Instruction,Instruction(const class OMR::X86::Instruction &),0,OMR,X86::Instruction
Instruction,Instruction(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,Instruction
Instruction,Instruction(const class TR::Instruction &),0,TR,Instruction
Instruction,Instruction(enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,Instruction
Instruction,Instruction(TR::RegisterDependencyConditions *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,Instruction
Instruction,Instruction(class TR::Instruction &&),0,TR,Instruction
Instruction,Instruction(TR::RegisterDependencyConditions *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,Instruction
aboutToAssignDefdRegister,aboutToAssignDefdRegister(TR::Register *,enum OMR::X86::Instruction::TR_UpperHalfRefConditions),1,OMR,X86::Instruction
aboutToAssignMemRef,aboutToAssignMemRef(TR::MemoryReference *),1,OMR,X86::Instruction
aboutToAssignRegDeps,aboutToAssignRegDeps(enum OMR::X86::Instruction::TR_UpperHalfRefConditions,enum OMR::X86::Instruction::TR_UpperHalfRefConditions),1,OMR,X86::Instruction
aboutToAssignRegister,aboutToAssignRegister(TR::Register *,enum OMR::X86::Instruction::TR_UpperHalfRefConditions,enum OMR::X86::Instruction::TR_UpperHalfRefConditions),1,OMR,X86::Instruction
aboutToAssignUsedRegister,aboutToAssignUsedRegister(TR::Register *,enum OMR::X86::Instruction::TR_UpperHalfRefConditions),1,OMR,X86::Instruction
adjustVFPState,adjustVFPState(struct TR_VFPState *,TR::CodeGenerator *),1,OMR,X86::Instruction
adjustVFPStateForCall,adjustVFPStateForCall(struct TR_VFPState *,int32_t,TR::CodeGenerator *),1,OMR,X86::Instruction
assignRegisters,assignRegisters(enum TR_RegisterKinds),1,OMR,Instruction
assumeValidInstruction,assumeValidInstruction(),1,OMR,X86::Instruction
cg,cg(),1,OMR,Instruction
clobberRegsForRematerialisation,clobberRegsForRematerialisation(),1,OMR,X86::Instruction
defsRegister,defsRegister(TR::Register *),1,OMR,Instruction
dependencyRefsRegister,dependencyRefsRegister(TR::Register *),1,OMR,Instruction
description,description(),1,OMR,X86::Instruction
enlarge,enlarge(int32_t,int32_t,_Bool),1,OMR,X86::Instruction
estimateBinaryLength,estimateBinaryLength(int32_t),1,OMR,Instruction
generateBinaryEncoding,generateBinaryEncoding(),1,OMR,Instruction
generateOperand,generateOperand(uint8_t *),1,OMR,X86::Instruction
generateRepeatedRexPrefix,generateRepeatedRexPrefix(uint8_t *),1,OMR,X86::Instruction
getBinaryEncoding,getBinaryEncoding(),1,OMR,Instruction
getBinaryLength,getBinaryLength(),1,OMR,Instruction
getBinaryLengthLowerBound,getBinaryLengthLowerBound(),1,OMR,Instruction
getDependencyConditions,getDependencyConditions(),1,OMR,X86::Instruction
getEstimatedBinaryLength,getEstimatedBinaryLength(),1,OMR,Instruction
getGCMap,getGCMap(),1,OMR,Instruction
getGCRegisterMask,getGCRegisterMask(),1,OMR,Instruction
getIA32ImmInstruction,getIA32ImmInstruction(),1,OMR,X86::Instruction
getIA32LabelInstruction,getIA32LabelInstruction(),1,OMR,X86::Instruction
getIA32RegInstruction,getIA32RegInstruction(),1,OMR,X86::Instruction
getIndex,getIndex(),1,OMR,Instruction
getKind,getKind(),1,OMR,Instruction
getLabelSymbol,getLabelSymbol(),1,OMR,Instruction
getLiveLocals,getLiveLocals(),1,OMR,Instruction
getLiveMonitors,getLiveMonitors(),1,OMR,Instruction
getMemoryReference,getMemoryReference(),1,OMR,X86::Instruction
getNext,getNext(),1,OMR,Instruction
getNode,getNode(),1,OMR,Instruction
getNumOperandReferencedFPRegisters,getNumOperandReferencedFPRegisters(),1,OMR,X86::Instruction
getNumOperandReferencedGPRegisters,getNumOperandReferencedGPRegisters(),1,OMR,X86::Instruction
getOpCode,getOpCode(),1,OMR,Instruction
getOpCodeValue,getOpCodeValue(),1,OMR,Instruction
getPrev,getPrev(),1,OMR,Instruction
getRegisterSaveDescription,getRegisterSaveDescription(),1,OMR,Instruction
getSnippetForGC,getSnippetForGC(),1,OMR,Instruction
getSourceRegister,getSourceRegister(),1,OMR,X86::Instruction
getSourceRightRegister,getSourceRightRegister(),1,OMR,X86::Instruction
getTargetRegister,getTargetRegister(),1,OMR,X86::Instruction
initialize,initialize(TR::CodeGenerator *,TR::RegisterDependencyConditions *,enum TR_X86OpCodes,_Bool),1,OMR,X86::Instruction
isBranchOp,isBranchOp(),1,OMR,X86::Instruction
isLabel,isLabel(),1,OMR,X86::Instruction
isLastWarmInstruction,isLastWarmInstruction(),1,OMR,Instruction
isPatchBarrier,isPatchBarrier(),1,OMR,Instruction
isRegRegMove,isRegRegMove(),1,OMR,X86::Instruction
isVirtualGuardNOPInstruction,isVirtualGuardNOPInstruction(),1,OMR,Instruction
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Instruction
jitPersistentFree,jitPersistentFree(void *),1,OMR,Instruction
move,move(TR::Instruction *),1,OMR,Instruction
needsAOTRelocation,needsAOTRelocation(),1,OMR,Instruction
needsGCMap,needsGCMap(),1,OMR,Instruction
needsLockPrefix,needsLockPrefix(),1,OMR,X86::Instruction
needsRepPrefix,needsRepPrefix(),1,OMR,X86::Instruction
operandSizeRexBits,operandSizeRexBits(),1,OMR,X86::Instruction
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Instruction
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Instruction
operator delete,operator delete(void *,size_t),0,OMR,Instruction
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Instruction
operator delete,operator delete(void *,TR::Region &),0,OMR,Instruction
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Instruction
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Instruction
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Instruction
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Instruction
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Instruction
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Instruction
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Instruction
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Instruction
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Instruction
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Instruction
operator new,operator new(size_t,TR::Region &),0,OMR,Instruction
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Instruction
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Instruction
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Instruction
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Instruction
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Instruction
operator new[],operator new[](size_t,TR::Region &),0,OMR,Instruction
operator=,operator=(class OMR::Instruction &&),1,OMR,Instruction
operator=,operator=(const class OMR::Instruction &),0,OMR,Instruction
operator=,operator=(const class OMR::X86::Instruction &),0,OMR,X86::Instruction
operator=,operator=(class OMR::X86::Instruction &&),0,OMR,X86::Instruction
operator=,operator=(class TR::Instruction &&),0,TR,Instruction
operator=,operator=(const class TR::Instruction &),0,TR,Instruction
refsRegister,refsRegister(TR::Register *),1,OMR,Instruction
registerRefKindApplies,registerRefKindApplies(enum OMR::X86::Instruction::TR_UpperHalfRefConditions),1,OMR,X86::Instruction
remove,remove(),1,OMR,Instruction
rexBits,rexBits(),1,OMR,X86::Instruction
rexRepeatCount,rexRepeatCount(),1,OMR,X86::Instruction
self,self(),1,OMR,Instruction
setBinaryEncoding,setBinaryEncoding(uint8_t *),1,OMR,Instruction
setBinaryLength,setBinaryLength(uint8_t),1,OMR,Instruction
setDependencyConditions,setDependencyConditions(TR::RegisterDependencyConditions *),1,OMR,X86::Instruction
setEstimatedBinaryLength,setEstimatedBinaryLength(uint8_t),1,OMR,Instruction
setGCMap,setGCMap(class TR_GCStackMap *),1,OMR,Instruction
setIndex,setIndex(TIndex),1,OMR,Instruction
setIsUpperHalfDead,setIsUpperHalfDead(TR::Register *,_Bool,enum OMR::X86::Instruction::TR_UpperHalfRefConditions),1,OMR,X86::Instruction
setLastWarmInstruction,setLastWarmInstruction(_Bool),1,OMR,Instruction
setLiveLocals,setLiveLocals(class TR_BitVector *),1,OMR,Instruction
setLiveMonitors,setLiveMonitors(class TR_BitVector *),1,OMR,Instruction
setNeedsAOTRelocation,setNeedsAOTRelocation(_Bool),1,OMR,Instruction
setNeedsGCMap,setNeedsGCMap(TCollectableReferenceMask),1,OMR,Instruction
setNext,setNext(TR::Instruction *),1,OMR,Instruction
setNode,setNode(TR::Node *),1,OMR,Instruction
setOpCodeValue,setOpCodeValue(TR::class InstOpCode::Mnemonic),1,OMR,Instruction
setOpCodeValue,setOpCodeValue(enum TR_X86OpCodes),0,OMR,X86::Instruction
setPrev,setPrev(TR::Instruction *),1,OMR,Instruction
setRegisterSaveDescription,setRegisterSaveDescription(int32_t),1,OMR,Instruction
setRexRepeatCount,setRexRepeatCount(uint8_t),1,OMR,X86::Instruction
totalReferencedFPRegisters,totalReferencedFPRegisters(TR::CodeGenerator *),1,OMR,X86::Instruction
totalReferencedGPRegisters,totalReferencedGPRegisters(TR::CodeGenerator *),1,OMR,X86::Instruction
useRegister,useRegister(TR::Register *),1,OMR,Instruction
usesRegister,usesRegister(TR::Register *),1,OMR,Instruction
~Instruction,~Instruction(),1,OMR,Instruction
Snippet,Snippet(class OMR::Snippet &&),1,OMR,Snippet
Snippet,Snippet(const class OMR::Snippet &),0,OMR,Snippet
Snippet,Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,_Bool),0,OMR,Snippet
Snippet,Snippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *),0,OMR,Snippet
Snippet,Snippet(const class OMR::X86::Snippet &),0,OMR,X86::Snippet
Snippet,Snippet(class OMR::X86::Snippet &&),0,OMR,X86::Snippet
cg,cg(),1,OMR,Snippet
emitSnippet,emitSnippet(),1,OMR,Snippet
emitSnippetBody,emitSnippetBody(),1,OMR,Snippet
gcMap,gcMap(),1,OMR,Snippet
getBlock,getBlock(),1,OMR,Snippet
getKind,getKind(),1,OMR,X86::Snippet
getLength,getLength(int32_t),1,OMR,Snippet
getNode,getNode(),1,OMR,Snippet
getSnippetLabel,getSnippetLabel(),1,OMR,Snippet
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Snippet
jitPersistentFree,jitPersistentFree(void *),1,OMR,Snippet
needsExceptionTableEntry,needsExceptionTableEntry(),1,OMR,Snippet
operator delete,operator delete(void *,TR::Region &),1,OMR,Snippet
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Snippet
operator delete,operator delete(void *,size_t),0,OMR,Snippet
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Snippet
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Snippet
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Snippet
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Snippet
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Snippet
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Snippet
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Snippet
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Snippet
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Snippet
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Snippet
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Snippet
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Snippet
operator new,operator new(size_t,TR::Region &),0,OMR,Snippet
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Snippet
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Snippet
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Snippet
operator new[],operator new[](size_t,TR::Region &),0,OMR,Snippet
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Snippet
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Snippet
operator=,operator=(class OMR::Snippet &&),1,OMR,Snippet
operator=,operator=(const class OMR::Snippet &),0,OMR,Snippet
operator=,operator=(class OMR::X86::Snippet &&),0,OMR,X86::Snippet
operator=,operator=(const class OMR::X86::Snippet &),0,OMR,X86::Snippet
operator=,operator=(const class TR::Snippet &),0,TR,Snippet
operator=,operator=(class TR::Snippet &&),0,TR,Snippet
prepareSnippetForGCSafePoint,prepareSnippetForGCSafePoint(),1,OMR,Snippet
print,print(TR::FILE *,class TR_Debug *),1,OMR,Snippet
resetNeedsExceptionTableEntry,resetNeedsExceptionTableEntry(),1,OMR,Snippet
self,self(),1,OMR,Snippet
setBlock,setBlock(TR::Block *),1,OMR,Snippet
setCodeGenerator,setCodeGenerator(TR::CodeGenerator *),1,OMR,Snippet
setEstimatedCodeLocation,setEstimatedCodeLocation(int32_t),1,OMR,Snippet
setNeedsExceptionTableEntry,setNeedsExceptionTableEntry(),1,OMR,Snippet
setNode,setNode(TR::Node *),1,OMR,Snippet
setSnippetLabel,setSnippetLabel(TR::LabelSymbol *),1,OMR,Snippet
~Snippet,~Snippet(),1,OMR,Snippet
AliasBuilder,AliasBuilder(const class OMR::AliasBuilder &),1,OMR,AliasBuilder
AliasBuilder,AliasBuilder(class OMR::AliasBuilder &&),0,OMR,AliasBuilder
AliasBuilder,AliasBuilder(TR::SymbolReferenceTable *,size_t,TR::Compilation *),0,OMR,AliasBuilder
AliasBuilder,AliasBuilder(const class TR::AliasBuilder &),0,TR,AliasBuilder
AliasBuilder,AliasBuilder(class TR::AliasBuilder &&),0,TR,AliasBuilder
addAddressArrayShadows,addAddressArrayShadows(class TR_BitVector *),1,OMR,AliasBuilder
addIntArrayShadows,addIntArrayShadows(class TR_BitVector *),1,OMR,AliasBuilder
addNonIntPrimitiveArrayShadows,addNonIntPrimitiveArrayShadows(class TR_BitVector *),1,OMR,AliasBuilder
addressShadowSymRefs,addressShadowSymRefs(),1,OMR,AliasBuilder
addressStaticSymRefs,addressStaticSymRefs(),1,OMR,AliasBuilder
arrayElementSymRefs,arrayElementSymRefs(),1,OMR,AliasBuilder
arrayletElementSymRefs,arrayletElementSymRefs(),1,OMR,AliasBuilder
catchLocalUseSymRefs,catchLocalUseSymRefs(),1,OMR,AliasBuilder
comp,comp(),1,OMR,AliasBuilder
conservativeGenericIntShadowAliasing,conservativeGenericIntShadowAliasing(),1,OMR,AliasBuilder
cpConstantSymRefs,cpConstantSymRefs(),1,OMR,AliasBuilder
cpSymRefs,cpSymRefs(),1,OMR,AliasBuilder
createAliasInfo,createAliasInfo(),1,OMR,AliasBuilder
defaultMethodDefAliases,defaultMethodDefAliases(),1,OMR,AliasBuilder
defaultMethodDefAliasesWithoutImmutable,defaultMethodDefAliasesWithoutImmutable(),1,OMR,AliasBuilder
defaultMethodDefAliasesWithoutUserField,defaultMethodDefAliasesWithoutUserField(),1,OMR,AliasBuilder
defaultMethodUseAliases,defaultMethodUseAliases(),1,OMR,AliasBuilder
gatherLocalUseInfo,gatherLocalUseInfo(TR::Node *,class TR_BitVector &,vcount_t,_Bool),1,OMR,AliasBuilder
gatherLocalUseInfo,gatherLocalUseInfo(TR::Block *,_Bool),0,OMR,AliasBuilder
gatherLocalUseInfo,gatherLocalUseInfo(TR::Block *,class TR_BitVector &,TR_ScratchList<TR_Pair<TR::Block, class TR_BitVector> > *,vcount_t,_Bool),0,OMR,AliasBuilder
gcSafePointSymRefNumbers,gcSafePointSymRefNumbers(),1,OMR,AliasBuilder
genericIntArrayShadowSymRefs,genericIntArrayShadowSymRefs(),1,OMR,AliasBuilder
genericIntNonArrayShadowSymRefs,genericIntNonArrayShadowSymRefs(),1,OMR,AliasBuilder
genericIntShadowSymRefs,genericIntShadowSymRefs(),1,OMR,AliasBuilder
getSymRefForAliasing,getSymRefForAliasing(TR::Node *,TR::Node *),1,OMR,AliasBuilder
getVeryRefinedCallAliasSets,getVeryRefinedCallAliasSets(TR::ResolvedMethodSymbol *),1,OMR,AliasBuilder
hasUseonlyAliasesOnlyDueToOSRCatchBlocks,hasUseonlyAliasesOnlyDueToOSRCatchBlocks(TR::SymbolReference *),1,OMR,AliasBuilder
intShadowSymRefs,intShadowSymRefs(),1,OMR,AliasBuilder
intStaticSymRefs,intStaticSymRefs(),1,OMR,AliasBuilder
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,AliasBuilder
jitPersistentFree,jitPersistentFree(void *),1,OMR,AliasBuilder
litPoolGenericIntShadowHasBeenCreated,litPoolGenericIntShadowHasBeenCreated(),1,OMR,AliasBuilder
methodAliases,methodAliases(TR::SymbolReference *),1,OMR,AliasBuilder
methodSymRefs,methodSymRefs(),1,OMR,AliasBuilder
methodsThatMayThrow,methodsThatMayThrow(),1,OMR,AliasBuilder
mutableGenericIntShadowHasBeenCreated,mutableGenericIntShadowHasBeenCreated(),1,OMR,AliasBuilder
nonIntPrimitiveShadowSymRefs,nonIntPrimitiveShadowSymRefs(),1,OMR,AliasBuilder
nonIntPrimitiveStaticSymRefs,nonIntPrimitiveStaticSymRefs(),1,OMR,AliasBuilder
notOsrCatchLocalUseSymRefs,notOsrCatchLocalUseSymRefs(),1,OMR,AliasBuilder
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,AliasBuilder
operator delete,operator delete(void *,TR::Region &),0,OMR,AliasBuilder
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,AliasBuilder
operator delete,operator delete(void *,size_t),0,OMR,AliasBuilder
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,AliasBuilder
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,AliasBuilder
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,AliasBuilder
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,AliasBuilder
operator delete[],operator delete[](void *,TR::Region &),0,OMR,AliasBuilder
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,AliasBuilder
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,AliasBuilder
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,AliasBuilder
operator new,operator new(size_t,TR::Region &),0,OMR,AliasBuilder
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,AliasBuilder
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,AliasBuilder
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,AliasBuilder
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,AliasBuilder
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,AliasBuilder
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,AliasBuilder
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,AliasBuilder
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,AliasBuilder
operator new[],operator new[](size_t,TR::Region &),0,OMR,AliasBuilder
operator=,operator=(class OMR::AliasBuilder &&),1,OMR,AliasBuilder
operator=,operator=(const class OMR::AliasBuilder &),0,OMR,AliasBuilder
operator=,operator=(class TR::AliasBuilder &&),0,TR,AliasBuilder
operator=,operator=(const class TR::AliasBuilder &),0,TR,AliasBuilder
refinedAddressArrayShadows,refinedAddressArrayShadows(),1,OMR,AliasBuilder
refinedIntArrayShadows,refinedIntArrayShadows(),1,OMR,AliasBuilder
refinedNonIntPrimitiveArrayShadows,refinedNonIntPrimitiveArrayShadows(),1,OMR,AliasBuilder
self,self(),1,OMR,AliasBuilder
setCatchLocalUseSymRefs,setCatchLocalUseSymRefs(),1,OMR,AliasBuilder
setConservativeGenericIntShadowAliasing,setConservativeGenericIntShadowAliasing(_Bool),1,OMR,AliasBuilder
setLitPoolGenericIntShadowHasBeenCreated,setLitPoolGenericIntShadowHasBeenCreated(),1,OMR,AliasBuilder
setMutableGenericIntShadowHasBeenCreated,setMutableGenericIntShadowHasBeenCreated(_Bool),1,OMR,AliasBuilder
setVeryRefinedCallAliasSets,setVeryRefinedCallAliasSets(TR::ResolvedMethodSymbol *,class TR_BitVector *),1,OMR,AliasBuilder
symRefTab,symRefTab(),1,OMR,AliasBuilder
trHeapMemory,trHeapMemory(),1,OMR,AliasBuilder
trMemory,trMemory(),1,OMR,AliasBuilder
trStackMemory,trStackMemory(),1,OMR,AliasBuilder
unsafeArrayElementSymRefs,unsafeArrayElementSymRefs(),1,OMR,AliasBuilder
unsafeSymRefNumbers,unsafeSymRefNumbers(),1,OMR,AliasBuilder
updateSubSets,updateSubSets(TR::SymbolReference *),1,OMR,AliasBuilder
~AliasBuilder,~AliasBuilder(),1,OMR,AliasBuilder
ArithEnv,ArithEnv(),1,OMR,ArithEnv
ArithEnv,ArithEnv(const class OMR::ArithEnv &),0,OMR,ArithEnv
ArithEnv,ArithEnv(class OMR::ArithEnv &&),0,OMR,ArithEnv
ArithEnv,ArithEnv(const class TR::ArithEnv &),0,TR,ArithEnv
ArithEnv,ArithEnv(class TR::ArithEnv &&),0,TR,ArithEnv
doubleAddDouble,doubleAddDouble(double,double),1,OMR,ArithEnv
doubleDivideDouble,doubleDivideDouble(double,double),1,OMR,ArithEnv
doubleMultiplyDouble,doubleMultiplyDouble(double,double),1,OMR,ArithEnv
doubleNegate,doubleNegate(double),1,OMR,ArithEnv
doubleRemainderDouble,doubleRemainderDouble(double,double),1,OMR,ArithEnv
doubleSubtractDouble,doubleSubtractDouble(double,double),1,OMR,ArithEnv
doubleToFloat,doubleToFloat(double),1,OMR,ArithEnv
floatAddFloat,floatAddFloat(float,float),1,OMR,ArithEnv
floatDivideFloat,floatDivideFloat(float,float),1,OMR,ArithEnv
floatMultiplyFloat,floatMultiplyFloat(float,float),1,OMR,ArithEnv
floatNegate,floatNegate(float),1,OMR,ArithEnv
floatRemainderFloat,floatRemainderFloat(float,float),1,OMR,ArithEnv
floatSubtractFloat,floatSubtractFloat(float,float),1,OMR,ArithEnv
floatToDouble,floatToDouble(float),1,OMR,ArithEnv
longDivideLong,longDivideLong(int64_t,int64_t),1,OMR,ArithEnv
longMultiplyLong,longMultiplyLong(int64_t,int64_t),1,OMR,ArithEnv
longRemainderLong,longRemainderLong(int64_t,int64_t),1,OMR,ArithEnv
operator=,operator=(const class OMR::ArithEnv &),1,OMR,ArithEnv
operator=,operator=(class OMR::ArithEnv &&),0,OMR,ArithEnv
operator=,operator=(class TR::ArithEnv &&),0,TR,ArithEnv
operator=,operator=(const class TR::ArithEnv &),0,TR,ArithEnv
self,self(),1,OMR,ArithEnv
~ArithEnv,~ArithEnv(),1,OMR,ArithEnv
CFG,CFG(class OMR::CFG &&),1,OMR,CFG
CFG,CFG(TR::Compilation *,TR::ResolvedMethodSymbol *),0,OMR,CFG
CFG,CFG(const class OMR::CFG &),0,OMR,CFG
addEdge,addEdge(TR::CFGNode *,TR::CFGNode *,enum TR_AllocationKind),1,OMR,CFG
addEdge,addEdge(TR::CFGEdge *),0,OMR,CFG
addExceptionEdge,addExceptionEdge(TR::CFGNode *,TR::CFGNode *,enum TR_AllocationKind),1,OMR,CFG
addNode,addNode(TR::CFGNode *,class TR_RegionStructure *,_Bool),1,OMR,CFG
addStructureSubGraphNodes,addStructureSubGraphNodes(class TR_StructureSubGraphNode *),1,OMR,CFG
addSuccessorEdges,addSuccessorEdges(TR::Block *),1,OMR,CFG
allocateNodeNumber,allocateNodeNumber(),1,OMR,CFG
clone,clone(),1,OMR,CFG
comp,comp(),1,OMR,CFG
compareExceptionSuccessors,compareExceptionSuccessors(TR::CFGNode *,TR::CFGNode *),1,OMR,CFG
computeEntryFactorsAcyclic,computeEntryFactorsAcyclic(class TR_RegionStructure *),1,OMR,CFG
computeEntryFactorsFrom,computeEntryFactorsFrom(class TR_Structure *,float &),1,OMR,CFG
computeEntryFactorsLoop,computeEntryFactorsLoop(class TR_RegionStructure *),1,OMR,CFG
computeInsideEdgeFactor,computeInsideEdgeFactor(TR::CFGEdge *,TR::CFGNode *),1,OMR,CFG
computeOutsideEdgeFactor,computeOutsideEdgeFactor(TR::CFGEdge *,TR::CFGNode *),1,OMR,CFG
consumePseudoRandomFrequencies,consumePseudoRandomFrequencies(),1,OMR,CFG
copyExceptionSuccessors,copyExceptionSuccessors(TR::CFGNode *,TR::CFGNode *,_Bool (*)(TR::CFGEdge *)),1,OMR,CFG
createArrayOfBlocks,createArrayOfBlocks(enum TR_AllocationKind),1,OMR,CFG
createTraversalOrder,createTraversalOrder(_Bool,enum TR_AllocationKind,class TR_BitVector *),1,OMR,CFG
findLastTreeTop,findLastTreeTop(),1,OMR,CFG
findLoopingBlocks,findLoopingBlocks(class TR_BitVector &),1,OMR,CFG
findReachableBlocks,findReachableBlocks(class TR_BitVector *),1,OMR,CFG
getAvgFrequency,getAvgFrequency(),1,OMR,CFG
getBackwardTraversalElement,getBackwardTraversalElement(int32_t),1,OMR,CFG
getBackwardTraversalLength,getBackwardTraversalLength(),1,OMR,CFG
getBranchCounters,getBranchCounters(TR::Node *,TR::Block *,int32_t *,int32_t *,TR::Compilation *),1,OMR,CFG
getBranchCountersFromProfilingData,getBranchCountersFromProfilingData(TR::Node *,TR::Block *,int32_t *,int32_t *),1,OMR,CFG
getEdgeProbability,getEdgeProbability(TR::CFGEdge *),1,OMR,CFG
getEnd,getEnd(),1,OMR,CFG
getFirstNode,getFirstNode(),1,OMR,CFG
getForwardTraversalElement,getForwardTraversalElement(int32_t),1,OMR,CFG
getForwardTraversalLength,getForwardTraversalLength(),1,OMR,CFG
getFrequencySet,getFrequencySet(),1,OMR,CFG
getHasUnreachableBlocks,getHasUnreachableBlocks(),1,OMR,CFG
getIgnoreUnreachableBlocks,getIgnoreUnreachableBlocks(),1,OMR,CFG
getInitialBlockFrequency,getInitialBlockFrequency(),1,OMR,CFG
getLowFrequency,getLowFrequency(),1,OMR,CFG
getMaxEdgeFrequency,getMaxEdgeFrequency(),1,OMR,CFG
getMaxFrequency,getMaxFrequency(),1,OMR,CFG
getMethodSymbol,getMethodSymbol(),1,OMR,CFG
getMightHaveUnreachableBlocks,getMightHaveUnreachableBlocks(),1,OMR,CFG
getNextNodeNumber,getNextNodeNumber(),1,OMR,CFG
getNodes,getNodes(),1,OMR,CFG
getNumberOfNodes,getNumberOfNodes(),1,OMR,CFG
getOldMaxEdgeFrequency,getOldMaxEdgeFrequency(),1,OMR,CFG
getStart,getStart(),1,OMR,CFG
getStructure,getStructure(),1,OMR,CFG
hasBranchProfilingData,hasBranchProfilingData(),1,OMR,CFG
insertBefore,insertBefore(TR::Block *,TR::Block *),1,OMR,CFG
invalidateStructure,invalidateStructure(),1,OMR,CFG
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,CFG
jitPersistentFree,jitPersistentFree(void *),1,OMR,CFG
join,join(TR::Block *,TR::Block *),1,OMR,CFG
normalizeEdgeFrequencies,normalizeEdgeFrequencies(TR_Array<TR::CFGEdge *> *),1,OMR,CFG
normalizeFrequencies,normalizeFrequencies(class TR_BitVector *),1,OMR,CFG
normalizeNodeFrequencies,normalizeNodeFrequencies(class TR_BitVector *,TR_Array<TR::CFGEdge *> *),1,OMR,CFG
operator delete,operator delete(void *,TR::Region &),1,OMR,CFG
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,CFG
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,CFG
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,CFG
operator delete,operator delete(void *,size_t),0,OMR,CFG
operator delete[],operator delete[](void *,TR::Region &),1,OMR,CFG
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,CFG
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,CFG
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,CFG
operator new,operator new(size_t,TR::Region &),1,OMR,CFG
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,CFG
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,CFG
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,CFG
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,CFG
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,CFG
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,CFG
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,OMR,CFG
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,CFG
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,CFG
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,CFG
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,CFG
operator new[],operator new[](size_t,TR::Region &),0,OMR,CFG
operator=,operator=(class OMR::CFG &&),1,OMR,CFG
operator=,operator=(const class OMR::CFG &),0,OMR,CFG
operator=,operator=(class TR::CFG &&),0,TR,CFG
processAcyclicRegion,processAcyclicRegion(class TR_RegionStructure *),1,OMR,CFG
processNaturalLoop,processNaturalLoop(class TR_RegionStructure *),1,OMR,CFG
propagateColdInfo,propagateColdInfo(_Bool),1,OMR,CFG
propagateEntryFactorsFrom,propagateEntryFactorsFrom(class TR_Structure *,float),1,OMR,CFG
propagateFrequencyInfoFrom,propagateFrequencyInfoFrom(class TR_Structure *),1,OMR,CFG
removeBlock,removeBlock(TR::Block *),1,OMR,CFG
removeEdge,removeEdge(TR::CFGEdgeList &,int32_t,int32_t),1,OMR,CFG
removeEdge,removeEdge(TR::CFGEdge *,_Bool),0,OMR,CFG
removeEdge,removeEdge(TR::CFGEdge *),0,OMR,CFG
removeEdge,removeEdge(TR::CFGNode *,TR::CFGNode *),0,OMR,CFG
removeNode,removeNode(TR::CFGNode *),1,OMR,CFG
removeStructureSubGraphNodes,removeStructureSubGraphNodes(class TR_StructureSubGraphNode *),1,OMR,CFG
removeUnreachableBlocks,removeUnreachableBlocks(),1,OMR,CFG
resetFrequencies,resetFrequencies(),1,OMR,CFG
resetVisitCounts,resetVisitCounts(vcount_t),1,OMR,CFG
scaleEdgeFrequencies,scaleEdgeFrequencies(),1,OMR,CFG
self,self(),1,OMR,CFG
setBlockAndEdgeFrequenciesBasedOnStructure,setBlockAndEdgeFrequenciesBasedOnStructure(),1,OMR,CFG
setEdgeFrequenciesFrom,setEdgeFrequenciesFrom(),1,OMR,CFG
setEdgeFrequenciesOnNode,setEdgeFrequenciesOnNode(TR::CFGNode *,int32_t,int32_t,TR::Compilation *),1,OMR,CFG
setEdgeProbability,setEdgeProbability(TR::CFGEdge *,double),1,OMR,CFG
setEnd,setEnd(TR::CFGNode *),1,OMR,CFG
setFrequencies,setFrequencies(),1,OMR,CFG
setHasUnreachableBlocks,setHasUnreachableBlocks(),1,OMR,CFG
setIgnoreUnreachableBlocks,setIgnoreUnreachableBlocks(_Bool),1,OMR,CFG
setMaxEdgeFrequency,setMaxEdgeFrequency(int32_t),1,OMR,CFG
setMaxFrequency,setMaxFrequency(int32_t),1,OMR,CFG
setNextNodeNumber,setNextNodeNumber(int32_t),1,OMR,CFG
setStart,setStart(TR::CFGNode *),1,OMR,CFG
setStartAndEnd,setStartAndEnd(TR::CFGNode *,TR::CFGNode *),1,OMR,CFG
setStructure,setStructure(class TR_Structure *),1,OMR,CFG
setUniformEdgeFrequenciesOnNode,setUniformEdgeFrequenciesOnNode(TR::CFGNode *,int32_t,_Bool,TR::Compilation *),1,OMR,CFG
structureRegion,structureRegion(),1,OMR,CFG
trHeapMemory,trHeapMemory(),1,OMR,CFG
trMemory,trMemory(),1,OMR,CFG
trStackMemory,trStackMemory(),1,OMR,CFG
updateBlockFrequency,updateBlockFrequency(TR::Block *,int32_t),1,OMR,CFG
updateBlockFrequencyFromEdges,updateBlockFrequencyFromEdges(TR::Block *),1,OMR,CFG
walkStructure,walkStructure(class TR_RegionStructure *),1,OMR,CFG
~CFG,~CFG(),1,OMR,CFG
CFGEdge,CFGEdge(class TR::CFGNode *,class TR::CFGNode *),1,TR,CFGEdge
CFGEdge,CFGEdge(),0,TR,CFGEdge
TR_Link0<T>,TR_Link0<T>(T *),1,TR,Link0
TR_Link<T>,TR_Link<T>(T *),1,TR,Link
createEdge,createEdge(class TR::CFGNode *,class TR::CFGNode *,TR::Region &),1,TR,CFGEdge
createEdge,createEdge(class TR::CFGNode *,class TR::CFGNode *,class TR_Memory *,enum TR_AllocationKind),0,TR,CFGEdge
createExceptionEdge,createExceptionEdge(class TR::CFGNode *,class TR::CFGNode *,class TR_Memory *,enum TR_AllocationKind),1,TR,CFGEdge
createExceptionEdge,createExceptionEdge(class TR::CFGNode *,class TR::CFGNode *,TR::Region &),0,TR,CFGEdge
getCreatedByTailRecursionElimination,getCreatedByTailRecursionElimination(),1,TR,CFGEdge
getFrequency,getFrequency(),1,TR,CFGEdge
getFrom,getFrom(),1,TR,CFGEdge
getId,getId(),1,TR,CFGEdge
getNext,getNext(),1,TR,Link0
getTo,getTo(),1,TR,CFGEdge
getVisitCount,getVisitCount(),1,TR,CFGEdge
incVisitCount,incVisitCount(),1,TR,CFGEdge
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,Link
jitPersistentFree,jitPersistentFree(void *),1,TR,Link
mustRestoreVMThreadRegister,mustRestoreVMThreadRegister(),1,TR,CFGEdge
normalizeFrequency,normalizeFrequency(int32_t),1,TR,CFGEdge
operator delete,operator delete(void *,size_t),1,TR,Link
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Link
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Link
operator delete,operator delete(void *,TR::Region &),0,TR,Link
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Link
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Link
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Link
operator delete[],operator delete[](void *,TR::Region &),0,TR,Link
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Link
operator new,operator new(size_t,class TR_PersistentMemory *),1,TR,Link
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,Link
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Link
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,Link
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Link
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Link
operator new,operator new(size_t,TR::Region &),0,TR,Link
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,Link
operator new[],operator new[](size_t,TR::Region &),0,TR,Link
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,Link
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Link
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,Link
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Link
setCreatedByTailRecursionElimination,setCreatedByTailRecursionElimination(_Bool),1,TR,CFGEdge
setExceptionFrom,setExceptionFrom(class TR::CFGNode *),1,TR,CFGEdge
setExceptionFromTo,setExceptionFromTo(class TR::CFGNode *,class TR::CFGNode *),1,TR,CFGEdge
setExceptionTo,setExceptionTo(class TR::CFGNode *),1,TR,CFGEdge
setFrequency,setFrequency(int32_t),1,TR,CFGEdge
setFrom,setFrom(class TR::CFGNode *),1,TR,CFGEdge
setFromTo,setFromTo(class TR::CFGNode *,class TR::CFGNode *),1,TR,CFGEdge
setId,setId(int32_t),1,TR,CFGEdge
setMustRestoreVMThreadRegister,setMustRestoreVMThreadRegister(_Bool),1,TR,CFGEdge
setNext,setNext(T *),1,TR,Link0
setTo,setTo(class TR::CFGNode *),1,TR,CFGEdge
setVisitCount,setVisitCount(vcount_t),1,TR,CFGEdge
ClassEnv,ClassEnv(const class OMR::ClassEnv &),1,OMR,ClassEnv
ClassEnv,ClassEnv(),0,OMR,ClassEnv
ClassEnv,ClassEnv(class OMR::ClassEnv &&),0,OMR,ClassEnv
ClassEnv,ClassEnv(const class TR::ClassEnv &),0,TR,ClassEnv
ClassEnv,ClassEnv(class TR::ClassEnv &&),0,TR,ClassEnv
classDepthOf,classDepthOf(class TR_OpaqueClassBlock *),1,OMR,ClassEnv
classFromJavaLangClass,classFromJavaLangClass(TR::Compilation *,uintptrj_t),1,OMR,ClassEnv
classNameChars,classNameChars(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t &),1,OMR,ClassEnv
classNameChars,classNameChars(TR::Compilation *,TR::SymbolReference *,int32_t &),0,OMR,ClassEnv
classObjectsMayBeCollected,classObjectsMayBeCollected(),1,OMR,ClassEnv
classOfObject,classOfObject(TR::Compilation *,uintptrj_t),1,OMR,ClassEnv
classOfObject,classOfObject(struct OMR_VMThread *,uintptrj_t),0,OMR,ClassEnv
classSignature,classSignature(TR::Compilation *,class TR_OpaqueClassBlock *,class TR_Memory *),1,OMR,ClassEnv
classSignature_DEPRECATED,classSignature_DEPRECATED(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t &,class TR_Memory *),1,OMR,ClassEnv
classesOnHeap,classesOnHeap(),1,OMR,ClassEnv
flagValueForArrayCheck,flagValueForArrayCheck(TR::Compilation *),1,OMR,ClassEnv
flagValueForFinalizerCheck,flagValueForFinalizerCheck(TR::Compilation *),1,OMR,ClassEnv
flagValueForPrimitiveTypeCheck,flagValueForPrimitiveTypeCheck(TR::Compilation *),1,OMR,ClassEnv
getStringCharacter,getStringCharacter(TR::Compilation *,uintptrj_t,int32_t),1,OMR,ClassEnv
getStringFieldByName,getStringFieldByName(TR::Compilation *,TR::SymbolReference *,TR::SymbolReference *,void *&),1,OMR,ClassEnv
hasFinalFieldsInClass,hasFinalFieldsInClass(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
hasFinalizer,hasFinalizer(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isAbstractClass,isAbstractClass(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isAnonymousClass,isAnonymousClass(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isClassArray,isClassArray(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isClassFinal,isClassFinal(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isClassInitialized,isClassInitialized(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isInterfaceClass,isInterfaceClass(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isPrimitiveArray,isPrimitiveArray(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isPrimitiveClass,isPrimitiveClass(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isReferenceArray,isReferenceArray(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isString,isString(TR::Compilation *,uintptrj_t),1,OMR,ClassEnv
isString,isString(TR::Compilation *,class TR_OpaqueClassBlock *),0,OMR,ClassEnv
isStringClass,isStringClass(uintptrj_t),1,OMR,ClassEnv
isStringClass,isStringClass(class TR_OpaqueClassBlock *),0,OMR,ClassEnv
jitFieldsAreSame,jitFieldsAreSame(TR::Compilation *,class TR_ResolvedMethod *,int32_t,class TR_ResolvedMethod *,int32_t,int32_t),1,OMR,ClassEnv
jitStaticsAreSame,jitStaticsAreSame(TR::Compilation *,class TR_ResolvedMethod *,int32_t,class TR_ResolvedMethod *,int32_t),1,OMR,ClassEnv
objectClass,objectClass(TR::Compilation *,uintptrj_t),1,OMR,ClassEnv
operator=,operator=(class OMR::ClassEnv &&),1,OMR,ClassEnv
operator=,operator=(const class OMR::ClassEnv &),0,OMR,ClassEnv
operator=,operator=(class TR::ClassEnv &&),0,TR,ClassEnv
operator=,operator=(const class TR::ClassEnv &),0,TR,ClassEnv
persistentClassPointerFromClassPointer,persistentClassPointerFromClassPointer(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
sameClassLoaders,sameClassLoaders(TR::Compilation *,class TR_OpaqueClassBlock *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
vTableSlot,vTableSlot(TR::Compilation *,class TR_OpaqueMethodBlock *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
~ClassEnv,~ClassEnv(),1,OMR,ClassEnv
CodeGenPhase,CodeGenPhase(class OMR::CodeGenPhase &&),1,OMR,CodeGenPhase
CodeGenPhase,CodeGenPhase(const class OMR::CodeGenPhase &),0,OMR,CodeGenPhase
CodeGenPhase,CodeGenPhase(TR::CodeGenerator *),0,OMR,CodeGenPhase
CodeGenPhase,CodeGenPhase(const class TR::CodeGenPhase &),0,TR,CodeGenPhase
CodeGenPhase,CodeGenPhase(class TR::CodeGenPhase &&),0,TR,CodeGenPhase
getListSize,getListSize(),1,OMR,CodeGenPhase
getName,getName(),1,OMR,CodeGenPhase
getName,getName(enum OMR::CodeGenPhase::PhaseValue),0,OMR,CodeGenPhase
getNumPhases,getNumPhases(),1,OMR,CodeGenPhase
operator int,operator int(),1,OMR,CodeGenPhase
operator=,operator=(const class OMR::CodeGenPhase &),1,OMR,CodeGenPhase
operator=,operator=(class OMR::CodeGenPhase &&),0,OMR,CodeGenPhase
operator=,operator=(const class TR::CodeGenPhase &),0,TR,CodeGenPhase
operator=,operator=(class TR::CodeGenPhase &&),0,TR,CodeGenPhase
performAll,performAll(),1,OMR,CodeGenPhase
performBinaryEncodingPhase,performBinaryEncodingPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performCleanUpFlagsPhase,performCleanUpFlagsPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performCreateStackAtlasPhase,performCreateStackAtlasPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performEmitSnippetsPhase,performEmitSnippetsPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performFindAndFixCommonedReferencesPhase,performFindAndFixCommonedReferencesPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performInliningReportPhase,performInliningReportPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performInsertDebugCountersPhase,performInsertDebugCountersPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performInstructionSelectionPhase,performInstructionSelectionPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performLowerTreesPhase,performLowerTreesPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performMapStackPhase,performMapStackPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performPeepholePhase,performPeepholePhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performProcessRelocationsPhase,performProcessRelocationsPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performRegisterAssigningPhase,performRegisterAssigningPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performRemoveUnusedLocalsPhase,performRemoveUnusedLocalsPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performReserveCodeCachePhase,performReserveCodeCachePhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performSetupForInstructionSelectionPhase,performSetupForInstructionSelectionPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performShrinkWrappingPhase,performShrinkWrappingPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
performUncommonCallConstNodesPhase,performUncommonCallConstNodesPhase(TR::CodeGenerator *,TR::CodeGenPhase *),1,OMR,CodeGenPhase
reportPhase,reportPhase(enum OMR::CodeGenPhase::PhaseValue),1,OMR,CodeGenPhase
self,self(),1,OMR,CodeGenPhase
~CodeGenPhase,~CodeGenPhase(),1,OMR,CodeGenPhase
AddArtificiallyInflatedNodeToStack,AddArtificiallyInflatedNodeToStack(TR::Node *),1,OMR,CodeGenerator
CodeGenerator,CodeGenerator(),1,OMR,CodeGenerator
CodeGenerator,CodeGenerator(class OMR::CodeGenerator &&),0,OMR,CodeGenerator
CodeGenerator,CodeGenerator(const class OMR::CodeGenerator &),0,OMR,CodeGenerator
CodeGenerator,CodeGenerator(class OMR::X86::CodeGenerator &&),0,OMR,X86::CodeGenerator
CodeGenerator,CodeGenerator(const class OMR::X86::CodeGenerator &),0,OMR,X86::CodeGenerator
CodeGenerator,CodeGenerator(class OMR::X86::AMD64::CodeGenerator &&),0,OMR,X86::AMD64::CodeGenerator
CodeGenerator,CodeGenerator(const class OMR::X86::AMD64::CodeGenerator &),0,OMR,X86::AMD64::CodeGenerator
CodeGenerator,CodeGenerator(const class TestCompiler::CodeGenerator &),0,TestCompiler,CodeGenerator
CodeGenerator,CodeGenerator(class TestCompiler::CodeGenerator &&),0,TestCompiler,CodeGenerator
IntJ,IntJ(),1,OMR,CodeGenerator
IsInMemoryType,IsInMemoryType(TR::DataType),1,OMR,CodeGenerator
addAOTRelocation,addAOTRelocation(TR::Relocation *,char *,uintptr_t,TR::Node *),1,OMR,CodeGenerator
addAOTRelocation,addAOTRelocation(TR::Relocation *,TR::RelocationDebugInfo *),0,OMR,CodeGenerator
addAccumulatedInstructionLengthError,addAccumulatedInstructionLengthError(int32_t),1,OMR,CodeGenerator
addAllocatedRegister,addAllocatedRegister(TR::Register *),1,OMR,CodeGenerator
addAllocatedRegisterPair,addAllocatedRegisterPair(TR::RegisterPair *),1,OMR,CodeGenerator
addBreakPointAddress,addBreakPointAddress(uint8_t *),1,OMR,CodeGenerator
addClobberingInstruction,addClobberingInstruction(TR::ClobberingInstruction *),1,OMR,X86::CodeGenerator
addCountersToEdges,addCountersToEdges(TR::Block *),1,OMR,CodeGenerator
addDeferredSplit,addDeferredSplit(TR::X86LabelInstruction *),1,OMR,X86::CodeGenerator
addDependentDiscardableRegister,addDependentDiscardableRegister(TR::Register *),1,OMR,X86::CodeGenerator
addLiveDiscardableRegister,addLiveDiscardableRegister(TR::Register *),1,OMR,X86::CodeGenerator
addMetaDataForBranchTableAddress,addMetaDataForBranchTableAddress(uint8_t *,TR::Node *,TR::X86MemTableInstruction *),1,OMR,X86::CodeGenerator
addMonClass,addMonClass(TR::Node *,class TR_OpaqueClassBlock *),1,OMR,CodeGenerator
addProjectSpecializedPairRelocation,addProjectSpecializedPairRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *),1,OMR,CodeGenerator
addProjectSpecializedRelocation,addProjectSpecializedRelocation(TR::Instruction *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *),1,OMR,CodeGenerator
addProjectSpecializedRelocation,addProjectSpecializedRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,char *,uintptr_t,TR::Node *),0,OMR,CodeGenerator
addRelocation,addRelocation(TR::Relocation *),1,OMR,CodeGenerator
addSnippet,addSnippet(TR::Snippet *),1,OMR,CodeGenerator
addSupportedLiveRegisterKind,addSupportedLiveRegisterKind(enum TR_RegisterKinds),1,OMR,CodeGenerator
addSymbolAndDataTypeToMap,addSymbolAndDataTypeToMap(TR::Symbol *,TR::DataType),1,OMR,CodeGenerator
addToAtlas,addToAtlas(TR::Instruction *),1,OMR,CodeGenerator
addToOSRTable,addToOSRTable(int32_t,TR_ByteCodeInfo &),1,OMR,CodeGenerator
addToOSRTable,addToOSRTable(TR::Instruction *),0,OMR,CodeGenerator
addToUnlatchedRegisterList,addToUnlatchedRegisterList(TR::RealRegister *),1,OMR,CodeGenerator
additionsMatch,additionsMatch(TR::Node *,TR::Node *,_Bool),1,OMR,CodeGenerator
addressesMatch,addressesMatch(TR::Node *,TR::Node *,_Bool),1,OMR,CodeGenerator
afterRA,afterRA(),1,OMR,CodeGenerator
alignBinaryBufferCursor,alignBinaryBufferCursor(),1,OMR,CodeGenerator
alignment,alignment(void *,intptrj_t,intptrj_t),1,OMR,X86::CodeGenerator
alignment,alignment(intptrj_t,intptrj_t,intptrj_t),0,OMR,X86::CodeGenerator
allocate64bitRegister,allocate64bitRegister(),1,OMR,CodeGenerator
allocate64bitRegisterPair,allocate64bitRegisterPair(TR::Register *,TR::Register *),1,OMR,CodeGenerator
allocateCodeMemory,allocateCodeMemory(uint32_t,_Bool,_Bool),1,OMR,CodeGenerator
allocateCodeMemory,allocateCodeMemory(uint32_t,uint32_t,uint8_t **,_Bool),0,OMR,CodeGenerator
allocateCollectedReferenceRegister,allocateCollectedReferenceRegister(),1,OMR,CodeGenerator
allocateFloatingPointRegisterPair,allocateFloatingPointRegisterPair(TR::Register *,TR::Register *),1,OMR,CodeGenerator
allocateInternalPointerSpill,allocateInternalPointerSpill(TR::AutomaticSymbol *),1,OMR,CodeGenerator
allocateLocalTemp,allocateLocalTemp(TR::DataType,_Bool),1,OMR,CodeGenerator
allocateRecompilationInfo,allocateRecompilationInfo(),1,OMR,CodeGenerator
allocateRegister,allocateRegister(enum TR_RegisterKinds),1,OMR,CodeGenerator
allocateRegisterPair,allocateRegisterPair(TR::Register *,TR::Register *),1,OMR,CodeGenerator
allocateSinglePrecisionRegister,allocateSinglePrecisionRegister(enum TR_RegisterKinds),1,OMR,CodeGenerator
allocateSinglePrecisionRegisterPair,allocateSinglePrecisionRegisterPair(TR::Register *,TR::Register *),1,OMR,CodeGenerator
allocateSpill,allocateSpill(_Bool,int32_t *,_Bool),1,OMR,CodeGenerator
allocateSpill,allocateSpill(int32_t,_Bool,int32_t *,_Bool),0,OMR,CodeGenerator
allocateVMThreadSpill,allocateVMThreadSpill(),1,OMR,CodeGenerator
allowDSEOfVolatiles,allowDSEOfVolatiles(),1,OMR,CodeGenerator
allowGlobalRegisterAcrossBranch,allowGlobalRegisterAcrossBranch(class TR_RegisterCandidate *,TR::Node *),1,OMR,CodeGenerator
allowGuardMerging,allowGuardMerging(),1,OMR,X86::CodeGenerator
allowSplitWarmAndColdBlocks,allowSplitWarmAndColdBlocks(),1,OMR,CodeGenerator
allowVMThreadRematerialization,allowVMThreadRematerialization(),1,OMR,X86::CodeGenerator
alwaysUseTrampolines,alwaysUseTrampolines(),1,OMR,CodeGenerator
apply12BitLabelRelativeRelocation,apply12BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,_Bool),1,OMR,CodeGenerator
apply16BitLabelRelativeRelocation,apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *,int8_t,_Bool),1,OMR,CodeGenerator
apply16BitLabelRelativeRelocation,apply16BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *),0,OMR,CodeGenerator
apply16BitLoadLabelRelativeRelocation,apply16BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t),1,OMR,CodeGenerator
apply24BitLabelRelativeRelocation,apply24BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *),1,OMR,CodeGenerator
apply32BitLabelRelativeRelocation,apply32BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *),1,OMR,CodeGenerator
apply32BitLabelTableRelocation,apply32BitLabelTableRelocation(int32_t *,TR::LabelSymbol *),1,OMR,CodeGenerator
apply32BitLoadLabelRelativeRelocation,apply32BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t),1,OMR,CodeGenerator
apply64BitLoadLabelRelativeRelocation,apply64BitLoadLabelRelativeRelocation(TR::Instruction *,TR::LabelSymbol *),1,OMR,CodeGenerator
apply8BitLabelRelativeRelocation,apply8BitLabelRelativeRelocation(int32_t *,TR::LabelSymbol *),1,OMR,CodeGenerator
areAssignableGPRsScarce,areAssignableGPRsScarce(),1,OMR,CodeGenerator
arithmeticNeedsLiteralFromPool,arithmeticNeedsLiteralFromPool(TR::Node *),1,OMR,CodeGenerator
armAllocate,armAllocate(TR::Compilation *),1,OMR,CodeGenerator
arrayInitMinimumNumberOfBytes,arrayInitMinimumNumberOfBytes(),1,OMR,CodeGenerator
arrayTranslateAndTestMinimumNumberOfIterations,arrayTranslateAndTestMinimumNumberOfIterations(),1,OMR,CodeGenerator
arrayTranslateMinimumNumberOfElements,arrayTranslateMinimumNumberOfElements(_Bool,_Bool),1,OMR,CodeGenerator
arrayTranslateTableRequiresAlignment,arrayTranslateTableRequiresAlignment(_Bool,_Bool),1,OMR,CodeGenerator
beginInstructionSelection,beginInstructionSelection(),1,OMR,CodeGenerator
bitwiseOpNeedsLiteralFromPool,bitwiseOpNeedsLiteralFromPool(TR::Node *,TR::Node *),1,OMR,CodeGenerator
bndsChkNeedsLiteralFromPool,bndsChkNeedsLiteralFromPool(TR::Node *),1,OMR,CodeGenerator
branchDisplacementToHelperOrTrampoline,branchDisplacementToHelperOrTrampoline(uint8_t *,TR::SymbolReference *),1,OMR,X86::CodeGenerator
branchesAreExpensive,branchesAreExpensive(),1,OMR,CodeGenerator
buildGCMapForInstruction,buildGCMapForInstruction(TR::Instruction *),1,OMR,CodeGenerator
buildGCMapsForInstructionAndSnippet,buildGCMapsForInstructionAndSnippet(TR::Instruction *),1,OMR,CodeGenerator
buildInterpreterEntryPoint,buildInterpreterEntryPoint(),1,OMR,CodeGenerator
buildRegisterMapForInstruction,buildRegisterMapForInstruction(class TR_GCStackMap *),1,OMR,CodeGenerator
calculateRegisterPressure,calculateRegisterPressure(),1,OMR,CodeGenerator
canBeAffectedByStoreTagStalls,canBeAffectedByStoreTagStalls(),1,OMR,CodeGenerator
canClobberNodesRegister,canClobberNodesRegister(TR::Node *,uint16_t,class TR_ClobberEvalData *,_Bool),1,OMR,CodeGenerator
canFoldLargeOffsetInAddressing,canFoldLargeOffsetInAddressing(),1,OMR,CodeGenerator
canNullChkBeImplicit,canNullChkBeImplicit(TR::Node *),1,OMR,CodeGenerator
canNullChkBeImplicit,canNullChkBeImplicit(TR::Node *,_Bool),0,OMR,CodeGenerator
canTransformUnsafeCopyToArrayCopy,canTransformUnsafeCopyToArrayCopy(),1,OMR,CodeGenerator
canTransformUnsafeSetMemory,canTransformUnsafeSetMemory(),1,OMR,CodeGenerator
canUseImmedInstruction,canUseImmedInstruction(int64_t),1,OMR,CodeGenerator
checkForLiveRegisters,checkForLiveRegisters(class TR_LiveRegisters *),1,OMR,CodeGenerator
cleanupFlags,cleanupFlags(TR::Node *),1,OMR,CodeGenerator
clearDeferredSplits,clearDeferredSplits(),1,OMR,X86::CodeGenerator
clearRegisterAssignmentFlags,clearRegisterAssignmentFlags(),1,OMR,CodeGenerator
clobberLiveDependentDiscardableRegisters,clobberLiveDependentDiscardableRegisters(TR::ClobberingInstruction *,TR::Register *),1,OMR,X86::CodeGenerator
clobberLiveDiscardableRegisters,clobberLiveDiscardableRegisters(TR::Instruction *,TR::MemoryReference *),1,OMR,X86::CodeGenerator
codegenMulDecomposition,codegenMulDecomposition(int64_t),1,OMR,CodeGenerator
codegenSupportsLoadlessBNDCheck,codegenSupportsLoadlessBNDCheck(),1,OMR,CodeGenerator
codegenSupportsUnsignedIntegerDivide,codegenSupportsUnsignedIntegerDivide(),1,OMR,CodeGenerator
commitToCodeCache,commitToCodeCache(),1,OMR,CodeGenerator
committedToCodeCache,committedToCodeCache(),1,OMR,CodeGenerator
comp,comp(),1,OMR,CodeGenerator
compute32BitMagicValues,compute32BitMagicValues(int32_t,int32_t *,int32_t *),1,OMR,CodeGenerator
compute64BitMagicValues,compute64BitMagicValues(int64_t,int64_t *,int64_t *),1,OMR,CodeGenerator
computeBlocksWithCalls,computeBlocksWithCalls(),1,OMR,CodeGenerator
computeRegisterSaveDescription,computeRegisterSaveDescription(class TR_BitVector *,_Bool),1,OMR,CodeGenerator
computeSimulatedSpilledRegs,computeSimulatedSpilledRegs(class TR_BitVector *,int32_t,TR::SymbolReference *),1,OMR,CodeGenerator
computeSpilledRegsForAllPresentLinkages,computeSpilledRegsForAllPresentLinkages(class TR_BitVector *,struct OMR::CodeGenerator::TR_RegisterPressureSummary &),1,OMR,CodeGenerator
computeUnsigned64BitMagicValues,computeUnsigned64BitMagicValues(uint64_t,int32_t *,int32_t *),1,OMR,CodeGenerator
computesCarry,computesCarry(),1,OMR,CodeGenerator
considerAllAutosAsTacticalGlobalRegisterCandidates,considerAllAutosAsTacticalGlobalRegisterCandidates(),1,OMR,CodeGenerator
considerTypeForGRA,considerTypeForGRA(TR::DataType),1,OMR,CodeGenerator
considerTypeForGRA,considerTypeForGRA(TR::SymbolReference *),0,OMR,CodeGenerator
considerTypeForGRA,considerTypeForGRA(TR::Node *),0,OMR,CodeGenerator
constLoadNeedsLiteralFromPool,constLoadNeedsLiteralFromPool(TR::Node *),1,OMR,CodeGenerator
constantAddressesCanChangeSize,constantAddressesCanChangeSize(TR::Node *),1,OMR,CodeGenerator
convertMultiplyToShift,convertMultiplyToShift(TR::Node *),1,OMR,CodeGenerator
create16ByteData,create16ByteData(TR::Node *,void *),1,OMR,X86::CodeGenerator
create2ByteData,create2ByteData(TR::Node *,int16_t),1,OMR,X86::CodeGenerator
create4ByteData,create4ByteData(TR::Node *,int32_t),1,OMR,X86::CodeGenerator
create8ByteData,create8ByteData(TR::Node *,int64_t),1,OMR,X86::CodeGenerator
createHWPRecords,createHWPRecords(),1,OMR,CodeGenerator
createLinkage,createLinkage(enum TR_LinkageConventions),1,OMR,CodeGenerator
createLinkageForCompilation,createLinkageForCompilation(),1,OMR,CodeGenerator
createOrFindClonedNode,createOrFindClonedNode(TR::Node *,int32_t),1,OMR,CodeGenerator
createStackAtlas,createStackAtlas(),1,OMR,CodeGenerator
deactivateDependentDiscardableRegisters,deactivateDependentDiscardableRegisters(TR::Register *),1,OMR,X86::CodeGenerator
decInternalControlFlowNestingDepth,decInternalControlFlowNestingDepth(),1,OMR,CodeGenerator
decOutOfLineColdPathNestedDepth,decOutOfLineColdPathNestedDepth(),1,OMR,CodeGenerator
decReferenceCount,decReferenceCount(TR::Node *),1,OMR,CodeGenerator
decVMThreadLiveCount,decVMThreadLiveCount(),1,OMR,CodeGenerator
defaultArrayTranslateMinimumNumberOfIterations,defaultArrayTranslateMinimumNumberOfIterations(const char *),1,OMR,CodeGenerator
disableCommoningOfVolatiles,disableCommoningOfVolatiles(),1,OMR,CodeGenerator
doBackwardsRegisterAssignment,doBackwardsRegisterAssignment(enum TR_RegisterKinds,TR::Instruction *,TR::Instruction *),1,OMR,X86::CodeGenerator
doBinaryEncoding,doBinaryEncoding(),1,OMR,CodeGenerator
doInlineAllocate,doInlineAllocate(TR::Node *),1,OMR,CodeGenerator
doInstructionSelection,doInstructionSelection(),1,OMR,CodeGenerator
doPeephole,doPeephole(),1,OMR,CodeGenerator
doRegisterAssignment,doRegisterAssignment(enum TR_RegisterKinds),1,OMR,CodeGenerator
doRematerialization,doRematerialization(),1,OMR,CodeGenerator
doubleClobberEvaluate,doubleClobberEvaluate(TR::Node *),1,OMR,X86::CodeGenerator
dumpDataSnippets,dumpDataSnippets(TR::FILE *),1,OMR,CodeGenerator
dumpPostFPRegisterAssignment,dumpPostFPRegisterAssignment(TR::Instruction *,TR::Instruction *),1,OMR,X86::CodeGenerator
dumpPostGPRegisterAssignment,dumpPostGPRegisterAssignment(TR::Instruction *,TR::Instruction *),1,OMR,X86::CodeGenerator
dumpPreFPRegisterAssignment,dumpPreFPRegisterAssignment(TR::Instruction *),1,OMR,X86::CodeGenerator
dumpPreGPRegisterAssignment,dumpPreGPRegisterAssignment(TR::Instruction *),1,OMR,X86::CodeGenerator
dumpSpillStats,dumpSpillStats(class TR_FrontEnd *),1,OMR,CodeGenerator
dumpTargetAddressSnippets,dumpTargetAddressSnippets(TR::FILE *),1,OMR,CodeGenerator
eliminateLoadsOfLocalsThatAreNotStored,eliminateLoadsOfLocalsThatAreNotStored(TR::Node *,int32_t),1,OMR,CodeGenerator
emitDataSnippets,emitDataSnippets(),1,OMR,CodeGenerator
emitSnippets,emitSnippets(),1,OMR,CodeGenerator
emitTargetAddressSnippets,emitTargetAddressSnippets(),1,OMR,CodeGenerator
enableBetterSpillPlacements,enableBetterSpillPlacements(),1,OMR,X86::CodeGenerator
enableImplicitDivideCheck,enableImplicitDivideCheck(),1,OMR,X86::CodeGenerator
enableLiteralPoolRegisterForGRA,enableLiteralPoolRegisterForGRA(),1,OMR,CodeGenerator
enableRefinedAliasSets,enableRefinedAliasSets(),1,OMR,CodeGenerator
enableRegisterAssociations,enableRegisterAssociations(),1,OMR,X86::CodeGenerator
enableRegisterInterferences,enableRegisterInterferences(),1,OMR,X86::CodeGenerator
enableRegisterWeights,enableRegisterWeights(),1,OMR,X86::CodeGenerator
enableRematerialisation,enableRematerialisation(),1,OMR,X86::CodeGenerator
enableSinglePrecisionMethods,enableSinglePrecisionMethods(),1,OMR,X86::CodeGenerator
enableTLHPrefetching,enableTLHPrefetching(),1,OMR,X86::CodeGenerator
endInstructionSelection,endInstructionSelection(),1,OMR,CodeGenerator
endInternalControlFlow,endInternalControlFlow(TR::Instruction *),1,OMR,CodeGenerator
estimateBinaryLength,estimateBinaryLength(TR::MemoryReference *),1,OMR,CodeGenerator
estimateRegisterPressure,estimateRegisterPressure(TR::Node *,int32_t &,int32_t &,int32_t,class TR_BitVector *,_Bool,vcount_t,TR::SymbolReference *,_Bool &,_Bool,_Bool &),1,OMR,CodeGenerator
estimateRegisterPressure,estimateRegisterPressure(TR::Block *,vcount_t,int32_t,int32_t,_Bool &,int32_t,class TR_BitVector *,TR::SymbolReference *,_Bool),0,OMR,CodeGenerator
evaluate,evaluate(TR::Node *),1,OMR,CodeGenerator
evaluateChildrenWithMultipleRefCount,evaluateChildrenWithMultipleRefCount(TR::Node *),1,OMR,CodeGenerator
excludeInvariantsFromGRAEnabled,excludeInvariantsFromGRAEnabled(),1,OMR,CodeGenerator
expandExponentiation,expandExponentiation(),1,OMR,CodeGenerator
fe,fe(),1,OMR,CodeGenerator
findAndFixCommonedReferences,findAndFixCommonedReferences(),1,OMR,CodeGenerator
findBetterSpillPlacement,findBetterSpillPlacement(TR::Register *,int32_t),1,OMR,X86::CodeGenerator
findCoalescenceForRegisterCopy,findCoalescenceForRegisterCopy(TR::Node *,class TR_RegisterCandidate *,_Bool *),1,OMR,CodeGenerator
findCoalescenceRegisterForParameter,findCoalescenceRegisterForParameter(TR::Node *,class TR_RegisterCandidate *,uint32_t,_Bool *),1,OMR,CodeGenerator
findCommonedReferences,findCommonedReferences(TR::Node *,TR::TreeTop *),1,OMR,CodeGenerator
findOrCreate16ByteConstant,findOrCreate16ByteConstant(TR::Node *,void *),1,OMR,X86::CodeGenerator
findOrCreate2ByteConstant,findOrCreate2ByteConstant(TR::Node *,int16_t),1,OMR,X86::CodeGenerator
findOrCreate4ByteConstant,findOrCreate4ByteConstant(TR::Node *,int32_t),1,OMR,X86::CodeGenerator
findOrCreate8ByteConstant,findOrCreate8ByteConstant(TR::Node *,int64_t),1,OMR,X86::CodeGenerator
findOrCreateConstant,findOrCreateConstant(TR::Node *,void *,uint8_t),1,OMR,X86::CodeGenerator
findOrCreateCurrentTimeMillisTempSymRef,findOrCreateCurrentTimeMillisTempSymRef(),1,OMR,X86::CodeGenerator
findOutlinedInstructionsFromLabel,findOutlinedInstructionsFromLabel(TR::LabelSymbol *),1,OMR,X86::CodeGenerator
findOutlinedInstructionsFromLabelForShrinkWrapping,findOutlinedInstructionsFromLabelForShrinkWrapping(TR::LabelSymbol *),1,OMR,X86::CodeGenerator
findOutlinedInstructionsFromMergeLabel,findOutlinedInstructionsFromMergeLabel(TR::LabelSymbol *),1,OMR,X86::CodeGenerator
findUsedCandidate,findUsedCandidate(TR::Node *,class TR_RegisterCandidate *,class TR_BitVector *),1,OMR,CodeGenerator
floatClobberEvaluate,floatClobberEvaluate(TR::Node *),1,OMR,X86::CodeGenerator
fprCount,fprCount(TR::DataType),1,OMR,CodeGenerator
freeSpill,freeSpill(class TR_BackingStore *,int32_t,int32_t),1,OMR,CodeGenerator
freeUnlatchedRegisters,freeUnlatchedRegisters(),1,OMR,CodeGenerator
genLiveRealRegisters,genLiveRealRegisters(enum TR_RegisterKinds,TR_RegisterMask),1,OMR,CodeGenerator
genStoreForSymListArray,genStoreForSymListArray(TR_Array<List<TR::SymbolReference> > *,class TR_OSRMethodData *,TR::TreeTop *&,TR::Node *,TR::Node *,TR::Node *,TR::Node *,int32_t &),1,OMR,CodeGenerator
generateCatchBlockBBStartPrologue,generateCatchBlockBBStartPrologue(TR::Node *,TR::Instruction *),1,OMR,CodeGenerator
generateCode,generateCode(),1,OMR,CodeGenerator
generateCodeFromIL,generateCodeFromIL(),1,OMR,CodeGenerator
generateDebugCounter,generateDebugCounter(const char *,TR::RegisterDependencyConditions &,int32_t,int8_t,int32_t,TR::Instruction *),1,OMR,CodeGenerator
generateDebugCounter,generateDebugCounter(const char *,TR::Register *,int8_t),0,OMR,CodeGenerator
generateDebugCounter,generateDebugCounter(TR::Instruction *,const char *,TR::Register *,int8_t,int32_t),0,OMR,CodeGenerator
generateDebugCounter,generateDebugCounter(const char *,class TR_ScratchRegisterManager &,int32_t,int8_t,int32_t,TR::Instruction *),0,OMR,CodeGenerator
generateDebugCounter,generateDebugCounter(const char *,TR::Register *,class TR_ScratchRegisterManager &,int8_t,int32_t,TR::Instruction *),0,OMR,CodeGenerator
generateDebugCounter,generateDebugCounter(TR::Instruction *,const char *,int32_t,int8_t,int32_t),0,OMR,CodeGenerator
generateDebugCounter,generateDebugCounter(const char *,TR::Register *,TR::RegisterDependencyConditions &,int8_t,int32_t,TR::Instruction *),0,OMR,CodeGenerator
generateDebugCounter,generateDebugCounter(const char *,int32_t,int8_t),0,OMR,CodeGenerator
generateDebugCounterBump,generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,class TR_ScratchRegisterManager &),1,OMR,CodeGenerator
generateDebugCounterBump,generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,TR::Register *,TR::RegisterDependencyConditions *),0,OMR,CodeGenerator
generateDebugCounterBump,generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,class TR_ScratchRegisterManager &),0,OMR,CodeGenerator
generateDebugCounterBump,generateDebugCounterBump(TR::Instruction *,TR::DebugCounterBase *,int32_t,TR::RegisterDependencyConditions *),0,OMR,CodeGenerator
generateMasmListingSyntax,generateMasmListingSyntax(),1,OMR,X86::CodeGenerator
generateNop,generateNop(TR::Node *,TR::Instruction *,enum TR_NOPKind),1,OMR,CodeGenerator
generatePadding,generatePadding(uint8_t *,intptrj_t,TR::Instruction *,enum TR_PaddingProperties,_Bool),1,OMR,X86::CodeGenerator
generateScratchRegisterManager,generateScratchRegisterManager(int32_t),1,OMR,X86::CodeGenerator
generateSwitchToInterpreterPrePrologue,generateSwitchToInterpreterPrePrologue(TR::Instruction *,uint8_t,uint8_t),1,OMR,X86::CodeGenerator
getAOTRelocationList,getAOTRelocationList(),1,OMR,CodeGenerator
getAccessStaticsIndirectly,getAccessStaticsIndirectly(),1,OMR,CodeGenerator
getAccumulatedInstructionLengthError,getAccumulatedInstructionLengthError(),1,OMR,CodeGenerator
getAheadOfTimeCompile,getAheadOfTimeCompile(),1,OMR,CodeGenerator
getAllSpillList,getAllSpillList(),1,OMR,CodeGenerator
getAssignmentDirection,getAssignmentDirection(),1,OMR,X86::CodeGenerator
getBinaryBufferCursor,getBinaryBufferCursor(),1,OMR,CodeGenerator
getBinaryBufferLength,getBinaryBufferLength(),1,OMR,CodeGenerator
getBinaryBufferStart,getBinaryBufferStart(),1,OMR,CodeGenerator
getBlocksWithCalls,getBlocksWithCalls(),1,OMR,CodeGenerator
getBreakPointList,getBreakPointList(),1,OMR,CodeGenerator
getClobberingInstructions,getClobberingInstructions(),1,OMR,X86::CodeGenerator
getCodeCache,getCodeCache(),1,OMR,CodeGenerator
getCodeEnd,getCodeEnd(),1,OMR,CodeGenerator
getCodeGeneratorPhase,getCodeGeneratorPhase(),1,OMR,CodeGenerator
getCodeLength,getCodeLength(),1,OMR,CodeGenerator
getCodeStart,getCodeStart(),1,OMR,CodeGenerator
getColdCodeLength,getColdCodeLength(),1,OMR,CodeGenerator
getColdCodeStart,getColdCodeStart(),1,OMR,CodeGenerator
getCollectedSpillList,getCollectedSpillList(),1,OMR,CodeGenerator
getCurrentBlock,getCurrentBlock(),1,OMR,CodeGenerator
getCurrentBlockIndex,getCurrentBlockIndex(),1,OMR,CodeGenerator
getCurrentEvaluationBlock,getCurrentEvaluationBlock(),1,OMR,CodeGenerator
getCurrentEvaluationTreeTop,getCurrentEvaluationTreeTop(),1,OMR,CodeGenerator
getCurrentPathDepth,getCurrentPathDepth(),1,OMR,CodeGenerator
getDataTypeFromSymbolMap,getDataTypeFromSymbolMap(TR::Symbol *),1,OMR,CodeGenerator
getDebug,getDebug(),1,OMR,CodeGenerator
getDependentDiscardableRegisters,getDependentDiscardableRegisters(),1,OMR,X86::CodeGenerator
getDisableFpGRA,getDisableFpGRA(),1,OMR,CodeGenerator
getDisableLongGRA,getDisableLongGRA(),1,OMR,CodeGenerator
getDisableNullCheckOfArrayLength,getDisableNullCheckOfArrayLength(),1,OMR,CodeGenerator
getDoubleWordConversionTemp,getDoubleWordConversionTemp(),1,OMR,X86::CodeGenerator
getEnableRegisterUsageTracking,getEnableRegisterUsageTracking(),1,OMR,CodeGenerator
getEnforceStoreOrder,getEnforceStoreOrder(),1,OMR,CodeGenerator
getEstimatedColdLength,getEstimatedColdLength(),1,OMR,CodeGenerator
getEstimatedMethodLength,getEstimatedMethodLength(),1,OMR,CodeGenerator
getEstimatedSnippetStart,getEstimatedSnippetStart(),1,OMR,CodeGenerator
getEstimatedWarmLength,getEstimatedWarmLength(),1,OMR,CodeGenerator
getEvaluationPriority,getEvaluationPriority(TR::Node *),1,OMR,CodeGenerator
getExtendedToInt64GlobalRegisters,getExtendedToInt64GlobalRegisters(),1,OMR,CodeGenerator
getFPRegisterIterator,getFPRegisterIterator(),1,OMR,CodeGenerator
getFirstBit,getFirstBit(class TR_BitVector &),1,OMR,CodeGenerator
getFirstGlobalAR,getFirstGlobalAR(),1,OMR,CodeGenerator
getFirstGlobalFPR,getFirstGlobalFPR(),1,OMR,CodeGenerator
getFirstGlobalGPR,getFirstGlobalGPR(),1,OMR,CodeGenerator
getFirstGlobalHPR,getFirstGlobalHPR(),1,OMR,CodeGenerator
getFirstGlobalVRF,getFirstGlobalVRF(),1,OMR,CodeGenerator
getFirstOverlappedGlobalFPR,getFirstOverlappedGlobalFPR(),1,OMR,CodeGenerator
getFirstOverlappedGlobalVRF,getFirstOverlappedGlobalVRF(),1,OMR,CodeGenerator
getFirstTimeLiveOOLRegisterList,getFirstTimeLiveOOLRegisterList(),1,OMR,CodeGenerator
getFrameRegister,getFrameRegister(),1,OMR,X86::CodeGenerator
getFrameSizeInBytes,getFrameSizeInBytes(),1,OMR,CodeGenerator
getGPRegisterIterator,getGPRegisterIterator(),1,OMR,CodeGenerator
getGRACompleted,getGRACompleted(),1,OMR,CodeGenerator
getGlobalFPRPartitionLimit,getGlobalFPRPartitionLimit(),1,OMR,CodeGenerator
getGlobalFPRsPreservedAcrossCalls,getGlobalFPRsPreservedAcrossCalls(),1,OMR,CodeGenerator
getGlobalGPRFromHPR,getGlobalGPRFromHPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
getGlobalGPRPartitionLimit,getGlobalGPRPartitionLimit(),1,OMR,CodeGenerator
getGlobalGPRsPreservedAcrossCalls,getGlobalGPRsPreservedAcrossCalls(),1,OMR,CodeGenerator
getGlobalHPRFromGPR,getGlobalHPRFromGPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
getGlobalRegister,getGlobalRegister(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
getGlobalRegisterNumber,getGlobalRegisterNumber(uint32_t),1,OMR,CodeGenerator
getGlobalRegisters,getGlobalRegisters(enum TR_SpillKinds,enum TR_LinkageConventions),1,OMR,CodeGenerator
getHasDoubleWordAlignedStack,getHasDoubleWordAlignedStack(),1,OMR,CodeGenerator
getHasResumableTrapHandler,getHasResumableTrapHandler(),1,OMR,CodeGenerator
getImplicitExceptionPoint,getImplicitExceptionPoint(),1,OMR,CodeGenerator
getInlinedGetCurrentThreadMethod,getInlinedGetCurrentThreadMethod(),1,OMR,CodeGenerator
getInstructionAtEndInternalControlFlow,getInstructionAtEndInternalControlFlow(),1,OMR,CodeGenerator
getInstructionPatchAlignmentBoundary,getInstructionPatchAlignmentBoundary(),1,OMR,X86::CodeGenerator
getInstructionToBePatched,getInstructionToBePatched(TR::Instruction *),1,OMR,CodeGenerator
getInternalPointerSpillFreeList,getInternalPointerSpillFreeList(),1,OMR,CodeGenerator
getInternalPtrMapBit,getInternalPtrMapBit(),1,OMR,CodeGenerator
getIsInOOLSection,getIsInOOLSection(),1,OMR,CodeGenerator
getIsInWarmCodeCache,getIsInWarmCodeCache(),1,OMR,CodeGenerator
getJNICallSites,getJNICallSites(),1,OMR,CodeGenerator
getJNILinkageCalleeCleanup,getJNILinkageCalleeCleanup(),1,OMR,CodeGenerator
getJitMethodEntryPaddingSize,getJitMethodEntryPaddingSize(),1,OMR,CodeGenerator
getLargestNegConstThatMustBeMaterialized,getLargestNegConstThatMustBeMaterialized(),1,OMR,X86::CodeGenerator
getLargestOutgoingArgSize,getLargestOutgoingArgSize(),1,OMR,CodeGenerator
getLastCatchAppendInstruction,getLastCatchAppendInstruction(),1,OMR,X86::CodeGenerator
getLastGlobalAR,getLastGlobalAR(),1,OMR,CodeGenerator
getLastGlobalFPR,getLastGlobalFPR(),1,OMR,CodeGenerator
getLastGlobalGPR,getLastGlobalGPR(),1,OMR,CodeGenerator
getLastGlobalHPR,getLastGlobalHPR(),1,OMR,CodeGenerator
getLastGlobalVRF,getLastGlobalVRF(),1,OMR,CodeGenerator
getLastOverlappedGlobalFPR,getLastOverlappedGlobalFPR(),1,OMR,CodeGenerator
getLastOverlappedGlobalVRF,getLastOverlappedGlobalVRF(),1,OMR,CodeGenerator
getLinkage,getLinkage(),1,OMR,CodeGenerator
getLinkage,getLinkage(enum TR_LinkageConventions),0,OMR,CodeGenerator
getLinkageGlobalRegisterNumber,getLinkageGlobalRegisterNumber(int8_t,TR::DataType),1,OMR,CodeGenerator
getLiveButMaybeUnreferencedLocals,getLiveButMaybeUnreferencedLocals(),1,OMR,CodeGenerator
getLiveDiscardableRegisters,getLiveDiscardableRegisters(),1,OMR,X86::CodeGenerator
getLiveLocals,getLiveLocals(),1,OMR,CodeGenerator
getLiveMonitors,getLiveMonitors(),1,OMR,CodeGenerator
getLiveRealRegisters,getLiveRealRegisters(enum TR_RegisterKinds),1,OMR,CodeGenerator
getLiveRegisters,getLiveRegisters(enum TR_RegisterKinds),1,OMR,CodeGenerator
getLocalsIG,getLocalsIG(),1,OMR,CodeGenerator
getLowestCommonCodePatchingAlignmentBoundary,getLowestCommonCodePatchingAlignmentBoundary(),1,OMR,X86::CodeGenerator
getLowestSavedRegister,getLowestSavedRegister(),1,OMR,CodeGenerator
getMappingAutomatics,getMappingAutomatics(),1,OMR,CodeGenerator
getMaxObjectSizeGuaranteedNotToOverflow,getMaxObjectSizeGuaranteedNotToOverflow(),1,OMR,CodeGenerator
getMaxPatchableInstructionLength,getMaxPatchableInstructionLength(),1,OMR,CodeGenerator
getMaximumNumberOfFPRsAllowedAcrossEdge,getMaximumNumberOfFPRsAllowedAcrossEdge(TR::Node *),1,OMR,CodeGenerator
getMaximumNumberOfGPRsAllowedAcrossEdge,getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Node *),1,OMR,CodeGenerator
getMaximumNumberOfGPRsAllowedAcrossEdge,getMaximumNumberOfGPRsAllowedAcrossEdge(TR::Block *),0,OMR,CodeGenerator
getMaximumNumberOfVRFsAllowedAcrossEdge,getMaximumNumberOfVRFsAllowedAcrossEdge(TR::Node *),1,OMR,CodeGenerator
getMaximumNumbersOfAssignableFPRs,getMaximumNumbersOfAssignableFPRs(),1,OMR,CodeGenerator
getMaximumNumbersOfAssignableGPRs,getMaximumNumbersOfAssignableGPRs(),1,OMR,CodeGenerator
getMaximumNumbersOfAssignableVRs,getMaximumNumbersOfAssignableVRs(),1,OMR,CodeGenerator
getMethodContainsBinaryCodedDecimal,getMethodContainsBinaryCodedDecimal(),1,OMR,CodeGenerator
getMethodMetaDataRegister,getMethodMetaDataRegister(),1,OMR,X86::CodeGenerator
getMethodModifiedByRA,getMethodModifiedByRA(),1,OMR,CodeGenerator
getMethodStackMap,getMethodStackMap(),1,OMR,CodeGenerator
getMinByteForLongCompareNarrower,getMinByteForLongCompareNarrower(),1,OMR,CodeGenerator
getMinShortForLongCompareNarrower,getMinShortForLongCompareNarrower(),1,OMR,CodeGenerator
getMinimumNumberOfNodesBetweenMonitorsForTLE,getMinimumNumberOfNodesBetweenMonitorsForTLE(),1,OMR,CodeGenerator
getMonClass,getMonClass(TR::Node *),1,OMR,CodeGenerator
getNanoTimeTemp,getNanoTimeTemp(),1,OMR,X86::CodeGenerator
getNextAvailableBlockIndex,getNextAvailableBlockIndex(),1,OMR,CodeGenerator
getNumberBytesReadInaccessible,getNumberBytesReadInaccessible(),1,OMR,CodeGenerator
getNumberBytesWriteInaccessible,getNumberBytesWriteInaccessible(),1,OMR,CodeGenerator
getNumberOfGlobalFPRs,getNumberOfGlobalFPRs(),1,OMR,CodeGenerator
getNumberOfGlobalGPRs,getNumberOfGlobalGPRs(),1,OMR,CodeGenerator
getNumberOfGlobalRegisters,getNumberOfGlobalRegisters(),1,OMR,CodeGenerator
getNumberOfGlobalVRFs,getNumberOfGlobalVRFs(),1,OMR,CodeGenerator
getNumberOfTemporaryRegistersUsedByCall,getNumberOfTemporaryRegistersUsedByCall(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,uint32_t &,uint32_t &,uint32_t &),1,OMR,CodeGenerator
getOptimizationPhaseIsComplete,getOptimizationPhaseIsComplete(),1,OMR,CodeGenerator
getOutlinedInstructionsList,getOutlinedInstructionsList(),1,OMR,X86::CodeGenerator
getOverlapOffsetBetweenAliasedGRNs,getOverlapOffsetBetweenAliasedGRNs(),1,OMR,CodeGenerator
getOverlappedAliasForGRN,getOverlappedAliasForGRN(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
getPicSlotCount,getPicSlotCount(),1,OMR,X86::CodeGenerator
getPreJitMethodEntrySize,getPreJitMethodEntrySize(),1,OMR,CodeGenerator
getPrePrologueSize,getPrePrologueSize(),1,OMR,CodeGenerator
getPreferredLoopUnrollFactor,getPreferredLoopUnrollFactor(),1,OMR,CodeGenerator
getPreservedRegsInPrologue,getPreservedRegsInPrologue(),1,OMR,CodeGenerator
getProperties,getProperties(),1,OMR,X86::CodeGenerator
getRealVMThreadRegister,getRealVMThreadRegister(),1,OMR,CodeGenerator
getReferencedRegisterList,getReferencedRegisterList(),1,OMR,CodeGenerator
getRegisterArray,getRegisterArray(),1,OMR,CodeGenerator
getRegisterMapInfoBitsMask,getRegisterMapInfoBitsMask(),1,OMR,CodeGenerator
getRegisterSaveDescription,getRegisterSaveDescription(),1,OMR,CodeGenerator
getRelocationList,getRelocationList(),1,OMR,CodeGenerator
getReturnTypeInfoInstruction,getReturnTypeInfoInstruction(),1,OMR,X86::CodeGenerator
getShrinkWrappingDone,getShrinkWrappingDone(),1,OMR,CodeGenerator
getSizeOfCombinedBuffer,getSizeOfCombinedBuffer(),1,OMR,CodeGenerator
getSmallestPosConstThatMustBeMaterialized,getSmallestPosConstThatMustBeMaterialized(),1,OMR,X86::CodeGenerator
getSnippetList,getSnippetList(),1,OMR,CodeGenerator
getSpill16FreeList,getSpill16FreeList(),1,OMR,CodeGenerator
getSpill4FreeList,getSpill4FreeList(),1,OMR,CodeGenerator
getSpill8FreeList,getSpill8FreeList(),1,OMR,CodeGenerator
getSpilledIntRegisters,getSpilledIntRegisters(),1,OMR,X86::CodeGenerator
getSpilledRegisterList,getSpilledRegisterList(),1,OMR,CodeGenerator
getStackAtlas,getStackAtlas(),1,OMR,CodeGenerator
getSupportedLiveRegisterKinds,getSupportedLiveRegisterKinds(),1,OMR,CodeGenerator
getSupportsAlignedAccessOnly,getSupportsAlignedAccessOnly(),1,OMR,CodeGenerator
getSupportsArrayCmp,getSupportsArrayCmp(),1,OMR,CodeGenerator
getSupportsArrayCmpSign,getSupportsArrayCmpSign(),1,OMR,CodeGenerator
getSupportsArraySet,getSupportsArraySet(),1,OMR,CodeGenerator
getSupportsArraySetToZero,getSupportsArraySetToZero(),1,OMR,CodeGenerator
getSupportsArrayTranslateAndTest,getSupportsArrayTranslateAndTest(),1,OMR,CodeGenerator
getSupportsArrayTranslateTROT,getSupportsArrayTranslateTROT(),1,OMR,CodeGenerator
getSupportsArrayTranslateTROTNoBreak,getSupportsArrayTranslateTROTNoBreak(),1,OMR,CodeGenerator
getSupportsArrayTranslateTRTO,getSupportsArrayTranslateTRTO(),1,OMR,CodeGenerator
getSupportsArrayTranslateTRTO255,getSupportsArrayTranslateTRTO255(),1,OMR,CodeGenerator
getSupportsArrayTranslateTRxx,getSupportsArrayTranslateTRxx(),1,OMR,CodeGenerator
getSupportsAtomicLoadAndAdd,getSupportsAtomicLoadAndAdd(),1,OMR,CodeGenerator
getSupportsAutoSIMD,getSupportsAutoSIMD(),1,OMR,CodeGenerator
getSupportsBCDToDFPReduction,getSupportsBCDToDFPReduction(),1,OMR,CodeGenerator
getSupportsBDLLHardwareOverflowCheck,getSupportsBDLLHardwareOverflowCheck(),1,OMR,CodeGenerator
getSupportsBigDecimalLongLookasideVersioning,getSupportsBigDecimalLongLookasideVersioning(),1,OMR,CodeGenerator
getSupportsBitOpCodes,getSupportsBitOpCodes(),1,OMR,CodeGenerator
getSupportsCompactedLocals,getSupportsCompactedLocals(),1,OMR,CodeGenerator
getSupportsConstantOffsetInAddressing,getSupportsConstantOffsetInAddressing(int64_t),1,OMR,CodeGenerator
getSupportsConstantOffsetInAddressing,getSupportsConstantOffsetInAddressing(),0,OMR,CodeGenerator
getSupportsCurrentTimeMaxPrecision,getSupportsCurrentTimeMaxPrecision(),1,OMR,CodeGenerator
getSupportsDirectJNICalls,getSupportsDirectJNICalls(),1,OMR,CodeGenerator
getSupportsDivCheck,getSupportsDivCheck(),1,OMR,CodeGenerator
getSupportsDoubleWordCAS,getSupportsDoubleWordCAS(),1,OMR,CodeGenerator
getSupportsDoubleWordSet,getSupportsDoubleWordSet(),1,OMR,CodeGenerator
getSupportsEfficientNarrowIntComputation,getSupportsEfficientNarrowIntComputation(),1,OMR,CodeGenerator
getSupportsEfficientNarrowUnsignedIntComputation,getSupportsEfficientNarrowUnsignedIntComputation(),1,OMR,CodeGenerator
getSupportsEncodeUtf16BigWithSurrogateTest,getSupportsEncodeUtf16BigWithSurrogateTest(),1,OMR,CodeGenerator
getSupportsEncodeUtf16LittleWithSurrogateTest,getSupportsEncodeUtf16LittleWithSurrogateTest(),1,OMR,CodeGenerator
getSupportsFastCTM,getSupportsFastCTM(),1,OMR,CodeGenerator
getSupportsGlRegDepOnFirstBlock,getSupportsGlRegDepOnFirstBlock(),1,OMR,CodeGenerator
getSupportsGlRegDeps,getSupportsGlRegDeps(),1,OMR,CodeGenerator
getSupportsIDivAndIRemWithThreeChildren,getSupportsIDivAndIRemWithThreeChildren(),1,OMR,CodeGenerator
getSupportsIbyteswap,getSupportsIbyteswap(),1,OMR,CodeGenerator
getSupportsInlinedAtomicLongVolatiles,getSupportsInlinedAtomicLongVolatiles(),1,OMR,CodeGenerator
getSupportsInliningOfTypeCoersionMethods,getSupportsInliningOfTypeCoersionMethods(),1,OMR,CodeGenerator
getSupportsJavaFloatSemantics,getSupportsJavaFloatSemantics(),1,OMR,CodeGenerator
getSupportsLDivAndLRemWithThreeChildren,getSupportsLDivAndLRemWithThreeChildren(),1,OMR,CodeGenerator
getSupportsLM,getSupportsLM(),1,OMR,CodeGenerator
getSupportsLoweringConstIDiv,getSupportsLoweringConstIDiv(),1,OMR,CodeGenerator
getSupportsLoweringConstLDiv,getSupportsLoweringConstLDiv(),1,OMR,CodeGenerator
getSupportsLoweringConstLDivPower2,getSupportsLoweringConstLDivPower2(),1,OMR,CodeGenerator
getSupportsMergedAllocations,getSupportsMergedAllocations(),1,OMR,CodeGenerator
getSupportsNewInstanceImplOpt,getSupportsNewInstanceImplOpt(),1,OMR,CodeGenerator
getSupportsNewObjectAlignment,getSupportsNewObjectAlignment(),1,OMR,CodeGenerator
getSupportsOpCodeForAutoSIMD,getSupportsOpCodeForAutoSIMD(TR::ILOpCode,TR::DataType),1,OMR,CodeGenerator
getSupportsPartialInlineOfMethodHooks,getSupportsPartialInlineOfMethodHooks(),1,OMR,CodeGenerator
getSupportsPostProcessArrayCopy,getSupportsPostProcessArrayCopy(),1,OMR,CodeGenerator
getSupportsPrimitiveArrayCopy,getSupportsPrimitiveArrayCopy(),1,OMR,CodeGenerator
getSupportsProfiledInlining,getSupportsProfiledInlining(),1,OMR,CodeGenerator
getSupportsReadOnlyLocks,getSupportsReadOnlyLocks(),1,OMR,CodeGenerator
getSupportsReferenceArrayCopy,getSupportsReferenceArrayCopy(),1,OMR,CodeGenerator
getSupportsReverseLoadAndStore,getSupportsReverseLoadAndStore(),1,OMR,CodeGenerator
getSupportsRuntimeInstrumentation,getSupportsRuntimeInstrumentation(),1,OMR,CodeGenerator
getSupportsScaledIndexAddressing,getSupportsScaledIndexAddressing(),1,OMR,CodeGenerator
getSupportsSearchCharString,getSupportsSearchCharString(),1,OMR,CodeGenerator
getSupportsShrinkWrapping,getSupportsShrinkWrapping(),1,OMR,CodeGenerator
getSupportsStackAllocationOfArraylets,getSupportsStackAllocationOfArraylets(),1,OMR,CodeGenerator
getSupportsTLE,getSupportsTLE(),1,OMR,CodeGenerator
getSupportsTM,getSupportsTM(),1,OMR,CodeGenerator
getSupportsTMDoubleWordCASORSet,getSupportsTMDoubleWordCASORSet(),1,OMR,CodeGenerator
getSupportsTMHashMapAndLinkedQueue,getSupportsTMHashMapAndLinkedQueue(),1,OMR,CodeGenerator
getSupportsTenuredObjectAlignment,getSupportsTenuredObjectAlignment(),1,OMR,CodeGenerator
getSupportsTestCharComparisonControl,getSupportsTestCharComparisonControl(),1,OMR,CodeGenerator
getSupportsTestUnderMask,getSupportsTestUnderMask(),1,OMR,CodeGenerator
getSupportsTranslateAndTestCharString,getSupportsTranslateAndTestCharString(),1,OMR,CodeGenerator
getSupportsVMThreadGRA,getSupportsVMThreadGRA(),1,OMR,CodeGenerator
getSupportsVectorRegisters,getSupportsVectorRegisters(),1,OMR,CodeGenerator
getSupportsVirtualGuardNOPing,getSupportsVirtualGuardNOPing(),1,OMR,CodeGenerator
getSwitchToInterpreterLabel,getSwitchToInterpreterLabel(),1,OMR,X86::CodeGenerator
getSymRef,getSymRef(enum TR_RuntimeHelper),1,OMR,CodeGenerator
getSymRefTab,getSymRefTab(),1,OMR,CodeGenerator
getTraceRAOption,getTraceRAOption(uint32_t),1,OMR,CodeGenerator
getTreeEvaluatorTable,getTreeEvaluatorTable(),1,OMR,CodeGenerator
getUseNonLinearRegisterAssigner,getUseNonLinearRegisterAssigner(),1,OMR,CodeGenerator
getUsesLoadStoreMultiple,getUsesLoadStoreMultiple(),1,OMR,CodeGenerator
getVMThreadGlobalRegisterNumber,getVMThreadGlobalRegisterNumber(),1,OMR,CodeGenerator
getVMThreadLiveCount,getVMThreadLiveCount(),1,OMR,CodeGenerator
getVMThreadRegister,getVMThreadRegister(),1,OMR,CodeGenerator
getVMThreadRequired,getVMThreadRequired(),1,OMR,CodeGenerator
getVMThreadSpillInstruction,getVMThreadSpillInstruction(),1,OMR,CodeGenerator
getVirtualGuardForPatching,getVirtualGuardForPatching(TR::Instruction *),1,OMR,CodeGenerator
getWarmCodeEnd,getWarmCodeEnd(),1,OMR,CodeGenerator
getWarmCodeLength,getWarmCodeLength(),1,OMR,CodeGenerator
getWordConversionTemp,getWordConversionTemp(),1,OMR,X86::CodeGenerator
getX86ProcessorInfo,getX86ProcessorInfo(),1,OMR,X86::CodeGenerator
getX87RegisterIterator,getX87RegisterIterator(),1,OMR,X86::CodeGenerator
getXMMDoubleLoadOpCode,getXMMDoubleLoadOpCode(),1,OMR,X86::CodeGenerator
gprClobberEvaluate,gprClobberEvaluate(TR::Node *,enum TR_X86OpCodes),1,OMR,X86::CodeGenerator
gprCount,gprCount(TR::DataType,int32_t),1,OMR,CodeGenerator
hasCCCarry,hasCCCarry(),1,OMR,CodeGenerator
hasCCCompare,hasCCCompare(),1,OMR,CodeGenerator
hasCCInfo,hasCCInfo(),1,OMR,CodeGenerator
hasCCOverflow,hasCCOverflow(),1,OMR,CodeGenerator
hasCCSigned,hasCCSigned(),1,OMR,CodeGenerator
hasCCZero,hasCCZero(),1,OMR,CodeGenerator
hasComplexAddressingMode,hasComplexAddressingMode(),1,OMR,CodeGenerator
hasDataSnippets,hasDataSnippets(),1,OMR,CodeGenerator
hasDeferredSplits,hasDeferredSplits(),1,OMR,X86::CodeGenerator
hasGlobalVRF,hasGlobalVRF(),1,OMR,CodeGenerator
hasRegisterPressureInfo,hasRegisterPressureInfo(),1,OMR,CodeGenerator
hasTMEvaluator,hasTMEvaluator(),1,OMR,CodeGenerator
hasTargetAddressSnippets,hasTargetAddressSnippets(),1,OMR,CodeGenerator
hiValue,hiValue(intptrj_t),1,OMR,CodeGenerator
identifyUnneededByteConvNodes,identifyUnneededByteConvNodes(TR::Node *,TR::TreeTop *,vcount_t,TR::DataType),1,OMR,CodeGenerator
identifyUnneededByteConvNodes,identifyUnneededByteConvNodes(),0,OMR,CodeGenerator
ilOpCodeIsSupported,ilOpCodeIsSupported(TR::ILOpCodes),1,OMR,CodeGenerator
incInternalControlFlowNestingDepth,incInternalControlFlowNestingDepth(),1,OMR,CodeGenerator
incNumRematerializedAddresses,incNumRematerializedAddresses(),1,OMR,CodeGenerator
incNumRematerializedConstants,incNumRematerializedConstants(),1,OMR,CodeGenerator
incNumRematerializedIndirects,incNumRematerializedIndirects(),1,OMR,CodeGenerator
incNumRematerializedLocals,incNumRematerializedLocals(),1,OMR,CodeGenerator
incNumRematerializedStatics,incNumRematerializedStatics(),1,OMR,CodeGenerator
incNumRematerializedXMMRs,incNumRematerializedXMMRs(),1,OMR,CodeGenerator
incNumSpilledRegisters,incNumSpilledRegisters(),1,OMR,CodeGenerator
incOutOfLineColdPathNestedDepth,incOutOfLineColdPathNestedDepth(),1,OMR,CodeGenerator
incPicSlotCountBy,incPicSlotCountBy(int32_t),1,OMR,X86::CodeGenerator
incRefCountForOpaquePseudoRegister,incRefCountForOpaquePseudoRegister(TR::Node *,TR::CodeGenerator *,TR::Compilation *),1,OMR,CodeGenerator
incReferenceCount,incReferenceCount(TR::Node *),1,OMR,CodeGenerator
incVMThreadLiveCount,incVMThreadLiveCount(),1,OMR,CodeGenerator
incrementEventCounter,incrementEventCounter(TR::Node *,TR::SymbolReference *,TR::CodeGenerator *),1,OMR,CodeGenerator
initLinkageToGlobalRegisterMap,initLinkageToGlobalRegisterMap(),1,OMR,X86::AMD64::CodeGenerator
initialize,initialize(TR::Compilation *),1,OMR,X86::CodeGenerator
initializeLinkage,initializeLinkage(),1,OMR,CodeGenerator
initializeRegisterPressureSimulator,initializeRegisterPressureSimulator(),1,OMR,CodeGenerator
initializeVFPState,initializeVFPState(TR::class RealRegister::RegNum,int32_t),1,OMR,X86::CodeGenerator
inlineDirectCall,inlineDirectCall(TR::Node *,TR::Register *&),1,OMR,CodeGenerator
insertDebugCounters,insertDebugCounters(),1,OMR,CodeGenerator
insideInternalControlFlow,insideInternalControlFlow(),1,OMR,CodeGenerator
intClobberEvaluate,intClobberEvaluate(TR::Node *),1,OMR,X86::CodeGenerator
internalControlFlowNestingDepth,internalControlFlowNestingDepth(),1,OMR,CodeGenerator
internalControlFlowSafeNestingDepth,internalControlFlowSafeNestingDepth(),1,OMR,CodeGenerator
internalPointerSupportImplemented,internalPointerSupportImplemented(),1,OMR,CodeGenerator
is8BitGlobalGPR,is8BitGlobalGPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
isAddressScaleIndexSupported,isAddressScaleIndexSupported(int32_t),1,OMR,CodeGenerator
isAliasedGRN,isAliasedGRN(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
isAlignmentInstruction,isAlignmentInstruction(TR::Instruction *),1,OMR,CodeGenerator
isBranchInstruction,isBranchInstruction(TR::Instruction *),1,OMR,CodeGenerator
isCandidateLoad,isCandidateLoad(TR::Node *,TR::SymbolReference *),1,OMR,CodeGenerator
isCandidateLoad,isCandidateLoad(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),0,OMR,CodeGenerator
isFenceInstruction,isFenceInstruction(TR::Instruction *),1,OMR,CodeGenerator
isFreeSpillListLocked,isFreeSpillListLocked(),1,OMR,CodeGenerator
isGlobalFPR,isGlobalFPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
isGlobalGPR,isGlobalGPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
isGlobalHPR,isGlobalHPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
isGlobalRegisterAvailable,isGlobalRegisterAvailable(TR_GlobalRegisterNumber,TR::DataType),1,OMR,CodeGenerator
isGlobalVRF,isGlobalVRF(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
isInMemoryInstructionCandidate,isInMemoryInstructionCandidate(TR::Node *),1,OMR,CodeGenerator
isInternalControlFlowReg,isInternalControlFlowReg(TR::Register *),1,OMR,CodeGenerator
isLabelInstruction,isLabelInstruction(TR::Instruction *),1,OMR,CodeGenerator
isLeafMethod,isLeafMethod(),1,OMR,CodeGenerator
isLiteralPoolOnDemandOn,isLiteralPoolOnDemandOn(),1,OMR,CodeGenerator
isLoadAlreadyAssignedOnEntry,isLoadAlreadyAssignedOnEntry(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
isMaterialized,isMaterialized(TR::Node *),1,OMR,CodeGenerator
isMemoryUpdate,isMemoryUpdate(TR::Node *),1,OMR,CodeGenerator
isMethodInAtomicLongGroup,isMethodInAtomicLongGroup(TR::RecognizedMethod),1,OMR,CodeGenerator
isObjectOfSizeWorthAligning,isObjectOfSizeWorthAligning(uint32_t),1,OMR,CodeGenerator
isOutOfLineColdPath,isOutOfLineColdPath(),1,OMR,CodeGenerator
isOutOfLineHotPath,isOutOfLineHotPath(),1,OMR,CodeGenerator
isPreservedRegister,isPreservedRegister(int32_t),1,OMR,CodeGenerator
isRegisterClobberable,isRegisterClobberable(TR::Register *,uint16_t),1,OMR,CodeGenerator
isReturnInstruction,isReturnInstruction(TR::Instruction *),1,OMR,CodeGenerator
isRotateAndMask,isRotateAndMask(TR::Node *),1,OMR,CodeGenerator
isSnippetMatched,isSnippetMatched(TR::Snippet *,int32_t,TR::SymbolReference *),1,OMR,CodeGenerator
isSupportedAdd,isSupportedAdd(TR::Node *),1,OMR,CodeGenerator
isTargetSnippetOrOutOfLine,isTargetSnippetOrOutOfLine(TR::Instruction *,TR::Instruction **,TR::Instruction **),1,OMR,CodeGenerator
jettisonAllSpills,jettisonAllSpills(),1,OMR,CodeGenerator
jitAdd32BitPicToPatchOnClassRedefinition,jitAdd32BitPicToPatchOnClassRedefinition(void *,void *,_Bool),1,OMR,CodeGenerator
jitAdd32BitPicToPatchOnClassUnload,jitAdd32BitPicToPatchOnClassUnload(void *,void *),1,OMR,CodeGenerator
jitAddPicToPatchOnClassRedefinition,jitAddPicToPatchOnClassRedefinition(void *,void *,_Bool),1,OMR,CodeGenerator
jitAddPicToPatchOnClassUnload,jitAddPicToPatchOnClassUnload(void *,void *),1,OMR,CodeGenerator
jitAddUnresolvedAddressMaterializationToPatchOnClassRedefinition,jitAddUnresolvedAddressMaterializationToPatchOnClassRedefinition(void *),1,OMR,CodeGenerator
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,CodeGenerator
jitPersistentFree,jitPersistentFree(void *),1,OMR,CodeGenerator
killLiveRealRegisters,killLiveRealRegisters(enum TR_RegisterKinds,TR_RegisterMask),1,OMR,CodeGenerator
lastInstructionBeforeCurrentEvaluationTreeTop,lastInstructionBeforeCurrentEvaluationTreeTop(),1,OMR,CodeGenerator
linkage,linkage(),1,OMR,CodeGenerator
lockFreeSpillList,lockFreeSpillList(),1,OMR,CodeGenerator
longClobberEvaluate,longClobberEvaluate(TR::Node *),1,OMR,X86::CodeGenerator
lookUpSnippet,lookUpSnippet(int32_t,TR::SymbolReference *),1,OMR,CodeGenerator
lowerTree,lowerTree(TR::Node *,TR::TreeTop *),1,OMR,CodeGenerator
lowerTreeIfNeeded,lowerTreeIfNeeded(TR::Node *,int32_t,TR::Node *,TR::TreeTop *),1,OMR,CodeGenerator
lowerTrees,lowerTrees(),1,OMR,CodeGenerator
lowerTreesPostChildrenVisit,lowerTreesPostChildrenVisit(TR::Node *,TR::TreeTop *,vcount_t),1,OMR,CodeGenerator
lowerTreesPostTreeTopVisit,lowerTreesPostTreeTopVisit(TR::TreeTop *,vcount_t),1,OMR,CodeGenerator
lowerTreesPreChildrenVisit,lowerTreesPreChildrenVisit(TR::Node *,TR::TreeTop *,vcount_t),1,OMR,CodeGenerator
lowerTreesPreTreeTopVisit,lowerTreesPreTreeTopVisit(TR::TreeTop *,vcount_t),1,OMR,CodeGenerator
lowerTreesPropagateBlockToNode,lowerTreesPropagateBlockToNode(TR::Node *),1,OMR,CodeGenerator
lowerTreesWalk,lowerTreesWalk(TR::Node *,TR::TreeTop *,vcount_t),1,OMR,CodeGenerator
machine,machine(),1,OMR,CodeGenerator
mapAutosTo8ByteSlots,mapAutosTo8ByteSlots(),1,OMR,X86::CodeGenerator
materializesHeapBase,materializesHeapBase(),1,OMR,CodeGenerator
materializesLargeConstants,materializesLargeConstants(),1,OMR,CodeGenerator
methodEnterExitTracingEnabled,methodEnterExitTracingEnabled(),1,OMR,X86::CodeGenerator
mulDecompositionCostIsJustified,mulDecompositionCostIsJustified(int,char [],char [],int64_t),1,OMR,CodeGenerator
multiplyIsDestructive,multiplyIsDestructive(),1,OMR,CodeGenerator
mustGenerateSwitchToInterpreterPrePrologue,mustGenerateSwitchToInterpreterPrePrologue(),1,OMR,CodeGenerator
needClassAndMethodPointerRelocations,needClassAndMethodPointerRelocations(),1,OMR,CodeGenerator
needGuardSitesEvenWhenGuardRemoved,needGuardSitesEvenWhenGuardRemoved(),1,OMR,CodeGenerator
needRelocationsForStatics,needRelocationsForStatics(),1,OMR,CodeGenerator
needSpillTemp,needSpillTemp(class TR_LiveReference *,TR::Node *,TR::TreeTop *),1,OMR,CodeGenerator
needToAvoidCommoningInGRA,needToAvoidCommoningInGRA(),1,OMR,CodeGenerator
needsNormalizationBeforeShifts,needsNormalizationBeforeShifts(),1,OMR,CodeGenerator
nodeCanBeFoldedIntoMemref,nodeCanBeFoldedIntoMemref(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
nodeIsFoldableMemOperand,nodeIsFoldableMemOperand(TR::Node *,TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,X86::CodeGenerator
nodeMatches,nodeMatches(TR::Node *,TR::Node *,_Bool),1,OMR,CodeGenerator
nodeMayCauseException,nodeMayCauseException(TR::Node *),1,OMR,CodeGenerator
nodeResultARCount,nodeResultARCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
nodeResultConsumesNoRegisters,nodeResultConsumesNoRegisters(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
nodeResultFPRCount,nodeResultFPRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
nodeResultGPRCount,nodeResultGPRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
nodeResultSSRCount,nodeResultSSRCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
nodeResultVRFCount,nodeResultVRFCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
nodeWillBeRematerialized,nodeWillBeRematerialized(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
nopsAlsoProcessedByRelocations,nopsAlsoProcessedByRelocations(),1,OMR,X86::CodeGenerator
opCodeIsNoOp,opCodeIsNoOp(TR::ILOpCode &),1,OMR,CodeGenerator
opCodeIsNoOpOnThisPlatform,opCodeIsNoOpOnThisPlatform(TR::ILOpCode &),1,OMR,CodeGenerator
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,CodeGenerator
operator delete,operator delete(void *,TR::Region &),0,OMR,CodeGenerator
operator delete,operator delete(void *,size_t),0,OMR,CodeGenerator
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,CodeGenerator
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,CodeGenerator
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,CodeGenerator
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,CodeGenerator
operator delete[],operator delete[](void *,TR::Region &),0,OMR,CodeGenerator
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,CodeGenerator
operator new,operator new(size_t,class TR_PersistentMemory *),1,OMR,CodeGenerator
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,CodeGenerator
operator new,operator new(size_t,TR::Region &),0,OMR,CodeGenerator
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,CodeGenerator
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,CodeGenerator
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,CodeGenerator
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,CodeGenerator
operator new[],operator new[](size_t,TR::Region &),1,OMR,CodeGenerator
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,CodeGenerator
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,CodeGenerator
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,CodeGenerator
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,CodeGenerator
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,CodeGenerator
operator=,operator=(class OMR::CodeGenerator &&),1,OMR,CodeGenerator
operator=,operator=(const class OMR::CodeGenerator &),0,OMR,CodeGenerator
operator=,operator=(class OMR::X86::CodeGenerator &&),0,OMR,X86::CodeGenerator
operator=,operator=(const class OMR::X86::CodeGenerator &),0,OMR,X86::CodeGenerator
operator=,operator=(const class OMR::X86::AMD64::CodeGenerator &),0,OMR,X86::AMD64::CodeGenerator
operator=,operator=(class OMR::X86::AMD64::CodeGenerator &&),0,OMR,X86::AMD64::CodeGenerator
operator=,operator=(const class TestCompiler::CodeGenerator &),0,TestCompiler,CodeGenerator
operator=,operator=(class TestCompiler::CodeGenerator &&),0,TestCompiler,CodeGenerator
operator=,operator=(class TR::CodeGenerator &&),0,TR,CodeGenerator
operator=,operator=(const class TR::CodeGenerator &),0,TR,CodeGenerator
patchableRangeNeedsAlignment,patchableRangeNeedsAlignment(void *,intptrj_t,intptrj_t,intptrj_t),1,OMR,X86::CodeGenerator
performDeferredSplits,performDeferredSplits(),1,OMR,X86::CodeGenerator
performNonLinearRegisterAssignmentAtBranch,performNonLinearRegisterAssignmentAtBranch(TR::X86LabelInstruction *,enum TR_RegisterKinds),1,OMR,X86::CodeGenerator
performsChecksExplicitly,performsChecksExplicitly(),1,OMR,CodeGenerator
pickNOPRegister,pickNOPRegister(TR::Instruction *),1,OMR,X86::CodeGenerator
pickRegister,pickRegister(class TR_RegisterCandidate *,TR::Block **,class TR_BitVector &,TR_GlobalRegisterNumber &,TR_LinkHead<class TR_RegisterCandidate> *),1,OMR,CodeGenerator
postLowerTrees,postLowerTrees(),1,OMR,CodeGenerator
preLowerTrees,preLowerTrees(),1,OMR,CodeGenerator
prepareForGRA,prepareForGRA(),1,OMR,CodeGenerator
prepareForNonLinearRegisterAssignmentAtMerge,prepareForNonLinearRegisterAssignmentAtMerge(TR::X86LabelInstruction *),1,OMR,X86::CodeGenerator
prepareNodeForInstructionSelection,prepareNodeForInstructionSelection(TR::Node *),1,OMR,CodeGenerator
prepareRegistersForAssignment,prepareRegistersForAssignment(),1,OMR,CodeGenerator
processClobberingInstructions,processClobberingInstructions(TR::ClobberingInstruction *,TR::Instruction *),1,OMR,X86::CodeGenerator
processDeferredSplits,processDeferredSplits(_Bool),1,OMR,X86::CodeGenerator
processIncomingParameterUsage,processIncomingParameterUsage(class TR_BitVector **,int32_t),1,OMR,CodeGenerator
processInstruction,processInstruction(TR::Instruction *,class TR_BitVector **,int32_t &,int32_t &,_Bool),1,OMR,CodeGenerator
processReference,processReference(TR::Node *,TR::Node *,TR::TreeTop *),1,OMR,CodeGenerator
processRelocations,processRelocations(),1,OMR,CodeGenerator
profiledPointersRequireRelocation,profiledPointersRequireRelocation(),1,OMR,CodeGenerator
propagateSignThroughBCDLeftShift,propagateSignThroughBCDLeftShift(TR::DataType),1,OMR,CodeGenerator
pushPreservedRegisters,pushPreservedRegisters(),1,OMR,X86::CodeGenerator
reactivateDependentDiscardableRegisters,reactivateDependentDiscardableRegisters(TR::Register *),1,OMR,X86::CodeGenerator
recordSingleRegisterUse,recordSingleRegisterUse(TR::Register *),1,OMR,CodeGenerator
recursivelyDecReferenceCount,recursivelyDecReferenceCount(TR::Node *),1,OMR,CodeGenerator
registerAssumptions,registerAssumptions(),1,OMR,CodeGenerator
remapGCIndicesInInternalPtrFormat,remapGCIndicesInInternalPtrFormat(),1,OMR,CodeGenerator
rematerializeCmpUnderTernary,rematerializeCmpUnderTernary(TR::Node *),1,OMR,CodeGenerator
removeBetterSpillPlacementCandidate,removeBetterSpillPlacementCandidate(TR::RealRegister *),1,OMR,X86::CodeGenerator
removeLiveDiscardableRegister,removeLiveDiscardableRegister(TR::Register *),1,OMR,X86::CodeGenerator
removeRegisterHogsInLowerTreesWalk,removeRegisterHogsInLowerTreesWalk(),1,OMR,CodeGenerator
removeUnavailableRegisters,removeUnavailableRegisters(class TR_RegisterCandidate *,TR::Block **,class TR_BitVector &),1,OMR,CodeGenerator
removeUnusedLocals,removeUnusedLocals(),1,OMR,CodeGenerator
requiresAtomicPatching,requiresAtomicPatching(TR::Instruction *),1,OMR,CodeGenerator
requiresCarry,requiresCarry(),1,OMR,CodeGenerator
reserveCodeCache,reserveCodeCache(),1,OMR,CodeGenerator
resetEnableBetterSpillPlacements,resetEnableBetterSpillPlacements(),1,OMR,X86::CodeGenerator
resetEnableRegisterUsageTracking,resetEnableRegisterUsageTracking(),1,OMR,CodeGenerator
resetEnableRematerialisation,resetEnableRematerialisation(),1,OMR,X86::CodeGenerator
resetIsInWarmCodeCache,resetIsInWarmCodeCache(),1,OMR,CodeGenerator
resetIsLeafMethod,resetIsLeafMethod(),1,OMR,CodeGenerator
resetLiveRealRegisters,resetLiveRealRegisters(enum TR_RegisterKinds),1,OMR,CodeGenerator
resetMethodModifiedByRA,resetMethodModifiedByRA(),1,OMR,CodeGenerator
resetRegisterAssignmentFlag,resetRegisterAssignmentFlag(enum TR_RegisterAssignmentFlagBits),1,OMR,CodeGenerator
resetRemoveRegisterHogsInLowerTreesWalk,resetRemoveRegisterHogsInLowerTreesWalk(),1,OMR,CodeGenerator
resetSupportsVMThreadGRA,resetSupportsVMThreadGRA(),1,OMR,CodeGenerator
resetTrackingInMemoryKilledLoads,resetTrackingInMemoryKilledLoads(),1,OMR,CodeGenerator
resizeCodeMemory,resizeCodeMemory(),1,OMR,CodeGenerator
saveBetterSpillPlacements,saveBetterSpillPlacements(TR::Instruction *),1,OMR,X86::CodeGenerator
saveOrRestoreRegisters,saveOrRestoreRegisters(class TR_BitVector *,TR::Instruction *,_Bool),1,OMR,CodeGenerator
self,self(),1,OMR,CodeGenerator
setAccessStaticsIndirectly,setAccessStaticsIndirectly(_Bool),1,OMR,CodeGenerator
setAccumulatedInstructionLengthError,setAccumulatedInstructionLengthError(int32_t),1,OMR,CodeGenerator
setAheadOfTimeCompile,setAheadOfTimeCompile(TR::AheadOfTimeCompile *),1,OMR,CodeGenerator
setAlwaysUseTrampolines,setAlwaysUseTrampolines(),1,OMR,CodeGenerator
setAssignmentDirection,setAssignmentDirection(RegisterAssignmentDirection),1,OMR,X86::CodeGenerator
setBinaryBufferCursor,setBinaryBufferCursor(uint8_t *),1,OMR,CodeGenerator
setBinaryBufferStart,setBinaryBufferStart(uint8_t *),1,OMR,CodeGenerator
setCodeCache,setCodeCache(TR::CodeCache *),1,OMR,CodeGenerator
setColdCodeStart,setColdCodeStart(uint8_t *),1,OMR,CodeGenerator
setComputesCarry,setComputesCarry(_Bool),1,OMR,CodeGenerator
setConsiderAllAutosAsTacticalGlobalRegisterCandidates,setConsiderAllAutosAsTacticalGlobalRegisterCandidates(),1,OMR,CodeGenerator
setCurrentBlock,setCurrentBlock(TR::Block *),1,OMR,CodeGenerator
setCurrentBlockIndex,setCurrentBlockIndex(int32_t),1,OMR,CodeGenerator
setCurrentEvaluationBlock,setCurrentEvaluationBlock(TR::Block *),1,OMR,CodeGenerator
setCurrentEvaluationTreeTop,setCurrentEvaluationTreeTop(TR::TreeTop *),1,OMR,CodeGenerator
setCurrentPathDepth,setCurrentPathDepth(int32_t),1,OMR,CodeGenerator
setDisableFpGRA,setDisableFpGRA(),1,OMR,CodeGenerator
setDisableLongGRA,setDisableLongGRA(),1,OMR,CodeGenerator
setDisableNullCheckOfArrayLength,setDisableNullCheckOfArrayLength(),1,OMR,CodeGenerator
setEnableBetterSpillPlacements,setEnableBetterSpillPlacements(),1,OMR,X86::CodeGenerator
setEnableImplicitDivideCheck,setEnableImplicitDivideCheck(),1,OMR,X86::CodeGenerator
setEnableRefinedAliasSets,setEnableRefinedAliasSets(),1,OMR,CodeGenerator
setEnableRegisterAssociations,setEnableRegisterAssociations(),1,OMR,X86::CodeGenerator
setEnableRegisterInterferences,setEnableRegisterInterferences(),1,OMR,X86::CodeGenerator
setEnableRegisterUsageTracking,setEnableRegisterUsageTracking(),1,OMR,CodeGenerator
setEnableRegisterWeights,setEnableRegisterWeights(),1,OMR,X86::CodeGenerator
setEnableRematerialisation,setEnableRematerialisation(),1,OMR,X86::CodeGenerator
setEnableSinglePrecisionMethods,setEnableSinglePrecisionMethods(),1,OMR,X86::CodeGenerator
setEnableTLHPrefetching,setEnableTLHPrefetching(),1,OMR,X86::CodeGenerator
setEnforceStoreOrder,setEnforceStoreOrder(),1,OMR,CodeGenerator
setEstimatedColdLength,setEstimatedColdLength(uint32_t),1,OMR,CodeGenerator
setEstimatedLocationsForDataSnippetLabels,setEstimatedLocationsForDataSnippetLabels(int32_t),1,OMR,CodeGenerator
setEstimatedLocationsForSnippetLabels,setEstimatedLocationsForSnippetLabels(int32_t),1,OMR,CodeGenerator
setEstimatedLocationsForTargetAddressSnippetLabels,setEstimatedLocationsForTargetAddressSnippetLabels(int32_t),1,OMR,CodeGenerator
setEstimatedSnippetStart,setEstimatedSnippetStart(int32_t),1,OMR,CodeGenerator
setEstimatedWarmLength,setEstimatedWarmLength(uint32_t),1,OMR,CodeGenerator
setExpandExponentiation,setExpandExponentiation(),1,OMR,CodeGenerator
setFPRegisterIterator,setFPRegisterIterator(TR::RegisterIterator *),1,OMR,CodeGenerator
setFirstGlobalAR,setFirstGlobalAR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setFirstGlobalFPR,setFirstGlobalFPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setFirstGlobalHPR,setFirstGlobalHPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setFirstGlobalVRF,setFirstGlobalVRF(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setFirstOverlappedGlobalFPR,setFirstOverlappedGlobalFPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setFirstOverlappedGlobalVRF,setFirstOverlappedGlobalVRF(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setFirstTimeLiveOOLRegisterList,setFirstTimeLiveOOLRegisterList(TR::list<TR::Register *> *),1,OMR,CodeGenerator
setFrameSizeInBytes,setFrameSizeInBytes(int32_t),1,OMR,CodeGenerator
setGPRegisterIterator,setGPRegisterIterator(TR::RegisterIterator *),1,OMR,CodeGenerator
setGRACompleted,setGRACompleted(),1,OMR,CodeGenerator
setGenerateMasmListingSyntax,setGenerateMasmListingSyntax(),1,OMR,X86::CodeGenerator
setGlobalFPRPartitionLimit,setGlobalFPRPartitionLimit(uint8_t),1,OMR,CodeGenerator
setGlobalGPRPartitionLimit,setGlobalGPRPartitionLimit(uint8_t),1,OMR,CodeGenerator
setGlobalRegisterTable,setGlobalRegisterTable(uint32_t *),1,OMR,CodeGenerator
setHasCCCarry,setHasCCCarry(_Bool),1,OMR,CodeGenerator
setHasCCCompare,setHasCCCompare(_Bool),1,OMR,CodeGenerator
setHasCCInfo,setHasCCInfo(_Bool),1,OMR,CodeGenerator
setHasCCOverflow,setHasCCOverflow(_Bool),1,OMR,CodeGenerator
setHasCCSigned,setHasCCSigned(_Bool),1,OMR,CodeGenerator
setHasCCZero,setHasCCZero(_Bool),1,OMR,CodeGenerator
setHasDoubleWordAlignedStack,setHasDoubleWordAlignedStack(),1,OMR,CodeGenerator
setHasResumableTrapHandler,setHasResumableTrapHandler(),1,OMR,CodeGenerator
setImplicitExceptionPoint,setImplicitExceptionPoint(TR::Instruction *),1,OMR,CodeGenerator
setInlinedGetCurrentThreadMethod,setInlinedGetCurrentThreadMethod(),1,OMR,CodeGenerator
setInstructionPatchAlignmentBoundary,setInstructionPatchAlignmentBoundary(int32_t),1,OMR,X86::CodeGenerator
setInternalControlFlowNestingDepth,setInternalControlFlowNestingDepth(int32_t),1,OMR,CodeGenerator
setInternalControlFlowSafeNestingDepth,setInternalControlFlowSafeNestingDepth(int32_t),1,OMR,CodeGenerator
setIsInWarmCodeCache,setIsInWarmCodeCache(),1,OMR,CodeGenerator
setIsLeafMethod,setIsLeafMethod(),1,OMR,CodeGenerator
setJNILinkageCalleeCleanup,setJNILinkageCalleeCleanup(),1,OMR,CodeGenerator
setJitMethodEntryPaddingSize,setJitMethodEntryPaddingSize(uint32_t),1,OMR,CodeGenerator
setLargestOutgoingArgSize,setLargestOutgoingArgSize(uint32_t),1,OMR,CodeGenerator
setLast8BitGlobalGPR,setLast8BitGlobalGPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setLastCatchAppendInstruction,setLastCatchAppendInstruction(TR::Instruction *),1,OMR,X86::CodeGenerator
setLastGlobalAR,setLastGlobalAR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setLastGlobalFPR,setLastGlobalFPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setLastGlobalGPR,setLastGlobalGPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setLastGlobalHPR,setLastGlobalHPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setLastGlobalVRF,setLastGlobalVRF(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setLastInstructionBeforeCurrentEvaluationTreeTop,setLastInstructionBeforeCurrentEvaluationTreeTop(TR::Instruction *),1,OMR,CodeGenerator
setLastOverlappedGlobalFPR,setLastOverlappedGlobalFPR(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setLastOverlappedGlobalVRF,setLastOverlappedGlobalVRF(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setLinkage,setLinkage(enum TR_LinkageConventions,TR::Linkage *),1,OMR,CodeGenerator
setLinkage,setLinkage(TR::Linkage *),0,OMR,CodeGenerator
setLiveButMaybeUnreferencedLocals,setLiveButMaybeUnreferencedLocals(class TR_BitVector *),1,OMR,CodeGenerator
setLiveLocals,setLiveLocals(class TR_BitVector *),1,OMR,CodeGenerator
setLiveMonitors,setLiveMonitors(class TR_BitVector *),1,OMR,CodeGenerator
setLiveRegisters,setLiveRegisters(class TR_LiveRegisters *,enum TR_RegisterKinds),1,OMR,CodeGenerator
setLmmdFailed,setLmmdFailed(),1,OMR,CodeGenerator
setLocalsIG,setLocalsIG(class TR_InterferenceGraph *),1,OMR,CodeGenerator
setLowestCommonCodePatchingAlignmentBoundary,setLowestCommonCodePatchingAlignmentBoundary(int32_t),1,OMR,X86::CodeGenerator
setLowestSavedRegister,setLowestSavedRegister(int32_t),1,OMR,CodeGenerator
setMapAutosTo8ByteSlots,setMapAutosTo8ByteSlots(),1,OMR,X86::CodeGenerator
setMappingAutomatics,setMappingAutomatics(),1,OMR,CodeGenerator
setMethodContainsBinaryCodedDecimal,setMethodContainsBinaryCodedDecimal(),1,OMR,CodeGenerator
setMethodEnterExitTracingEnabled,setMethodEnterExitTracingEnabled(),1,OMR,X86::CodeGenerator
setMethodModifiedByRA,setMethodModifiedByRA(),1,OMR,CodeGenerator
setMethodStackMap,setMethodStackMap(class TR_GCStackMap *),1,OMR,CodeGenerator
setMultiplyIsDestructive,setMultiplyIsDestructive(),1,OMR,CodeGenerator
setNextAvailableBlockIndex,setNextAvailableBlockIndex(int32_t),1,OMR,CodeGenerator
setOnDemandLiteralPoolRun,setOnDemandLiteralPoolRun(_Bool),1,OMR,CodeGenerator
setOptimizationPhaseIsComplete,setOptimizationPhaseIsComplete(),1,OMR,CodeGenerator
setOverlapOffsetBetweenAliasedGRNs,setOverlapOffsetBetweenAliasedGRNs(TR_GlobalRegisterNumber),1,OMR,CodeGenerator
setPerformsChecksExplicitly,setPerformsChecksExplicitly(),1,OMR,CodeGenerator
setPicSlotCount,setPicSlotCount(int32_t),1,OMR,X86::CodeGenerator
setPreJitMethodEntrySize,setPreJitMethodEntrySize(uint32_t),1,OMR,CodeGenerator
setPrePrologueSize,setPrePrologueSize(uint32_t),1,OMR,CodeGenerator
setPreservedRegsInPrologue,setPreservedRegsInPrologue(class TR_BitVector *),1,OMR,CodeGenerator
setPushPreservedRegisters,setPushPreservedRegisters(),1,OMR,X86::CodeGenerator
setRealVMThreadRegister,setRealVMThreadRegister(TR::RealRegister *),1,OMR,CodeGenerator
setReferencedRegisterList,setReferencedRegisterList(TR::list<OMR::RegisterUsage *> *),1,OMR,CodeGenerator
setRegisterAssignmentFlag,setRegisterAssignmentFlag(enum TR_RegisterAssignmentFlagBits),1,OMR,CodeGenerator
setRegisterSaveDescription,setRegisterSaveDescription(int32_t),1,OMR,CodeGenerator
setRemoveRegisterHogsInLowerTreesWalk,setRemoveRegisterHogsInLowerTreesWalk(),1,OMR,CodeGenerator
setRequiresCarry,setRequiresCarry(_Bool),1,OMR,CodeGenerator
setShouldBuildStructure,setShouldBuildStructure(),1,OMR,CodeGenerator
setShrinkWrappingDone,setShrinkWrappingDone(),1,OMR,CodeGenerator
setSignExtensionFlags,setSignExtensionFlags(class TR_BitVector *),1,OMR,CodeGenerator
setSpilledRegisterList,setSpilledRegisterList(TR::list<TR::Register *> *),1,OMR,CodeGenerator
setSpilledRegsForAllPresentLinkages,setSpilledRegsForAllPresentLinkages(class TR_BitVector *,struct OMR::CodeGenerator::TR_RegisterPressureSummary &,enum TR_SpillKinds),1,OMR,CodeGenerator
setSpillsFPRegistersAcrossCalls,setSpillsFPRegistersAcrossCalls(),1,OMR,CodeGenerator
setStackAtlas,setStackAtlas(TR::GCStackAtlas *),1,OMR,CodeGenerator
setSupportsAlignedAccessOnly,setSupportsAlignedAccessOnly(),1,OMR,CodeGenerator
setSupportsArrayCmp,setSupportsArrayCmp(),1,OMR,CodeGenerator
setSupportsArrayCmpSign,setSupportsArrayCmpSign(),1,OMR,CodeGenerator
setSupportsArraySet,setSupportsArraySet(),1,OMR,CodeGenerator
setSupportsArraySetToZero,setSupportsArraySetToZero(),1,OMR,CodeGenerator
setSupportsArrayTranslateAndTest,setSupportsArrayTranslateAndTest(),1,OMR,CodeGenerator
setSupportsArrayTranslateTROT,setSupportsArrayTranslateTROT(),1,OMR,CodeGenerator
setSupportsArrayTranslateTROTNoBreak,setSupportsArrayTranslateTROTNoBreak(),1,OMR,CodeGenerator
setSupportsArrayTranslateTRTO,setSupportsArrayTranslateTRTO(),1,OMR,CodeGenerator
setSupportsArrayTranslateTRTO255,setSupportsArrayTranslateTRTO255(),1,OMR,CodeGenerator
setSupportsArrayTranslateTRxx,setSupportsArrayTranslateTRxx(),1,OMR,CodeGenerator
setSupportsAtomicLoadAndAdd,setSupportsAtomicLoadAndAdd(),1,OMR,CodeGenerator
setSupportsAutoSIMD,setSupportsAutoSIMD(),1,OMR,CodeGenerator
setSupportsBCDToDFPReduction,setSupportsBCDToDFPReduction(),1,OMR,CodeGenerator
setSupportsBDLLHardwareOverflowCheck,setSupportsBDLLHardwareOverflowCheck(),1,OMR,CodeGenerator
setSupportsBigDecimalLongLookasideVersioning,setSupportsBigDecimalLongLookasideVersioning(),1,OMR,CodeGenerator
setSupportsCompactedLocals,setSupportsCompactedLocals(),1,OMR,CodeGenerator
setSupportsConstantOffsetInAddressing,setSupportsConstantOffsetInAddressing(),1,OMR,CodeGenerator
setSupportsCurrentTimeMaxPrecision,setSupportsCurrentTimeMaxPrecision(),1,OMR,CodeGenerator
setSupportsDirectJNICalls,setSupportsDirectJNICalls(),1,OMR,CodeGenerator
setSupportsDivCheck,setSupportsDivCheck(),1,OMR,CodeGenerator
setSupportsDoubleWordCAS,setSupportsDoubleWordCAS(),1,OMR,CodeGenerator
setSupportsDoubleWordSet,setSupportsDoubleWordSet(),1,OMR,CodeGenerator
setSupportsEfficientNarrowIntComputation,setSupportsEfficientNarrowIntComputation(),1,OMR,CodeGenerator
setSupportsEfficientNarrowUnsignedIntComputation,setSupportsEfficientNarrowUnsignedIntComputation(),1,OMR,CodeGenerator
setSupportsFastCTM,setSupportsFastCTM(),1,OMR,CodeGenerator
setSupportsFastPackedDFPConversions,setSupportsFastPackedDFPConversions(),1,OMR,CodeGenerator
setSupportsGlRegDepOnFirstBlock,setSupportsGlRegDepOnFirstBlock(),1,OMR,CodeGenerator
setSupportsGlRegDeps,setSupportsGlRegDeps(),1,OMR,CodeGenerator
setSupportsIDivAndIRemWithThreeChildren,setSupportsIDivAndIRemWithThreeChildren(),1,OMR,CodeGenerator
setSupportsInlinedAtomicLongVolatiles,setSupportsInlinedAtomicLongVolatiles(),1,OMR,CodeGenerator
setSupportsInliningOfTypeCoersionMethods,setSupportsInliningOfTypeCoersionMethods(),1,OMR,CodeGenerator
setSupportsIntDFPConversions,setSupportsIntDFPConversions(),1,OMR,CodeGenerator
setSupportsJavaFloatSemantics,setSupportsJavaFloatSemantics(),1,OMR,CodeGenerator
setSupportsLDivAndLRemWithThreeChildren,setSupportsLDivAndLRemWithThreeChildren(),1,OMR,CodeGenerator
setSupportsLM,setSupportsLM(),1,OMR,CodeGenerator
setSupportsLoweringConstIDiv,setSupportsLoweringConstIDiv(),1,OMR,CodeGenerator
setSupportsLoweringConstLDiv,setSupportsLoweringConstLDiv(),1,OMR,CodeGenerator
setSupportsLoweringConstLDivPower2,setSupportsLoweringConstLDivPower2(),1,OMR,CodeGenerator
setSupportsMergedAllocations,setSupportsMergedAllocations(),1,OMR,CodeGenerator
setSupportsNewInstanceImplOpt,setSupportsNewInstanceImplOpt(),1,OMR,CodeGenerator
setSupportsPartialInlineOfMethodHooks,setSupportsPartialInlineOfMethodHooks(),1,OMR,CodeGenerator
setSupportsPostProcessArrayCopy,setSupportsPostProcessArrayCopy(),1,OMR,CodeGenerator
setSupportsPrimitiveArrayCopy,setSupportsPrimitiveArrayCopy(),1,OMR,CodeGenerator
setSupportsProfiledInlining,setSupportsProfiledInlining(),1,OMR,CodeGenerator
setSupportsReadOnlyLocks,setSupportsReadOnlyLocks(),1,OMR,CodeGenerator
setSupportsReferenceArrayCopy,setSupportsReferenceArrayCopy(),1,OMR,CodeGenerator
setSupportsReverseLoadAndStore,setSupportsReverseLoadAndStore(),1,OMR,CodeGenerator
setSupportsRuntimeInstrumentation,setSupportsRuntimeInstrumentation(),1,OMR,CodeGenerator
setSupportsScaledIndexAddressing,setSupportsScaledIndexAddressing(),1,OMR,CodeGenerator
setSupportsSearchCharString,setSupportsSearchCharString(),1,OMR,CodeGenerator
setSupportsShrinkWrapping,setSupportsShrinkWrapping(),1,OMR,CodeGenerator
setSupportsStackAllocationOfArraylets,setSupportsStackAllocationOfArraylets(),1,OMR,CodeGenerator
setSupportsTM,setSupportsTM(),1,OMR,CodeGenerator
setSupportsTMDoubleWordCASORSet,setSupportsTMDoubleWordCASORSet(),1,OMR,CodeGenerator
setSupportsTMHashMapAndLinkedQueue,setSupportsTMHashMapAndLinkedQueue(),1,OMR,CodeGenerator
setSupportsTestCharComparisonControl,setSupportsTestCharComparisonControl(),1,OMR,CodeGenerator
setSupportsTestUnderMask,setSupportsTestUnderMask(),1,OMR,CodeGenerator
setSupportsTranslateAndTestCharString,setSupportsTranslateAndTestCharString(),1,OMR,CodeGenerator
setSupportsVMThreadGRA,setSupportsVMThreadGRA(),1,OMR,CodeGenerator
setSupportsVectorRegisters,setSupportsVectorRegisters(),1,OMR,CodeGenerator
setSupportsVirtualGuardNOPing,setSupportsVirtualGuardNOPing(),1,OMR,CodeGenerator
setSupportsZonedDFPConversions,setSupportsZonedDFPConversions(),1,OMR,CodeGenerator
setSwitchToInterpreterLabel,setSwitchToInterpreterLabel(TR::LabelSymbol *),1,OMR,X86::CodeGenerator
setTargetSupportsSoftwarePrefetches,setTargetSupportsSoftwarePrefetches(),1,OMR,X86::CodeGenerator
setTrackingInMemoryKilledLoads,setTrackingInMemoryKilledLoads(),1,OMR,CodeGenerator
setUnavailableRegistersUsage,setUnavailableRegistersUsage(TR_Array<class TR_BitVector> &,TR_Array<class TR_BitVector> &),1,OMR,CodeGenerator
setUpForInstructionSelection,setUpForInstructionSelection(),1,OMR,CodeGenerator
setUpStackSizeForCallNode,setUpStackSizeForCallNode(TR::Node *),1,OMR,CodeGenerator
setUseGPRsForWin32CTMConversion,setUseGPRsForWin32CTMConversion(),1,OMR,X86::CodeGenerator
setUseLongDivideHelperForWin32CTMConversion,setUseLongDivideHelperForWin32CTMConversion(),1,OMR,X86::CodeGenerator
setUseNonLinearRegisterAssigner,setUseNonLinearRegisterAssigner(),1,OMR,CodeGenerator
setUseSSEForDoublePrecision,setUseSSEForDoublePrecision(),1,OMR,X86::CodeGenerator
setUseSSEForSinglePrecision,setUseSSEForSinglePrecision(),1,OMR,X86::CodeGenerator
setUsesLoadStoreMultiple,setUsesLoadStoreMultiple(),1,OMR,CodeGenerator
setUsesRegisterMaps,setUsesRegisterMaps(),1,OMR,CodeGenerator
setUsesRegisterPairsForLongs,setUsesRegisterPairsForLongs(),1,OMR,CodeGenerator
setVFPState,setVFPState(const struct TR_VFPState &),1,OMR,X86::CodeGenerator
setVMThreadRegister,setVMThreadRegister(TR::Register *),1,OMR,CodeGenerator
setVMThreadRequired,setVMThreadRequired(_Bool),1,OMR,CodeGenerator
setVMThreadSpillInstruction,setVMThreadSpillInstruction(TR::Instruction *),1,OMR,CodeGenerator
setWarmCodeEnd,setWarmCodeEnd(uint8_t *),1,OMR,CodeGenerator
setX87RegisterIterator,setX87RegisterIterator(TR::RegisterIterator *),1,OMR,X86::CodeGenerator
setXMMDoubleLoadOpCode,setXMMDoubleLoadOpCode(enum TR_X86OpCodes),1,OMR,X86::CodeGenerator
shortClobberEvaluate,shortClobberEvaluate(TR::Node *),1,OMR,X86::CodeGenerator
shouldBuildStructure,shouldBuildStructure(),1,OMR,CodeGenerator
shouldValueBeInACommonedNode,shouldValueBeInACommonedNode(int64_t),1,OMR,CodeGenerator
shouldYankCompressedRefs,shouldYankCompressedRefs(),1,OMR,CodeGenerator
shutdown,shutdown(class TR_FrontEnd *,TR::FILE *),1,OMR,CodeGenerator
signExtensionFlags,signExtensionFlags(),1,OMR,CodeGenerator
simulateBlockEvaluation,simulateBlockEvaluation(TR::Block *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *),1,OMR,CodeGenerator
simulateDecReferenceCount,simulateDecReferenceCount(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
simulateMemoryReference,simulateMemoryReference(struct OMR::CodeGenerator::TR_SimulatedMemoryReference *,TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *),1,OMR,CodeGenerator
simulateNodeEvaluation,simulateNodeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *),1,OMR,CodeGenerator
simulateNodeGoingDead,simulateNodeGoingDead(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
simulateNodeGoingLive,simulateNodeGoingLive(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
simulateNodeInitialization,simulateNodeInitialization(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),1,OMR,CodeGenerator
simulateSkippedTreeEvaluation,simulateSkippedTreeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *,char),1,OMR,CodeGenerator
simulateTreeEvaluation,simulateTreeEvaluation(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *),1,OMR,CodeGenerator
simulatedNodeState,simulatedNodeState(TR::Node *),1,OMR,CodeGenerator
simulatedNodeState,simulatedNodeState(TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *),0,OMR,CodeGenerator
simulationPrePass,simulationPrePass(TR::TreeTop *,TR::Node *,struct OMR::CodeGenerator::TR_RegisterPressureState *,struct OMR::CodeGenerator::TR_RegisterPressureSummary *),1,OMR,CodeGenerator
sizeOfInstructionToBePatched,sizeOfInstructionToBePatched(TR::Instruction *),1,OMR,CodeGenerator
sizeOfInstructionToBePatchedHCRGuard,sizeOfInstructionToBePatchedHCRGuard(TR::Instruction *),1,OMR,CodeGenerator
spillLiveReferencesToTemps,spillLiveReferencesToTemps(TR::TreeTop *,std::list<TR::SymbolReference *, TR::typed_allocator<TR::SymbolReference *, TR::Allocator> >::iterator),1,OMR,CodeGenerator
spillsFPRegistersAcrossCalls,spillsFPRegistersAcrossCalls(),1,OMR,CodeGenerator
splitBlockEntry,splitBlockEntry(TR::Instruction *),1,OMR,CodeGenerator
splitEdge,splitEdge(TR::Instruction *,_Bool,_Bool,TR::Instruction *,TR::list<TR::Instruction *> *,_Bool),1,OMR,CodeGenerator
splitLabel,splitLabel(TR::LabelSymbol *,TR::X86LabelInstruction *),1,OMR,X86::CodeGenerator
startInternalControlFlow,startInternalControlFlow(TR::Instruction *),1,OMR,CodeGenerator
startRecordingRegisterUsage,startRecordingRegisterUsage(),1,OMR,CodeGenerator
startUsingRegister,startUsingRegister(TR::Register *),1,OMR,CodeGenerator
stopRecordingRegisterUsage,stopRecordingRegisterUsage(),1,OMR,CodeGenerator
stopUsingRegister,stopUsingRegister(TR::Register *),1,OMR,CodeGenerator
storageMayOverlap,storageMayOverlap(TR::Node *,size_t,TR::Node *,size_t),1,OMR,CodeGenerator
supportVMInternalNatives,supportVMInternalNatives(),1,OMR,CodeGenerator
supports32bitAiadd,supports32bitAiadd(),1,OMR,CodeGenerator
supportsAddressRematerialization,supportsAddressRematerialization(),1,OMR,X86::CodeGenerator
supportsAtomicAdd,supportsAtomicAdd(),1,OMR,CodeGenerator
supportsCMOV,supportsCMOV(),1,OMR,X86::CodeGenerator
supportsComplexAddressing,supportsComplexAddressing(),1,OMR,CodeGenerator
supportsConstantRematerialization,supportsConstantRematerialization(),1,OMR,X86::CodeGenerator
supportsDebugCounters,supportsDebugCounters(TR::DebugCounterInjectionPoint),1,OMR,CodeGenerator
supportsDirectIntegralLoadStoresFromLiteralPool,supportsDirectIntegralLoadStoresFromLiteralPool(),1,OMR,CodeGenerator
supportsDirectJNICallsForAOT,supportsDirectJNICallsForAOT(),1,OMR,CodeGenerator
supportsFS0VMThreadRematerialization,supportsFS0VMThreadRematerialization(),1,OMR,X86::CodeGenerator
supportsFastPackedDFPConversions,supportsFastPackedDFPConversions(),1,OMR,CodeGenerator
supportsFusedMultiplyAdd,supportsFusedMultiplyAdd(),1,OMR,CodeGenerator
supportsHighWordFacility,supportsHighWordFacility(),1,OMR,CodeGenerator
supportsIndirectMemoryRematerialization,supportsIndirectMemoryRematerialization(),1,OMR,X86::CodeGenerator
supportsInliningOfIsInstance,supportsInliningOfIsInstance(),1,OMR,CodeGenerator
supportsIntDFPConversions,supportsIntDFPConversions(),1,OMR,CodeGenerator
supportsInternalPointers,supportsInternalPointers(),1,OMR,CodeGenerator
supportsLengthMinusOneForMemoryOpts,supportsLengthMinusOneForMemoryOpts(),1,OMR,CodeGenerator
supportsLocalMemoryRematerialization,supportsLocalMemoryRematerialization(),1,OMR,X86::CodeGenerator
supportsLongRegAllocation,supportsLongRegAllocation(),1,OMR,CodeGenerator
supportsMergingGuards,supportsMergingGuards(),1,OMR,CodeGenerator
supportsMethodEntryPadding,supportsMethodEntryPadding(),1,OMR,CodeGenerator
supportsNativeLongOperations,supportsNativeLongOperations(),1,OMR,CodeGenerator
supportsNegativeFusedMultiplyAdd,supportsNegativeFusedMultiplyAdd(),1,OMR,CodeGenerator
supportsOnDemandLiteralPool,supportsOnDemandLiteralPool(),1,OMR,CodeGenerator
supportsPassThroughCopyToNewVirtualRegister,supportsPassThroughCopyToNewVirtualRegister(),1,OMR,CodeGenerator
supportsSinglePrecisionSQRT,supportsSinglePrecisionSQRT(),1,OMR,CodeGenerator
supportsStaticMemoryRematerialization,supportsStaticMemoryRematerialization(),1,OMR,X86::CodeGenerator
supportsTrapsInTMRegion,supportsTrapsInTMRegion(),1,OMR,CodeGenerator
supportsUnneededLabelRemoval,supportsUnneededLabelRemoval(),1,OMR,CodeGenerator
supportsXMMRRematerialization,supportsXMMRRematerialization(),1,OMR,X86::CodeGenerator
supportsZonedDFPConversions,supportsZonedDFPConversions(),1,OMR,CodeGenerator
suppressInliningOfRecognizedMethod,suppressInliningOfRecognizedMethod(TR::RecognizedMethod),1,OMR,CodeGenerator
symRefTab,symRefTab(),1,OMR,CodeGenerator
syncCode,syncCode(uint8_t *,uint32_t),1,OMR,CodeGenerator
targetSupportsSoftwarePrefetches,targetSupportsSoftwarePrefetches(),1,OMR,X86::CodeGenerator
terseSimulateTreeEvaluation,terseSimulateTreeEvaluation(),1,OMR,CodeGenerator
testAnyRegisterAssignmentFlags,testAnyRegisterAssignmentFlags(enum TR_RegisterAssignmentFlagBits),1,OMR,CodeGenerator
toggleIsInOOLSection,toggleIsInOOLSection(),1,OMR,CodeGenerator
trHeapMemory,trHeapMemory(),1,OMR,CodeGenerator
trMemory,trMemory(),1,OMR,CodeGenerator
trPersistentMemory,trPersistentMemory(),1,OMR,CodeGenerator
trStackMemory,trStackMemory(),1,OMR,CodeGenerator
traceBCDCodeGen,traceBCDCodeGen(),1,OMR,CodeGenerator
traceBCDEntry,traceBCDEntry(char *,TR::Node *),1,OMR,CodeGenerator
traceBCDExit,traceBCDExit(char *,TR::Node *),1,OMR,CodeGenerator
tracePostRAInstruction,tracePostRAInstruction(TR::Instruction *),1,OMR,CodeGenerator
tracePreRAInstruction,tracePreRAInstruction(TR::Instruction *),1,OMR,CodeGenerator
traceRAInstruction,traceRAInstruction(TR::Instruction *),1,OMR,CodeGenerator
traceRegAssigned,traceRegAssigned(TR::Register *,TR::Register *),1,OMR,CodeGenerator
traceRegAssigned,traceRegAssigned(TR::Register *,TR::Register *,TR_RegisterAssignmentFlags),0,OMR,CodeGenerator
traceRegFreed,traceRegFreed(TR::Register *,TR::Register *),1,OMR,CodeGenerator
traceRegInterference,traceRegInterference(TR::Register *,TR::Register *,int32_t),1,OMR,CodeGenerator
traceRegWeight,traceRegWeight(TR::Register *,uint32_t),1,OMR,CodeGenerator
traceRegisterAssignment,traceRegisterAssignment(const char *),1,OMR,CodeGenerator
traceSimulateTreeEvaluation,traceSimulateTreeEvaluation(),1,OMR,CodeGenerator
trackingInMemoryKilledLoads,trackingInMemoryKilledLoads(),1,OMR,CodeGenerator
treeContainsCall,treeContainsCall(TR::TreeTop *),1,OMR,CodeGenerator
uncommonCallConstNodes,uncommonCallConstNodes(),1,OMR,CodeGenerator
uniqueAddressOccurrence,uniqueAddressOccurrence(TR::Node *,TR::Node *,_Bool),1,OMR,CodeGenerator
unlockFreeSpillList,unlockFreeSpillList(),1,OMR,CodeGenerator
updateSnippetMapWithRSD,updateSnippetMapWithRSD(TR::Instruction *,int32_t),1,OMR,CodeGenerator
use64BitRegsOn32Bit,use64BitRegsOn32Bit(),1,OMR,CodeGenerator
useClobberEvaluate,useClobberEvaluate(),1,OMR,CodeGenerator
useGPRsForWin32CTMConversion,useGPRsForWin32CTMConversion(),1,OMR,X86::CodeGenerator
useLongDivideHelperForWin32CTMConversion,useLongDivideHelperForWin32CTMConversion(),1,OMR,X86::CodeGenerator
useOldArrayTranslateMinimumNumberOfIterations,useOldArrayTranslateMinimumNumberOfIterations(),1,OMR,CodeGenerator
useSSEFor,useSSEFor(TR::DataType),1,OMR,X86::CodeGenerator
useSSEForDoublePrecision,useSSEForDoublePrecision(),1,OMR,X86::CodeGenerator
useSSEForSingleAndDoublePrecision,useSSEForSingleAndDoublePrecision(),1,OMR,X86::CodeGenerator
useSSEForSinglePrecision,useSSEForSinglePrecision(),1,OMR,X86::CodeGenerator
usesImplicit64BitGPRs,usesImplicit64BitGPRs(TR::Node *),1,OMR,CodeGenerator
usesRegisterMaps,usesRegisterMaps(),1,OMR,CodeGenerator
usesRegisterPairsForLongs,usesRegisterPairsForLongs(),1,OMR,CodeGenerator
vfpResetInstruction,vfpResetInstruction(),1,OMR,X86::CodeGenerator
vfpState,vfpState(),1,OMR,X86::CodeGenerator
vrfCount,vrfCount(TR::DataType),1,OMR,CodeGenerator
wantToPatchClassPointer,wantToPatchClassPointer(const class TR_OpaqueClassBlock *,const TR::Node *),1,OMR,CodeGenerator
wantToPatchClassPointer,wantToPatchClassPointer(const class TR_OpaqueClassBlock *,const uint8_t *),0,OMR,CodeGenerator
whichChildToEvaluate,whichChildToEvaluate(TR::Node *),1,OMR,CodeGenerator
whichNodeToEvaluate,whichNodeToEvaluate(TR::Node *,TR::Node *),1,OMR,CodeGenerator
willBeEvaluatedAsCallByCodeGen,willBeEvaluatedAsCallByCodeGen(TR::Node *,TR::Compilation *),1,OMR,CodeGenerator
yankIndexScalingOp,yankIndexScalingOp(),1,OMR,CodeGenerator
zeroOutAutoOnEdge,zeroOutAutoOnEdge(TR::SymbolReference *,TR::Block *,TR::Block *,TR::list<TR::Block *> *,TR_ScratchList<TR::Node> *),1,OMR,CodeGenerator
~CodeGenerator,~CodeGenerator(),1,OMR,CodeGenerator
AddCopyPropagationRematerializationCandidate,AddCopyPropagationRematerializationCandidate(TR::SymbolReference *),1,OMR,Compilation
Compilation,Compilation(int32_t,OMR_VMThread *,class TR_FrontEnd *,class TR_ResolvedMethod *,TR::IlGenRequest &,TR::Options &,TR::Region &,class TR_Memory *,class TR_OptimizationPlan *),1,OMR,Compilation
Compilation,Compilation(class OMR::Compilation &),0,OMR,Compilation
IsCopyPropagationRematerializationCandidate,IsCopyPropagationRematerializationCandidate(TR::SymbolReference *),1,OMR,Compilation
RemoveCopyPropagationRematerializationCandidate,RemoveCopyPropagationRematerializationCandidate(TR::SymbolReference *),1,OMR,Compilation
addGenILSym,addGenILSym(TR::ResolvedMethodSymbol *),1,OMR,Compilation
addOwningMethod,addOwningMethod(TR::ResolvedMethodSymbol *),1,OMR,Compilation
addPeekingArgInfo,addPeekingArgInfo(struct TR_PeekingArgInfo *),1,OMR,Compilation
addVirtualGuard,addVirtualGuard(class TR_VirtualGuard *),1,OMR,Compilation
adhocRandom,adhocRandom(),1,OMR,Compilation
adjustInlineDepth,adjustInlineDepth(TR_ByteCodeInfo &),1,OMR,Compilation
allocateAtThisOptLevel,allocateAtThisOptLevel(),1,OMR,Compilation
allocator,allocator(const char *),1,OMR,Compilation
allowRecompilation,allowRecompilation(),1,OMR,Compilation
areSlotsSharedByRefAndNonRef,areSlotsSharedByRefAndNonRef(),1,OMR,Compilation
arenaAllocator,arenaAllocator(),1,OMR,Compilation
canAffordOSRControlFlow,canAffordOSRControlFlow(),1,OMR,Compilation
canTransformUnsafeCopyToArrayCopy,canTransformUnsafeCopyToArrayCopy(),1,OMR,Compilation
canTransformUnsafeSetMemory,canTransformUnsafeSetMemory(),1,OMR,Compilation
cannotAttemptOSRDuring,cannotAttemptOSRDuring(uint32_t),1,OMR,Compilation
cg,cg(),1,OMR,Compilation
compilationShouldBeInterrupted,compilationShouldBeInterrupted(enum TR_CallingContext),1,OMR,Compilation
compile,compile(),1,OMR,Compilation
compileRelocatableCode,compileRelocatableCode(),1,OMR,Compilation
containsBigDecimalLoad,containsBigDecimalLoad(),1,OMR,Compilation
convertNonDeterministicInput,convertNonDeterministicInput(int32_t,int32_t,class TR_RandomGenerator *,int32_t,_Bool),1,OMR,Compilation
couldBeRecompiled,couldBeRecompiled(),1,OMR,Compilation
createAOTGuard,createAOTGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *,enum TR_VirtualGuardKind),1,OMR,Compilation
createAOTInliningGuard,createAOTInliningGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *,enum TR_VirtualGuardKind),1,OMR,Compilation
createDevirtualizedCall,createDevirtualizedCall(TR::Node *,class TR_OpaqueClassBlock *),1,OMR,Compilation
createDummyGuard,createDummyGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *),1,OMR,Compilation
createDummyOrSideEffectGuard,createDummyOrSideEffectGuard(TR::Compilation *,int16_t,TR::Node *,TR::TreeTop *),1,OMR,Compilation
createJittedMethodSymbol,createJittedMethodSymbol(class TR_ResolvedMethod *),1,OMR,Compilation
createSideEffectGuard,createSideEffectGuard(TR::Compilation *,TR::Node *,TR::TreeTop *),1,OMR,Compilation
decInlineDepth,decInlineDepth(_Bool),1,OMR,Compilation
diagnosticImpl,diagnosticImpl(const char *),1,OMR,Compilation
diagnosticImplVA,diagnosticImplVA(const char *,va_list),1,OMR,Compilation
dumpFlowGraph,dumpFlowGraph(TR::CFG *),1,OMR,Compilation
dumpMethodGraph,dumpMethodGraph(int,TR::ResolvedMethodSymbol *),1,OMR,Compilation
dumpMethodTrees,dumpMethodTrees(char *,const char *,TR::ResolvedMethodSymbol *),1,OMR,Compilation
dumpMethodTrees,dumpMethodTrees(char *,TR::ResolvedMethodSymbol *),0,OMR,Compilation
fe,fe(),1,OMR,Compilation
findDevirtualizedCall,findDevirtualizedCall(TR::Node *),1,OMR,Compilation
findExtraPrefetchInfo,findExtraPrefetchInfo(TR::Node *,_Bool),1,OMR,Compilation
findLastTree,findLastTree(),1,OMR,Compilation
findOrCreateDebug,findOrCreateDebug(),1,OMR,Compilation
findOrCreateDevirtualizedCall,findOrCreateDevirtualizedCall(TR::Node *,class TR_OpaqueClassBlock *),1,OMR,Compilation
findPrefetchInfo,findPrefetchInfo(TR::Node *),1,OMR,Compilation
findVirtualGuardInfo,findVirtualGuardInfo(TR::Node *),1,OMR,Compilation
foundOnTheStack,foundOnTheStack(class TR_ResolvedMethod *,int32_t),1,OMR,Compilation
freeKnownObjectTable,freeKnownObjectTable(),1,OMR,Compilation
generateAccurateNodeCount,generateAccurateNodeCount(),1,OMR,Compilation
generateArraylets,generateArraylets(),1,OMR,Compilation
getAccurateNodeCount,getAccurateNodeCount(),1,OMR,Compilation
getAddressEnumerationOption,getAddressEnumerationOption(enum TR_CompilationOptions),1,OMR,Compilation
getAotMethodCodeStart,getAotMethodCodeStart(),1,OMR,Compilation
getAppendInstruction,getAppendInstruction(),1,OMR,Compilation
getBitVectorPool,getBitVectorPool(),1,OMR,Compilation
getCheckcastNullChkInfo,getCheckcastNullChkInfo(),1,OMR,Compilation
getClassesThatShouldNotBeLoaded,getClassesThatShouldNotBeLoaded(),1,OMR,Compilation
getClassesThatShouldNotBeNewlyExtended,getClassesThatShouldNotBeNewlyExtended(),1,OMR,Compilation
getCodeCacheSwitched,getCodeCacheSwitched(),1,OMR,Compilation
getCompThreadID,getCompThreadID(),1,OMR,Compilation
getCpuTimeSpentInCompilation,getCpuTimeSpentInCompilation(),1,OMR,Compilation
getCurrentBlock,getCurrentBlock(),1,OMR,Compilation
getCurrentCodeCache,getCurrentCodeCache(),1,OMR,Compilation
getCurrentIlGenerator,getCurrentIlGenerator(),1,OMR,Compilation
getCurrentInlinedCallArgInfo,getCurrentInlinedCallArgInfo(),1,OMR,Compilation
getCurrentInlinedCallSite,getCurrentInlinedCallSite(),1,OMR,Compilation
getCurrentInlinedSiteIndex,getCurrentInlinedSiteIndex(),1,OMR,Compilation
getCurrentMethod,getCurrentMethod(),1,OMR,Compilation
getCurrentPeekingArgInfo,getCurrentPeekingArgInfo(),1,OMR,Compilation
getCurrentSymRefTab,getCurrentSymRefTab(),1,OMR,Compilation
getDeFactoHotness,getDeFactoHotness(),1,OMR,Compilation
getDebug,getDebug(),1,OMR,Compilation
getErrorCode,getErrorCode(),1,OMR,Compilation
getExtraPrefetchInfo,getExtraPrefetchInfo(),1,OMR,Compilation
getFailCHTableCommit,getFailCHTableCommit(),1,OMR,Compilation
getFirstColdInstruction,getFirstColdInstruction(),1,OMR,Compilation
getFirstDevirtualizedCall,getFirstDevirtualizedCall(),1,OMR,Compilation
getFirstInstruction,getFirstInstruction(),1,OMR,Compilation
getFlowGraph,getFlowGraph(),1,OMR,Compilation
getGPUBlockDimX,getGPUBlockDimX(),1,OMR,Compilation
getGPUKernelLineNumberList,getGPUKernelLineNumberList(),1,OMR,Compilation
getGPUParms,getGPUParms(),1,OMR,Compilation
getGPUPtxCount,getGPUPtxCount(),1,OMR,Compilation
getGPUPtxList,getGPUPtxList(),1,OMR,Compilation
getGlobalRegisterCandidates,getGlobalRegisterCandidates(),1,OMR,Compilation
getHCRMode,getHCRMode(),1,OMR,Compilation
getHasMethodHandleInvoke,getHasMethodHandleInvoke(),1,OMR,Compilation
getHotnessName,getHotnessName(enum TR_Hotness),1,OMR,Compilation
getHotnessName,getHotnessName(),0,OMR,Compilation
getInlineDepth,getInlineDepth(),1,OMR,Compilation
getInlinedCallArgInfoStack,getInlinedCallArgInfoStack(),1,OMR,Compilation
getInlinedCallSite,getInlinedCallSite(uint32_t),1,OMR,Compilation
getInlinedCallStack,getInlinedCallStack(),1,OMR,Compilation
getInlinedCallerSymRef,getInlinedCallerSymRef(uint32_t),1,OMR,Compilation
getInlinedCalls,getInlinedCalls(),1,OMR,Compilation
getInlinedResolvedMethod,getInlinedResolvedMethod(uint32_t),1,OMR,Compilation
getInlinedResolvedMethodSymbol,getInlinedResolvedMethodSymbol(uint32_t),1,OMR,Compilation
getJittedMethodSymbol,getJittedMethodSymbol(),1,OMR,Compilation
getKnownObjectTable,getKnownObjectTable(),1,OMR,Compilation
getLastBegunOptIndex,getLastBegunOptIndex(),1,OMR,Compilation
getLastPerformedOptIndex,getLastPerformedOptIndex(),1,OMR,Compilation
getLastPerformedOptSubIndex,getLastPerformedOptSubIndex(),1,OMR,Compilation
getLineNumber,getLineNumber(TR::Node *),1,OMR,Compilation
getLineNumberInCurrentMethod,getLineNumberInCurrentMethod(TR::Node *),1,OMR,Compilation
getLoopWasVersionedWrtAsyncChecks,getLoopWasVersionedWrtAsyncChecks(),1,OMR,Compilation
getMaxAliasIndex,getMaxAliasIndex(),1,OMR,Compilation
getMaxInlineDepth,getMaxInlineDepth(),1,OMR,Compilation
getMaxPeekedBytecodeSize,getMaxPeekedBytecodeSize(),1,OMR,Compilation
getMethodFromNode,getMethodFromNode(TR::Node *),1,OMR,Compilation
getMethodHotness,getMethodHotness(),1,OMR,Compilation
getMethodSnippetsToBePatchedOnClassUnload,getMethodSnippetsToBePatchedOnClassUnload(),1,OMR,Compilation
getMethodSymbol,getMethodSymbol(),1,OMR,Compilation
getNextOptLevel,getNextOptLevel(),1,OMR,Compilation
getNodeCount,getNodeCount(),1,OMR,Compilation
getNodeOpCodeLength,getNodeOpCodeLength(),1,OMR,Compilation
getNodePool,getNodePool(),1,OMR,Compilation
getNodesThatShouldPrefetchOffset,getNodesThatShouldPrefetchOffset(),1,OMR,Compilation
getNumInlinedCallSites,getNumInlinedCallSites(),1,OMR,Compilation
getNumLivePendingPushSlots,getNumLivePendingPushSlots(),1,OMR,Compilation
getNumLoopNestingLevels,getNumLoopNestingLevels(),1,OMR,Compilation
getNumReservedIPICTrampolines,getNumReservedIPICTrampolines(),1,OMR,Compilation
getOSRCallSiteRemat,getOSRCallSiteRemat(uint32_t,uint32_t,TR::SymbolReference *&,TR::SymbolReference *&),1,OMR,Compilation
getOSRCallSiteRematSize,getOSRCallSiteRematSize(uint32_t),1,OMR,Compilation
getOSRCompilationData,getOSRCompilationData(),1,OMR,Compilation
getOSRInductionOffset,getOSRInductionOffset(TR::Node *),1,OMR,Compilation
getOSRMode,getOSRMode(),1,OMR,Compilation
getOSRTransitionTarget,getOSRTransitionTarget(),1,OMR,Compilation
getOptIndex,getOptIndex(),1,OMR,Compilation
getOptLevel,getOptLevel(),1,OMR,Compilation
getOptSubIndex,getOptSubIndex(),1,OMR,Compilation
getOptimizationPlan,getOptimizationPlan(),1,OMR,Compilation
getOptimizer,getOptimizer(),1,OMR,Compilation
getOption,getOption(enum TR_CompilationOptions),1,OMR,Compilation
getOptions,getOptions(),1,OMR,Compilation
getOrCreateKnownObjectTable,getOrCreateKnownObjectTable(),1,OMR,Compilation
getOutFile,getOutFile(),1,OMR,Compilation
getOwningMethodSymbol,getOwningMethodSymbol(class mcount_t),1,OMR,Compilation
getOwningMethodSymbol,getOwningMethodSymbol(class TR_ResolvedMethod *),0,OMR,Compilation
getOwningMethodSymbol,getOwningMethodSymbol(class TR_OpaqueMethodBlock *),0,OMR,Compilation
getPeekingArgInfo,getPeekingArgInfo(),1,OMR,Compilation
getPeekingSymRefTab,getPeekingSymRefTab(),1,OMR,Compilation
getPersistentInfo,getPersistentInfo(),1,OMR,Compilation
getPrevSymRefTabSize,getPrevSymRefTabSize(),1,OMR,Compilation
getRecompilationInfo,getRecompilationInfo(),1,OMR,Compilation
getResolvedMethodSymbolReference,getResolvedMethodSymbolReference(class mcount_t),1,OMR,Compilation
getReturnInfo,getReturnInfo(),1,OMR,Compilation
getScratchSpaceLimit,getScratchSpaceLimit(),1,OMR,Compilation
getSnippetsToBePatchedOnClassRedefinition,getSnippetsToBePatchedOnClassRedefinition(),1,OMR,Compilation
getSnippetsToBePatchedOnClassUnload,getSnippetsToBePatchedOnClassUnload(),1,OMR,Compilation
getSnippetsToBePatchedOnRegisterNative,getSnippetsToBePatchedOnRegisterNative(),1,OMR,Compilation
getStartBlock,getStartBlock(),1,OMR,Compilation
getStartTree,getStartTree(),1,OMR,Compilation
getStaticHCRPICSites,getStaticHCRPICSites(),1,OMR,Compilation
getStaticMethodPICSites,getStaticMethodPICSites(),1,OMR,Compilation
getStaticPICSites,getStaticPICSites(),1,OMR,Compilation
getSymRefCount,getSymRefCount(),1,OMR,Compilation
getSymRefTab,getSymRefTab(),1,OMR,Compilation
getSymbolReferenceByReferenceNumber,getSymbolReferenceByReferenceNumber(int32_t),1,OMR,Compilation
getToCommentMap,getToCommentMap(),1,OMR,Compilation
getToNumberMap,getToNumberMap(),1,OMR,Compilation
getToStringMap,getToStringMap(),1,OMR,Compilation
getUsesBlockFrequencyInGRA,getUsesBlockFrequencyInGRA(),1,OMR,Compilation
getVerboseOptTransformationCount,getVerboseOptTransformationCount(),1,OMR,Compilation
getVirtualGuards,getVirtualGuards(),1,OMR,Compilation
getVisitCount,getVisitCount(),1,OMR,Compilation
hasBlockFrequencyInfo,hasBlockFrequencyInfo(),1,OMR,Compilation
hasClassExtendAssumptions,hasClassExtendAssumptions(),1,OMR,Compilation
hasClassPreInitializeAssumptions,hasClassPreInitializeAssumptions(),1,OMR,Compilation
hasClassRedefinitionAssumptions,hasClassRedefinitionAssumptions(),1,OMR,Compilation
hasClassUnloadAssumptions,hasClassUnloadAssumptions(),1,OMR,Compilation
hasColdBlocks,hasColdBlocks(),1,OMR,Compilation
hasLargeNumberOfLoops,hasLargeNumberOfLoops(),1,OMR,Compilation
hasMethodOverrideAssumptions,hasMethodOverrideAssumptions(),1,OMR,Compilation
hasNativeCall,hasNativeCall(),1,OMR,Compilation
hasNews,hasNews(),1,OMR,Compilation
hasUnsafeSymbol,hasUnsafeSymbol(),1,OMR,Compilation
haveCommittedCallSiteInfo,haveCommittedCallSiteInfo(),1,OMR,Compilation
ilGenRequest,ilGenRequest(),1,OMR,Compilation
ilGenTrace,ilGenTrace(),1,OMR,Compilation
incGPUPtxCount,incGPUPtxCount(),1,OMR,Compilation
incInlineDepth,incInlineDepth(class TR_OpaqueMethodBlock *,TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *),1,OMR,Compilation
incInlineDepth,incInlineDepth(TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,int32_t,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *),0,OMR,Compilation
incInlinedCalls,incInlinedCalls(),1,OMR,Compilation
incNumLivePendingPushSlots,incNumLivePendingPushSlots(int32_t),1,OMR,Compilation
incNumLoopNestingLevels,incNumLoopNestingLevels(int32_t),1,OMR,Compilation
incOptIndex,incOptIndex(),1,OMR,Compilation
incOptSubIndex,incOptSubIndex(),1,OMR,Compilation
incOrResetVisitCount,incOrResetVisitCount(),1,OMR,Compilation
incVerboseOptTransformationCount,incVerboseOptTransformationCount(int32_t),1,OMR,Compilation
incVisitCount,incVisitCount(),1,OMR,Compilation
incrNodeOpCodeLength,incrNodeOpCodeLength(int32_t),1,OMR,Compilation
isCpuExpensiveCompilation,isCpuExpensiveCompilation(int64_t),1,OMR,Compilation
isDLT,isDLT(),1,OMR,Compilation
isDisabled,isDisabled(OMR::Optimizations),1,OMR,Compilation
isGPUCompilation,isGPUCompilation(),1,OMR,Compilation
isGPUCompileCPUCode,isGPUCompileCPUCode(),1,OMR,Compilation
isInlinedDirectCall,isInlinedDirectCall(uint32_t),1,OMR,Compilation
isJProfilingCompilation,isJProfilingCompilation(),1,OMR,Compilation
isLoopTransferDone,isLoopTransferDone(),1,OMR,Compilation
isOSRTransitionTarget,isOSRTransitionTarget(TR::OSRTransitionTarget),1,OMR,Compilation
isOptServer,isOptServer(),1,OMR,Compilation
isOutermostMethod,isOutermostMethod(),1,OMR,Compilation
isPICSite,isPICSite(TR::Instruction *),1,OMR,Compilation
isPeekingMethod,isPeekingMethod(),1,OMR,Compilation
isPinningNeeded,isPinningNeeded(),1,OMR,Compilation
isPotentialOSRPoint,isPotentialOSRPoint(TR::Node *,TR::Node **),1,OMR,Compilation
isPotentialOSRPointWithSupport,isPotentialOSRPointWithSupport(TR::TreeTop *),1,OMR,Compilation
isProfilingCompilation,isProfilingCompilation(),1,OMR,Compilation
isRecompilationEnabled,isRecompilationEnabled(),1,OMR,Compilation
isServerInlining,isServerInlining(),1,OMR,Compilation
isShortRunningMethod,isShortRunningMethod(int32_t),1,OMR,Compilation
isVirtualGuardNOPingRequired,isVirtualGuardNOPingRequired(class TR_VirtualGuard *),1,OMR,Compilation
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Compilation
jitPersistentFree,jitPersistentFree(void *),1,OMR,Compilation
matchingCallStackPrefixLength,matchingCallStackPrefixLength(TR_ByteCodeInfo &),1,OMR,Compilation
maxInternalPointers,maxInternalPointers(),1,OMR,Compilation
mayHaveLoops,mayHaveLoops(),1,OMR,Compilation
mustNotBeRecompiled,mustNotBeRecompiled(),1,OMR,Compilation
nodeNeeds2Regs,nodeNeeds2Regs(TR::Node *),1,OMR,Compilation
notYetRunMeansCold,notYetRunMeansCold(),1,OMR,Compilation
omrVMThread,omrVMThread(),1,OMR,Compilation
operator delete,operator delete(void *,size_t),1,OMR,Compilation
operator delete,operator delete(void *,TR::Region &),0,OMR,Compilation
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Compilation
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Compilation
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Compilation
operator delete[],operator delete[](void *,TR::Region &),1,OMR,Compilation
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Compilation
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Compilation
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Compilation
operator new,operator new(size_t,class TR_PersistentMemory *),1,OMR,Compilation
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Compilation
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Compilation
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Compilation
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Compilation
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Compilation
operator new,operator new(size_t,TR::Region &),0,OMR,Compilation
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Compilation
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Compilation
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Compilation
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Compilation
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Compilation
operator new[],operator new[](size_t,TR::Region &),0,OMR,Compilation
osrInfrastructureRemoved,osrInfrastructureRemoved(),1,OMR,Compilation
osrStateIsReliable,osrStateIsReliable(),1,OMR,Compilation
penalizePredsOfOSRCatchBlocksInGRA,penalizePredsOfOSRCatchBlocksInGRA(),1,OMR,Compilation
performOptimizations,performOptimizations(),1,OMR,Compilation
performVirtualGuardNOPing,performVirtualGuardNOPing(),1,OMR,Compilation
phaseMemProfiler,phaseMemProfiler(),1,OMR,Compilation
phaseTimer,phaseTimer(),1,OMR,Compilation
primaryRandom,primaryRandom(),1,OMR,Compilation
printMemStats,printMemStats(const char *),1,OMR,Compilation
printMemStatsAfter,printMemStatsAfter(const char *),1,OMR,Compilation
printMemStatsBefore,printMemStatsBefore(const char *),1,OMR,Compilation
printMemStatsCS2,printMemStatsCS2(),1,OMR,Compilation
recordBegunOpt,recordBegunOpt(),1,OMR,Compilation
recordPerformedOptTransformation,recordPerformedOptTransformation(),1,OMR,Compilation
region,region(),1,OMR,Compilation
registerResolvedMethodSymbolReference,registerResolvedMethodSymbolReference(TR::SymbolReference *),1,OMR,Compilation
removeExtraPrefetchInfo,removeExtraPrefetchInfo(TR::Node *),1,OMR,Compilation
removePeekingArgInfo,removePeekingArgInfo(),1,OMR,Compilation
removeVirtualGuard,removeVirtualGuard(class TR_VirtualGuard *),1,OMR,Compilation
reportAnalysisPhase,reportAnalysisPhase(uint8_t),1,OMR,Compilation
reportFailure,reportFailure(const char *),1,OMR,Compilation
reportILGeneratorPhase,reportILGeneratorPhase(),1,OMR,Compilation
reportOptimizationPhase,reportOptimizationPhase(OMR::Optimizations),1,OMR,Compilation
reportOptimizationPhaseForSnap,reportOptimizationPhaseForSnap(OMR::Optimizations),1,OMR,Compilation
requiresAnalysisOSRPoint,requiresAnalysisOSRPoint(TR::Node *),1,OMR,Compilation
requiresSpineChecks,requiresSpineChecks(),1,OMR,Compilation
resetInlineDepth,resetInlineDepth(),1,OMR,Compilation
resetVisitCounts,resetVisitCounts(vcount_t,TR::ResolvedMethodSymbol *),1,OMR,Compilation
resetVisitCounts,resetVisitCounts(vcount_t),0,OMR,Compilation
resetVisitCounts,resetVisitCounts(vcount_t,TR::TreeTop *),0,OMR,Compilation
restoreCompilationPhase,restoreCompilationPhase(CompilationPhase),1,OMR,Compilation
restoreInlineDepth,restoreInlineDepth(TR_ByteCodeInfo &),1,OMR,Compilation
restoreInlineDepthUntil,restoreInlineDepthUntil(int32_t,TR_ByteCodeInfo &),1,OMR,Compilation
saveCompilationPhase,saveCompilationPhase(),1,OMR,Compilation
self,self(),1,OMR,Compilation
setAllocatorName,setAllocatorName(const char *),1,OMR,Compilation
setAotMethodCodeStart,setAotMethodCodeStart(void *),1,OMR,Compilation
setAppendInstruction,setAppendInstruction(TR::Instruction *),1,OMR,Compilation
setCanAffordOSRControlFlow,setCanAffordOSRControlFlow(_Bool),1,OMR,Compilation
setCannotAttemptOSRDuring,setCannotAttemptOSRDuring(uint32_t,_Bool),1,OMR,Compilation
setCommittedCallSiteInfo,setCommittedCallSiteInfo(_Bool),1,OMR,Compilation
setContainsBigDecimalLoad,setContainsBigDecimalLoad(_Bool),1,OMR,Compilation
setCurrentBlock,setCurrentBlock(TR::Block *),1,OMR,Compilation
setCurrentCodeCache,setCurrentCodeCache(TR::CodeCache *),1,OMR,Compilation
setCurrentIlGenerator,setCurrentIlGenerator(class TR_IlGenerator *),1,OMR,Compilation
setCurrentSymRefTab,setCurrentSymRefTab(TR::SymbolReferenceTable *),1,OMR,Compilation
setDebug,setDebug(class TR_Debug *),1,OMR,Compilation
setErrorCode,setErrorCode(int32_t),1,OMR,Compilation
setFailCHTableCommit,setFailCHTableCommit(_Bool),1,OMR,Compilation
setFirstColdInstruction,setFirstColdInstruction(TR::Instruction *),1,OMR,Compilation
setFirstInstruction,setFirstInstruction(TR::Instruction *),1,OMR,Compilation
setGPUBlockDimX,setGPUBlockDimX(int32_t),1,OMR,Compilation
setGPUParms,setGPUParms(void *),1,OMR,Compilation
setGlobalRegisterCandidates,setGlobalRegisterCandidates(class TR_RegisterCandidates *),1,OMR,Compilation
setHasClassExtendAssumptions,setHasClassExtendAssumptions(_Bool),1,OMR,Compilation
setHasClassPreInitializeAssumptions,setHasClassPreInitializeAssumptions(_Bool),1,OMR,Compilation
setHasClassRedefinitionAssumptions,setHasClassRedefinitionAssumptions(_Bool),1,OMR,Compilation
setHasClassUnloadAssumptions,setHasClassUnloadAssumptions(_Bool),1,OMR,Compilation
setHasColdBlocks,setHasColdBlocks(),1,OMR,Compilation
setHasMethodHandleInvoke,setHasMethodHandleInvoke(),1,OMR,Compilation
setHasMethodOverrideAssumptions,setHasMethodOverrideAssumptions(_Bool),1,OMR,Compilation
setHasNativeCall,setHasNativeCall(),1,OMR,Compilation
setHasUnsafeSymbol,setHasUnsafeSymbol(),1,OMR,Compilation
setIlVerifier,setIlVerifier(TR::IlVerifier *),1,OMR,Compilation
setLoopTransferDone,setLoopTransferDone(),1,OMR,Compilation
setLoopWasVersionedWrtAsyncChecks,setLoopWasVersionedWrtAsyncChecks(_Bool),1,OMR,Compilation
setNextOptLevel,setNextOptLevel(enum TR_Hotness),1,OMR,Compilation
setNodeOpCodeLength,setNodeOpCodeLength(int32_t),1,OMR,Compilation
setNumReservedIPICTrampolines,setNumReservedIPICTrampolines(int32_t),1,OMR,Compilation
setOSRCallSiteRemat,setOSRCallSiteRemat(uint32_t,TR::SymbolReference *,TR::SymbolReference *),1,OMR,Compilation
setOSRInfrastructureRemoved,setOSRInfrastructureRemoved(_Bool),1,OMR,Compilation
setOptIndex,setOptIndex(int16_t),1,OMR,Compilation
setOptimizationPlan,setOptimizationPlan(class TR_OptimizationPlan *),1,OMR,Compilation
setOptimizer,setOptimizer(TR::Optimizer *),1,OMR,Compilation
setOption,setOption(enum TR_CompilationOptions),1,OMR,Compilation
setOsrStateIsReliable,setOsrStateIsReliable(_Bool),1,OMR,Compilation
setOutFile,setOutFile(TR::FILE *),1,OMR,Compilation
setPeekingSymRefTab,setPeekingSymRefTab(TR::SymbolReferenceTable *),1,OMR,Compilation
setPrevSymRefTabSize,setPrevSymRefTabSize(int32_t),1,OMR,Compilation
setRecompilationInfo,setRecompilationInfo(TR::Recompilation *),1,OMR,Compilation
setReturnInfo,setReturnInfo(enum TR_ReturnInfo),1,OMR,Compilation
setScratchSpaceLimit,setScratchSpaceLimit(size_t),1,OMR,Compilation
setSeenClassPreventingInducedOSR,setSeenClassPreventingInducedOSR(),1,OMR,Compilation
setSlotsSharedByRefAndNonRef,setSlotsSharedByRefAndNonRef(_Bool),1,OMR,Compilation
setStartTree,setStartTree(TR::TreeTop *),1,OMR,Compilation
setSupressEarlyInlining,setSupressEarlyInlining(_Bool),1,OMR,Compilation
setSyncsMarked,setSyncsMarked(),1,OMR,Compilation
setUseLongRegAllocation,setUseLongRegAllocation(_Bool),1,OMR,Compilation
setUsesBlockFrequencyInGRA,setUsesBlockFrequencyInGRA(),1,OMR,Compilation
setUsesPreexistence,setUsesPreexistence(_Bool),1,OMR,Compilation
setVisitCount,setVisitCount(vcount_t),1,OMR,Compilation
shouldBeRecompiled,shouldBeRecompiled(),1,OMR,Compilation
shutdown,shutdown(class TR_FrontEnd *),1,OMR,Compilation
signature,signature(),1,OMR,Compilation
supportsInduceOSR,supportsInduceOSR(),1,OMR,Compilation
suppressAllocationInlining,suppressAllocationInlining(),1,OMR,Compilation
supressEarlyInlining,supressEarlyInlining(),1,OMR,Compilation
switchCodeCache,switchCodeCache(TR::CodeCache *),1,OMR,Compilation
syncsMarked,syncsMarked(),1,OMR,Compilation
trHeapMemory,trHeapMemory(),1,OMR,Compilation
trMemory,trMemory(),1,OMR,Compilation
trPersistentMemory,trPersistentMemory(),1,OMR,Compilation
trStackMemory,trStackMemory(),1,OMR,Compilation
trace,trace(OMR::Optimizations),1,OMR,Compilation
useAnchors,useAnchors(),1,OMR,Compilation
useCompressedPointers,useCompressedPointers(),1,OMR,Compilation
useLongRegAllocation,useLongRegAllocation(),1,OMR,Compilation
useRegisterMaps,useRegisterMaps(),1,OMR,Compilation
usesPreexistence,usesPreexistence(),1,OMR,Compilation
verifyBlocks,verifyBlocks(TR::ResolvedMethodSymbol *),1,OMR,Compilation
verifyCFG,verifyCFG(TR::ResolvedMethodSymbol *),1,OMR,Compilation
verifyTrees,verifyTrees(TR::ResolvedMethodSymbol *),1,OMR,Compilation
~Compilation,~Compilation(),1,OMR,Compilation
CompilerEnv,CompilerEnv(const class OMR::CompilerEnv &),1,OMR,CompilerEnv
CompilerEnv,CompilerEnv(TR::RawAllocator,const TR::PersistentAllocatorKit &),0,OMR,CompilerEnv
CompilerEnv,CompilerEnv(class OMR::CompilerEnv &&),0,OMR,CompilerEnv
CompilerEnv,CompilerEnv(class TR::CompilerEnv &&),0,TR,CompilerEnv
initialize,initialize(),1,OMR,CompilerEnv
initializeHostEnvironment,initializeHostEnvironment(),1,OMR,CompilerEnv
initializeTargetEnvironment,initializeTargetEnvironment(),1,OMR,CompilerEnv
isInitialized,isInitialized(),1,OMR,CompilerEnv
operator=,operator=(const class OMR::CompilerEnv &),1,OMR,CompilerEnv
operator=,operator=(class OMR::CompilerEnv &&),0,OMR,CompilerEnv
operator=,operator=(class TR::CompilerEnv &&),0,TR,CompilerEnv
persistentAllocator,persistentAllocator(),1,OMR,CompilerEnv
self,self(),1,OMR,CompilerEnv
DataType,DataType(TR::DataTypes),1,OMR,DataType
DataType,DataType(),0,OMR,DataType
DataType,DataType(const class OMR::DataType &),0,OMR,DataType
DataType,DataType(class OMR::DataType &&),0,OMR,DataType
DataType,DataType(const class TR::DataType &),0,TR,DataType
DataType,DataType(class TR::DataType &&),0,TR,DataType
canGetMaxPrecisionFromType,canGetMaxPrecisionFromType(),1,OMR,DataType
getDataType,getDataType(),1,OMR,DataType
getDataTypeConversion,getDataTypeConversion(TR::DataType,TR::DataType),1,OMR,DataType
getFloatTypeFromSize,getFloatTypeFromSize(int32_t),1,OMR,DataType
getIntegralTypeFromPrecision,getIntegralTypeFromPrecision(int32_t),1,OMR,DataType
getMaxPrecisionFromType,getMaxPrecisionFromType(),1,OMR,DataType
getName,getName(TR::DataType),1,OMR,DataType
getPrefix,getPrefix(TR::DataType),1,OMR,DataType
getSize,getSize(TR::DataType),1,OMR,DataType
getVectorElementType,getVectorElementType(),1,OMR,DataType
getVectorIntegralType,getVectorIntegralType(),1,OMR,DataType
isAddress,isAddress(),1,OMR,DataType
isAggregate,isAggregate(),1,OMR,DataType
isBFPorHFP,isBFPorHFP(),1,OMR,DataType
isDouble,isDouble(),1,OMR,DataType
isFloatingPoint,isFloatingPoint(),1,OMR,DataType
isInt16,isInt16(),1,OMR,DataType
isInt32,isInt32(),1,OMR,DataType
isInt64,isInt64(),1,OMR,DataType
isInt8,isInt8(),1,OMR,DataType
isIntegral,isIntegral(),1,OMR,DataType
isVector,isVector(),1,OMR,DataType
operator int,operator int(),1,OMR,DataType
operator!=,operator!=(const TR::DataType &),1,OMR,DataType
operator!=,operator!=(TR::DataTypes),0,OMR,DataType
operator<,operator<(const TR::DataType &),1,OMR,DataType
operator<,operator<(TR::DataTypes),0,OMR,DataType
operator<=,operator<=(TR::DataTypes),1,OMR,DataType
operator<=,operator<=(const TR::DataType &),0,OMR,DataType
operator=,operator=(TR::DataTypes),1,OMR,DataType
operator=,operator=(const TR::DataType &),0,OMR,DataType
operator==,operator==(const TR::DataType &),1,OMR,DataType
operator==,operator==(TR::DataTypes),0,OMR,DataType
operator>,operator>(const TR::DataType &),1,OMR,DataType
operator>,operator>(TR::DataTypes),0,OMR,DataType
operator>=,operator>=(TR::DataTypes),1,OMR,DataType
operator>=,operator>=(const TR::DataType &),0,OMR,DataType
scalarToVector,scalarToVector(),1,OMR,DataType
setSize,setSize(TR::DataType,int32_t),1,OMR,DataType
toString,toString(),1,OMR,DataType
vectorToScalar,vectorToScalar(),1,OMR,DataType
~DataType,~DataType(),1,OMR,DataType
DebugCounter,DebugCounter(const char *,int8_t,class TR::DebugCounter *,int8_t),1,TR,DebugCounter
DebugCounterBase,DebugCounterBase(class TR::DebugCounterBase &&),1,TR,DebugCounterBase
DebugCounterBase,DebugCounterBase(const class TR::DebugCounterBase &),0,TR,DebugCounterBase
DebugCounterBase,DebugCounterBase(),0,TR,DebugCounterBase
accumulate,accumulate(),1,TR,DebugCounterBase
accumulate,accumulate(int64_t),0,TR,DebugCounter
contributesToDenominator,contributesToDenominator(),1,TR,DebugCounter
createBumpCounterNode,createBumpCounterNode(TR::Compilation *,TR::Node *),1,TR,DebugCounterBase
debugCounterBucketName,debugCounterBucketName(TR::Compilation *,int32_t,const char *),1,TR,DebugCounter
debugCounterName,debugCounterName(TR::Compilation *,const char *),1,TR,DebugCounter
getBumpCountAddress,getBumpCountAddress(),1,TR,DebugCounterBase
getBumpCountSymRef,getBumpCountSymRef(TR::Compilation *),1,TR,DebugCounterBase
getCount,getCount(),1,TR,DebugCounter
getDebugCounter,getDebugCounter(TR::Compilation *,const char *,int8_t,int32_t),1,TR,DebugCounter
getDenominator,getDenominator(),1,TR,DebugCounter
getFidelity,getFidelity(),1,TR,DebugCounter
getInsertionCounterNames,getInsertionCounterNames(TR::Compilation *,TR::Node *,const char *(&)[3]),1,TR,DebugCounter
getName,getName(),1,TR,DebugCounter
incStaticDebugCounter,incStaticDebugCounter(TR::Compilation *,const char *,int32_t),1,TR,DebugCounter
increment,increment(int64_t),1,TR,DebugCounter
isDenominator,isDenominator(),1,TR,DebugCounter
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,DebugCounter
jitPersistentFree,jitPersistentFree(void *),1,TR,DebugCounter
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,DebugCounter
operator delete,operator delete(void *,TR::Region &),0,TR,DebugCounter
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,DebugCounter
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounter
operator delete,operator delete(void *,size_t),0,TR,DebugCounter
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,TR,DebugCounter
operator delete[],operator delete[](void *,TR::Region &),0,TR,DebugCounter
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounter
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounter
operator new,operator new(size_t,TR::Region &),1,TR,DebugCounter
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,DebugCounter
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounter
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,DebugCounter
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,DebugCounter
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounter
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,DebugCounter
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,DebugCounter
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,DebugCounter
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounter
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,DebugCounter
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,DebugCounter
operator new[],operator new[](size_t,TR::Region &),0,TR,DebugCounter
operator=,operator=(class TR::DebugCounterBase &&),1,TR,DebugCounterBase
operator=,operator=(const class TR::DebugCounterBase &),0,TR,DebugCounterBase
operator=,operator=(class TR::DebugCounter &&),0,TR,DebugCounter
operator=,operator=(const class TR::DebugCounter &),0,TR,DebugCounter
prependDebugCounter,prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,int32_t,int8_t),1,TR,DebugCounter
prependDebugCounter,prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,int32_t,int8_t,int32_t),0,TR,DebugCounter
prependDebugCounter,prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,TR::Node *,int8_t,int32_t),0,TR,DebugCounter
prependDebugCounter,prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,TR::Node *,int8_t),0,TR,DebugCounter
prependDebugCounterBump,prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,int32_t),1,TR,DebugCounter
prependDebugCounterBump,prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,TR::Node *),0,TR,DebugCounter
reset,reset(),1,TR,DebugCounter
~DebugCounter,~DebugCounter(),1,TR,DebugCounter
~DebugCounterBase,~DebugCounterBase(),1,TR,DebugCounterBase
DebugCounterAggregation,DebugCounterAggregation(class TR_Memory *),1,TR,DebugCounterAggregation
aggregate,aggregate(class TR::DebugCounter *,int32_t),1,TR,DebugCounterAggregation
aggregateDebugCounterHistogram,aggregateDebugCounterHistogram(TR::Compilation *,TR::Node *,class TR::DebugCounter *,int32_t,int8_t,int32_t),1,TR,DebugCounterAggregation
aggregateDebugCounterInsertions,aggregateDebugCounterInsertions(TR::Compilation *,TR::Node *,class TR::DebugCounter *,int32_t,int8_t,int32_t),1,TR,DebugCounterAggregation
aggregateStandardCounters,aggregateStandardCounters(TR::Compilation *,TR::Node *,const char *,int32_t,int8_t,int32_t),1,TR,DebugCounterAggregation
hasAnyCounters,hasAnyCounters(),1,TR,DebugCounterAggregation
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,DebugCounterAggregation
jitPersistentFree,jitPersistentFree(void *),1,TR,DebugCounterAggregation
operator delete,operator delete(void *,TR::Region &),1,TR,DebugCounterAggregation
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounterAggregation
operator delete,operator delete(void *,size_t),0,TR,DebugCounterAggregation
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounterAggregation
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,DebugCounterAggregation
operator delete[],operator delete[](void *,TR::Region &),1,TR,DebugCounterAggregation
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,DebugCounterAggregation
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounterAggregation
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounterAggregation
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,DebugCounterAggregation
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,DebugCounterAggregation
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,DebugCounterAggregation
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounterAggregation
operator new,operator new(size_t,TR::Region &),0,TR,DebugCounterAggregation
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,DebugCounterAggregation
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,DebugCounterAggregation
operator new[],operator new[](size_t,TR::Region &),1,TR,DebugCounterAggregation
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,DebugCounterAggregation
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,DebugCounterAggregation
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,DebugCounterAggregation
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounterAggregation
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounterAggregation
operator=,operator=(class TR::DebugCounterAggregation &&),0,TR,DebugCounterAggregation
operator=,operator=(const class TR::DebugCounterAggregation &),0,TR,DebugCounterAggregation
~DebugCounterAggregation,~DebugCounterAggregation(),1,TR,DebugCounterAggregation
Environment,Environment(),1,OMR,Environment
Environment,Environment(class OMR::Environment &&),0,OMR,Environment
Environment,Environment(const class OMR::Environment &),0,OMR,Environment
Environment,Environment(TR::MajorOperatingSystem,TR::Bitness),0,OMR,Environment
Environment,Environment(const class TR::Environment &),0,TR,Environment
Environment,Environment(class TR::Environment &&),0,TR,Environment
bitness,bitness(),1,OMR,Environment
is32Bit,is32Bit(),1,OMR,Environment
is64Bit,is64Bit(),1,OMR,Environment
isAIX,isAIX(),1,OMR,Environment
isLinux,isLinux(),1,OMR,Environment
isOSX,isOSX(),1,OMR,Environment
isSMP,isSMP(),1,OMR,Environment
isUnix,isUnix(),1,OMR,Environment
isWindows,isWindows(),1,OMR,Environment
isZOS,isZOS(),1,OMR,Environment
majorOS,majorOS(),1,OMR,Environment
numberOfProcessors,numberOfProcessors(),1,OMR,Environment
operator=,operator=(class OMR::Environment &&),1,OMR,Environment
operator=,operator=(const class OMR::Environment &),0,OMR,Environment
operator=,operator=(class TR::Environment &&),0,TR,Environment
operator=,operator=(const class TR::Environment &),0,TR,Environment
setBitness,setBitness(TR::Bitness),1,OMR,Environment
setMajorOS,setMajorOS(TR::MajorOperatingSystem),1,OMR,Environment
setNumberOfProcessors,setNumberOfProcessors(uint32_t),1,OMR,Environment
setSMP,setSMP(_Bool),1,OMR,Environment
~Environment,~Environment(),1,OMR,Environment
GCRegisterMap,GCRegisterMap(class OMR::GCRegisterMap &&),1,OMR,GCRegisterMap
GCRegisterMap,GCRegisterMap(const class OMR::GCRegisterMap &),0,OMR,GCRegisterMap
GCRegisterMap,GCRegisterMap(),0,OMR,GCRegisterMap
GCRegisterMap,GCRegisterMap(class TR::GCRegisterMap &&),0,TR,GCRegisterMap
GCRegisterMap,GCRegisterMap(const class TR::GCRegisterMap &),0,TR,GCRegisterMap
empty,empty(),1,OMR,GCRegisterMap
emptyHPR,emptyHPR(),1,OMR,GCRegisterMap
getHPRMap,getHPRMap(),1,OMR,GCRegisterMap
getMap,getMap(),1,OMR,GCRegisterMap
getRegisterSaveDescription,getRegisterSaveDescription(),1,OMR,GCRegisterMap
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,GCRegisterMap
jitPersistentFree,jitPersistentFree(void *),1,OMR,GCRegisterMap
maskRegisters,maskRegisters(uint32_t),1,OMR,GCRegisterMap
maskRegistersWithInfoBits,maskRegistersWithInfoBits(uint32_t,uint32_t),1,OMR,GCRegisterMap
operator delete,operator delete(void *,size_t),1,OMR,GCRegisterMap
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,GCRegisterMap
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,GCRegisterMap
operator delete,operator delete(void *,TR::Region &),0,OMR,GCRegisterMap
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,GCRegisterMap
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,GCRegisterMap
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,GCRegisterMap
operator delete[],operator delete[](void *,TR::Region &),0,OMR,GCRegisterMap
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,GCRegisterMap
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,GCRegisterMap
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,GCRegisterMap
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,GCRegisterMap
operator new,operator new(size_t,TR::Region &),0,OMR,GCRegisterMap
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,GCRegisterMap
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,GCRegisterMap
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,GCRegisterMap
operator new[],operator new[](size_t,TR::Region &),1,OMR,GCRegisterMap
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,GCRegisterMap
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,GCRegisterMap
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,GCRegisterMap
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,GCRegisterMap
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,GCRegisterMap
resetHighWordRegisterBits,resetHighWordRegisterBits(uint32_t),1,OMR,GCRegisterMap
resetRegisterBits,resetRegisterBits(uint32_t),1,OMR,GCRegisterMap
self,self(),1,OMR,GCRegisterMap
setHighWordRegisterBits,setHighWordRegisterBits(uint32_t),1,OMR,GCRegisterMap
setInfoBits,setInfoBits(uint32_t),1,OMR,GCRegisterMap
setRegisterBits,setRegisterBits(uint32_t),1,OMR,GCRegisterMap
setRegisterSaveDescription,setRegisterSaveDescription(uint32_t),1,OMR,GCRegisterMap
~GCRegisterMap,~GCRegisterMap(),1,OMR,GCRegisterMap
GCStackAtlas,GCStackAtlas(const class OMR::GCStackAtlas &),1,OMR,GCStackAtlas
GCStackAtlas,GCStackAtlas(uint32_t,uint32_t,class TR_Memory *),0,OMR,GCStackAtlas
GCStackAtlas,GCStackAtlas(class OMR::GCStackAtlas &&),0,OMR,GCStackAtlas
addPinningArrayPtrForInternalPtrReg,addPinningArrayPtrForInternalPtrReg(TR::AutomaticSymbol *),1,OMR,GCStackAtlas
addStackMap,addStackMap(class TR_GCStackMap *),1,OMR,GCStackAtlas
assignGCIndex,assignGCIndex(),1,OMR,GCStackAtlas
close,close(TR::CodeGenerator *),1,OMR,GCStackAtlas
decNumberOfMaps,decNumberOfMaps(),1,OMR,GCStackAtlas
getAtlasBits,getAtlasBits(),1,OMR,GCStackAtlas
getIndexOfFirstInternalPointer,getIndexOfFirstInternalPointer(),1,OMR,GCStackAtlas
getIndexOfFirstSpillTemp,getIndexOfFirstSpillTemp(),1,OMR,GCStackAtlas
getInternalPointerMap,getInternalPointerMap(),1,OMR,GCStackAtlas
getLocalBaseOffset,getLocalBaseOffset(),1,OMR,GCStackAtlas
getLocalMap,getLocalMap(),1,OMR,GCStackAtlas
getNumberOfDistinctPinningArrays,getNumberOfDistinctPinningArrays(),1,OMR,GCStackAtlas
getNumberOfLocalSlotsMapped,getNumberOfLocalSlotsMapped(),1,OMR,GCStackAtlas
getNumberOfMaps,getNumberOfMaps(),1,OMR,GCStackAtlas
getNumberOfParmSlotsMapped,getNumberOfParmSlotsMapped(),1,OMR,GCStackAtlas
getNumberOfPendingPushSlots,getNumberOfPendingPushSlots(),1,OMR,GCStackAtlas
getNumberOfSlotsMapped,getNumberOfSlotsMapped(),1,OMR,GCStackAtlas
getNumberOfSlotsToBeInitialized,getNumberOfSlotsToBeInitialized(),1,OMR,GCStackAtlas
getOffsetOfFirstInternalPointer,getOffsetOfFirstInternalPointer(),1,OMR,GCStackAtlas
getParameterMap,getParameterMap(),1,OMR,GCStackAtlas
getParmBaseOffset,getParmBaseOffset(),1,OMR,GCStackAtlas
getPinningArrayPtrsForInternalPtrRegs,getPinningArrayPtrsForInternalPtrRegs(),1,OMR,GCStackAtlas
getStackAllocMap,getStackAllocMap(),1,OMR,GCStackAtlas
getStackMapList,getStackMapList(),1,OMR,GCStackAtlas
hasUninitializedPinningArrayPointer,hasUninitializedPinningArrayPointer(),1,OMR,GCStackAtlas
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,GCStackAtlas
jitPersistentFree,jitPersistentFree(void *),1,OMR,GCStackAtlas
operator delete,operator delete(void *,TR::Region &),1,OMR,GCStackAtlas
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,GCStackAtlas
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,GCStackAtlas
operator delete,operator delete(void *,size_t),0,OMR,GCStackAtlas
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,GCStackAtlas
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,GCStackAtlas
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,GCStackAtlas
operator delete[],operator delete[](void *,TR::Region &),0,OMR,GCStackAtlas
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,GCStackAtlas
operator new,operator new(size_t,TR::Region &),1,OMR,GCStackAtlas
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,GCStackAtlas
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,GCStackAtlas
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,GCStackAtlas
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,GCStackAtlas
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,GCStackAtlas
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,GCStackAtlas
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,GCStackAtlas
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,GCStackAtlas
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,GCStackAtlas
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,GCStackAtlas
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,GCStackAtlas
operator new[],operator new[](size_t,TR::Region &),0,OMR,GCStackAtlas
removePinningArrayPtrForInternalPtrReg,removePinningArrayPtrForInternalPtrReg(TR::AutomaticSymbol *),1,OMR,GCStackAtlas
self,self(),1,OMR,GCStackAtlas
setAtlasBits,setAtlasBits(uint8_t *),1,OMR,GCStackAtlas
setHasUninitializedPinningArrayPointer,setHasUninitializedPinningArrayPointer(_Bool),1,OMR,GCStackAtlas
setIndexOfFirstInternalPointer,setIndexOfFirstInternalPointer(int32_t),1,OMR,GCStackAtlas
setIndexOfFirstSpillTemp,setIndexOfFirstSpillTemp(uint32_t),1,OMR,GCStackAtlas
setInternalPointerMap,setInternalPointerMap(class TR_InternalPointerMap *),1,OMR,GCStackAtlas
setLocalBaseOffset,setLocalBaseOffset(int32_t),1,OMR,GCStackAtlas
setLocalMap,setLocalMap(class TR_GCStackMap *),1,OMR,GCStackAtlas
setNumberOfMaps,setNumberOfMaps(uint32_t),1,OMR,GCStackAtlas
setNumberOfPendingPushSlots,setNumberOfPendingPushSlots(uint32_t),1,OMR,GCStackAtlas
setNumberOfSlotsMapped,setNumberOfSlotsMapped(uint32_t),1,OMR,GCStackAtlas
setNumberOfSlotsToBeInitialized,setNumberOfSlotsToBeInitialized(uint32_t),1,OMR,GCStackAtlas
setOffsetOfFirstInternalPointer,setOffsetOfFirstInternalPointer(int32_t),1,OMR,GCStackAtlas
setParameterMap,setParameterMap(class TR_GCStackMap *),1,OMR,GCStackAtlas
setParmBaseOffset,setParmBaseOffset(int32_t),1,OMR,GCStackAtlas
setStackAllocMap,setStackAllocMap(class TR_GCStackAllocMap *),1,OMR,GCStackAtlas
trMemory,trMemory(),1,OMR,GCStackAtlas
IL,IL(class OMR::IL &&),1,OMR,IL
IL,IL(const class OMR::IL &),0,OMR,IL
IL,IL(class TR::IL &&),0,TR,IL
IL,IL(const class TR::IL &),0,TR,IL
opCodeForCompareEquals,opCodeForCompareEquals(TR::DataType),1,OMR,IL
opCodeForCompareGreaterOrEquals,opCodeForCompareGreaterOrEquals(TR::DataType),1,OMR,IL
opCodeForCompareGreaterThan,opCodeForCompareGreaterThan(TR::DataType),1,OMR,IL
opCodeForCompareLessOrEquals,opCodeForCompareLessOrEquals(TR::DataType),1,OMR,IL
opCodeForCompareLessThan,opCodeForCompareLessThan(TR::DataType),1,OMR,IL
opCodeForCompareNotEquals,opCodeForCompareNotEquals(TR::DataType),1,OMR,IL
opCodeForConst,opCodeForConst(TR::DataType),1,OMR,IL
opCodeForCorrespondingIndirectLoad,opCodeForCorrespondingIndirectLoad(TR::ILOpCodes),1,OMR,IL
opCodeForCorrespondingIndirectStore,opCodeForCorrespondingIndirectStore(TR::ILOpCodes),1,OMR,IL
opCodeForDirectLoad,opCodeForDirectLoad(TR::DataType),1,OMR,IL
opCodeForDirectStore,opCodeForDirectStore(TR::DataType),1,OMR,IL
opCodeForIfCompareEquals,opCodeForIfCompareEquals(TR::DataType),1,OMR,IL
opCodeForIfCompareGreaterOrEquals,opCodeForIfCompareGreaterOrEquals(TR::DataType),1,OMR,IL
opCodeForIfCompareGreaterThan,opCodeForIfCompareGreaterThan(TR::DataType),1,OMR,IL
opCodeForIfCompareLessOrEquals,opCodeForIfCompareLessOrEquals(TR::DataType),1,OMR,IL
opCodeForIfCompareLessThan,opCodeForIfCompareLessThan(TR::DataType),1,OMR,IL
opCodeForIfCompareNotEquals,opCodeForIfCompareNotEquals(TR::DataType),1,OMR,IL
opCodeForIndirectArrayLoad,opCodeForIndirectArrayLoad(TR::DataType),1,OMR,IL
opCodeForIndirectArrayStore,opCodeForIndirectArrayStore(TR::DataType),1,OMR,IL
opCodeForIndirectLoad,opCodeForIndirectLoad(TR::DataType),1,OMR,IL
opCodeForIndirectStore,opCodeForIndirectStore(TR::DataType),1,OMR,IL
opCodeForRegisterLoad,opCodeForRegisterLoad(TR::DataType),1,OMR,IL
opCodeForRegisterStore,opCodeForRegisterStore(TR::DataType),1,OMR,IL
~IL,~IL(),1,OMR,IL
ILOpCode,ILOpCode(const class OMR::ILOpCode &),1,OMR,ILOpCode
ILOpCode,ILOpCode(class OMR::ILOpCode &&),0,OMR,ILOpCode
ILOpCode,ILOpCode(TR::ILOpCodes),0,OMR,ILOpCode
ILOpCode,ILOpCode(),0,OMR,ILOpCode
ILOpCode,ILOpCode(const class TR::ILOpCode &),0,TR,ILOpCode
ILOpCode,ILOpCode(class TR::ILOpCode &&),0,TR,ILOpCode
absOpCode,absOpCode(TR::DataType),1,OMR,ILOpCode
addOpCode,addOpCode(TR::DataType,_Bool),1,OMR,ILOpCode
andOpCode,andOpCode(TR::DataType),1,OMR,ILOpCode
canHaveGlRegDeps,canHaveGlRegDeps(),1,OMR,ILOpCode
canRaiseException,canRaiseException(),1,OMR,ILOpCode
canShareValueNumber,canShareValueNumber(),1,OMR,ILOpCode
canUseBranchOnCount,canUseBranchOnCount(),1,OMR,ILOpCode
checkILOpArrayLengths,checkILOpArrayLengths(),1,OMR,ILOpCode
childProperties,childProperties(),1,OMR,ILOpCode
cmpeqOpCode,cmpeqOpCode(TR::DataType),1,OMR,ILOpCode
compareOpCode,compareOpCode(TR::DataType,enum TR_ComparisonTypes,_Bool),1,OMR,ILOpCode
constOpCode,constOpCode(TR::DataType),1,OMR,ILOpCode
convertCmpToIfCmp,convertCmpToIfCmp(),1,OMR,ILOpCode
convertIfCmpToCmp,convertIfCmpToCmp(),1,OMR,ILOpCode
convertScalarToVector,convertScalarToVector(TR::ILOpCodes),1,OMR,ILOpCode
convertSignedCmpToUnsignedCmp,convertSignedCmpToUnsignedCmp(TR::ILOpCodes),1,OMR,ILOpCode
divideOpCode,divideOpCode(TR::DataType),1,OMR,ILOpCode
expectedChildCount,expectedChildCount(),1,OMR,ILOpCode
expectedChildType,expectedChildType(uint32_t),1,OMR,ILOpCode
getCompareType,getCompareType(TR::ILOpCodes),1,OMR,ILOpCode
getComparisonWithoutUnordered,getComparisonWithoutUnordered(TR::ILOpCodes),1,OMR,ILOpCode
getCorrespondingLogicalComparison,getCorrespondingLogicalComparison(TR::ILOpCodes),1,OMR,ILOpCode
getDataType,getDataType(TR::ILOpCodes),1,OMR,ILOpCode
getDataType,getDataType(),0,OMR,ILOpCode
getDirectCall,getDirectCall(TR::ILOpCodes),1,OMR,ILOpCode
getDirectCall,getDirectCall(TR::DataType),0,OMR,ILOpCode
getIndirectCall,getIndirectCall(TR::DataType),1,OMR,ILOpCode
getName,getName(),1,OMR,ILOpCode
getOpCodeForReverseBranch,getOpCodeForReverseBranch(),1,OMR,ILOpCode
getOpCodeForSwapChildren,getOpCodeForSwapChildren(),1,OMR,ILOpCode
getOpCodeValue,getOpCodeValue(),1,OMR,ILOpCode
getProperConversion,getProperConversion(TR::DataType,TR::DataType,_Bool),1,OMR,ILOpCode
getRotateOpCodeFromDt,getRotateOpCodeFromDt(TR::DataType),1,OMR,ILOpCode
getSize,getSize(TR::ILOpCodes),1,OMR,ILOpCode
getSize,getSize(),0,OMR,ILOpCode
getType,getType(),1,OMR,ILOpCode
getType,getType(TR::ILOpCodes),0,OMR,ILOpCode
hasBranchChildren,hasBranchChildren(),1,OMR,ILOpCode
hasNoDataType,hasNoDataType(),1,OMR,ILOpCode
hasPinningArrayPointer,hasPinningArrayPointer(),1,OMR,ILOpCode
hasSymbolReference,hasSymbolReference(),1,OMR,ILOpCode
ifcmpeqOpCode,ifcmpeqOpCode(TR::DataType),1,OMR,ILOpCode
ifcmpgeOpCode,ifcmpgeOpCode(TR::DataType,_Bool),1,OMR,ILOpCode
ifcmpgtOpCode,ifcmpgtOpCode(TR::DataType,_Bool),1,OMR,ILOpCode
ifcmpleOpCode,ifcmpleOpCode(TR::DataType,_Bool),1,OMR,ILOpCode
ifcmpltOpCode,ifcmpltOpCode(TR::DataType,_Bool),1,OMR,ILOpCode
ifcmpneOpCode,ifcmpneOpCode(TR::DataType),1,OMR,ILOpCode
indirectLoadOpCode,indirectLoadOpCode(TR::DataType),1,OMR,ILOpCode
integerOpForLongOp,integerOpForLongOp(TR::ILOpCodes),1,OMR,ILOpCode
is16Byte,is16Byte(),1,OMR,ILOpCode
is1Byte,is1Byte(),1,OMR,ILOpCode
is2Byte,is2Byte(),1,OMR,ILOpCode
is32Byte,is32Byte(),1,OMR,ILOpCode
is4Byte,is4Byte(),1,OMR,ILOpCode
is8Byte,is8Byte(),1,OMR,ILOpCode
isAbs,isAbs(),1,OMR,ILOpCode
isAdd,isAdd(),1,OMR,ILOpCode
isAnchor,isAnchor(),1,OMR,ILOpCode
isAnd,isAnd(),1,OMR,ILOpCode
isArithmetic,isArithmetic(),1,OMR,ILOpCode
isArrayLength,isArrayLength(),1,OMR,ILOpCode
isArrayRef,isArrayRef(),1,OMR,ILOpCode
isAssociative,isAssociative(),1,OMR,ILOpCode
isBitwiseLogical,isBitwiseLogical(),1,OMR,ILOpCode
isBndCheck,isBndCheck(),1,OMR,ILOpCode
isBooleanCompare,isBooleanCompare(),1,OMR,ILOpCode
isBranch,isBranch(),1,OMR,ILOpCode
isByte,isByte(),1,OMR,ILOpCode
isCall,isCall(),1,OMR,ILOpCode
isCallDirect,isCallDirect(),1,OMR,ILOpCode
isCallIndirect,isCallIndirect(),1,OMR,ILOpCode
isCase,isCase(),1,OMR,ILOpCode
isCheck,isCheck(),1,OMR,ILOpCode
isCheckCast,isCheckCast(),1,OMR,ILOpCode
isCheckCastOrNullCheck,isCheckCastOrNullCheck(),1,OMR,ILOpCode
isCommutative,isCommutative(),1,OMR,ILOpCode
isCompBranchOnly,isCompBranchOnly(),1,OMR,ILOpCode
isCompareDouble,isCompareDouble(),1,OMR,ILOpCode
isCompareForEquality,isCompareForEquality(),1,OMR,ILOpCode
isCompareForOrder,isCompareForOrder(),1,OMR,ILOpCode
isCompareTrueIfEqual,isCompareTrueIfEqual(),1,OMR,ILOpCode
isCompareTrueIfGreater,isCompareTrueIfGreater(),1,OMR,ILOpCode
isCompareTrueIfLess,isCompareTrueIfLess(),1,OMR,ILOpCode
isCompareTrueIfUnordered,isCompareTrueIfUnordered(),1,OMR,ILOpCode
isCondCodeComputation,isCondCodeComputation(),1,OMR,ILOpCode
isConversion,isConversion(),1,OMR,ILOpCode
isDiv,isDiv(),1,OMR,ILOpCode
isDouble,isDouble(),1,OMR,ILOpCode
isEqualCmp,isEqualCmp(TR::ILOpCodes),1,OMR,ILOpCode
isExceptionRangeFence,isExceptionRangeFence(),1,OMR,ILOpCode
isExponentiation,isExponentiation(),1,OMR,ILOpCode
isFence,isFence(),1,OMR,ILOpCode
isFloat,isFloat(),1,OMR,ILOpCode
isFloatingPoint,isFloatingPoint(),1,OMR,ILOpCode
isFunctionCall,isFunctionCall(),1,OMR,ILOpCode
isGoto,isGoto(),1,OMR,ILOpCode
isGreaterCmp,isGreaterCmp(TR::ILOpCodes),1,OMR,ILOpCode
isIf,isIf(),1,OMR,ILOpCode
isIndirect,isIndirect(),1,OMR,ILOpCode
isInt,isInt(),1,OMR,ILOpCode
isInteger,isInteger(),1,OMR,ILOpCode
isIntegerOrAddress,isIntegerOrAddress(),1,OMR,ILOpCode
isIntegralConst,isIntegralConst(),1,OMR,ILOpCode
isIntegralLoadVar,isIntegralLoadVar(),1,OMR,ILOpCode
isJumpWithMultipleTargets,isJumpWithMultipleTargets(),1,OMR,ILOpCode
isLeftRotate,isLeftRotate(),1,OMR,ILOpCode
isLeftShift,isLeftShift(),1,OMR,ILOpCode
isLessCmp,isLessCmp(TR::ILOpCodes),1,OMR,ILOpCode
isLikeDef,isLikeDef(),1,OMR,ILOpCode
isLikeUse,isLikeUse(),1,OMR,ILOpCode
isLoad,isLoad(),1,OMR,ILOpCode
isLoadAddr,isLoadAddr(),1,OMR,ILOpCode
isLoadConst,isLoadConst(),1,OMR,ILOpCode
isLoadDirect,isLoadDirect(),1,OMR,ILOpCode
isLoadDirectOrReg,isLoadDirectOrReg(),1,OMR,ILOpCode
isLoadIndirect,isLoadIndirect(),1,OMR,ILOpCode
isLoadReg,isLoadReg(),1,OMR,ILOpCode
isLoadVar,isLoadVar(),1,OMR,ILOpCode
isLoadVarDirect,isLoadVarDirect(),1,OMR,ILOpCode
isLoadVarOrStore,isLoadVarOrStore(),1,OMR,ILOpCode
isLong,isLong(),1,OMR,ILOpCode
isLongCompare,isLongCompare(),1,OMR,ILOpCode
isMax,isMax(),1,OMR,ILOpCode
isMemToMemOp,isMemToMemOp(),1,OMR,ILOpCode
isMemoryReference,isMemoryReference(),1,OMR,ILOpCode
isMin,isMin(),1,OMR,ILOpCode
isMul,isMul(),1,OMR,ILOpCode
isNeg,isNeg(),1,OMR,ILOpCode
isNew,isNew(),1,OMR,ILOpCode
isNotEqualCmp,isNotEqualCmp(TR::ILOpCodes),1,OMR,ILOpCode
isNullCheck,isNullCheck(),1,OMR,ILOpCode
isOpCodeAnImplicitNoOp,isOpCodeAnImplicitNoOp(class OMR::ILOpCode &),1,OMR,ILOpCode
isOr,isOr(),1,OMR,ILOpCode
isOverflowCheck,isOverflowCheck(),1,OMR,ILOpCode
isOverflowCompare,isOverflowCompare(),1,OMR,ILOpCode
isRef,isRef(),1,OMR,ILOpCode
isRem,isRem(),1,OMR,ILOpCode
isResolveCheck,isResolveCheck(),1,OMR,ILOpCode
isResolveOrNullCheck,isResolveOrNullCheck(),1,OMR,ILOpCode
isReturn,isReturn(),1,OMR,ILOpCode
isReverseLoadOrStore,isReverseLoadOrStore(),1,OMR,ILOpCode
isRightShift,isRightShift(),1,OMR,ILOpCode
isRotate,isRotate(),1,OMR,ILOpCode
isShift,isShift(),1,OMR,ILOpCode
isShiftLogical,isShiftLogical(),1,OMR,ILOpCode
isShort,isShort(),1,OMR,ILOpCode
isSignExtension,isSignExtension(),1,OMR,ILOpCode
isSignedExponentiation,isSignedExponentiation(),1,OMR,ILOpCode
isSignum,isSignum(),1,OMR,ILOpCode
isSpineCheck,isSpineCheck(),1,OMR,ILOpCode
isSqrt,isSqrt(),1,OMR,ILOpCode
isStore,isStore(),1,OMR,ILOpCode
isStoreDirect,isStoreDirect(),1,OMR,ILOpCode
isStoreDirectOrReg,isStoreDirectOrReg(),1,OMR,ILOpCode
isStoreIndirect,isStoreIndirect(),1,OMR,ILOpCode
isStoreReg,isStoreReg(),1,OMR,ILOpCode
isStrictWidenConversion,isStrictWidenConversion(),1,OMR,ILOpCode
isStrictlyGreaterThanCmp,isStrictlyGreaterThanCmp(TR::ILOpCodes),1,OMR,ILOpCode
isStrictlyLessThanCmp,isStrictlyLessThanCmp(TR::ILOpCodes),1,OMR,ILOpCode
isSub,isSub(),1,OMR,ILOpCode
isSupportedForPRE,isSupportedForPRE(),1,OMR,ILOpCode
isSwitch,isSwitch(),1,OMR,ILOpCode
isTernary,isTernary(),1,OMR,ILOpCode
isTernaryAdd,isTernaryAdd(),1,OMR,ILOpCode
isTernarySub,isTernarySub(),1,OMR,ILOpCode
isTreeTop,isTreeTop(),1,OMR,ILOpCode
isTwoChildrenAddress,isTwoChildrenAddress(),1,OMR,ILOpCode
isUnsigned,isUnsigned(),1,OMR,ILOpCode
isUnsignedCompare,isUnsignedCompare(),1,OMR,ILOpCode
isUnsignedConversion,isUnsignedConversion(),1,OMR,ILOpCode
isUnsignedExponentiation,isUnsignedExponentiation(),1,OMR,ILOpCode
isVector,isVector(),1,OMR,ILOpCode
isVectorReduction,isVectorReduction(),1,OMR,ILOpCode
isVoid,isVoid(),1,OMR,ILOpCode
isWrtBar,isWrtBar(),1,OMR,ILOpCode
isXor,isXor(),1,OMR,ILOpCode
isZeroExtension,isZeroExtension(),1,OMR,ILOpCode
mayUseSystemStack,mayUseSystemStack(),1,OMR,ILOpCode
mayUseVMThread,mayUseVMThread(),1,OMR,ILOpCode
multiplyOpCode,multiplyOpCode(TR::DataType),1,OMR,ILOpCode
mustBeLowered,mustBeLowered(),1,OMR,ILOpCode
negateOpCode,negateOpCode(TR::DataType),1,OMR,ILOpCode
orOpCode,orOpCode(TR::DataType),1,OMR,ILOpCode
properties1,properties1(),1,OMR,ILOpCode
properties2,properties2(),1,OMR,ILOpCode
properties3,properties3(),1,OMR,ILOpCode
properties4,properties4(),1,OMR,ILOpCode
remainderOpCode,remainderOpCode(TR::DataType),1,OMR,ILOpCode
returnOpCode,returnOpCode(TR::DataType),1,OMR,ILOpCode
setOpCodeValue,setOpCodeValue(TR::ILOpCodes),1,OMR,ILOpCode
setTarget,setTarget(),1,OMR,ILOpCode
shiftLeftOpCode,shiftLeftOpCode(TR::DataType),1,OMR,ILOpCode
shiftRightOpCode,shiftRightOpCode(TR::DataType),1,OMR,ILOpCode
skipDynamicLitPoolOnInts,skipDynamicLitPoolOnInts(),1,OMR,ILOpCode
subtractOpCode,subtractOpCode(TR::DataType),1,OMR,ILOpCode
typeProperties,typeProperties(),1,OMR,ILOpCode
unsignedAddOpCode,unsignedAddOpCode(TR::DataType,_Bool),1,OMR,ILOpCode
unsignedShiftLeftOpCode,unsignedShiftLeftOpCode(TR::DataType),1,OMR,ILOpCode
unsignedShiftRightOpCode,unsignedShiftRightOpCode(TR::DataType),1,OMR,ILOpCode
unsignedSubtractOpCode,unsignedSubtractOpCode(TR::DataType),1,OMR,ILOpCode
xorOpCode,xorOpCode(TR::DataType),1,OMR,ILOpCode
~ILOpCode,~ILOpCode(),1,OMR,ILOpCode
KnownObjectTable,KnownObjectTable(class OMR::KnownObjectTable &&),1,OMR,KnownObjectTable
KnownObjectTable,KnownObjectTable(TR::Compilation *),0,OMR,KnownObjectTable
KnownObjectTable,KnownObjectTable(const class OMR::KnownObjectTable &),0,OMR,KnownObjectTable
comp,comp(),1,OMR,KnownObjectTable
dumpTo,dumpTo(TR::FILE *,TR::Compilation *),1,OMR,KnownObjectTable
fe,fe(),1,OMR,KnownObjectTable
getEndIndex,getEndIndex(),1,OMR,KnownObjectTable
getExistingIndexAt,getExistingIndexAt(uintptrj_t *),1,OMR,KnownObjectTable
getIndex,getIndex(uintptrj_t),1,OMR,KnownObjectTable
getIndexAt,getIndexAt(uintptrj_t *),1,OMR,KnownObjectTable
getPointer,getPointer(Index),1,OMR,KnownObjectTable
getPointerLocation,getPointerLocation(Index),1,OMR,KnownObjectTable
getfPointerLocationAt,getfPointerLocationAt(uintptrj_t *),1,OMR,KnownObjectTable
isNull,isNull(Index),1,OMR,KnownObjectTable
operator=,operator=(const class OMR::KnownObjectTable &),1,OMR,KnownObjectTable
operator=,operator=(class OMR::KnownObjectTable &&),0,OMR,KnownObjectTable
operator=,operator=(class TR::KnownObjectTable &&),0,TR,KnownObjectTable
operator=,operator=(const class TR::KnownObjectTable &),0,TR,KnownObjectTable
self,self(),1,OMR,KnownObjectTable
setComp,setComp(TR::Compilation *),1,OMR,KnownObjectTable
setFe,setFe(class TR_FrontEnd *),1,OMR,KnownObjectTable
~KnownObjectTable,~KnownObjectTable(),1,OMR,KnownObjectTable
Monitor,Monitor(),1,OMR,Monitor
Monitor,Monitor(const class OMR::Monitor &),0,OMR,Monitor
Monitor,Monitor(class TR::Monitor &&),0,TR,Monitor
create,create(char *),1,OMR,Monitor
destroy,destroy(TR::Monitor *),1,OMR,Monitor
destroy,destroy(),0,OMR,Monitor
enter,enter(),1,OMR,Monitor
exit,exit(),1,OMR,Monitor
getName,getName(),1,OMR,Monitor
init,init(char *),1,OMR,Monitor
notify,notify(),1,OMR,Monitor
notifyAll,notifyAll(),1,OMR,Monitor
num_waiting,num_waiting(),1,OMR,Monitor
operator delete,operator delete(void *),1,OMR,Monitor
operator new,operator new(size_t),1,OMR,Monitor
operator=,operator=(const class OMR::Monitor &),1,OMR,Monitor
operator=,operator=(class TR::Monitor &&),0,TR,Monitor
self,self(),1,OMR,Monitor
try_enter,try_enter(),1,OMR,Monitor
wait,wait(),1,OMR,Monitor
wait_timed,wait_timed(int64_t,int32_t),1,OMR,Monitor
~Monitor,~Monitor(),1,OMR,Monitor
Node,Node(),1,OMR,Node
Node,Node(const class OMR::Node &),0,OMR,Node
Node,Node(TR::Node *,TR::ILOpCodes,uint16_t),0,OMR,Node
Node,Node(TR::Node *,uint16_t),0,OMR,Node
Node,Node(class TR::Node *,uint16_t),0,TR,Node
Node,Node(class TR::Node &),0,TR,Node
aconst,aconst(uintptrj_t),1,OMR,Node
aconst,aconst(TR::Node *,uintptrj_t,uint8_t),0,OMR,Node
aconst,aconst(TR::Node *,uintptrj_t),0,OMR,Node
addChildren,addChildren(TR::Node **,uint16_t),1,OMR,Node
addChildrenAndSymRef,addChildrenAndSymRef(uint16_t,TR::Node *),1,OMR,Node
addChildrenAndSymRef,addChildrenAndSymRef(uint16_t,TR::SymbolReference *),0,OMR,Node
addExtensionElements,addExtensionElements(uint16_t),1,OMR,Node
addressPointsAtObject,addressPointsAtObject(),1,OMR,Node
anchorConstChildren,anchorConstChildren(),1,OMR,Node
bconst,bconst(int8_t),1,OMR,Node
bconst,bconst(TR::Node *,int8_t),0,OMR,Node
buconst,buconst(TR::Node *,uint8_t),1,OMR,Node
buconst,buconst(uint8_t),0,OMR,Node
canCauseGC,canCauseGC(),1,OMR,Node
canCheckReferenceIsNonNull,canCheckReferenceIsNonNull(),1,OMR,Node
canChkNodeCreatedByPRE,canChkNodeCreatedByPRE(),1,OMR,Node
canDesynchronizeCall,canDesynchronizeCall(),1,OMR,Node
canEvaluate,canEvaluate(),1,OMR,Node
canGCandExcept,canGCandExcept(),1,OMR,Node
canGCandReturn,canGCandReturn(),1,OMR,Node
canGet32bitIntegralValue,canGet32bitIntegralValue(),1,OMR,Node
canGet64bitIntegralValue,canGet64bitIntegralValue(),1,OMR,Node
canOmitSync,canOmitSync(),1,OMR,Node
canSkipSync,canSkipSync(),1,OMR,Node
canSkipZeroInitialization,canSkipZeroInitialization(),1,OMR,Node
cannotOverflow,cannotOverflow(),1,OMR,Node
cannotTrackLocalStringUses,cannotTrackLocalStringUses(),1,OMR,Node
cannotTrackLocalUses,cannotTrackLocalUses(),1,OMR,Node
cconst,cconst(uint16_t),1,OMR,Node
cconst,cconst(TR::Node *,uint16_t),0,OMR,Node
childIterator,childIterator(int32_t),1,OMR,Node
childrenWereSwapped,childrenWereSwapped(),1,OMR,Node
chkAllocationCanBeRemoved,chkAllocationCanBeRemoved(),1,OMR,Node
chkAndBitOpMem,chkAndBitOpMem(),1,OMR,Node
chkArrayChkPrimitiveArray1,chkArrayChkPrimitiveArray1(),1,OMR,Node
chkArrayChkPrimitiveArray2,chkArrayChkPrimitiveArray2(),1,OMR,Node
chkArrayChkReferenceArray1,chkArrayChkReferenceArray1(),1,OMR,Node
chkArrayChkReferenceArray2,chkArrayChkReferenceArray2(),1,OMR,Node
chkArrayCmpLen,chkArrayCmpLen(),1,OMR,Node
chkArrayCmpSign,chkArrayCmpSign(),1,OMR,Node
chkArrayTRT,chkArrayTRT(),1,OMR,Node
chkBackwardArrayCopy,chkBackwardArrayCopy(),1,OMR,Node
chkByteToByteTranslate,chkByteToByteTranslate(),1,OMR,Node
chkByteToCharTranslate,chkByteToCharTranslate(),1,OMR,Node
chkCannotOverflow,chkCannotOverflow(),1,OMR,Node
chkCannotTrackLocalStringUses,chkCannotTrackLocalStringUses(),1,OMR,Node
chkCannotTrackLocalUses,chkCannotTrackLocalUses(),1,OMR,Node
chkCharArrayTRT,chkCharArrayTRT(),1,OMR,Node
chkCharToByteTranslate,chkCharToByteTranslate(),1,OMR,Node
chkCharToCharTranslate,chkCharToCharTranslate(),1,OMR,Node
chkClassPointerConstant,chkClassPointerConstant(),1,OMR,Node
chkCompressionSequence,chkCompressionSequence(),1,OMR,Node
chkDesynchronizeCall,chkDesynchronizeCall(),1,OMR,Node
chkDontMoveUnderBranch,chkDontMoveUnderBranch(),1,OMR,Node
chkDontTransformArrayCopyCall,chkDontTransformArrayCopyCall(),1,OMR,Node
chkEscapesInColdBlock,chkEscapesInColdBlock(),1,OMR,Node
chkFoldedImplicitNULLCHK,chkFoldedImplicitNULLCHK(),1,OMR,Node
chkForwardArrayCopy,chkForwardArrayCopy(),1,OMR,Node
chkHalfWordElementArrayCopy,chkHalfWordElementArrayCopy(),1,OMR,Node
chkHeapObjectWrtBar,chkHeapObjectWrtBar(),1,OMR,Node
chkHeapificationAlloc,chkHeapificationAlloc(),1,OMR,Node
chkHeapificationStore,chkHeapificationStore(),1,OMR,Node
chkHighWordZero,chkHighWordZero(),1,OMR,Node
chkIsPrivatizedInlinerArg,chkIsPrivatizedInlinerArg(),1,OMR,Node
chkIsReferenceNonNull,chkIsReferenceNonNull(),1,OMR,Node
chkLiveMonitorInitStore,chkLiveMonitorInitStore(),1,OMR,Node
chkLocalObjectMonitor,chkLocalObjectMonitor(),1,OMR,Node
chkMethodPointerConstant,chkMethodPointerConstant(),1,OMR,Node
chkNOPLongStore,chkNOPLongStore(),1,OMR,Node
chkNeedsPrecisionAdjustment,chkNeedsPrecisionAdjustment(),1,OMR,Node
chkNoArrayStoreCheckArrayCopy,chkNoArrayStoreCheckArrayCopy(),1,OMR,Node
chkNodeCreatedByPRE,chkNodeCreatedByPRE(),1,OMR,Node
chkNodeRecognizedArrayCopyCall,chkNodeRecognizedArrayCopyCall(),1,OMR,Node
chkNonHeapObjectWrtBar,chkNonHeapObjectWrtBar(),1,OMR,Node
chkNormalizeNanValues,chkNormalizeNanValues(),1,OMR,Node
chkNormalizedShift,chkNormalizedShift(),1,OMR,Node
chkOmitSync,chkOmitSync(),1,OMR,Node
chkOpsNodeRequiresConditionCodes,chkOpsNodeRequiresConditionCodes(),1,OMR,Node
chkOrBitOpMem,chkOrBitOpMem(),1,OMR,Node
chkPointsToNonNull,chkPointsToNonNull(),1,OMR,Node
chkPointsToNull,chkPointsToNull(),1,OMR,Node
chkPrimitiveLockedRegion,chkPrimitiveLockedRegion(),1,OMR,Node
chkRarePathForwardArrayCopy,chkRarePathForwardArrayCopy(),1,OMR,Node
chkReadMonitor,chkReadMonitor(),1,OMR,Node
chkReferenceArrayCopy,chkReferenceArrayCopy(),1,OMR,Node
chkReturnIsDummy,chkReturnIsDummy(),1,OMR,Node
chkSafeToSkipTableBoundCheck,chkSafeToSkipTableBoundCheck(),1,OMR,Node
chkSeenRealReference,chkSeenRealReference(),1,OMR,Node
chkSimpleDivCheck,chkSimpleDivCheck(),1,OMR,Node
chkSkipSync,chkSkipSync(),1,OMR,Node
chkSkipWrtBar,chkSkipWrtBar(),1,OMR,Node
chkSkipZeroInitialization,chkSkipZeroInitialization(),1,OMR,Node
chkSourceByteArrayTranslate,chkSourceByteArrayTranslate(),1,OMR,Node
chkSourceCellIsTermChar,chkSourceCellIsTermChar(),1,OMR,Node
chkStaticMonitor,chkStaticMonitor(),1,OMR,Node
chkStoreAlreadyEvaluated,chkStoreAlreadyEvaluated(),1,OMR,Node
chkStoredValueIsIrrelevant,chkStoredValueIsIrrelevant(),1,OMR,Node
chkSyncMethodMonitor,chkSyncMethodMonitor(),1,OMR,Node
chkTableBackedByRawStorage,chkTableBackedByRawStorage(),1,OMR,Node
chkTargetByteArrayTranslate,chkTargetByteArrayTranslate(),1,OMR,Node
chkTermCharNodeIsHint,chkTermCharNodeIsHint(),1,OMR,Node
chkTheVirtualCallNodeForAGuardedInlinedCall,chkTheVirtualCallNodeForAGuardedInlinedCall(),1,OMR,Node
chkThrowInsertedByOSR,chkThrowInsertedByOSR(),1,OMR,Node
chkUnsigned,chkUnsigned(),1,OMR,Node
chkUseCallForFloatToFixedConversion,chkUseCallForFloatToFixedConversion(),1,OMR,Node
chkWordElementArrayCopy,chkWordElementArrayCopy(),1,OMR,Node
chkXorBitOpMem,chkXorBitOpMem(),1,OMR,Node
collectSymbolReferencesInNode,collectSymbolReferencesInNode(class TR_BitVector &,vcount_t),1,OMR,Node
computeDataType,computeDataType(),1,OMR,Node
computeIsCollectedReference,computeIsCollectedReference(),1,OMR,Node
computeIsInternalPointer,computeIsInternalPointer(),1,OMR,Node
containsCall,containsCall(),1,OMR,Node
containsCompressionSequence,containsCompressionSequence(),1,OMR,Node
containsDoNotPropagateNode,containsDoNotPropagateNode(vcount_t),1,OMR,Node
containsNode,containsNode(TR::Node *,vcount_t),1,OMR,Node
copy,copy(TR::Node *),1,OMR,Node
copy,copy(TR::Node *,int32_t),0,OMR,Node
copyByteCodeInfo,copyByteCodeInfo(TR::Node *),1,OMR,Node
copyChildren,copyChildren(TR::Node *,uint16_t,_Bool),1,OMR,Node
copyNodeExtension,copyNodeExtension(TR::NodeExtension *,uint16_t,size_t),1,OMR,Node
copyValidProperties,copyValidProperties(TR::Node *,TR::Node *),1,OMR,Node
couldIgnoreExtend,couldIgnoreExtend(),1,OMR,Node
countChildren,countChildren(TR::ILOpCodes),1,OMR,Node
countNumberOfNodesInSubtree,countNumberOfNodesInSubtree(vcount_t),1,OMR,Node
create,create(TR::ILOpCodes,uint16_t),1,OMR,Node
create,create(TR::Node *,TR::ILOpCodes,uint16_t,TR::TreeTop *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
create,create(TR::Node *,TR::ILOpCodes,uint16_t),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,int32_t,TR::TreeTop *),0,OMR,Node
create,create(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *),0,OMR,Node
create,create(TR::Node *,TR::ILOpCodes,uint16_t,int32_t,TR::TreeTop *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::TreeTop *),0,OMR,Node
create,create(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::Node *),0,OMR,Node
createAddConstantToAddress,createAddConstantToAddress(TR::Node *,intptr_t,TR::Node *),1,OMR,Node
createAddressNode,createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t),1,OMR,Node
createAddressNode,createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t,uint8_t),0,OMR,Node
createAllocationFence,createAllocationFence(TR::Node *,TR::Node *),1,OMR,Node
createArrayOperation,createArrayOperation(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
createArrayStoreCheckInfo,createArrayStoreCheckInfo(),1,OMR,Node
createArraycopy,createArraycopy(TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
createArraycopy,createArraycopy(),0,OMR,Node
createArraycopy,createArraycopy(TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
createCase,createCase(TR::Node *,TR::TreeTop *,CASECONST_TYPE),1,OMR,Node
createCompressedRefsAnchor,createCompressedRefsAnchor(TR::Node *),1,OMR,Node
createConstDead,createConstDead(TR::Node *,TR::DataType,intptrj_t),1,OMR,Node
createConstOne,createConstOne(TR::Node *,TR::DataType),1,OMR,Node
createConstZeroValue,createConstZeroValue(TR::Node *,TR::DataType),1,OMR,Node
createInternal,createInternal(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *),1,OMR,Node
createLiteralPoolAddress,createLiteralPoolAddress(TR::Node *,size_t),1,OMR,Node
createLoad,createLoad(TR::SymbolReference *),1,OMR,Node
createLoad,createLoad(TR::Node *,TR::SymbolReference *),0,OMR,Node
createLongIfNeeded,createLongIfNeeded(),1,OMR,Node
createNodeExtension,createNodeExtension(uint16_t),1,OMR,Node
createOnStack,createOnStack(TR::Node *,TR::ILOpCodes,uint16_t),1,OMR,Node
createRelative32BitFenceNode,createRelative32BitFenceNode(TR::Node *,void *),1,OMR,Node
createRelative32BitFenceNode,createRelative32BitFenceNode(void *),0,OMR,Node
createStore,createStore(TR::SymbolReference *,TR::Node *),1,OMR,Node
createStore,createStore(TR::Node *,TR::SymbolReference *,TR::Node *),0,OMR,Node
createStore,createStore(TR::SymbolReference *,TR::Node *,TR::ILOpCodes),0,OMR,Node
createStore,createStore(TR::SymbolReference *,TR::Node *,TR::ILOpCodes,size_t),0,OMR,Node
createStoresForVar,createStoresForVar(TR::SymbolReference *&,TR::TreeTop *,_Bool),1,OMR,Node
createVectorConst,createVectorConst(TR::Node *,TR::DataType),1,OMR,Node
createVectorConversion,createVectorConversion(TR::Node *,TR::DataType),1,OMR,Node
createWithRoomForFive,createWithRoomForFive(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Node *,TR::Node *,void *),1,OMR,Node
createWithRoomForOneMore,createWithRoomForOneMore(TR::ILOpCodes,uint16_t,void *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
createWithRoomForThree,createWithRoomForThree(TR::ILOpCodes,TR::Node *,TR::Node *,void *),1,OMR,Node
createWithSymRef,createWithSymRef(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::SymbolReference *),1,OMR,Node
createWithSymRef,createWithSymRef(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,uintptr_t,TR::SymbolReference *),0,OMR,Node
createWithSymRef,createWithSymRef(TR::ILOpCodes,uint16_t,TR::Node *,uintptr_t,TR::SymbolReference *),0,OMR,Node
createWithSymRef,createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *,uintptr_t),0,OMR,Node
createWithSymRef,createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *),0,OMR,Node
createWithSymRef,createWithSymRef(TR::Node *,TR::ILOpCodes,uint16_t,TR::SymbolReference *),0,OMR,Node
createbranch,createbranch(TR::ILOpCodes,TR::Node *,TR::TreeTop *),1,OMR,Node
createif,createif(TR::ILOpCodes,TR::Node *,TR::Node *,TR::TreeTop *),1,OMR,Node
decFutureUseCount,decFutureUseCount(),1,OMR,Node
decLocalIndex,decLocalIndex(),1,OMR,Node
decReferenceCount,decReferenceCount(),1,OMR,Node
devirtualizeCall,devirtualizeCall(TR::TreeTop *),1,OMR,Node
divisionCannotOverflow,divisionCannotOverflow(),1,OMR,Node
dontEliminateStores,dontEliminateStores(_Bool),1,OMR,Node
duplicateTree,duplicateTree(_Bool),1,OMR,Node
duplicateTreeForCodeMotion,duplicateTreeForCodeMotion(),1,OMR,Node
duplicateTreeWithCommoning,duplicateTreeWithCommoning(TR::Allocator),1,OMR,Node
duplicateTreeWithCommoningImpl,duplicateTreeWithCommoningImpl(CS2::HashTable<TR::Node *, TR::Node *, TR::Allocator> &),1,OMR,Node
duplicateTree_DEPRECATED,duplicateTree_DEPRECATED(_Bool),1,OMR,Node
escapesInColdBlock,escapesInColdBlock(),1,OMR,Node
exceptionsRaised,exceptionsRaised(),1,OMR,Node
extractTheNullCheck,extractTheNullCheck(TR::TreeTop *),1,OMR,Node
findChild,findChild(TR::ILOpCodes,_Bool),1,OMR,Node
findChildIndex,findChildIndex(TR::Node *),1,OMR,Node
force64BitLoad,force64BitLoad(),1,OMR,Node
freeExtensionIfExists,freeExtensionIfExists(),1,OMR,Node
gatherAllNodesWhichMightKillCondCode,gatherAllNodesWhichMightKillCondCode(vcount_t,TR::list<TR::Node *> &),1,OMR,Node
get32bitIntegralValue,get32bitIntegralValue(),1,OMR,Node
get64bitIntegralValue,get64bitIntegralValue(),1,OMR,Node
get64bitIntegralValueAsUnsigned,get64bitIntegralValueAsUnsigned(),1,OMR,Node
getAOTMethod,getAOTMethod(),1,OMR,Node
getAddress,getAddress(),1,OMR,Node
getAllocation,getAllocation(),1,OMR,Node
getAndDecChild,getAndDecChild(int32_t),1,OMR,Node
getArgument,getArgument(int32_t),1,OMR,Node
getArrayComponentClassInNode,getArrayComponentClassInNode(),1,OMR,Node
getArrayCopyElementType,getArrayCopyElementType(),1,OMR,Node
getArrayStoreClassInNode,getArrayStoreClassInNode(),1,OMR,Node
getArrayStride,getArrayStride(),1,OMR,Node
getBlock,getBlock(_Bool),1,OMR,Node
getBranchDestination,getBranchDestination(),1,OMR,Node
getByte,getByte(),1,OMR,Node
getByteCodeIndex,getByteCodeIndex(),1,OMR,Node
getByteCodeInfo,getByteCodeInfo(),1,OMR,Node
getCaseConstant,getCaseConstant(),1,OMR,Node
getCaseIndexUpperBound,getCaseIndexUpperBound(),1,OMR,Node
getChild,getChild(int32_t),1,OMR,Node
getConstValue,getConstValue(),1,OMR,Node
getDataType,getDataType(),1,OMR,Node
getDouble,getDouble(),1,OMR,Node
getDoubleBits,getDoubleBits(),1,OMR,Node
getEvaluationPriority,getEvaluationPriority(TR::CodeGenerator *),1,OMR,Node
getExtendedChild,getExtendedChild(int32_t),1,OMR,Node
getFirstArgument,getFirstArgument(),1,OMR,Node
getFirstArgumentIndex,getFirstArgumentIndex(),1,OMR,Node
getFirstChild,getFirstChild(),1,OMR,Node
getFlags,getFlags(),1,OMR,Node
getFloat,getFloat(),1,OMR,Node
getFloatBits,getFloatBits(),1,OMR,Node
getFutureUseCount,getFutureUseCount(),1,OMR,Node
getGlobalIndex,getGlobalIndex(),1,OMR,Node
getGlobalRegisterNumber,getGlobalRegisterNumber(),1,OMR,Node
getHighGlobalRegisterNumber,getHighGlobalRegisterNumber(),1,OMR,Node
getInlinedSiteIndex,getInlinedSiteIndex(),1,OMR,Node
getInt,getInt(),1,OMR,Node
getIsHPREligible,getIsHPREligible(),1,OMR,Node
getLabel,getLabel(),1,OMR,Node
getLastChild,getLastChild(),1,OMR,Node
getLiteralPoolOffset,getLiteralPoolOffset(),1,OMR,Node
getLocalIndex,getLocalIndex(),1,OMR,Node
getLongInt,getLongInt(),1,OMR,Node
getLongIntHigh,getLongIntHigh(),1,OMR,Node
getLongIntLow,getLongIntLow(),1,OMR,Node
getLowGlobalRegisterNumber,getLowGlobalRegisterNumber(),1,OMR,Node
getMaxIntegerPrecision,getMaxIntegerPrecision(),1,OMR,Node
getMethod,getMethod(),1,OMR,Node
getMonitorClass,getMonitorClass(class TR_ResolvedMethod *),1,OMR,Node
getMonitorClassInNode,getMonitorClassInNode(),1,OMR,Node
getMonitorInfo,getMonitorInfo(),1,OMR,Node
getName,getName(class TR_Debug *),1,OMR,Node
getNullCheckReference,getNullCheckReference(),1,OMR,Node
getNumArguments,getNumArguments(),1,OMR,Node
getNumChildren,getNumChildren(),1,OMR,Node
getNumRelocations,getNumRelocations(),1,OMR,Node
getNumberOfSlots,getNumberOfSlots(),1,OMR,Node
getOpCode,getOpCode(),1,OMR,Node
getOpCodeValue,getOpCodeValue(),1,OMR,Node
getOverflowCheckOperation,getOverflowCheckOperation(),1,OMR,Node
getOwningMethod,getOwningMethod(),1,OMR,Node
getPinningArrayPointer,getPinningArrayPointer(),1,OMR,Node
getReferenceCount,getReferenceCount(),1,OMR,Node
getRegLoadStoreSymbolReference,getRegLoadStoreSymbolReference(),1,OMR,Node
getRegister,getRegister(),1,OMR,Node
getRelocationDestination,getRelocationDestination(uint32_t),1,OMR,Node
getRelocationType,getRelocationType(),1,OMR,Node
getReturnCode,getReturnCode(_Bool),1,OMR,Node
getReturnReason,getReturnReason(),1,OMR,Node
getRoundedSize,getRoundedSize(),1,OMR,Node
getSecondChild,getSecondChild(),1,OMR,Node
getShortInt,getShortInt(),1,OMR,Node
getSize,getSize(),1,OMR,Node
getSourceCellIsTermChar,getSourceCellIsTermChar(),1,OMR,Node
getStoreNode,getStoreNode(),1,OMR,Node
getSymbol,getSymbol(),1,OMR,Node
getSymbolReference,getSymbolReference(),1,OMR,Node
getSymbolReferenceOfAnyType,getSymbolReferenceOfAnyType(),1,OMR,Node
getTableBackedByRawStorage,getTableBackedByRawStorage(),1,OMR,Node
getTermCharNodeIsHint,getTermCharNodeIsHint(),1,OMR,Node
getThirdChild,getThirdChild(),1,OMR,Node
getType,getType(),1,OMR,Node
getTypeSignature,getTypeSignature(int32_t &,enum TR_AllocationKind),1,OMR,Node
getUnionPropertyA_Type,getUnionPropertyA_Type(),1,OMR,Node
getUnsignedByte,getUnsignedByte(),1,OMR,Node
getUnsignedConstValue,getUnsignedConstValue(),1,OMR,Node
getUnsignedInt,getUnsignedInt(),1,OMR,Node
getUnsignedLongInt,getUnsignedLongInt(),1,OMR,Node
getUnsignedLongIntHigh,getUnsignedLongIntHigh(),1,OMR,Node
getUnsignedLongIntLow,getUnsignedLongIntLow(),1,OMR,Node
getUnsignedShortInt,getUnsignedShortInt(),1,OMR,Node
getUseDefIndex,getUseDefIndex(),1,OMR,Node
getValueChild,getValueChild(),1,OMR,Node
getVirtualCallNodeForGuard,getVirtualCallNodeForGuard(),1,OMR,Node
getVirtualCallTreeForGuard,getVirtualCallTreeForGuard(),1,OMR,Node
getVisitCount,getVisitCount(),1,OMR,Node
hasArrayStoreCheckInfo,hasArrayStoreCheckInfo(),1,OMR,Node
hasArrayStride,hasArrayStride(),1,OMR,Node
hasBeenRun,hasBeenRun(),1,OMR,Node
hasBeenVisitedForHints,hasBeenVisitedForHints(),1,OMR,Node
hasBlock,hasBlock(),1,OMR,Node
hasBranchDestinationNode,hasBranchDestinationNode(),1,OMR,Node
hasChild,hasChild(TR::Node *),1,OMR,Node
hasDataType,hasDataType(),1,OMR,Node
hasFoldedImplicitNULLCHK,hasFoldedImplicitNULLCHK(),1,OMR,Node
hasMonitorClassInNode,hasMonitorClassInNode(),1,OMR,Node
hasNodeExtension,hasNodeExtension(),1,OMR,Node
hasPinningArrayPointer,hasPinningArrayPointer(),1,OMR,Node
hasRegLoadStoreSymbolReference,hasRegLoadStoreSymbolReference(),1,OMR,Node
hasSymbolReference,hasSymbolReference(),1,OMR,Node
hasSymbolReferenceOfAnyType,hasSymbolReferenceOfAnyType(),1,OMR,Node
hasUnresolvedSymbolReference,hasUnresolvedSymbolReference(),1,OMR,Node
iconst,iconst(TR::Node *,int32_t),1,OMR,Node
iconst,iconst(int32_t),0,OMR,Node
incFutureUseCount,incFutureUseCount(),1,OMR,Node
incLocalIndex,incLocalIndex(),1,OMR,Node
incReferenceCount,incReferenceCount(),1,OMR,Node
incVisitCount,incVisitCount(),1,OMR,Node
initializeFutureUseCounts,initializeFutureUseCounts(vcount_t),1,OMR,Node
isAbstractGuard,isAbstractGuard(),1,OMR,Node
isAdjunct,isAdjunct(),1,OMR,Node
isAndBitOpMem,isAndBitOpMem(),1,OMR,Node
isArrayChkPrimitiveArray1,isArrayChkPrimitiveArray1(),1,OMR,Node
isArrayChkPrimitiveArray2,isArrayChkPrimitiveArray2(),1,OMR,Node
isArrayChkReferenceArray1,isArrayChkReferenceArray1(),1,OMR,Node
isArrayChkReferenceArray2,isArrayChkReferenceArray2(),1,OMR,Node
isArrayCmpLen,isArrayCmpLen(),1,OMR,Node
isArrayCmpSign,isArrayCmpSign(),1,OMR,Node
isArrayCopyCall,isArrayCopyCall(),1,OMR,Node
isArrayTRT,isArrayTRT(),1,OMR,Node
isArraysetLengthMultipleOfPointerSize,isArraysetLengthMultipleOfPointerSize(),1,OMR,Node
isBackwardArrayCopy,isBackwardArrayCopy(),1,OMR,Node
isBigDecimalLoad,isBigDecimalLoad(),1,OMR,Node
isBreakpointGuard,isBreakpointGuard(),1,OMR,Node
isByteToByteTranslate,isByteToByteTranslate(),1,OMR,Node
isByteToCharTranslate,isByteToCharTranslate(),1,OMR,Node
isCharArrayTRT,isCharArrayTRT(),1,OMR,Node
isCharToByteTranslate,isCharToByteTranslate(),1,OMR,Node
isCharToCharTranslate,isCharToCharTranslate(),1,OMR,Node
isClassPointerConstant,isClassPointerConstant(),1,OMR,Node
isClassUnloadingConst,isClassUnloadingConst(),1,OMR,Node
isConstZeroBytes,isConstZeroBytes(),1,OMR,Node
isConstZeroValue,isConstZeroValue(),1,OMR,Node
isCopyToNewVirtualRegister,isCopyToNewVirtualRegister(),1,OMR,Node
isDebug,isDebug(),1,OMR,Node
isDirectMemoryUpdate,isDirectMemoryUpdate(),1,OMR,Node
isDirectMethodGuard,isDirectMethodGuard(),1,OMR,Node
isDoNotPropagateNode,isDoNotPropagateNode(),1,OMR,Node
isDontMoveUnderBranch,isDontMoveUnderBranch(),1,OMR,Node
isDontTransformArrayCopyCall,isDontTransformArrayCopyCall(),1,OMR,Node
isDualCyclic,isDualCyclic(),1,OMR,Node
isDualHigh,isDualHigh(),1,OMR,Node
isDummyGuard,isDummyGuard(),1,OMR,Node
isEligibleForHighWordOpcode,isEligibleForHighWordOpcode(),1,OMR,Node
isFPStrictCompliant,isFPStrictCompliant(),1,OMR,Node
isFloatToFixedConversion,isFloatToFixedConversion(),1,OMR,Node
isForwardArrayCopy,isForwardArrayCopy(),1,OMR,Node
isGCSafePointWithSymRef,isGCSafePointWithSymRef(),1,OMR,Node
isHCRGuard,isHCRGuard(),1,OMR,Node
isHalfWordElementArrayCopy,isHalfWordElementArrayCopy(),1,OMR,Node
isHeapObjectWrtBar,isHeapObjectWrtBar(),1,OMR,Node
isHeapificationAlloc,isHeapificationAlloc(),1,OMR,Node
isHeapificationStore,isHeapificationStore(),1,OMR,Node
isHierarchyGuard,isHierarchyGuard(),1,OMR,Node
isHighWordZero,isHighWordZero(),1,OMR,Node
isInterfaceGuard,isInterfaceGuard(),1,OMR,Node
isInternalPointer,isInternalPointer(),1,OMR,Node
isInvalid8BitGlobalRegister,isInvalid8BitGlobalRegister(),1,OMR,Node
isLegalCallToCreate,isLegalCallToCreate(TR::ILOpCodes),1,OMR,Node
isLikelyStackWrtBar,isLikelyStackWrtBar(),1,OMR,Node
isLiveMonitorInitStore,isLiveMonitorInitStore(),1,OMR,Node
isLoadAndTest,isLoadAndTest(),1,OMR,Node
isLoadFence,isLoadFence(),1,OMR,Node
isLocalObjectMonitor,isLocalObjectMonitor(),1,OMR,Node
isMaxLoopIterationGuard,isMaxLoopIterationGuard(),1,OMR,Node
isMethodEnterExitGuard,isMethodEnterExitGuard(),1,OMR,Node
isMethodPointerConstant,isMethodPointerConstant(),1,OMR,Node
isMutableCallSiteTargetGuard,isMutableCallSiteTargetGuard(),1,OMR,Node
isNOPLongStore,isNOPLongStore(),1,OMR,Node
isNegative,isNegative(),1,OMR,Node
isNoArrayStoreCheckArrayCopy,isNoArrayStoreCheckArrayCopy(),1,OMR,Node
isNodeCreatedByPRE,isNodeCreatedByPRE(),1,OMR,Node
isNodeRecognizedArrayCopyCall,isNodeRecognizedArrayCopyCall(),1,OMR,Node
isNonDegenerateArrayCopy,isNonDegenerateArrayCopy(),1,OMR,Node
isNonHeapObjectWrtBar,isNonHeapObjectWrtBar(),1,OMR,Node
isNonNegative,isNonNegative(),1,OMR,Node
isNonNull,isNonNull(),1,OMR,Node
isNonPositive,isNonPositive(),1,OMR,Node
isNonZero,isNonZero(),1,OMR,Node
isNonoverriddenGuard,isNonoverriddenGuard(),1,OMR,Node
isNopableInlineGuard,isNopableInlineGuard(),1,OMR,Node
isNormalizedShift,isNormalizedShift(),1,OMR,Node
isNotCollected,isNotCollected(),1,OMR,Node
isNull,isNull(),1,OMR,Node
isOSRGuard,isOSRGuard(),1,OMR,Node
isOrBitOpMem,isOrBitOpMem(),1,OMR,Node
isPositive,isPositive(),1,OMR,Node
isPowerOfTwo,isPowerOfTwo(),1,OMR,Node
isPreparedForDirectJNI,isPreparedForDirectJNI(),1,OMR,Node
isPrimitiveLockedRegion,isPrimitiveLockedRegion(),1,OMR,Node
isPrivatizedInlinerArg,isPrivatizedInlinerArg(),1,OMR,Node
isProfiledGuard,isProfiledGuard(),1,OMR,Node
isProfilingCode,isProfilingCode(),1,OMR,Node
isPureCall,isPureCall(),1,OMR,Node
isRarePathForwardArrayCopy,isRarePathForwardArrayCopy(),1,OMR,Node
isReadMonitor,isReadMonitor(),1,OMR,Node
isReferenceArrayCopy,isReferenceArrayCopy(),1,OMR,Node
isReferenceNonNull,isReferenceNonNull(),1,OMR,Node
isRematerializable,isRematerializable(TR::Node *,_Bool),1,OMR,Node
isRematerializeable,isRematerializeable(),1,OMR,Node
isReturnDummy,isReturnDummy(),1,OMR,Node
isSafeForCGToFastPathUnsafeCall,isSafeForCGToFastPathUnsafeCall(),1,OMR,Node
isSafeToReplaceNode,isSafeToReplaceNode(TR::TreeTop *),1,OMR,Node
isSafeToSkipTableBoundCheck,isSafeToSkipTableBoundCheck(),1,OMR,Node
isSeenRealReference,isSeenRealReference(),1,OMR,Node
isSideEffectGuard,isSideEffectGuard(),1,OMR,Node
isSimpleDivCheck,isSimpleDivCheck(),1,OMR,Node
isSingleRef,isSingleRef(),1,OMR,Node
isSingleRefUnevaluated,isSingleRefUnevaluated(),1,OMR,Node
isSourceByteArrayTranslate,isSourceByteArrayTranslate(),1,OMR,Node
isStaticMonitor,isStaticMonitor(),1,OMR,Node
isStoreAlreadyEvaluated,isStoreAlreadyEvaluated(),1,OMR,Node
isStoreFence,isStoreFence(),1,OMR,Node
isSyncMethodMonitor,isSyncMethodMonitor(),1,OMR,Node
isTargetByteArrayTranslate,isTargetByteArrayTranslate(),1,OMR,Node
isTernaryHigh,isTernaryHigh(),1,OMR,Node
isTheVirtualCallNodeForAGuardedInlinedCall,isTheVirtualCallNodeForAGuardedInlinedCall(),1,OMR,Node
isTheVirtualGuardForAGuardedInlinedCall,isTheVirtualGuardForAGuardedInlinedCall(),1,OMR,Node
isThisPointer,isThisPointer(),1,OMR,Node
isUnneededConversion,isUnneededConversion(),1,OMR,Node
isUnneededIALoad,isUnneededIALoad(),1,OMR,Node
isUnsafeStaticWrtBar,isUnsafeStaticWrtBar(),1,OMR,Node
isUnsafeToDuplicateAndExecuteAgain,isUnsafeToDuplicateAndExecuteAgain(int32_t *),1,OMR,Node
isUnsigned,isUnsigned(),1,OMR,Node
isUnsignedLoad,isUnsignedLoad(),1,OMR,Node
isUseBranchOnCount,isUseBranchOnCount(),1,OMR,Node
isVersionableIfWithMaxExpr,isVersionableIfWithMaxExpr(),1,OMR,Node
isVersionableIfWithMinExpr,isVersionableIfWithMinExpr(),1,OMR,Node
isWordElementArrayCopy,isWordElementArrayCopy(),1,OMR,Node
isXorBitOpMem,isXorBitOpMem(),1,OMR,Node
isZero,isZero(),1,OMR,Node
isZeroExtension,isZeroExtension(),1,OMR,Node
isl2aForCompressedArrayletLeafLoad,isl2aForCompressedArrayletLeafLoad(),1,OMR,Node
iuconst,iuconst(TR::Node *,uint32_t),1,OMR,Node
iuconst,iuconst(uint32_t),0,OMR,Node
lconst,lconst(int64_t),1,OMR,Node
lconst,lconst(TR::Node *,int64_t),0,OMR,Node
luconst,luconst(uint64_t),1,OMR,Node
luconst,luconst(TR::Node *,uint64_t),0,OMR,Node
markedAllocationCanBeRemoved,markedAllocationCanBeRemoved(),1,OMR,Node
mayKill,mayKill(_Bool),1,OMR,Node
mayModifyValue,mayModifyValue(TR::SymbolReference *),1,OMR,Node
mayUse,mayUse(),1,OMR,Node
mightHaveVolatileSymbolReference,mightHaveVolatileSymbolReference(),1,OMR,Node
needsPrecisionAdjustment,needsPrecisionAdjustment(),1,OMR,Node
needsSignExtension,needsSignExtension(),1,OMR,Node
nodeMightKillCondCode,nodeMightKillCondCode(),1,OMR,Node
nodeRequiresConditionCodes,nodeRequiresConditionCodes(),1,OMR,Node
normalizeNanValues,normalizeNanValues(),1,OMR,Node
notifyChangeToValueOfNode,notifyChangeToValueOfNode(),1,OMR,Node
oneParentSupportsLazyClobber,oneParentSupportsLazyClobber(TR::Compilation *),1,OMR,Node
operator new,operator new(size_t,TR::NodePool &),1,OMR,Node
operator new,operator new(size_t,void *),0,OMR,Node
operator=,operator=(const TR::Node &),1,OMR,Node
parentSupportsLazyClobber,parentSupportsLazyClobber(),1,OMR,Node
performsVolatileAccess,performsVolatileAccess(vcount_t),1,OMR,Node
pointsToNonNull,pointsToNonNull(),1,OMR,Node
pointsToNull,pointsToNull(),1,OMR,Node
printAllocationCanBeRemoved,printAllocationCanBeRemoved(),1,OMR,Node
printAndBitOpMem,printAndBitOpMem(),1,OMR,Node
printArrayCmpLen,printArrayCmpLen(),1,OMR,Node
printArrayCmpSign,printArrayCmpSign(),1,OMR,Node
printArrayTRT,printArrayTRT(),1,OMR,Node
printCanDesynchronizeCall,printCanDesynchronizeCall(),1,OMR,Node
printCanSkipZeroInitialization,printCanSkipZeroInitialization(),1,OMR,Node
printCannotOverflow,printCannotOverflow(),1,OMR,Node
printCannotTrackLocalStringUses,printCannotTrackLocalStringUses(),1,OMR,Node
printCannotTrackLocalUses,printCannotTrackLocalUses(),1,OMR,Node
printCharArrayTRT,printCharArrayTRT(),1,OMR,Node
printContainsCompressionSequence,printContainsCompressionSequence(),1,OMR,Node
printCopyToNewVirtualRegister,printCopyToNewVirtualRegister(),1,OMR,Node
printCouldIgnoreExtend,printCouldIgnoreExtend(),1,OMR,Node
printEscapesInColdBlock,printEscapesInColdBlock(),1,OMR,Node
printForce64BitLoad,printForce64BitLoad(),1,OMR,Node
printFullSubtree,printFullSubtree(),1,OMR,Node
printHasFoldedImplicitNULLCHK,printHasFoldedImplicitNULLCHK(),1,OMR,Node
printIsAbstractGuard,printIsAbstractGuard(),1,OMR,Node
printIsArrayChkPrimitiveArray1,printIsArrayChkPrimitiveArray1(),1,OMR,Node
printIsArrayChkPrimitiveArray2,printIsArrayChkPrimitiveArray2(),1,OMR,Node
printIsArrayChkReferenceArray1,printIsArrayChkReferenceArray1(),1,OMR,Node
printIsArrayChkReferenceArray2,printIsArrayChkReferenceArray2(),1,OMR,Node
printIsBackwardArrayCopy,printIsBackwardArrayCopy(),1,OMR,Node
printIsBreakpointGuard,printIsBreakpointGuard(),1,OMR,Node
printIsByteToByteTranslate,printIsByteToByteTranslate(),1,OMR,Node
printIsByteToCharTranslate,printIsByteToCharTranslate(),1,OMR,Node
printIsCharToByteTranslate,printIsCharToByteTranslate(),1,OMR,Node
printIsCharToCharTranslate,printIsCharToCharTranslate(),1,OMR,Node
printIsClassPointerConstant,printIsClassPointerConstant(),1,OMR,Node
printIsDirectMemoryUpdate,printIsDirectMemoryUpdate(),1,OMR,Node
printIsDirectMethodGuard,printIsDirectMethodGuard(),1,OMR,Node
printIsDontMoveUnderBranch,printIsDontMoveUnderBranch(),1,OMR,Node
printIsDontTransformArrayCopyCall,printIsDontTransformArrayCopyCall(),1,OMR,Node
printIsDummyGuard,printIsDummyGuard(),1,OMR,Node
printIsFPStrictCompliant,printIsFPStrictCompliant(),1,OMR,Node
printIsForwardArrayCopy,printIsForwardArrayCopy(),1,OMR,Node
printIsHCRGuard,printIsHCRGuard(),1,OMR,Node
printIsHPREligible,printIsHPREligible(),1,OMR,Node
printIsHalfWordElementArrayCopy,printIsHalfWordElementArrayCopy(),1,OMR,Node
printIsHeapObjectWrtBar,printIsHeapObjectWrtBar(),1,OMR,Node
printIsHeapificationAlloc,printIsHeapificationAlloc(),1,OMR,Node
printIsHeapificationStore,printIsHeapificationStore(),1,OMR,Node
printIsHierarchyGuard,printIsHierarchyGuard(),1,OMR,Node
printIsHighWordZero,printIsHighWordZero(),1,OMR,Node
printIsInterfaceGuard,printIsInterfaceGuard(),1,OMR,Node
printIsInternalPointer,printIsInternalPointer(),1,OMR,Node
printIsInvalid8BitGlobalRegister,printIsInvalid8BitGlobalRegister(),1,OMR,Node
printIsLiveMonitorInitStore,printIsLiveMonitorInitStore(),1,OMR,Node
printIsLocalObjectMonitor,printIsLocalObjectMonitor(),1,OMR,Node
printIsMaxLoopIterationGuard,printIsMaxLoopIterationGuard(),1,OMR,Node
printIsMethodEnterExitGuard,printIsMethodEnterExitGuard(),1,OMR,Node
printIsMethodPointerConstant,printIsMethodPointerConstant(),1,OMR,Node
printIsMutableCallSiteTargetGuard,printIsMutableCallSiteTargetGuard(),1,OMR,Node
printIsNOPLongStore,printIsNOPLongStore(),1,OMR,Node
printIsNoArrayStoreCheckArrayCopy,printIsNoArrayStoreCheckArrayCopy(),1,OMR,Node
printIsNodeCreatedByPRE,printIsNodeCreatedByPRE(),1,OMR,Node
printIsNodeRecognizedArrayCopyCall,printIsNodeRecognizedArrayCopyCall(),1,OMR,Node
printIsNonHeapObjectWrtBar,printIsNonHeapObjectWrtBar(),1,OMR,Node
printIsNonNegative,printIsNonNegative(),1,OMR,Node
printIsNonPositive,printIsNonPositive(),1,OMR,Node
printIsNonZero,printIsNonZero(),1,OMR,Node
printIsNonoverriddenGuard,printIsNonoverriddenGuard(),1,OMR,Node
printIsNormalizedShift,printIsNormalizedShift(),1,OMR,Node
printIsOSRGuard,printIsOSRGuard(),1,OMR,Node
printIsOmitSync,printIsOmitSync(),1,OMR,Node
printIsPrimitiveLockedRegion,printIsPrimitiveLockedRegion(),1,OMR,Node
printIsPrivatizedInlinerArg,printIsPrivatizedInlinerArg(),1,OMR,Node
printIsProfiledGuard,printIsProfiledGuard(),1,OMR,Node
printIsProfilingCode,printIsProfilingCode(),1,OMR,Node
printIsRarePathForwardArrayCopy,printIsRarePathForwardArrayCopy(),1,OMR,Node
printIsReadMonitor,printIsReadMonitor(),1,OMR,Node
printIsReferenceArrayCopy,printIsReferenceArrayCopy(),1,OMR,Node
printIsReferenceNonNull,printIsReferenceNonNull(),1,OMR,Node
printIsSafeToSkipTableBoundCheck,printIsSafeToSkipTableBoundCheck(),1,OMR,Node
printIsSeenRealReference,printIsSeenRealReference(),1,OMR,Node
printIsSideEffectGuard,printIsSideEffectGuard(),1,OMR,Node
printIsSimpleDivCheck,printIsSimpleDivCheck(),1,OMR,Node
printIsSkipSync,printIsSkipSync(),1,OMR,Node
printIsSkipWrtBar,printIsSkipWrtBar(),1,OMR,Node
printIsStaticMonitor,printIsStaticMonitor(),1,OMR,Node
printIsStoredValueIsIrrelevant,printIsStoredValueIsIrrelevant(),1,OMR,Node
printIsSyncMethodMonitor,printIsSyncMethodMonitor(),1,OMR,Node
printIsTheVirtualCallNodeForAGuardedInlinedCall,printIsTheVirtualCallNodeForAGuardedInlinedCall(),1,OMR,Node
printIsThrowInsertedByOSR,printIsThrowInsertedByOSR(),1,OMR,Node
printIsUnneededConversion,printIsUnneededConversion(),1,OMR,Node
printIsUnsigned,printIsUnsigned(),1,OMR,Node
printIsUnsignedLoad,printIsUnsignedLoad(),1,OMR,Node
printIsWordElementArrayCopy,printIsWordElementArrayCopy(),1,OMR,Node
printIsZero,printIsZero(),1,OMR,Node
printNeedsPrecisionAdjustment,printNeedsPrecisionAdjustment(),1,OMR,Node
printNeedsSignExtension,printNeedsSignExtension(),1,OMR,Node
printNormalizeNanValues,printNormalizeNanValues(),1,OMR,Node
printOrBitOpMem,printOrBitOpMem(),1,OMR,Node
printParentSupportsLazyClobber,printParentSupportsLazyClobber(),1,OMR,Node
printPointsToNonNull,printPointsToNonNull(),1,OMR,Node
printPointsToNull,printPointsToNull(),1,OMR,Node
printRequiresConditionCodes,printRequiresConditionCodes(),1,OMR,Node
printReturnIsDummy,printReturnIsDummy(),1,OMR,Node
printSetSourceIsByteArrayTranslate,printSetSourceIsByteArrayTranslate(),1,OMR,Node
printSetTableBackedByRawStorage,printSetTableBackedByRawStorage(),1,OMR,Node
printSetTargetIsByteArrayTranslate,printSetTargetIsByteArrayTranslate(),1,OMR,Node
printSetTermCharNodeIsHint,printSetTermCharNodeIsHint(),1,OMR,Node
printSetUseSignExtensionMode,printSetUseSignExtensionMode(),1,OMR,Node
printSkipSignExtension,printSkipSignExtension(),1,OMR,Node
printSourceCellIsTermChar,printSourceCellIsTermChar(),1,OMR,Node
printStoreAlreadyEvaluated,printStoreAlreadyEvaluated(),1,OMR,Node
printUseCallForFloatToFixedConversion,printUseCallForFloatToFixedConversion(),1,OMR,Node
printXorBitOpMem,printXorBitOpMem(),1,OMR,Node
recreate,recreate(TR::Node *,TR::ILOpCodes),1,OMR,Node
recreateAndCopyValidPropertiesImpl,recreateAndCopyValidPropertiesImpl(TR::Node *,TR::ILOpCodes,TR::SymbolReference *),1,OMR,Node
recreateWithSymRef,recreateWithSymRef(TR::Node *,TR::ILOpCodes,TR::SymbolReference *),1,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *),1,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::SymbolReference *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::SymbolReference *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::SymbolReference *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
recursivelyDecReferenceCount,recursivelyDecReferenceCount(),1,OMR,Node
recursivelyDecReferenceCountFromCodeGen,recursivelyDecReferenceCountFromCodeGen(),1,OMR,Node
removeAllChildren,removeAllChildren(),1,OMR,Node
removeChild,removeChild(int32_t),1,OMR,Node
removeLastChild,removeLastChild(),1,OMR,Node
resetFlagsForCodeMotion,resetFlagsForCodeMotion(),1,OMR,Node
resetIsHPREligible,resetIsHPREligible(),1,OMR,Node
resetIsNodeCreatedByPRE,resetIsNodeCreatedByPRE(),1,OMR,Node
resetIsTheVirtualCallNodeForAGuardedInlinedCall,resetIsTheVirtualCallNodeForAGuardedInlinedCall(),1,OMR,Node
resetIsTheVirtualGuardForAGuardedInlinedCall,resetIsTheVirtualGuardForAGuardedInlinedCall(),1,OMR,Node
resetVisitCounts,resetVisitCounts(vcount_t),1,OMR,Node
reverseBranch,reverseBranch(TR::TreeTop *),1,OMR,Node
rotateChildren,rotateChildren(int32_t,int32_t),1,OMR,Node
safeToDoRecursiveDecrement,safeToDoRecursiveDecrement(),1,OMR,Node
sconst,sconst(TR::Node *,int16_t),1,OMR,Node
sconst,sconst(int16_t),0,OMR,Node
self,self(),1,OMR,Node
set64bitIntegralValue,set64bitIntegralValue(int64_t),1,OMR,Node
setAddress,setAddress(uint64_t),1,OMR,Node
setAlignTLHAlloc,setAlignTLHAlloc(_Bool),1,OMR,Node
setAllocation,setAllocation(TR::Node *),1,OMR,Node
setAllocationCanBeRemoved,setAllocationCanBeRemoved(_Bool),1,OMR,Node
setAndBitOpMem,setAndBitOpMem(_Bool),1,OMR,Node
setAndIncChild,setAndIncChild(int32_t,TR::Node *),1,OMR,Node
setAndIncValueChild,setAndIncValueChild(TR::Node *),1,OMR,Node
setArrayChkPrimitiveArray1,setArrayChkPrimitiveArray1(_Bool),1,OMR,Node
setArrayChkPrimitiveArray2,setArrayChkPrimitiveArray2(_Bool),1,OMR,Node
setArrayChkReferenceArray1,setArrayChkReferenceArray1(_Bool),1,OMR,Node
setArrayChkReferenceArray2,setArrayChkReferenceArray2(_Bool),1,OMR,Node
setArrayCmpLen,setArrayCmpLen(_Bool),1,OMR,Node
setArrayCmpSign,setArrayCmpSign(_Bool),1,OMR,Node
setArrayComponentClassInNode,setArrayComponentClassInNode(class TR_OpaqueClassBlock *),1,OMR,Node
setArrayCopyElementType,setArrayCopyElementType(TR::DataType),1,OMR,Node
setArrayStoreClassInNode,setArrayStoreClassInNode(class TR_OpaqueClassBlock *),1,OMR,Node
setArrayStride,setArrayStride(int32_t),1,OMR,Node
setArrayTRT,setArrayTRT(_Bool),1,OMR,Node
setArraysetLengthMultipleOfPointerSize,setArraysetLengthMultipleOfPointerSize(_Bool),1,OMR,Node
setBackwardArrayCopy,setBackwardArrayCopy(_Bool),1,OMR,Node
setBlock,setBlock(TR::Block *),1,OMR,Node
setBranchDestination,setBranchDestination(TR::TreeTop *),1,OMR,Node
setByte,setByte(int8_t),1,OMR,Node
setByteCodeIndex,setByteCodeIndex(uint32_t),1,OMR,Node
setByteCodeInfo,setByteCodeInfo(const TR_ByteCodeInfo &),1,OMR,Node
setCanSkipZeroInitialization,setCanSkipZeroInitialization(_Bool),1,OMR,Node
setCannotOverflow,setCannotOverflow(_Bool),1,OMR,Node
setCannotTrackLocalStringUses,setCannotTrackLocalStringUses(_Bool),1,OMR,Node
setCannotTrackLocalUses,setCannotTrackLocalUses(_Bool),1,OMR,Node
setCaseConstant,setCaseConstant(CASECONST_TYPE),1,OMR,Node
setCharArrayTRT,setCharArrayTRT(_Bool),1,OMR,Node
setChild,setChild(int32_t,TR::Node *),1,OMR,Node
setConstValue,setConstValue(int64_t),1,OMR,Node
setContainsCall,setContainsCall(_Bool),1,OMR,Node
setContainsCompressionSequence,setContainsCompressionSequence(_Bool),1,OMR,Node
setCopyToNewVirtualRegister,setCopyToNewVirtualRegister(_Bool),1,OMR,Node
setCouldIgnoreExtend,setCouldIgnoreExtend(_Bool),1,OMR,Node
setDataType,setDataType(TR::DataType),1,OMR,Node
setDesynchronizeCall,setDesynchronizeCall(_Bool),1,OMR,Node
setDirectMemoryUpdate,setDirectMemoryUpdate(_Bool),1,OMR,Node
setDontTransformArrayCopyCall,setDontTransformArrayCopyCall(),1,OMR,Node
setDouble,setDouble(double),1,OMR,Node
setDoubleBits,setDoubleBits(uint64_t),1,OMR,Node
setEscapesInColdBlock,setEscapesInColdBlock(_Bool),1,OMR,Node
setEvaluationPriority,setEvaluationPriority(int32_t),1,OMR,Node
setFirst,setFirst(TR::Node *),1,OMR,Node
setFlags,setFlags(flags32_t),1,OMR,Node
setFloat,setFloat(float),1,OMR,Node
setFloatBits,setFloatBits(uint32_t),1,OMR,Node
setForce64BitLoad,setForce64BitLoad(_Bool),1,OMR,Node
setForwardArrayCopy,setForwardArrayCopy(_Bool),1,OMR,Node
setFutureUseCount,setFutureUseCount(scount_t),1,OMR,Node
setGlobalIndex,setGlobalIndex(ncount_t),1,OMR,Node
setGlobalRegisterNumber,setGlobalRegisterNumber(TR_GlobalRegisterNumber),1,OMR,Node
setHalfWordElementArrayCopy,setHalfWordElementArrayCopy(_Bool),1,OMR,Node
setHasBeenVisitedForHints,setHasBeenVisitedForHints(_Bool),1,OMR,Node
setHasFoldedImplicitNULLCHK,setHasFoldedImplicitNULLCHK(_Bool),1,OMR,Node
setHasMonitorClassInNode,setHasMonitorClassInNode(_Bool),1,OMR,Node
setHasNodeExtension,setHasNodeExtension(_Bool),1,OMR,Node
setHeapificationAlloc,setHeapificationAlloc(_Bool),1,OMR,Node
setHeapificationStore,setHeapificationStore(_Bool),1,OMR,Node
setHighGlobalRegisterNumber,setHighGlobalRegisterNumber(TR_GlobalRegisterNumber),1,OMR,Node
setInlinedSiteIndex,setInlinedSiteIndex(int16_t),1,OMR,Node
setInt,setInt(int32_t),1,OMR,Node
setIsAbstractGuard,setIsAbstractGuard(),1,OMR,Node
setIsAdjunct,setIsAdjunct(_Bool),1,OMR,Node
setIsBigDecimalLoad,setIsBigDecimalLoad(),1,OMR,Node
setIsBreakpointGuard,setIsBreakpointGuard(),1,OMR,Node
setIsClassPointerConstant,setIsClassPointerConstant(_Bool),1,OMR,Node
setIsDebug,setIsDebug(_Bool),1,OMR,Node
setIsDirectMethodGuard,setIsDirectMethodGuard(_Bool),1,OMR,Node
setIsDontMoveUnderBranch,setIsDontMoveUnderBranch(_Bool),1,OMR,Node
setIsDummyGuard,setIsDummyGuard(),1,OMR,Node
setIsFPStrictCompliant,setIsFPStrictCompliant(_Bool),1,OMR,Node
setIsHCRGuard,setIsHCRGuard(),1,OMR,Node
setIsHPREligible,setIsHPREligible(),1,OMR,Node
setIsHeapObjectWrtBar,setIsHeapObjectWrtBar(_Bool),1,OMR,Node
setIsHierarchyGuard,setIsHierarchyGuard(),1,OMR,Node
setIsHighWordZero,setIsHighWordZero(_Bool),1,OMR,Node
setIsInterfaceGuard,setIsInterfaceGuard(),1,OMR,Node
setIsInternalPointer,setIsInternalPointer(_Bool),1,OMR,Node
setIsInvalid8BitGlobalRegister,setIsInvalid8BitGlobalRegister(_Bool),1,OMR,Node
setIsLoadAndTest,setIsLoadAndTest(_Bool),1,OMR,Node
setIsLoadFence,setIsLoadFence(),1,OMR,Node
setIsMaxLoopIterationGuard,setIsMaxLoopIterationGuard(_Bool),1,OMR,Node
setIsMethodEnterExitGuard,setIsMethodEnterExitGuard(_Bool),1,OMR,Node
setIsMethodPointerConstant,setIsMethodPointerConstant(_Bool),1,OMR,Node
setIsMutableCallSiteTargetGuard,setIsMutableCallSiteTargetGuard(),1,OMR,Node
setIsNodeCreatedByPRE,setIsNodeCreatedByPRE(),1,OMR,Node
setIsNonHeapObjectWrtBar,setIsNonHeapObjectWrtBar(_Bool),1,OMR,Node
setIsNonNegative,setIsNonNegative(_Bool),1,OMR,Node
setIsNonNull,setIsNonNull(_Bool),1,OMR,Node
setIsNonPositive,setIsNonPositive(_Bool),1,OMR,Node
setIsNonZero,setIsNonZero(_Bool),1,OMR,Node
setIsNonoverriddenGuard,setIsNonoverriddenGuard(),1,OMR,Node
setIsNotRematerializeable,setIsNotRematerializeable(),1,OMR,Node
setIsNull,setIsNull(_Bool),1,OMR,Node
setIsOSRGuard,setIsOSRGuard(),1,OMR,Node
setIsPowerOfTwo,setIsPowerOfTwo(_Bool),1,OMR,Node
setIsPrivatizedInlinerArg,setIsPrivatizedInlinerArg(_Bool),1,OMR,Node
setIsProfiledGuard,setIsProfiledGuard(),1,OMR,Node
setIsProfilingCode,setIsProfilingCode(),1,OMR,Node
setIsSafeForCGToFastPathUnsafeCall,setIsSafeForCGToFastPathUnsafeCall(_Bool),1,OMR,Node
setIsSafeToSkipTableBoundCheck,setIsSafeToSkipTableBoundCheck(_Bool),1,OMR,Node
setIsSideEffectGuard,setIsSideEffectGuard(),1,OMR,Node
setIsStoreFence,setIsStoreFence(),1,OMR,Node
setIsTheVirtualCallNodeForAGuardedInlinedCall,setIsTheVirtualCallNodeForAGuardedInlinedCall(),1,OMR,Node
setIsUnsafeStaticWrtBar,setIsUnsafeStaticWrtBar(_Bool),1,OMR,Node
setIsUnsignedLoad,setIsUnsignedLoad(_Bool),1,OMR,Node
setIsUseBranchOnCount,setIsUseBranchOnCount(_Bool),1,OMR,Node
setIsVersionableIfWithMaxExpr,setIsVersionableIfWithMaxExpr(TR::Compilation *),1,OMR,Node
setIsVersionableIfWithMinExpr,setIsVersionableIfWithMinExpr(TR::Compilation *),1,OMR,Node
setIsZero,setIsZero(_Bool),1,OMR,Node
setLabel,setLabel(TR::LabelSymbol *),1,OMR,Node
setLikelyStackWrtBar,setLikelyStackWrtBar(_Bool),1,OMR,Node
setLiteralPoolOffset,setLiteralPoolOffset(size_t,size_t),1,OMR,Node
setLiveMonitorInitStore,setLiveMonitorInitStore(_Bool),1,OMR,Node
setLocalIndex,setLocalIndex(scount_t),1,OMR,Node
setLocalObjectMonitor,setLocalObjectMonitor(_Bool),1,OMR,Node
setLongInt,setLongInt(int64_t),1,OMR,Node
setLowGlobalRegisterNumber,setLowGlobalRegisterNumber(TR_GlobalRegisterNumber),1,OMR,Node
setMethod,setMethod(class TR_OpaqueMethodBlock *),1,OMR,Node
setMonitorClassInNode,setMonitorClassInNode(class TR_OpaqueClassBlock *),1,OMR,Node
setMonitorInfo,setMonitorInfo(void *),1,OMR,Node
setNOPLongStore,setNOPLongStore(_Bool),1,OMR,Node
setNeedsPrecisionAdjustment,setNeedsPrecisionAdjustment(_Bool),1,OMR,Node
setNeedsSignExtension,setNeedsSignExtension(_Bool),1,OMR,Node
setNoArrayStoreCheckArrayCopy,setNoArrayStoreCheckArrayCopy(_Bool),1,OMR,Node
setNodeIsRecognizedArrayCopyCall,setNodeIsRecognizedArrayCopyCall(_Bool),1,OMR,Node
setNodeRequiresConditionCodes,setNodeRequiresConditionCodes(_Bool),1,OMR,Node
setNormalizeNanValues,setNormalizeNanValues(_Bool),1,OMR,Node
setNormalizedShift,setNormalizedShift(_Bool),1,OMR,Node
setNullCheckReference,setNullCheckReference(TR::Node *),1,OMR,Node
setNumChildren,setNumChildren(uint16_t),1,OMR,Node
setNumRelocations,setNumRelocations(uint32_t),1,OMR,Node
setOmitSync,setOmitSync(_Bool),1,OMR,Node
setOpCodeValue,setOpCodeValue(TR::ILOpCodes),1,OMR,Node
setOrBitOpMem,setOrBitOpMem(_Bool),1,OMR,Node
setOverflowCheckOperation,setOverflowCheckOperation(TR::ILOpCodes),1,OMR,Node
setParentSupportsLazyClobber,setParentSupportsLazyClobber(_Bool),1,OMR,Node
setPinningArrayPointer,setPinningArrayPointer(TR::AutomaticSymbol *),1,OMR,Node
setPointsToNonNull,setPointsToNonNull(_Bool),1,OMR,Node
setPointsToNull,setPointsToNull(_Bool),1,OMR,Node
setPreparedForDirectJNI,setPreparedForDirectJNI(),1,OMR,Node
setPrimitiveLockedRegion,setPrimitiveLockedRegion(_Bool),1,OMR,Node
setRarePathForwardArrayCopy,setRarePathForwardArrayCopy(_Bool),1,OMR,Node
setReadMonitor,setReadMonitor(_Bool),1,OMR,Node
setReferenceCount,setReferenceCount(rcount_t),1,OMR,Node
setReferenceIsNonNull,setReferenceIsNonNull(_Bool),1,OMR,Node
setRegLoadStoreSymbolReference,setRegLoadStoreSymbolReference(TR::SymbolReference *),1,OMR,Node
setRegister,setRegister(TR::Register *),1,OMR,Node
setRelocationDestination,setRelocationDestination(uint32_t,void *),1,OMR,Node
setRelocationType,setRelocationType(uint32_t),1,OMR,Node
setReturnIsDummy,setReturnIsDummy(),1,OMR,Node
setSecond,setSecond(TR::Node *),1,OMR,Node
setSeenRealReference,setSeenRealReference(_Bool),1,OMR,Node
setShortInt,setShortInt(int16_t),1,OMR,Node
setSimpleDivCheck,setSimpleDivCheck(_Bool),1,OMR,Node
setSkipSignExtension,setSkipSignExtension(_Bool),1,OMR,Node
setSkipSync,setSkipSync(_Bool),1,OMR,Node
setSkipWrtBar,setSkipWrtBar(_Bool),1,OMR,Node
setSourceCellIsTermChar,setSourceCellIsTermChar(_Bool),1,OMR,Node
setSourceIsByteArrayTranslate,setSourceIsByteArrayTranslate(_Bool),1,OMR,Node
setStaticMonitor,setStaticMonitor(_Bool),1,OMR,Node
setStoreAlreadyEvaluated,setStoreAlreadyEvaluated(_Bool),1,OMR,Node
setStoredValueIsIrrelevant,setStoredValueIsIrrelevant(_Bool),1,OMR,Node
setSwappedChildren,setSwappedChildren(_Bool),1,OMR,Node
setSymbolReference,setSymbolReference(TR::SymbolReference *),1,OMR,Node
setSyncMethodMonitor,setSyncMethodMonitor(_Bool),1,OMR,Node
setTableBackedByRawStorage,setTableBackedByRawStorage(_Bool),1,OMR,Node
setTargetIsByteArrayTranslate,setTargetIsByteArrayTranslate(_Bool),1,OMR,Node
setTermCharNodeIsHint,setTermCharNodeIsHint(_Bool),1,OMR,Node
setThrowInsertedByOSR,setThrowInsertedByOSR(_Bool),1,OMR,Node
setUnneededConversion,setUnneededConversion(_Bool),1,OMR,Node
setUnneededIALoad,setUnneededIALoad(_Bool),1,OMR,Node
setUnsigned,setUnsigned(_Bool),1,OMR,Node
setUnsignedByte,setUnsignedByte(uint8_t),1,OMR,Node
setUnsignedInt,setUnsignedInt(uint32_t),1,OMR,Node
setUnsignedLongInt,setUnsignedLongInt(uint64_t),1,OMR,Node
setUnsignedShortInt,setUnsignedShortInt(uint16_t),1,OMR,Node
setUseCallForFloatToFixedConversion,setUseCallForFloatToFixedConversion(_Bool),1,OMR,Node
setUseDefIndex,setUseDefIndex(uint16_t),1,OMR,Node
setUseSignExtensionMode,setUseSignExtensionMode(_Bool),1,OMR,Node
setValueChild,setValueChild(TR::Node *),1,OMR,Node
setVisitCount,setVisitCount(vcount_t),1,OMR,Node
setWordElementArrayCopy,setWordElementArrayCopy(_Bool),1,OMR,Node
setXorBitOpMem,setXorBitOpMem(_Bool),1,OMR,Node
shouldAlignTLHAlloc,shouldAlignTLHAlloc(),1,OMR,Node
sizeOfExtension,sizeOfExtension(),1,OMR,Node
skipConversions,skipConversions(),1,OMR,Node
skipSignExtension,skipSignExtension(),1,OMR,Node
skipWrtBar,skipWrtBar(),1,OMR,Node
storedValueIsIrrelevant,storedValueIsIrrelevant(),1,OMR,Node
swapChildren,swapChildren(),1,OMR,Node
throwInsertedByOSR,throwInsertedByOSR(),1,OMR,Node
uncommon,uncommon(),1,OMR,Node
uncommonChild,uncommonChild(int32_t),1,OMR,Node
unsetRegister,unsetRegister(),1,OMR,Node
useCallForFloatToFixedConversion,useCallForFloatToFixedConversion(),1,OMR,Node
useSignExtensionMode,useSignExtensionMode(),1,OMR,Node
uses64BitGPRs,uses64BitGPRs(),1,OMR,Node
~Node,~Node(),1,OMR,Node
ObjectModel,ObjectModel(class OMR::ObjectModel &&),1,OMR,ObjectModel
ObjectModel,ObjectModel(const class OMR::ObjectModel &),0,OMR,ObjectModel
ObjectModel,ObjectModel(),0,OMR,ObjectModel
ObjectModel,ObjectModel(class TestCompiler::ObjectModel &&),0,TestCompiler,ObjectModel
ObjectModel,ObjectModel(const class TestCompiler::ObjectModel &),0,TestCompiler,ObjectModel
ObjectModel,ObjectModel(class TR::ObjectModel &&),0,TR,ObjectModel
ObjectModel,ObjectModel(const class TR::ObjectModel &),0,TR,ObjectModel
arraySpineShift,arraySpineShift(int32_t),1,OMR,ObjectModel
arrayletLeafIndex,arrayletLeafIndex(int32_t,int32_t),1,OMR,ObjectModel
arrayletMask,arrayletMask(int32_t),1,OMR,ObjectModel
canGenerateArraylets,canGenerateArraylets(),1,OMR,ObjectModel
compressedReferenceShift,compressedReferenceShift(),1,OMR,ObjectModel
compressedReferenceShiftOffset,compressedReferenceShiftOffset(),1,OMR,ObjectModel
contiguousArrayHeaderSizeInBytes,contiguousArrayHeaderSizeInBytes(),1,OMR,ObjectModel
discontiguousArrayHeaderSizeInBytes,discontiguousArrayHeaderSizeInBytes(),1,OMR,ObjectModel
elementSizeOfBooleanArray,elementSizeOfBooleanArray(),1,OMR,ObjectModel
generateCompressedObjectHeaders,generateCompressedObjectHeaders(),1,OMR,ObjectModel
getSizeOfArrayElement,getSizeOfArrayElement(TR::Node *),1,OMR,ObjectModel
initialize,initialize(),1,OMR,ObjectModel
isDiscontiguousArray,isDiscontiguousArray(int32_t),1,OMR,ObjectModel
isDiscontiguousArray,isDiscontiguousArray(int32_t,int32_t),0,OMR,ObjectModel
maxArraySizeInElements,maxArraySizeInElements(int32_t,TR::Compilation *),1,OMR,ObjectModel
maxArraySizeInElementsForAllocation,maxArraySizeInElementsForAllocation(TR::Node *,TR::Compilation *),1,OMR,ObjectModel
maxContiguousArraySizeInBytes,maxContiguousArraySizeInBytes(),1,OMR,ObjectModel
mayRequireSpineChecks,mayRequireSpineChecks(),1,OMR,ObjectModel
nativeAddressesCanChangeSize,nativeAddressesCanChangeSize(),1,OMR,ObjectModel
objectAlignmentInBytes,objectAlignmentInBytes(),1,OMR,ObjectModel
objectHeaderSizeInBytes,objectHeaderSizeInBytes(),1,OMR,ObjectModel
offsetOfContiguousArraySizeField,offsetOfContiguousArraySizeField(),1,OMR,ObjectModel
offsetOfDiscontiguousArraySizeField,offsetOfDiscontiguousArraySizeField(),1,OMR,ObjectModel
offsetOfIndexableSizeField,offsetOfIndexableSizeField(),1,OMR,ObjectModel
offsetOfObjectVftField,offsetOfObjectVftField(),1,OMR,ObjectModel
operator=,operator=(class OMR::ObjectModel &&),1,OMR,ObjectModel
operator=,operator=(const class OMR::ObjectModel &),0,OMR,ObjectModel
operator=,operator=(const class TestCompiler::ObjectModel &),0,TestCompiler,ObjectModel
operator=,operator=(class TestCompiler::ObjectModel &&),0,TestCompiler,ObjectModel
operator=,operator=(const class TR::ObjectModel &),0,TR,ObjectModel
operator=,operator=(class TR::ObjectModel &&),0,TR,ObjectModel
shouldGenerateReadBarriersForFieldLoads,shouldGenerateReadBarriersForFieldLoads(),1,OMR,ObjectModel
sizeofReferenceAddress,sizeofReferenceAddress(),1,OMR,ObjectModel
sizeofReferenceField,sizeofReferenceField(),1,OMR,ObjectModel
useHybridArraylets,useHybridArraylets(),1,OMR,ObjectModel
usesDiscontiguousArraylets,usesDiscontiguousArraylets(),1,OMR,ObjectModel
~ObjectModel,~ObjectModel(),1,OMR,ObjectModel
Optimizer,Optimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool,const struct OptimizationStrategy *,uint16_t),1,OMR,Optimizer
Optimizer,Optimizer(class OMR::Optimizer &&),0,OMR,Optimizer
Optimizer,Optimizer(const class OMR::Optimizer &),0,OMR,Optimizer
Optimizer,Optimizer(class TestCompiler::Optimizer &&),0,TestCompiler,Optimizer
Optimizer,Optimizer(const class TestCompiler::Optimizer &),0,TestCompiler,Optimizer
areBCDAggrConstantNodesEquivalent,areBCDAggrConstantNodesEquivalent(TR::Node *,TR::Node *,TR::Compilation *),1,OMR,Optimizer
areNodesEquivalent,areNodesEquivalent(TR::Node *,TR::Node *,_Bool),1,OMR,Optimizer
areNodesEquivalent,areNodesEquivalent(TR::Node *,TR::Node *,TR::Compilation *,_Bool),0,OMR,Optimizer
areSyntacticallyEquivalent,areSyntacticallyEquivalent(TR::Node *,TR::Node *,vcount_t),1,OMR,Optimizer
cachedExtendedBBInfoValid,cachedExtendedBBInfoValid(),1,OMR,Optimizer
canRunBlockByBlockOptimizations,canRunBlockByBlockOptimizations(),1,OMR,Optimizer
cantBuildGlobalsUseDefInfo,cantBuildGlobalsUseDefInfo(),1,OMR,Optimizer
cantBuildGlobalsValueNumberInfo,cantBuildGlobalsValueNumberInfo(),1,OMR,Optimizer
cantBuildLocalsUseDefInfo,cantBuildLocalsUseDefInfo(),1,OMR,Optimizer
cantBuildLocalsValueNumberInfo,cantBuildLocalsValueNumberInfo(),1,OMR,Optimizer
cg,cg(),1,OMR,Optimizer
changeContinueLoopsToNestedLoops,changeContinueLoopsToNestedLoops(),1,OMR,Optimizer
checkMaxHotnessOfInlinedMethods,checkMaxHotnessOfInlinedMethods(TR::Compilation *),1,OMR,Optimizer
checkNumberOfLoopsAndBasicBlocks,checkNumberOfLoopsAndBasicBlocks(TR::Compilation *,class TR_Structure *),1,OMR,Optimizer
comp,comp(),1,OMR,Optimizer
countNumberOfLoops,countNumberOfLoops(class TR_Structure *),1,OMR,Optimizer
createOptimizer,createOptimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool),1,OMR,Optimizer
createValueNumberInfo,createValueNumberInfo(_Bool,_Bool,_Bool),1,OMR,Optimizer
doStructuralAnalysis,doStructuralAnalysis(),1,OMR,Optimizer
doStructureChecks,doStructureChecks(),1,OMR,Optimizer
dumpPostOptTrees,dumpPostOptTrees(),1,OMR,Optimizer
dumpStrategy,dumpStrategy(const struct OptimizationStrategy *),1,OMR,Optimizer
enableAllLocalOpts,enableAllLocalOpts(),1,OMR,Optimizer
getAliasSetsAreValid,getAliasSetsAreValid(),1,OMR,Optimizer
getClassPointerNodes,getClassPointerNodes(),1,OMR,Optimizer
getDebug,getDebug(),1,OMR,Optimizer
getDumpGraphsIndex,getDumpGraphsIndex(),1,OMR,Optimizer
getEliminatedCheckcastNodes,getEliminatedCheckcastNodes(),1,OMR,Optimizer
getEnclosingFinallyBlock,getEnclosingFinallyBlock(),1,OMR,Optimizer
getInlineSynchronized,getInlineSynchronized(),1,OMR,Optimizer
getInlinerPolicy,getInlinerPolicy(),1,OMR,Optimizer
getInlinerUtil,getInlinerUtil(),1,OMR,Optimizer
getLastRun,getLastRun(OMR::Optimizations),1,OMR,Optimizer
getMethodSymbol,getMethodSymbol(),1,OMR,Optimizer
getOptMessageIndex,getOptMessageIndex(),1,OMR,Optimizer
getOptimization,getOptimization(OMR::Optimizations),1,OMR,Optimizer
getOptimizationName,getOptimizationName(OMR::Optimizations),1,OMR,Optimizer
getResetExitsGRA,getResetExitsGRA(),1,OMR,Optimizer
getSeenBlocksGRA,getSeenBlocksGRA(),1,OMR,Optimizer
getStaticFrequency,getStaticFrequency(TR::Block *,int32_t *),1,OMR,Optimizer
getSuccessorBitsGRA,getSuccessorBitsGRA(),1,OMR,Optimizer
getSymReferencesTable,getSymReferencesTable(),1,OMR,Optimizer
getUseDefInfo,getUseDefInfo(),1,OMR,Optimizer
getValueNumberInfo,getValueNumberInfo(),1,OMR,Optimizer
incOptMessageIndex,incOptMessageIndex(),1,OMR,Optimizer
isEnabled,isEnabled(OMR::Optimizations),1,OMR,Optimizer
isIlGenOpt,isIlGenOpt(),1,OMR,Optimizer
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Optimizer
jitPersistentFree,jitPersistentFree(void *),1,OMR,Optimizer
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Optimizer
operator delete,operator delete(void *,size_t),0,OMR,Optimizer
operator delete,operator delete(void *,TR::Region &),0,OMR,Optimizer
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Optimizer
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Optimizer
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Optimizer
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Optimizer
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Optimizer
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Optimizer
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Optimizer
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Optimizer
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Optimizer
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Optimizer
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Optimizer
operator new,operator new(size_t,TR::Region &),0,OMR,Optimizer
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Optimizer
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,Optimizer
operator new[],operator new[](size_t,TR::Region &),0,OMR,Optimizer
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Optimizer
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Optimizer
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Optimizer
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Optimizer
optimizationStrategy,optimizationStrategy(TR::Compilation *),1,OMR,Optimizer
optimize,optimize(),1,OMR,Optimizer
optsThatCanCreateLoopsDisabled,optsThatCanCreateLoopsDisabled(),1,OMR,Optimizer
performOptimization,performOptimization(const struct OptimizationStrategy *,int32_t,int32_t,int32_t),1,OMR,Optimizer
performVeryLateOpts,performVeryLateOpts(),1,OMR,Optimizer
prepareForNodeRemoval,prepareForNodeRemoval(TR::Node *,_Bool),1,OMR,Optimizer
prepareForTreeRemoval,prepareForTreeRemoval(TR::TreeTop *),1,OMR,Optimizer
self,self(),1,OMR,Optimizer
setAliasSetsAreValid,setAliasSetsAreValid(_Bool,_Bool),1,OMR,Optimizer
setCachedExtendedBBInfoValid,setCachedExtendedBBInfoValid(_Bool),1,OMR,Optimizer
setCanRunBlockByBlockOptimizations,setCanRunBlockByBlockOptimizations(_Bool),1,OMR,Optimizer
setCantBuildGlobalsUseDefInfo,setCantBuildGlobalsUseDefInfo(_Bool),1,OMR,Optimizer
setCantBuildGlobalsValueNumberInfo,setCantBuildGlobalsValueNumberInfo(_Bool),1,OMR,Optimizer
setCantBuildLocalsUseDefInfo,setCantBuildLocalsUseDefInfo(_Bool),1,OMR,Optimizer
setCantBuildLocalsValueNumberInfo,setCantBuildLocalsValueNumberInfo(_Bool),1,OMR,Optimizer
setEnclosingFinallyBlock,setEnclosingFinallyBlock(TR::Block *),1,OMR,Optimizer
setInlineSynchronized,setInlineSynchronized(_Bool),1,OMR,Optimizer
setMockStrategy,setMockStrategy(const struct OptimizationStrategy *),1,TestCompiler,Optimizer
setRequestOptimization,setRequestOptimization(OMR::Optimizations,_Bool,TR::Block *),1,OMR,Optimizer
setResetExitsGRA,setResetExitsGRA(class TR_BitVector *),1,OMR,Optimizer
setSeenBlocksGRA,setSeenBlocksGRA(class TR_BitVector *),1,OMR,Optimizer
setStrategy,setStrategy(const struct OptimizationStrategy *),1,OMR,Optimizer
setSuccessorBitsGRA,setSuccessorBitsGRA(class TR_BitVector *),1,OMR,Optimizer
setSymReferencesTable,setSymReferencesTable(int32_t *),1,OMR,Optimizer
setUseDefInfo,setUseDefInfo(class TR_UseDefInfo *),1,OMR,Optimizer
setValueNumberInfo,setValueNumberInfo(class TR_ValueNumberInfo *),1,OMR,Optimizer
switchToProfiling,switchToProfiling(),1,OMR,Optimizer
switchToProfiling,switchToProfiling(uint32_t,uint32_t),0,OMR,Optimizer
trHeapMemory,trHeapMemory(),1,OMR,Optimizer
trMemory,trMemory(),1,OMR,Optimizer
trPersistentMemory,trPersistentMemory(),1,OMR,Optimizer
trStackMemory,trStackMemory(),1,OMR,Optimizer
valueNumberInfoBuildType,valueNumberInfoBuildType(),1,OMR,Optimizer
~Optimizer,~Optimizer(),1,OMR,Optimizer
Options,Options(class OMR::Options &&),1,OMR,Options
Options,Options(),0,OMR,Options
Options,Options(class TR_Memory *,int32_t,int32_t,class TR_ResolvedMethod *,void *,class TR_OptimizationPlan *,_Bool,int32_t),0,OMR,Options
Options,Options(TR::Options &),0,OMR,Options
Options,Options(const class OMR::Options &),0,OMR,Options
addOptionSet,addOptionSet(TR::OptionSet *),1,OMR,Options
allowRecompilation,allowRecompilation(),1,OMR,Options
alwaysCallWriteBarrier,alwaysCallWriteBarrier(),1,OMR,Options
anOptionSetContainsACountValue,anOptionSetContainsACountValue(),1,OMR,Options
breakOnLoad,breakOnLoad(char *,void *,TR::OptionTable *),1,OMR,Options
canJITCompile,canJITCompile(),1,OMR,Options
checkDisableFlagForAllMethods,checkDisableFlagForAllMethods(OMR::Optimizations,_Bool),1,OMR,Options
clearBitsFromStringSet,clearBitsFromStringSet(char *,void *,TR::OptionTable *),1,OMR,Options
closeLogFile,closeLogFile(class TR_FrontEnd *,TR::FILE *),1,OMR,Options
closeLogsForOtherCompilationThreads,closeLogsForOtherCompilationThreads(class TR_FrontEnd *),1,OMR,Options
compareOptionsForBinarySearch,compareOptionsForBinarySearch(const TR::OptionTable &,const TR::OptionTable &),1,OMR,Options
configureOptReporting,configureOptReporting(char *,void *,TR::OptionTable *),1,OMR,Options
counterIsEnabled,counterIsEnabled(const char *,int8_t,TR::SimpleRegex *),1,OMR,Options
createDebug,createDebug(),1,OMR,Options
debugCounterHistogramIsEnabled,debugCounterHistogramIsEnabled(const char *,int8_t),1,OMR,Options
debugCounterInsertedFormat,debugCounterInsertedFormat(class TR_Memory *,const char *,const char *),1,OMR,Options
disableCHOpts,disableCHOpts(),1,OMR,Options
disableForAllMethods,disableForAllMethods(OMR::Optimizations),1,OMR,Options
disableMoreOpts,disableMoreOpts(char *,void *,TR::OptionTable *),1,OMR,Options
disableOptimization,disableOptimization(char *,void *,TR::OptionTable *),1,OMR,Options
disableSamplingThread,disableSamplingThread(),1,OMR,Options
dontTraceOptimization,dontTraceOptimization(char *,void *,TR::OptionTable *),1,OMR,Options
dynamicDebugCounterIsEnabled,dynamicDebugCounterIsEnabled(const char *,int8_t),1,OMR,Options
enableDebugCounters,enableDebugCounters(),1,OMR,Options
enableOptimization,enableOptimization(char *,void *,TR::OptionTable *),1,OMR,Options
enableTracing,enableTracing(OMR::Optimizations),1,OMR,Options
feLatePostProcess,feLatePostProcess(void *,TR::OptionSet *),1,OMR,Options
fePostProcessAOT,fePostProcessAOT(void *),1,OMR,Options
fePostProcessJIT,fePostProcessJIT(void *),1,OMR,Options
fePreProcess,fePreProcess(void *),1,OMR,Options
findLogFileForCompilationThread,findLogFileForCompilationThread(int32_t),1,OMR,Options
findOptionSet,findOptionSet(class TR_Memory *,class TR_ResolvedMethod *,_Bool),1,OMR,Options
findOptionSet,findOptionSet(int32_t,int32_t,const char *,enum TR_Hotness,_Bool),0,OMR,Options
findOptionSet,findOptionSet(class TR_Memory *,int32_t,int32_t,class TR_ResolvedMethod *,enum TR_Hotness,_Bool),0,OMR,Options
findOrCreateDebug,findOrCreateDebug(),1,OMR,Options
gcIsUsingConcurrentMark,gcIsUsingConcurrentMark(),1,OMR,Options
generateWriteBarriers,generateWriteBarriers(),1,OMR,Options
get390LitPoolBufferSize,get390LitPoolBufferSize(),1,OMR,Options
get390StackBufferSize,get390StackBufferSize(),1,OMR,Options
getAOTCmdLineOptions,getAOTCmdLineOptions(),1,OMR,Options
getAOTCompile,getAOTCompile(),1,OMR,Options
getActiveCardTableBase,getActiveCardTableBase(),1,OMR,Options
getAddressEnumerationOption,getAddressEnumerationOption(uint32_t),1,OMR,Options
getAggressivityLevel,getAggressivityLevel(),1,OMR,Options
getAllOptions,getAllOptions(uint32_t),1,OMR,Options
getAlwaysWorthInliningThreshold,getAlwaysWorthInliningThreshold(),1,OMR,Options
getAnyOption,getAnyOption(uint32_t),1,OMR,Options
getAnyTraceCGOption,getAnyTraceCGOption(),1,OMR,Options
getAotrtDebugLevel,getAotrtDebugLevel(),1,OMR,Options
getBigCalleeFrequencyCutoffAtHot,getBigCalleeFrequencyCutoffAtHot(),1,OMR,Options
getBigCalleeFrequencyCutoffAtWarm,getBigCalleeFrequencyCutoffAtWarm(),1,OMR,Options
getBigCalleeHotOptThreshold,getBigCalleeHotOptThreshold(),1,OMR,Options
getBigCalleeScorchingOptThreshold,getBigCalleeScorchingOptThreshold(),1,OMR,Options
getBigCalleeThreshold,getBigCalleeThreshold(),1,OMR,Options
getBigCalleeThresholdForColdCallsAtHot,getBigCalleeThresholdForColdCallsAtHot(),1,OMR,Options
getBigCalleeThresholdForColdCallsAtWarm,getBigCalleeThresholdForColdCallsAtWarm(),1,OMR,Options
getBlockShufflingSequence,getBlockShufflingSequence(),1,OMR,Options
getBreakOnCreate,getBreakOnCreate(),1,OMR,Options
getBreakOnOpts,getBreakOnOpts(),1,OMR,Options
getBreakOnPrint,getBreakOnPrint(),1,OMR,Options
getBreakOnThrow,getBreakOnThrow(),1,OMR,Options
getClassesWithFoldableFinalFields,getClassesWithFoldableFinalFields(),1,OMR,Options
getCmdLineOptions,getCmdLineOptions(),1,OMR,Options
getCompilationStrategyName,getCompilationStrategyName(),1,OMR,Options
getCountValue,getCountValue(_Bool,enum TR_Hotness),1,OMR,Options
getCountsAreProvidedByUser,getCountsAreProvidedByUser(),1,OMR,Options
getCustomStrategy,getCustomStrategy(),1,OMR,Options
getCustomStrategySize,getCustomStrategySize(),1,OMR,Options
getDLTOptLevel,getDLTOptLevel(),1,OMR,Options
getDebug,getDebug(),1,OMR,Options
getDebugCounterBucketGranularity,getDebugCounterBucketGranularity(),1,OMR,Options
getDebugCounterWarmupSeconds,getDebugCounterWarmupSeconds(),1,OMR,Options
getDebugEnableFlag,getDebugEnableFlag(uint32_t),1,OMR,Options
getDebugOnCreate,getDebugOnCreate(),1,OMR,Options
getDefaultCountString,getDefaultCountString(),1,OMR,Options
getDefaultOptions,getDefaultOptions(),1,OMR,Options
getDelayCompile,getDelayCompile(),1,OMR,Options
getDeterministicMode,getDeterministicMode(),1,OMR,Options
getDisableDLTBytecodeIndex,getDisableDLTBytecodeIndex(),1,OMR,Options
getDisabledIdiomPatterns,getDisabledIdiomPatterns(),1,OMR,Options
getDisabledInlineSites,getDisabledInlineSites(),1,OMR,Options
getDisabledOptTransformations,getDisabledOptTransformations(),1,OMR,Options
getDisabledOpts,getDisabledOpts(),1,OMR,Options
getDontInline,getDontInline(),1,OMR,Options
getDumbInlinerBytecodeSizeCutoff,getDumbInlinerBytecodeSizeCutoff(),1,OMR,Options
getDumbInlinerBytecodeSizeDivisor,getDumbInlinerBytecodeSizeDivisor(),1,OMR,Options
getDumbInlinerBytecodeSizeMaxCutoff,getDumbInlinerBytecodeSizeMaxCutoff(),1,OMR,Options
getDumbInlinerBytecodeSizeMinCutoff,getDumbInlinerBytecodeSizeMinCutoff(),1,OMR,Options
getEnableDLTBytecodeIndex,getEnableDLTBytecodeIndex(),1,OMR,Options
getEnableGPU,getEnableGPU(uint32_t),1,OMR,Options
getEnableSCHintFlags,getEnableSCHintFlags(),1,OMR,Options
getFirstOptIndex,getFirstOptIndex(),1,OMR,Options
getFirstOptTransformationIndex,getFirstOptTransformationIndex(),1,OMR,Options
getFirstOptionSet,getFirstOptionSet(),1,OMR,Options
getFixedOptLevel,getFixedOptLevel(),1,OMR,Options
getGCRCount,getGCRCount(),1,OMR,Options
getGCRDecCount,getGCRDecCount(),1,OMR,Options
getGCRResetCount,getGCRResetCount(),1,OMR,Options
getGcCardSize,getGcCardSize(),1,OMR,Options
getGcMode,getGcMode(),1,OMR,Options
getHeapAddressToCardAddressShift,getHeapAddressToCardAddressShift(),1,OMR,Options
getHeapBase,getHeapBase(),1,OMR,Options
getHeapBaseForBarrierRange0,getHeapBaseForBarrierRange0(),1,OMR,Options
getHeapSizeForBarrierRange0,getHeapSizeForBarrierRange0(),1,OMR,Options
getHeapTop,getHeapTop(),1,OMR,Options
getInduceOSR,getInduceOSR(),1,OMR,Options
getInitialBCount,getInitialBCount(),1,OMR,Options
getInitialColdRunBCount,getInitialColdRunBCount(),1,OMR,Options
getInitialColdRunCount,getInitialColdRunCount(),1,OMR,Options
getInitialCount,getInitialCount(),1,OMR,Options
getInitialHotnessLevel,getInitialHotnessLevel(_Bool),1,OMR,Options
getInitialMILCount,getInitialMILCount(),1,OMR,Options
getInitialSCount,getInitialSCount(),1,OMR,Options
getInlineCntrAllBucketSize,getInlineCntrAllBucketSize(),1,OMR,Options
getInlineCntrCalleeTooBigBucketSize,getInlineCntrCalleeTooBigBucketSize(),1,OMR,Options
getInlineCntrCalleeTooDeepBucketSize,getInlineCntrCalleeTooDeepBucketSize(),1,OMR,Options
getInlineCntrColdAndNotTinyBucketSize,getInlineCntrColdAndNotTinyBucketSize(),1,OMR,Options
getInlineCntrDepthExceededBucketSize,getInlineCntrDepthExceededBucketSize(),1,OMR,Options
getInlineCntrRanOutOfBudgetBucketSize,getInlineCntrRanOutOfBudgetBucketSize(),1,OMR,Options
getInlineCntrWarmCalleeHasTooManyNodesBucketSize,getInlineCntrWarmCalleeHasTooManyNodesBucketSize(),1,OMR,Options
getInlineCntrWarmCalleeTooBigBucketSize,getInlineCntrWarmCalleeTooBigBucketSize(),1,OMR,Options
getInlineCntrWarmCallerHasTooManyNodesBucketSize,getInlineCntrWarmCallerHasTooManyNodesBucketSize(),1,OMR,Options
getInlinerArgumentHeuristicFraction,getInlinerArgumentHeuristicFraction(),1,OMR,Options
getInlinerBorderFrequency,getInlinerBorderFrequency(),1,OMR,Options
getInlinerCGBorderFrequency,getInlinerCGBorderFrequency(),1,OMR,Options
getInlinerCGColdBorderFrequency,getInlinerCGColdBorderFrequency(),1,OMR,Options
getInlinerCGVeryColdBorderFrequency,getInlinerCGVeryColdBorderFrequency(),1,OMR,Options
getInlinerColdBorderFrequency,getInlinerColdBorderFrequency(),1,OMR,Options
getInlinerVeryColdBorderFrequency,getInlinerVeryColdBorderFrequency(),1,OMR,Options
getInlinerVeryColdBorderFrequencyAtCold,getInlinerVeryColdBorderFrequencyAtCold(),1,OMR,Options
getInlinerVeryLargeCompiledMethodFaninThreshold,getInlinerVeryLargeCompiledMethodFaninThreshold(),1,OMR,Options
getInlinerVeryLargeCompiledMethodThreshold,getInlinerVeryLargeCompiledMethodThreshold(),1,OMR,Options
getInsertGCRTrees,getInsertGCRTrees(),1,OMR,Options
getJITCmdLineOptions,getJITCmdLineOptions(),1,OMR,Options
getJitMethodEntryAlignmentBoundary,getJitMethodEntryAlignmentBoundary(TR::CodeGenerator *),1,OMR,Options
getLabelTargetNOPLimit,getLabelTargetNOPLimit(),1,OMR,Options
getLargeCompiledMethodExemptionFreqCutoff,getLargeCompiledMethodExemptionFreqCutoff(),1,OMR,Options
getLargeNumberOfLoops,getLargeNumberOfLoops(),1,OMR,Options
getLastIpaOptTransformationIndex,getLastIpaOptTransformationIndex(),1,OMR,Options
getLastOptIndex,getLastOptIndex(),1,OMR,Options
getLastOptSubIndex,getLastOptSubIndex(),1,OMR,Options
getLastOptTransformationIndex,getLastOptTransformationIndex(),1,OMR,Options
getLastSearchCount,getLastSearchCount(),1,OMR,Options
getLockReserveClass,getLockReserveClass(),1,OMR,Options
getLogFile,getLogFile(),1,OMR,Options
getLogFileName,getLogFileName(),1,OMR,Options
getLogListForOtherCompThreads,getLogListForOtherCompThreads(),1,OMR,Options
getLoopyAsyncCheckInsertionMaxEntryFreq,getLoopyAsyncCheckInsertionMaxEntryFreq(),1,OMR,Options
getMaxInlinedCalls,getMaxInlinedCalls(),1,OMR,Options
getMaxLastOptTransformationIndex,getMaxLastOptTransformationIndex(),1,OMR,Options
getMaxLimitedGRACandidates,getMaxLimitedGRACandidates(),1,OMR,Options
getMaxLimitedGRARegs,getMaxLimitedGRARegs(),1,OMR,Options
getMaxNumPrexAssumptions,getMaxNumPrexAssumptions(),1,OMR,Options
getMaxNumVisitedSubclasses,getMaxNumVisitedSubclasses(),1,OMR,Options
getMaxPeekedBytecodeSize,getMaxPeekedBytecodeSize(),1,OMR,Options
getMaxSpreadCountLoopless,getMaxSpreadCountLoopless(),1,OMR,Options
getMaxSpreadCountLoopy,getMaxSpreadCountLoopy(),1,OMR,Options
getMaxStaticPICSlots,getMaxStaticPICSlots(enum TR_Hotness),1,OMR,Options
getMaxSzForVPInliningWarm,getMaxSzForVPInliningWarm(),1,OMR,Options
getMaxUnloadedAddressRanges,getMaxUnloadedAddressRanges(),1,OMR,Options
getMinFirstOptTransformationIndex,getMinFirstOptTransformationIndex(),1,OMR,Options
getMinProfiledCheckcastFrequency,getMinProfiledCheckcastFrequency(),1,OMR,Options
getNextHotnessLevel,getNextHotnessLevel(_Bool,enum TR_Hotness),1,OMR,Options
getNumInterfaceCallCacheSlots,getNumInterfaceCallCacheSlots(),1,OMR,Options
getNumInterfaceCallStaticSlots,getNumInterfaceCallStaticSlots(),1,OMR,Options
getNumLimitedGRARegsWithheld,getNumLimitedGRARegsWithheld(),1,OMR,Options
getNumRestrictedGPRs,getNumRestrictedGPRs(),1,OMR,Options
getNumUsableCompilationThreads,getNumUsableCompilationThreads(),1,OMR,Options
getNumericValue,getNumericValue(char *&),1,OMR,Options
getOnlyInline,getOnlyInline(),1,OMR,Options
getOptLevel,getOptLevel(),1,OMR,Options
getOptLevelDowngraded,getOptLevelDowngraded(),1,OMR,Options
getOption,getOption(uint32_t),1,OMR,Options
getOptsToTrace,getOptsToTrace(),1,OMR,Options
getPackedTestRegex,getPackedTestRegex(),1,OMR,Options
getProfilingCompNodecountThreshold,getProfilingCompNodecountThreshold(),1,OMR,Options
getProfilingCount,getProfilingCount(),1,OMR,Options
getProfilingFrequency,getProfilingFrequency(),1,OMR,Options
getRandomSeed,getRandomSeed(),1,OMR,Options
getRegisterAssignmentTraceOption,getRegisterAssignmentTraceOption(uint32_t),1,OMR,Options
getSamplingFrequency,getSamplingFrequency(),1,OMR,Options
getSamplingJProfilingOption,getSamplingJProfilingOption(enum TR_SamplingJProfilingFlags),1,OMR,Options
getScratchSpaceLimit,getScratchSpaceLimit(),1,OMR,Options
getScratchSpaceLowerBound,getScratchSpaceLowerBound(),1,OMR,Options
getSlipTrap,getSlipTrap(),1,OMR,Options
getStackPCDumpNumberOfBuffers,getStackPCDumpNumberOfBuffers(),1,OMR,Options
getStackPCDumpNumberOfFrames,getStackPCDumpNumberOfFrames(),1,OMR,Options
getStoreSinkingLastOpt,getStoreSinkingLastOpt(),1,OMR,Options
getSuffixLogsFormat,getSuffixLogsFormat(),1,OMR,Options
getTOCSize,getTOCSize(),1,OMR,Options
getTraceCGOption,getTraceCGOption(uint32_t),1,OMR,Options
getTraceForCodeMining,getTraceForCodeMining(),1,OMR,Options
getTraceILDeadCode,getTraceILDeadCode(uint32_t),1,OMR,Options
getTraceLRA,getTraceLRA(uint32_t),1,OMR,Options
getTraceRAOption,getTraceRAOption(uint32_t),1,OMR,Options
getTraceRegisterITF,getTraceRegisterITF(uint32_t),1,OMR,Options
getTraceSimplifier,getTraceSimplifier(uint32_t),1,OMR,Options
getTraceSpillCosts,getTraceSpillCosts(uint32_t),1,OMR,Options
getTrampolineSpacePercentage,getTrampolineSpacePercentage(),1,OMR,Options
getTrivialInlinerMaxSize,getTrivialInlinerMaxSize(),1,OMR,Options
getTryToInline,getTryToInline(),1,OMR,Options
getVerboseOptTransformationsRegex,getVerboseOptTransformationsRegex(),1,OMR,Options
getVerboseOption,getVerboseOption(enum TR_VerboseFlags),1,OMR,Options
getVerboseOptionName,getVerboseOptionName(enum TR_VerboseFlags),1,OMR,Options
hasOptionSets,hasOptionSets(),1,OMR,Options
hasSomeLogFile,hasSomeLogFile(),1,OMR,Options
helpOption,helpOption(char *,void *,TR::OptionTable *),1,OMR,Options
inlinefileOption,inlinefileOption(char *,void *,TR::OptionTable *),1,OMR,Options
insertDebuggingCounters,insertDebuggingCounters(),1,OMR,Options
isAnySamplingJProfilingOptionSet,isAnySamplingJProfilingOptionSet(),1,OMR,Options
isAnyVerboseOptionSet,isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags),1,OMR,Options
isAnyVerboseOptionSet,isAnyVerboseOptionSet(enum TR_VerboseFlags),0,OMR,Options
isAnyVerboseOptionSet,isAnyVerboseOptionSet(),0,OMR,Options
isAnyVerboseOptionSet,isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags),0,OMR,Options
isAnyVerboseOptionSet,isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags),0,OMR,Options
isAnyVerboseOptionSet,isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags),0,OMR,Options
isAnyVerboseOptionSet,isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags),0,OMR,Options
isDisabled,isDisabled(OMR::Optimizations),1,OMR,Options
isDisabledForAllMethods,isDisabledForAllMethods(OMR::Optimizations),1,OMR,Options
isDisabledForAnyMethod,isDisabledForAnyMethod(OMR::Optimizations),1,OMR,Options
isFullyInitialized,isFullyInitialized(),1,OMR,Options
isOptionSetForAnyMethod,isOptionSetForAnyMethod(enum TR_CompilationOptions),1,OMR,Options
isQuickstartDetected,isQuickstartDetected(),1,OMR,Options
isVariableActiveCardTableBase,isVariableActiveCardTableBase(),1,OMR,Options
isVariableHeapBaseForBarrierRange0,isVariableHeapBaseForBarrierRange0(),1,OMR,Options
isVariableHeapSizeForBarrierRange0,isVariableHeapSizeForBarrierRange0(),1,OMR,Options
isVerboseFileSet,isVerboseFileSet(),1,OMR,Options
jitLatePostProcess,jitLatePostProcess(TR::OptionSet *,void *),1,OMR,Options
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Options
jitPersistentFree,jitPersistentFree(void *),1,OMR,Options
jitPostProcess,jitPostProcess(),1,OMR,Options
jitPreProcess,jitPreProcess(),1,OMR,Options
latePostProcess,latePostProcess(TR::Options *,void *,_Bool),1,OMR,Options
latePostProcessAOT,latePostProcessAOT(void *),1,OMR,Options
latePostProcessJIT,latePostProcessJIT(void *),1,OMR,Options
limitOption,limitOption(char *,void *,TR::OptionTable *),1,OMR,Options
limitfileOption,limitfileOption(char *,void *,TR::OptionTable *),1,OMR,Options
needWriteBarriers,needWriteBarriers(),1,OMR,Options
negateProcessingMethod,negateProcessingMethod(TR::OptionFunctionPtr),1,OMR,Options
openLogFile,openLogFile(int32_t),1,OMR,Options
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Options
operator delete,operator delete(void *,size_t),0,OMR,Options
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Options
operator delete,operator delete(void *,TR::Region &),0,OMR,Options
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Options
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Options
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Options
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Options
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Options
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,OMR,Options
operator new,operator new(size_t,TR::Region &),0,OMR,Options
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Options
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Options
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Options
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Options
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Options
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Options
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Options
operator new[],operator new[](size_t,TR::Region &),0,OMR,Options
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Options
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Options
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Options
printOptions,printOptions(char *,char *),1,OMR,Options
processOption,processOption(char *,TR::OptionTable *,void *,int32_t,TR::OptionSet *),1,OMR,Options
processOptionSet,processOptionSet(char *,TR::OptionSet *,void *,_Bool),1,OMR,Options
processOptionSet,processOptionSet(char *,char *,TR::Options *,_Bool),0,OMR,Options
processOptionSet,processOptionSet(char *,char *,TR::OptionSet *),0,OMR,Options
processOptions,processOptions(char *,char *,TR::Options *),1,OMR,Options
processOptions,processOptions(char *,char *,void *,class TR_FrontEnd *,TR::Options *),0,OMR,Options
processOptionsAOT,processOptionsAOT(char *,void *,class TR_FrontEnd *),1,OMR,Options
processOptionsJIT,processOptionsJIT(char *,void *,class TR_FrontEnd *),1,OMR,Options
realTimeGC,realTimeGC(),1,OMR,Options
requiresDebugObject,requiresDebugObject(),1,OMR,Options
requiresLogFile,requiresLogFile(),1,OMR,Options
resetBit,resetBit(char *,void *,TR::OptionTable *),1,OMR,Options
resetSamplingJProfilingOption,resetSamplingJProfilingOption(enum TR_SamplingJProfilingFlags),1,OMR,Options
resetVerboseOption,resetVerboseOption(enum TR_VerboseFlags),1,OMR,Options
safelyCloseLogs,safelyCloseLogs(TR::Options *,class TR_MCTLogs *&,class TR_FrontEnd *),1,OMR,Options
self,self(),1,OMR,Options
set32BitHexadecimal,set32BitHexadecimal(char *,void *,TR::OptionTable *),1,OMR,Options
set32BitNumeric,set32BitNumeric(char *,void *,TR::OptionTable *),1,OMR,Options
set32BitNumericInJitConfig,set32BitNumericInJitConfig(char *,void *,TR::OptionTable *),1,OMR,Options
set32BitSignedNumeric,set32BitSignedNumeric(char *,void *,TR::OptionTable *),1,OMR,Options
set32BitValue,set32BitValue(char *,void *,TR::OptionTable *),1,OMR,Options
set64BitSignedNumeric,set64BitSignedNumeric(char *,void *,TR::OptionTable *),1,OMR,Options
setAOTCmdLineOptions,setAOTCmdLineOptions(TR::Options *),1,OMR,Options
setAOTCompile,setAOTCompile(_Bool),1,OMR,Options
setActiveCardTableBase,setActiveCardTableBase(uintptr_t),1,OMR,Options
setAddressEnumerationBits,setAddressEnumerationBits(char *,void *,TR::OptionTable *),1,OMR,Options
setAggressiveQuickStart,setAggressiveQuickStart(),1,OMR,Options
setAllowRecompilation,setAllowRecompilation(_Bool),1,OMR,Options
setAnOptionSetContainsACountValue,setAnOptionSetContainsACountValue(_Bool),1,OMR,Options
setBit,setBit(char *,void *,TR::OptionTable *),1,OMR,Options
setBitsFromStringSet,setBitsFromStringSet(char *,void *,TR::OptionTable *),1,OMR,Options
setCanJITCompile,setCanJITCompile(_Bool),1,OMR,Options
setConservativeDefaultBehavior,setConservativeDefaultBehavior(),1,OMR,Options
setConservativeQuickStart,setConservativeQuickStart(),1,OMR,Options
setCount,setCount(char *,void *,TR::OptionTable *),1,OMR,Options
setCounts,setCounts(),1,OMR,Options
setDebug,setDebug(char *,void *,TR::OptionTable *),1,OMR,Options
setDefaultsForDeterministicMode,setDefaultsForDeterministicMode(),1,OMR,Options
setDisabled,setDisabled(OMR::Optimizations,_Bool),1,OMR,Options
setDumbInlinerBytecodeSizeCutoff,setDumbInlinerBytecodeSizeCutoff(int32_t),1,OMR,Options
setFixedOptLevel,setFixedOptLevel(int32_t),1,OMR,Options
setForAllMethods,setForAllMethods(enum TR_CompilationOptions),1,OMR,Options
setGCRCount,setGCRCount(int32_t),1,OMR,Options
setGcCardSize,setGcCardSize(uintptr_t),1,OMR,Options
setGcMode,setGcMode(enum TR_WriteBarrierKind),1,OMR,Options
setGlobalAggressiveAOT,setGlobalAggressiveAOT(),1,OMR,Options
setHeapAddressToCardAddressShift,setHeapAddressToCardAddressShift(uintptr_t),1,OMR,Options
setHeapBase,setHeapBase(uintptr_t),1,OMR,Options
setHeapBaseForBarrierRange0,setHeapBaseForBarrierRange0(uintptr_t),1,OMR,Options
setHeapSizeForBarrierRange0,setHeapSizeForBarrierRange0(uintptr_t),1,OMR,Options
setHeapTop,setHeapTop(uintptr_t),1,OMR,Options
setInitialBCount,setInitialBCount(int32_t),1,OMR,Options
setInitialCount,setInitialCount(int32_t),1,OMR,Options
setInitialMILCount,setInitialMILCount(int32_t),1,OMR,Options
setInlinerBorderFrequency,setInlinerBorderFrequency(int32_t),1,OMR,Options
setInlinerCGBorderFrequency,setInlinerCGBorderFrequency(int32_t),1,OMR,Options
setInlinerCGColdBorderFrequency,setInlinerCGColdBorderFrequency(int32_t),1,OMR,Options
setInlinerCGVeryColdBorderFrequency,setInlinerCGVeryColdBorderFrequency(int32_t),1,OMR,Options
setInlinerColdBorderFrequency,setInlinerColdBorderFrequency(int32_t),1,OMR,Options
setInlinerVeryColdBorderFrequency,setInlinerVeryColdBorderFrequency(int32_t),1,OMR,Options
setInlinerVeryColdBorderFrequencyAtCold,setInlinerVeryColdBorderFrequencyAtCold(int32_t),1,OMR,Options
setInsertGCRTrees,setInsertGCRTrees(),1,OMR,Options
setIsFullyInitialized,setIsFullyInitialized(),1,OMR,Options
setIsVariableActiveCardTableBase,setIsVariableActiveCardTableBase(uintptr_t),1,OMR,Options
setIsVariableHeapBaseForBarrierRange0,setIsVariableHeapBaseForBarrierRange0(uintptr_t),1,OMR,Options
setIsVariableHeapSizeForBarrierRange0,setIsVariableHeapSizeForBarrierRange0(uintptr_t),1,OMR,Options
setJitMethodEntryAlignmentBoundary,setJitMethodEntryAlignmentBoundary(int32_t),1,OMR,Options
setLocalAggressiveAOT,setLocalAggressiveAOT(),1,OMR,Options
setLogFile,setLogFile(TR::FILE *),1,OMR,Options
setLogForCompilationThread,setLogForCompilationThread(int32_t,TR::Options *),1,OMR,Options
setLogListForOtherCompThreads,setLogListForOtherCompThreads(class TR_MCTLogs *),1,OMR,Options
setMoreAggressiveInlining,setMoreAggressiveInlining(),1,OMR,Options
setNumeric,setNumeric(char *,void *,TR::OptionTable *),1,OMR,Options
setOptLevel,setOptLevel(int32_t),1,OMR,Options
setOption,setOption(uint32_t,_Bool),1,OMR,Options
setOptionInAllOptionSets,setOptionInAllOptionSets(uint32_t,_Bool),1,OMR,Options
setQuickStart,setQuickStart(),1,OMR,Options
setRealTimeGC,setRealTimeGC(_Bool),1,OMR,Options
setRegex,setRegex(char *,void *,TR::OptionTable *),1,OMR,Options
setSamplingJProfilingBits,setSamplingJProfilingBits(char *,void *,TR::OptionTable *),1,OMR,Options
setSamplingJProfilingOption,setSamplingJProfilingOption(enum TR_SamplingJProfilingFlags),1,OMR,Options
setScratchSpaceLimit,setScratchSpaceLimit(size_t),1,OMR,Options
setScratchSpaceLowerBound,setScratchSpaceLowerBound(size_t),1,OMR,Options
setSharedClassCache,setSharedClassCache(_Bool),1,OMR,Options
setStatic32BitValue,setStatic32BitValue(char *,void *,TR::OptionTable *),1,OMR,Options
setStaticBool,setStaticBool(char *,void *,TR::OptionTable *),1,OMR,Options
setStaticHexadecimal,setStaticHexadecimal(char *,void *,TR::OptionTable *),1,OMR,Options
setStaticNumeric,setStaticNumeric(char *,void *,TR::OptionTable *),1,OMR,Options
setStaticNumericKBAdjusted,setStaticNumericKBAdjusted(char *,void *,TR::OptionTable *),1,OMR,Options
setStaticRegex,setStaticRegex(char *,void *,TR::OptionTable *),1,OMR,Options
setStaticString,setStaticString(char *,void *,TR::OptionTable *),1,OMR,Options
setString,setString(char *,void *,TR::OptionTable *),1,OMR,Options
setStringForPrivateBase,setStringForPrivateBase(char *,void *,TR::OptionTable *),1,OMR,Options
setStringInJitConfig,setStringInJitConfig(char *,void *,TR::OptionTable *),1,OMR,Options
setTarget,setTarget(),1,OMR,Options
setTrivialInlinerMaxSize,setTrivialInlinerMaxSize(int32_t),1,OMR,Options
setValue,setValue(char *,void *,TR::OptionTable *),1,OMR,Options
setVerboseBits,setVerboseBits(char *,void *,TR::OptionTable *),1,OMR,Options
setVerboseBitsHelper,setVerboseBitsHelper(char *,VerboseOptionFlagArray *,uintptrj_t),1,OMR,Options
setVerboseBitsInJitPrivateConfig,setVerboseBitsInJitPrivateConfig(char *,void *,TR::OptionTable *),1,OMR,Options
setVerboseOption,setVerboseOption(enum TR_VerboseFlags),1,OMR,Options
setVerboseOptions,setVerboseOptions(uint64_t),1,OMR,Options
sharedClassCache,sharedClassCache(),1,OMR,Options
showOptionsInEffect,showOptionsInEffect(),1,OMR,Options
showPID,showPID(),1,OMR,Options
shutdown,shutdown(class TR_FrontEnd *),1,OMR,Options
startupTimeMatters,startupTimeMatters(),1,OMR,Options
staticDebugCounterIsEnabled,staticDebugCounterIsEnabled(const char *,int8_t),1,OMR,Options
suppressLogFileBecauseDebugObjectNotCreated,suppressLogFileBecauseDebugObjectNotCreated(_Bool),1,OMR,Options
trace,trace(OMR::Optimizations),1,OMR,Options
traceOptimization,traceOptimization(char *,void *,TR::OptionTable *),1,OMR,Options
tracingOptimization,tracingOptimization(),1,OMR,Options
useCompressedPointers,useCompressedPointers(),1,OMR,Options
validateOptions,validateOptions(void *,class TR_FrontEnd *),1,OMR,Options
validateOptionsTables,validateOptionsTables(void *,class TR_FrontEnd *),1,OMR,Options
versionOption,versionOption(char *,void *,TR::OptionTable *),1,OMR,Options
PersistentInfo,PersistentInfo(const class OMR::PersistentInfo &),1,OMR,PersistentInfo
PersistentInfo,PersistentInfo(class TR_PersistentMemory *),0,OMR,PersistentInfo
PersistentInfo,PersistentInfo(class OMR::PersistentInfo &&),0,OMR,PersistentInfo
PersistentInfo,PersistentInfo(const class TR::PersistentInfo &),0,TR,PersistentInfo
PersistentInfo,PersistentInfo(class TR::PersistentInfo &&),0,TR,PersistentInfo
advanceCurPseudoRandomNumbersListElem,advanceCurPseudoRandomNumbersListElem(),1,OMR,PersistentInfo
createCounters,createCounters(class TR_PersistentMemory *),1,OMR,PersistentInfo
getCodeCacheManager,getCodeCacheManager(),1,OMR,PersistentInfo
getCurIndex,getCurIndex(),1,OMR,PersistentInfo
getCurPseudoRandomNumbersListElem,getCurPseudoRandomNumbersListElem(),1,OMR,PersistentInfo
getDynamicCounters,getDynamicCounters(),1,OMR,PersistentInfo
getLastDebugCounterResetSeconds,getLastDebugCounterResetSeconds(),1,OMR,PersistentInfo
getNextPseudoRandomNumber,getNextPseudoRandomNumber(int32_t),1,OMR,PersistentInfo
getPersistentTOC,getPersistentTOC(),1,OMR,PersistentInfo
getPseudoRandomNumbersList,getPseudoRandomNumbersList(),1,OMR,PersistentInfo
getPseudoRandomNumbersListPtr,getPseudoRandomNumbersListPtr(),1,OMR,PersistentInfo
getStaticCounters,getStaticCounters(),1,OMR,PersistentInfo
isObsoleteClass,isObsoleteClass(void *,class TR_FrontEnd *),1,OMR,PersistentInfo
isRuntimeInstrumentationEnabled,isRuntimeInstrumentationEnabled(),1,OMR,PersistentInfo
operator=,operator=(const class OMR::PersistentInfo &),1,OMR,PersistentInfo
operator=,operator=(class OMR::PersistentInfo &&),0,OMR,PersistentInfo
operator=,operator=(class TR::PersistentInfo &&),0,TR,PersistentInfo
operator=,operator=(const class TR::PersistentInfo &),0,TR,PersistentInfo
self,self(),1,OMR,PersistentInfo
setCodeCacheManager,setCodeCacheManager(TR::CodeCacheManager *),1,OMR,PersistentInfo
setLastDebugCounterResetSeconds,setLastDebugCounterResetSeconds(int64_t),1,OMR,PersistentInfo
setPersistentTOC,setPersistentTOC(class OMR::TableOfConstants *),1,OMR,PersistentInfo
~PersistentInfo,~PersistentInfo(),1,OMR,PersistentInfo
Destructable,Destructable(const class TR::Region::Destructable &),1,TR,Region::Destructable
Destructable,Destructable(class TR::Region::Destructable *const),0,TR,Region::Destructable
Instance<T>,Instance<T>(class TR::Region::Destructable *,const T &),1,TR,Region::Instance
operator=,operator=(const class TR::Region::Destructable &),1,TR,Region::Destructable
prev,prev(),1,TR,Region::Destructable
value,value(),1,TR,Region::Instance
~Destructable,~Destructable(),1,TR,Region::Destructable
~Instance<T>,~Instance<T>(),1,TR,Region::Instance
RegisterIterator,RegisterIterator(const class OMR::X86::RegisterIterator &),1,OMR,X86::RegisterIterator
RegisterIterator,RegisterIterator(class OMR::X86::RegisterIterator &&),0,OMR,X86::RegisterIterator
RegisterIterator,RegisterIterator(TR::Machine *,enum TR_RegisterKinds),0,OMR,X86::RegisterIterator
RegisterIterator,RegisterIterator(class TR::RegisterIterator &&),0,TR,RegisterIterator
RegisterIterator,RegisterIterator(const class TR::RegisterIterator &),0,TR,RegisterIterator
TR_X86FPStackIterator,TR_X86FPStackIterator(TR::Machine *,enum TR_RegisterKinds),1,TR,X86FPStackIterator
getCurrent,getCurrent(),1,OMR,X86::RegisterIterator
getFirst,getFirst(),1,OMR,X86::RegisterIterator
getNext,getNext(),1,OMR,X86::RegisterIterator
~RegisterIterator,~RegisterIterator(),1,OMR,X86::RegisterIterator
ResolvedMethod,ResolvedMethod(const class TestCompiler::ResolvedMethod &),1,TestCompiler,ResolvedMethod
ResolvedMethod,ResolvedMethod(class TestCompiler::ResolvedMethod &&),0,TestCompiler,ResolvedMethod
ResolvedMethod,ResolvedMethod(const char *,const char *,char *,int32_t,TR::IlType **,TR::IlType *,void *,TR::IlInjector *),0,TestCompiler,ResolvedMethod
ResolvedMethod,ResolvedMethod(TR::MethodBuilder *),0,TestCompiler,ResolvedMethod
ResolvedMethod,ResolvedMethod(class TR_OpaqueMethodBlock *),0,TestCompiler,ResolvedMethod
ResolvedMethod,ResolvedMethod(char *,char *,char *,int32_t,TR::IlType **,TR::IlType *,void *,TR::IlInjector *),0,TR,ResolvedMethod
ResolvedMethodBase,ResolvedMethodBase(class TestCompiler::ResolvedMethodBase &&),1,TestCompiler,ResolvedMethodBase
ResolvedMethodBase,ResolvedMethodBase(const class TestCompiler::ResolvedMethodBase &),0,TestCompiler,ResolvedMethodBase
ResolvedMethodBase,ResolvedMethodBase(),0,TestCompiler,ResolvedMethodBase
TR_ResolvedMethod,TR_ResolvedMethod(),1,TR,ResolvedMethod
TR_ResolvedMethod,TR_ResolvedMethod(const class TR_ResolvedMethod &),0,TR,ResolvedMethod
TR_ResolvedMethod,TR_ResolvedMethod(class TR_ResolvedMethod &&),0,TR,ResolvedMethod
_genMethodILForPeeking,_genMethodILForPeeking(TR::ResolvedMethodSymbol *,TR::Compilation *,_Bool,class TR_PrexArgInfo *),1,TR,ResolvedMethod
addressContainingIsOverriddenBit,addressContainingIsOverriddenBit(),1,TR,ResolvedMethod
addressOfClassOfMethod,addressOfClassOfMethod(),1,TR,ResolvedMethod
allocateException,allocateException(uint32_t,TR::Compilation *),1,TR,ResolvedMethod
archetypeArgPlaceholderSlot,archetypeArgPlaceholderSlot(class TR_Memory *),1,TR,ResolvedMethod
bytecodeStart,bytecodeStart(),1,TR,ResolvedMethod
callSiteTableEntryAddress,callSiteTableEntryAddress(int32_t),1,TR,ResolvedMethod
canAlwaysShareSymbolDespiteOwningMethod,canAlwaysShareSymbolDespiteOwningMethod(class TR_ResolvedMethod *),1,TR,ResolvedMethod
classCPIndexOfFieldOrStatic,classCPIndexOfFieldOrStatic(int32_t),1,TR,ResolvedMethod
classCPIndexOfMethod,classCPIndexOfMethod(uint32_t),1,TR,ResolvedMethod
classNameChars,classNameChars(),1,TR,ResolvedMethod
classNameLength,classNameLength(),1,TR,ResolvedMethod
classNameOfFieldOrStatic,classNameOfFieldOrStatic(int32_t,int32_t &),1,TR,ResolvedMethod
classOfMethod,classOfMethod(),1,TR,ResolvedMethod
classOfStatic,classOfStatic(int32_t,_Bool),1,TR,ResolvedMethod
classSignatureOfFieldOrStatic,classSignatureOfFieldOrStatic(int32_t,int32_t &),1,TR,ResolvedMethod
code,code(),1,TestCompiler,ResolvedMethod
computeSignatureChars,computeSignatureChars(),1,TestCompiler,ResolvedMethod
computeSignatureCharsPrimitive,computeSignatureCharsPrimitive(),1,TestCompiler,ResolvedMethod
constantPool,constantPool(),1,TR,ResolvedMethod
containingClass,containingClass(),1,TR,ResolvedMethod
convertToMethod,convertToMethod(),1,TR,ResolvedMethod
directCallOpCode,directCallOpCode(),1,TR,ResolvedMethod
doubleConstant,doubleConstant(int32_t,class TR_Memory *),1,TR,ResolvedMethod
exceptionData,exceptionData(int32_t,int32_t *,int32_t *,int32_t *),1,TR,ResolvedMethod
fe,fe(),1,TR,ResolvedMethod
fieldAttributes,fieldAttributes(TR::Compilation *,int32_t,uint32_t *,TR::DataType *,_Bool *,_Bool *,_Bool *,_Bool,_Bool *,_Bool),1,TR,ResolvedMethod
fieldName,fieldName(int32_t,class TR_Memory *,enum TR_AllocationKind),1,TR,ResolvedMethod
fieldName,fieldName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind),0,TR,ResolvedMethod
fieldNameChars,fieldNameChars(int32_t,int32_t &),1,TR,ResolvedMethod
fieldSignatureChars,fieldSignatureChars(int32_t,int32_t &),1,TR,ResolvedMethod
fieldsAreSame,fieldsAreSame(int32_t,class TR_ResolvedMethod *,int32_t,_Bool &),1,TR,ResolvedMethod
findOrCreateJittedMethodSymbol,findOrCreateJittedMethodSymbol(TR::Compilation *),1,TR,ResolvedMethod
floatConstant,floatConstant(int32_t),1,TR,ResolvedMethod
genMethodILForPeeking,genMethodILForPeeking(TR::ResolvedMethodSymbol *,TR::Compilation *,_Bool,class TR_PrexArgInfo *),1,TR,ResolvedMethod
getClassFromConstantPool,getClassFromConstantPool(TR::Compilation *,uint32_t,_Bool),1,TR,ResolvedMethod
getClassFromFieldOrStatic,getClassFromFieldOrStatic(TR::Compilation *,int32_t,_Bool),1,TR,ResolvedMethod
getClassNameFromConstantPool,getClassNameFromConstantPool(uint32_t,uint32_t &),1,TR,ResolvedMethod
getDeclaringClassFromFieldOrStatic,getDeclaringClassFromFieldOrStatic(TR::Compilation *,int32_t),1,TR,ResolvedMethod
getEntryPoint,getEntryPoint(),1,TestCompiler,ResolvedMethod
getIlGeneratorMethodDetails,getIlGeneratorMethodDetails(),1,TR,ResolvedMethod
getInjector,getInjector(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *),1,TestCompiler,ResolvedMethod
getInvocationCount,getInvocationCount(),1,TR,ResolvedMethod
getLDCType,getLDCType(int32_t),1,TR,ResolvedMethod
getLineNumber,getLineNumber(),1,TestCompiler,ResolvedMethod
getMethodHandleLocation,getMethodHandleLocation(),1,TR,ResolvedMethod
getNonPersistentIdentifier,getNonPersistentIdentifier(),1,TR,ResolvedMethod
getNumArgs,getNumArgs(),1,TestCompiler,ResolvedMethod
getParameterIterator,getParameterIterator(TR::Compilation &),1,TR,ResolvedMethod
getPersistentIdentifier,getPersistentIdentifier(),1,TR,ResolvedMethod
getRecognizedMethod,getRecognizedMethod(),1,TR,ResolvedMethod
getResolvedDynamicMethod,getResolvedDynamicMethod(TR::Compilation *,int32_t,_Bool *),1,TR,ResolvedMethod
getResolvedHandleMethod,getResolvedHandleMethod(TR::Compilation *,int32_t,_Bool *),1,TR,ResolvedMethod
getResolvedHandleMethodWithSignature,getResolvedHandleMethodWithSignature(TR::Compilation *,int32_t,char *),1,TR,ResolvedMethod
getResolvedInterfaceMethod,getResolvedInterfaceMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t),1,TR,ResolvedMethod
getResolvedInterfaceMethod,getResolvedInterfaceMethod(int32_t,uintptrj_t *),0,TR,ResolvedMethod
getResolvedInterfaceMethodOffset,getResolvedInterfaceMethodOffset(class TR_OpaqueClassBlock *,int32_t),1,TR,ResolvedMethod
getResolvedSpecialMethod,getResolvedSpecialMethod(TR::Compilation *,int32_t,_Bool *),1,TR,ResolvedMethod
getResolvedStaticMethod,getResolvedStaticMethod(TR::Compilation *,int32_t,_Bool *),1,TR,ResolvedMethod
getResolvedVirtualMethod,getResolvedVirtualMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t,_Bool),1,TR,ResolvedMethod
getResolvedVirtualMethod,getResolvedVirtualMethod(TR::Compilation *,int32_t,_Bool,_Bool *),0,TR,ResolvedMethod
getSignature,getSignature(),1,TestCompiler,ResolvedMethod
getUnresolvedFieldInCP,getUnresolvedFieldInCP(int32_t),1,TR,ResolvedMethod
getUnresolvedSpecialMethodInCP,getUnresolvedSpecialMethodInCP(int32_t),1,TR,ResolvedMethod
getUnresolvedStaticMethodInCP,getUnresolvedStaticMethodInCP(int32_t),1,TR,ResolvedMethod
getUnresolvedVirtualMethodInCP,getUnresolvedVirtualMethodInCP(int32_t),1,TR,ResolvedMethod
hasBackwardBranches,hasBackwardBranches(),1,TR,ResolvedMethod
indirectCallOpCode,indirectCallOpCode(),1,TR,ResolvedMethod
intConstant,intConstant(int32_t),1,TR,ResolvedMethod
isAbstract,isAbstract(),1,TR,ResolvedMethod
isClassConstant,isClassConstant(int32_t),1,TR,ResolvedMethod
isCold,isCold(TR::Compilation *,_Bool,TR::ResolvedMethodSymbol *),1,TR,ResolvedMethod
isCompilable,isCompilable(class TR_Memory *),1,TR,ResolvedMethod
isConstructor,isConstructor(),1,TR,ResolvedMethod
isDAAIntrinsicMethod,isDAAIntrinsicMethod(),1,TR,ResolvedMethod
isDAAMarshallingIntrinsicMethod,isDAAMarshallingIntrinsicMethod(),1,TR,ResolvedMethod
isDAAMarshallingWrapperMethod,isDAAMarshallingWrapperMethod(),1,TR,ResolvedMethod
isDAAPackedDecimalIntrinsicMethod,isDAAPackedDecimalIntrinsicMethod(),1,TR,ResolvedMethod
isDAAPackedDecimalWrapperMethod,isDAAPackedDecimalWrapperMethod(),1,TR,ResolvedMethod
isDAAWrapperMethod,isDAAWrapperMethod(),1,TR,ResolvedMethod
isDebugable,isDebugable(),1,TR,ResolvedMethod
isFinal,isFinal(),1,TR,ResolvedMethod
isFinalInObject,isFinalInObject(),1,TestCompiler,ResolvedMethodBase
isInlineable,isInlineable(TR::Compilation *),1,TR,ResolvedMethod
isInterpreted,isInterpreted(),1,TR,ResolvedMethod
isJ9,isJ9(),1,TR,ResolvedMethod
isJITInternalNative,isJITInternalNative(),1,TR,ResolvedMethod
isJNINative,isJNINative(),1,TR,ResolvedMethod
isMethodHandleConstant,isMethodHandleConstant(int32_t),1,TR,ResolvedMethod
isMethodTypeConstant,isMethodTypeConstant(int32_t),1,TR,ResolvedMethod
isNative,isNative(),1,TR,ResolvedMethod
isNewInstanceImplThunk,isNewInstanceImplThunk(),1,TR,ResolvedMethod
isNonEmptyObjectConstructor,isNonEmptyObjectConstructor(),1,TR,ResolvedMethod
isObjectConstructor,isObjectConstructor(),1,TR,ResolvedMethod
isPrivate,isPrivate(),1,TR,ResolvedMethod
isProtected,isProtected(),1,TR,ResolvedMethod
isPublic,isPublic(),1,TR,ResolvedMethod
isPython,isPython(),1,TR,ResolvedMethod
isRuby,isRuby(),1,TR,ResolvedMethod
isSameMethod,isSameMethod(class TR_ResolvedMethod *),1,TR,ResolvedMethod
isStatic,isStatic(),1,TR,ResolvedMethod
isStrictFP,isStrictFP(),1,TR,ResolvedMethod
isStringConstant,isStringConstant(int32_t),1,TR,ResolvedMethod
isSubjectToPhaseChange,isSubjectToPhaseChange(TR::Compilation *),1,TR,ResolvedMethod
isSynchronized,isSynchronized(),1,TR,ResolvedMethod
isUnresolvedCallSiteTableEntry,isUnresolvedCallSiteTableEntry(int32_t),1,TR,ResolvedMethod
isUnresolvedMethodHandle,isUnresolvedMethodHandle(int32_t),1,TR,ResolvedMethod
isUnresolvedMethodType,isUnresolvedMethodType(int32_t),1,TR,ResolvedMethod
isUnresolvedMethodTypeTableEntry,isUnresolvedMethodTypeTableEntry(int32_t),1,TR,ResolvedMethod
isUnresolvedString,isUnresolvedString(int32_t,_Bool),1,TR,ResolvedMethod
isWarmCallGraphTooBig,isWarmCallGraphTooBig(uint32_t,TR::Compilation *),1,TR,ResolvedMethod
localName,localName(uint32_t,uint32_t,int32_t &,class TR_Memory *),1,TR,ResolvedMethod
localName,localName(uint32_t,uint32_t,class TR_Memory *),0,TR,ResolvedMethod
longConstant,longConstant(int32_t),1,TR,ResolvedMethod
makeParameterList,makeParameterList(TR::ResolvedMethodSymbol *),1,TR,ResolvedMethod
maxBytecodeIndex,maxBytecodeIndex(),1,TR,ResolvedMethod
methodHandleConstant,methodHandleConstant(int32_t),1,TR,ResolvedMethod
methodTypeConstant,methodTypeConstant(int32_t),1,TR,ResolvedMethod
methodTypeTableEntryAddress,methodTypeTableEntryAddress(int32_t),1,TR,ResolvedMethod
nameChars,nameChars(),1,TR,ResolvedMethod
nameLength,nameLength(),1,TR,ResolvedMethod
newInstancePrototypeSignature,newInstancePrototypeSignature(class TR_Memory *,enum TR_AllocationKind),1,TR,ResolvedMethod
numberOfExceptionHandlers,numberOfExceptionHandlers(),1,TR,ResolvedMethod
numberOfExplicitParameters,numberOfExplicitParameters(),1,TR,ResolvedMethod
numberOfParameterSlots,numberOfParameterSlots(),1,TR,ResolvedMethod
numberOfParameters,numberOfParameters(),1,TR,ResolvedMethod
numberOfPendingPushes,numberOfPendingPushes(),1,TR,ResolvedMethod
numberOfTemps,numberOfTemps(),1,TR,ResolvedMethod
operator=,operator=(const class TR_ResolvedMethod &),1,TR,ResolvedMethod
operator=,operator=(class TR_ResolvedMethod &&),0,TR,ResolvedMethod
operator=,operator=(const class TestCompiler::ResolvedMethodBase &),0,TestCompiler,ResolvedMethodBase
operator=,operator=(class TestCompiler::ResolvedMethodBase &&),0,TestCompiler,ResolvedMethodBase
operator=,operator=(const class TestCompiler::ResolvedMethod &),0,TestCompiler,ResolvedMethod
operator=,operator=(class TestCompiler::ResolvedMethod &&),0,TestCompiler,ResolvedMethod
operator=,operator=(class TR::ResolvedMethod &&),0,TR,ResolvedMethod
operator=,operator=(const class TR::ResolvedMethod &),0,TR,ResolvedMethod
owningMethod,owningMethod(),1,TR,ResolvedMethod
owningMethodDoesntMatter,owningMethodDoesntMatter(),1,TR,ResolvedMethod
parmType,parmType(uint32_t),1,TR,ResolvedMethod
ramConstantPool,ramConstantPool(),1,TR,ResolvedMethod
resolvedMethodAddress,resolvedMethodAddress(),1,TR,ResolvedMethod
returnIlType,returnIlType(),1,TestCompiler,ResolvedMethod
returnOpCode,returnOpCode(),1,TR,ResolvedMethod
returnType,returnType(),1,TR,ResolvedMethod
returnTypeIsUnsigned,returnTypeIsUnsigned(),1,TR,ResolvedMethod
returnTypeWidth,returnTypeWidth(),1,TR,ResolvedMethod
setEntryPoint,setEntryPoint(void *),1,TestCompiler,ResolvedMethod
setInvocationCount,setInvocationCount(intptrj_t,intptrj_t),1,TR,ResolvedMethod
setMethodHandleLocation,setMethodHandleLocation(uintptrj_t *),1,TR,ResolvedMethod
setOwningMethod,setOwningMethod(class TR_ResolvedMethod *),1,TR,ResolvedMethod
setVirtualMethodIsOverridden,setVirtualMethodIsOverridden(),1,TR,ResolvedMethod
setWarmCallGraphTooBig,setWarmCallGraphTooBig(uint32_t,TR::Compilation *),1,TR,ResolvedMethod
signature,signature(class TR_Memory *,enum TR_AllocationKind),1,TR,ResolvedMethod
signatureChars,signatureChars(),1,TR,ResolvedMethod
signatureLength,signatureLength(),1,TR,ResolvedMethod
startAddressForInterpreterOfJittedMethod,startAddressForInterpreterOfJittedMethod(),1,TR,ResolvedMethod
startAddressForJITInternalNativeMethod,startAddressForJITInternalNativeMethod(),1,TR,ResolvedMethod
startAddressForJNIMethod,startAddressForJNIMethod(TR::Compilation *),1,TR,ResolvedMethod
startAddressForJittedMethod,startAddressForJittedMethod(),1,TR,ResolvedMethod
staticAttributes,staticAttributes(TR::Compilation *,int32_t,void **,TR::DataType *,_Bool *,_Bool *,_Bool *,_Bool,_Bool *,_Bool),1,TR,ResolvedMethod
staticName,staticName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind),1,TR,ResolvedMethod
staticName,staticName(int32_t,class TR_Memory *,enum TR_AllocationKind),0,TR,ResolvedMethod
staticNameChars,staticNameChars(int32_t,int32_t &),1,TR,ResolvedMethod
staticSignatureChars,staticSignatureChars(int32_t,int32_t &),1,TR,ResolvedMethod
staticsAreSame,staticsAreSame(int32_t,class TR_ResolvedMethod *,int32_t,_Bool &),1,TR,ResolvedMethod
stringConstant,stringConstant(int32_t),1,TR,ResolvedMethod
vTableSlot,vTableSlot(uint32_t),1,TR,ResolvedMethod
virtualCallSelector,virtualCallSelector(uint32_t),1,TR,ResolvedMethod
virtualMethodIsOverridden,virtualMethodIsOverridden(),1,TR,ResolvedMethod
~ResolvedMethod,~ResolvedMethod(),1,TestCompiler,ResolvedMethod
~ResolvedMethodBase,~ResolvedMethodBase(),1,TestCompiler,ResolvedMethodBase
~TR_ResolvedMethod,~TR_ResolvedMethod(),1,TR,ResolvedMethod
SnippetGCMap,SnippetGCMap(class OMR::SnippetGCMap &&),1,OMR,SnippetGCMap
SnippetGCMap,SnippetGCMap(const class OMR::SnippetGCMap &),0,OMR,SnippetGCMap
SnippetGCMap,SnippetGCMap(),0,OMR,SnippetGCMap
SnippetGCMap,SnippetGCMap(class TR::SnippetGCMap &&),0,TR,SnippetGCMap
SnippetGCMap,SnippetGCMap(const class TR::SnippetGCMap &),0,TR,SnippetGCMap
getGCRegisterMask,getGCRegisterMask(),1,OMR,SnippetGCMap
getStackMap,getStackMap(),1,OMR,SnippetGCMap
isGCSafePoint,isGCSafePoint(),1,OMR,SnippetGCMap
operator=,operator=(class OMR::SnippetGCMap &&),1,OMR,SnippetGCMap
operator=,operator=(const class OMR::SnippetGCMap &),0,OMR,SnippetGCMap
operator=,operator=(class TR::SnippetGCMap &&),0,TR,SnippetGCMap
operator=,operator=(const class TR::SnippetGCMap &),0,TR,SnippetGCMap
registerStackMap,registerStackMap(TR::Instruction *,TR::CodeGenerator *),1,OMR,SnippetGCMap
registerStackMap,registerStackMap(uint8_t *,TR::CodeGenerator *),0,OMR,SnippetGCMap
resetGCSafePoint,resetGCSafePoint(),1,OMR,SnippetGCMap
setGCRegisterMask,setGCRegisterMask(uint32_t),1,OMR,SnippetGCMap
setGCSafePoint,setGCSafePoint(),1,OMR,SnippetGCMap
setStackMap,setStackMap(class TR_GCStackMap *),1,OMR,SnippetGCMap
~SnippetGCMap,~SnippetGCMap(),1,OMR,SnippetGCMap
Region,Region(TR::SegmentProvider &,TR::RawAllocator),1,TR,Region
Region,Region(const class TR::Region &),0,TR,Region
StackMemoryRegion,StackMemoryRegion(const class TR::StackMemoryRegion &),1,TR,StackMemoryRegion
StackMemoryRegion,StackMemoryRegion(class TR_Memory &),0,TR,StackMemoryRegion
allocate,allocate(const size_t,void *),1,TR,Region
bytesAllocated,bytesAllocated(),1,TR,Region
deallocate,deallocate(void *,size_t),1,TR,Region
operator=,operator=(const class TR::Region &),1,TR,Region
operator=,operator=(const class TR::StackMemoryRegion &),0,TR,StackMemoryRegion
round,round(size_t),1,TR,Region
~Region,~Region(),1,TR,Region
~StackMemoryRegion,~StackMemoryRegion(),1,TR,StackMemoryRegion
SymbolReference,SymbolReference(const class OMR::SymbolReference &),1,OMR,SymbolReference
SymbolReference,SymbolReference(class OMR::SymbolReference &&),0,OMR,SymbolReference
SymbolReference,SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t,const char *),0,OMR,SymbolReference
SymbolReference,SymbolReference(),0,OMR,SymbolReference
SymbolReference,SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,class mcount_t,int32_t,int32_t),0,OMR,SymbolReference
SymbolReference,SymbolReference(TR::SymbolReferenceTable *),0,OMR,SymbolReference
SymbolReference,SymbolReference(TR::SymbolReferenceTable *,int32_t,TR::Symbol *,intptrj_t),0,OMR,SymbolReference
SymbolReference,SymbolReference(TR::SymbolReferenceTable *,TR::class SymbolReferenceTable::CommonNonhelperSymbol,TR::Symbol *,intptrj_t),0,OMR,SymbolReference
SymbolReference,SymbolReference(TR::SymbolReferenceTable *,TR::Symbol *,intptrj_t),0,OMR,SymbolReference
SymbolReference,SymbolReference(TR::SymbolReferenceTable *,TR::SymbolReference &,intptrj_t,TR::class KnownObjectTable::Index),0,OMR,SymbolReference
addToOffset,addToOffset(intptrj_t),1,OMR,SymbolReference
canCauseGC,canCauseGC(),1,OMR,SymbolReference
canGCandExcept,canGCandExcept(),1,OMR,SymbolReference
canGCandReturn,canGCandReturn(),1,OMR,SymbolReference
canKill,canKill(TR::SymbolReference *),1,OMR,SymbolReference
copyAliasSets,copyAliasSets(TR::SymbolReference *,TR::SymbolReferenceTable *),1,OMR,SymbolReference
copyFlags,copyFlags(TR::SymbolReference *),1,OMR,SymbolReference
copyRefNumIfPossible,copyRefNumIfPossible(TR::SymbolReference *,TR::SymbolReferenceTable *),1,OMR,SymbolReference
create,create(TR::SymbolReferenceTable *,TR::Symbol *,TR::class KnownObjectTable::Index),1,OMR,SymbolReference
getCPIndex,getCPIndex(),1,OMR,SymbolReference
getExtraInfo,getExtraInfo(),1,OMR,SymbolReference
getIndependentSymRefs,getIndependentSymRefs(),1,OMR,SymbolReference
getKnownObjectIndex,getKnownObjectIndex(),1,OMR,SymbolReference
getKnownObjectReferenceLocation,getKnownObjectReferenceLocation(TR::Compilation *),1,OMR,SymbolReference
getMethodAddress,getMethodAddress(),1,OMR,SymbolReference
getName,getName(class TR_Debug *),1,OMR,SymbolReference
getOffset,getOffset(),1,OMR,SymbolReference
getOwningMethod,getOwningMethod(TR::Compilation *),1,OMR,SymbolReference
getOwningMethodIndex,getOwningMethodIndex(),1,OMR,SymbolReference
getOwningMethodSymbol,getOwningMethodSymbol(TR::Compilation *),1,OMR,SymbolReference
getReferenceNumber,getReferenceNumber(),1,OMR,SymbolReference
getSize,getSize(),1,OMR,SymbolReference
getSymbol,getSymbol(),1,OMR,SymbolReference
getTypeSignature,getTypeSignature(int32_t &,enum TR_AllocationKind,_Bool *),1,OMR,SymbolReference
getUnresolvedIndex,getUnresolvedIndex(),1,OMR,SymbolReference
getUseDefAliases,getUseDefAliases(_Bool,_Bool),1,OMR,SymbolReference
getUseDefAliasesBV,getUseDefAliasesBV(_Bool,_Bool),1,OMR,SymbolReference
getUseDefAliasesIncludingGCSafePoint,getUseDefAliasesIncludingGCSafePoint(_Bool),1,OMR,SymbolReference
getUseonlyAliases,getUseonlyAliases(),1,OMR,SymbolReference
getUseonlyAliasesBV,getUseonlyAliasesBV(TR::SymbolReferenceTable *),1,OMR,SymbolReference
hasBeenAccessedAtRuntime,hasBeenAccessedAtRuntime(),1,OMR,SymbolReference
hasKnownObjectIndex,hasKnownObjectIndex(),1,OMR,SymbolReference
hasTemporaryNegativeOffset,hasTemporaryNegativeOffset(),1,OMR,SymbolReference
holdsMonitoredObjectForSyncMethod,holdsMonitoredObjectForSyncMethod(),1,OMR,SymbolReference
init,init(TR::SymbolReferenceTable *,uint32_t,TR::Symbol *,intptrj_t,class mcount_t,int32_t,int32_t,_Bool),1,OMR,SymbolReference
isAdjunct,isAdjunct(),1,OMR,SymbolReference
isDual,isDual(),1,OMR,SymbolReference
isFromLiteralPool,isFromLiteralPool(),1,OMR,SymbolReference
isInitMethod,isInitMethod(),1,OMR,SymbolReference
isLitPoolReference,isLitPoolReference(),1,OMR,SymbolReference
isLiteralPoolAddress,isLiteralPoolAddress(),1,OMR,SymbolReference
isOverriddenBitAddress,isOverriddenBitAddress(),1,OMR,SymbolReference
isSideEffectInfo,isSideEffectInfo(),1,OMR,SymbolReference
isTempVariableSizeSymRef,isTempVariableSizeSymRef(),1,OMR,SymbolReference
isTemporary,isTemporary(TR::Compilation *),1,OMR,SymbolReference
isThisPointer,isThisPointer(),1,OMR,SymbolReference
isUnresolved,isUnresolved(),1,OMR,SymbolReference
isUnresolvedFieldInCP,isUnresolvedFieldInCP(TR::Compilation *),1,OMR,SymbolReference
isUnresolvedMethodInCP,isUnresolvedMethodInCP(TR::Compilation *),1,OMR,SymbolReference
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,SymbolReference
jitPersistentFree,jitPersistentFree(void *),1,OMR,SymbolReference
makeIndependent,makeIndependent(TR::SymbolReferenceTable *,TR::SymbolReference *),1,OMR,SymbolReference
maybeVolatile,maybeVolatile(),1,OMR,SymbolReference
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReference
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReference
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,SymbolReference
operator delete,operator delete(void *,TR::Region &),0,OMR,SymbolReference
operator delete,operator delete(void *,size_t),0,OMR,SymbolReference
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReference
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReference
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,SymbolReference
operator delete[],operator delete[](void *,TR::Region &),0,OMR,SymbolReference
operator new,operator new(size_t,TR::Region &),1,OMR,SymbolReference
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,SymbolReference
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReference
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,SymbolReference
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,SymbolReference
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReference
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,SymbolReference
operator new[],operator new[](size_t,TR::Region &),1,OMR,SymbolReference
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,SymbolReference
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,SymbolReference
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReference
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,SymbolReference
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReference
operator=,operator=(class OMR::SymbolReference &&),1,OMR,SymbolReference
operator=,operator=(const class OMR::SymbolReference &),0,OMR,SymbolReference
operator=,operator=(class TR::SymbolReference &&),0,TR,SymbolReference
operator=,operator=(const class TR::SymbolReference &),0,TR,SymbolReference
reallySharesSymbol,reallySharesSymbol(TR::Compilation *),1,OMR,SymbolReference
reallySharesSymbol,reallySharesSymbol(),0,OMR,SymbolReference
resetHasTemporaryNegativeOffset,resetHasTemporaryNegativeOffset(),1,OMR,SymbolReference
self,self(),1,OMR,SymbolReference
setAliasedTo,setAliasedTo(TR::SymbolReference *,_Bool),1,OMR,SymbolReference
setAliasedTo,setAliasedTo(class TR_BitVector &,TR::SymbolReferenceTable *,_Bool),0,OMR,SymbolReference
setCPIndex,setCPIndex(int32_t),1,OMR,SymbolReference
setCanGCandExcept,setCanGCandExcept(),1,OMR,SymbolReference
setCanGCandReturn,setCanGCandReturn(),1,OMR,SymbolReference
setEmptyUseDefAliases,setEmptyUseDefAliases(TR::SymbolReferenceTable *),1,OMR,SymbolReference
setExtraInfo,setExtraInfo(struct TR_ExtraInfoForNew *),1,OMR,SymbolReference
setFromLiteralPool,setFromLiteralPool(),1,OMR,SymbolReference
setHasBeenAccessedAtRuntime,setHasBeenAccessedAtRuntime(enum TR_YesNoMaybe),1,OMR,SymbolReference
setHasTemporaryNegativeOffset,setHasTemporaryNegativeOffset(),1,OMR,SymbolReference
setHoldsMonitoredObjectForSyncMethod,setHoldsMonitoredObjectForSyncMethod(),1,OMR,SymbolReference
setIndependentSymRefs,setIndependentSymRefs(class TR_BitVector *),1,OMR,SymbolReference
setInitMethod,setInitMethod(),1,OMR,SymbolReference
setIsAdjunct,setIsAdjunct(),1,OMR,SymbolReference
setIsDual,setIsDual(),1,OMR,SymbolReference
setIsTempVariableSizeSymRef,setIsTempVariableSizeSymRef(),1,OMR,SymbolReference
setLiteralPoolAddress,setLiteralPoolAddress(),1,OMR,SymbolReference
setLiteralPoolAliases,setLiteralPoolAliases(class TR_BitVector *,TR::SymbolReferenceTable *),1,OMR,SymbolReference
setOffset,setOffset(intptrj_t),1,OMR,SymbolReference
setOverriddenBitAddress,setOverriddenBitAddress(),1,OMR,SymbolReference
setOwningMethodIndex,setOwningMethodIndex(class mcount_t),1,OMR,SymbolReference
setReallySharesSymbol,setReallySharesSymbol(),1,OMR,SymbolReference
setReferenceNumber,setReferenceNumber(int32_t),1,OMR,SymbolReference
setSharedShadowAliases,setSharedShadowAliases(class TR_BitVector *,TR::SymbolReferenceTable *),1,OMR,SymbolReference
setSharedStaticAliases,setSharedStaticAliases(class TR_BitVector *,TR::SymbolReferenceTable *),1,OMR,SymbolReference
setSideEffectInfo,setSideEffectInfo(),1,OMR,SymbolReference
setSize,setSize(uint32_t),1,OMR,SymbolReference
setStackAllocatedArrayAccess,setStackAllocatedArrayAccess(),1,OMR,SymbolReference
setSymbol,setSymbol(TR::Symbol *),1,OMR,SymbolReference
setUnresolved,setUnresolved(),1,OMR,SymbolReference
setUseDefAliases,setUseDefAliases(class TR_BitVector *),1,OMR,SymbolReference
sharesSymbol,sharesSymbol(_Bool),1,OMR,SymbolReference
stackAllocatedArrayAccess,stackAllocatedArrayAccess(),1,OMR,SymbolReference
storeCanBeRemoved,storeCanBeRemoved(),1,OMR,SymbolReference
willUse,willUse(TR::SymbolReference *,TR::SymbolReferenceTable *),1,OMR,SymbolReference
~SymbolReference,~SymbolReference(),1,OMR,SymbolReference
SymbolReferenceTable,SymbolReferenceTable(const class OMR::SymbolReferenceTable &),1,OMR,SymbolReferenceTable
SymbolReferenceTable,SymbolReferenceTable(class OMR::SymbolReferenceTable &&),0,OMR,SymbolReferenceTable
SymbolReferenceTable,SymbolReferenceTable(size_t,TR::Compilation *),0,OMR,SymbolReferenceTable
assignSymRefNumber,assignSymRefNumber(TR::SymbolReference *),1,OMR,SymbolReferenceTable
clearAvailableAutos,clearAvailableAutos(),1,OMR,SymbolReferenceTable
comp,comp(),1,OMR,SymbolReferenceTable
createCoDependententTemporary,createCoDependententTemporary(TR::ResolvedMethodSymbol *,TR::DataType,_Bool,size_t,TR::Symbol *,int32_t),1,OMR,SymbolReferenceTable
createGenericIntShadowSymbolReference,createGenericIntShadowSymbolReference(intptrj_t,_Bool),1,OMR,SymbolReferenceTable
createIsOverriddenSymbolRef,createIsOverriddenSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
createKnownStaticDataSymbolRef,createKnownStaticDataSymbolRef(void *,TR::DataType),1,OMR,SymbolReferenceTable
createKnownStaticDataSymbolRef,createKnownStaticDataSymbolRef(void *,TR::DataType,TR::class KnownObjectTable::Index),0,OMR,SymbolReferenceTable
createKnownStaticRefereneceSymbolRef,createKnownStaticRefereneceSymbolRef(void *,TR::class KnownObjectTable::Index),1,OMR,SymbolReferenceTable
createLocalAddrArray,createLocalAddrArray(int32_t,TR::ResolvedMethodSymbol *,TR::SymbolReference *),1,OMR,SymbolReferenceTable
createLocalObject,createLocalObject(int32_t,TR::ResolvedMethodSymbol *,TR::SymbolReference *),1,OMR,SymbolReferenceTable
createLocalPrimArray,createLocalPrimArray(int32_t,TR::ResolvedMethodSymbol *,int32_t),1,OMR,SymbolReferenceTable
createParameterSymbol,createParameterSymbol(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,_Bool),1,OMR,SymbolReferenceTable
createRefinedArrayShadowSymbolRef,createRefinedArrayShadowSymbolRef(TR::DataType,TR::Symbol *),1,OMR,SymbolReferenceTable
createRefinedArrayShadowSymbolRef,createRefinedArrayShadowSymbolRef(TR::DataType),0,OMR,SymbolReferenceTable
createRegisterSymbol,createRegisterSymbol(TR::ResolvedMethodSymbol *,enum TR_RegisterKinds,TR::DataType,TR_GlobalRegisterNumber),1,OMR,SymbolReferenceTable
createRuntimeHelper,createRuntimeHelper(enum TR_RuntimeHelper,_Bool,_Bool,_Bool),1,OMR,SymbolReferenceTable
createSymbolReference,createSymbolReference(TR::Symbol *,intptrj_t),1,OMR,SymbolReferenceTable
createTemporary,createTemporary(TR::ResolvedMethodSymbol *,TR::DataType,_Bool,size_t),1,OMR,SymbolReferenceTable
element,element(enum TR_RuntimeHelper),1,OMR,SymbolReferenceTable
element,element(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),0,OMR,SymbolReferenceTable
fe,fe(),1,OMR,SymbolReferenceTable
findAddressOfClassOfMethodSymbolRef,findAddressOfClassOfMethodSymbolRef(),1,OMR,SymbolReferenceTable
findArrayClassRomPtrSymbolRef,findArrayClassRomPtrSymbolRef(),1,OMR,SymbolReferenceTable
findArrayComponentTypeSymbolRef,findArrayComponentTypeSymbolRef(),1,OMR,SymbolReferenceTable
findAvailableAuto,findAvailableAuto(TR::DataType,_Bool,_Bool),1,OMR,SymbolReferenceTable
findAvailableAuto,findAvailableAuto(List<TR::SymbolReference> &,TR::DataType,_Bool,_Bool),0,OMR,SymbolReferenceTable
findClassAndDepthFlagsSymbolRef,findClassAndDepthFlagsSymbolRef(),1,OMR,SymbolReferenceTable
findClassFlagsSymbolRef,findClassFlagsSymbolRef(),1,OMR,SymbolReferenceTable
findClassFromJavaLangClassSymbolRef,findClassFromJavaLangClassSymbolRef(),1,OMR,SymbolReferenceTable
findClassIsArraySymbolRef,findClassIsArraySymbolRef(),1,OMR,SymbolReferenceTable
findClassRomPtrSymbolRef,findClassRomPtrSymbolRef(),1,OMR,SymbolReferenceTable
findDLPStaticSymbolReference,findDLPStaticSymbolReference(TR::SymbolReference *),1,OMR,SymbolReferenceTable
findDescriptionWordFromPtrSymbolRef,findDescriptionWordFromPtrSymbolRef(),1,OMR,SymbolReferenceTable
findGenericIntShadowSymbol,findGenericIntShadowSymbol(),1,OMR,SymbolReferenceTable
findHeaderFlagsSymbolRef,findHeaderFlagsSymbolRef(),1,OMR,SymbolReferenceTable
findInstanceDescriptionSymbolRef,findInstanceDescriptionSymbolRef(),1,OMR,SymbolReferenceTable
findInstanceShapeSymbolRef,findInstanceShapeSymbolRef(),1,OMR,SymbolReferenceTable
findJavaLangClassFromClassSymbolRef,findJavaLangClassFromClassSymbolRef(),1,OMR,SymbolReferenceTable
findObjectNewInstanceImplSymbol,findObjectNewInstanceImplSymbol(),1,OMR,SymbolReferenceTable
findOrCreateANewArrayNoZeroInitSymbolRef,findOrCreateANewArrayNoZeroInitSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateAThrowSymbolRef,findOrCreateAThrowSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateArrayBoundsCheckSymbolRef,findOrCreateArrayBoundsCheckSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateArrayCmpSymbol,findOrCreateArrayCmpSymbol(),1,OMR,SymbolReferenceTable
findOrCreateArrayCopySymbol,findOrCreateArrayCopySymbol(),1,OMR,SymbolReferenceTable
findOrCreateArraySetSymbol,findOrCreateArraySetSymbol(),1,OMR,SymbolReferenceTable
findOrCreateArrayShadowSymbolRef,findOrCreateArrayShadowSymbolRef(TR::DataType,TR::Node *,int32_t,class TR_FrontEnd *),1,OMR,SymbolReferenceTable
findOrCreateArrayShadowSymbolRef,findOrCreateArrayShadowSymbolRef(TR::DataType,TR::Node *),0,OMR,SymbolReferenceTable
findOrCreateArrayStoreExceptionSymbolRef,findOrCreateArrayStoreExceptionSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateArrayTranslateAndTestSymbol,findOrCreateArrayTranslateAndTestSymbol(),1,OMR,SymbolReferenceTable
findOrCreateArrayTranslateSymbol,findOrCreateArrayTranslateSymbol(),1,OMR,SymbolReferenceTable
findOrCreateArrayletShadowSymbolRef,findOrCreateArrayletShadowSymbolRef(TR::DataType),1,OMR,SymbolReferenceTable
findOrCreateAsyncCheckSymbolRef,findOrCreateAsyncCheckSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateAutoSymbol,findOrCreateAutoSymbol(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,_Bool,_Bool,_Bool,_Bool,size_t),1,OMR,SymbolReferenceTable
findOrCreateCPSymbol,findOrCreateCPSymbol(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,_Bool,void *),1,OMR,SymbolReferenceTable
findOrCreateCheckCastSymbolRef,findOrCreateCheckCastSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateClassSymbol,findOrCreateClassSymbol(TR::ResolvedMethodSymbol *,int32_t,void *,_Bool),1,OMR,SymbolReferenceTable
findOrCreateCodeGenInlinedHelper,findOrCreateCodeGenInlinedHelper(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),1,OMR,SymbolReferenceTable
findOrCreateComputedStaticMethodSymbol,findOrCreateComputedStaticMethodSymbol(class mcount_t,int32_t,class TR_ResolvedMethod *),1,OMR,SymbolReferenceTable
findOrCreateConstantAreaSymbol,findOrCreateConstantAreaSymbol(),1,OMR,SymbolReferenceTable
findOrCreateConstantAreaSymbolReference,findOrCreateConstantAreaSymbolReference(),1,OMR,SymbolReferenceTable
findOrCreateContiguousArraySizeSymbolRef,findOrCreateContiguousArraySizeSymbolRef(),1,OMR,SymbolReferenceTable
findOrCreateCounterAddressSymbolRef,findOrCreateCounterAddressSymbolRef(),1,OMR,SymbolReferenceTable
findOrCreateCounterSymRef,findOrCreateCounterSymRef(char *,TR::DataType,void *),1,OMR,SymbolReferenceTable
findOrCreateCurrentTimeMaxPrecisionSymbol,findOrCreateCurrentTimeMaxPrecisionSymbol(),1,OMR,SymbolReferenceTable
findOrCreateDLPStaticSymbolReference,findOrCreateDLPStaticSymbolReference(TR::SymbolReference *),1,OMR,SymbolReferenceTable
findOrCreateDivCheckSymbolRef,findOrCreateDivCheckSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateExcpSymbolRef,findOrCreateExcpSymbolRef(),1,OMR,SymbolReferenceTable
findOrCreateGCRPatchPointSymbolRef,findOrCreateGCRPatchPointSymbolRef(),1,OMR,SymbolReferenceTable
findOrCreateGenericIntArrayShadowSymbolReference,findOrCreateGenericIntArrayShadowSymbolReference(intptrj_t),1,OMR,SymbolReferenceTable
findOrCreateGenericIntNonArrayShadowSymbolReference,findOrCreateGenericIntNonArrayShadowSymbolReference(intptrj_t),1,OMR,SymbolReferenceTable
findOrCreateGenericIntShadowSymbol,findOrCreateGenericIntShadowSymbol(),1,OMR,SymbolReferenceTable
findOrCreateGenericIntShadowSymbolReference,findOrCreateGenericIntShadowSymbolReference(intptrj_t,_Bool),1,OMR,SymbolReferenceTable
findOrCreateIndexableSizeSymbolRef,findOrCreateIndexableSizeSymbolRef(),1,OMR,SymbolReferenceTable
findOrCreateInstanceOfSymbolRef,findOrCreateInstanceOfSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateMethodSymbol,findOrCreateMethodSymbol(class mcount_t,int32_t,class TR_ResolvedMethod *,TR::class MethodSymbol::Kinds,_Bool),1,OMR,SymbolReferenceTable
findOrCreateMonitorEntrySymbolRef,findOrCreateMonitorEntrySymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateMonitorExitSymbolRef,findOrCreateMonitorExitSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateNewArrayNoZeroInitSymbolRef,findOrCreateNewArrayNoZeroInitSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateNewArraySymbolRef,findOrCreateNewArraySymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateNewObjectNoZeroInitSymbolRef,findOrCreateNewObjectNoZeroInitSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateNewObjectSymbolRef,findOrCreateNewObjectSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateNullCheckSymbolRef,findOrCreateNullCheckSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateOSRReturnAddressSymbolRef,findOrCreateOSRReturnAddressSymbolRef(),1,OMR,SymbolReferenceTable
findOrCreateOverflowCheckSymbolRef,findOrCreateOverflowCheckSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreatePendingPushTemporary,findOrCreatePendingPushTemporary(TR::ResolvedMethodSymbol *,int32_t,TR::DataType,size_t),1,OMR,SymbolReferenceTable
findOrCreatePrefetchSymbol,findOrCreatePrefetchSymbol(),1,OMR,SymbolReferenceTable
findOrCreateRecompilationCounterSymbolRef,findOrCreateRecompilationCounterSymbolRef(void *),1,OMR,SymbolReferenceTable
findOrCreateReportMethodEnterSymbolRef,findOrCreateReportMethodEnterSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateResolveCheckSymbolRef,findOrCreateResolveCheckSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateRuntimeHelper,findOrCreateRuntimeHelper(enum TR_RuntimeHelper,_Bool,_Bool,_Bool),1,OMR,SymbolReferenceTable
findOrCreateSinglePrecisionSQRTSymbol,findOrCreateSinglePrecisionSQRTSymbol(),1,OMR,SymbolReferenceTable
findOrCreateStartPCSymbolRef,findOrCreateStartPCSymbolRef(),1,OMR,SymbolReferenceTable
findOrCreateStaticMethodSymbol,findOrCreateStaticMethodSymbol(class mcount_t,int32_t,class TR_ResolvedMethod *),1,OMR,SymbolReferenceTable
findOrCreateSymRefWithKnownObject,findOrCreateSymRefWithKnownObject(TR::SymbolReference *,TR::class KnownObjectTable::Index),1,OMR,SymbolReferenceTable
findOrCreateSymRefWithKnownObject,findOrCreateSymRefWithKnownObject(TR::SymbolReference *,uintptrj_t *),0,OMR,SymbolReferenceTable
findOrCreateThisRangeExtensionSymRef,findOrCreateThisRangeExtensionSymRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateTransactionAbortSymbolRef,findOrCreateTransactionAbortSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateTransactionEntrySymbolRef,findOrCreateTransactionEntrySymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateTransactionExitSymbolRef,findOrCreateTransactionExitSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateVftSymbolRef,findOrCreateVftSymbolRef(),1,OMR,SymbolReferenceTable
findOrCreateVolatileReadDoubleSymbolRef,findOrCreateVolatileReadDoubleSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateVolatileReadLongSymbolRef,findOrCreateVolatileReadLongSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateVolatileWriteDoubleSymbolRef,findOrCreateVolatileWriteDoubleSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateVolatileWriteLongSymbolRef,findOrCreateVolatileWriteLongSymbolRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findOrCreateVtableEntrySymbolRef,findOrCreateVtableEntrySymbolRef(TR::ResolvedMethodSymbol *,int32_t),1,OMR,SymbolReferenceTable
findOrCreatebitOpMemSymbol,findOrCreatebitOpMemSymbol(),1,OMR,SymbolReferenceTable
findOrCreatelong2StringSymbol,findOrCreatelong2StringSymbol(),1,OMR,SymbolReferenceTable
findPrefetchSymbol,findPrefetchSymbol(),1,OMR,SymbolReferenceTable
findStaticSymbol,findStaticSymbol(class TR_ResolvedMethod *,int32_t,TR::DataType),1,OMR,SymbolReferenceTable
findThisRangeExtensionSymRef,findThisRangeExtensionSymRef(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
findVftSymbolRef,findVftSymbolRef(),1,OMR,SymbolReferenceTable
getArrayShadowIndex,getArrayShadowIndex(TR::DataType),1,OMR,SymbolReferenceTable
getArrayletShadowIndex,getArrayletShadowIndex(TR::DataType),1,OMR,SymbolReferenceTable
getIndexOfFirstSymRef,getIndexOfFirstSymRef(),1,OMR,SymbolReferenceTable
getLastCommonNonhelperSymbol,getLastCommonNonhelperSymbol(),1,OMR,SymbolReferenceTable
getNonhelperIndex,getNonhelperIndex(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),1,OMR,SymbolReferenceTable
getNumHelperSymbols,getNumHelperSymbols(),1,OMR,SymbolReferenceTable
getNumInternalPointers,getNumInternalPointers(),1,OMR,SymbolReferenceTable
getNumPredefinedSymbols,getNumPredefinedSymbols(),1,OMR,SymbolReferenceTable
getNumSymRefs,getNumSymRefs(),1,OMR,SymbolReferenceTable
getNumUnresolvedSymbols,getNumUnresolvedSymbols(),1,OMR,SymbolReferenceTable
getRegisterSymbol,getRegisterSymbol(TR_GlobalRegisterNumber),1,OMR,SymbolReferenceTable
getSharedAliases,getSharedAliases(TR::SymbolReference *),1,OMR,SymbolReferenceTable
getSymRef,getSymRef(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),1,OMR,SymbolReferenceTable
getSymRef,getSymRef(int32_t),0,OMR,SymbolReferenceTable
initRegisterSymbols,initRegisterSymbols(TR::ResolvedMethodSymbol *),1,OMR,SymbolReferenceTable
isConstantAreaSymbol,isConstantAreaSymbol(TR::Symbol *),1,OMR,SymbolReferenceTable
isConstantAreaSymbolReference,isConstantAreaSymbolReference(TR::SymbolReference *),1,OMR,SymbolReferenceTable
isNonHelper,isNonHelper(int32_t,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),1,OMR,SymbolReferenceTable
isNonHelper,isNonHelper(TR::SymbolReference *,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),0,OMR,SymbolReferenceTable
isRefinedArrayShadow,isRefinedArrayShadow(TR::SymbolReference *),1,OMR,SymbolReferenceTable
isVtableEntrySymbolRef,isVtableEntrySymbolRef(TR::SymbolReference *),1,OMR,SymbolReferenceTable
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,SymbolReferenceTable
jitPersistentFree,jitPersistentFree(void *),1,OMR,SymbolReferenceTable
makeAutoAvailableForIlGen,makeAutoAvailableForIlGen(TR::SymbolReference *),1,OMR,SymbolReferenceTable
makeSharedAliases,makeSharedAliases(TR::SymbolReference *,TR::SymbolReference *),1,OMR,SymbolReferenceTable
markBlockAsCold,markBlockAsCold(),1,OMR,SymbolReferenceTable
methodSymRefFromName,methodSymRefFromName(TR::ResolvedMethodSymbol *,char *,char *,char *,TR::class MethodSymbol::Kinds,int32_t),1,OMR,SymbolReferenceTable
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReferenceTable
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,SymbolReferenceTable
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReferenceTable
operator delete,operator delete(void *,TR::Region &),0,OMR,SymbolReferenceTable
operator delete,operator delete(void *,size_t),0,OMR,SymbolReferenceTable
operator delete[],operator delete[](void *,TR::Region &),1,OMR,SymbolReferenceTable
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReferenceTable
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,SymbolReferenceTable
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReferenceTable
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReferenceTable
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReferenceTable
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,SymbolReferenceTable
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,SymbolReferenceTable
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,SymbolReferenceTable
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,SymbolReferenceTable
operator new,operator new(size_t,TR::Region &),0,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,TR::Region &),0,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReferenceTable
operator=,operator=(class OMR::SymbolReferenceTable &&),1,OMR,SymbolReferenceTable
self,self(),1,OMR,SymbolReferenceTable
setNumSymRefs,setNumSymRefs(int32_t),1,OMR,SymbolReferenceTable
shouldMarkBlockAsCold,shouldMarkBlockAsCold(class TR_ResolvedMethod *,_Bool),1,OMR,SymbolReferenceTable
strdup,strdup(const char *),1,OMR,SymbolReferenceTable
trHeapMemory,trHeapMemory(),1,OMR,SymbolReferenceTable
trMemory,trMemory(),1,OMR,SymbolReferenceTable
trStackMemory,trStackMemory(),1,OMR,SymbolReferenceTable
~SymbolReferenceTable,~SymbolReferenceTable(),1,OMR,SymbolReferenceTable
TreeTop,TreeTop(TR::TreeTop *,TR::Node *,TR::Compilation *),1,OMR,TreeTop
TreeTop,TreeTop(class OMR::TreeTop &&),0,OMR,TreeTop
TreeTop,TreeTop(TR::Node *,TR::TreeTop *,TR::TreeTop *),0,OMR,TreeTop
TreeTop,TreeTop(const class OMR::TreeTop &),0,OMR,TreeTop
TreeTop,TreeTop(),0,TR,TreeTop
adjustBranchOrSwitchTreeTop,adjustBranchOrSwitchTreeTop(TR::Compilation *,TR::TreeTop *,TR::TreeTop *),1,OMR,TreeTop
create,create(TR::Compilation *,TR::TreeTop *,TR::Node *),1,OMR,TreeTop
create,create(TR::Compilation *,TR::Node *,TR::TreeTop *,TR::TreeTop *),0,OMR,TreeTop
create,create(TR::Compilation *),0,OMR,TreeTop
createIncTree,createIncTree(TR::Compilation *,TR::Node *,TR::SymbolReference *,int32_t,TR::TreeTop *,_Bool),1,OMR,TreeTop
createResetTree,createResetTree(TR::Compilation *,TR::Node *,TR::SymbolReference *,int32_t,TR::TreeTop *,_Bool),1,OMR,TreeTop
duplicateTree,duplicateTree(),1,OMR,TreeTop
getEnclosingBlock,getEnclosingBlock(_Bool),1,OMR,TreeTop
getExtendedBlockExitTreeTop,getExtendedBlockExitTreeTop(),1,OMR,TreeTop
getLastInstruction,getLastInstruction(),1,OMR,TreeTop
getNextRealTreeTop,getNextRealTreeTop(),1,OMR,TreeTop
getNextTreeTop,getNextTreeTop(),1,OMR,TreeTop
getNode,getNode(),1,OMR,TreeTop
getPrevRealTreeTop,getPrevRealTreeTop(),1,OMR,TreeTop
getPrevTreeTop,getPrevTreeTop(),1,OMR,TreeTop
insertAfter,insertAfter(TR::TreeTop *),1,OMR,TreeTop
insertBefore,insertBefore(TR::TreeTop *),1,OMR,TreeTop
insertNewTreeTop,insertNewTreeTop(TR::TreeTop *,TR::TreeTop *),1,OMR,TreeTop
insertTreeTops,insertTreeTops(TR::Compilation *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *),1,OMR,TreeTop
insertTreeTopsAfterMe,insertTreeTopsAfterMe(TR::TreeTop *,TR::TreeTop *),1,OMR,TreeTop
insertTreeTopsBeforeMe,insertTreeTopsBeforeMe(TR::TreeTop *,TR::TreeTop *),1,OMR,TreeTop
isLegalToChangeBranchDestination,isLegalToChangeBranchDestination(TR::Compilation *),1,OMR,TreeTop
isPossibleDef,isPossibleDef(),1,OMR,TreeTop
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,TreeTop
jitPersistentFree,jitPersistentFree(void *),1,OMR,TreeTop
join,join(TR::TreeTop *),1,OMR,TreeTop
operator new,operator new(size_t,_Bool,class TR_Memory *),1,OMR,TreeTop
removeDeadTrees,removeDeadTrees(TR::Compilation *,TR::TreeTop *,TR::TreeTop *),1,OMR,TreeTop
removeDeadTrees,removeDeadTrees(TR::Compilation *,TR::TreeTop *[]),0,OMR,TreeTop
self,self(),1,OMR,TreeTop
setLastInstruction,setLastInstruction(TR::Instruction *),1,OMR,TreeTop
setNextTreeTop,setNextTreeTop(TR::TreeTop *),1,OMR,TreeTop
setNode,setNode(TR::Node *),1,OMR,TreeTop
setPrevTreeTop,setPrevTreeTop(TR::TreeTop *),1,OMR,TreeTop
unlink,unlink(_Bool),1,OMR,TreeTop
OSRFrameHeaderSizeInBytes,OSRFrameHeaderSizeInBytes(TR::Compilation *),1,OMR,VMEnv
OSRFrameSizeInBytes,OSRFrameSizeInBytes(TR::Compilation *,class TR_OpaqueMethodBlock *),1,OMR,VMEnv
VMEnv,VMEnv(class OMR::VMEnv &&),1,OMR,VMEnv
VMEnv,VMEnv(const class OMR::VMEnv &),0,OMR,VMEnv
VMEnv,VMEnv(),0,OMR,VMEnv
VMEnv,VMEnv(const class TR::VMEnv &),0,TR,VMEnv
VMEnv,VMEnv(class TR::VMEnv &&),0,TR,VMEnv
acquireVMAccessIfNeeded,acquireVMAccessIfNeeded(struct OMR_VMThread *),1,OMR,VMEnv
acquireVMAccessIfNeeded,acquireVMAccessIfNeeded(TR::Compilation *),0,OMR,VMEnv
canAnyMethodEventsBeHooked,canAnyMethodEventsBeHooked(TR::Compilation *),1,OMR,VMEnv
canMethodEnterEventBeHooked,canMethodEnterEventBeHooked(TR::Compilation *),1,OMR,VMEnv
canMethodExitEventBeHooked,canMethodExitEventBeHooked(TR::Compilation *),1,OMR,VMEnv
cpuTimeSpentInCompilationThread,cpuTimeSpentInCompilationThread(TR::Compilation *),1,OMR,VMEnv
ensureOSRBufferSize,ensureOSRBufferSize(TR::Compilation *,uintptrj_t,uintptrj_t,uintptrj_t),1,OMR,VMEnv
getHighResClock,getHighResClock(TR::Compilation *),1,OMR,VMEnv
getHighResClock,getHighResClock(struct OMR_VMThread *),0,OMR,VMEnv
getHighResClockResolution,getHighResClockResolution(),1,OMR,VMEnv
getOverflowSafeAllocSize,getOverflowSafeAllocSize(TR::Compilation *),1,OMR,VMEnv
getUSecClock,getUSecClock(TR::Compilation *),1,OMR,VMEnv
getUSecClock,getUSecClock(),0,OMR,VMEnv
getUSecClock,getUSecClock(struct OMR_VMThread *),0,OMR,VMEnv
hasAccess,hasAccess(struct OMR_VMThread *),1,OMR,VMEnv
hasAccess,hasAccess(TR::Compilation *),0,OMR,VMEnv
hasResumableTrapHandler,hasResumableTrapHandler(struct OMR_VMThread *),1,OMR,VMEnv
hasResumableTrapHandler,hasResumableTrapHandler(TR::Compilation *),0,OMR,VMEnv
heapBaseAddress,heapBaseAddress(),1,OMR,VMEnv
heapTailPaddingSizeInBytes,heapTailPaddingSizeInBytes(),1,OMR,VMEnv
maxHeapSizeInBytes,maxHeapSizeInBytes(),1,OMR,VMEnv
operator=,operator=(class OMR::VMEnv &&),1,OMR,VMEnv
operator=,operator=(const class OMR::VMEnv &),0,OMR,VMEnv
operator=,operator=(class TR::VMEnv &&),0,TR,VMEnv
operator=,operator=(const class TR::VMEnv &),0,TR,VMEnv
releaseAccess,releaseAccess(struct OMR_VMThread *),1,OMR,VMEnv
releaseAccess,releaseAccess(TR::Compilation *),0,OMR,VMEnv
releaseVMAccessIfNeeded,releaseVMAccessIfNeeded(TR::Compilation *,_Bool),1,OMR,VMEnv
releaseVMAccessIfNeeded,releaseVMAccessIfNeeded(struct OMR_VMThread *,_Bool),0,OMR,VMEnv
self,self(),1,OMR,VMEnv
thisThreadGetOSRReturnAddressOffset,thisThreadGetOSRReturnAddressOffset(TR::Compilation *),1,OMR,VMEnv
thisThreadGetPendingExceptionOffset,thisThreadGetPendingExceptionOffset(),1,OMR,VMEnv
tryToAcquireAccess,tryToAcquireAccess(TR::Compilation *,_Bool *),1,OMR,VMEnv
tryToAcquireAccess,tryToAcquireAccess(struct OMR_VMThread *,_Bool *),0,OMR,VMEnv
~VMEnv,~VMEnv(),1,OMR,VMEnv
VMMethodEnv,VMMethodEnv(class OMR::VMMethodEnv &&),1,OMR,VMMethodEnv
VMMethodEnv,VMMethodEnv(const class OMR::VMMethodEnv &),0,OMR,VMMethodEnv
VMMethodEnv,VMMethodEnv(),0,OMR,VMMethodEnv
VMMethodEnv,VMMethodEnv(class TR::VMMethodEnv &&),0,TR,VMMethodEnv
VMMethodEnv,VMMethodEnv(const class TR::VMMethodEnv &),0,TR,VMMethodEnv
hasBackwardBranches,hasBackwardBranches(class TR_OpaqueMethodBlock *),1,OMR,VMMethodEnv
isCompiledMethod,isCompiledMethod(class TR_OpaqueMethodBlock *),1,OMR,VMMethodEnv
operator=,operator=(const class OMR::VMMethodEnv &),1,OMR,VMMethodEnv
operator=,operator=(class OMR::VMMethodEnv &&),0,OMR,VMMethodEnv
operator=,operator=(class TR::VMMethodEnv &&),0,TR,VMMethodEnv
operator=,operator=(const class TR::VMMethodEnv &),0,TR,VMMethodEnv
startPC,startPC(class TR_OpaqueMethodBlock *),1,OMR,VMMethodEnv
~VMMethodEnv,~VMMethodEnv(),1,OMR,VMMethodEnv
TR_BitContainerIterator,TR_BitContainerIterator(class TR_BitContainerIterator &&),1,TR,BitContainerIterator
TR_BitContainerIterator,TR_BitContainerIterator(const class TR_BitContainerIterator &),0,TR,BitContainerIterator
TR_BitContainerIterator,TR_BitContainerIterator(),0,TR,BitContainerIterator
TR_BitContainerIterator,TR_BitContainerIterator(class TR_BitContainer &),0,TR,BitContainerIterator
TR_BitVectorIterator,TR_BitVectorIterator(),1,TR,BitVectorIterator
TR_BitVectorIterator,TR_BitVectorIterator(class TR_BitVector &,int32_t),0,TR,BitVectorIterator
TR_BitVectorIterator,TR_BitVectorIterator(const class TR_BitVectorIterator &),0,TR,BitVectorIterator
TR_BitVectorIterator,TR_BitVectorIterator(class TR_BitVectorIterator &&),0,TR,BitVectorIterator
getFirstElement,getFirstElement(),1,TR,BitVectorIterator
getNextBit,getNextBit(),1,TR,BitVectorIterator
getNextElement,getNextElement(),1,TR,BitVectorIterator
hasMoreElements,hasMoreElements(),1,TR,BitVectorIterator
reset,reset(),1,TR,BitVectorIterator
setBitContainer,setBitContainer(class TR_BitContainer &),1,TR,BitContainerIterator
setBitVector,setBitVector(class TR_BitVector &,int32_t),1,TR,BitVectorIterator
~TR_BitVectorIterator,~TR_BitVectorIterator(),1,TR,BitVectorIterator
SetToFirstOne,SetToFirstOne(),1,TR,BitVectorCursor
SetToNextOne,SetToNextOne(),1,TR,BitVectorCursor
TR_BitVectorCursor,TR_BitVectorCursor(class TR_BitVector &),1,TR,BitVectorCursor
Valid,Valid(),1,TR,BitVectorCursor
operator unsigned int,operator unsigned int(),1,TR,BitVectorCursor
TR_ClassExtendCheck,TR_ClassExtendCheck(class TR_OpaqueClassBlock *),1,TR,ClassExtendCheck
TR_ClassLoadCheck,TR_ClassLoadCheck(char *,int32_t),1,TR,ClassLoadCheck
TR_FrontEnd,TR_FrontEnd(class TR_FrontEnd &&),1,TR,FrontEnd
TR_FrontEnd,TR_FrontEnd(),0,TR,FrontEnd
TR_Uncopyable,TR_Uncopyable(const class TR_Uncopyable &),1,TR,Uncopyable
TR_Uncopyable,TR_Uncopyable(),0,TR,Uncopyable
acquireLogMonitor,acquireLogMonitor(),1,TR,FrontEnd
allocateCodeMemory,allocateCodeMemory(TR::Compilation *,uint32_t,uint32_t,uint8_t **,_Bool),1,TR,FrontEnd
allocateRelocationData,allocateRelocationData(TR::Compilation *,uint32_t),1,TR,FrontEnd
classHasBeenExtended,classHasBeenExtended(class TR_OpaqueClassBlock *),1,TR,FrontEnd
classHasBeenReplaced,classHasBeenReplaced(class TR_OpaqueClassBlock *),1,TR,FrontEnd
createDebug,createDebug(TR::Compilation *),1,TR,FrontEnd
createMethodMetaData,createMethodMetaData(TR::Compilation *),1,TR,FrontEnd
createResolvedMethod,createResolvedMethod(class TR_Memory *,class TR_OpaqueMethodBlock *,class TR_ResolvedMethod *,class TR_OpaqueClassBlock *),1,TR,FrontEnd
dataTypeForLoadOrStore,dataTypeForLoadOrStore(TR::DataType),1,TR,FrontEnd
findOrCreateLiteral,findOrCreateLiteral(TR::Compilation *,void *,size_t),1,TR,FrontEnd
generateBinaryEncodingPrologue,generateBinaryEncodingPrologue(struct TR_BinaryEncodingData *,TR::CodeGenerator *),1,TR,FrontEnd
getArrayClassFromComponentClass,getArrayClassFromComponentClass(class TR_OpaqueClassBlock *),1,TR,FrontEnd
getArraySpineShift,getArraySpineShift(int32_t),1,TR,FrontEnd
getArrayletLeafIndex,getArrayletLeafIndex(int32_t,int32_t),1,TR,FrontEnd
getArrayletMask,getArrayletMask(int32_t),1,TR,FrontEnd
getClassClassPointer,getClassClassPointer(class TR_OpaqueClassBlock *),1,TR,FrontEnd
getClassDepthAndFlagsValue,getClassDepthAndFlagsValue(class TR_OpaqueClassBlock *),1,TR,FrontEnd
getClassFromMethodBlock,getClassFromMethodBlock(class TR_OpaqueMethodBlock *),1,TR,FrontEnd
getClassFromNewArrayType,getClassFromNewArrayType(int32_t),1,TR,FrontEnd
getClassFromSignature,getClassFromSignature(const char *,int32_t,class TR_OpaqueMethodBlock *,_Bool),1,TR,FrontEnd
getClassFromSignature,getClassFromSignature(const char *,int32_t,class TR_ResolvedMethod *,_Bool),0,TR,FrontEnd
getClassFromStatic,getClassFromStatic(void *),1,TR,FrontEnd
getClassOfMethod,getClassOfMethod(class TR_OpaqueMethodBlock *),1,TR,FrontEnd
getCodeCacheBase,getCodeCacheBase(TR::CodeCache *),1,TR,FrontEnd
getCodeCacheBase,getCodeCacheBase(),0,TR,FrontEnd
getCodeCacheTop,getCodeCacheTop(),1,TR,FrontEnd
getCodeCacheTop,getCodeCacheTop(TR::CodeCache *),0,TR,FrontEnd
getComponentClassFromArrayClass,getComponentClassFromArrayClass(class TR_OpaqueClassBlock *),1,TR,FrontEnd
getDesignatedCodeCache,getDesignatedCodeCache(TR::Compilation *),1,TR,FrontEnd
getFormattedName,getFormattedName(char *,int32_t,char *,char *,_Bool),1,TR,FrontEnd
getInlinedCallSiteMethod,getInlinedCallSiteMethod(TR_InlinedCallSite *),1,TR,FrontEnd
getLeafComponentClassFromArrayClass,getLeafComponentClassFromArrayClass(class TR_OpaqueClassBlock *),1,TR,FrontEnd
getLineNumberForMethodAndByteCodeIndex,getLineNumberForMethodAndByteCodeIndex(class TR_OpaqueMethodBlock *,int32_t),1,TR,FrontEnd
getMethodFromName,getMethodFromName(char *,char *,char *,class TR_OpaqueMethodBlock *),1,TR,FrontEnd
getNewArrayTypeFromClass,getNewArrayTypeFromClass(class TR_OpaqueClassBlock *),1,TR,FrontEnd
getObjectAlignmentInBytes,getObjectAlignmentInBytes(),1,TR,FrontEnd
getObjectHeaderSizeInBytes,getObjectHeaderSizeInBytes(),1,TR,FrontEnd
getOffsetOfContiguousArraySizeField,getOffsetOfContiguousArraySizeField(),1,TR,FrontEnd
getOffsetOfDiscontiguousArraySizeField,getOffsetOfDiscontiguousArraySizeField(),1,TR,FrontEnd
getOffsetOfIndexableSizeField,getOffsetOfIndexableSizeField(),1,TR,FrontEnd
getPersistentInfo,getPersistentInfo(),1,TR,FrontEnd
getStringLength,getStringLength(uintptrj_t),1,TR,FrontEnd
getStringUTF8,getStringUTF8(uintptrj_t,char *,intptrj_t),1,TR,FrontEnd
getStringUTF8Length,getStringUTF8Length(uintptrj_t),1,TR,FrontEnd
getSuperClass,getSuperClass(class TR_OpaqueClassBlock *),1,TR,FrontEnd
indexedTrampolineLookup,indexedTrampolineLookup(int32_t,void *),1,TR,FrontEnd
isInlineableNativeMethod,isInlineableNativeMethod(TR::Compilation *,TR::ResolvedMethodSymbol *),1,TR,FrontEnd
isInstanceOf,isInstanceOf(class TR_OpaqueClassBlock *,class TR_OpaqueClassBlock *,_Bool,_Bool,_Bool),1,TR,FrontEnd
isMethodEnterTracingEnabled,isMethodEnterTracingEnabled(class TR_OpaqueMethodBlock *),1,TR,FrontEnd
isMethodExitTracingEnabled,isMethodExitTracingEnabled(class TR_OpaqueMethodBlock *),1,TR,FrontEnd
isUnloadAssumptionRequired,isUnloadAssumptionRequired(class TR_OpaqueClassBlock *,class TR_ResolvedMethod *),1,TR,FrontEnd
methodTrampolineLookup,methodTrampolineLookup(TR::Compilation *,TR::SymbolReference *,void *),1,TR,FrontEnd
needsMethodTrampolines,needsMethodTrampolines(),1,TR,FrontEnd
offsetOfIsOverriddenBit,offsetOfIsOverriddenBit(),1,TR,FrontEnd
operator=,operator=(const class TR_Uncopyable &),1,TR,Uncopyable
operator=,operator=(class TR_FrontEnd &&),0,TR,FrontEnd
operator=,operator=(const class TR_FrontEnd &),0,TR,FrontEnd
printVerboseLogHeader,printVerboseLogHeader(TR::Options *),1,TR,FrontEnd
releaseCodeMemory,releaseCodeMemory(void *,uint8_t),1,TR,FrontEnd
releaseLogMonitor,releaseLogMonitor(),1,TR,FrontEnd
reserveNTrampolines,reserveNTrampolines(TR::Compilation *,int32_t,_Bool),1,TR,FrontEnd
reserveTrampolineIfNecessary,reserveTrampolineIfNecessary(TR::Compilation *,TR::SymbolReference *,_Bool),1,TR,FrontEnd
resizeCodeMemory,resizeCodeMemory(TR::Compilation *,uint8_t *,uint32_t),1,TR,FrontEnd
sampleSignature,sampleSignature(class TR_OpaqueMethodBlock *,char *,int32_t,class TR_Memory *),1,TR,FrontEnd
unreserveCodeCache,unreserveCodeCache(TR::CodeCache *),1,TR,FrontEnd
~TR_FrontEnd,~TR_FrontEnd(),1,TR,FrontEnd
~TR_Uncopyable,~TR_Uncopyable(),1,TR,Uncopyable
TR_HashTab,TR_HashTab(class TR_HashTab &&),1,TR,HashTab
TR_HashTab,TR_HashTab(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),0,TR,HashTab
TR_HashTab,TR_HashTab(const class TR_HashTab &),0,TR,HashTab
TR_HashTabDouble,TR_HashTabDouble(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),1,TR,HashTabDouble
add,add(void *,TR_HashId,void *),1,TR,HashTab
add,add(double *,TR_HashId,void *),0,TR,HashTabDouble
addElement,addElement(void *,TR_HashId &,class TR_HashTab::TR_HashTableEntry *),1,TR,HashTab
calculateHash,calculateHash(const void *),1,TR,HashTab
clear,clear(),1,TR,HashTab
getData,getData(TR_HashId),1,TR,HashTab
growAndRehash,growAndRehash(uint32_t),1,TR,HashTab
growTo,growTo(uint32_t),1,TR,HashTab
init,init(uint32_t,_Bool),1,TR,HashTab
isEqual,isEqual(const void *,const void *),1,TR,HashTab
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,HashTab
jitPersistentFree,jitPersistentFree(void *),1,TR,HashTab
locate,locate(const void *,TR_HashId &),1,TR,HashTab
locate,locate(const double *,TR_HashId &),0,TR,HashTabDouble
operator delete,operator delete(void *,TR::Region &),1,TR,HashTab
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HashTab
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,HashTab
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HashTab
operator delete,operator delete(void *,size_t),0,TR,HashTab
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,TR,HashTab
operator delete[],operator delete[](void *,TR::Region &),0,TR,HashTab
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HashTab
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HashTab
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,HashTab
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HashTab
operator new,operator new(size_t,TR::Region &),0,TR,HashTab
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,HashTab
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HashTab
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,HashTab
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,HashTab
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,HashTab
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HashTab
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HashTab
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,HashTab
operator new[],operator new[](size_t,TR::Region &),0,TR,HashTab
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,HashTab
operator=,operator=(class TR_HashTab &&),1,TR,HashTab
operator=,operator=(const class TR_HashTab &),0,TR,HashTab
operator=,operator=(const class TR_HashTabDouble &),0,TR,HashTabDouble
operator=,operator=(class TR_HashTabDouble &&),0,TR,HashTabDouble
replace,replace(void *,TR_HashId,void *),1,TR,HashTab
reset,reset(),1,TR,HashTab
setKey,setKey(TR_HashId,void *),1,TR,HashTab
trHeapMemory,trHeapMemory(),1,TR,HashTab
trMemory,trMemory(),1,TR,HashTab
trStackMemory,trStackMemory(),1,TR,HashTab
updateData,updateData(TR_HashId,void *),1,TR,HashTab
~TR_HashTab,~TR_HashTab(),1,TR,HashTab
~TR_HashTabDouble,~TR_HashTabDouble(),1,TR,HashTabDouble
TR_HashTabFloat,TR_HashTabFloat(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),1,TR,HashTabFloat
add,add(float *,TR_HashId,void *),0,TR,HashTabFloat
locate,locate(const float *,TR_HashId &),0,TR,HashTabFloat
operator=,operator=(class TR_HashTabFloat &&),0,TR,HashTabFloat
operator=,operator=(const class TR_HashTabFloat &),0,TR,HashTabFloat
~TR_HashTabFloat,~TR_HashTabFloat(),1,TR,HashTabFloat
TR_HashTabInt,TR_HashTabInt(const class TR_HashTabInt &),1,TR,HashTabInt
TR_HashTabInt,TR_HashTabInt(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),0,TR,HashTabInt
TR_HashTabInt,TR_HashTabInt(class TR_HashTabInt &&),0,TR,HashTabInt
add,add(int32_t,TR_HashId,void *),0,TR,HashTabInt
locate,locate(int32_t,TR_HashId &),0,TR,HashTabInt
operator=,operator=(class TR_HashTabInt &&),0,TR,HashTabInt
operator=,operator=(const class TR_HashTabInt &),0,TR,HashTabInt
~TR_HashTabInt,~TR_HashTabInt(),1,TR,HashTabInt
TR_HashTabLong,TR_HashTabLong(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),1,TR,HashTabLong
add,add(int64_t *,TR_HashId,void *),0,TR,HashTabLong
locate,locate(const int64_t *,TR_HashId &),0,TR,HashTabLong
operator=,operator=(class TR_HashTabLong &&),0,TR,HashTabLong
operator=,operator=(const class TR_HashTabLong &),0,TR,HashTabLong
~TR_HashTabLong,~TR_HashTabLong(),1,TR,HashTabLong
TR_HashTabString,TR_HashTabString(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),1,TR,HashTabString
add,add(const char *,TR_HashId,void *),0,TR,HashTabString
locate,locate(const char *,TR_HashId &),0,TR,HashTabString
operator=,operator=(class TR_HashTabString &&),0,TR,HashTabString
operator=,operator=(const class TR_HashTabString &),0,TR,HashTabString
~TR_HashTabString,~TR_HashTabString(),1,TR,HashTabString
TR_HeapMemory,TR_HeapMemory(class TR_HeapMemory &&),1,TR,HeapMemory
TR_HeapMemory,TR_HeapMemory(const class TR_HeapMemory &),0,TR,HeapMemory
TR_HeapMemory,TR_HeapMemory(class TR_Memory *),0,TR,HeapMemory
TR_MemoryAllocationType,TR_MemoryAllocationType(class TR_MemoryAllocationType &&),1,TR,MemoryAllocationType
TR_MemoryAllocationType,TR_MemoryAllocationType(const class TR_MemoryAllocationType &),0,TR,MemoryAllocationType
TR_MemoryAllocationType,TR_MemoryAllocationType(class TR_Memory &),0,TR,MemoryAllocationType
allocate,allocate(size_t,class TR_MemoryBase::ObjectType),1,TR,HeapMemory
deallocate,deallocate(void *),1,TR,HeapMemory
operator=,operator=(const class TR_MemoryAllocationType &),1,TR,MemoryAllocationType
operator=,operator=(class TR_MemoryAllocationType &&),0,TR,MemoryAllocationType
operator=,operator=(class TR_HeapMemory &&),0,TR,HeapMemory
trMemory,trMemory(),1,TR,MemoryAllocationType
~TR_HeapMemory,~TR_HeapMemory(),1,TR,HeapMemory
~TR_MemoryAllocationType,~TR_MemoryAllocationType(),1,TR,MemoryAllocationType
TR_Memory,TR_Memory(class TR_PersistentMemory &,TR::Region &),1,TR,Memory
TR_Memory,TR_Memory(class TR_Memory &&),0,TR,Memory
TR_MemoryBase,TR_MemoryBase(const class TR_MemoryBase &),1,TR,MemoryBase
TR_MemoryBase,TR_MemoryBase(void *),0,TR,MemoryBase
allocateHeapMemory,allocateHeapMemory(size_t,enum TR_MemoryBase::ObjectType),1,TR,Memory
allocateMemory,allocateMemory(size_t,enum TR_AllocationKind,enum TR_MemoryBase::ObjectType),1,TR,Memory
allocateStackMemory,allocateStackMemory(size_t,enum TR_MemoryBase::ObjectType),1,TR,Memory
currentStackRegion,currentStackRegion(),1,TR,Memory
freeMemory,freeMemory(void *,enum TR_AllocationKind,enum TR_MemoryBase::ObjectType),1,TR,Memory
getPersistentInfo,getPersistentInfo(),1,TR,Memory
heapMemoryRegion,heapMemoryRegion(),1,TR,Memory
jitPersistentAlloc,jitPersistentAlloc(size_t,enum TR_MemoryBase::ObjectType),1,TR,MemoryBase
jitPersistentFree,jitPersistentFree(void *),1,TR,MemoryBase
operator=,operator=(const class TR_MemoryBase &),1,TR,MemoryBase
operator=,operator=(class TR_Memory &&),0,TR,Memory
registerStackRegion,registerStackRegion(TR::Region &),1,TR,Memory
setCompilation,setCompilation(TR::Compilation *),1,TR,Memory
trHeapMemory,trHeapMemory(),1,TR,Memory
trPersistentMemory,trPersistentMemory(),1,TR,Memory
trStackMemory,trStackMemory(),1,TR,Memory
unregisterStackRegion,unregisterStackRegion(TR::Region &,TR::Region &),1,TR,Memory
~TR_MemoryBase,~TR_MemoryBase(),1,TR,MemoryBase
TR_PersistentMemory,TR_PersistentMemory(class TR_PersistentMemory &&),1,TR,PersistentMemory
TR_PersistentMemory,TR_PersistentMemory(void *,TR::PersistentAllocator &),0,TR,PersistentMemory
allocatePersistentMemory,allocatePersistentMemory(const size_t,const enum TR_MemoryBase::ObjectType),1,TR,PersistentMemory
freePersistentMemory,freePersistentMemory(void *),1,TR,PersistentMemory
getNonThreadSafePersistentInfo,getNonThreadSafePersistentInfo(),1,TR,PersistentMemory
getPersistentInfo,getPersistentInfo(),1,TR,PersistentMemory
operator=,operator=(class TR_PersistentMemory &&),0,TR,PersistentMemory
TR_Dominators,TR_Dominators(const class TR_Dominators &),1,TR,Dominators
TR_Dominators,TR_Dominators(TR::Compilation *,_Bool),0,TR,Dominators
TR_Dominators,TR_Dominators(class TR_Dominators &&),0,TR,Dominators
TR_PostDominators,TR_PostDominators(TR::Compilation *),1,TR,PostDominators
blockNumber,blockNumber(int32_t),1,TR,Dominators
comp,comp(),1,TR,Dominators
compress,compress(int32_t),1,TR,Dominators
countBlocksControlled,countBlocksControlled(int32_t,BitVector &),1,TR,PostDominators
dominates,dominates(TR::Block *,TR::Block *),1,TR,Dominators
eval,eval(int32_t),1,TR,Dominators
findControlDependents,findControlDependents(),1,TR,PostDominators
findDominators,findDominators(TR::Block *),1,TR,Dominators
getDominator,getDominator(TR::Block *),1,TR,Dominators
getInfo,getInfo(int32_t),1,TR,Dominators
initialize,initialize(TR::Block *,struct TR_Dominators::BBInfo *),1,TR,Dominators
isValid,isValid(),1,TR,PostDominators
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,Dominators
jitPersistentFree,jitPersistentFree(void *),1,TR,Dominators
link,link(int32_t,int32_t),1,TR,Dominators
numberOfBlocksControlled,numberOfBlocksControlled(int32_t),1,TR,PostDominators
operator delete,operator delete(void *,size_t),1,TR,Dominators
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Dominators
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Dominators
operator delete,operator delete(void *,TR::Region &),0,TR,Dominators
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Dominators
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Dominators
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Dominators
operator delete[],operator delete[](void *,TR::Region &),0,TR,Dominators
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Dominators
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,Dominators
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,Dominators
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,Dominators
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Dominators
operator new,operator new(size_t,TR::Region &),0,TR,Dominators
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,Dominators
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Dominators
operator new[],operator new[](size_t,TR::Region &),1,TR,Dominators
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Dominators
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,Dominators
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Dominators
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,Dominators
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Dominators
operator=,operator=(class TR_Dominators &&),1,TR,Dominators
operator=,operator=(const class TR_Dominators &),0,TR,Dominators
operator=,operator=(class TR_PostDominators &&),0,TR,PostDominators
trace,trace(),1,TR,Dominators
~TR_Dominators,~TR_Dominators(),1,TR,Dominators
TR_CFGIterator,TR_CFGIterator(const class TR_CFGIterator &),1,TR,CFGIterator
TR_CFGIterator,TR_CFGIterator(class TR_CFGIterator &&),0,TR,CFGIterator
TR_CFGIterator,TR_CFGIterator(TR::CFGEdgeList &,TR::CFGEdgeList &),0,TR,CFGIterator
TR_PredecessorIterator,TR_PredecessorIterator(TR::CFGNode *),1,TR,PredecessorIterator
getCurrent,getCurrent(),1,TR,CFGIterator
getFirst,getFirst(),1,TR,CFGIterator
getNext,getNext(),1,TR,CFGIterator
operator=,operator=(const class TR_CFGIterator &),1,TR,CFGIterator
operator=,operator=(class TR_CFGIterator &&),0,TR,CFGIterator
operator=,operator=(class TR_PredecessorIterator &&),0,TR,PredecessorIterator
TR_StackMemory,TR_StackMemory(class TR_StackMemory &&),1,TR,StackMemory
TR_StackMemory,TR_StackMemory(const class TR_StackMemory &),0,TR,StackMemory
TR_StackMemory,TR_StackMemory(class TR_Memory *),0,TR,StackMemory
allocate,allocate(size_t,class TR_MemoryBase::ObjectType),1,TR,StackMemory
deallocate,deallocate(void *),1,TR,StackMemory
operator=,operator=(class TR_StackMemory &&),0,TR,StackMemory
~TR_StackMemory,~TR_StackMemory(),1,TR,StackMemory
TR_SuccessorIterator,TR_SuccessorIterator(TR::CFGNode *),1,TR,SuccessorIterator
operator=,operator=(class TR_SuccessorIterator &&),0,TR,SuccessorIterator
TR_SymRefIterator,TR_SymRefIterator(class TR_BitVector &,TR::SymbolReferenceTable *),1,TR,SymRefIterator
getNext,getNext(),1,TR,SymRefIterator
BufferBase<TCursor>,BufferBase<TCursor>(cursor_t),1,TR,X86OpCode::BufferBase
Estimator,Estimator(cursor_t),1,TR,X86OpCode::Estimator
operator type-parameter-0-0,operator type-parameter-0-0(),1,TR,X86OpCode::BufferBase
Writer,Writer(cursor_t),1,TR,X86OpCode::Writer
TR_ScratchRegisterManager,TR_ScratchRegisterManager(class TR_ScratchRegisterManager &&),1,TR,ScratchRegisterManager
TR_ScratchRegisterManager,TR_ScratchRegisterManager(int32_t,TR::CodeGenerator *),0,TR,ScratchRegisterManager
TR_ScratchRegisterManager,TR_ScratchRegisterManager(const class TR_ScratchRegisterManager &),0,TR,ScratchRegisterManager
TR_X86ScratchRegisterManager,TR_X86ScratchRegisterManager(int32_t,TR::CodeGenerator *),1,TR,X86ScratchRegisterManager
addScratchRegistersToDependencyList,addScratchRegistersToDependencyList(TR::RegisterDependencyConditions *),1,TR,ScratchRegisterManager
donateScratchRegister,donateScratchRegister(TR::Register *),1,TR,ScratchRegisterManager
findOrCreateScratchRegister,findOrCreateScratchRegister(enum TR_RegisterKinds),1,TR,ScratchRegisterManager
getCapacity,getCapacity(),1,TR,ScratchRegisterManager
getManagedScratchRegisterList,getManagedScratchRegisterList(),1,TR,ScratchRegisterManager
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,ScratchRegisterManager
jitPersistentFree,jitPersistentFree(void *),1,TR,ScratchRegisterManager
numAvailableRegisters,numAvailableRegisters(),1,TR,ScratchRegisterManager
operator delete,operator delete(void *,size_t),1,TR,ScratchRegisterManager
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,ScratchRegisterManager
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,ScratchRegisterManager
operator delete,operator delete(void *,TR::Region &),0,TR,ScratchRegisterManager
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,ScratchRegisterManager
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,ScratchRegisterManager
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,ScratchRegisterManager
operator delete[],operator delete[](void *,TR::Region &),0,TR,ScratchRegisterManager
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,ScratchRegisterManager
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,ScratchRegisterManager
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,ScratchRegisterManager
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,ScratchRegisterManager
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,ScratchRegisterManager
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,ScratchRegisterManager
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,ScratchRegisterManager
operator new,operator new(size_t,TR::Region &),0,TR,ScratchRegisterManager
operator new[],operator new[](size_t,TR::Region &),1,TR,ScratchRegisterManager
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,ScratchRegisterManager
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,ScratchRegisterManager
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,ScratchRegisterManager
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,ScratchRegisterManager
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,ScratchRegisterManager
reclaimAddressRegister,reclaimAddressRegister(TR::MemoryReference *),1,TR,X86ScratchRegisterManager
reclaimScratchRegister,reclaimScratchRegister(TR::Register *),1,TR,ScratchRegisterManager
setCapacity,setCapacity(int32_t),1,TR,ScratchRegisterManager
stopUsingRegisters,stopUsingRegisters(),1,TR,ScratchRegisterManager
Method,Method(class TestCompiler::Method &&),1,TestCompiler,Method
Method,Method(),0,TestCompiler,Method
Method,Method(const class TestCompiler::Method &),0,TestCompiler,Method
TR_Method,TR_Method(class TR_Method &&),1,TR,Method
TR_Method,TR_Method(enum TR_Method::Type),0,TR,Method
TR_Method,TR_Method(const class TR_Method &),0,TR,Method
classNameChars,classNameChars(),1,TR,Method
classNameLength,classNameLength(),1,TR,Method
directCallOpCode,directCallOpCode(),1,TR,Method
getMandatoryRecognizedMethod,getMandatoryRecognizedMethod(),1,TR,Method
getParameterIterator,getParameterIterator(TR::Compilation &,class TR_ResolvedMethod *),1,TR,Method
getRecognizedMethod,getRecognizedMethod(),1,TR,Method
indirectCallOpCode,indirectCallOpCode(),1,TR,Method
isArchetypeSpecimen,isArchetypeSpecimen(),1,TR,Method
isBigDecimalConvertersMethod,isBigDecimalConvertersMethod(TR::Compilation *),1,TR,Method
isBigDecimalMethod,isBigDecimalMethod(TR::Compilation *),1,TR,Method
isConstructor,isConstructor(),1,TR,Method
isFinalInObject,isFinalInObject(),1,TR,Method
isJ9,isJ9(),1,TR,Method
isPython,isPython(),1,TR,Method
isRuby,isRuby(),1,TR,Method
isUnsafeCAS,isUnsafeCAS(TR::Compilation *),1,TR,Method
isUnsafeWithObjectArg,isUnsafeWithObjectArg(TR::Compilation *),1,TR,Method
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,Method
jitPersistentFree,jitPersistentFree(void *),1,TR,Method
methodType,methodType(),1,TR,Method
nameChars,nameChars(),1,TR,Method
nameLength,nameLength(),1,TR,Method
numberOfExplicitParameters,numberOfExplicitParameters(),1,TR,Method
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,Method
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Method
operator delete,operator delete(void *,TR::Region &),0,TR,Method
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Method
operator delete,operator delete(void *,size_t),0,TR,Method
operator delete[],operator delete[](void *,TR::Region &),1,TR,Method
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Method
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Method
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Method
operator new,operator new(size_t,TR::Region &),1,TR,Method
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Method
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,Method
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,Method
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,Method
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Method
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Method
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Method
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,Method
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Method
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,Method
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Method
operator new[],operator new[](size_t,TR::Region &),0,TR,Method
operator=,operator=(const class TR_Method &),1,TR,Method
operator=,operator=(class TR_Method &&),0,TR,Method
operator=,operator=(class TestCompiler::Method &&),0,TestCompiler,Method
operator=,operator=(const class TestCompiler::Method &),0,TestCompiler,Method
parmType,parmType(uint32_t),1,TR,Method
returnOpCode,returnOpCode(),1,TR,Method
returnType,returnType(),1,TR,Method
returnTypeIsUnsigned,returnTypeIsUnsigned(),1,TR,Method
returnTypeWidth,returnTypeWidth(),1,TR,Method
setArchetypeSpecimen,setArchetypeSpecimen(_Bool),1,TR,Method
setMandatoryRecognizedMethod,setMandatoryRecognizedMethod(TR::RecognizedMethod),1,TR,Method
setRecognizedMethod,setRecognizedMethod(TR::RecognizedMethod),1,TR,Method
signature,signature(class TR_Memory *,enum TR_AllocationKind),1,TR,Method
signatureChars,signatureChars(),1,TR,Method
signatureLength,signatureLength(),1,TR,Method
~Method,~Method(),1,TestCompiler,Method
~TR_Method,~TR_Method(),1,TR,Method
ParameterSymbol,ParameterSymbol(class OMR::ParameterSymbol &&),1,OMR,ParameterSymbol
ParameterSymbol,ParameterSymbol(TR::DataType,_Bool,int32_t),0,OMR,ParameterSymbol
ParameterSymbol,ParameterSymbol(const class OMR::ParameterSymbol &),0,OMR,ParameterSymbol
ParameterSymbol,ParameterSymbol(TR::DataType,_Bool,int32_t,size_t),0,OMR,ParameterSymbol
Symbol,Symbol(TR::DataType,uint32_t),1,OMR,Symbol
Symbol,Symbol(),0,OMR,Symbol
getAllocatedHigh,getAllocatedHigh(),1,OMR,ParameterSymbol
getAllocatedIndex,getAllocatedIndex(),1,OMR,ParameterSymbol
getAllocatedLow,getAllocatedLow(),1,OMR,ParameterSymbol
getFixedType,getFixedType(),1,OMR,ParameterSymbol
getIsPreexistent,getIsPreexistent(),1,OMR,ParameterSymbol
getIsUnsigned,getIsUnsigned(),1,OMR,ParameterSymbol
getKnownObjectIndex,getKnownObjectIndex(),1,OMR,ParameterSymbol
getLinkageRegisterIndex,getLinkageRegisterIndex(),1,OMR,ParameterSymbol
getOrdinal,getOrdinal(),1,OMR,ParameterSymbol
getParameterOffset,getParameterOffset(),1,OMR,ParameterSymbol
getSlot,getSlot(),1,OMR,ParameterSymbol
getTypeSignature,getTypeSignature(int32_t &),1,OMR,ParameterSymbol
hasKnownObjectIndex,hasKnownObjectIndex(),1,OMR,ParameterSymbol
isParmPassedInRegister,isParmPassedInRegister(),1,OMR,ParameterSymbol
operator delete,operator delete(void *,TR::Region &),1,OMR,Symbol
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Symbol
operator new,operator new(size_t,TR::Region &),1,OMR,Symbol
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Symbol
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,OMR,Symbol
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Symbol
operator=,operator=(class OMR::ParameterSymbol &&),0,OMR,ParameterSymbol
operator=,operator=(const class OMR::ParameterSymbol &),0,OMR,ParameterSymbol
operator=,operator=(const class TR::ParameterSymbol &),0,TR,ParameterSymbol
operator=,operator=(class TR::ParameterSymbol &&),0,TR,ParameterSymbol
setAllocatedHigh,setAllocatedHigh(int8_t),1,OMR,ParameterSymbol
setAllocatedIndex,setAllocatedIndex(int8_t),1,OMR,ParameterSymbol
setAllocatedLow,setAllocatedLow(int8_t),1,OMR,ParameterSymbol
setFixedType,setFixedType(void *),1,OMR,ParameterSymbol
setIsPreexistent,setIsPreexistent(_Bool),1,OMR,ParameterSymbol
setIsUnsigned,setIsUnsigned(_Bool),1,OMR,ParameterSymbol
setKnownObjectIndex,setKnownObjectIndex(TR::class KnownObjectTable::Index),1,OMR,ParameterSymbol
setLinkageRegisterIndex,setLinkageRegisterIndex(int8_t),1,OMR,ParameterSymbol
setOrdinal,setOrdinal(int32_t),1,OMR,ParameterSymbol
setParameterOffset,setParameterOffset(int32_t),1,OMR,ParameterSymbol
setTypeSignature,setTypeSignature(const char *,int32_t),1,OMR,ParameterSymbol
~ParameterSymbol,~ParameterSymbol(),1,OMR,ParameterSymbol
fpMapToStackRelativeRegister,fpMapToStackRelativeRegister(int32_t),1,OMR,X86::Machine
fpMapToStackRelativeRegister,fpMapToStackRelativeRegister(TR::Register *),0,OMR,X86::Machine
fpStackFXCH,fpStackFXCH(TR::Instruction *,TR::Register *,_Bool),1,OMR,X86::Machine
fpStackFXCH,fpStackFXCH(TR::Instruction *,int32_t),0,OMR,X86::Machine
operator=,operator=(class OMR::DebugEnv &&),1,OMR,DebugEnv
operator=,operator=(const class OMR::DebugEnv &),0,OMR,DebugEnv
Snippet,Snippet(const class OMR::Snippet &),1,OMR,Snippet
Snippet,Snippet(class OMR::Snippet &&),0,OMR,Snippet
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Snippet
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Snippet
AliasBuilder,AliasBuilder(class OMR::AliasBuilder &&),1,OMR,AliasBuilder
AliasBuilder,AliasBuilder(const class OMR::AliasBuilder &),0,OMR,AliasBuilder
gatherLocalUseInfo,gatherLocalUseInfo(TR::Block *,_Bool),1,OMR,AliasBuilder
gatherLocalUseInfo,gatherLocalUseInfo(TR::Node *,class TR_BitVector &,vcount_t,_Bool),0,OMR,AliasBuilder
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,AliasBuilder
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,AliasBuilder
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,AliasBuilder
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,AliasBuilder
operator new,operator new(size_t,TR::Region &),1,OMR,AliasBuilder
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,AliasBuilder
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,AliasBuilder
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,AliasBuilder
CFGNode,CFGNode(class TR::CFGNode &&),1,TR,CFGNode
ClassEnv,ClassEnv(class OMR::ClassEnv &&),1,OMR,ClassEnv
ClassEnv,ClassEnv(const class OMR::ClassEnv &),0,OMR,ClassEnv
classOfObject,classOfObject(struct OMR_VMThread *,uintptrj_t),1,OMR,ClassEnv
classOfObject,classOfObject(TR::Compilation *,uintptrj_t),0,OMR,ClassEnv
operator=,operator=(const class OMR::ClassEnv &),1,OMR,ClassEnv
operator=,operator=(class OMR::ClassEnv &&),0,OMR,ClassEnv
CodeGenPhase,CodeGenPhase(TR::CodeGenerator *),1,OMR,CodeGenPhase
CodeGenPhase,CodeGenPhase(class OMR::CodeGenPhase &&),0,OMR,CodeGenPhase
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,OMR,Compilation
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Compilation
CompilerEnv,CompilerEnv(TR::RawAllocator,const TR::PersistentAllocatorKit &),1,OMR,CompilerEnv
CompilerEnv,CompilerEnv(const class OMR::CompilerEnv &),0,OMR,CompilerEnv
DataType,DataType(class OMR::DataType &&),1,OMR,DataType
DataType,DataType(TR::DataTypes),0,OMR,DataType
operator!=,operator!=(TR::DataTypes),1,OMR,DataType
operator!=,operator!=(const TR::DataType &),0,OMR,DataType
operator=,operator=(const class OMR::DataType &),1,OMR,DataType
operator=,operator=(TR::DataTypes),0,OMR,DataType
operator=,operator=(class OMR::DataType &&),0,OMR,DataType
operator=,operator=(class TR::DataType &&),0,TR,DataType
operator=,operator=(const class TR::DataType &),0,TR,DataType
operator>=,operator>=(const TR::DataType &),1,OMR,DataType
operator>=,operator>=(TR::DataTypes),0,OMR,DataType
Environment,Environment(TR::MajorOperatingSystem,TR::Bitness),1,OMR,Environment
Environment,Environment(),0,OMR,Environment
getSize,getSize(),1,OMR,ILOpCode
getSize,getSize(TR::ILOpCodes),0,OMR,ILOpCode
getType,getType(TR::ILOpCodes),1,OMR,ILOpCode
getType,getType(),0,OMR,ILOpCode
KnownObjectTable,KnownObjectTable(const class OMR::KnownObjectTable &),1,OMR,KnownObjectTable
KnownObjectTable,KnownObjectTable(class OMR::KnownObjectTable &&),0,OMR,KnownObjectTable
operator=,operator=(class OMR::KnownObjectTable &&),1,OMR,KnownObjectTable
operator=,operator=(const class OMR::KnownObjectTable &),0,OMR,KnownObjectTable
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
create,create(TR::ILOpCodes,uint16_t),0,OMR,Node
createArraycopy,createArraycopy(),1,OMR,Node
createArraycopy,createArraycopy(TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::SymbolReference *),1,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *),0,OMR,Node
ObjectModel,ObjectModel(const class OMR::ObjectModel &),1,OMR,ObjectModel
ObjectModel,ObjectModel(class OMR::ObjectModel &&),0,OMR,ObjectModel
operator=,operator=(const class OMR::ObjectModel &),1,OMR,ObjectModel
operator=,operator=(class OMR::ObjectModel &&),0,OMR,ObjectModel
Optimizer,Optimizer(class OMR::Optimizer &&),1,OMR,Optimizer
Optimizer,Optimizer(TR::Compilation *,TR::ResolvedMethodSymbol *,_Bool,const struct OptimizationStrategy *,uint16_t),0,OMR,Optimizer
areNodesEquivalent,areNodesEquivalent(TR::Node *,TR::Node *,TR::Compilation *,_Bool),1,OMR,Optimizer
areNodesEquivalent,areNodesEquivalent(TR::Node *,TR::Node *,_Bool),0,OMR,Optimizer
operator delete,operator delete(void *,size_t),1,OMR,Optimizer
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Optimizer
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Optimizer
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Optimizer
operator new,operator new(size_t,class TR_PersistentMemory *),1,OMR,Optimizer
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Optimizer
switchToProfiling,switchToProfiling(uint32_t,uint32_t),1,OMR,Optimizer
switchToProfiling,switchToProfiling(),0,OMR,Optimizer
PersistentInfo,PersistentInfo(class TR_PersistentMemory *),1,OMR,PersistentInfo
PersistentInfo,PersistentInfo(const class OMR::PersistentInfo &),0,OMR,PersistentInfo
operator=,operator=(class OMR::PersistentInfo &&),1,OMR,PersistentInfo
operator=,operator=(const class OMR::PersistentInfo &),0,OMR,PersistentInfo
TR_ResolvedMethod,TR_ResolvedMethod(class TR_ResolvedMethod &&),1,TR,ResolvedMethod
TR_ResolvedMethod,TR_ResolvedMethod(),0,TR,ResolvedMethod
fieldName,fieldName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind),1,TR,ResolvedMethod
fieldName,fieldName(int32_t,class TR_Memory *,enum TR_AllocationKind),0,TR,ResolvedMethod
getResolvedInterfaceMethod,getResolvedInterfaceMethod(int32_t,uintptrj_t *),1,TR,ResolvedMethod
getResolvedInterfaceMethod,getResolvedInterfaceMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t),0,TR,ResolvedMethod
getResolvedVirtualMethod,getResolvedVirtualMethod(TR::Compilation *,int32_t,_Bool,_Bool *),1,TR,ResolvedMethod
getResolvedVirtualMethod,getResolvedVirtualMethod(TR::Compilation *,class TR_OpaqueClassBlock *,int32_t,_Bool),0,TR,ResolvedMethod
localName,localName(uint32_t,uint32_t,class TR_Memory *),1,TR,ResolvedMethod
localName,localName(uint32_t,uint32_t,int32_t &,class TR_Memory *),0,TR,ResolvedMethod
operator=,operator=(class TR_ResolvedMethod &&),1,TR,ResolvedMethod
operator=,operator=(const class TR_ResolvedMethod &),0,TR,ResolvedMethod
operator delete[],operator delete[](void *,TR::Region &),1,OMR,SymbolReference
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReference
operator new,operator new(size_t,class TR_PersistentMemory *),1,OMR,SymbolReference
operator new,operator new(size_t,TR::Region &),0,OMR,SymbolReference
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReference
operator new[],operator new[](size_t,TR::Region &),0,OMR,SymbolReference
SymbolReferenceTable,SymbolReferenceTable(class OMR::SymbolReferenceTable &&),1,OMR,SymbolReferenceTable
SymbolReferenceTable,SymbolReferenceTable(const class OMR::SymbolReferenceTable &),0,OMR,SymbolReferenceTable
createRefinedArrayShadowSymbolRef,createRefinedArrayShadowSymbolRef(TR::DataType),1,OMR,SymbolReferenceTable
createRefinedArrayShadowSymbolRef,createRefinedArrayShadowSymbolRef(TR::DataType,TR::Symbol *),0,OMR,SymbolReferenceTable
findAvailableAuto,findAvailableAuto(List<TR::SymbolReference> &,TR::DataType,_Bool,_Bool),1,OMR,SymbolReferenceTable
findAvailableAuto,findAvailableAuto(TR::DataType,_Bool,_Bool),0,OMR,SymbolReferenceTable
findOrCreateSymRefWithKnownObject,findOrCreateSymRefWithKnownObject(TR::SymbolReference *,uintptrj_t *),1,OMR,SymbolReferenceTable
findOrCreateSymRefWithKnownObject,findOrCreateSymRefWithKnownObject(TR::SymbolReference *,TR::class KnownObjectTable::Index),0,OMR,SymbolReferenceTable
operator delete,operator delete(void *,TR::Region &),1,OMR,SymbolReferenceTable
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReferenceTable
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReferenceTable
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,SymbolReferenceTable
TreeTop,TreeTop(class OMR::TreeTop &&),1,OMR,TreeTop
TreeTop,TreeTop(TR::TreeTop *,TR::Node *,TR::Compilation *),0,OMR,TreeTop
create,create(TR::Compilation *,TR::Node *,TR::TreeTop *,TR::TreeTop *),1,OMR,TreeTop
create,create(TR::Compilation *,TR::TreeTop *,TR::Node *),0,OMR,TreeTop
removeDeadTrees,removeDeadTrees(TR::Compilation *,TR::TreeTop *[]),1,OMR,TreeTop
removeDeadTrees,removeDeadTrees(TR::Compilation *,TR::TreeTop *,TR::TreeTop *),0,OMR,TreeTop
getUSecClock,getUSecClock(),1,OMR,VMEnv
getUSecClock,getUSecClock(TR::Compilation *),0,OMR,VMEnv
hasResumableTrapHandler,hasResumableTrapHandler(TR::Compilation *),1,OMR,VMEnv
hasResumableTrapHandler,hasResumableTrapHandler(struct OMR_VMThread *),0,OMR,VMEnv
operator=,operator=(const class OMR::VMEnv &),1,OMR,VMEnv
operator=,operator=(class OMR::VMEnv &&),0,OMR,VMEnv
tryToAcquireAccess,tryToAcquireAccess(struct OMR_VMThread *,_Bool *),1,OMR,VMEnv
tryToAcquireAccess,tryToAcquireAccess(TR::Compilation *,_Bool *),0,OMR,VMEnv
getCodeCacheTop,getCodeCacheTop(TR::CodeCache *),1,TR,FrontEnd
getCodeCacheTop,getCodeCacheTop(),0,TR,FrontEnd
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,HashTab
operator delete,operator delete(void *,TR::Region &),0,TR,HashTab
operator new,operator new(size_t,TR::Region &),1,TR,HashTab
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,HashTab
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,HashTab
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,HashTab
operator=,operator=(const class TR_HashTab &),1,TR,HashTab
operator=,operator=(class TR_HashTab &&),0,TR,HashTab
TR_HashTabInt,TR_HashTabInt(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),1,TR,HashTabInt
TR_Memory,TR_Memory(class TR_Memory &&),1,TR,Memory
TR_Memory,TR_Memory(class TR_PersistentMemory &,TR::Region &),0,TR,Memory
Method,Method(const class TestCompiler::Method &),1,TestCompiler,Method
Method,Method(class TestCompiler::Method &&),0,TestCompiler,Method
TR_Method,TR_Method(enum TR_Method::Type),1,TR,Method
TR_Method,TR_Method(class TR_Method &&),0,TR,Method
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Method
operator new,operator new(size_t,TR::Region &),0,TR,Method
operator=,operator=(class TR_Method &&),1,TR,Method
operator=,operator=(const class TR_Method &),0,TR,Method
ConstCursor,ConstCursor(const TableOf<AElementType, Allocator, segmentBits, SupportingBitVector> &),1,CS2,TableOf::ConstCursor
ConstCursor,ConstCursor(const class CS2::TableOf::ConstCursor &,const SupportingBitVector<Allocator> &),0,CS2,TableOf::ConstCursor
GlobalSingletonAllocator,GlobalSingletonAllocator(class TR::GlobalSingletonAllocator &&),1,TR,GlobalSingletonAllocator
GlobalSingletonAllocator,GlobalSingletonAllocator(const GlobalBaseAllocator &),0,TR,GlobalSingletonAllocator
AutomaticSymbol,AutomaticSymbol(const class OMR::AutomaticSymbol &),1,OMR,AutomaticSymbol
AutomaticSymbol,AutomaticSymbol(),0,OMR,AutomaticSymbol
Instruction,Instruction(TR::CodeGenerator *,TR::class InstOpCode::Mnemonic,TR::Node *),1,OMR,Instruction
Instruction,Instruction(),0,OMR,Instruction
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Instruction
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Instruction
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Instruction
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Instruction
operator=,operator=(const class OMR::Instruction &),1,OMR,Instruction
operator=,operator=(class OMR::Instruction &&),0,OMR,Instruction
operator delete,operator delete(void *,size_t),1,OMR,CFG
operator delete,operator delete(void *,TR::Region &),0,OMR,CFG
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,CFG
operator new,operator new(size_t,TR::Region &),0,OMR,CFG
operator=,operator=(const class OMR::CFG &),1,OMR,CFG
operator=,operator=(class OMR::CFG &&),0,OMR,CFG
removeEdge,removeEdge(TR::CFGEdge *,_Bool),1,OMR,CFG
removeEdge,removeEdge(TR::CFGEdgeList &,int32_t,int32_t),0,OMR,CFG
ILOpCode,ILOpCode(class OMR::ILOpCode &&),1,OMR,ILOpCode
ILOpCode,ILOpCode(const class OMR::ILOpCode &),0,OMR,ILOpCode
getDirectCall,getDirectCall(TR::DataType),1,OMR,ILOpCode
getDirectCall,getDirectCall(TR::ILOpCodes),0,OMR,ILOpCode
fclose,fclose(TR::FILE *),1,OMR,IO
fflush,fflush(TR::FILE *),1,OMR,IO
fopen,fopen(char *,const char *,_Bool),1,OMR,IO
fprintf,fprintf(TR::FILE *,const char *),1,OMR,IO
fseek,fseek(TR::FILE *,intptr_t,int32_t),1,OMR,IO
ftell,ftell(TR::FILE *),1,OMR,IO
printf,printf(const char *),1,OMR,IO
vfprintf,vfprintf(TR::FILE *,const char *,va_list),1,OMR,IO
Node,Node(const class OMR::Node &),1,OMR,Node
Node,Node(),0,OMR,Node
addChildrenAndSymRef,addChildrenAndSymRef(uint16_t,TR::SymbolReference *),1,OMR,Node
addChildrenAndSymRef,addChildrenAndSymRef(uint16_t,TR::Node *),0,OMR,Node
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
createLoad,createLoad(TR::Node *,TR::SymbolReference *),1,OMR,Node
createLoad,createLoad(TR::SymbolReference *),0,OMR,Node
createWithSymRef,createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *,uintptr_t),1,OMR,Node
createWithSymRef,createWithSymRef(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::SymbolReference *),0,OMR,Node
iuconst,iuconst(uint32_t),1,OMR,Node
iuconst,iuconst(TR::Node *,uint32_t),0,OMR,Node
operator new,operator new(size_t,void *),1,OMR,Node
operator new,operator new(size_t,TR::NodePool &),0,OMR,Node
registerStackMap,registerStackMap(uint8_t *,TR::CodeGenerator *),1,OMR,SnippetGCMap
registerStackMap,registerStackMap(TR::Instruction *,TR::CodeGenerator *),0,OMR,SnippetGCMap
SymbolReference,SymbolReference(class OMR::SymbolReference &&),1,OMR,SymbolReference
SymbolReference,SymbolReference(const class OMR::SymbolReference &),0,OMR,SymbolReference
TR_HashTabInt,TR_HashTabInt(class TR_HashTabInt &&),1,TR,HashTabInt
TR_HashTabInt,TR_HashTabInt(const class TR_HashTabInt &),0,TR,HashTabInt
TR_AliasSetInterface<AliasSetInterface>,TR_AliasSetInterface<AliasSetInterface>(_Bool,_Bool),1,TR,AliasSetInterface
TR_NodeAliasSetInterface<>,TR_NodeAliasSetInterface<>(TR::Node *,_Bool,_Bool),1,TR,NodeAliasSetInterface
addAlias,addAlias(TR::SymbolReference *),1,TR,AliasSetInterface
addAliases,addAliases(TR::SparseBitVector &),1,TR,AliasSetInterface
contains,contains(TR::SymbolReference *,TR::Compilation *),1,TR,AliasSetInterface
contains,contains(uint32_t,TR::Compilation *),0,TR,AliasSetInterface
containsAny,containsAny(class TR_BitVector &,TR::Compilation *),1,TR,AliasSetInterface
getAliasesAndSubtractFrom,getAliasesAndSubtractFrom(class TR_BitVector &),1,TR,AliasSetInterface
getAliasesAndUnionWith,getAliasesAndUnionWith(TR::SparseBitVector &),1,TR,AliasSetInterface
getAliasesAndUnionWith,getAliasesAndUnionWith(class TR_BitVector &),0,TR,AliasSetInterface
getTRAliases,getTRAliases(),1,TR,AliasSetInterface
getTRAliases_impl,getTRAliases_impl(_Bool,_Bool),1,TR,NodeAliasSetInterface
hasAliases,hasAliases(),1,TR,AliasSetInterface
isZero,isZero(TR::Compilation *),1,TR,AliasSetInterface
removeAlias,removeAlias(TR::SymbolReference *),1,TR,AliasSetInterface
removeAliases,removeAliases(TR::SparseBitVector &),1,TR,AliasSetInterface
setAlias,setAlias(TR::SymbolReference *,_Bool),1,TR,AliasSetInterface
operator=,operator=(const class TR_Dominators &),1,TR,Dominators
operator=,operator=(class TR_Dominators &&),0,TR,Dominators
TR_SymAliasSetInterface<>,TR_SymAliasSetInterface<>(TR::SymbolReference *,_Bool,_Bool),1,TR,SymAliasSetInterface
addSymRef1KillsSymRef2Asymmetrically,addSymRef1KillsSymRef2Asymmetrically(TR::SymbolReference *,TR::SymbolReference *,_Bool),1,TR,SymAliasSetInterface
getTRAliases_impl,getTRAliases_impl(_Bool,_Bool),1,TR,SymAliasSetInterface
removeAllAliases,removeAllAliases(),1,TR,SymAliasSetInterface
removeSymRef1KillsSymRef2Asymmetrically,removeSymRef1KillsSymRef2Asymmetrically(TR::SymbolReference *,TR::SymbolReference *,_Bool),1,TR,SymAliasSetInterface
setAlias_impl,setAlias_impl(TR::SymbolReference *,_Bool,_Bool,_Bool),1,TR,SymAliasSetInterface
setAliases_impl,setAliases_impl(TR::SparseBitVector &,_Bool,_Bool,_Bool),1,TR,SymAliasSetInterface
setSymRef1KillsSymRef2Asymmetrically,setSymRef1KillsSymRef2Asymmetrically(TR::SymbolReference *,TR::SymbolReference *,_Bool,_Bool),1,TR,SymAliasSetInterface
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Symbol
operator delete[],operator delete[](void *,TR::Region &),1,OMR,Machine
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Machine
RealRegister,RealRegister(const class OMR::RealRegister &),1,OMR,RealRegister
RealRegister,RealRegister(class OMR::RealRegister &&),0,OMR,RealRegister
operator delete,operator delete(void *,TR::Region &),1,OMR,Register
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Register
operator delete[],operator delete[](void *,TR::Region &),1,OMR,Register
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Register
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Register
operator new,operator new(size_t,TR::Region &),0,OMR,Register
operator=,operator=(class OMR::Register &&),1,OMR,Register
operator=,operator=(const class OMR::Register &),0,OMR,Register
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
operator=,operator=(const class OMR::Options &),1,OMR,Options
operator=,operator=(class OMR::Options &&),0,OMR,Options
Recompilation,Recompilation(const class OMR::Recompilation &),1,OMR,Recompilation
Recompilation,Recompilation(TR::Compilation *),0,OMR,Recompilation
Recompilation,Recompilation(class OMR::Recompilation &&),0,OMR,Recompilation
beforeCodeGen,beforeCodeGen(),1,OMR,Recompilation
beforeOptimization,beforeOptimization(),1,OMR,Recompilation
comp,comp(),1,OMR,Recompilation
couldBeCompiledAgain,couldBeCompiledAgain(),1,OMR,Recompilation
endOfCompilation,endOfCompilation(),1,OMR,Recompilation
generatePrePrologue,generatePrePrologue(),1,OMR,Recompilation
generatePrologue,generatePrologue(TR::Instruction *),1,OMR,Recompilation
isProfilingCompilation,isProfilingCompilation(),1,OMR,Recompilation
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Recompilation
jitPersistentFree,jitPersistentFree(void *),1,OMR,Recompilation
operator delete,operator delete(void *,size_t),1,OMR,Recompilation
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Recompilation
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Recompilation
operator delete,operator delete(void *,TR::Region &),0,OMR,Recompilation
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Recompilation
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Recompilation
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Recompilation
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Recompilation
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Recompilation
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Recompilation
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Recompilation
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Recompilation
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Recompilation
operator new,operator new(size_t,TR::Region &),0,OMR,Recompilation
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Recompilation
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Recompilation
operator new[],operator new[](size_t,TR::Region &),1,OMR,Recompilation
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Recompilation
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Recompilation
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Recompilation
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Recompilation
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Recompilation
operator=,operator=(class OMR::Recompilation &&),1,OMR,Recompilation
operator=,operator=(const class OMR::Recompilation &),0,OMR,Recompilation
operator=,operator=(class TR::Recompilation &&),0,TR,Recompilation
operator=,operator=(const class TR::Recompilation &),0,TR,Recompilation
postCompilation,postCompilation(),1,OMR,Recompilation
self,self(),1,OMR,Recompilation
shouldBeCompiledAgain,shouldBeCompiledAgain(),1,OMR,Recompilation
shutdown,shutdown(),1,OMR,Recompilation
startOfCompilation,startOfCompilation(),1,OMR,Recompilation
trHeapMemory,trHeapMemory(),1,OMR,Recompilation
trMemory,trMemory(),1,OMR,Recompilation
~Recompilation,~Recompilation(),1,OMR,Recompilation
TR_MemoryBase,TR_MemoryBase(void *),1,TR,MemoryBase
TR_MemoryBase,TR_MemoryBase(const class TR_MemoryBase &),0,TR,MemoryBase
Cursor,Cursor(const ABitVector<Allocator> &),1,CS2,ABitVector::Cursor
Cursor,Cursor(const class CS2::ABitVector::Cursor &),0,CS2,ABitVector::Cursor
aconst,aconst(TR::Node *,uintptrj_t,uint8_t),1,OMR,Node
aconst,aconst(uintptrj_t),0,OMR,Node
bconst,bconst(TR::Node *,int8_t),1,OMR,Node
bconst,bconst(int8_t),0,OMR,Node
copy,copy(TR::Node *,int32_t),1,OMR,Node
copy,copy(TR::Node *),0,OMR,Node
createRelative32BitFenceNode,createRelative32BitFenceNode(void *),1,OMR,Node
createRelative32BitFenceNode,createRelative32BitFenceNode(TR::Node *,void *),0,OMR,Node
createStore,createStore(TR::SymbolReference *,TR::Node *,TR::ILOpCodes),1,OMR,Node
createStore,createStore(TR::SymbolReference *,TR::Node *),0,OMR,Node
lconst,lconst(TR::Node *,int64_t),1,OMR,Node
lconst,lconst(int64_t),0,OMR,Node
luconst,luconst(TR::Node *,uint64_t),1,OMR,Node
luconst,luconst(uint64_t),0,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *),1,OMR,Node
operator delete[],operator delete[](void *,TR::Region &),1,OMR,Optimizer
operator new,operator new(size_t,TR::Region &),1,OMR,Optimizer
TreeTop,TreeTop(const class OMR::TreeTop &),1,OMR,TreeTop
operator delete[],operator delete[](void *,TR::Region &),1,TR,Link
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Link
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,Link
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,Link
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Link
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Link
operator delete[],operator delete[](void *,TR::Region &),1,OMR,Recompilation
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Recompilation
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Snippet
operator delete,operator delete(void *,TR::Region &),0,OMR,Snippet
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Snippet
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Snippet
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Snippet
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Snippet
addEdge,addEdge(TR::CFGEdge *),1,OMR,CFG
addEdge,addEdge(TR::CFGNode *,TR::CFGNode *,enum TR_AllocationKind),0,OMR,CFG
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,CFG
operator delete[],operator delete[](void *,TR::Region &),0,OMR,CFG
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,CFG
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
getClassFromSignature,getClassFromSignature(const char *,int32_t,class TR_ResolvedMethod *,_Bool),1,TR,FrontEnd
getClassFromSignature,getClassFromSignature(const char *,int32_t,class TR_OpaqueMethodBlock *,_Bool),0,TR,FrontEnd
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Snippet
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,Link
operator new[],operator new[](size_t,TR::Region &),1,TR,Link
createEdge,createEdge(class TR::CFGNode *,class TR::CFGNode *,class TR_Memory *,enum TR_AllocationKind),1,TR,CFGEdge
createEdge,createEdge(class TR::CFGNode *,class TR::CFGNode *,TR::Region &),0,TR,CFGEdge
TR_BitContainerIterator,TR_BitContainerIterator(const class TR_BitContainerIterator &),1,TR,BitContainerIterator
TR_BitContainerIterator,TR_BitContainerIterator(class TR_BitContainerIterator &&),0,TR,BitContainerIterator
operator new,operator new(size_t,TR::Region &),1,OMR,Snippet
BlockChecklist,BlockChecklist(const class TR::BlockChecklist &),1,TR,BlockChecklist
BlockChecklist,BlockChecklist(TR::Compilation *),0,TR,BlockChecklist
BlockChecklist,BlockChecklist(class TR::BlockChecklist &&),0,TR,BlockChecklist
Checklist,Checklist(const class TR::Checklist &),1,TR,Checklist
Checklist,Checklist(TR::Compilation *),0,TR,Checklist
add,add(TR::Block *),1,TR,BlockChecklist
add,add(class TR::BlockChecklist &),0,TR,BlockChecklist
contains,contains(TR::Block *),1,TR,BlockChecklist
operator!=,operator!=(const class TR::BlockChecklist &),1,TR,BlockChecklist
operator=,operator=(const class TR::Checklist &),1,TR,Checklist
operator=,operator=(class TR::BlockChecklist &&),0,TR,BlockChecklist
operator==,operator==(const class TR::BlockChecklist &),1,TR,BlockChecklist
remove,remove(TR::Block *),1,TR,BlockChecklist
remove,remove(class TR::BlockChecklist &),0,TR,BlockChecklist
~BlockChecklist,~BlockChecklist(),1,TR,BlockChecklist
~Checklist,~Checklist(),1,TR,Checklist
NodeChecklist,NodeChecklist(const class TR::NodeChecklist &),1,TR,NodeChecklist
NodeChecklist,NodeChecklist(TR::Compilation *),0,TR,NodeChecklist
NodeChecklist,NodeChecklist(class TR::NodeChecklist &&),0,TR,NodeChecklist
add,add(TR::Node *),1,TR,NodeChecklist
add,add(class TR::NodeChecklist &),0,TR,NodeChecklist
contains,contains(TR::Node *),1,TR,NodeChecklist
operator!=,operator!=(const class TR::NodeChecklist &),1,TR,NodeChecklist
operator=,operator=(class TR::NodeChecklist &&),0,TR,NodeChecklist
operator==,operator==(const class TR::NodeChecklist &),1,TR,NodeChecklist
remove,remove(TR::Node *),1,TR,NodeChecklist
remove,remove(class TR::NodeChecklist &),0,TR,NodeChecklist
~NodeChecklist,~NodeChecklist(),1,TR,NodeChecklist
operator==,operator==(TR::DataTypes),1,OMR,DataType
operator==,operator==(const TR::DataType &),0,OMR,DataType
operator>,operator>(TR::DataTypes),1,OMR,DataType
operator>,operator>(const TR::DataType &),0,OMR,DataType
TR_HashTab,TR_HashTab(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),1,TR,HashTab
TR_HashTab,TR_HashTab(class TR_HashTab &&),0,TR,HashTab
operator delete[],operator delete[](void *,TR::Region &),1,OMR,Snippet
collectReferencedAutoSymRefsIn,collectReferencedAutoSymRefsIn(TR::Compilation *,class TR_BitVector *,vcount_t),1,OMR,Block
collectReferencedAutoSymRefsIn,collectReferencedAutoSymRefsIn(TR::Compilation *,TR::Node *,class TR_BitVector *,vcount_t),0,OMR,Block
Optimization,Optimization(TR::OptimizationManager *),1,OMR,Optimization
Optimization,Optimization(const class OMR::Optimization &),0,OMR,Optimization
Optimization,Optimization(class OMR::Optimization &&),0,OMR,Optimization
TR_HasRandomGenerator,TR_HasRandomGenerator(class TR_HasRandomGenerator &&),1,TR,HasRandomGenerator
TR_HasRandomGenerator,TR_HasRandomGenerator(const class TR_HasRandomGenerator &),0,TR,HasRandomGenerator
TR_HasRandomGenerator,TR_HasRandomGenerator(TR::Compilation *),0,TR,HasRandomGenerator
allocator,allocator(),1,OMR,Optimization
anchorAllChildren,anchorAllChildren(TR::Node *,TR::TreeTop *),1,OMR,Optimization
anchorChildren,anchorChildren(TR::Node *,TR::TreeTop *,uint32_t,_Bool,TR::Node *),1,OMR,Optimization
anchorNode,anchorNode(TR::Node *,TR::TreeTop *),1,OMR,Optimization
cg,cg(),1,OMR,Optimization
changeConditionalToUnconditional,changeConditionalToUnconditional(TR::Node *&,TR::Block *,int,TR::TreeTop *,const char *),1,OMR,Optimization
comp,comp(),1,OMR,Optimization
fe,fe(),1,OMR,Optimization
generateAnchor,generateAnchor(TR::Node *,TR::TreeTop *),1,OMR,Optimization
getDebug,getDebug(),1,OMR,Optimization
getLastRun,getLastRun(),1,OMR,Optimization
getSymRefTab,getSymRefTab(),1,OMR,Optimization
id,id(),1,OMR,Optimization
manager,manager(),1,OMR,Optimization
name,name(),1,OMR,Optimization
nodeIsOrderDependent,nodeIsOrderDependent(TR::Node *,uint32_t,_Bool),1,OMR,Optimization
operator=,operator=(class TR_HasRandomGenerator &&),1,TR,HasRandomGenerator
operator=,operator=(const class TR_HasRandomGenerator &),0,TR,HasRandomGenerator
operator=,operator=(const class OMR::Optimization &),0,OMR,Optimization
operator=,operator=(class OMR::Optimization &&),0,OMR,Optimization
operator=,operator=(class TR::Optimization &&),0,TR,Optimization
operator=,operator=(const class TR::Optimization &),0,TR,Optimization
optDetailString,optDetailString(),1,OMR,Optimization
optimizer,optimizer(),1,OMR,Optimization
perform,perform(),1,OMR,Optimization
performOnBlock,performOnBlock(TR::Block *),1,OMR,Optimization
postPerform,postPerform(),1,OMR,Optimization
postPerformOnBlocks,postPerformOnBlocks(),1,OMR,Optimization
prePerform,prePerform(),1,OMR,Optimization
prePerformOnBlocks,prePerformOnBlocks(),1,OMR,Optimization
prepareToReplaceNode,prepareToReplaceNode(TR::Node *,TR::ILOpCodes),1,OMR,Optimization
prepareToReplaceNode,prepareToReplaceNode(TR::Node *),0,OMR,Optimization
prepareToStopUsingNode,prepareToStopUsingNode(TR::Node *,TR::TreeTop *,_Bool),1,OMR,Optimization
randomBoolean,randomBoolean(int32_t),1,TR,HasRandomGenerator
randomGenerator,randomGenerator(),1,TR,HasRandomGenerator
randomInt,randomInt(int32_t,int32_t),1,TR,HasRandomGenerator
randomInt,randomInt(),0,TR,HasRandomGenerator
randomInt,randomInt(int32_t),0,TR,HasRandomGenerator
removeNode,removeNode(TR::Node *,TR::TreeTop *),1,OMR,Optimization
removeOrconvertIfToGoto,removeOrconvertIfToGoto(TR::Node *&,TR::Block *,int,TR::TreeTop *,TR::TreeTop *&,TR::TreeTop *&,const char *),1,OMR,Optimization
replaceNode,replaceNode(TR::Node *,TR::Node *,TR::TreeTop *,_Bool),1,OMR,Optimization
replaceNodeWithChild,replaceNodeWithChild(TR::Node *,TR::Node *,TR::TreeTop *,TR::Block *,_Bool),1,OMR,Optimization
requestDeadTreesCleanup,requestDeadTreesCleanup(_Bool,TR::Block *),1,OMR,Optimization
requestOpt,requestOpt(OMR::Optimizations,_Bool,TR::Block *),1,OMR,Optimization
self,self(),1,OMR,Optimization
setTrace,setTrace(_Bool),1,OMR,Optimization
shouldPerform,shouldPerform(),1,OMR,Optimization
trHeapMemory,trHeapMemory(),1,OMR,Optimization
trMemory,trMemory(),1,OMR,Optimization
trPersistentMemory,trPersistentMemory(),1,OMR,Optimization
trStackMemory,trStackMemory(),1,OMR,Optimization
trace,trace(),1,OMR,Optimization
~Optimization,~Optimization(),1,OMR,Optimization
~TR_HasRandomGenerator,~TR_HasRandomGenerator(),1,TR,HasRandomGenerator
OptimizationManager,OptimizationManager(const class OMR::OptimizationManager &),1,OMR,OptimizationManager
OptimizationManager,OptimizationManager(class OMR::OptimizationManager &&),0,OMR,OptimizationManager
OptimizationManager,OptimizationManager(TR::Optimizer *,OptimizationFactory,OMR::Optimizations,const struct OptimizationStrategy *),0,OMR,OptimizationManager
allocator,allocator(),1,OMR,OptimizationManager
cg,cg(),1,OMR,OptimizationManager
comp,comp(),1,OMR,OptimizationManager
enabled,enabled(),1,OMR,OptimizationManager
factory,factory(),1,OMR,OptimizationManager
fe,fe(),1,OMR,OptimizationManager
flags,flags(),1,OMR,OptimizationManager
getAlteredCode,getAlteredCode(),1,OMR,OptimizationManager
getCanAddSymbolReference,getCanAddSymbolReference(),1,OMR,OptimizationManager
getCannotOmitTrivialDefs,getCannotOmitTrivialDefs(),1,OMR,OptimizationManager
getCheckStructure,getCheckStructure(),1,OMR,OptimizationManager
getCheckTheCFG,getCheckTheCFG(),1,OMR,OptimizationManager
getDebug,getDebug(),1,OMR,OptimizationManager
getDoNotSetFrequencies,getDoNotSetFrequencies(),1,OMR,OptimizationManager
getDoesNotRequireAliasSets,getDoesNotRequireAliasSets(),1,OMR,OptimizationManager
getDoesNotRequireLoadsAsDefsInUseDefs,getDoesNotRequireLoadsAsDefsInUseDefs(),1,OMR,OptimizationManager
getDoesNotRequireTreeDumps,getDoesNotRequireTreeDumps(),1,OMR,OptimizationManager
getDumpStructure,getDumpStructure(),1,OMR,OptimizationManager
getLastRun,getLastRun(),1,OMR,OptimizationManager
getMaintainsUseDefInfo,getMaintainsUseDefInfo(),1,OMR,OptimizationManager
getOptData,getOptData(),1,OMR,OptimizationManager
getOptPolicy,getOptPolicy(),1,OMR,OptimizationManager
getOptUtil,getOptUtil(),1,OMR,OptimizationManager
getPerformOnlyOnEnabledBlocks,getPerformOnlyOnEnabledBlocks(),1,OMR,OptimizationManager
getPrefersGlobalsUseDefInfo,getPrefersGlobalsUseDefInfo(),1,OMR,OptimizationManager
getPrefersGlobalsValueNumbering,getPrefersGlobalsValueNumbering(),1,OMR,OptimizationManager
getRequestedBlocks,getRequestedBlocks(),1,OMR,OptimizationManager
getRequiresAccurateNodeCount,getRequiresAccurateNodeCount(),1,OMR,OptimizationManager
getRequiresGlobalsUseDefInfo,getRequiresGlobalsUseDefInfo(),1,OMR,OptimizationManager
getRequiresGlobalsValueNumbering,getRequiresGlobalsValueNumbering(),1,OMR,OptimizationManager
getRequiresLocalsUseDefInfo,getRequiresLocalsUseDefInfo(),1,OMR,OptimizationManager
getRequiresLocalsValueNumbering,getRequiresLocalsValueNumbering(),1,OMR,OptimizationManager
getRequiresStructure,getRequiresStructure(),1,OMR,OptimizationManager
getRequiresUseDefInfo,getRequiresUseDefInfo(),1,OMR,OptimizationManager
getRequiresValueNumbering,getRequiresValueNumbering(),1,OMR,OptimizationManager
getStronglyPrefersGlobalsValueNumbering,getStronglyPrefersGlobalsValueNumbering(),1,OMR,OptimizationManager
getSupportsIlGenOptLevel,getSupportsIlGenOptLevel(),1,OMR,OptimizationManager
getSymRefTab,getSymRefTab(),1,OMR,OptimizationManager
getVerifyBlocks,getVerifyBlocks(),1,OMR,OptimizationManager
getVerifyTrees,getVerifyTrees(),1,OMR,OptimizationManager
groupOfOpts,groupOfOpts(),1,OMR,OptimizationManager
id,id(),1,OMR,OptimizationManager
incNumPassesCompleted,incNumPassesCompleted(),1,OMR,OptimizationManager
name,name(),1,OMR,OptimizationManager
numPassesCompleted,numPassesCompleted(),1,OMR,OptimizationManager
operator delete,operator delete(void *,size_t),1,TR,Allocatable
operator new,operator new(size_t,Allocator),1,TR,Allocatable
operator=,operator=(const class OMR::OptimizationManager &),1,OMR,OptimizationManager
operator=,operator=(class OMR::OptimizationManager &&),0,OMR,OptimizationManager
operator=,operator=(class TR::OptimizationManager &&),0,TR,OptimizationManager
operator=,operator=(const class TR::OptimizationManager &),0,TR,OptimizationManager
optimizer,optimizer(),1,OMR,OptimizationManager
performChecks,performChecks(),1,OMR,OptimizationManager
requested,requested(TR::Block *),1,OMR,OptimizationManager
self,self(),1,OMR,OptimizationManager
setAlteredCode,setAlteredCode(_Bool),1,OMR,OptimizationManager
setCanAddSymbolReference,setCanAddSymbolReference(_Bool),1,OMR,OptimizationManager
setCannotOmitTrivialDefs,setCannotOmitTrivialDefs(_Bool),1,OMR,OptimizationManager
setCheckStructure,setCheckStructure(_Bool),1,OMR,OptimizationManager
setCheckTheCFG,setCheckTheCFG(_Bool),1,OMR,OptimizationManager
setDoNotSetFrequencies,setDoNotSetFrequencies(_Bool),1,OMR,OptimizationManager
setDoesNotRequireAliasSets,setDoesNotRequireAliasSets(_Bool),1,OMR,OptimizationManager
setDoesNotRequireLoadsAsDefsInUseDefs,setDoesNotRequireLoadsAsDefsInUseDefs(_Bool),1,OMR,OptimizationManager
setDumpStructure,setDumpStructure(_Bool),1,OMR,OptimizationManager
setEnabled,setEnabled(_Bool),1,OMR,OptimizationManager
setFlags,setFlags(flags32_t),1,OMR,OptimizationManager
setLastRun,setLastRun(_Bool),1,OMR,OptimizationManager
setMaintainsUseDefInfo,setMaintainsUseDefInfo(_Bool),1,OMR,OptimizationManager
setNumPassesCompleted,setNumPassesCompleted(int32_t),1,OMR,OptimizationManager
setOptData,setOptData(TR::OptimizationData *),1,OMR,OptimizationManager
setOptPolicy,setOptPolicy(TR::OptimizationPolicy *),1,OMR,OptimizationManager
setOptUtil,setOptUtil(TR::OptimizationUtil *),1,OMR,OptimizationManager
setPerformOnlyOnEnabledBlocks,setPerformOnlyOnEnabledBlocks(_Bool),1,OMR,OptimizationManager
setPrefersGlobalsUseDefInfo,setPrefersGlobalsUseDefInfo(_Bool),1,OMR,OptimizationManager
setPrefersGlobalsValueNumbering,setPrefersGlobalsValueNumbering(_Bool),1,OMR,OptimizationManager
setRequested,setRequested(_Bool,TR::Block *),1,OMR,OptimizationManager
setRequiresAccurateNodeCount,setRequiresAccurateNodeCount(_Bool),1,OMR,OptimizationManager
setRequiresGlobalsUseDefInfo,setRequiresGlobalsUseDefInfo(_Bool),1,OMR,OptimizationManager
setRequiresGlobalsValueNumbering,setRequiresGlobalsValueNumbering(_Bool),1,OMR,OptimizationManager
setRequiresLocalsUseDefInfo,setRequiresLocalsUseDefInfo(_Bool),1,OMR,OptimizationManager
setRequiresLocalsValueNumbering,setRequiresLocalsValueNumbering(_Bool),1,OMR,OptimizationManager
setRequiresStructure,setRequiresStructure(_Bool),1,OMR,OptimizationManager
setStronglyPrefersGlobalsValueNumbering,setStronglyPrefersGlobalsValueNumbering(_Bool),1,OMR,OptimizationManager
setSupportsIlGenOptLevel,setSupportsIlGenOptLevel(_Bool),1,OMR,OptimizationManager
setTrace,setTrace(_Bool),1,OMR,OptimizationManager
setVerifyBlocks,setVerifyBlocks(_Bool),1,OMR,OptimizationManager
setVerifyTrees,setVerifyTrees(_Bool),1,OMR,OptimizationManager
trHeapMemory,trHeapMemory(),1,OMR,OptimizationManager
trMemory,trMemory(),1,OMR,OptimizationManager
trPersistentMemory,trPersistentMemory(),1,OMR,OptimizationManager
trStackMemory,trStackMemory(),1,OMR,OptimizationManager
trace,trace(),1,OMR,OptimizationManager
~Allocatable<T, Allocator>,~Allocatable<T, Allocator>(),1,TR,Allocatable
~OptimizationManager,~OptimizationManager(),1,OMR,OptimizationManager
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Snippet
AllBlockIterator,AllBlockIterator(class TR::AllBlockIterator &&),1,TR,AllBlockIterator
AllBlockIterator,AllBlockIterator(const class TR::AllBlockIterator &),0,TR,AllBlockIterator
AllBlockIterator,AllBlockIterator(TR::CFG *,TR::Compilation *,const char *),0,TR,AllBlockIterator
BlockIterator,BlockIterator(TR::Compilation *,const char *),1,TR,BlockIterator
BlockIterator,BlockIterator(const class TR::BlockIterator &),0,TR,BlockIterator
BlockIterator,BlockIterator(class TR::BlockIterator &&),0,TR,BlockIterator
currentBlock,currentBlock(),1,TR,AllBlockIterator
isAt,isAt(TR::Block *),1,TR,AllBlockIterator
isLoggingEnabled,isLoggingEnabled(),1,TR,BlockIterator
logCurrentLocation,logCurrentLocation(),1,TR,AllBlockIterator
operator++,operator++(),1,TR,AllBlockIterator
operator=,operator=(class TR::BlockIterator &&),1,TR,BlockIterator
operator=,operator=(const class TR::BlockIterator &),0,TR,BlockIterator
stepForward,stepForward(),1,TR,AllBlockIterator
~BlockIterator,~BlockIterator(),1,TR,BlockIterator
BlockChecklist,BlockChecklist(TR::Compilation *),1,TR,BlockChecklist
BlockChecklist,BlockChecklist(const class TR::BlockChecklist &),0,TR,BlockChecklist
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,CFG
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,CFG
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,CFG
getName,getName(enum OMR::CodeGenPhase::PhaseValue),1,OMR,CodeGenPhase
getName,getName(),0,OMR,CodeGenPhase
create,create(TR::ILOpCodes,uint16_t,TR::Node *),1,OMR,Node
NodeChecklist,NodeChecklist(TR::Compilation *),1,TR,NodeChecklist
NodeChecklist,NodeChecklist(const class TR::NodeChecklist &),0,TR,NodeChecklist
add,add(class TR::NodeChecklist &),1,TR,NodeChecklist
add,add(TR::Node *),0,TR,NodeChecklist
operator=,operator=(const class TR::NodeChecklist &),0,TR,NodeChecklist
NodeIterator,NodeIterator(class TR::NodeIterator &&),1,TR,NodeIterator
NodeIterator,NodeIterator(const class TR::NodeIterator &),0,TR,NodeIterator
NodeIterator,NodeIterator(TR::TreeTop *,TR::Compilation *,const char *),0,TR,NodeIterator
NodeIterator,NodeIterator(TR::TreeTop *,TR::Compilation *),0,TR,NodeIterator
NodeOccurrenceIterator,NodeOccurrenceIterator(class TR::NodeOccurrenceIterator &&),1,TR,NodeOccurrenceIterator
NodeOccurrenceIterator,NodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *),0,TR,NodeOccurrenceIterator
NodeOccurrenceIterator,NodeOccurrenceIterator(const class TR::NodeOccurrenceIterator &),0,TR,NodeOccurrenceIterator
PostorderNodeOccurrenceIterator,PostorderNodeOccurrenceIterator(class TR::PostorderNodeOccurrenceIterator &&),1,TR,PostorderNodeOccurrenceIterator
PostorderNodeOccurrenceIterator,PostorderNodeOccurrenceIterator(const class TR::PostorderNodeOccurrenceIterator &),0,TR,PostorderNodeOccurrenceIterator
PostorderNodeOccurrenceIterator,PostorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *),0,TR,PostorderNodeOccurrenceIterator
TreeTopIteratorImpl,TreeTopIteratorImpl(const class TR::TreeTopIteratorImpl &),1,TR,TreeTopIteratorImpl
TreeTopIteratorImpl,TreeTopIteratorImpl(class TR::TreeTopIteratorImpl &&),0,TR,TreeTopIteratorImpl
TreeTopIteratorImpl,TreeTopIteratorImpl(TR::TreeTop *,TR::Compilation *,const char *),0,TR,TreeTopIteratorImpl
alreadyPushedChildren,alreadyPushedChildren(TR::Node *),1,TR,PostorderNodeOccurrenceIterator
comp,comp(),1,TR,TreeTopIteratorImpl
currentNode,currentNode(),1,TR,TreeTopIteratorImpl
currentTree,currentTree(),1,TR,TreeTopIteratorImpl
isAt,isAt(class TR::PreorderNodeIterator &),1,TR,TreeTopIteratorImpl
isAt,isAt(class TR::TreeTopIteratorImpl &),0,TR,TreeTopIteratorImpl
isAt,isAt(TR::TreeTop *),0,TR,TreeTopIteratorImpl
isAt,isAt(class TR::TreeTopIterator &),0,TR,NodeIterator
jumpTo,jumpTo(TR::TreeTop *),1,TR,TreeTopIteratorImpl
logCurrentLocation,logCurrentLocation(),1,TR,TreeTopIteratorImpl
operator!=,operator!=(TR::TreeTop *),1,TR,TreeTopIteratorImpl
operator++,operator++(),1,TR,TreeTopIteratorImpl
operator--,operator--(),1,TR,TreeTopIteratorImpl
operator=,operator=(class TR::TreeTopIteratorImpl &&),1,TR,TreeTopIteratorImpl
operator=,operator=(const class TR::TreeTopIteratorImpl &),0,TR,TreeTopIteratorImpl
operator=,operator=(class TR::NodeIterator &&),0,TR,NodeIterator
operator==,operator==(TR::TreeTop *),1,TR,TreeTopIteratorImpl
pushLeftmost,pushLeftmost(TR::Node *),1,TR,PostorderNodeOccurrenceIterator
stackDepth,stackDepth(),1,TR,NodeIterator
stepBackward,stepBackward(),1,TR,TreeTopIteratorImpl
stepForward,stepForward(),1,TR,TreeTopIteratorImpl
~NodeIterator,~NodeIterator(),1,TR,NodeIterator
~NodeOccurrenceIterator,~NodeOccurrenceIterator(),1,TR,NodeOccurrenceIterator
~TreeTopIteratorImpl,~TreeTopIteratorImpl(),1,TR,TreeTopIteratorImpl
OptimizationData,OptimizationData(TR::Compilation *),1,TR,OptimizationData
OptimizationData,OptimizationData(class TR::OptimizationData &&),0,TR,OptimizationData
allocator,allocator(),1,TR,OptimizationData
comp,comp(),1,TR,OptimizationData
operator=,operator=(class TR::OptimizationData &&),1,TR,OptimizationData
operator=,operator=(const class TR::OptimizationData &),0,TR,OptimizationData
~OptimizationData,~OptimizationData(),1,TR,OptimizationData
OptimizationPolicy,OptimizationPolicy(class TR::OptimizationPolicy &&),1,TR,OptimizationPolicy
OptimizationPolicy,OptimizationPolicy(TR::Compilation *),0,TR,OptimizationPolicy
allocator,allocator(),1,TR,OptimizationPolicy
comp,comp(),1,TR,OptimizationPolicy
fe,fe(),1,TR,OptimizationPolicy
operator=,operator=(const class TR::OptimizationPolicy &),1,TR,OptimizationPolicy
operator=,operator=(class TR::OptimizationPolicy &&),0,TR,OptimizationPolicy
trMemory,trMemory(),1,TR,OptimizationPolicy
~OptimizationPolicy,~OptimizationPolicy(),1,TR,OptimizationPolicy
OptimizationUtil,OptimizationUtil(class TR::OptimizationUtil &&),1,TR,OptimizationUtil
OptimizationUtil,OptimizationUtil(TR::Compilation *),0,TR,OptimizationUtil
allocator,allocator(),1,TR,OptimizationUtil
comp,comp(),1,TR,OptimizationUtil
fe,fe(),1,TR,OptimizationUtil
operator=,operator=(const class TR::OptimizationUtil &),1,TR,OptimizationUtil
operator=,operator=(class TR::OptimizationUtil &&),0,TR,OptimizationUtil
trMemory,trMemory(),1,TR,OptimizationUtil
~OptimizationUtil,~OptimizationUtil(),1,TR,OptimizationUtil
Optimizer,Optimizer(const class OMR::Optimizer &),1,OMR,Optimizer
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Optimizer
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,OMR,Optimizer
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Optimizer
PersistentInfo,PersistentInfo(class OMR::PersistentInfo &&),1,OMR,PersistentInfo
PostorderNodeIterator,PostorderNodeIterator(class TR::PostorderNodeIterator &&),1,TR,PostorderNodeIterator
PostorderNodeIterator,PostorderNodeIterator(const class TR::PostorderNodeIterator &),0,TR,PostorderNodeIterator
PostorderNodeIterator,PostorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *),0,TR,PostorderNodeIterator
alreadyBeenPushed,alreadyBeenPushed(TR::Node *),1,TR,PostorderNodeIterator
descend,descend(),1,TR,PostorderNodeIterator
push,push(TR::Node *),1,TR,PostorderNodeIterator
PreorderNodeIterator,PreorderNodeIterator(const class TR::PreorderNodeIterator &),1,TR,PreorderNodeIterator
PreorderNodeIterator,PreorderNodeIterator(class TR::PreorderNodeIterator &&),0,TR,PreorderNodeIterator
PreorderNodeIterator,PreorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *),0,TR,PreorderNodeIterator
alreadyBeenPushed,alreadyBeenPushed(TR::Node *),1,TR,PreorderNodeIterator
push,push(TR::Node *),1,TR,PreorderNodeIterator
PreorderNodeOccurrenceIterator,PreorderNodeOccurrenceIterator(class TR::PreorderNodeOccurrenceIterator &&),1,TR,PreorderNodeOccurrenceIterator
PreorderNodeOccurrenceIterator,PreorderNodeOccurrenceIterator(const class TR::PreorderNodeOccurrenceIterator &),0,TR,PreorderNodeOccurrenceIterator
PreorderNodeOccurrenceIterator,PreorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *),0,TR,PreorderNodeOccurrenceIterator
alreadyPushedChildren,alreadyPushedChildren(TR::Node *),1,TR,PreorderNodeOccurrenceIterator
push,push(TR::Node *),1,TR,PreorderNodeOccurrenceIterator
ReversePostorderSnapshotBlockIterator,ReversePostorderSnapshotBlockIterator(class TR::ReversePostorderSnapshotBlockIterator &&),1,TR,ReversePostorderSnapshotBlockIterator
ReversePostorderSnapshotBlockIterator,ReversePostorderSnapshotBlockIterator(const class TR::ReversePostorderSnapshotBlockIterator &),0,TR,ReversePostorderSnapshotBlockIterator
ReversePostorderSnapshotBlockIterator,ReversePostorderSnapshotBlockIterator(TR::Block *,TR::Compilation *,const char *),0,TR,ReversePostorderSnapshotBlockIterator
ReversePostorderSnapshotBlockIterator,ReversePostorderSnapshotBlockIterator(TR::CFG *,TR::Compilation *,const char *),0,TR,ReversePostorderSnapshotBlockIterator
currentBlock,currentBlock(),1,TR,ReversePostorderSnapshotBlockIterator
isAt,isAt(TR::Block *),1,TR,ReversePostorderSnapshotBlockIterator
isStepOperationFinished,isStepOperationFinished(),1,TR,ReversePostorderSnapshotBlockIterator
logCurrentLocation,logCurrentLocation(),1,TR,ReversePostorderSnapshotBlockIterator
operator++,operator++(),1,TR,ReversePostorderSnapshotBlockIterator
operator--,operator--(),1,TR,ReversePostorderSnapshotBlockIterator
operator=,operator=(class TR::ReversePostorderSnapshotBlockIterator &&),0,TR,ReversePostorderSnapshotBlockIterator
stepBackward,stepBackward(),1,TR,ReversePostorderSnapshotBlockIterator
stepForward,stepForward(),1,TR,ReversePostorderSnapshotBlockIterator
takeSnapshot,takeSnapshot(TR::Block *),1,TR,ReversePostorderSnapshotBlockIterator
visit,visit(TR::Block *,TR::BlockChecklist &),1,TR,ReversePostorderSnapshotBlockIterator
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,SymbolReference
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,SymbolReference
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,SymbolReference
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReference
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReferenceTable
operator delete[],operator delete[](void *,TR::Region &),0,OMR,SymbolReferenceTable
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,TR::Region &),1,OMR,SymbolReferenceTable
TreeTopIterator,TreeTopIterator(TR::TreeTop *,TR::Compilation *,const char *),1,TR,TreeTopIterator
getCodeCacheBase,getCodeCacheBase(),1,TR,FrontEnd
getCodeCacheBase,getCodeCacheBase(TR::CodeCache *),0,TR,FrontEnd
contains,contains(uint32_t,TR::Compilation *),1,TR,AliasSetInterface
contains,contains(TR::SymbolReference *,TR::Compilation *),0,TR,AliasSetInterface
~TR_CFGIterator,~TR_CFGIterator(),1,TR,CFGIterator
TR_SuccessorIterator,TR_SuccessorIterator(class TR_SuccessorIterator &&),1,TR,SuccessorIterator
TR_SuccessorIterator,TR_SuccessorIterator(const class TR_SuccessorIterator &),0,TR,SuccessorIterator
TR_SuccessorIterator,TR_SuccessorIterator(TR::CFGNode *),0,TR,SuccessorIterator
TR_IGBase,TR_IGBase(),1,TR,IGBase
TR_IGBase,TR_IGBase(const class TR_IGBase &),0,TR,IGBase
TR_IGBase,TR_IGBase(class TR_IGBase &&),0,TR,IGBase
TR_InterferenceGraph,TR_InterferenceGraph(const class TR_InterferenceGraph &),1,TR,InterferenceGraph
TR_InterferenceGraph,TR_InterferenceGraph(class TR_InterferenceGraph &&),0,TR,InterferenceGraph
TR_InterferenceGraph,TR_InterferenceGraph(TR::Compilation *,int32_t),0,TR,InterferenceGraph
TR_InterferenceGraph,TR_InterferenceGraph(TR::Compilation *),0,TR,InterferenceGraph
add,add(void *,_Bool),1,TR,InterferenceGraph
addIGNodeToEntityHash,addIGNodeToEntityHash(class TR_IGNode *),1,TR,InterferenceGraph
addInterferenceBetween,addInterferenceBetween(void *,void *),1,TR,InterferenceGraph
addInterferenceBetween,addInterferenceBetween(class TR_IGNode *,class TR_IGNode *),0,TR,InterferenceGraph
comp,comp(),1,TR,InterferenceGraph
doColouring,doColouring(IGNodeColour),1,TR,InterferenceGraph
dumpIG,dumpIG(char *),1,TR,InterferenceGraph
entityHashBucket,entityHashBucket(void *),1,TR,InterferenceGraph
findMaxDegree,findMaxDegree(),1,TR,InterferenceGraph
findMinimumChromaticNumber,findMinimumChromaticNumber(),1,TR,InterferenceGraph
getIGNodeForEntity,getIGNodeForEntity(void *),1,TR,InterferenceGraph
getInterferenceMatrix,getInterferenceMatrix(),1,TR,IGBase
getNodePairToBVIndex,getNodePairToBVIndex(IGNodeIndex,IGNodeIndex),1,TR,IGBase
getNodeStack,getNodeStack(),1,TR,InterferenceGraph
getNodeTable,getNodeTable(IGNodeIndex),1,TR,InterferenceGraph
getNumColours,getNumColours(),1,TR,IGBase
getNumNodes,getNumNodes(),1,TR,IGBase
getNumberOfColoursUsedToColour,getNumberOfColoursUsedToColour(),1,TR,IGBase
getOrderedNodePairToBVIndex,getOrderedNodePairToBVIndex(IGNodeIndex,IGNodeIndex),1,TR,IGBase
hasInterference,hasInterference(class TR_IGNode *,class TR_IGNode *),1,TR,InterferenceGraph
hasInterference,hasInterference(void *,void *),0,TR,InterferenceGraph
incNumNodes,incNumNodes(),1,TR,IGBase
isEmpty,isEmpty(),1,TR,IGBase
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,IGBase
jitPersistentFree,jitPersistentFree(void *),1,TR,IGBase
operator delete,operator delete(void *,TR::Region &),1,TR,IGBase
operator delete,operator delete(void *,size_t),0,TR,IGBase
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,IGBase
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,IGBase
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,IGBase
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,IGBase
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,IGBase
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,IGBase
operator delete[],operator delete[](void *,TR::Region &),0,TR,IGBase
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,IGBase
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,IGBase
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,IGBase
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,IGBase
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,IGBase
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,IGBase
operator new,operator new(size_t,TR::Region &),0,TR,IGBase
operator new[],operator new[](size_t,TR::Region &),1,TR,IGBase
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,IGBase
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,IGBase
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,IGBase
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,IGBase
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,IGBase
operator=,operator=(class TR_IGBase &&),1,TR,IGBase
operator=,operator=(const class TR_IGBase &),0,TR,IGBase
operator=,operator=(class TR_InterferenceGraph &&),0,TR,InterferenceGraph
operator=,operator=(const class TR_InterferenceGraph &),0,TR,InterferenceGraph
partitionNodesIntoDegreeSets,partitionNodesIntoDegreeSets(CS2::ABitVector<TR::Allocator> &,CS2::ABitVector<TR::Allocator> &,CS2::ABitVector<TR::Allocator> &),1,TR,InterferenceGraph
removeAllInterferences,removeAllInterferences(void *),1,TR,InterferenceGraph
removeInterferenceBetween,removeInterferenceBetween(class TR_IGNode *,class TR_IGNode *),1,TR,InterferenceGraph
removeInterferenceBetween,removeInterferenceBetween(void *,void *),0,TR,InterferenceGraph
select,select(),1,TR,InterferenceGraph
setInterferenceMatrix,setInterferenceMatrix(class TR_BitVector *),1,TR,IGBase
setNodeStack,setNodeStack(TR_Stack<class TR_IGNode *> *),1,TR,InterferenceGraph
setNumColours,setNumColours(IGNodeColour),1,TR,IGBase
setNumNodes,setNumNodes(IGNodeIndex),1,TR,IGBase
setNumberOfColoursUsedToColour,setNumberOfColoursUsedToColour(IGNodeColour),1,TR,IGBase
simplify,simplify(),1,TR,InterferenceGraph
trHeapMemory,trHeapMemory(),1,TR,InterferenceGraph
trMemory,trMemory(),1,TR,InterferenceGraph
trStackMemory,trStackMemory(),1,TR,InterferenceGraph
virtualRemoveEntityFromIG,virtualRemoveEntityFromIG(void *),1,TR,InterferenceGraph
virtualRemoveNodeFromIG,virtualRemoveNodeFromIG(class TR_IGNode *),1,TR,InterferenceGraph
~TR_IGBase,~TR_IGBase(),1,TR,IGBase
~TR_InterferenceGraph,~TR_InterferenceGraph(),1,TR,InterferenceGraph
CPU,CPU(class OMR::CPU &&),1,OMR,CPU
CPU,CPU(const class OMR::CPU &),0,OMR,CPU
operator=,operator=(class OMR::CPU &&),1,OMR,CPU
operator=,operator=(const class OMR::CPU &),0,OMR,CPU
isString,isString(TR::Compilation *,class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isString,isString(TR::Compilation *,uintptrj_t),0,OMR,ClassEnv
isStringClass,isStringClass(class TR_OpaqueClassBlock *),1,OMR,ClassEnv
isStringClass,isStringClass(uintptrj_t),0,OMR,ClassEnv
Monitor,Monitor(const class OMR::Monitor &),1,OMR,Monitor
Monitor,Monitor(),0,OMR,Monitor
Monitor,Monitor(const class TR::Monitor &),0,TR,Monitor
MonitorTable,MonitorTable(),1,OMR,MonitorTable
MonitorTable,MonitorTable(const class OMR::MonitorTable &),0,OMR,MonitorTable
MonitorTable,MonitorTable(class OMR::MonitorTable &&),0,OMR,MonitorTable
create,create(char *),1,OMR,MonitorTable
free,free(),1,OMR,MonitorTable
get,get(),1,OMR,MonitorTable
getMemoryAllocMonitor,getMemoryAllocMonitor(),1,OMR,MonitorTable
getScratchMemoryPoolMonitor,getScratchMemoryPoolMonitor(),1,OMR,MonitorTable
removeAndDestroy,removeAndDestroy(TR::Monitor *),1,OMR,MonitorTable
self,self(),1,OMR,MonitorTable
RandomExercizer,RandomExercizer(class RandomExercizer &&),1,,
RandomExercizer,RandomExercizer(const class RandomExercizer &),0,,
RandomExercizer,RandomExercizer(TR::Compilation *),0,,
comp,comp(),1,,
randomInt,randomInt(),1,TR,HasRandomGenerator
randomInt,randomInt(int32_t,int32_t),0,TR,HasRandomGenerator
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
createArraycopy,createArraycopy(TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
TR_AnythingPattern,TR_AnythingPattern(class TR_AnythingPattern &&),1,TR,AnythingPattern
TR_AnythingPattern,TR_AnythingPattern(const class TR_AnythingPattern &),0,TR,AnythingPattern
TR_AnythingPattern,TR_AnythingPattern(class TR_Pattern *),0,TR,AnythingPattern
TR_Pattern,TR_Pattern(class TR_Pattern *),1,TR,Pattern
TR_Pattern,TR_Pattern(const class TR_Pattern &),0,TR,Pattern
TR_Pattern,TR_Pattern(class TR_Pattern &&),0,TR,Pattern
getName,getName(),1,TR,Pattern
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,Pattern
jitPersistentFree,jitPersistentFree(void *),1,TR,Pattern
matches,matches(TR::Node *,TR::Node **,TR::Compilation *),1,TR,Pattern
matches,matches(TR::Node *,class TR_Unification &,TR::Compilation *),0,TR,Pattern
operator delete,operator delete(void *,TR::Region &),1,TR,Pattern
operator delete,operator delete(void *,size_t),0,TR,Pattern
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Pattern
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Pattern
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Pattern
operator delete[],operator delete[](void *,TR::Region &),1,TR,Pattern
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Pattern
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Pattern
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Pattern
operator new,operator new(size_t,class TR_PersistentMemory *),1,TR,Pattern
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Pattern
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,Pattern
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Pattern
operator new,operator new(size_t,TR::Region &),0,TR,Pattern
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,Pattern
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Pattern
operator new[],operator new[](size_t,TR::Region &),1,TR,Pattern
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,Pattern
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,Pattern
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Pattern
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Pattern
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Pattern
operator=,operator=(class TR_Pattern &&),1,TR,Pattern
operator=,operator=(const class TR_Pattern &),0,TR,Pattern
operator=,operator=(class TR_AnythingPattern &&),0,TR,AnythingPattern
operator=,operator=(const class TR_AnythingPattern &),0,TR,AnythingPattern
thisMatches,thisMatches(TR::Node *,class TR_Unification &,TR::Compilation *),1,TR,Pattern
tracePattern,tracePattern(TR::Node *),1,TR,Pattern
~TR_AnythingPattern,~TR_AnythingPattern(),1,TR,AnythingPattern
~TR_Pattern,~TR_Pattern(),1,TR,Pattern
TR_ChildPattern,TR_ChildPattern(class TR_ChildPattern &&),1,TR,ChildPattern
TR_ChildPattern,TR_ChildPattern(const class TR_ChildPattern &),0,TR,ChildPattern
TR_ChildPattern,TR_ChildPattern(int32_t,class TR_Pattern *,class TR_Pattern *),0,TR,ChildPattern
operator=,operator=(class TR_ChildPattern &&),0,TR,ChildPattern
operator=,operator=(const class TR_ChildPattern &),0,TR,ChildPattern
~TR_ChildPattern,~TR_ChildPattern(),1,TR,ChildPattern
TR_ChildrenPattern,TR_ChildrenPattern(class TR_ChildrenPattern &&),1,TR,ChildrenPattern
TR_ChildrenPattern,TR_ChildrenPattern(const class TR_ChildrenPattern &),0,TR,ChildrenPattern
TR_ChildrenPattern,TR_ChildrenPattern(class TR_Pattern *,class TR_Pattern *,class TR_Pattern *),0,TR,ChildrenPattern
TR_CommutativePattern,TR_CommutativePattern(const class TR_CommutativePattern &),1,TR,CommutativePattern
TR_CommutativePattern,TR_CommutativePattern(class TR_CommutativePattern &&),0,TR,CommutativePattern
TR_CommutativePattern,TR_CommutativePattern(class TR_Pattern *,class TR_Pattern *,class TR_Pattern *),0,TR,CommutativePattern
operator=,operator=(class TR_ChildrenPattern &&),0,TR,ChildrenPattern
operator=,operator=(const class TR_ChildrenPattern &),0,TR,ChildrenPattern
operator=,operator=(class TR_CommutativePattern &&),0,TR,CommutativePattern
operator=,operator=(const class TR_CommutativePattern &),0,TR,CommutativePattern
~TR_ChildrenPattern,~TR_ChildrenPattern(),1,TR,ChildrenPattern
~TR_CommutativePattern,~TR_CommutativePattern(),1,TR,CommutativePattern
TR_ChoicePattern,TR_ChoicePattern(const class TR_ChoicePattern &),1,TR,ChoicePattern
TR_ChoicePattern,TR_ChoicePattern(class TR_Pattern *,class TR_Pattern *,class TR_Pattern *),0,TR,ChoicePattern
TR_ChoicePattern,TR_ChoicePattern(class TR_ChoicePattern &&),0,TR,ChoicePattern
operator=,operator=(class TR_ChoicePattern &&),0,TR,ChoicePattern
operator=,operator=(const class TR_ChoicePattern &),0,TR,ChoicePattern
~TR_ChoicePattern,~TR_ChoicePattern(),1,TR,ChoicePattern
TR_IConstPattern,TR_IConstPattern(class TR_IConstPattern &&),1,TR,IConstPattern
TR_IConstPattern,TR_IConstPattern(const class TR_IConstPattern &),0,TR,IConstPattern
TR_IConstPattern,TR_IConstPattern(int32_t,class TR_Pattern *),0,TR,IConstPattern
TR_OpCodePattern,TR_OpCodePattern(const class TR_OpCodePattern &),1,TR,OpCodePattern
TR_OpCodePattern,TR_OpCodePattern(class TR_OpCodePattern &&),0,TR,OpCodePattern
TR_OpCodePattern,TR_OpCodePattern(TR::ILOpCodes,class TR_Pattern *),0,TR,OpCodePattern
operator=,operator=(class TR_OpCodePattern &&),0,TR,OpCodePattern
operator=,operator=(const class TR_OpCodePattern &),0,TR,OpCodePattern
operator=,operator=(class TR_IConstPattern &&),0,TR,IConstPattern
operator=,operator=(const class TR_IConstPattern &),0,TR,IConstPattern
~TR_IConstPattern,~TR_IConstPattern(),1,TR,IConstPattern
~TR_OpCodePattern,~TR_OpCodePattern(),1,TR,OpCodePattern
TR_LConstPattern,TR_LConstPattern(class TR_LConstPattern &&),1,TR,LConstPattern
TR_LConstPattern,TR_LConstPattern(const class TR_LConstPattern &),0,TR,LConstPattern
TR_LConstPattern,TR_LConstPattern(int64_t,class TR_Pattern *),0,TR,LConstPattern
operator=,operator=(class TR_LConstPattern &&),0,TR,LConstPattern
operator=,operator=(const class TR_LConstPattern &),0,TR,LConstPattern
~TR_LConstPattern,~TR_LConstPattern(),1,TR,LConstPattern
TR_NoRegisterPattern,TR_NoRegisterPattern(class TR_NoRegisterPattern &&),1,TR,NoRegisterPattern
TR_NoRegisterPattern,TR_NoRegisterPattern(const class TR_NoRegisterPattern &),0,TR,NoRegisterPattern
TR_NoRegisterPattern,TR_NoRegisterPattern(class TR_Pattern *),0,TR,NoRegisterPattern
operator=,operator=(class TR_NoRegisterPattern &&),0,TR,NoRegisterPattern
operator=,operator=(const class TR_NoRegisterPattern &),0,TR,NoRegisterPattern
~TR_NoRegisterPattern,~TR_NoRegisterPattern(),1,TR,NoRegisterPattern
TR_UnifyPattern,TR_UnifyPattern(const class TR_UnifyPattern &),1,TR,UnifyPattern
TR_UnifyPattern,TR_UnifyPattern(class TR_UnifyPattern &&),0,TR,UnifyPattern
TR_UnifyPattern,TR_UnifyPattern(class TR_Unification::TR_Index,class TR_Pattern *),0,TR,UnifyPattern
operator=,operator=(class TR_UnifyPattern &&),0,TR,UnifyPattern
operator=,operator=(const class TR_UnifyPattern &),0,TR,UnifyPattern
~TR_UnifyPattern,~TR_UnifyPattern(),1,TR,UnifyPattern
CFGNode,CFGNode(const class TR::CFGNode &),0,TR,CFGNode
addExceptionPredecessor,addExceptionPredecessor(class TR::CFGEdge *),1,TR,CFGNode
addExceptionPredecessor,addExceptionPredecessor(class TR::CFGEdge *,enum TR_AllocationKind),0,TR,CFGNode
addExceptionSuccessor,addExceptionSuccessor(class TR::CFGEdge *),1,TR,CFGNode
addExceptionSuccessor,addExceptionSuccessor(class TR::CFGEdge *,enum TR_AllocationKind),0,TR,CFGNode
addSuccessor,addSuccessor(class TR::CFGEdge *),1,TR,CFGNode
addSuccessor,addSuccessor(class TR::CFGEdge *,enum TR_AllocationKind),0,TR,CFGNode
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,TR,CFGNode
operator delete,operator delete(void *,TR::Region &),0,TR,CFGNode
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,CFGNode
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,CFGNode
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,CFGNode
operator new,operator new(size_t,TR::Region &),0,TR,CFGNode
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,CFGNode
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,CFGNode
LabelSymbol,LabelSymbol(const class OMR::LabelSymbol &),1,OMR,LabelSymbol
LabelSymbol,LabelSymbol(class OMR::LabelSymbol &&),0,OMR,LabelSymbol
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Snippet
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,OMR,Snippet
CFGEdge,CFGEdge(class TR::CFGEdge &&),1,TR,CFGEdge
CFGEdge,CFGEdge(class TR::CFGNode *,class TR::CFGNode *),0,TR,CFGEdge
CFGEdge,CFGEdge(const class TR::CFGEdge &),0,TR,CFGEdge
DataType,DataType(const class OMR::DataType &),1,OMR,DataType
operator<,operator<(TR::DataTypes),1,OMR,DataType
operator<,operator<(const TR::DataType &),0,OMR,DataType
operator<=,operator<=(const TR::DataType &),1,OMR,DataType
operator<=,operator<=(TR::DataTypes),0,OMR,DataType
operator=,operator=(class OMR::DataType &&),1,OMR,DataType
operator=,operator=(const class OMR::DataType &),0,OMR,DataType
getDataType,getDataType(),1,OMR,ILOpCode
getDataType,getDataType(TR::ILOpCodes),0,OMR,ILOpCode
VPArrayInfo,VPArrayInfo(int32_t,int32_t,int32_t),1,TR,VPArrayInfo
VPConstraint,VPConstraint(class TR::VPConstraint &&),1,TR,VPConstraint
VPConstraint,VPConstraint(const class TR::VPConstraint &),0,TR,VPConstraint
VPConstraint,VPConstraint(int32_t),0,TR,VPConstraint
add,add(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *),1,TR,VPConstraint
asArrayInfo,asArrayInfo(),1,TR,VPConstraint
asBCDSign,asBCDSign(),1,TR,VPConstraint
asBCDValue,asBCDValue(),1,TR,VPConstraint
asClass,asClass(),1,TR,VPConstraint
asClassPresence,asClassPresence(),1,TR,VPConstraint
asClassType,asClassType(),1,TR,VPConstraint
asConstString,asConstString(),1,TR,VPConstraint
asEqual,asEqual(),1,TR,VPConstraint
asFixedClass,asFixedClass(),1,TR,VPConstraint
asGreaterThanOrEqual,asGreaterThanOrEqual(),1,TR,VPConstraint
asIntConst,asIntConst(),1,TR,VPConstraint
asIntConstraint,asIntConstraint(),1,TR,VPConstraint
asIntRange,asIntRange(),1,TR,VPConstraint
asKnownObject,asKnownObject(),1,TR,VPConstraint
asLessThanOrEqual,asLessThanOrEqual(),1,TR,VPConstraint
asLongConst,asLongConst(),1,TR,VPConstraint
asLongConstraint,asLongConstraint(),1,TR,VPConstraint
asLongRange,asLongRange(),1,TR,VPConstraint
asMergedConstraints,asMergedConstraints(),1,TR,VPConstraint
asMergedIntConstraints,asMergedIntConstraints(),1,TR,VPConstraint
asMergedLongConstraints,asMergedLongConstraints(),1,TR,VPConstraint
asMergedShortConstraints,asMergedShortConstraints(),1,TR,VPConstraint
asNonNullObject,asNonNullObject(),1,TR,VPConstraint
asNotEqual,asNotEqual(),1,TR,VPConstraint
asNullObject,asNullObject(),1,TR,VPConstraint
asObjectLocation,asObjectLocation(),1,TR,VPConstraint
asPreexistentObject,asPreexistentObject(),1,TR,VPConstraint
asRelation,asRelation(),1,TR,VPConstraint
asResolvedClass,asResolvedClass(),1,TR,VPConstraint
asShortConst,asShortConst(),1,TR,VPConstraint
asShortConstraint,asShortConstraint(),1,TR,VPConstraint
asShortRange,asShortRange(),1,TR,VPConstraint
asUnreachablePath,asUnreachablePath(),1,TR,VPConstraint
asUnresolvedClass,asUnresolvedClass(),1,TR,VPConstraint
asVPSync,asVPSync(),1,TR,VPConstraint
canOverflow,canOverflow(),1,TR,VPConstraint
create,create(OMR::ValuePropagation *,const char *,int32_t,class TR_ResolvedMethod *,_Bool),1,TR,VPConstraint
create,create(OMR::ValuePropagation *,int32_t,int32_t,int32_t),0,TR,VPArrayInfo
create,create(OMR::ValuePropagation *,char *),0,TR,VPArrayInfo
elementSize,elementSize(),1,TR,VPArrayInfo
getArrayInfo,getArrayInfo(),1,TR,VPConstraint
getClass,getClass(),1,TR,VPConstraint
getClassPresence,getClassPresence(),1,TR,VPConstraint
getClassSignature,getClassSignature(int32_t &),1,TR,VPConstraint
getClassType,getClassType(),1,TR,VPConstraint
getConstString,getConstString(),1,TR,VPConstraint
getHighInt,getHighInt(),1,TR,VPConstraint
getHighLong,getHighLong(),1,TR,VPConstraint
getHighShort,getHighShort(),1,TR,VPConstraint
getKnownObject,getKnownObject(),1,TR,VPConstraint
getLowInt,getLowInt(),1,TR,VPConstraint
getLowLong,getLowLong(),1,TR,VPConstraint
getLowShort,getLowShort(),1,TR,VPConstraint
getObjectLocation,getObjectLocation(),1,TR,VPConstraint
getPrecision,getPrecision(),1,TR,VPConstraint
getPreexistence,getPreexistence(),1,TR,VPConstraint
getUnsignedHighInt,getUnsignedHighInt(),1,TR,VPConstraint
getUnsignedHighLong,getUnsignedHighLong(),1,TR,VPConstraint
getUnsignedHighShort,getUnsignedHighShort(),1,TR,VPConstraint
getUnsignedLowInt,getUnsignedLowInt(),1,TR,VPConstraint
getUnsignedLowLong,getUnsignedLowLong(),1,TR,VPConstraint
getUnsignedLowShort,getUnsignedLowShort(),1,TR,VPConstraint
hasArtificialIncrement,hasArtificialIncrement(),1,TR,VPConstraint
highBound,highBound(),1,TR,VPArrayInfo
intersect,intersect(TR::VPConstraint *,OMR::ValuePropagation *),1,TR,VPConstraint
intersect1,intersect1(TR::VPConstraint *,OMR::ValuePropagation *),1,TR,VPConstraint
isClassObject,isClassObject(),1,TR,VPConstraint
isConstString,isConstString(),1,TR,VPConstraint
isFixedClass,isFixedClass(),1,TR,VPConstraint
isHeapObject,isHeapObject(),1,TR,VPConstraint
isJ9ClassObject,isJ9ClassObject(),1,TR,VPConstraint
isJavaLangClassObject,isJavaLangClassObject(),1,TR,VPConstraint
isNonNullObject,isNonNullObject(),1,TR,VPConstraint
isNullObject,isNullObject(),1,TR,VPConstraint
isPreexistentObject,isPreexistentObject(),1,TR,VPConstraint
isSpecialClass,isSpecialClass(uintptrj_t),1,TR,VPConstraint
isStackObject,isStackObject(),1,TR,VPConstraint
isUnsigned,isUnsigned(),1,TR,VPConstraint
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,VPConstraint
jitPersistentFree,jitPersistentFree(void *),1,TR,VPConstraint
lowBound,lowBound(),1,TR,VPArrayInfo
merge,merge(TR::VPConstraint *,OMR::ValuePropagation *),1,TR,VPConstraint
merge1,merge1(TR::VPConstraint *,OMR::ValuePropagation *),1,TR,VPConstraint
mustBeEqual,mustBeEqual(),1,TR,VPConstraint
mustBeEqual,mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *),0,TR,VPConstraint
mustBeGreaterThan,mustBeGreaterThan(),1,TR,VPConstraint
mustBeGreaterThanOrEqual,mustBeGreaterThanOrEqual(),1,TR,VPConstraint
mustBeLessThan,mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *),1,TR,VPConstraint
mustBeLessThan,mustBeLessThan(),0,TR,VPConstraint
mustBeLessThanOrEqual,mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *),1,TR,VPConstraint
mustBeLessThanOrEqual,mustBeLessThanOrEqual(),0,TR,VPConstraint
mustBeNotEqual,mustBeNotEqual(),1,TR,VPConstraint
mustBeNotEqual,mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *),0,TR,VPConstraint
name,name(),1,TR,VPConstraint
operator delete,operator delete(void *,size_t),1,TR,VPConstraint
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,VPConstraint
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,VPConstraint
operator delete,operator delete(void *,TR::Region &),0,TR,VPConstraint
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,VPConstraint
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,VPConstraint
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,VPConstraint
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,VPConstraint
operator delete[],operator delete[](void *,TR::Region &),0,TR,VPConstraint
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,TR,VPConstraint
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,VPConstraint
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,VPConstraint
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,VPConstraint
operator new,operator new(size_t,TR::Region &),0,TR,VPConstraint
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,VPConstraint
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,VPConstraint
operator new[],operator new[](size_t,TR::Region &),1,TR,VPConstraint
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,VPConstraint
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,VPConstraint
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,VPConstraint
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,VPConstraint
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,VPConstraint
operator=,operator=(class TR::VPConstraint &&),1,TR,VPConstraint
operator=,operator=(const class TR::VPConstraint &),0,TR,VPConstraint
operator=,operator=(const class TR::VPArrayInfo &),0,TR,VPArrayInfo
operator=,operator=(class TR::VPArrayInfo &&),0,TR,VPArrayInfo
print,print(TR::Compilation *,TR::FILE *,int32_t),1,TR,VPConstraint
print,print(TR::Compilation *,TR::FILE *),0,TR,VPConstraint
print,print(OMR::ValuePropagation *),0,TR,VPConstraint
priority,priority(),1,TR,VPConstraint
setCanOverflow,setCanOverflow(enum TR_YesNoMaybe),1,TR,VPConstraint
setHasArtificialIncrement,setHasArtificialIncrement(),1,TR,VPConstraint
setIsUnsigned,setIsUnsigned(_Bool),1,TR,VPConstraint
subtract,subtract(TR::VPConstraint *,TR::DataType,OMR::ValuePropagation *),1,TR,VPConstraint
~VPArrayInfo,~VPArrayInfo(),1,TR,VPArrayInfo
~VPConstraint,~VPConstraint(),1,TR,VPConstraint
VPClass,VPClass(TR::VPClassType *,TR::VPClassPresence *,TR::VPPreexistentObject *,TR::VPArrayInfo *,TR::VPObjectLocation *),1,TR,VPClass
create,create(OMR::ValuePropagation *,TR::VPClassType *,TR::VPClassPresence *,TR::VPPreexistentObject *,TR::VPArrayInfo *,TR::VPObjectLocation *),0,TR,VPClass
operator=,operator=(class TR::VPClass &&),0,TR,VPClass
operator=,operator=(const class TR::VPClass &),0,TR,VPClass
typeIntersect,typeIntersect(TR::VPClassPresence *&,TR::VPClassType *&,TR::VPConstraint *,OMR::ValuePropagation *),1,TR,VPClass
~VPClass,~VPClass(),1,TR,VPClass
VPClassPresence,VPClassPresence(),1,TR,VPClassPresence
create,create(OMR::ValuePropagation *),0,TR,VPNonNullObject
operator=,operator=(class TR::VPClassPresence &&),0,TR,VPClassPresence
operator=,operator=(const class TR::VPClassPresence &),0,TR,VPClassPresence
operator=,operator=(class TR::VPNonNullObject &&),0,TR,VPNonNullObject
operator=,operator=(const class TR::VPNonNullObject &),0,TR,VPNonNullObject
~VPClassPresence,~VPClassPresence(),1,TR,VPClassPresence
~VPNonNullObject,~VPNonNullObject(),1,TR,VPNonNullObject
VPClassType,VPClassType(class TR::VPClassType &&),1,TR,VPClassType
VPClassType,VPClassType(const class TR::VPClassType &),0,TR,VPClassType
VPClassType,VPClassType(int32_t),0,TR,VPClassType
VPConstString,VPConstString(class TR_OpaqueClassBlock *,TR::Compilation *,TR::SymbolReference *),1,TR,VPConstString
VPFixedClass,VPFixedClass(const class TR::VPFixedClass &),1,TR,VPFixedClass
VPFixedClass,VPFixedClass(class TR::VPFixedClass &&),0,TR,VPFixedClass
VPFixedClass,VPFixedClass(class TR_OpaqueClassBlock *,TR::Compilation *,int32_t),0,TR,VPFixedClass
VPResolvedClass,VPResolvedClass(class TR_OpaqueClassBlock *,TR::Compilation *),1,TR,VPResolvedClass
VPResolvedClass,VPResolvedClass(const class TR::VPResolvedClass &),0,TR,VPResolvedClass
VPResolvedClass,VPResolvedClass(class TR_OpaqueClassBlock *,TR::Compilation *,int32_t),0,TR,VPResolvedClass
VPResolvedClass,VPResolvedClass(class TR::VPResolvedClass &&),0,TR,VPResolvedClass
charAt,charAt(int32_t,TR::Compilation *),1,TR,VPConstString
classTypesCompatible,classTypesCompatible(TR::VPClassType *,OMR::ValuePropagation *),1,TR,VPClassType
create,create(OMR::ValuePropagation *,TR::SymbolReference *,_Bool,_Bool),0,TR,VPClassType
create,create(OMR::ValuePropagation *,const char *,int32_t,class TR_ResolvedMethod *,_Bool,class TR_OpaqueClassBlock *),0,TR,VPClassType
create,create(OMR::ValuePropagation *,class TR_OpaqueClassBlock *),0,TR,VPResolvedClass
create,create(OMR::ValuePropagation *,TR::SymbolReference *),0,TR,VPConstString
getArrayClass,getArrayClass(OMR::ValuePropagation *),1,TR,VPClassType
getFieldByName,getFieldByName(TR::SymbolReference *,void *&,TR::Compilation *),1,TR,VPConstString
getPrimitiveArrayDataType,getPrimitiveArrayDataType(),1,TR,VPClassType
getSymRef,getSymRef(),1,TR,VPConstString
hasMoreThanFixedClassInfo,hasMoreThanFixedClassInfo(),1,TR,VPFixedClass
isArray,isArray(),1,TR,VPClassType
isCloneableOrSerializable,isCloneableOrSerializable(),1,TR,VPClassType
isJavaLangObject,isJavaLangObject(OMR::ValuePropagation *),1,TR,VPClassType
isPrimitiveArray,isPrimitiveArray(TR::Compilation *),1,TR,VPClassType
isReferenceArray,isReferenceArray(TR::Compilation *),1,TR,VPClassType
operator=,operator=(const class TR::VPClassType &),0,TR,VPClassType
operator=,operator=(class TR::VPClassType &&),0,TR,VPClassType
operator=,operator=(const class TR::VPResolvedClass &),0,TR,VPResolvedClass
operator=,operator=(class TR::VPResolvedClass &&),0,TR,VPResolvedClass
operator=,operator=(class TR::VPFixedClass &&),0,TR,VPFixedClass
operator=,operator=(const class TR::VPFixedClass &),0,TR,VPFixedClass
operator=,operator=(class TR::VPConstString &&),0,TR,VPConstString
operator=,operator=(const class TR::VPConstString &),0,TR,VPConstString
~VPClassType,~VPClassType(),1,TR,VPClassType
~VPConstString,~VPConstString(),1,TR,VPConstString
~VPFixedClass,~VPFixedClass(),1,TR,VPFixedClass
~VPResolvedClass,~VPResolvedClass(),1,TR,VPResolvedClass
VPEqual,VPEqual(int32_t),1,TR,VPEqual
VPRelation,VPRelation(class TR::VPRelation &&),1,TR,VPRelation
VPRelation,VPRelation(int32_t,int32_t),0,TR,VPRelation
VPRelation,VPRelation(const class TR::VPRelation &),0,TR,VPRelation
create,create(OMR::ValuePropagation *,int32_t),0,TR,VPEqual
getComplement,getComplement(OMR::ValuePropagation *),1,TR,VPRelation
increment,increment(),1,TR,VPRelation
operator=,operator=(class TR::VPRelation &&),0,TR,VPRelation
operator=,operator=(const class TR::VPRelation &),0,TR,VPRelation
operator=,operator=(class TR::VPEqual &&),0,TR,VPEqual
operator=,operator=(const class TR::VPEqual &),0,TR,VPEqual
propagateAbsoluteConstraint,propagateAbsoluteConstraint(TR::VPConstraint *,int32_t,OMR::ValuePropagation *),1,TR,VPRelation
propagateRelativeConstraint,propagateRelativeConstraint(TR::VPRelation *,int32_t,int32_t,OMR::ValuePropagation *),1,TR,VPRelation
~VPEqual,~VPEqual(),1,TR,VPEqual
~VPRelation,~VPRelation(),1,TR,VPRelation
VPGreaterThanOrEqual,VPGreaterThanOrEqual(int32_t),1,TR,VPGreaterThanOrEqual
create,create(OMR::ValuePropagation *,int32_t),0,TR,VPGreaterThanOrEqual
operator=,operator=(class TR::VPGreaterThanOrEqual &&),0,TR,VPGreaterThanOrEqual
operator=,operator=(const class TR::VPGreaterThanOrEqual &),0,TR,VPGreaterThanOrEqual
~VPGreaterThanOrEqual,~VPGreaterThanOrEqual(),1,TR,VPGreaterThanOrEqual
VPIntConst,VPIntConst(int32_t),1,TR,VPIntConst
VPIntConstraint,VPIntConstraint(class TR::VPIntConstraint &&),1,TR,VPIntConstraint
VPIntConstraint,VPIntConstraint(int32_t),0,TR,VPIntConstraint
VPIntConstraint,VPIntConstraint(const class TR::VPIntConstraint &),0,TR,VPIntConstraint
create,create(OMR::ValuePropagation *,int32_t),0,TR,VPIntConst
createExclusion,createExclusion(OMR::ValuePropagation *,int32_t),1,TR,VPIntConst
getHigh,getHigh(),1,TR,VPIntConstraint
getInt,getInt(),1,TR,VPIntConstraint
getLow,getLow(),1,TR,VPIntConstraint
getRange,getRange(int32_t,int32_t,_Bool,_Bool,OMR::ValuePropagation *),1,TR,VPIntConstraint
operator=,operator=(class TR::VPIntConstraint &&),0,TR,VPIntConstraint
operator=,operator=(const class TR::VPIntConstraint &),0,TR,VPIntConstraint
operator=,operator=(class TR::VPIntConst &&),0,TR,VPIntConst
operator=,operator=(const class TR::VPIntConst &),0,TR,VPIntConst
~VPIntConst,~VPIntConst(),1,TR,VPIntConst
~VPIntConstraint,~VPIntConstraint(),1,TR,VPIntConstraint
VPIntRange,VPIntRange(int32_t,int32_t),1,TR,VPIntRange
create,create(OMR::ValuePropagation *,TR::DataTypes,enum TR_YesNoMaybe),0,TR,VPIntRange
create,create(OMR::ValuePropagation *,int32_t,int32_t,enum TR_YesNoMaybe),0,TR,VPIntRange
createWithPrecision,createWithPrecision(OMR::ValuePropagation *,TR::DataType,int32_t,enum TR_YesNoMaybe,_Bool),1,TR,VPIntRange
operator=,operator=(class TR::VPIntRange &&),0,TR,VPIntRange
operator=,operator=(const class TR::VPIntRange &),0,TR,VPIntRange
~VPIntRange,~VPIntRange(),1,TR,VPIntRange
VPKnownObject,VPKnownObject(class TR_OpaqueClassBlock *,TR::Compilation *,TR::class KnownObjectTable::Index,_Bool),1,TR,VPKnownObject
create,create(OMR::ValuePropagation *,TR::class KnownObjectTable::Index),0,TR,VPKnownObject
create,create(OMR::ValuePropagation *,TR::class KnownObjectTable::Index,_Bool),0,TR,VPKnownObject
createForJavaLangClass,createForJavaLangClass(OMR::ValuePropagation *,TR::class KnownObjectTable::Index),1,TR,VPKnownObject
getIndex,getIndex(),1,TR,VPKnownObject
operator=,operator=(class TR::VPKnownObject &&),0,TR,VPKnownObject
operator=,operator=(const class TR::VPKnownObject &),0,TR,VPKnownObject
~VPKnownObject,~VPKnownObject(),1,TR,VPKnownObject
VPLessThanOrEqual,VPLessThanOrEqual(int32_t),1,TR,VPLessThanOrEqual
create,create(OMR::ValuePropagation *,int32_t),0,TR,VPLessThanOrEqual
operator=,operator=(const class TR::VPLessThanOrEqual &),0,TR,VPLessThanOrEqual
operator=,operator=(class TR::VPLessThanOrEqual &&),0,TR,VPLessThanOrEqual
~VPLessThanOrEqual,~VPLessThanOrEqual(),1,TR,VPLessThanOrEqual
VPLongConst,VPLongConst(int64_t),1,TR,VPLongConst
VPLongConstraint,VPLongConstraint(class TR::VPLongConstraint &&),1,TR,VPLongConstraint
VPLongConstraint,VPLongConstraint(const class TR::VPLongConstraint &),0,TR,VPLongConstraint
VPLongConstraint,VPLongConstraint(int64_t),0,TR,VPLongConstraint
create,create(OMR::ValuePropagation *,int64_t),0,TR,VPLongConst
createExclusion,createExclusion(OMR::ValuePropagation *,int64_t),1,TR,VPLongConst
getHigh,getHigh(),1,TR,VPLongConstraint
getLong,getLong(),1,TR,VPLongConstraint
getLow,getLow(),1,TR,VPLongConstraint
getRange,getRange(int64_t,int64_t,_Bool,_Bool,OMR::ValuePropagation *),1,TR,VPLongConstraint
getUnsignedLong,getUnsignedLong(),1,TR,VPLongConstraint
operator=,operator=(class TR::VPLongConstraint &&),0,TR,VPLongConstraint
operator=,operator=(const class TR::VPLongConstraint &),0,TR,VPLongConstraint
operator=,operator=(class TR::VPLongConst &&),0,TR,VPLongConst
operator=,operator=(const class TR::VPLongConst &),0,TR,VPLongConst
~VPLongConst,~VPLongConst(),1,TR,VPLongConst
~VPLongConstraint,~VPLongConstraint(),1,TR,VPLongConstraint
VPLongRange,VPLongRange(int64_t,int64_t),1,TR,VPLongRange
create,create(OMR::ValuePropagation *,int64_t,int64_t,_Bool,enum TR_YesNoMaybe),0,TR,VPLongRange
getIsPowerOfTwo,getIsPowerOfTwo(),1,TR,VPLongRange
operator=,operator=(class TR::VPLongRange &&),0,TR,VPLongRange
operator=,operator=(const class TR::VPLongRange &),0,TR,VPLongRange
setIsPowerOfTwo,setIsPowerOfTwo(),1,TR,VPLongRange
~VPLongRange,~VPLongRange(),1,TR,VPLongRange
VPMergedConstraints,VPMergedConstraints(ListElement<TR::VPConstraint> *,class TR_Memory *),1,TR,VPMergedConstraints
create,create(OMR::ValuePropagation *,ListElement<TR::VPConstraint> *),0,TR,VPMergedConstraints
create,create(OMR::ValuePropagation *,TR::VPConstraint *,TR::VPConstraint *),0,TR,VPMergedConstraints
getList,getList(),1,TR,VPMergedConstraints
getType,getType(),1,TR,VPMergedConstraints
intIntersect,intIntersect(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *),1,TR,VPMergedConstraints
intMerge,intMerge(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *),1,TR,VPMergedConstraints
longIntersect,longIntersect(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *),1,TR,VPMergedConstraints
longMerge,longMerge(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *),1,TR,VPMergedConstraints
operator=,operator=(const class TR::VPMergedConstraints &),0,TR,VPMergedConstraints
operator=,operator=(class TR::VPMergedConstraints &&),0,TR,VPMergedConstraints
shortIntersect,shortIntersect(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *),1,TR,VPMergedConstraints
shortMerge,shortMerge(TR::VPConstraint *,ListElement<TR::VPConstraint> *,OMR::ValuePropagation *),1,TR,VPMergedConstraints
~VPMergedConstraints,~VPMergedConstraints(),1,TR,VPMergedConstraints
VPNotEqual,VPNotEqual(int32_t),1,TR,VPNotEqual
create,create(OMR::ValuePropagation *,int32_t),0,TR,VPNotEqual
operator=,operator=(class TR::VPNotEqual &&),0,TR,VPNotEqual
operator=,operator=(const class TR::VPNotEqual &),0,TR,VPNotEqual
~VPNotEqual,~VPNotEqual(),1,TR,VPNotEqual
create,create(OMR::ValuePropagation *),0,TR,VPNullObject
operator=,operator=(const class TR::VPNullObject &),0,TR,VPNullObject
operator=,operator=(class TR::VPNullObject &&),0,TR,VPNullObject
~VPNullObject,~VPNullObject(),1,TR,VPNullObject
VPObjectLocation,VPObjectLocation(enum TR::VPObjectLocation::VPObjectLocationKind),1,TR,VPObjectLocation
create,create(OMR::ValuePropagation *,enum TR::VPObjectLocation::VPObjectLocationKind),0,TR,VPObjectLocation
isKindSubset,isKindSubset(enum TR::VPObjectLocation::VPObjectLocationKind,enum TR::VPObjectLocation::VPObjectLocationKind),1,TR,VPObjectLocation
isWithin,isWithin(enum TR::VPObjectLocation::VPObjectLocationKind),1,TR,VPObjectLocation
operator=,operator=(class TR::VPObjectLocation &&),0,TR,VPObjectLocation
operator=,operator=(const class TR::VPObjectLocation &),0,TR,VPObjectLocation
~VPObjectLocation,~VPObjectLocation(),1,TR,VPObjectLocation
VPPreexistentObject,VPPreexistentObject(class TR_OpaqueClassBlock *),1,TR,VPPreexistentObject
create,create(OMR::ValuePropagation *,class TR_OpaqueClassBlock *),0,TR,VPPreexistentObject
getAssumptionClass,getAssumptionClass(),1,TR,VPPreexistentObject
operator=,operator=(class TR::VPPreexistentObject &&),0,TR,VPPreexistentObject
operator=,operator=(const class TR::VPPreexistentObject &),0,TR,VPPreexistentObject
~VPPreexistentObject,~VPPreexistentObject(),1,TR,VPPreexistentObject
VPShortConst,VPShortConst(int16_t),1,TR,VPShortConst
VPShortConstraint,VPShortConstraint(class TR::VPShortConstraint &&),1,TR,VPShortConstraint
VPShortConstraint,VPShortConstraint(int16_t),0,TR,VPShortConstraint
VPShortConstraint,VPShortConstraint(const class TR::VPShortConstraint &),0,TR,VPShortConstraint
create,create(OMR::ValuePropagation *,int16_t),0,TR,VPShortConst
createExclusion,createExclusion(OMR::ValuePropagation *,int16_t),1,TR,VPShortConst
getHigh,getHigh(),1,TR,VPShortConstraint
getLow,getLow(),1,TR,VPShortConstraint
getRange,getRange(int16_t,int16_t,_Bool,_Bool,OMR::ValuePropagation *),1,TR,VPShortConstraint
getShort,getShort(),1,TR,VPShortConstraint
operator=,operator=(class TR::VPShortConstraint &&),0,TR,VPShortConstraint
operator=,operator=(const class TR::VPShortConstraint &),0,TR,VPShortConstraint
operator=,operator=(class TR::VPShortConst &&),0,TR,VPShortConst
operator=,operator=(const class TR::VPShortConst &),0,TR,VPShortConst
~VPShortConst,~VPShortConst(),1,TR,VPShortConst
~VPShortConstraint,~VPShortConstraint(),1,TR,VPShortConstraint
VPShortRange,VPShortRange(int16_t,int16_t),1,TR,VPShortRange
create,create(OMR::ValuePropagation *),0,TR,VPShortRange
create,create(OMR::ValuePropagation *,int16_t,int16_t,enum TR_YesNoMaybe),0,TR,VPShortRange
createWithPrecision,createWithPrecision(OMR::ValuePropagation *,int32_t,_Bool),1,TR,VPShortRange
operator=,operator=(class TR::VPShortRange &&),0,TR,VPShortRange
operator=,operator=(const class TR::VPShortRange &),0,TR,VPShortRange
~VPShortRange,~VPShortRange(),1,TR,VPShortRange
VPSync,VPSync(enum TR_YesNoMaybe),1,TR,VPSync
create,create(OMR::ValuePropagation *,enum TR_YesNoMaybe),0,TR,VPSync
operator=,operator=(class TR::VPSync &&),0,TR,VPSync
operator=,operator=(const class TR::VPSync &),0,TR,VPSync
syncEmitted,syncEmitted(),1,TR,VPSync
~VPSync,~VPSync(),1,TR,VPSync
VPUnreachablePath,VPUnreachablePath(),1,TR,VPUnreachablePath
create,create(OMR::ValuePropagation *),0,TR,VPUnreachablePath
operator=,operator=(class TR::VPUnreachablePath &&),0,TR,VPUnreachablePath
operator=,operator=(const class TR::VPUnreachablePath &),0,TR,VPUnreachablePath
~VPUnreachablePath,~VPUnreachablePath(),1,TR,VPUnreachablePath
VPUnresolvedClass,VPUnresolvedClass(const char *,int32_t,class TR_ResolvedMethod *),1,TR,VPUnresolvedClass
create,create(OMR::ValuePropagation *,const char *,int32_t,class TR_ResolvedMethod *),0,TR,VPUnresolvedClass
getMethod,getMethod(),1,TR,VPUnresolvedClass
getOwningMethod,getOwningMethod(),1,TR,VPUnresolvedClass
isDefiniteType,isDefiniteType(),1,TR,VPUnresolvedClass
operator=,operator=(class TR::VPUnresolvedClass &&),0,TR,VPUnresolvedClass
operator=,operator=(const class TR::VPUnresolvedClass &),0,TR,VPUnresolvedClass
setDefiniteType,setDefiniteType(_Bool),1,TR,VPUnresolvedClass
~VPUnresolvedClass,~VPUnresolvedClass(),1,TR,VPUnresolvedClass
TR_BlockStructure,TR_BlockStructure(class TR_BlockStructure &&),1,TR,BlockStructure
TR_BlockStructure,TR_BlockStructure(TR::Compilation *,int32_t,TR::Block *),0,TR,BlockStructure
TR_BlockStructure,TR_BlockStructure(const class TR_BlockStructure &),0,TR,BlockStructure
TR_Structure,TR_Structure(class TR_Structure &&),1,TR,Structure
TR_Structure,TR_Structure(TR::Compilation *,int32_t),0,TR,Structure
TR_Structure,TR_Structure(const class TR_Structure &),0,TR,Structure
addEdge,addEdge(TR::CFGEdge *,_Bool),1,TR,Structure
addExternalEdge,addExternalEdge(class TR_Structure *,int32_t,_Bool),1,TR,Structure
adjustWeightForBranches,adjustWeightForBranches(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *,int32_t *),1,TR,Structure
asBlock,asBlock(),1,TR,Structure
asRegion,asRegion(),1,TR,Structure
calculateFrequencyOfExecution,calculateFrequencyOfExecution(int32_t *),1,TR,Structure
cfg,cfg(),1,TR,Structure
changeContinueLoopsToNestedLoops,changeContinueLoopsToNestedLoops(class TR_RegionStructure *),1,TR,Structure
checkStructure,checkStructure(class TR_BitVector *),1,TR,Structure
clearAnalysisInfo,clearAnalysisInfo(),1,TR,Structure
cloneStructure,cloneStructure(TR::Block **,class TR_StructureSubGraphNode **,List<class TR_Structure> *,List<class TR_Structure> *),1,TR,Structure
cloneStructureEdges,cloneStructureEdges(TR::Block **),1,TR,Structure
collectCFGEdgesTo,collectCFGEdgesTo(int32_t,List<TR::CFGEdge> *),1,TR,Structure
collectExitBlocks,collectExitBlocks(List<TR::Block> *,List<TR::CFGEdge> *),1,TR,Structure
comp,comp(),1,TR,Structure
contains,contains(class TR_Structure *,class TR_Structure *),1,TR,Structure
containsImproperRegion,containsImproperRegion(),1,TR,Structure
doDataFlowAnalysis,doDataFlowAnalysis(class TR_DataFlowAnalysis *,_Bool),1,TR,Structure
findCommonParent,findCommonParent(class TR_Structure *,TR::CFG *),1,TR,Structure
findNodeInHierarchy,findNodeInHierarchy(class TR_RegionStructure *,int32_t),1,TR,Structure
getAnalysisInfo,getAnalysisInfo(),1,TR,Structure
getAnyCyclicRegionNestingDepth,getAnyCyclicRegionNestingDepth(),1,TR,Structure
getBlock,getBlock(),1,TR,BlockStructure
getBlocks,getBlocks(List<TR::Block> *),1,TR,Structure
getBlocks,getBlocks(List<TR::Block> *,vcount_t),0,TR,Structure
getContainingLoop,getContainingLoop(),1,TR,Structure
getDuplicatedBlock,getDuplicatedBlock(),1,TR,BlockStructure
getEntryBlock,getEntryBlock(),1,TR,Structure
getKind,getKind(),1,TR,Structure
getMaxNestingDepth,getMaxNestingDepth(),1,TR,Structure
getMaxNestingDepth,getMaxNestingDepth(int32_t *,int32_t *),0,TR,Structure
getNestingDepth,getNestingDepth(),1,TR,Structure
getNumber,getNumber(),1,TR,Structure
getNumberOfLoops,getNumberOfLoops(),1,TR,Structure
getParent,getParent(),1,TR,Structure
getSubGraphNode,getSubGraphNode(),1,TR,Structure
getWeight,getWeight(),1,TR,Structure
hasBeenAnalyzedBefore,hasBeenAnalyzedBefore(),1,TR,Structure
hoistInvariantsOutOfNestedLoops,hoistInvariantsOutOfNestedLoops(class TR_LocalTransparency *,class TR_BitVector **,_Bool,class TR_BlockStructure *,class TR_RegionStructure *,int32_t),1,TR,Structure
isCreatedByVersioning,isCreatedByVersioning(),1,TR,BlockStructure
isEntryOfShortRunningLoop,isEntryOfShortRunningLoop(),1,TR,BlockStructure
isExpressionTransparentIn,isExpressionTransparentIn(int32_t,class TR_LocalTransparency *),1,TR,Structure
isLoopInvariantBlock,isLoopInvariantBlock(),1,TR,BlockStructure
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,Structure
jitPersistentFree,jitPersistentFree(void *),1,TR,Structure
markStructuresWithImproperRegions,markStructuresWithImproperRegions(),1,TR,Structure
mergeBlocks,mergeBlocks(TR::Block *,TR::Block *),1,TR,Structure
mergeInto,mergeInto(TR::Block *,TR::Block *),1,TR,Structure
operator delete,operator delete(void *,size_t),1,TR,Structure
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Structure
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Structure
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Structure
operator delete,operator delete(void *,TR::Region &),0,TR,Structure
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Structure
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Structure
operator delete[],operator delete[](void *,TR::Region &),0,TR,Structure
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Structure
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,Structure
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,Structure
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Structure
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Structure
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Structure
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,Structure
operator new,operator new(size_t,TR::Region &),0,TR,Structure
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,Structure
operator new[],operator new[](size_t,TR::Region &),0,TR,Structure
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,Structure
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Structure
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Structure
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,Structure
operator=,operator=(class TR_Structure &&),1,TR,Structure
operator=,operator=(const class TR_Structure &),0,TR,Structure
operator=,operator=(class TR_BlockStructure &&),0,TR,BlockStructure
operator=,operator=(const class TR_BlockStructure &),0,TR,BlockStructure
removeEdge,removeEdge(class TR_Structure *,class TR_Structure *),1,TR,Structure
removeExternalEdgeTo,removeExternalEdgeTo(class TR_Structure *,int32_t),1,TR,Structure
removeMergedBlock,removeMergedBlock(TR::Block *,TR::Block *),1,TR,Structure
renumber,renumber(int32_t),1,TR,Structure
renumberRecursively,renumberRecursively(int32_t,int32_t),1,TR,Structure
replacePart,replacePart(class TR_Structure *,class TR_Structure *),1,TR,Structure
resetAnalysisInfo,resetAnalysisInfo(),1,TR,Structure
resetAnalyzedStatus,resetAnalyzedStatus(),1,TR,Structure
resetVisitCounts,resetVisitCounts(vcount_t),1,TR,Structure
setAnalysisInfo,setAnalysisInfo(void *),1,TR,Structure
setAnalyzedStatus,setAnalyzedStatus(_Bool),1,TR,Structure
setAnyCyclicRegionNestingDepth,setAnyCyclicRegionNestingDepth(int16_t),1,TR,Structure
setAnyCyclicRegionNestingDepths,setAnyCyclicRegionNestingDepths(int32_t *),1,TR,Structure
setAsLoopInvariantBlock,setAsLoopInvariantBlock(_Bool),1,TR,BlockStructure
setBlock,setBlock(TR::Block *),1,TR,BlockStructure
setConditionalityWeight,setConditionalityWeight(int32_t *),1,TR,Structure
setContainsImproperRegion,setContainsImproperRegion(_Bool),1,TR,Structure
setCreatedByVersioning,setCreatedByVersioning(_Bool),1,TR,BlockStructure
setDuplicatedBlock,setDuplicatedBlock(class TR_BlockStructure *),1,TR,BlockStructure
setIsEntryOfShortRunningLoop,setIsEntryOfShortRunningLoop(),1,TR,BlockStructure
setMaxNestingDepth,setMaxNestingDepth(int16_t),1,TR,Structure
setNestingDepth,setNestingDepth(int16_t),1,TR,Structure
setNestingDepths,setNestingDepths(int32_t *),1,TR,Structure
setNumber,setNumber(int32_t),1,TR,Structure
setParent,setParent(class TR_RegionStructure *),1,TR,Structure
setSubGraphNode,setSubGraphNode(class TR_StructureSubGraphNode *),1,TR,Structure
setWasHeaderOfCanonicalizedLoop,setWasHeaderOfCanonicalizedLoop(_Bool),1,TR,BlockStructure
setWeight,setWeight(int32_t),1,TR,Structure
trHeapMemory,trHeapMemory(),1,TR,Structure
trMemory,trMemory(),1,TR,Structure
trPersistentMemory,trPersistentMemory(),1,TR,Structure
trStackMemory,trStackMemory(),1,TR,Structure
wasHeaderOfCanonicalizedLoop,wasHeaderOfCanonicalizedLoop(),1,TR,BlockStructure
~TR_BlockStructure,~TR_BlockStructure(),1,TR,BlockStructure
~TR_Structure,~TR_Structure(),1,TR,Structure
TR_InductionVariable,TR_InductionVariable(),1,TR,InductionVariable
TR_InductionVariable,TR_InductionVariable(TR::RegisterMappedSymbol *,TR::VPConstraint *,TR::VPConstraint *,TR::VPConstraint *,enum TR_YesNoMaybe),0,TR,InductionVariable
getEntry,getEntry(),1,TR,InductionVariable
getExit,getExit(),1,TR,InductionVariable
getIncr,getIncr(),1,TR,InductionVariable
getLocal,getLocal(),1,TR,InductionVariable
isSigned,isSigned(),1,TR,InductionVariable
setEntry,setEntry(TR::VPConstraint *),1,TR,InductionVariable
setExit,setExit(TR::VPConstraint *),1,TR,InductionVariable
setIncr,setIncr(TR::VPConstraint *),1,TR,InductionVariable
setLocal,setLocal(TR::RegisterMappedSymbol *),1,TR,InductionVariable
TR_PredecessorIterator,TR_PredecessorIterator(const class TR_PredecessorIterator &),1,TR,PredecessorIterator
TR_PredecessorIterator,TR_PredecessorIterator(class TR_PredecessorIterator &&),0,TR,PredecessorIterator
TR_PredecessorIterator,TR_PredecessorIterator(TR::CFGNode *),0,TR,PredecessorIterator
TR_RegionStructure,TR_RegionStructure(TR::Compilation *,int32_t),1,TR,RegionStructure
TR_RegionStructure,TR_RegionStructure(class TR_RegionStructure &&),0,TR,RegionStructure
addAfterInductionVariable,addAfterInductionVariable(class TR_InductionVariable *,class TR_InductionVariable *),1,TR,RegionStructure
addExitEdge,addExitEdge(class TR_StructureSubGraphNode *,int32_t,_Bool,TR::CFGEdge *),1,TR,RegionStructure
addExitEdge,addExitEdge(TR::CFGEdge *),0,TR,RegionStructure
addGlobalRegisterCandidateToExits,addGlobalRegisterCandidateToExits(class TR_RegisterCandidate *),1,TR,RegionStructure
addInductionVariable,addInductionVariable(class TR_InductionVariable *),1,TR,RegionStructure
addInductionVariable,addInductionVariable(class TR_BasicInductionVariable *),0,TR,RegionStructure
addSubNode,addSubNode(class TR_StructureSubGraphNode *),1,TR,RegionStructure
begin,begin(),1,TR,RegionStructure
canBeUnrolled,canBeUnrolled(),1,TR,RegionStructure
checkForInternalCycles,checkForInternalCycles(),1,TR,RegionStructure
cleanupAfterEdgeRemoval,cleanupAfterEdgeRemoval(TR::CFGNode *),1,TR,RegionStructure
cleanupAfterNodeRemoval,cleanupAfterNodeRemoval(),1,TR,RegionStructure
clearInductionVariables,clearInductionVariables(),1,TR,RegionStructure
collapseIntoParent,collapseIntoParent(),1,TR,RegionStructure
computeInvariantExpressions,computeInvariantExpressions(),1,TR,RegionStructure
computeInvariantSymbols,computeInvariantSymbols(),1,TR,RegionStructure
containsInternalCycles,containsInternalCycles(),1,TR,RegionStructure
containsOnlyAcyclicRegions,containsOnlyAcyclicRegions(),1,TR,RegionStructure
end,end(),1,TR,RegionStructure
findMatchingIV,findMatchingIV(TR::SymbolReference *),1,TR,RegionStructure
findNodeInHierarchy,findNodeInHierarchy(int32_t),0,TR,RegionStructure
findSubNodeInRegion,findSubNodeInRegion(int32_t),1,TR,RegionStructure
getBasicInductionVariables,getBasicInductionVariables(),1,TR,RegionStructure
getBlocksAtSameNestingLevel,getBlocksAtSameNestingLevel(),1,TR,RegionStructure
getEntry,getEntry(),1,TR,RegionStructure
getExitEdges,getExitEdges(),1,TR,RegionStructure
getFirstInductionVariable,getFirstInductionVariable(),1,TR,RegionStructure
getFrequencyEntryFactor,getFrequencyEntryFactor(),1,TR,RegionStructure
getInvariantExpressions,getInvariantExpressions(),1,TR,RegionStructure
getPrimaryInductionVariable,getPrimaryInductionVariable(),1,TR,RegionStructure
getUnrollFactor,getUnrollFactor(),1,TR,RegionStructure
getVersionedLoop,getVersionedLoop(),1,TR,RegionStructure
hasExceptionOutEdges,hasExceptionOutEdges(),1,TR,RegionStructure
isAcyclic,isAcyclic(),1,TR,RegionStructure
isCanonicalizedLoop,isCanonicalizedLoop(),1,TR,RegionStructure
isExitEdge,isExitEdge(TR::CFGEdge *),1,TR,RegionStructure
isExprInvariant,isExprInvariant(TR::Node *,_Bool),1,TR,RegionStructure
isExprTreeInvariant,isExprTreeInvariant(TR::Node *),1,TR,RegionStructure
isInvertible,isInvertible(),1,TR,RegionStructure
isNaturalLoop,isNaturalLoop(),1,TR,RegionStructure
isSubtreeInvariant,isSubtreeInvariant(TR::Node *,vcount_t),1,TR,RegionStructure
isSymbolRefInvariant,isSymbolRefInvariant(TR::SymbolReference *),1,TR,RegionStructure
numSubNodes,numSubNodes(),1,TR,RegionStructure
operator=,operator=(class TR_RegionStructure &&),0,TR,RegionStructure
operator=,operator=(const class TR_RegionStructure &),0,TR,RegionStructure
removeEdge,removeEdge(TR::CFGEdge *,_Bool),0,TR,RegionStructure
removeSubNode,removeSubNode(class TR_StructureSubGraphNode *),1,TR,RegionStructure
replaceExitPart,replaceExitPart(int32_t,int32_t),1,TR,RegionStructure
resetExprInvariant,resetExprInvariant(TR::Node *),1,TR,RegionStructure
resetInvariance,resetInvariance(),1,TR,RegionStructure
setAsCanonicalizedLoop,setAsCanonicalizedLoop(_Bool),1,TR,RegionStructure
setAsInvertible,setAsInvertible(_Bool),1,TR,RegionStructure
setBlocksAtSameNestingLevel,setBlocksAtSameNestingLevel(class TR_BitVector *),1,TR,RegionStructure
setContainsInternalCycles,setContainsInternalCycles(_Bool),1,TR,RegionStructure
setEntry,setEntry(class TR_StructureSubGraphNode *),1,TR,RegionStructure
setExprInvariant,setExprInvariant(TR::Node *),1,TR,RegionStructure
setFrequencyEntryFactor,setFrequencyEntryFactor(float),1,TR,RegionStructure
setPrimaryInductionVariable,setPrimaryInductionVariable(class TR_PrimaryInductionVariable *),1,TR,RegionStructure
setUnrollFactor,setUnrollFactor(int),1,TR,RegionStructure
setVersionedLoop,setVersionedLoop(class TR_RegionStructure *),1,TR,RegionStructure
updateInvariantExpressions,updateInvariantExpressions(TR::Node *,vcount_t),1,TR,RegionStructure
updateInvariantSymbols,updateInvariantSymbols(TR::Node *,vcount_t),1,TR,RegionStructure
~TR_RegionStructure,~TR_RegionStructure(),1,TR,RegionStructure
TR_StructureSubGraphNode,TR_StructureSubGraphNode(class TR_StructureSubGraphNode &&),1,TR,StructureSubGraphNode
TR_StructureSubGraphNode,TR_StructureSubGraphNode(int32_t,TR::Region &),0,TR,StructureSubGraphNode
TR_StructureSubGraphNode,TR_StructureSubGraphNode(class TR_Structure *),0,TR,StructureSubGraphNode
TR_StructureSubGraphNode,TR_StructureSubGraphNode(const class TR_StructureSubGraphNode &),0,TR,StructureSubGraphNode
create,create(int32_t,class TR_RegionStructure *),1,TR,StructureSubGraphNode
getStructure,getStructure(),1,TR,StructureSubGraphNode
operator=,operator=(const class TR_StructureSubGraphNode &),0,TR,StructureSubGraphNode
operator=,operator=(class TR_StructureSubGraphNode &&),0,TR,StructureSubGraphNode
setStructure,setStructure(class TR_Structure *),1,TR,StructureSubGraphNode
~TR_StructureSubGraphNode,~TR_StructureSubGraphNode(),1,TR,StructureSubGraphNode
TR_SuccessorIterator,TR_SuccessorIterator(const class TR_SuccessorIterator &),1,TR,SuccessorIterator
TR_SuccessorIterator,TR_SuccessorIterator(class TR_SuccessorIterator &&),0,TR,SuccessorIterator
~TR_SuccessorIterator,~TR_SuccessorIterator(),1,TR,SuccessorIterator
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Machine
operator delete,operator delete(void *,TR::Region &),0,OMR,Machine
CompileIlGenRequest,CompileIlGenRequest(TR::IlGeneratorMethodDetails &),1,TR,CompileIlGenRequest
IlGenRequest,IlGenRequest(class OMR::IlGenRequest &&),1,OMR,IlGenRequest
IlGenRequest,IlGenRequest(const class OMR::IlGenRequest &),0,OMR,IlGenRequest
IlGenRequest,IlGenRequest(TR::IlGeneratorMethodDetails &),0,OMR,IlGenRequest
IlGenRequest,IlGenRequest(class TR::IlGenRequest &&),0,TR,IlGenRequest
IlGenRequest,IlGenRequest(const class TR::IlGenRequest &),0,TR,IlGenRequest
allowIlGenOptimizations,allowIlGenOptimizations(),1,TR,IlGenRequest
details,details(),1,OMR,IlGenRequest
getIlGenerator,getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *),1,OMR,IlGenRequest
operator=,operator=(class OMR::IlGenRequest &&),1,OMR,IlGenRequest
operator=,operator=(const class OMR::IlGenRequest &),0,OMR,IlGenRequest
operator=,operator=(const class TR::IlGenRequest &),0,TR,IlGenRequest
operator=,operator=(class TR::IlGenRequest &&),0,TR,IlGenRequest
operator=,operator=(class TR::CompileIlGenRequest &&),0,TR,CompileIlGenRequest
operator=,operator=(const class TR::CompileIlGenRequest &),0,TR,CompileIlGenRequest
print,print(class TR_FrontEnd *,TR::FILE *,const char *),1,OMR,IlGenRequest
~CompileIlGenRequest,~CompileIlGenRequest(),1,TR,CompileIlGenRequest
~IlGenRequest,~IlGenRequest(),1,OMR,IlGenRequest
IlGeneratorMethodDetails,IlGeneratorMethodDetails(const class OMR::IlGeneratorMethodDetails &),1,OMR,IlGeneratorMethodDetails
IlGeneratorMethodDetails,IlGeneratorMethodDetails(),0,OMR,IlGeneratorMethodDetails
IlGeneratorMethodDetails,IlGeneratorMethodDetails(const class TestCompiler::IlGeneratorMethodDetails &),0,TestCompiler,IlGeneratorMethodDetails
IlGeneratorMethodDetails,IlGeneratorMethodDetails(class TestCompiler::IlGeneratorMethodDetails &&),0,TestCompiler,IlGeneratorMethodDetails
IlGeneratorMethodDetails,IlGeneratorMethodDetails(class TR_ResolvedMethod *),0,TestCompiler,IlGeneratorMethodDetails
IlGeneratorMethodDetails,IlGeneratorMethodDetails(TR::ResolvedMethod *),0,TestCompiler,IlGeneratorMethodDetails
create,create(TR::IlGeneratorMethodDetails &,class TR_ResolvedMethod *),1,OMR,IlGeneratorMethodDetails
getIlGenerator,getIlGenerator(TR::ResolvedMethodSymbol *,class TR_FrontEnd *,TR::Compilation *,TR::SymbolReferenceTable *,_Bool,class TR_InlineBlocks *),1,TestCompiler,IlGeneratorMethodDetails
getIlVerifier,getIlVerifier(),1,TestCompiler,IlGeneratorMethodDetails
getMethod,getMethod(),1,TestCompiler,IlGeneratorMethodDetails
getResolvedMethod,getResolvedMethod(),1,TestCompiler,IlGeneratorMethodDetails
isMethodInProgress,isMethodInProgress(),1,OMR,IlGeneratorMethodDetails
operator new,operator new(size_t,TR::IlGeneratorMethodDetails &),1,OMR,IlGeneratorMethodDetails
operator new,operator new(size_t,TR::IlGeneratorMethodDetails *),0,OMR,IlGeneratorMethodDetails
operator=,operator=(const class OMR::IlGeneratorMethodDetails &),1,OMR,IlGeneratorMethodDetails
operator=,operator=(const class TestCompiler::IlGeneratorMethodDetails &),0,TestCompiler,IlGeneratorMethodDetails
operator=,operator=(class TestCompiler::IlGeneratorMethodDetails &&),0,TestCompiler,IlGeneratorMethodDetails
operator=,operator=(class TR::IlGeneratorMethodDetails &&),0,TR,IlGeneratorMethodDetails
operator=,operator=(const class TR::IlGeneratorMethodDetails &),0,TR,IlGeneratorMethodDetails
print,print(class TR_FrontEnd *,TR::FILE *),1,OMR,IlGeneratorMethodDetails
sameAs,sameAs(TR::IlGeneratorMethodDetails &),1,OMR,IlGeneratorMethodDetails
sameAs,sameAs(TR::IlGeneratorMethodDetails &,class TR_FrontEnd *),0,TestCompiler,IlGeneratorMethodDetails
self,self(),1,OMR,IlGeneratorMethodDetails
setIlVerifier,setIlVerifier(TR::IlVerifier *),1,TestCompiler,IlGeneratorMethodDetails
supportsInvalidation,supportsInvalidation(),1,OMR,IlGeneratorMethodDetails
~IlGeneratorMethodDetails,~IlGeneratorMethodDetails(),1,OMR,IlGeneratorMethodDetails
InliningIlGenRequest,InliningIlGenRequest(const class TR::InliningIlGenRequest &),1,TR,InliningIlGenRequest
InliningIlGenRequest,InliningIlGenRequest(class TR::InliningIlGenRequest &&),0,TR,InliningIlGenRequest
InliningIlGenRequest,InliningIlGenRequest(TR::IlGeneratorMethodDetails &,TR::ResolvedMethodSymbol *),0,TR,InliningIlGenRequest
PartialInliningIlGenRequest,PartialInliningIlGenRequest(TR::IlGeneratorMethodDetails &,TR::ResolvedMethodSymbol *,class TR_InlineBlocks *),1,TR,PartialInliningIlGenRequest
operator=,operator=(class TR::InliningIlGenRequest &&),0,TR,InliningIlGenRequest
operator=,operator=(const class TR::InliningIlGenRequest &),0,TR,InliningIlGenRequest
operator=,operator=(class TR::PartialInliningIlGenRequest &&),0,TR,PartialInliningIlGenRequest
operator=,operator=(const class TR::PartialInliningIlGenRequest &),0,TR,PartialInliningIlGenRequest
~InliningIlGenRequest,~InliningIlGenRequest(),1,TR,InliningIlGenRequest
~PartialInliningIlGenRequest,~PartialInliningIlGenRequest(),1,TR,PartialInliningIlGenRequest
Symbol,Symbol(const class OMR::Symbol &),1,OMR,Symbol
MethodSymbol,MethodSymbol(class OMR::MethodSymbol &&),1,OMR,MethodSymbol
MethodSymbol,MethodSymbol(const class OMR::MethodSymbol &),0,OMR,MethodSymbol
genInduceOSRCall,genInduceOSRCall(TR::TreeTop *,int32_t,int32_t,_Bool,_Bool,TR::CFG *),1,OMR,ResolvedMethodSymbol
genInduceOSRCall,genInduceOSRCall(TR::TreeTop *,int32_t,class TR_OSRMethodData *,int32_t,_Bool,_Bool,TR::CFG *),0,OMR,ResolvedMethodSymbol
incInlineDepth,incInlineDepth(TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,int32_t,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *),1,OMR,Compilation
incInlineDepth,incInlineDepth(class TR_OpaqueMethodBlock *,TR::ResolvedMethodSymbol *,TR_ByteCodeInfo &,TR::SymbolReference *,_Bool,class TR_PrexArgInfo *),0,OMR,Compilation
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Compilation
operator delete,operator delete(void *,size_t),0,OMR,Compilation
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Compilation
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Compilation
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Compilation
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Compilation
operator new[],operator new[](size_t,TR::Region &),1,OMR,Compilation
BSDTimer,BSDTimer(const class CS2::BSDTimer &),1,CS2,BSDTimer
BSDTimer,BSDTimer(),0,CS2,BSDTimer
BSDTimer,BSDTimer(class CS2::BSDTimer &&),0,CS2,BSDTimer
Timer,Timer(class CS2::Timer &&),1,CS2,Timer
Timer,Timer(),0,CS2,Timer
Timer,Timer(const class CS2::Timer &),0,CS2,Timer
~BSDTimer,~BSDTimer(),1,CS2,BSDTimer
~Timer,~Timer(),1,CS2,Timer
Block,Block(const class TR::Block &),0,TR,Block
Optimization,Optimization(class TR::Optimization &&),0,TR,Optimization
Optimization,Optimization(const class TR::Optimization &),0,TR,Optimization
TR_HasRandomGenerator,TR_HasRandomGenerator(TR::Compilation *),1,TR,HasRandomGenerator
TR_HasRandomGenerator,TR_HasRandomGenerator(class TR_HasRandomGenerator &&),0,TR,HasRandomGenerator
TR_Inliner,TR_Inliner(const class TR_Inliner &),1,TR,Inliner
TR_Inliner,TR_Inliner(TR::OptimizationManager *),0,TR,Inliner
TR_Inliner,TR_Inliner(class TR_Inliner &&),0,TR,Inliner
create,create(TR::OptimizationManager *),1,TR,Inliner
operator=,operator=(class TR_Inliner &&),0,TR,Inliner
operator=,operator=(const class TR_Inliner &),0,TR,Inliner
~TR_Inliner,~TR_Inliner(),1,TR,Inliner
OptimizationManager,OptimizationManager(class OMR::OptimizationManager &&),1,OMR,OptimizationManager
OptimizationManager,OptimizationManager(const class OMR::OptimizationManager &),0,OMR,OptimizationManager
OMR_InlinerPolicy,OMR_InlinerPolicy(TR::Compilation *),1,,
OptimizationPolicy,OptimizationPolicy(TR::Compilation *),1,TR,OptimizationPolicy
OptimizationPolicy,OptimizationPolicy(class TR::OptimizationPolicy &&),0,TR,OptimizationPolicy
aggressiveSmallAppOpts,aggressiveSmallAppOpts(),1,,
alwaysWorthInlining,alwaysWorthInlining(class TR_ResolvedMethod *,TR::Node *),1,,
callMustBeInlined,callMustBeInlined(struct TR_CallTarget *),1,,
canInlineMethodWhileInstrumenting,canInlineMethodWhileInstrumenting(class TR_ResolvedMethod *),1,,
checkIfTargetInlineable,checkIfTargetInlineable(struct TR_CallTarget *,struct TR_CallSite *,TR::Compilation *),1,,
determineInliningHeuristic,determineInliningHeuristic(TR::ResolvedMethodSymbol *),1,,
dontPrivatizeArgumentsForRecognizedMethod,dontPrivatizeArgumentsForRecognizedMethod(TR::RecognizedMethod),1,,
getInitialBytecodeSize,getInitialBytecodeSize(TR::ResolvedMethodSymbol *,TR::Compilation *),1,,
getInitialBytecodeSize,getInitialBytecodeSize(class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,TR::Compilation *),0,,
inlineMethodEvenForColdBlocks,inlineMethodEvenForColdBlocks(class TR_ResolvedMethod *),1,,
inlineRecognizedMethod,inlineRecognizedMethod(TR::RecognizedMethod),1,,
mustBeInlinedEvenInDebug,mustBeInlinedEvenInDebug(class TR_ResolvedMethod *,TR::TreeTop *),1,,
operator=,operator=(class OMR_InlinerPolicy &&),0,,
operator=,operator=(const class OMR_InlinerPolicy &),0,,
replaceSoftwareCheckWithHardwareCheck,replaceSoftwareCheckWithHardwareCheck(class TR_ResolvedMethod *),1,,
skipHCRGuardForCallee,skipHCRGuardForCallee(class TR_ResolvedMethod *),1,,
suitableForRemat,suitableForRemat(TR::Compilation *,TR::Node *,struct TR_VirtualGuardSelection *),1,,
supressInliningRecognizedInitialCallee,supressInliningRecognizedInitialCallee(struct TR_CallSite *,TR::Compilation *),1,,
tryToInline,tryToInline(struct TR_CallTarget *,class TR_CallStack *,_Bool),1,,
tryToInlineGeneral,tryToInlineGeneral(struct TR_CallTarget *,class TR_CallStack *,_Bool),1,,
tryToInlineTrivialMethod,tryToInlineTrivialMethod(class TR_CallStack *,struct TR_CallTarget *),1,,
willBeInlinedInCodeGen,willBeInlinedInCodeGen(TR::RecognizedMethod),1,,
~OMR_InlinerPolicy,~OMR_InlinerPolicy(),1,,
OMR_InlinerUtil,OMR_InlinerUtil(TR::Compilation *),1,,
addTargetIfMethodIsNotOverridenInReceiversHierarchy,addTargetIfMethodIsNotOverridenInReceiversHierarchy(class TR_IndirectCallSite *),1,,
addTargetIfThereIsSingleImplementer,addTargetIfThereIsSingleImplementer(class TR_IndirectCallSite *),1,,
adjustByteCodeSize,adjustByteCodeSize(class TR_ResolvedMethod *,_Bool,TR::Block *,int &),1,,
adjustCallerWeightLimit,adjustCallerWeightLimit(TR::ResolvedMethodSymbol *,int &),1,,
adjustMethodByteCodeSizeThreshold,adjustMethodByteCodeSizeThreshold(TR::ResolvedMethodSymbol *,int &),1,,
calleeTreeTopPreMergeActions,calleeTreeTopPreMergeActions(TR::ResolvedMethodSymbol *,struct TR_CallTarget *),1,,
collectCalleeMethodClassInfo,collectCalleeMethodClassInfo(class TR_ResolvedMethod *),1,,
computeMethodBranchProfileInfo,computeMethodBranchProfileInfo(TR::Block *,struct TR_CallTarget *,TR::ResolvedMethodSymbol *),1,,
computePrexInfo,computePrexInfo(struct TR_CallTarget *),1,,
createInnerPrexInfo,createInnerPrexInfo(TR::Compilation *,TR::ResolvedMethodSymbol *,class TR_CallStack *,TR::TreeTop *,TR::Node *,enum TR_VirtualGuardKind),1,,
createPrexArgInfoForCallTarget,createPrexArgInfoForCallTarget(struct TR_VirtualGuardSelection *,class TR_ResolvedMethod *),1,,
estimateAndRefineBytecodeSize,estimateAndRefineBytecodeSize(struct TR_CallSite *,struct TR_CallTarget *,class TR_CallStack *,int32_t &),1,,
findSingleJittedImplementer,findSingleJittedImplementer(class TR_IndirectCallSite *),1,,
getCallCount,getCallCount(TR::Node *),1,,
getInlinerTracer,getInlinerTracer(TR::Optimization *),1,,
getTransformInlinedFunction,getTransformInlinedFunction(TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,TR::Block *,TR::TreeTop *,TR::Node *,class TR_ParameterToArgumentMapper &,struct TR_VirtualGuardSelection *,List<TR::SymbolReference> &,List<TR::SymbolReference> &,List<TR::SymbolReference> &),1,,
operator=,operator=(const class OMR_InlinerUtil &),0,,
operator=,operator=(class OMR_InlinerUtil &&),0,,
refineColdness,refineColdness(TR::Node *,_Bool &),1,,
refineInlineGuard,refineInlineGuard(TR::Node *,TR::Block *&,TR::Block *&,_Bool &,TR::ResolvedMethodSymbol *,TR::TreeTop *,TR::TreeTop *&,TR::Block *),1,,
refineInliningThresholds,refineInliningThresholds(TR::Compilation *,int32_t &,int32_t &,int32_t &,int32_t &,int32_t &,int32_t &,int32_t),1,,
storeValueInATemp,storeValueInATemp(TR::Compilation *,TR::Node *,TR::SymbolReference *&,TR::TreeTop *,TR::ResolvedMethodSymbol *,List<TR::SymbolReference> &,List<TR::SymbolReference> &,List<TR::SymbolReference> *,_Bool,TR::TreeTop **,_Bool,int32_t),1,,
validateInterfaceImplementation,validateInterfaceImplementation(class TR_ResolvedMethod *),1,,
~OMR_InlinerUtil,~OMR_InlinerUtil(),1,,
operator=,operator=(class OMR::CodeGenPhase &&),1,OMR,CodeGenPhase
operator=,operator=(const class OMR::CodeGenPhase &),0,OMR,CodeGenPhase
operator delete,operator delete(void *,size_t),1,OMR,CodeGenerator
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,CodeGenerator
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,CodeGenerator
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,CodeGenerator
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,OMR,CodeGenerator
operator new[],operator new[](size_t,TR::Region &),0,OMR,CodeGenerator
DenseSet,DenseSet(TR::Region &),1,TR,GlobalSet::DenseSet
DenseSet,DenseSet(class TR::GlobalSet::DenseSet &&),0,TR,GlobalSet::DenseSet
Set,Set(),1,TR,GlobalSet::Set
Set,Set(class TR::GlobalSet::Set &&),0,TR,GlobalSet::Set
Set,Set(const class TR::GlobalSet::Set &),0,TR,GlobalSet::Set
get,get(uint32_t),1,TR,GlobalSet::Set
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,GlobalSet::DenseSet
jitPersistentFree,jitPersistentFree(void *),1,TR,GlobalSet::DenseSet
operator delete,operator delete(void *,size_t),1,TR,GlobalSet::DenseSet
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::DenseSet
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::DenseSet
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,GlobalSet::DenseSet
operator delete,operator delete(void *,TR::Region &),0,TR,GlobalSet::DenseSet
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,GlobalSet::DenseSet
operator delete[],operator delete[](void *,TR::Region &),0,TR,GlobalSet::DenseSet
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,GlobalSet::DenseSet
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::DenseSet
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,GlobalSet::DenseSet
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,GlobalSet::DenseSet
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,GlobalSet::DenseSet
operator new,operator new(size_t,TR::Region &),0,TR,GlobalSet::DenseSet
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,GlobalSet::DenseSet
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::DenseSet
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,GlobalSet::DenseSet
operator new[],operator new[](size_t,TR::Region &),1,TR,GlobalSet::DenseSet
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,GlobalSet::DenseSet
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,GlobalSet::DenseSet
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::DenseSet
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,GlobalSet::DenseSet
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::DenseSet
operator=,operator=(class TR::GlobalSet::Set &&),1,TR,GlobalSet::Set
operator=,operator=(const class TR::GlobalSet::Set &),0,TR,GlobalSet::Set
operator=,operator=(const class TR::GlobalSet::DenseSet &),0,TR,GlobalSet::DenseSet
operator=,operator=(class TR::GlobalSet::DenseSet &&),0,TR,GlobalSet::DenseSet
print,print(TR::Compilation *),1,TR,GlobalSet::Set
set,set(uint32_t),1,TR,GlobalSet::Set
~DenseSet,~DenseSet(),1,TR,GlobalSet::DenseSet
~Set,~Set(),1,TR,GlobalSet::Set
SparseSet,SparseSet(class TR::GlobalSet::SparseSet &&),1,TR,GlobalSet::SparseSet
SparseSet,SparseSet(TR::Region &),0,TR,GlobalSet::SparseSet
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,GlobalSet::SparseSet
jitPersistentFree,jitPersistentFree(void *),1,TR,GlobalSet::SparseSet
operator delete,operator delete(void *,size_t),1,TR,GlobalSet::SparseSet
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::SparseSet
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,GlobalSet::SparseSet
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::SparseSet
operator delete,operator delete(void *,TR::Region &),0,TR,GlobalSet::SparseSet
operator delete[],operator delete[](void *,TR::Region &),1,TR,GlobalSet::SparseSet
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::SparseSet
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::SparseSet
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,GlobalSet::SparseSet
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,GlobalSet::SparseSet
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::SparseSet
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,GlobalSet::SparseSet
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,GlobalSet::SparseSet
operator new,operator new(size_t,TR::Region &),0,TR,GlobalSet::SparseSet
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::SparseSet
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,GlobalSet::SparseSet
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,GlobalSet::SparseSet
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,GlobalSet::SparseSet
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::SparseSet
operator new[],operator new[](size_t,TR::Region &),0,TR,GlobalSet::SparseSet
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::SparseSet
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,GlobalSet::SparseSet
operator=,operator=(const class TR::GlobalSet::SparseSet &),0,TR,GlobalSet::SparseSet
operator=,operator=(class TR::GlobalSet::SparseSet &&),0,TR,GlobalSet::SparseSet
~SparseSet,~SparseSet(),1,TR,GlobalSet::SparseSet
aconst,aconst(TR::Node *,uintptrj_t),1,OMR,Node
buconst,buconst(uint8_t),1,OMR,Node
buconst,buconst(TR::Node *,uint8_t),0,OMR,Node
cconst,cconst(TR::Node *,uint16_t),1,OMR,Node
cconst,cconst(uint16_t),0,OMR,Node
createAddressNode,createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t,uint8_t),1,OMR,Node
createAddressNode,createAddressNode(TR::Node *,TR::ILOpCodes,uintptrj_t),0,OMR,Node
createStore,createStore(TR::Node *,TR::SymbolReference *,TR::Node *),1,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::SymbolReference *),1,OMR,Node
operator delete,operator delete(void *,TR::Region &),1,OMR,Optimizer
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Optimizer
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,Optimizer
operator new[],operator new[](size_t,TR::Region &),1,OMR,Optimizer
TransformUtil,TransformUtil(class OMR::TransformUtil &&),1,OMR,TransformUtil
TransformUtil,TransformUtil(const class OMR::TransformUtil &),0,OMR,TransformUtil
TransformUtil,TransformUtil(),0,OMR,TransformUtil
convertWidthToShift,convertWidthToShift(int32_t),1,OMR,TransformUtil
fieldShouldBeCompressed,fieldShouldBeCompressed(TR::Node *,TR::Compilation *),1,OMR,TransformUtil
isNoopConversion,isNoopConversion(TR::Compilation *,TR::Node *),1,OMR,TransformUtil
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,TransformUtil
jitPersistentFree,jitPersistentFree(void *),1,OMR,TransformUtil
operator delete,operator delete(void *,size_t),1,OMR,TransformUtil
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,TransformUtil
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,TransformUtil
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,TransformUtil
operator delete,operator delete(void *,TR::Region &),0,OMR,TransformUtil
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,TransformUtil
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,TransformUtil
operator delete[],operator delete[](void *,TR::Region &),0,OMR,TransformUtil
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,TransformUtil
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,TransformUtil
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,TransformUtil
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,TransformUtil
operator new,operator new(size_t,TR::Region &),0,OMR,TransformUtil
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,TransformUtil
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,TransformUtil
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,TransformUtil
operator new[],operator new[](size_t,TR::Region &),1,OMR,TransformUtil
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,TransformUtil
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,TransformUtil
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,TransformUtil
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,TransformUtil
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,TransformUtil
recursivelySetNodeVisitCount,recursivelySetNodeVisitCount(TR::Node *,vcount_t),1,OMR,TransformUtil
removeTree,removeTree(TR::Compilation *,TR::TreeTop *),1,OMR,TransformUtil
scalarizeAddressParameter,scalarizeAddressParameter(TR::Compilation *,TR::Node *,size_t,TR::DataType,TR::SymbolReference *,_Bool),1,OMR,TransformUtil
scalarizeArrayCopy,scalarizeArrayCopy(TR::Compilation *,TR::Node *,TR::TreeTop *,_Bool,_Bool &,TR::SymbolReference *,TR::SymbolReference *,_Bool),1,OMR,TransformUtil
self,self(),1,OMR,TransformUtil
transformDirectLoad,transformDirectLoad(TR::Compilation *,TR::Node *),1,OMR,TransformUtil
transformIndirectLoad,transformIndirectLoad(TR::Compilation *,TR::Node *),1,OMR,TransformUtil
transformIndirectLoadChain,transformIndirectLoadChain(TR::Compilation *,TR::Node *,TR::Node *,TR::class KnownObjectTable::Index,TR::Node **),1,OMR,TransformUtil
transformIndirectLoadChainAt,transformIndirectLoadChainAt(TR::Compilation *,TR::Node *,TR::Node *,uintptrj_t *,TR::Node **),1,OMR,TransformUtil
VPConstraint,VPConstraint(const class TR::VPConstraint &),1,TR,VPConstraint
VPConstraint,VPConstraint(class TR::VPConstraint &&),0,TR,VPConstraint
mustBeNotEqual,mustBeNotEqual(TR::VPConstraint *,OMR::ValuePropagation *),1,TR,VPConstraint
mustBeNotEqual,mustBeNotEqual(),0,TR,VPConstraint
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,VPConstraint
operator delete,operator delete(void *,size_t),0,TR,VPConstraint
operator delete[],operator delete[](void *,TR::Region &),1,TR,VPConstraint
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,VPConstraint
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,VPConstraint
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,VPConstraint
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,VPConstraint
operator new[],operator new[](size_t,TR::Region &),0,TR,VPConstraint
TR_DirectCallSite,TR_DirectCallSite(class TR_DirectCallSite &&),1,TR,DirectCallSite
TR_DirectCallSite,TR_DirectCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool),0,TR,DirectCallSite
findCallSiteTarget,findCallSiteTarget(class TR_CallStack *,class TR_InlinerBase *),1,TR,DirectCallSite
name,name(),1,TR,DirectCallSite
operator=,operator=(class TR_DirectCallSite &&),1,TR,DirectCallSite
operator=,operator=(const class TR_DirectCallSite &),0,TR,DirectCallSite
~TR_DirectCallSite,~TR_DirectCallSite(),1,TR,DirectCallSite
TR_CallStack,TR_CallStack(TR::Compilation *,TR::ResolvedMethodSymbol *,class TR_ResolvedMethod *,class TR_CallStack *,int32_t,_Bool),1,TR,CallStack
addAutomatic,addAutomatic(TR::AutomaticSymbol *),1,TR,CallStack
addInjectedBasicBlockTemp,addInjectedBasicBlockTemp(TR::SymbolReference *),1,TR,CallStack
addTemp,addTemp(TR::SymbolReference *),1,TR,CallStack
blockInfo,blockInfo(int32_t),1,TR,CallStack
commit,commit(),1,TR,CallStack
comp,comp(),1,TR,CallStack
initializeControlFlowInfo,initializeControlFlowInfo(TR::ResolvedMethodSymbol *),1,TR,CallStack
isAnywhereOnTheStack,isAnywhereOnTheStack(class TR_ResolvedMethod *,int32_t),1,TR,CallStack
isCurrentlyOnTheStack,isCurrentlyOnTheStack(class TR_ResolvedMethod *,int32_t),1,TR,CallStack
makeBasicBlockTempsAvailable,makeBasicBlockTempsAvailable(List<TR::SymbolReference> &),1,TR,CallStack
makeTempsAvailable,makeTempsAvailable(List<TR::SymbolReference> &),1,TR,CallStack
makeTempsAvailable,makeTempsAvailable(List<TR::SymbolReference> &,List<TR::SymbolReference> &),0,TR,CallStack
trHeapMemory,trHeapMemory(),1,TR,CallStack
trMemory,trMemory(),1,TR,CallStack
trPersistentMemory,trPersistentMemory(),1,TR,CallStack
trStackMemory,trStackMemory(),1,TR,CallStack
updateState,updateState(TR::Block *),1,TR,CallStack
~TR_CallStack,~TR_CallStack(),1,TR,CallStack
IsOSRFramesSizeUnderThreshold,IsOSRFramesSizeUnderThreshold(),1,TR,InlinerBase
TR_DumbInliner,TR_DumbInliner(TR::Optimizer *,TR::Optimization *,uint32_t,uint32_t),1,TR,DumbInliner
TR_InlineCall,TR_InlineCall(TR::Optimizer *,TR::Optimization *),1,TR,InlineCall
TR_InlinerBase,TR_InlinerBase(TR::Optimizer *,TR::Optimization *),1,TR,InlinerBase
addAdditionalGuard,addAdditionalGuard(TR::Node *,TR::ResolvedMethodSymbol *,class TR_OpaqueClassBlock *,TR::Block *,TR::Block *,TR::Block *,enum TR_VirtualGuardKind,enum TR_VirtualGuardTestType,_Bool,TR::CFG *),1,TR,InlinerBase
addGuardForVirtual,addGuardForVirtual(TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,TR::TreeTop *,TR::Node *,class TR_OpaqueClassBlock *,TR::TreeTop *,TR::TreeTop *,TR::TreeTop *,class TR_TransformInlinedFunction &,List<TR::SymbolReference> &,struct TR_VirtualGuardSelection *,TR::TreeTop **,struct TR_CallTarget *),1,TR,InlinerBase
allowBiggerMethods,allowBiggerMethods(),1,TR,InlinerBase
alwaysWorthInlining,alwaysWorthInlining(class TR_ResolvedMethod *,TR::Node *),1,TR,InlinerBase
analyzeCallSite,analyzeCallSite(class TR_CallStack *,TR::TreeTop *,TR::Node *,TR::Node *),1,TR,DumbInliner
applyPolicyToTargets,applyPolicyToTargets(class TR_CallStack *,struct TR_CallSite *),1,TR,InlinerBase
buildPrexArgInfoForOutermostMethod,buildPrexArgInfoForOutermostMethod(TR::ResolvedMethodSymbol *),1,TR,InlinerBase
callMustBeInlinedRegardlessOfSize,callMustBeInlinedRegardlessOfSize(struct TR_CallSite *),1,TR,InlinerBase
checkInlineableWithoutInitialCalleeSymbol,checkInlineableWithoutInitialCalleeSymbol(struct TR_CallSite *,TR::Compilation *),1,TR,InlinerBase
cleanup,cleanup(TR::ResolvedMethodSymbol *,_Bool),1,TR,InlinerBase
cloneChildren,cloneChildren(TR::Node *,TR::Node *,uint32_t),1,TR,InlinerBase
comp,comp(),1,TR,InlinerBase
createParmMap,createParmMap(TR::ResolvedMethodSymbol *,TR_LinkHead<struct TR_ParameterMapping> &),1,TR,InlinerBase
createVirtualGuard,createVirtualGuard(TR::Node *,TR::ResolvedMethodSymbol *,TR::TreeTop *,int16_t,class TR_OpaqueClassBlock *,_Bool,struct TR_VirtualGuardSelection *),1,TR,InlinerBase
exceedsSizeThreshold,exceedsSizeThreshold(struct TR_CallSite *,int,TR::Block *,TR_ByteCodeInfo &,int32_t,class TR_ResolvedMethod *,class TR_ResolvedMethod *,TR::Node *,_Bool),1,TR,InlinerBase
fe,fe(),1,TR,InlinerBase
findAndUpdateCallSiteInGraph,findAndUpdateCallSiteInGraph(class TR_CallStack *,TR_ByteCodeInfo &,TR::TreeTop *,TR::Node *,TR::Node *,struct TR_CallTarget *),1,TR,InlinerBase
firstPass,firstPass(),1,TR,InlinerBase
forceCalcInlining,forceCalcInlining(struct TR_CallTarget *),1,TR,InlinerBase
forceInline,forceInline(struct TR_CallTarget *),1,TR,InlinerBase
forceVarInitInlining,forceVarInitInlining(struct TR_CallTarget *),1,TR,InlinerBase
getBorderFrequencies,getBorderFrequencies(int32_t &,int32_t &,class TR_ResolvedMethod *,TR::Node *),1,TR,InlinerBase
getCurrentNumberOfNodes,getCurrentNumberOfNodes(),1,TR,InlinerBase
getMaxInliningCallSites,getMaxInliningCallSites(),1,TR,InlinerBase
getMaxRecursiveCallByteCodeSizeEstimate,getMaxRecursiveCallByteCodeSizeEstimate(),1,TR,InlinerBase
getNodeCountThreshold,getNodeCountThreshold(),1,TR,InlinerBase
getNumAsyncChecks,getNumAsyncChecks(),1,TR,InlinerBase
getOptimizer,getOptimizer(),1,TR,InlinerBase
getPolicy,getPolicy(),1,TR,InlinerBase
getSizeThreshold,getSizeThreshold(),1,TR,InlinerBase
getStoreToCachedPrivateStatic,getStoreToCachedPrivateStatic(),1,TR,InlinerBase
getSuccessorsWithGlobalLabels,getSuccessorsWithGlobalLabels(),1,TR,InlinerBase
getSymbolAndFindInlineTargets,getSymbolAndFindInlineTargets(class TR_CallStack *,struct TR_CallSite *,_Bool),1,TR,InlinerBase
getUtil,getUtil(),1,TR,InlinerBase
getVisitCount,getVisitCount(),1,TR,InlinerBase
heuristicForUsingOSR,heuristicForUsingOSR(TR::Node *,TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,_Bool),1,TR,InlinerBase
incCurrentNumberOfNodes,incCurrentNumberOfNodes(int32_t),1,TR,InlinerBase
initializeControlFlowInfo,initializeControlFlowInfo(class TR_CallStack *,TR::ResolvedMethodSymbol *),1,TR,InlinerBase
inlineCall,inlineCall(TR::TreeTop *,class TR_OpaqueClassBlock *,_Bool,class TR_PrexArgInfo *,int32_t),1,TR,InlineCall
inlineCallTarget,inlineCallTarget(class TR_CallStack *,struct TR_CallTarget *,_Bool,class TR_PrexArgInfo *,TR::TreeTop **),1,TR,InlinerBase
inlineCallTarget2,inlineCallTarget2(class TR_CallStack *,struct TR_CallTarget *,TR::TreeTop **,_Bool,int32_t),1,TR,InlinerBase
inlineCallTargets,inlineCallTargets(TR::ResolvedMethodSymbol *,class TR_CallStack *,class TR_InnerPreexistenceInfo *),1,TR,InlinerBase
inlineFromGraph,inlineFromGraph(class TR_CallStack *,struct TR_CallTarget *,class TR_InnerPreexistenceInfo *),1,TR,InlinerBase
inlineRecognizedMethod,inlineRecognizedMethod(TR::RecognizedMethod),1,TR,InlinerBase
inlineSynchronized,inlineSynchronized(),1,TR,InlinerBase
inlineVirtuals,inlineVirtuals(),1,TR,InlinerBase
isEDODisableInlinedProfilingInfo,isEDODisableInlinedProfilingInfo(),1,TR,InlinerBase
linkOSRCodeBlocks,linkOSRCodeBlocks(),1,TR,InlinerBase
operator=,operator=(const class TR_InlinerBase &),0,TR,InlinerBase
operator=,operator=(class TR_InlinerBase &&),0,TR,InlinerBase
operator=,operator=(class TR_DumbInliner &&),0,TR,DumbInliner
operator=,operator=(const class TR_DumbInliner &),0,TR,DumbInliner
operator=,operator=(class TR_InlineCall &&),0,TR,InlineCall
operator=,operator=(const class TR_InlineCall &),0,TR,InlineCall
performInlining,performInlining(TR::ResolvedMethodSymbol *),1,TR,InlinerBase
rematerializeCallArguments,rematerializeCallArguments(class TR_TransformInlinedFunction &,struct TR_VirtualGuardSelection *,TR::Node *,TR::Block *,TR::TreeTop *),1,TR,InlinerBase
replaceCallNode,replaceCallNode(TR::ResolvedMethodSymbol *,TR::Node *,rcount_t,TR::TreeTop *,TR::Node *,TR::Node *),1,TR,InlinerBase
replaceCallNodeReferences,replaceCallNodeReferences(TR::Node *,TR::Node *,uint32_t,TR::Node *,TR::Node *,rcount_t &),1,TR,InlinerBase
scaleSizeBasedOnBlockFrequency,scaleSizeBasedOnBlockFrequency(int32_t,int32_t,int32_t,class TR_ResolvedMethod *,TR::Node *,int32_t),1,TR,InlinerBase
setFirstPass,setFirstPass(_Bool),1,TR,InlinerBase
setInlineSynchronized,setInlineSynchronized(_Bool),1,TR,InlinerBase
setInlineThresholds,setInlineThresholds(TR::ResolvedMethodSymbol *),1,TR,InlinerBase
setInlineVirtuals,setInlineVirtuals(_Bool),1,TR,InlinerBase
setPolicy,setPolicy(class OMR_InlinerPolicy *),1,TR,InlinerBase
setSizeThreshold,setSizeThreshold(uint32_t),1,TR,InlinerBase
setStoreToCachedPrivateStatic,setStoreToCachedPrivateStatic(TR::Node *),1,TR,InlinerBase
setUtil,setUtil(class OMR_InlinerUtil *),1,TR,InlinerBase
supportsMultipleTargetInlining,supportsMultipleTargetInlining(),1,TR,InlinerBase
trHeapMemory,trHeapMemory(),1,TR,InlinerBase
trMemory,trMemory(),1,TR,InlinerBase
trPersistentMemory,trPersistentMemory(),1,TR,InlinerBase
trStackMemory,trStackMemory(),1,TR,InlinerBase
tracer,tracer(),1,TR,InlinerBase
tryToGenerateILForMethod,tryToGenerateILForMethod(TR::ResolvedMethodSymbol *,TR::ResolvedMethodSymbol *,struct TR_CallTarget *),1,TR,InlinerBase
tryToInline,tryToInline(char *,struct TR_CallTarget *),1,TR,DumbInliner
tryToInlineTrivialMethod,tryToInlineTrivialMethod(class TR_CallStack *,struct TR_CallTarget *),1,TR,InlinerBase
~TR_DumbInliner,~TR_DumbInliner(),1,TR,DumbInliner
~TR_InlineCall,~TR_InlineCall(),1,TR,InlineCall
~TR_InlinerBase,~TR_InlinerBase(),1,TR,InlinerBase
TR_FunctionPointerCallSite,TR_FunctionPointerCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool),1,TR,FunctionPointerCallSite
TR_IndirectCallSite,TR_IndirectCallSite(const class TR_IndirectCallSite &),1,TR,IndirectCallSite
TR_IndirectCallSite,TR_IndirectCallSite(class TR_IndirectCallSite &&),0,TR,IndirectCallSite
TR_IndirectCallSite,TR_IndirectCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool),0,TR,IndirectCallSite
addTargetIfMethodIsNotOverriden,addTargetIfMethodIsNotOverriden(class TR_InlinerBase *),1,TR,IndirectCallSite
addTargetIfMethodIsNotOverridenInReceiversHierarchy,addTargetIfMethodIsNotOverridenInReceiversHierarchy(class TR_InlinerBase *),1,TR,IndirectCallSite
addTargetIfThereIsSingleImplementer,addTargetIfThereIsSingleImplementer(class TR_InlinerBase *),1,TR,IndirectCallSite
extractAndLogClassArgument,extractAndLogClassArgument(class TR_InlinerBase *),1,TR,IndirectCallSite
findCallSiteTarget,findCallSiteTarget(class TR_CallStack *,class TR_InlinerBase *),1,TR,IndirectCallSite
findCallTargetUsingArgumentPreexistence,findCallTargetUsingArgumentPreexistence(class TR_InlinerBase *),1,TR,IndirectCallSite
findSingleJittedImplementer,findSingleJittedImplementer(class TR_InlinerBase *),1,TR,IndirectCallSite
getClassFromArgInfo,getClassFromArgInfo(),1,TR,IndirectCallSite
getClassFromMethod,getClassFromMethod(),1,TR,IndirectCallSite
getResolvedMethod,getResolvedMethod(class TR_OpaqueClassBlock *),1,TR,IndirectCallSite
hasFixedTypeArgInfo,hasFixedTypeArgInfo(),1,TR,IndirectCallSite
hasResolvedTypeArgInfo,hasResolvedTypeArgInfo(),1,TR,IndirectCallSite
name,name(),1,TR,IndirectCallSite
operator=,operator=(const class TR_IndirectCallSite &),1,TR,IndirectCallSite
operator=,operator=(class TR_IndirectCallSite &&),0,TR,IndirectCallSite
operator=,operator=(const class TR_FunctionPointerCallSite &),0,TR,FunctionPointerCallSite
operator=,operator=(class TR_FunctionPointerCallSite &&),0,TR,FunctionPointerCallSite
tryToRefineReceiverClassBasedOnResolvedTypeArgInfo,tryToRefineReceiverClassBasedOnResolvedTypeArgInfo(class TR_InlinerBase *),1,TR,IndirectCallSite
~TR_FunctionPointerCallSite,~TR_FunctionPointerCallSite(),1,TR,FunctionPointerCallSite
~TR_IndirectCallSite,~TR_IndirectCallSite(),1,TR,IndirectCallSite
TR_InlinerTracer,TR_InlinerTracer(TR::Compilation *,class TR_FrontEnd *,TR::Optimization *),1,TR,InlinerTracer
TR_LogTracer,TR_LogTracer(TR::Compilation *,TR::Optimization *),1,TR,LogTracer
alwaysTraceM,alwaysTraceM(const char *),1,TR,LogTracer
comp,comp(),1,TR,LogTracer
debugLevel,debugLevel(),1,TR,LogTracer
dumpCallGraphs,dumpCallGraphs(TR_LinkHead<struct TR_CallTarget> *),1,TR,InlinerTracer
dumpCallSite,dumpCallSite(struct TR_CallSite *,const char *),1,TR,InlinerTracer
dumpCallStack,dumpCallStack(class TR_CallStack *,const char *),1,TR,InlinerTracer
dumpCallTarget,dumpCallTarget(struct TR_CallTarget *,const char *),1,TR,InlinerTracer
dumpDeadCalls,dumpDeadCalls(TR_LinkHead<struct TR_CallSite> *),1,TR,InlinerTracer
dumpInline,dumpInline(TR_LinkHead<struct TR_CallTarget> *,const char *),1,TR,InlinerTracer
dumpPartialInline,dumpPartialInline(class TR_InlineBlocks *),1,TR,InlinerTracer
dumpPrexArgInfo,dumpPrexArgInfo(class TR_PrexArgInfo *),1,TR,InlinerTracer
fe,fe(),1,TR,InlinerTracer
getFailureReasonString,getFailureReasonString(enum TR_InlinerFailureReason),1,TR,InlinerTracer
getGuardKindString,getGuardKindString(struct TR_VirtualGuardSelection *),1,TR,InlinerTracer
getGuardTypeString,getGuardTypeString(struct TR_VirtualGuardSelection *),1,TR,InlinerTracer
heuristicLevel,heuristicLevel(),1,TR,LogTracer
insertCounter,insertCounter(enum TR_InlinerFailureReason,TR::TreeTop *),1,TR,InlinerTracer
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,InlinerTracer
jitPersistentFree,jitPersistentFree(void *),1,TR,InlinerTracer
operator delete,operator delete(void *,TR::Region &),1,TR,InlinerTracer
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,InlinerTracer
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,InlinerTracer
operator delete,operator delete(void *,size_t),0,TR,InlinerTracer
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,InlinerTracer
operator delete[],operator delete[](void *,TR::Region &),1,TR,InlinerTracer
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,InlinerTracer
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,InlinerTracer
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,InlinerTracer
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,InlinerTracer
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,InlinerTracer
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,InlinerTracer
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,InlinerTracer
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,InlinerTracer
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,InlinerTracer
operator new,operator new(size_t,TR::Region &),0,TR,InlinerTracer
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,TR,InlinerTracer
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,InlinerTracer
operator new[],operator new[](size_t,TR::Region &),0,TR,InlinerTracer
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,InlinerTracer
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,InlinerTracer
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,InlinerTracer
partialLevel,partialLevel(),1,TR,InlinerTracer
partialTraceM,partialTraceM(const char *),1,TR,InlinerTracer
setTraceLevelToDebug,setTraceLevelToDebug(),1,TR,LogTracer
trHeapMemory,trHeapMemory(),1,TR,InlinerTracer
trMemory,trMemory(),1,TR,InlinerTracer
trPersistentMemory,trPersistentMemory(),1,TR,InlinerTracer
trStackMemory,trStackMemory(),1,TR,InlinerTracer
TR_Dominators,TR_Dominators(class TR_Dominators &&),1,TR,Dominators
TR_Dominators,TR_Dominators(const class TR_Dominators &),0,TR,Dominators
operator new,operator new(size_t,class TR_PersistentMemory *),1,TR,Dominators
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Dominators
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,Dominators
operator new[],operator new[](size_t,TR::Region &),0,TR,Dominators
TR_RegisterCandidate,TR_RegisterCandidate(class TR_RegisterCandidate &&),1,TR,RegisterCandidate
TR_RegisterCandidate,TR_RegisterCandidate(TR::SymbolReference *,TR::Region &),0,TR,RegisterCandidate
addAllBlocks,addAllBlocks(),1,TR,RegisterCandidate
addAllBlocksInStructure,addAllBlocksInStructure(class TR_Structure *,TR::Compilation *,const char *,vcount_t,_Bool),1,TR,RegisterCandidate
addBlock,addBlock(TR::Block *,int32_t,class TR_Memory *,_Bool),1,TR,RegisterCandidate
addLoopExitBlock,addLoopExitBlock(TR::Block *),1,TR,RegisterCandidate
addLoopWithHole,addLoopWithHole(class TR_Structure *),1,TR,RegisterCandidate
addStore,addStore(TR::TreeTop *),1,TR,RegisterCandidate
canAllocateDespiteAliases,canAllocateDespiteAliases(TR::Compilation *),1,TR,RegisterCandidate
canBeReprioritized,canBeReprioritized(),1,TR,RegisterCandidate
countNumberOfLoadsAndStoresInBlocks,countNumberOfLoadsAndStoresInBlocks(List<TR::Block> *),1,TR,RegisterCandidate
dontAssignVMThreadRegister,dontAssignVMThreadRegister(),1,TR,RegisterCandidate
extendLiveRangesForLiveOnExit,extendLiveRangesForLiveOnExit(TR::Compilation *,TR::Block **,TR_Array<TR::Block *> &),1,TR,RegisterCandidate
extendedLiveRange,extendedLiveRange(),1,TR,RegisterCandidate
find,find(TR::Block *),1,TR,RegisterCandidate
getAvailableOnExit,getAvailableOnExit(),1,TR,RegisterCandidate
getBlocksLiveOnEntry,getBlocksLiveOnEntry(),1,TR,RegisterCandidate
getBlocksLiveOnExit,getBlocksLiveOnExit(),1,TR,RegisterCandidate
getBlocksLiveWithinGenSetsOnly,getBlocksLiveWithinGenSetsOnly(),1,TR,RegisterCandidate
getBlocksVisited,getBlocksVisited(),1,TR,RegisterCandidate
getDataType,getDataType(),1,TR,RegisterCandidate
getFailedToAssignToARegister,getFailedToAssignToARegister(),1,TR,RegisterCandidate
getGlobalRegisterNumber,getGlobalRegisterNumber(),1,TR,RegisterCandidate
getHighGlobalRegisterNumber,getHighGlobalRegisterNumber(),1,TR,RegisterCandidate
getLastLoad,getLastLoad(),1,TR,RegisterCandidate
getLoopsWithHoles,getLoopsWithHoles(),1,TR,RegisterCandidate
getLowGlobalRegisterNumber,getLowGlobalRegisterNumber(),1,TR,RegisterCandidate
getMostRecentValue,getMostRecentValue(),1,TR,RegisterCandidate
getRegisterKinds,getRegisterKinds(),1,TR,RegisterCandidate
getReprioritized,getReprioritized(),1,TR,RegisterCandidate
getRestoreSymbolReference,getRestoreSymbolReference(),1,TR,RegisterCandidate
getSplitSymbolReference,getSplitSymbolReference(),1,TR,RegisterCandidate
getStores,getStores(),1,TR,RegisterCandidate
getSymbol,getSymbol(),1,TR,RegisterCandidate
getSymbolReference,getSymbolReference(),1,TR,RegisterCandidate
getType,getType(),1,TR,RegisterCandidate
getValueModified,getValueModified(),1,TR,RegisterCandidate
getWeight,getWeight(),1,TR,RegisterCandidate
hasBlock,hasBlock(TR::Block *),1,TR,RegisterCandidate
hasLoopExitBlock,hasLoopExitBlock(TR::Block *),1,TR,RegisterCandidate
hasSameGlobalRegisterNumberAs,hasSameGlobalRegisterNumberAs(TR::Node *,TR::Compilation *),1,TR,RegisterCandidate
highWordZero,highWordZero(),1,TR,RegisterCandidate
initialBlocksWeightComputed,initialBlocksWeightComputed(),1,TR,RegisterCandidate
is8BitGlobalGPR,is8BitGlobalGPR(),1,TR,RegisterCandidate
isLiveAcrossExceptionEdge,isLiveAcrossExceptionEdge(),1,TR,RegisterCandidate
operator=,operator=(class TR_RegisterCandidate &&),1,TR,RegisterCandidate
prevBlockTooRegisterConstrained,prevBlockTooRegisterConstrained(TR::Compilation *,TR::Block *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &),1,TR,RegisterCandidate
processLiveOnEntryBlocks,processLiveOnEntryBlocks(TR::Block **,int32_t *,TR::Compilation *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &,class TR_BitVector *,TR_Array<TR::Block *> &,_Bool),1,TR,RegisterCandidate
rcNeeds2Regs,rcNeeds2Regs(TR::Compilation *),1,TR,RegisterCandidate
recalculateWeight,recalculateWeight(TR::Block **,int32_t *,TR::Compilation *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &,class TR_BitVector *,TR_Array<TR::Block *> &),1,TR,RegisterCandidate
removeAssignedCandidateFromLoop,removeAssignedCandidateFromLoop(TR::Compilation *,class TR_Structure *,int32_t,class TR_BitVector *,class TR_BitVector *,_Bool),1,TR,RegisterCandidate
removeBlock,removeBlock(TR::Block *),1,TR,RegisterCandidate
removeLoopExitBlock,removeLoopExitBlock(TR::Block *),1,TR,RegisterCandidate
setAvailableOnExit,setAvailableOnExit(class TR_BitVector *),1,TR,RegisterCandidate
setBlocksVisited,setBlocksVisited(class TR_BitVector *),1,TR,RegisterCandidate
setDontAssignVMThreadRegister,setDontAssignVMThreadRegister(_Bool),1,TR,RegisterCandidate
setExtendedLiveRange,setExtendedLiveRange(_Bool),1,TR,RegisterCandidate
setGlobalRegisterNumber,setGlobalRegisterNumber(TR_GlobalRegisterNumber),1,TR,RegisterCandidate
setHighGlobalRegisterNumber,setHighGlobalRegisterNumber(TR_GlobalRegisterNumber),1,TR,RegisterCandidate
setHighWordZero,setHighWordZero(_Bool),1,TR,RegisterCandidate
setInitialBlocksWeightComputed,setInitialBlocksWeightComputed(_Bool),1,TR,RegisterCandidate
setIs8BitGlobalGPR,setIs8BitGlobalGPR(_Bool),1,TR,RegisterCandidate
setLastLoad,setLastLoad(TR::Node *),1,TR,RegisterCandidate
setLiveAcrossExceptionEdge,setLiveAcrossExceptionEdge(_Bool),1,TR,RegisterCandidate
setLowGlobalRegisterNumber,setLowGlobalRegisterNumber(TR_GlobalRegisterNumber),1,TR,RegisterCandidate
setMaxReprioritized,setMaxReprioritized(uint8_t),1,TR,RegisterCandidate
setMostRecentValue,setMostRecentValue(TR::Node *),1,TR,RegisterCandidate
setReprioritized,setReprioritized(),1,TR,RegisterCandidate
setRestoreSymbolReference,setRestoreSymbolReference(TR::SymbolReference *),1,TR,RegisterCandidate
setSplitSymbolReference,setSplitSymbolReference(TR::SymbolReference *),1,TR,RegisterCandidate
setValueModified,setValueModified(_Bool),1,TR,RegisterCandidate
setWeight,setWeight(TR::Block **,int32_t *,TR::Compilation *,TR_Array<int32_t> &,TR_Array<int32_t> &,TR_Array<int32_t> &,class TR_BitVector *,TR_Array<TR::Block *> &,class TR_BitVector &,class TR_BitVector &),1,TR,RegisterCandidate
symbolIsLive,symbolIsLive(TR::Block *),1,TR,RegisterCandidate
TR_TrivialInliner,TR_TrivialInliner(class TR_TrivialInliner &&),1,TR,TrivialInliner
TR_TrivialInliner,TR_TrivialInliner(const class TR_TrivialInliner &),0,TR,TrivialInliner
TR_TrivialInliner,TR_TrivialInliner(TR::OptimizationManager *),0,TR,TrivialInliner
create,create(TR::OptimizationManager *),1,TR,TrivialInliner
operator=,operator=(class TR_TrivialInliner &&),0,TR,TrivialInliner
operator=,operator=(const class TR_TrivialInliner &),0,TR,TrivialInliner
~TR_TrivialInliner,~TR_TrivialInliner(),1,TR,TrivialInliner
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Symbol
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Symbol
operator new[],operator new[](size_t,TR::Region &),1,OMR,Symbol
ParameterSymbol,ParameterSymbol(TR::DataType,_Bool,int32_t),1,OMR,ParameterSymbol
ParameterSymbol,ParameterSymbol(class OMR::ParameterSymbol &&),0,OMR,ParameterSymbol
getPendingPushSymRefs,getPendingPushSymRefs(int32_t),1,OMR,ResolvedMethodSymbol
getPendingPushSymRefs,getPendingPushSymRefs(),0,OMR,ResolvedMethodSymbol
gatherLocalUseInfo,gatherLocalUseInfo(TR::Block *,class TR_BitVector &,TR_ScratchList<TR_Pair<TR::Block, class TR_BitVector> > *,vcount_t,_Bool),1,OMR,AliasBuilder
operator delete,operator delete(void *,TR::Region &),1,OMR,AliasBuilder
operator=,operator=(const class OMR::AliasBuilder &),1,OMR,AliasBuilder
operator=,operator=(class OMR::AliasBuilder &&),0,OMR,AliasBuilder
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Compilation
GCRegisterMap,GCRegisterMap(const class OMR::GCRegisterMap &),1,OMR,GCRegisterMap
GCRegisterMap,GCRegisterMap(class OMR::GCRegisterMap &&),0,OMR,GCRegisterMap
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,GCRegisterMap
operator delete,operator delete(void *,size_t),0,OMR,GCRegisterMap
operator delete[],operator delete[](void *,TR::Region &),1,OMR,GCRegisterMap
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,GCRegisterMap
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,GCRegisterMap
operator new[],operator new[](size_t,TR::Region &),0,OMR,GCRegisterMap
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,GCStackAtlas
operator delete,operator delete(void *,TR::Region &),0,OMR,GCStackAtlas
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,GCStackAtlas
operator new,operator new(size_t,TR::Region &),0,OMR,GCStackAtlas
create,create(TR::Node *,TR::ILOpCodes,uint16_t,int32_t,TR::TreeTop *),1,OMR,Node
createWithSymRef,createWithSymRef(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,uintptr_t,TR::SymbolReference *),1,OMR,Node
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
sconst,sconst(int16_t),1,OMR,Node
sconst,sconst(TR::Node *,int16_t),0,OMR,Node
SymbolReference,SymbolReference(const class TR::SymbolReference &),0,TR,SymbolReference
SymbolReference,SymbolReference(class TR::SymbolReference &&),0,TR,SymbolReference
operator delete,operator delete(void *,size_t),1,OMR,SymbolReference
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,SymbolReference
isNonHelper,isNonHelper(TR::SymbolReference *,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),1,OMR,SymbolReferenceTable
isNonHelper,isNonHelper(int32_t,enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),0,OMR,SymbolReferenceTable
operator delete,operator delete(void *,size_t),1,OMR,SymbolReferenceTable
TR_SymRefIterator,TR_SymRefIterator(const class TR_SymRefIterator &),1,TR,SymRefIterator
TR_SymRefIterator,TR_SymRefIterator(class TR_SymRefIterator &&),0,TR,SymRefIterator
TR_SymRefIterator,TR_SymRefIterator(class TR_BitVector &,TR::SymbolReferenceTable *),0,TR,SymRefIterator
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,AliasBuilder
Node,Node(TR::Node *,uint16_t),1,OMR,Node
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,SymbolReference
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,OMR,SymbolReferenceTable
AutomaticSymbol,AutomaticSymbol(class TR::AutomaticSymbol &&),0,TR,AutomaticSymbol
AutomaticSymbol,AutomaticSymbol(const class TR::AutomaticSymbol &),0,TR,AutomaticSymbol
RegisterMappedSymbol,RegisterMappedSymbol(const class OMR::RegisterMappedSymbol &),1,OMR,RegisterMappedSymbol
RegisterMappedSymbol,RegisterMappedSymbol(class OMR::RegisterMappedSymbol &&),0,OMR,RegisterMappedSymbol
isOSRRelatedNode,isOSRRelatedNode(TR::Node *,TR_ByteCodeInfo &),1,OMR,ResolvedMethodSymbol
isOSRRelatedNode,isOSRRelatedNode(TR::Node *),0,OMR,ResolvedMethodSymbol
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Compilation
operator new,operator new(size_t,TR::Region &),1,OMR,Compilation
TR_IGBase,TR_IGBase(class TR_IGBase &&),1,TR,IGBase
TR_IGBase,TR_IGBase(),0,TR,IGBase
TR_InterferenceGraph,TR_InterferenceGraph(TR::Compilation *,int32_t),1,TR,InterferenceGraph
operator=,operator=(const class TR_IGBase &),1,TR,IGBase
operator=,operator=(class TR_IGBase &&),0,TR,IGBase
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Symbol
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Symbol
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Symbol
LabelSymbol,LabelSymbol(class TR::LabelSymbol &&),0,TR,LabelSymbol
LabelSymbol,LabelSymbol(const class TR::LabelSymbol &),0,TR,LabelSymbol
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Symbol
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,TR,Method
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Method
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Method
operator delete[],operator delete[](void *,TR::Region &),0,TR,Method
ParameterSymbol,ParameterSymbol(class TR::ParameterSymbol &&),0,TR,ParameterSymbol
ParameterSymbol,ParameterSymbol(const class TR::ParameterSymbol &),0,TR,ParameterSymbol
operator delete[],operator delete[](void *,TR::Region &),1,OMR,Symbol
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Symbol
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,OMR,Symbol
Block,Block(class TR_Memory *),1,OMR,Block
Block,Block(const class OMR::Block &),0,OMR,Block
ParameterSymbol,ParameterSymbol(const class OMR::ParameterSymbol &),1,OMR,ParameterSymbol
ResolvedMethodSymbol,ResolvedMethodSymbol(class OMR::ResolvedMethodSymbol &&),1,OMR,ResolvedMethodSymbol
ResolvedMethodSymbol,ResolvedMethodSymbol(const class OMR::ResolvedMethodSymbol &),0,OMR,ResolvedMethodSymbol
ResolvedMethodSymbol,ResolvedMethodSymbol(class TR::ResolvedMethodSymbol &&),0,TR,ResolvedMethodSymbol
ResolvedMethodSymbol,ResolvedMethodSymbol(const class TR::ResolvedMethodSymbol &),0,TR,ResolvedMethodSymbol
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Machine
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Machine
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Machine
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Machine
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Machine
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Machine
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Register
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Register
operator new[],operator new[](size_t,TR::Region &),0,OMR,Register
Instruction,Instruction(class OMR::Instruction &&),1,OMR,Instruction
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,Instruction
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Instruction
Linkage,Linkage(class OMR::Linkage &&),1,OMR,Linkage
Linkage,Linkage(const class OMR::Linkage &),0,OMR,Linkage
Linkage,Linkage(),0,OMR,Linkage
Linkage,Linkage(class OMR::X86::Linkage &&),0,OMR,X86::Linkage
Linkage,Linkage(const class OMR::X86::Linkage &),0,OMR,X86::Linkage
Linkage,Linkage(TR::CodeGenerator *),0,OMR,X86::Linkage
alignLocalObjectWithCollectedFields,alignLocalObjectWithCollectedFields(uint32_t &),1,OMR,X86::Linkage
alignLocalObjectWithoutCollectedFields,alignLocalObjectWithoutCollectedFields(uint32_t &),1,OMR,X86::Linkage
argumentRegisterKind,argumentRegisterKind(TR::Node *),1,OMR,Linkage
associatePreservedRegisters,associatePreservedRegisters(TR::RegisterDependencyConditions *,TR::Register *),1,OMR,X86::Linkage
buildDirectDispatch,buildDirectDispatch(TR::Node *,_Bool),1,OMR,X86::Linkage
buildIndirectDispatch,buildIndirectDispatch(TR::Node *),1,OMR,X86::Linkage
cg,cg(),1,OMR,X86::Linkage
coerceFPReturnValueToXMMR,coerceFPReturnValueToXMMR(TR::Node *,TR::RegisterDependencyConditions *,TR::MethodSymbol *,TR::Register *),1,OMR,X86::Linkage
comp,comp(),1,OMR,X86::Linkage
composeSavesRestores,composeSavesRestores(TR::Instruction *,int32_t,int32_t,int32_t,int32_t,_Bool),1,OMR,Linkage
copyGlRegDepsToParameterSymbols,copyGlRegDepsToParameterSymbols(TR::Node *,TR::CodeGenerator *),1,OMR,X86::Linkage
copyLinkageInfoToParameterSymbols,copyLinkageInfoToParameterSymbols(),1,OMR,X86::Linkage
copyStackParametersToLinkageRegisters,copyStackParametersToLinkageRegisters(TR::Instruction *),1,OMR,X86::Linkage
createEpilogue,createEpilogue(TR::Instruction *),1,OMR,Linkage
createPrologue,createPrologue(TR::Instruction *),1,OMR,Linkage
deallocateFrameIfNeeded,deallocateFrameIfNeeded(TR::Instruction *,int32_t),1,OMR,X86::Linkage
ensureMinimumFirstInstructionSize,ensureMinimumFirstInstructionSize(uint8_t),1,OMR,X86::Linkage
fe,fe(),1,OMR,X86::Linkage
findReturnRegisterFromDependencies,findReturnRegisterFromDependencies(TR::Node *,TR::RegisterDependencyConditions *,TR::MethodSymbol *,_Bool),1,OMR,X86::Linkage
flushArguments,flushArguments(TR::Instruction *,TR::ResolvedMethodSymbol *,_Bool,_Bool),1,OMR,X86::Linkage
flushArguments,flushArguments(TR::Node *,uint8_t *,_Bool,int32_t *,_Bool,_Bool),0,OMR,X86::Linkage
fullRegisterMovType,fullRegisterMovType(TR::Register *),1,OMR,X86::Linkage
getCached512KStaticSymRef,getCached512KStaticSymRef(uint32_t),1,OMR,Linkage
getCachedCRENTSymRef,getCachedCRENTSymRef(),1,OMR,Linkage
getCachedPrivateStaticSymRef,getCachedPrivateStaticSymRef(),1,OMR,Linkage
getCachedStaticSymRef,getCachedStaticSymRef(),1,OMR,Linkage
getCodeNum,getCodeNum(),1,OMR,Linkage
getDataNum,getDataNum(),1,OMR,Linkage
getFormalParameterGlobalRegister,getFormalParameterGlobalRegister(TR::ParameterSymbol *),1,OMR,Linkage
getInRegisterNumberForParameter,getInRegisterNumberForParameter(TR::Node *,uint32_t),1,OMR,Linkage
getKilledRegisters,getKilledRegisters(TR::Node *),1,OMR,Linkage
getMainBodyLogicalParameterList,getMainBodyLogicalParameterList(),1,OMR,Linkage
getMinimumFirstInstructionSize,getMinimumFirstInstructionSize(),1,OMR,X86::Linkage
getNumWSABuckets,getNumWSABuckets(),1,OMR,Linkage
getNumberOfAllocatedOutgoingArgumentAreas,getNumberOfAllocatedOutgoingArgumentAreas(),1,OMR,Linkage
getProperties,getProperties(),1,OMR,X86::Linkage
getRegisterSaveSize,getRegisterSaveSize(),1,OMR,Linkage
getRightToLeft,getRightToLeft(),1,OMR,Linkage
getSavedRegisters,getSavedRegisters(TR::Node *,int32_t),1,OMR,Linkage
getStatNum,getStatNum(),1,OMR,Linkage
hasToBeOnStack,hasToBeOnStack(TR::ParameterSymbol *),1,OMR,Linkage
isAddressOfPrivateStaticSymRef,isAddressOfPrivateStaticSymRef(TR::SymbolReference *),1,OMR,Linkage
isAddressOfStaticSymRef,isAddressOfStaticSymRef(TR::SymbolReference *),1,OMR,Linkage
isAlwaysInlined,isAlwaysInlined(TR::Node *),1,OMR,Linkage
isArgumentListSymbol,isArgumentListSymbol(TR::Symbol *,TR::Compilation *),1,OMR,Linkage
isFloat,isFloat(TR_MovDataTypes),1,OMR,X86::Linkage
isPointerToPrivateStaticAddress,isPointerToPrivateStaticAddress(TR::SymbolReference *),1,OMR,Linkage
isRecognizedBuiltin,isRecognizedBuiltin(TR::Compilation *,TR::Node *),1,OMR,Linkage
isSpecialNonVolatileArgumentRegister,isSpecialNonVolatileArgumentRegister(int8_t),1,OMR,Linkage
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,Linkage
jitPersistentFree,jitPersistentFree(void *),1,OMR,Linkage
loadArguments,loadArguments(TR::Instruction *,TR::ResolvedMethodSymbol *),1,OMR,X86::Linkage
loadArguments,loadArguments(TR::Node *,uint8_t *,_Bool,int32_t *,_Bool),0,OMR,X86::Linkage
machine,machine(),1,OMR,X86::Linkage
mapCompactedStack,mapCompactedStack(TR::ResolvedMethodSymbol *),1,OMR,X86::Linkage
mapIncomingParms,mapIncomingParms(TR::ResolvedMethodSymbol *),1,OMR,X86::Linkage
mapPreservedRegistersToStackOffsets,mapPreservedRegistersToStackOffsets(int32_t *,int32_t &,class TR_BitVector *&),1,OMR,Linkage
mapSingleAutomatic,mapSingleAutomatic(TR::AutomaticSymbol *,uint32_t &),1,OMR,Linkage
mapSingleAutomatic,mapSingleAutomatic(TR::AutomaticSymbol *,uint32_t,uint32_t &),0,OMR,X86::Linkage
mapStack,mapStack(TR::ResolvedMethodSymbol *),1,OMR,Linkage
movOpcodes,movOpcodes(TR_MovOperandTypes,TR_MovDataTypes),1,OMR,X86::Linkage
movRegisterKind,movRegisterKind(TR_MovDataTypes),1,OMR,X86::Linkage
movType,movType(TR::DataType),1,OMR,X86::Linkage
needsFrameDeallocation,needsFrameDeallocation(),1,OMR,X86::Linkage
numArgumentRegisters,numArgumentRegisters(enum TR_RegisterKinds),1,OMR,Linkage
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Linkage
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Linkage
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Linkage
operator delete,operator delete(void *,size_t),0,OMR,Linkage
operator delete,operator delete(void *,TR::Region &),0,OMR,Linkage
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Linkage
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Linkage
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Linkage
operator delete[],operator delete[](void *,TR::Region &),0,OMR,Linkage
operator new,operator new(size_t,TR::Region &),1,OMR,Linkage
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Linkage
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Linkage
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Linkage
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,Linkage
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Linkage
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,Linkage
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Linkage
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,Linkage
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Linkage
operator new[],operator new[](size_t,TR::Region &),0,OMR,Linkage
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,Linkage
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,Linkage
operator=,operator=(class OMR::Linkage &&),1,OMR,Linkage
operator=,operator=(const class OMR::Linkage &),0,OMR,Linkage
operator=,operator=(class OMR::X86::Linkage &&),0,OMR,X86::Linkage
operator=,operator=(const class OMR::X86::Linkage &),0,OMR,X86::Linkage
operator=,operator=(class TR::Linkage &&),0,TR,Linkage
operator=,operator=(const class TR::Linkage &),0,TR,Linkage
paramMovType,paramMovType(TR::ParameterSymbol *),1,OMR,X86::Linkage
preserveForInlining,preserveForInlining(uint8_t),1,OMR,Linkage
restorePreservedRegister,restorePreservedRegister(TR::Instruction *,int32_t,int32_t),1,OMR,Linkage
safeToUseCachedPrivateStaticSymRef,safeToUseCachedPrivateStaticSymRef(),1,OMR,Linkage
savePreservedRegister,savePreservedRegister(TR::Instruction *,int32_t,int32_t),1,OMR,Linkage
self,self(),1,OMR,Linkage
setParameterLinkageRegisterIndex,setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *),1,OMR,Linkage
setParameterLinkageRegisterIndex,setParameterLinkageRegisterIndex(TR::ResolvedMethodSymbol *,List<TR::ParameterSymbol> &),0,OMR,Linkage
stopUsingKilledRegisters,stopUsingKilledRegisters(TR::RegisterDependencyConditions *,TR::Register *),1,OMR,X86::Linkage
storeArguments,storeArguments(TR::Instruction *,TR::ResolvedMethodSymbol *),1,OMR,X86::Linkage
storeArguments,storeArguments(TR::Node *,uint8_t *,_Bool,int32_t *),0,OMR,X86::Linkage
trHeapMemory,trHeapMemory(),1,OMR,X86::Linkage
trMemory,trMemory(),1,OMR,X86::Linkage
trStackMemory,trStackMemory(),1,OMR,X86::Linkage
useCachedStaticAreaAddresses,useCachedStaticAreaAddresses(TR::Compilation *),1,OMR,Linkage
usedCachedStaticSymRef,usedCachedStaticSymRef(),1,OMR,Linkage
~Linkage,~Linkage(),1,OMR,Linkage
CFG,CFG(const class TR::CFG &),0,TR,CFG
CFG,CFG(class TR::CFG &&),0,TR,CFG
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,CodeGenerator
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Compilation
InliningIlGenRequest,InliningIlGenRequest(class TR::InliningIlGenRequest &&),1,TR,InliningIlGenRequest
InliningIlGenRequest,InliningIlGenRequest(const class TR::InliningIlGenRequest &),0,TR,InliningIlGenRequest
StaticSymbol,StaticSymbol(class TR::StaticSymbol &&),0,TR,StaticSymbol
StaticSymbol,StaticSymbol(const class TR::StaticSymbol &),0,TR,StaticSymbol
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Symbol
Optimization,Optimization(class OMR::Optimization &&),1,OMR,Optimization
Optimization,Optimization(TR::OptimizationManager *),0,OMR,Optimization
TR_LoadExtensions,TR_LoadExtensions(class TR_LoadExtensions &&),1,TR,LoadExtensions
TR_LoadExtensions,TR_LoadExtensions(const class TR_LoadExtensions &),0,TR,LoadExtensions
TR_LoadExtensions,TR_LoadExtensions(TR::OptimizationManager *),0,TR,LoadExtensions
countIsSigned,countIsSigned(TR::Node *),1,TR,LoadExtensions
countLoad,countLoad(TR::Node *,TR::Node *),1,TR,LoadExtensions
countLoadExtensions,countLoadExtensions(TR::Node *,vcount_t),1,TR,LoadExtensions
create,create(TR::OptimizationManager *),1,TR,LoadExtensions
detectReverseNeededConversionPattern,detectReverseNeededConversionPattern(TR::Node *,TR::Node *),1,TR,LoadExtensions
detectUnneededConversionPattern,detectUnneededConversionPattern(TR::Node *,TR::Node *,_Bool &),1,TR,LoadExtensions
getFlags,getFlags(),1,TR,LoadExtensions
indexNodesForCodegen,indexNodesForCodegen(TR::Node *,ncount_t,vcount_t),1,TR,LoadExtensions
isOverriden,isOverriden(TR::Node *,enum TR_LoadExtensions::overrideFlags),1,TR,LoadExtensions
operator=,operator=(class TR_LoadExtensions &&),0,TR,LoadExtensions
operator=,operator=(const class TR_LoadExtensions &),0,TR,LoadExtensions
prepareToReplaceNode,prepareToReplaceNode(TR::Node *),1,OMR,Optimization
prepareToReplaceNode,prepareToReplaceNode(TR::Node *,TR::ILOpCodes),0,OMR,Optimization
setOverrideOpt,setOverrideOpt(TR::Node *,enum TR_LoadExtensions::overrideFlags),1,TR,LoadExtensions
setPreferredExtension,setPreferredExtension(TR::Node *,vcount_t),1,TR,LoadExtensions
supportedConstLoad,supportedConstLoad(TR::Node *,TR::Compilation *),1,TR,LoadExtensions
supportedType,supportedType(TR::Node *),1,TR,LoadExtensions
~TR_LoadExtensions,~TR_LoadExtensions(),1,TR,LoadExtensions
operator=,operator=(class OMR::OptimizationManager &&),1,OMR,OptimizationManager
operator=,operator=(const class OMR::OptimizationManager &),0,OMR,OptimizationManager
FlattenRegisterPairs,FlattenRegisterPairs(TR_Queue<TR::Register> *),1,OMR,RegisterPair
RegisterPair,RegisterPair(class OMR::RegisterPair &&),1,OMR,RegisterPair
RegisterPair,RegisterPair(const class OMR::RegisterPair &),0,OMR,RegisterPair
RegisterPair,RegisterPair(TR::Register *,TR::Register *),0,OMR,RegisterPair
RegisterPair,RegisterPair(enum TR_RegisterKinds),0,OMR,RegisterPair
RegisterPair,RegisterPair(),0,OMR,RegisterPair
operator=,operator=(class OMR::RegisterPair &&),0,OMR,RegisterPair
operator=,operator=(const class OMR::RegisterPair &),0,OMR,RegisterPair
operator=,operator=(class TR::RegisterPair &&),0,TR,RegisterPair
operator=,operator=(const class TR::RegisterPair &),0,TR,RegisterPair
setHighOrder,setHighOrder(TR::Register *,TR::CodeGenerator *),1,OMR,RegisterPair
setLowOrder,setLowOrder(TR::Register *,TR::CodeGenerator *),1,OMR,RegisterPair
usesRegister,usesRegister(TR::Register *),1,OMR,RegisterPair
~RegisterPair,~RegisterPair(),1,OMR,RegisterPair
checkNonNegativePowerOfTwo,checkNonNegativePowerOfTwo(int32_t),1,OMR,TreeEvaluator
checkNonNegativePowerOfTwo,checkNonNegativePowerOfTwo(int64_t),0,OMR,TreeEvaluator
checkPositiveOrNegativePowerOfTwo,checkPositiveOrNegativePowerOfTwo(int64_t),1,OMR,TreeEvaluator
checkPositiveOrNegativePowerOfTwo,checkPositiveOrNegativePowerOfTwo(int32_t),0,OMR,TreeEvaluator
CodeGenPhase,CodeGenPhase(const class OMR::CodeGenPhase &),1,OMR,CodeGenPhase
create,create(TR::ILOpCodes,uint16_t,int32_t,TR::TreeTop *),1,OMR,Node
operator=,operator=(class TR::OptimizationPolicy &&),1,TR,OptimizationPolicy
operator=,operator=(const class TR::OptimizationPolicy &),0,TR,OptimizationPolicy
TR_HashValueNumberInfo,TR_HashValueNumberInfo(TR::Compilation *,TR::Optimizer *,_Bool,_Bool,_Bool),1,TR,HashValueNumberInfo
TR_HashValueNumberInfo,TR_HashValueNumberInfo(class TR_HashValueNumberInfo &&),0,TR,HashValueNumberInfo
TR_ValueNumberInfo,TR_ValueNumberInfo(class TR_ValueNumberInfo &),1,TR,ValueNumberInfo
TR_ValueNumberInfo,TR_ValueNumberInfo(TR::Compilation *),0,TR,ValueNumberInfo
TR_ValueNumberInfo,TR_ValueNumberInfo(TR::Compilation *,TR::Optimizer *,_Bool,_Bool,_Bool),0,TR,ValueNumberInfo
TR_ValueNumberInfo,TR_ValueNumberInfo(class TR_ValueNumberInfo &&),0,TR,ValueNumberInfo
allocateNonShareableValueNumbers,allocateNonShareableValueNumbers(),1,TR,ValueNumberInfo
allocateParmValueNumbers,allocateParmValueNumbers(),1,TR,ValueNumberInfo
allocateShareableValueNumbers,allocateShareableValueNumbers(),1,TR,ValueNumberInfo
allocateValueNumber,allocateValueNumber(TR::Node *),1,TR,ValueNumberInfo
allocateValueNumber,allocateValueNumber(TR::Node *,vcount_t),0,TR,ValueNumberInfo
allocator,allocator(),1,TR,ValueNumberInfo
buildValueNumberInfo,buildValueNumberInfo(),1,TR,ValueNumberInfo
canShareValueNumber,canShareValueNumber(TR::Node *),1,TR,ValueNumberInfo
changeValueNumber,changeValueNumber(TR::Node *,int32_t),1,TR,ValueNumberInfo
comp,comp(),1,TR,ValueNumberInfo
congruentNodes,congruentNodes(TR::Node *,TR::Node *),1,TR,ValueNumberInfo
getNext,getNext(TR::Node *),1,TR,ValueNumberInfo
getNode,getNode(int32_t),1,TR,ValueNumberInfo
getNumberOfNodes,getNumberOfNodes(),1,TR,ValueNumberInfo
getNumberOfParmValues,getNumberOfParmValues(),1,TR,ValueNumberInfo
getNumberOfShareableValues,getNumberOfShareableValues(),1,TR,ValueNumberInfo
getNumberOfValues,getNumberOfValues(),1,TR,ValueNumberInfo
getVN,getVN(TR::Node *),1,TR,ValueNumberInfo
getValueNumber,getValueNumber(TR::Node *),1,TR,ValueNumberInfo
getValueNumberForLoad,getValueNumberForLoad(TR::Node *),1,TR,ValueNumberInfo
growTo,growTo(int32_t),1,TR,ValueNumberInfo
hasGlobalsValueNumbers,hasGlobalsValueNumbers(),1,TR,ValueNumberInfo
hash,hash(TR::Node *),1,TR,ValueNumberInfo
infoIsValid,infoIsValid(),1,TR,ValueNumberInfo
initializeNode,initializeNode(TR::Node *,int32_t &),1,TR,ValueNumberInfo
operator=,operator=(class TR_ValueNumberInfo &&),1,TR,ValueNumberInfo
operator=,operator=(const class TR_ValueNumberInfo &),0,TR,ValueNumberInfo
operator=,operator=(class TR_HashValueNumberInfo &&),0,TR,HashValueNumberInfo
operator=,operator=(const class TR_HashValueNumberInfo &),0,TR,HashValueNumberInfo
optimizer,optimizer(),1,TR,ValueNumberInfo
printValueNumberInfo,printValueNumberInfo(TR::Node *),1,TR,ValueNumberInfo
removeNodeInfo,removeNodeInfo(TR::Node *),1,TR,ValueNumberInfo
setUniqueValueNumber,setUniqueValueNumber(TR::Node *),1,TR,ValueNumberInfo
setValueNumber,setValueNumber(TR::Node *,TR::Node *),1,TR,ValueNumberInfo
trHeapMemory,trHeapMemory(),1,TR,ValueNumberInfo
trMemory,trMemory(),1,TR,ValueNumberInfo
trStackMemory,trStackMemory(),1,TR,ValueNumberInfo
trace,trace(),1,TR,ValueNumberInfo
~TR_HashValueNumberInfo,~TR_HashValueNumberInfo(),1,TR,HashValueNumberInfo
~TR_ValueNumberInfo,~TR_ValueNumberInfo(),1,TR,ValueNumberInfo
getAliasesAndUnionWith,getAliasesAndUnionWith(class TR_BitVector &),1,TR,AliasSetInterface
getAliasesAndUnionWith,getAliasesAndUnionWith(TR::SparseBitVector &),0,TR,AliasSetInterface
BSDTimer,BSDTimer(class CS2::BSDTimer &&),1,CS2,BSDTimer
BSDTimer,BSDTimer(const class CS2::BSDTimer &),0,CS2,BSDTimer
AutomaticSymbol,AutomaticSymbol(TR::DataType),1,OMR,AutomaticSymbol
operator=,operator=(const class OMR::SnippetGCMap &),1,OMR,SnippetGCMap
operator=,operator=(class OMR::SnippetGCMap &&),0,OMR,SnippetGCMap
TR_SymRefIterator,TR_SymRefIterator(class TR_SymRefIterator &&),1,TR,SymRefIterator
TR_SymRefIterator,TR_SymRefIterator(const class TR_SymRefIterator &),0,TR,SymRefIterator
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Symbol
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Instruction
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,Instruction
CodeGenerator,CodeGenerator(class TR::CodeGenerator &&),0,TR,CodeGenerator
CodeGenerator,CodeGenerator(const class TR::CodeGenerator &),0,TR,CodeGenerator
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,Compilation
DenseSet,DenseSet(class TR::GlobalSet::DenseSet &&),1,TR,GlobalSet::DenseSet
DenseSet,DenseSet(TR::Region &),0,TR,GlobalSet::DenseSet
operator delete[],operator delete[](void *,TR::Region &),1,TR,GlobalSet::DenseSet
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::DenseSet
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,GlobalSet::DenseSet
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,GlobalSet::DenseSet
SparseSet,SparseSet(TR::Region &),1,TR,GlobalSet::SparseSet
SparseSet,SparseSet(class TR::GlobalSet::SparseSet &&),0,TR,GlobalSet::SparseSet
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,GlobalSet::SparseSet
operator delete[],operator delete[](void *,TR::Region &),0,TR,GlobalSet::SparseSet
operator new[],operator new[](size_t,TR::Region &),1,TR,GlobalSet::SparseSet
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,GlobalSet::SparseSet
IL,IL(),1,OMR,IL
IL,IL(class OMR::IL &&),0,OMR,IL
TR_ResolvedMethod,TR_ResolvedMethod(const class TR_ResolvedMethod &),1,TR,ResolvedMethod
staticName,staticName(int32_t,class TR_Memory *,enum TR_AllocationKind),1,TR,ResolvedMethod
staticName,staticName(int32_t,int32_t &,class TR_Memory *,enum TR_AllocationKind),0,TR,ResolvedMethod
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,OMR,SymbolReference
operator=,operator=(const class OMR::SymbolReference &),1,OMR,SymbolReference
operator=,operator=(class OMR::SymbolReference &&),0,OMR,SymbolReference
setAliasedTo,setAliasedTo(class TR_BitVector &,TR::SymbolReferenceTable *,_Bool),1,OMR,SymbolReference
setAliasedTo,setAliasedTo(TR::SymbolReference *,_Bool),0,OMR,SymbolReference
SymbolReferenceTable,SymbolReferenceTable(class TR::SymbolReferenceTable &&),0,TR,SymbolReferenceTable
SymbolReferenceTable,SymbolReferenceTable(const class TR::SymbolReferenceTable &),0,TR,SymbolReferenceTable
TransformUtil,TransformUtil(),1,OMR,TransformUtil
TransformUtil,TransformUtil(class OMR::TransformUtil &&),0,OMR,TransformUtil
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,TransformUtil
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,TransformUtil
TR_BlockStructure,TR_BlockStructure(TR::Compilation *,int32_t,TR::Block *),1,TR,BlockStructure
TR_RegionStructure,TR_RegionStructure(class TR_RegionStructure &&),1,TR,RegionStructure
TR_RegionStructure,TR_RegionStructure(TR::Compilation *,int32_t),0,TR,RegionStructure
addExitEdge,addExitEdge(TR::CFGEdge *),1,TR,RegionStructure
addExitEdge,addExitEdge(class TR_StructureSubGraphNode *,int32_t,_Bool,TR::CFGEdge *),0,TR,RegionStructure
TR_StructureSubGraphNode,TR_StructureSubGraphNode(class TR_Structure *),1,TR,StructureSubGraphNode
operator delete,operator delete(void *,size_t),1,OMR,Symbol
isDiscontiguousArray,isDiscontiguousArray(int32_t,int32_t),1,OMR,ObjectModel
isDiscontiguousArray,isDiscontiguousArray(int32_t),0,OMR,ObjectModel
hasAccess,hasAccess(TR::Compilation *),1,OMR,VMEnv
hasAccess,hasAccess(struct OMR_VMThread *),0,OMR,VMEnv
releaseVMAccessIfNeeded,releaseVMAccessIfNeeded(struct OMR_VMThread *,_Bool),1,OMR,VMEnv
releaseVMAccessIfNeeded,releaseVMAccessIfNeeded(TR::Compilation *,_Bool),0,OMR,VMEnv
operator=,operator=(class OMR::ArithEnv &&),1,OMR,ArithEnv
operator=,operator=(const class OMR::ArithEnv &),0,OMR,ArithEnv
SegmentAllocator,SegmentAllocator(const class TR::SegmentAllocator &),1,TR,SegmentAllocator
SegmentAllocator,SegmentAllocator(size_t),0,TR,SegmentAllocator
SegmentProvider,SegmentProvider(size_t),1,TR,SegmentProvider
SegmentProvider,SegmentProvider(const class TR::SegmentProvider &),0,TR,SegmentProvider
SystemSegmentProvider,SystemSegmentProvider(size_t,TR::RawAllocator),1,OMR,SystemSegmentProvider
SystemSegmentProvider,SystemSegmentProvider(const class OMR::SystemSegmentProvider &),0,OMR,SystemSegmentProvider
allocationLimit,allocationLimit(),1,TR,SegmentAllocator
bytesAllocated,bytesAllocated(),1,TR,SegmentProvider
defaultSegmentSize,defaultSegmentSize(),1,TR,SegmentProvider
operator=,operator=(const class TR::SegmentProvider &),1,TR,SegmentProvider
operator=,operator=(const class TR::SegmentAllocator &),0,TR,SegmentAllocator
operator=,operator=(const class OMR::SystemSegmentProvider &),0,OMR,SystemSegmentProvider
regionBytesAllocated,regionBytesAllocated(),1,TR,SegmentAllocator
release,release(TR::MemorySegment &),1,TR,SegmentProvider
request,request(size_t),1,TR,SegmentProvider
setAllocationLimit,setAllocationLimit(size_t),1,TR,SegmentAllocator
systemBytesAllocated,systemBytesAllocated(),1,TR,SegmentAllocator
~SegmentAllocator,~SegmentAllocator(),1,TR,SegmentAllocator
~SegmentProvider,~SegmentProvider(),1,TR,SegmentProvider
~SystemSegmentProvider,~SystemSegmentProvider(),1,OMR,SystemSegmentProvider
Region,Region(const class TR::Region &),1,TR,Region
Region,Region(TR::SegmentProvider &,TR::RawAllocator),0,TR,Region
GlobalSingletonAllocator,GlobalSingletonAllocator(const class TR::GlobalSingletonAllocator &),1,TR,GlobalSingletonAllocator
TR_Memory,TR_Memory(const class TR_Memory &),0,TR,Memory
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,DebugCounter
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounter
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,DebugCounter
operator new,operator new(size_t,TR::Region &),0,TR,DebugCounter
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,TR,DebugCounter
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounter
prependDebugCounter,prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,TR::Node *,int8_t,int32_t),1,TR,DebugCounter
prependDebugCounter,prependDebugCounter(TR::Compilation *,const char *,TR::TreeTop *,int32_t,int8_t),0,TR,DebugCounter
operator new,operator new(size_t,TR::Region &),1,TR,DebugCounterAggregation
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,DebugCounterAggregation
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,DebugCounterAggregation
operator new[],operator new[](size_t,TR::Region &),0,TR,DebugCounterAggregation
MonitorTable,MonitorTable(class OMR::MonitorTable &&),1,OMR,MonitorTable
MonitorTable,MonitorTable(),0,OMR,MonitorTable
operator=,operator=(class TR_MemoryAllocationType &&),1,TR,MemoryAllocationType
operator=,operator=(const class TR_MemoryAllocationType &),0,TR,MemoryAllocationType
TR_PersistentMemory,TR_PersistentMemory(const class TR_PersistentMemory &),1,TR,PersistentMemory
TR_PersistentMemory,TR_PersistentMemory(class TR_PersistentMemory &&),0,TR,PersistentMemory
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Optimizer
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Optimizer
TreeTop,TreeTop(class TR::TreeTop &&),0,TR,TreeTop
TreeTop,TreeTop(const class TR::TreeTop &),0,TR,TreeTop
~TreeTop,~TreeTop(),1,OMR,TreeTop
operator=,operator=(const TR::DataType &),1,OMR,DataType
TR_CallStackIterator,TR_CallStackIterator(class TR_CallStackIterator &&),1,TR,CallStackIterator
TR_CallStackIterator,TR_CallStackIterator(),0,TR,CallStackIterator
TR_CallStackIterator,TR_CallStackIterator(const class TR_CallStackIterator &),0,TR,CallStackIterator
TR_LinuxCallStackIterator,TR_LinuxCallStackIterator(),1,TR,LinuxCallStackIterator
getNext,getNext(),1,TR,CallStackIterator
getOffsetInProcedure,getOffsetInProcedure(),1,TR,CallStackIterator
getProcedureName,getProcedureName(),1,TR,CallStackIterator
isDone,isDone(),1,TR,CallStackIterator
operator=,operator=(class TR_CallStackIterator &&),1,TR,CallStackIterator
operator=,operator=(const class TR_CallStackIterator &),0,TR,CallStackIterator
operator=,operator=(class TR_LinuxCallStackIterator &&),0,TR,LinuxCallStackIterator
operator=,operator=(const class TR_LinuxCallStackIterator &),0,TR,LinuxCallStackIterator
printStackBacktrace,printStackBacktrace(TR::Compilation *),1,TR,CallStackIterator
printSymbol,printSymbol(int32_t,char *,TR::Compilation *),1,TR,LinuxCallStackIterator
~TR_CallStackIterator,~TR_CallStackIterator(),1,TR,CallStackIterator
~TR_LinuxCallStackIterator,~TR_LinuxCallStackIterator(),1,TR,LinuxCallStackIterator
__array_type_info,__array_type_info(const char *),1,__cxxabiv1,__array_type_info
operator=,operator=(const class __cxxabiv1::__array_type_info &),0,__cxxabiv1,__array_type_info
~__array_type_info,~__array_type_info(),1,__cxxabiv1,__array_type_info
__class_type_info,__class_type_info(const class __cxxabiv1::__class_type_info &),1,__cxxabiv1,__class_type_info
__class_type_info,__class_type_info(const char *),0,__cxxabiv1,__class_type_info
__do_dyncast,__do_dyncast(ptrdiff_t,enum __cxxabiv1::__class_type_info::__sub_kind,const class __cxxabiv1::__class_type_info *,const void *,const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__dyncast_result &),1,__cxxabiv1,__class_type_info
__do_find_public_src,__do_find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *),1,__cxxabiv1,__class_type_info
__do_upcast,__do_upcast(const class __cxxabiv1::__class_type_info *,const void *,struct __cxxabiv1::__class_type_info::__upcast_result &__restrict),0,__cxxabiv1,__class_type_info
__do_upcast,__do_upcast(const class __cxxabiv1::__class_type_info *,void **),0,__cxxabiv1,__class_type_info
__find_public_src,__find_public_src(ptrdiff_t,const void *,const class __cxxabiv1::__class_type_info *,const void *),1,__cxxabiv1,__class_type_info
__si_class_type_info,__si_class_type_info(const char *,const class __cxxabiv1::__class_type_info *),1,__cxxabiv1,__si_class_type_info
__si_class_type_info,__si_class_type_info(const class __cxxabiv1::__si_class_type_info &),0,__cxxabiv1,__si_class_type_info
operator=,operator=(const class __cxxabiv1::__class_type_info &),0,__cxxabiv1,__class_type_info
operator=,operator=(const class __cxxabiv1::__si_class_type_info &),0,__cxxabiv1,__si_class_type_info
~__class_type_info,~__class_type_info(),1,__cxxabiv1,__class_type_info
~__si_class_type_info,~__si_class_type_info(),1,__cxxabiv1,__si_class_type_info
__enum_type_info,__enum_type_info(const char *),1,__cxxabiv1,__enum_type_info
operator=,operator=(const class __cxxabiv1::__enum_type_info &),0,__cxxabiv1,__enum_type_info
~__enum_type_info,~__enum_type_info(),1,__cxxabiv1,__enum_type_info
__function_type_info,__function_type_info(const char *),1,__cxxabiv1,__function_type_info
operator=,operator=(const class __cxxabiv1::__function_type_info &),0,__cxxabiv1,__function_type_info
~__function_type_info,~__function_type_info(),1,__cxxabiv1,__function_type_info
__fundamental_type_info,__fundamental_type_info(const char *),1,__cxxabiv1,__fundamental_type_info
operator=,operator=(const class __cxxabiv1::__fundamental_type_info &),0,__cxxabiv1,__fundamental_type_info
~__fundamental_type_info,~__fundamental_type_info(),1,__cxxabiv1,__fundamental_type_info
__do_catch,__do_catch(const std::type_info *,void **,unsigned int),0,__cxxabiv1,__pbase_type_info
__pbase_type_info,__pbase_type_info(const char *,int,const std::type_info *),1,__cxxabiv1,__pbase_type_info
__pbase_type_info,__pbase_type_info(const class __cxxabiv1::__pbase_type_info &),0,__cxxabiv1,__pbase_type_info
__pointer_catch,__pointer_catch(const class __cxxabiv1::__pbase_type_info *,void **,unsigned int),1,__cxxabiv1,__pbase_type_info
__pointer_to_member_type_info,__pointer_to_member_type_info(const char *,int,const std::type_info *,class __cxxabiv1::__class_type_info *),1,__cxxabiv1,__pointer_to_member_type_info
__pointer_to_member_type_info,__pointer_to_member_type_info(const class __cxxabiv1::__pointer_to_member_type_info &),0,__cxxabiv1,__pointer_to_member_type_info
operator=,operator=(const class __cxxabiv1::__pbase_type_info &),0,__cxxabiv1,__pbase_type_info
operator=,operator=(const class __cxxabiv1::__pointer_to_member_type_info &),0,__cxxabiv1,__pointer_to_member_type_info
~__pbase_type_info,~__pbase_type_info(),1,__cxxabiv1,__pbase_type_info
~__pointer_to_member_type_info,~__pointer_to_member_type_info(),1,__cxxabiv1,__pointer_to_member_type_info
__pointer_type_info,__pointer_type_info(const char *,int,const std::type_info *),1,__cxxabiv1,__pointer_type_info
operator=,operator=(const class __cxxabiv1::__pointer_type_info &),0,__cxxabiv1,__pointer_type_info
~__pointer_type_info,~__pointer_type_info(),1,__cxxabiv1,__pointer_type_info
__vmi_class_type_info,__vmi_class_type_info(const char *,int),1,__cxxabiv1,__vmi_class_type_info
operator=,operator=(const class __cxxabiv1::__vmi_class_type_info &),0,__cxxabiv1,__vmi_class_type_info
~__vmi_class_type_info,~__vmi_class_type_info(),1,__cxxabiv1,__vmi_class_type_info
ParameterSymbol,ParameterSymbol(TR::DataType,_Bool,int32_t,size_t),1,OMR,ParameterSymbol
operator new,operator new(size_t,class TR_PersistentMemory *),1,OMR,Register
Machine,Machine(uint8_t,uint8_t,uint8_t),1,OMR,Machine
Machine,Machine(class OMR::Machine &&),0,OMR,Machine
Instruction,Instruction(const class OMR::Instruction &),1,OMR,Instruction
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Instruction
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,DebugCounter
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,DebugCounter
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,TR,DebugCounter
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,DebugCounter
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
TR_LinuxCallStackIterator,TR_LinuxCallStackIterator(class TR_LinuxCallStackIterator &&),1,TR,LinuxCallStackIterator
TR_LinuxCallStackIterator,TR_LinuxCallStackIterator(const class TR_LinuxCallStackIterator &),0,TR,LinuxCallStackIterator
TR_LinuxCallStackIterator,TR_LinuxCallStackIterator(),0,TR,LinuxCallStackIterator
DebugCounter,DebugCounter(class TR::DebugCounter &&),1,TR,DebugCounter
DebugCounter,DebugCounter(const class TR::DebugCounter &),0,TR,DebugCounter
DebugCounter,DebugCounter(const char *,int8_t,class TR::DebugCounter *,int8_t),0,TR,DebugCounter
operator delete,operator delete(void *,TR::Region &),1,TR,DebugCounter
DebugCounterAggregation,DebugCounterAggregation(const class TR::DebugCounterAggregation &),1,TR,DebugCounterAggregation
DebugCounterAggregation,DebugCounterAggregation(class TR_Memory *),0,TR,DebugCounterAggregation
DebugCounterAggregation,DebugCounterAggregation(class TR::DebugCounterAggregation &&),0,TR,DebugCounterAggregation
operator delete,operator delete(void *,size_t),1,TR,DebugCounterAggregation
operator delete,operator delete(void *,TR::Region &),0,TR,DebugCounterAggregation
Node,Node(TR::Node *,TR::ILOpCodes,uint16_t),1,OMR,Node
Options,Options(const class OMR::Options &),1,OMR,Options
Options,Options(class OMR::Options &&),0,OMR,Options
findOptionSet,findOptionSet(int32_t,int32_t,const char *,enum TR_Hotness,_Bool),1,OMR,Options
findOptionSet,findOptionSet(class TR_Memory *,class TR_ResolvedMethod *,_Bool),0,OMR,Options
isAnyVerboseOptionSet,isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags),1,OMR,Options
isAnyVerboseOptionSet,isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags),0,OMR,Options
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Options
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Options
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Options
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Options
operator new,operator new(size_t,TR::Region &),1,OMR,Options
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,Options
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Options
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,Options
processOptionSet,processOptionSet(char *,char *,TR::OptionSet *),1,OMR,Options
processOptionSet,processOptionSet(char *,TR::OptionSet *,void *,_Bool),0,OMR,Options
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,SymbolReference
isAnyVerboseOptionSet,isAnyVerboseOptionSet(enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags,enum TR_VerboseFlags),1,OMR,Options
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Options
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Options
Optimization,Optimization(const class OMR::Optimization &),1,OMR,Optimization
prependDebugCounterBump,prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,TR::Node *),1,TR,DebugCounter
prependDebugCounterBump,prependDebugCounterBump(TR::Compilation *,TR::TreeTop *,class TR::DebugCounterBase *,int32_t),0,TR,DebugCounter
TR_BitVectorCursor,TR_BitVectorCursor(const class TR_BitVectorCursor &),1,TR,BitVectorCursor
TR_BitVectorCursor,TR_BitVectorCursor(class TR_BitVectorCursor &&),0,TR,BitVectorCursor
TR_BitVectorCursor,TR_BitVectorCursor(class TR_BitVector &),0,TR,BitVectorCursor
TR_AsyncCheckInsertion,TR_AsyncCheckInsertion(class TR_AsyncCheckInsertion &&),1,TR,AsyncCheckInsertion
TR_AsyncCheckInsertion,TR_AsyncCheckInsertion(const class TR_AsyncCheckInsertion &),0,TR,AsyncCheckInsertion
TR_AsyncCheckInsertion,TR_AsyncCheckInsertion(TR::OptimizationManager *),0,TR,AsyncCheckInsertion
create,create(TR::OptimizationManager *),1,TR,AsyncCheckInsertion
insertAsyncCheck,insertAsyncCheck(TR::Block *,TR::Compilation *,const char *),1,TR,AsyncCheckInsertion
insertReturnAsyncChecks,insertReturnAsyncChecks(TR::Optimization *,const char *),1,TR,AsyncCheckInsertion
operator=,operator=(class TR_AsyncCheckInsertion &&),0,TR,AsyncCheckInsertion
operator=,operator=(const class TR_AsyncCheckInsertion &),0,TR,AsyncCheckInsertion
~TR_AsyncCheckInsertion,~TR_AsyncCheckInsertion(),1,TR,AsyncCheckInsertion
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,OMR,Snippet
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Recompilation
operator delete,operator delete(void *,size_t),0,OMR,Recompilation
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,Recompilation
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Recompilation
createEmptyBlock,createEmptyBlock(TR::Node *,TR::Compilation *,int32_t,TR::Block *),1,OMR,Block
createEmptyBlock,createEmptyBlock(TR::Compilation *,int32_t,TR::Block *),0,OMR,Block
mustBeLessThan,mustBeLessThan(),1,TR,VPConstraint
mustBeLessThan,mustBeLessThan(TR::VPConstraint *,OMR::ValuePropagation *),0,TR,VPConstraint
print,print(OMR::ValuePropagation *),1,TR,VPConstraint
print,print(TR::Compilation *,TR::FILE *,int32_t),0,TR,VPConstraint
TR_BackwardDFSetAnalysis,TR_BackwardDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,BackwardDFSetAnalysis
TR_BackwardDFSetAnalysis,TR_BackwardDFSetAnalysis(class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &&),0,TR,BackwardDFSetAnalysis
TR_BackwardDFSetAnalysis,TR_BackwardDFSetAnalysis(const class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &),0,TR,BackwardDFSetAnalysis
TR_BackwardDFSetAnalysis,TR_BackwardDFSetAnalysis(class TR_BackwardDFSetAnalysis<class TR_BitVector *> &&),0,TR,BackwardDFSetAnalysis
TR_BackwardDFSetAnalysis,TR_BackwardDFSetAnalysis(const class TR_BackwardDFSetAnalysis<class TR_BitVector *> &),0,TR,BackwardDFSetAnalysis
TR_BackwardDFSetAnalysis<type-parameter-0-0 *>,TR_BackwardDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,BackwardDFSetAnalysis
TR_BackwardIntersectionBitVectorAnalysis,TR_BackwardIntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,BackwardIntersectionBitVectorAnalysis
TR_BackwardIntersectionDFSetAnalysis<type-parameter-0-0 *>,TR_BackwardIntersectionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,BackwardIntersectionDFSetAnalysis
TR_BasicDFSetAnalysis<type-parameter-0-0 *>,TR_BasicDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,BasicDFSetAnalysis
TR_DataFlowAnalysis,TR_DataFlowAnalysis(const class TR_DataFlowAnalysis &),1,TR,DataFlowAnalysis
TR_DataFlowAnalysis,TR_DataFlowAnalysis(class TR_DataFlowAnalysis &&),0,TR,DataFlowAnalysis
TR_DataFlowAnalysis,TR_DataFlowAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,DataFlowAnalysis
TR_GlobalAnticipatability,TR_GlobalAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),1,TR,GlobalAnticipatability
addToAnalysisQueue,addToAnalysisQueue(class TR_StructureSubGraphNode *,uint8_t),1,TR,DataFlowAnalysis
allocateBlockInfoContainer,allocateBlockInfoContainer(Container **,Container *),1,TR,BasicDFSetAnalysis
allocateBlockInfoContainer,allocateBlockInfoContainer(Container **,_Bool,_Bool),0,TR,BasicDFSetAnalysis
allocateContainer,allocateContainer(Container **,_Bool,_Bool),1,TR,BasicDFSetAnalysis
allocateTempContainer,allocateTempContainer(Container **,Container *),1,TR,BasicDFSetAnalysis
allocator,allocator(),1,TR,DataFlowAnalysis
analyzeBlockStructure,analyzeBlockStructure(class TR_BlockStructure *,_Bool),1,TR,DataFlowAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_SingleBitContainer *),1,TR,BackwardDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *),0,TR,BackwardDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,Container *),0,TR,BackwardDFSetAnalysis
analyzeNodeIfSuccessorsAnalyzed,analyzeNodeIfSuccessorsAnalyzed(class TR_RegionStructure *,class TR_BitVector &,class TR_BitVector &),1,TR,BackwardDFSetAnalysis
analyzeRegionStructure,analyzeRegionStructure(class TR_RegionStructure *,_Bool),1,TR,DataFlowAnalysis
analyzeTreeTopsInBlockStructure,analyzeTreeTopsInBlockStructure(class TR_BlockStructure *),1,TR,BackwardDFSetAnalysis
areSyntacticallyEquivalent,areSyntacticallyEquivalent(TR::Node *,TR::Node *),1,TR,DataFlowAnalysis
asDelayedness,asDelayedness(),1,TR,DataFlowAnalysis
asEarliestness,asEarliestness(),1,TR,DataFlowAnalysis
asExceptionCheckMotion,asExceptionCheckMotion(),1,TR,DataFlowAnalysis
asFlowSensitiveEscapeAnalysis,asFlowSensitiveEscapeAnalysis(),1,TR,DataFlowAnalysis
asGlobalAnticipatability,asGlobalAnticipatability(),1,TR,DataFlowAnalysis
asIsolatedness,asIsolatedness(),1,TR,DataFlowAnalysis
asLatestness,asLatestness(),1,TR,DataFlowAnalysis
asLiveOnAllPaths,asLiveOnAllPaths(),1,TR,DataFlowAnalysis
asLiveness,asLiveness(),1,TR,DataFlowAnalysis
asRedundantExpressionAdjustment,asRedundantExpressionAdjustment(),1,TR,DataFlowAnalysis
asRegisterAnticipatability,asRegisterAnticipatability(),1,TR,DataFlowAnalysis
asRegisterAvailability,asRegisterAvailability(),1,TR,DataFlowAnalysis
canGenAndKillForStructure,canGenAndKillForStructure(class TR_Structure *),1,TR,BasicDFSetAnalysis
cg,cg(),1,TR,DataFlowAnalysis
clearAnalysisInfo,clearAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *),1,TR,BasicDFSetAnalysis
collectAllSymbolReferencesInTreeInto,collectAllSymbolReferencesInTreeInto(TR::Node *,List<TR::SymbolReference> *),1,TR,DataFlowAnalysis
collectCallSymbolReferencesInTreeInto,collectCallSymbolReferencesInTreeInto(TR::Node *,List<TR::SymbolReference> *),1,TR,DataFlowAnalysis
comp,comp(),1,TR,DataFlowAnalysis
compose,compose(Container *,Container *),1,TR,BasicDFSetAnalysis
compose,compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *),0,TR,BackwardDFSetAnalysis
compose,compose(class TR_BitVector *,class TR_BitVector *),0,TR,BackwardDFSetAnalysis
createAnalysisInfo,createAnalysisInfo(),1,TR,BasicDFSetAnalysis
doAnalysis,doAnalysis(class TR_Structure *,_Bool),1,TR,BasicDFSetAnalysis
fe,fe(),1,TR,DataFlowAnalysis
getAnalysisInfo,getAnalysisInfo(class TR_Structure *),1,TR,BasicDFSetAnalysis
getAnalysisName,getAnalysisName(),1,TR,DataFlowAnalysis
getCheckExpressionsInBlock,getCheckExpressionsInBlock(int32_t),1,TR,GlobalAnticipatability
getDebug,getDebug(),1,TR,DataFlowAnalysis
getKind,getKind(),1,TR,DataFlowAnalysis
getNumberOfBits,getNumberOfBits(),1,TR,BasicDFSetAnalysis
initialize,initialize(),1,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,class TR_Structure *),1,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,class TR_RegionStructure *),0,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,TR::Block *),0,TR,BasicDFSetAnalysis
initializeBasicDFSetAnalysis,initializeBasicDFSetAnalysis(),1,TR,BasicDFSetAnalysis
initializeBlockInfo,initializeBlockInfo(_Bool),1,TR,BasicDFSetAnalysis
initializeCurrentGenKillSetInfo,initializeCurrentGenKillSetInfo(),1,TR,BackwardDFSetAnalysis
initializeDFSetAnalysis,initializeDFSetAnalysis(),1,TR,BasicDFSetAnalysis
initializeGenAndKillSetInfo,initializeGenAndKillSetInfo(),1,TR,BasicDFSetAnalysis
initializeGenAndKillSetInfo,initializeGenAndKillSetInfo(class TR_RegionStructure *,class TR_BitVector &,class TR_BitVector &,_Bool),0,TR,BackwardDFSetAnalysis
initializeGenAndKillSetInfoForBlock,initializeGenAndKillSetInfoForBlock(class TR_BlockStructure *),1,TR,BasicDFSetAnalysis
initializeGenAndKillSetInfoForRegion,initializeGenAndKillSetInfoForRegion(class TR_RegionStructure *),1,TR,BasicDFSetAnalysis
initializeGenAndKillSetInfoForStructure,initializeGenAndKillSetInfoForStructure(class TR_Structure *),1,TR,BasicDFSetAnalysis
initializeGenAndKillSetInfoForStructures,initializeGenAndKillSetInfoForStructures(),1,TR,BasicDFSetAnalysis
initializeGenAndKillSetInfoPropertyForStructure,initializeGenAndKillSetInfoPropertyForStructure(class TR_Structure *,_Bool),1,TR,BasicDFSetAnalysis
initializeInfo,initializeInfo(Container *),1,TR,BasicDFSetAnalysis
initializeInfo,initializeInfo(class TR_SingleBitContainer *),0,TR,BackwardDFSetAnalysis
initializeInfo,initializeInfo(class TR_BitVector *),0,TR,BackwardDFSetAnalysis
initializeOutSetInfo,initializeOutSetInfo(),1,TR,BackwardDFSetAnalysis
inverseCompose,inverseCompose(Container *,Container *),1,TR,BasicDFSetAnalysis
inverseCompose,inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *),0,TR,BackwardDFSetAnalysis
inverseCompose,inverseCompose(class TR_BitVector *,class TR_BitVector *),0,TR,BackwardDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(Container *),1,TR,BasicDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_SingleBitContainer *),0,TR,BackwardDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_BitVector *),0,TR,BackwardDFSetAnalysis
isExceptionalInBlock,isExceptionalInBlock(TR::Node *,int32_t,ContainerType *,vcount_t),1,TR,GlobalAnticipatability
isSameAsOrAliasedWith,isSameAsOrAliasedWith(TR::SymbolReference *,TR::SymbolReference *),1,TR,DataFlowAnalysis
killBasedOnSuccTransparency,killBasedOnSuccTransparency(TR::Block *),1,TR,GlobalAnticipatability
operator=,operator=(class TR_DataFlowAnalysis &&),1,TR,DataFlowAnalysis
operator=,operator=(const class TR_DataFlowAnalysis &),0,TR,DataFlowAnalysis
operator=,operator=(class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &&),0,TR,BackwardDFSetAnalysis
operator=,operator=(const class TR_BackwardDFSetAnalysis<class TR_SingleBitContainer *> &),0,TR,BackwardDFSetAnalysis
operator=,operator=(const class TR_BackwardDFSetAnalysis<class TR_BitVector *> &),0,TR,BackwardDFSetAnalysis
operator=,operator=(class TR_BackwardDFSetAnalysis<class TR_BitVector *> &&),0,TR,BackwardDFSetAnalysis
operator=,operator=(class TR_BackwardIntersectionBitVectorAnalysis &&),0,TR,BackwardIntersectionBitVectorAnalysis
operator=,operator=(const class TR_BackwardIntersectionBitVectorAnalysis &),0,TR,BackwardIntersectionBitVectorAnalysis
operator=,operator=(class TR_GlobalAnticipatability &&),0,TR,GlobalAnticipatability
operator=,operator=(const class TR_GlobalAnticipatability &),0,TR,GlobalAnticipatability
optimizer,optimizer(),1,TR,DataFlowAnalysis
perform,perform(),1,TR,DataFlowAnalysis
performAnalysis,performAnalysis(class TR_Structure *,_Bool),1,TR,BasicDFSetAnalysis
postInitializationProcessing,postInitializationProcessing(),1,TR,BasicDFSetAnalysis
removeHeadFromAnalysisQueue,removeHeadFromAnalysisQueue(),1,TR,DataFlowAnalysis
setTrace,setTrace(_Bool),1,TR,DataFlowAnalysis
supportsGenAndKillSets,supportsGenAndKillSets(),1,TR,BasicDFSetAnalysis
supportsGenAndKillSetsForStructures,supportsGenAndKillSetsForStructures(),1,TR,BasicDFSetAnalysis
trHeapMemory,trHeapMemory(),1,TR,DataFlowAnalysis
trMemory,trMemory(),1,TR,DataFlowAnalysis
trPersistentMemory,trPersistentMemory(),1,TR,DataFlowAnalysis
trStackMemory,trStackMemory(),1,TR,DataFlowAnalysis
trace,trace(),1,TR,DataFlowAnalysis
traceBBVA,traceBBVA(),1,TR,BackwardDFSetAnalysis
traceBVA,traceBVA(),1,TR,BasicDFSetAnalysis
treeHasChecks,treeHasChecks(TR::TreeTop *,TR::Node *),1,TR,DataFlowAnalysis
~TR_BackwardDFSetAnalysis,~TR_BackwardDFSetAnalysis(),1,TR,BackwardDFSetAnalysis
~TR_BackwardIntersectionBitVectorAnalysis,~TR_BackwardIntersectionBitVectorAnalysis(),1,TR,BackwardIntersectionBitVectorAnalysis
~TR_DataFlowAnalysis,~TR_DataFlowAnalysis(),1,TR,DataFlowAnalysis
~TR_GlobalAnticipatability,~TR_GlobalAnticipatability(),1,TR,GlobalAnticipatability
TR_BackwardUnionBitVectorAnalysis,TR_BackwardUnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,BackwardUnionBitVectorAnalysis
TR_BackwardUnionDFSetAnalysis<type-parameter-0-0 *>,TR_BackwardUnionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,BackwardUnionDFSetAnalysis
TR_Liveness,TR_Liveness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,class TR_LiveVariableInformation *,_Bool,_Bool),1,TR,Liveness
getLiveVariableInfo,getLiveVariableInfo(),1,TR,Liveness
operator=,operator=(class TR_BackwardUnionBitVectorAnalysis &&),0,TR,BackwardUnionBitVectorAnalysis
operator=,operator=(const class TR_BackwardUnionBitVectorAnalysis &),0,TR,BackwardUnionBitVectorAnalysis
operator=,operator=(const class TR_Liveness &),0,TR,Liveness
operator=,operator=(class TR_Liveness &&),0,TR,Liveness
traceLiveness,traceLiveness(),1,TR,Liveness
~TR_BackwardUnionBitVectorAnalysis,~TR_BackwardUnionBitVectorAnalysis(),1,TR,BackwardUnionBitVectorAnalysis
~TR_Liveness,~TR_Liveness(),1,TR,Liveness
TR_BackwardUnionSingleBitContainerAnalysis,TR_BackwardUnionSingleBitContainerAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,BackwardUnionSingleBitContainerAnalysis
operator=,operator=(class TR_BackwardUnionSingleBitContainerAnalysis &&),0,TR,BackwardUnionSingleBitContainerAnalysis
operator=,operator=(const class TR_BackwardUnionSingleBitContainerAnalysis &),0,TR,BackwardUnionSingleBitContainerAnalysis
~TR_BackwardUnionSingleBitContainerAnalysis,~TR_BackwardUnionSingleBitContainerAnalysis(),1,TR,BackwardUnionSingleBitContainerAnalysis
TR_Structure,TR_Structure(TR::Compilation *,int32_t),1,TR,Structure
TR_Structure,TR_Structure(class TR_Structure &&),0,TR,Structure
getBlocks,getBlocks(List<TR::Block> *,vcount_t),1,TR,Structure
getBlocks,getBlocks(List<TR::Block> *),0,TR,Structure
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,TR,Structure
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,Structure
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,Structure
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Structure
operator=,operator=(const class TR_Structure &),1,TR,Structure
operator=,operator=(class TR_Structure &&),0,TR,Structure
TR_Delayedness,TR_Delayedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),1,TR,Delayedness
TR_ForwardDFSetAnalysis<type-parameter-0-0 *>,TR_ForwardDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,ForwardDFSetAnalysis
TR_IntersectionBitVectorAnalysis,TR_IntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,IntersectionBitVectorAnalysis
TR_IntersectionDFSetAnalysis<type-parameter-0-0 *>,TR_IntersectionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,IntersectionDFSetAnalysis
analyzeBlockZeroStructure,analyzeBlockZeroStructure(class TR_BlockStructure *),1,TR,ForwardDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,Container *),1,TR,ForwardDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,ContainerType *),0,TR,Delayedness
analyzeNodeIfPredecessorsAnalyzed,analyzeNodeIfPredecessorsAnalyzed(class TR_RegionStructure *,class TR_BitVector &),1,TR,ForwardDFSetAnalysis
analyzeTreeTopsInBlockStructure,analyzeTreeTopsInBlockStructure(class TR_BlockStructure *),1,TR,ForwardDFSetAnalysis
compose,compose(class TR_BitVector *,class TR_BitVector *),0,TR,IntersectionBitVectorAnalysis
initializeCurrentGenKillSetInfo,initializeCurrentGenKillSetInfo(),1,TR,ForwardDFSetAnalysis
initializeGenAndKillSetInfo,initializeGenAndKillSetInfo(class TR_RegionStructure *,class TR_BitVector &),0,TR,ForwardDFSetAnalysis
initializeInSetInfo,initializeInSetInfo(),1,TR,ForwardDFSetAnalysis
operator=,operator=(const class TR_IntersectionBitVectorAnalysis &),0,TR,IntersectionBitVectorAnalysis
operator=,operator=(class TR_IntersectionBitVectorAnalysis &&),0,TR,IntersectionBitVectorAnalysis
operator=,operator=(const class TR_Delayedness &),0,TR,Delayedness
operator=,operator=(class TR_Delayedness &&),0,TR,Delayedness
~TR_Delayedness,~TR_Delayedness(),1,TR,Delayedness
~TR_IntersectionBitVectorAnalysis,~TR_IntersectionBitVectorAnalysis(),1,TR,IntersectionBitVectorAnalysis
TR_Earliestness,TR_Earliestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),1,TR,Earliestness
TR_UnionBitVectorAnalysis,TR_UnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,UnionBitVectorAnalysis
TR_UnionDFSetAnalysis<type-parameter-0-0 *>,TR_UnionDFSetAnalysis<type-parameter-0-0 *>(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,UnionDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *),0,TR,Earliestness
operator=,operator=(class TR_UnionBitVectorAnalysis &&),0,TR,UnionBitVectorAnalysis
operator=,operator=(const class TR_UnionBitVectorAnalysis &),0,TR,UnionBitVectorAnalysis
operator=,operator=(const class TR_Earliestness &),0,TR,Earliestness
operator=,operator=(class TR_Earliestness &&),0,TR,Earliestness
~TR_Earliestness,~TR_Earliestness(),1,TR,Earliestness
~TR_UnionBitVectorAnalysis,~TR_UnionBitVectorAnalysis(),1,TR,UnionBitVectorAnalysis
TR_FlowSensitiveEscapeAnalysis,TR_FlowSensitiveEscapeAnalysis(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_EscapeAnalysis *),1,TR,FlowSensitiveEscapeAnalysis
analyzeNode,analyzeNode(TR::Node *,_Bool,int32_t,TR::Node *),0,TR,FlowSensitiveEscapeAnalysis
collectCFGBackEdges,collectCFGBackEdges(class TR_StructureSubGraphNode *),1,TR,FlowSensitiveEscapeAnalysis
findOrSplitEdge,findOrSplitEdge(TR::Block *,TR::Block *),1,TR,FlowSensitiveEscapeAnalysis
getCFGBackEdgesAndLoopEntryBlocks,getCFGBackEdgesAndLoopEntryBlocks(class TR_Structure *),1,TR,FlowSensitiveEscapeAnalysis
operator=,operator=(class TR_FlowSensitiveEscapeAnalysis &&),0,TR,FlowSensitiveEscapeAnalysis
operator=,operator=(const class TR_FlowSensitiveEscapeAnalysis &),0,TR,FlowSensitiveEscapeAnalysis
~TR_FlowSensitiveEscapeAnalysis,~TR_FlowSensitiveEscapeAnalysis(),1,TR,FlowSensitiveEscapeAnalysis
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,HashTab
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,HashTab
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,HashTab
TR_Isolatedness,TR_Isolatedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),1,TR,Isolatedness
operator=,operator=(class TR_Isolatedness &&),0,TR,Isolatedness
operator=,operator=(const class TR_Isolatedness &),0,TR,Isolatedness
~TR_Isolatedness,~TR_Isolatedness(),1,TR,Isolatedness
TR_Latestness,TR_Latestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),1,TR,Latestness
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,ContainerType *),0,TR,Latestness
operator=,operator=(const class TR_Latestness &),0,TR,Latestness
operator=,operator=(class TR_Latestness &&),0,TR,Latestness
~TR_Latestness,~TR_Latestness(),1,TR,Latestness
TR_LiveOnAllPaths,TR_LiveOnAllPaths(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_LiveVariableInformation *,_Bool,_Bool),1,TR,LiveOnAllPaths
getLiveVariableInfo,getLiveVariableInfo(),1,TR,LiveOnAllPaths
operator=,operator=(class TR_LiveOnAllPaths &&),0,TR,LiveOnAllPaths
operator=,operator=(const class TR_LiveOnAllPaths &),0,TR,LiveOnAllPaths
~TR_LiveOnAllPaths,~TR_LiveOnAllPaths(),1,TR,LiveOnAllPaths
TR_LocalAnalysis,TR_LocalAnalysis(class TR_LocalAnalysisInfo &,_Bool),1,TR,LocalAnalysis
TR_LocalAnticipatability,TR_LocalAnticipatability(class TR_LocalAnalysisInfo &,class TR_LocalTransparency *,_Bool),1,TR,LocalAnticipatability
adjustInfoForAddressAdd,adjustInfoForAddressAdd(TR::Node *,TR::Node *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,TR::Block *),1,TR,LocalAnticipatability
allocateContainer,allocateContainer(int32_t),1,TR,LocalAnalysis
allocateTempContainer,allocateTempContainer(int32_t),1,TR,LocalAnalysis
analyzeBlock,analyzeBlock(TR::Block *,vcount_t,vcount_t,class TR_BitVector *),1,TR,LocalAnticipatability
comp,comp(),1,TR,LocalAnalysis
getAnalysisInfo,getAnalysisInfo(int32_t),1,TR,LocalAnalysis
getCheckExpressions,getCheckExpressions(),1,TR,LocalAnalysis
getCheckSymbolReferences,getCheckSymbolReferences(),1,TR,LocalAnalysis
getDownwardExposedAnalysisInfo,getDownwardExposedAnalysisInfo(int32_t),1,TR,LocalAnalysis
getDownwardExposedStoreAnalysisInfo,getDownwardExposedStoreAnalysisInfo(int32_t),1,TR,LocalAnalysis
getNumNodes,getNumNodes(),1,TR,LocalAnalysis
initializeBlocks,initializeBlocks(TR::Block *,TR::BitVector &),1,TR,LocalAnalysis
initializeLocalAnalysis,initializeLocalAnalysis(_Bool,_Bool),1,TR,LocalAnalysis
isSupportedNode,isSupportedNode(TR::Node *,TR::Compilation *,TR::Node *,_Bool),1,TR,LocalAnalysis
isSupportedNodeForFieldPrivatization,isSupportedNodeForFieldPrivatization(TR::Node *,TR::Compilation *,TR::Node *),1,TR,LocalAnalysis
isSupportedNodeForFunctionality,isSupportedNodeForFunctionality(TR::Node *,TR::Compilation *,TR::Node *,_Bool),1,TR,LocalAnalysis
isSupportedNodeForPREPerformance,isSupportedNodeForPREPerformance(TR::Node *,TR::Compilation *,TR::Node *),1,TR,LocalAnalysis
isSupportedOpCode,isSupportedOpCode(TR::ILOpCode &,TR::Compilation *),1,TR,LocalAnalysis
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,LocalAnalysis
jitPersistentFree,jitPersistentFree(void *),1,TR,LocalAnalysis
killDownwardExposedExprs,killDownwardExposedExprs(TR::Block *,TR::Node *),1,TR,LocalAnticipatability
killDownwardExposedExprs,killDownwardExposedExprs(TR::Block *,ContainerType *,TR::Node *),0,TR,LocalAnticipatability
loadaddrAsLoad,loadaddrAsLoad(),1,TR,LocalAnticipatability
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,LocalAnalysis
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,LocalAnalysis
operator delete,operator delete(void *,TR::Region &),0,TR,LocalAnalysis
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,LocalAnalysis
operator delete,operator delete(void *,size_t),0,TR,LocalAnalysis
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,TR,LocalAnalysis
operator delete[],operator delete[](void *,TR::Region &),0,TR,LocalAnalysis
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,LocalAnalysis
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,LocalAnalysis
operator new,operator new(size_t,TR::Region &),1,TR,LocalAnalysis
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,LocalAnalysis
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,LocalAnalysis
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,LocalAnalysis
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,LocalAnalysis
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,LocalAnalysis
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,LocalAnalysis
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,LocalAnalysis
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,LocalAnalysis
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,LocalAnalysis
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,LocalAnalysis
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,LocalAnalysis
operator new[],operator new[](size_t,TR::Region &),0,TR,LocalAnalysis
operator=,operator=(class TR_LocalAnalysis &&),1,TR,LocalAnalysis
operator=,operator=(const class TR_LocalAnalysis &),0,TR,LocalAnalysis
operator=,operator=(class TR_LocalAnticipatability &&),0,TR,LocalAnticipatability
trHeapMemory,trHeapMemory(),1,TR,LocalAnalysis
trMemory,trMemory(),1,TR,LocalAnalysis
trStackMemory,trStackMemory(),1,TR,LocalAnalysis
trace,trace(),1,TR,LocalAnalysis
updateAnticipatabilityForSupportedNodes,updateAnticipatabilityForSupportedNodes(TR::Node *,ContainerType *,ContainerType *,TR::Block *,ContainerType *,ContainerType *,ContainerType *,class TR_BitVector *,ContainerType *,vcount_t),1,TR,LocalAnticipatability
updateUsesAndDefs,updateUsesAndDefs(TR::Node *,TR::Block *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,class TR_BitVector *,ContainerType *,vcount_t),1,TR,LocalAnticipatability
~TR_LocalAnalysis,~TR_LocalAnalysis(),1,TR,LocalAnalysis
~TR_LocalAnticipatability,~TR_LocalAnticipatability(),1,TR,LocalAnticipatability
TR_LocalTransparency,TR_LocalTransparency(class TR_LocalAnalysisInfo &,_Bool),1,TR,LocalTransparency
adjustInfoForAddressAdd,adjustInfoForAddressAdd(TR::Node *,TR::Node *,ContainerType *,ContainerType *),1,TR,LocalTransparency
getTransparencyInfo,getTransparencyInfo(int32_t),1,TR,LocalTransparency
loadaddrAsLoad,loadaddrAsLoad(),1,TR,LocalTransparency
operator=,operator=(const class TR_LocalTransparency &),0,TR,LocalTransparency
operator=,operator=(class TR_LocalTransparency &&),0,TR,LocalTransparency
updateInfoForSupportedNodes,updateInfoForSupportedNodes(TR::Node *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,vcount_t),1,TR,LocalTransparency
updateUsesAndDefs,updateUsesAndDefs(TR::Node *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,ContainerType *,vcount_t,ContainerType *,class TR_BitVector *,ContainerType *),1,TR,LocalTransparency
~TR_LocalTransparency,~TR_LocalTransparency(),1,TR,LocalTransparency
TR_ReachingBlocks,TR_ReachingBlocks(TR::Compilation *,TR::Optimizer *,_Bool),1,TR,ReachingBlocks
operator=,operator=(const class TR_ReachingBlocks &),0,TR,ReachingBlocks
operator=,operator=(class TR_ReachingBlocks &&),0,TR,ReachingBlocks
~TR_ReachingBlocks,~TR_ReachingBlocks(),1,TR,ReachingBlocks
TR_ReachingDefinitions,TR_ReachingDefinitions(TR::Compilation *,TR::CFG *,TR::Optimizer *,class TR_UseDefInfo *,class TR_UseDefInfo::AuxiliaryData &,_Bool),1,TR,ReachingDefinitions
initializeGenAndKillSetInfoForNode,initializeGenAndKillSetInfoForNode(TR::Node *,class TR_UseDefInfo::BitVector &,_Bool,int32_t,TR::Node *),1,TR,ReachingDefinitions
operator=,operator=(class TR_ReachingDefinitions &&),0,TR,ReachingDefinitions
operator=,operator=(const class TR_ReachingDefinitions &),0,TR,ReachingDefinitions
traceRD,traceRD(),1,TR,ReachingDefinitions
~TR_ReachingDefinitions,~TR_ReachingDefinitions(),1,TR,ReachingDefinitions
TR_RegisterAnticipatability,TR_RegisterAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool),1,TR,RegisterAnticipatability
initializeRegisterUsageInfo,initializeRegisterUsageInfo(),1,TR,RegisterAnticipatability
operator=,operator=(const class TR_RegisterAnticipatability &),0,TR,RegisterAnticipatability
operator=,operator=(class TR_RegisterAnticipatability &&),0,TR,RegisterAnticipatability
~TR_RegisterAnticipatability,~TR_RegisterAnticipatability(),1,TR,RegisterAnticipatability
TR_RegisterAvailability,TR_RegisterAvailability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool),1,TR,RegisterAvailability
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *),0,TR,RegisterAvailability
initializeRegisterUsageInfo,initializeRegisterUsageInfo(),1,TR,RegisterAvailability
operator=,operator=(class TR_RegisterAvailability &&),0,TR,RegisterAvailability
operator=,operator=(const class TR_RegisterAvailability &),0,TR,RegisterAvailability
~TR_RegisterAvailability,~TR_RegisterAvailability(),1,TR,RegisterAvailability
TR_UnionSingleBitContainerAnalysis,TR_UnionSingleBitContainerAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),1,TR,UnionSingleBitContainerAnalysis
operator=,operator=(class TR_UnionSingleBitContainerAnalysis &&),0,TR,UnionSingleBitContainerAnalysis
operator=,operator=(const class TR_UnionSingleBitContainerAnalysis &),0,TR,UnionSingleBitContainerAnalysis
~TR_UnionSingleBitContainerAnalysis,~TR_UnionSingleBitContainerAnalysis(),1,TR,UnionSingleBitContainerAnalysis
TR_UseDefInfo,TR_UseDefInfo(class TR_UseDefInfo &&),1,TR,UseDefInfo
TR_UseDefInfo,TR_UseDefInfo(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool,_Bool,_Bool,_Bool,_Bool,_Bool),0,TR,UseDefInfo
_runReachingDefinitions,_runReachingDefinitions(class TR_ReachingDefinitions &,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
allocator,allocator(),1,TR,UseDefInfo
assignAdjustedNodeIndex,assignAdjustedNodeIndex(TR::Block *,TR::Node *,TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &,_Bool),1,TR,UseDefInfo
buildDefUseInfo,buildDefUseInfo(_Bool),1,TR,UseDefInfo
buildUseDefs,buildUseDefs(void *,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
buildUseDefs,buildUseDefs(TR::Node *,void *,TR::BitVector &,TR::Node *,class TR_UseDefInfo::AuxiliaryData &),0,TR,UseDefInfo
buildValueNumbersToMemorySymbolsMap,buildValueNumbersToMemorySymbolsMap(),1,TR,UseDefInfo
canComputeReachingDefs,canComputeReachingDefs(),1,TR,UseDefInfo
childIndexIndicatesImplicitStore,childIndexIndicatesImplicitStore(TR::Node *,int32_t),1,TR,UseDefInfo
clearNode,clearNode(int32_t),1,TR,UseDefInfo
clearUseDef,clearUseDef(int32_t),1,TR,UseDefInfo
comp,comp(),1,TR,UseDefInfo
dereferenceDef,dereferenceDef(BitVector &,int32_t,BitVector &),1,TR,UseDefInfo
dereferenceDefs,dereferenceDefs(int32_t,BitVector &,BitVector &),1,TR,UseDefInfo
excludedGlobals,excludedGlobals(TR::Symbol *),1,TR,UseDefInfo
fillInDataStructures,fillInDataStructures(class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
findAndPopulateVolatileSymbolsIndex,findAndPopulateVolatileSymbolsIndex(TR::BitVector &),1,TR,UseDefInfo
findMemorySymbols,findMemorySymbols(TR::Node *),1,TR,UseDefInfo
findTrivialSymbolsToExclude,findTrivialSymbolsToExclude(TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
findUseDefNodes,findUseDefNodes(TR::Block *,TR::Node *,TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &,TR::deque<uint32_t, TR::Region &> &,_Bool),1,TR,UseDefInfo
getBitVectorSize,getBitVectorSize(),1,TR,UseDefInfo
getDefiningLoads,getDefiningLoads(BitVector &,TR::Node *),1,TR,UseDefInfo
getDefiningLoads_ref,getDefiningLoads_ref(TR::Node *),1,TR,UseDefInfo
getDefsForSymbol,getDefsForSymbol(BitVector &,int32_t,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
getDefsForSymbolIsZero,getDefsForSymbolIsZero(int32_t,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
getExpandedTotalNodes,getExpandedTotalNodes(),1,TR,UseDefInfo
getFirstDefIndex,getFirstDefIndex(),1,TR,UseDefInfo
getFirstRealDefIndex,getFirstRealDefIndex(),1,TR,UseDefInfo
getFirstUseIndex,getFirstUseIndex(),1,TR,UseDefInfo
getLastDefIndex,getLastDefIndex(),1,TR,UseDefInfo
getLastUseIndex,getLastUseIndex(),1,TR,UseDefInfo
getMemorySymbolIndex,getMemorySymbolIndex(TR::Node *),1,TR,UseDefInfo
getNode,getNode(int32_t),1,TR,UseDefInfo
getNumAliases,getNumAliases(TR::SymbolReference *,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
getNumDefNodes,getNumDefNodes(),1,TR,UseDefInfo
getNumDefOnlyNodes,getNumDefOnlyNodes(),1,TR,UseDefInfo
getNumDefsOnEntry,getNumDefsOnEntry(),1,TR,UseDefInfo
getNumExpandedDefNodes,getNumExpandedDefNodes(),1,TR,UseDefInfo
getNumExpandedDefsOnEntry,getNumExpandedDefsOnEntry(),1,TR,UseDefInfo
getNumExpandedUseNodes,getNumExpandedUseNodes(),1,TR,UseDefInfo
getNumSymbols,getNumSymbols(),1,TR,UseDefInfo
getNumUseNodes,getNumUseNodes(),1,TR,UseDefInfo
getSingleDefiningLoad,getSingleDefiningLoad(TR::Node *),1,TR,UseDefInfo
getSymRefIndexFromUseDefIndex,getSymRefIndexFromUseDefIndex(int32_t),1,TR,UseDefInfo
getTotalNodes,getTotalNodes(),1,TR,UseDefInfo
getTreeTop,getTreeTop(int32_t),1,TR,UseDefInfo
getUseDef,getUseDef(BitVector &,int32_t),1,TR,UseDefInfo
getUseDefIsZero,getUseDefIsZero(int32_t),1,TR,UseDefInfo
getUseDef_noExpansion,getUseDef_noExpansion(BitVector &,int32_t),1,TR,UseDefInfo
getUseDef_ref,getUseDef_ref(int32_t,BitVector *),1,TR,UseDefInfo
getUseDef_ref_body,getUseDef_ref_body(int32_t,class TR_UseDefInfo::BitVector &,class TR_UseDefInfo::BitVector *),1,TR,UseDefInfo
getUsesFromDef,getUsesFromDef(BitVector &,int32_t,_Bool),1,TR,UseDefInfo
getUsesFromDefIsZero,getUsesFromDefIsZero(int32_t,_Bool),1,TR,UseDefInfo
getUsesFromDef_ref,getUsesFromDef_ref(int32_t,_Bool),1,TR,UseDefInfo
hasGlobalsUseDefs,hasGlobalsUseDefs(),1,TR,UseDefInfo
hasLoadsAsDefs,hasLoadsAsDefs(),1,TR,UseDefInfo
indexSymbolsAndNodes,indexSymbolsAndNodes(class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
infoIsValid,infoIsValid(),1,TR,UseDefInfo
insertData,insertData(TR::Block *,TR::Node *,TR::Node *,TR::TreeTop *,class TR_UseDefInfo::AuxiliaryData &,TR::SparseBitVector &,_Bool),1,TR,UseDefInfo
invalidateUseDefInfo,invalidateUseDefInfo(),1,TR,UseDefInfo
isChildUse,isChildUse(TR::Node *,int32_t),1,TR,UseDefInfo
isDefIndex,isDefIndex(uint32_t),1,TR,UseDefInfo
isExpandedDefIndex,isExpandedDefIndex(uint32_t),1,TR,UseDefInfo
isExpandedUseDefIndex,isExpandedUseDefIndex(uint32_t),1,TR,UseDefInfo
isExpandedUseIndex,isExpandedUseIndex(uint32_t),1,TR,UseDefInfo
isLoadAddrUse,isLoadAddrUse(TR::Node *),1,TR,UseDefInfo
isPreciseDef,isPreciseDef(TR::Node *,TR::Node *),1,TR,UseDefInfo
isTrivialUseDefNode,isTrivialUseDefNode(TR::Node *,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
isTrivialUseDefSymRef,isTrivialUseDefSymRef(TR::SymbolReference *,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
isUseIndex,isUseIndex(uint32_t),1,TR,UseDefInfo
isValidAutoOrParm,isValidAutoOrParm(TR::SymbolReference *),1,TR,UseDefInfo
operator=,operator=(class TR_UseDefInfo &&),1,TR,UseDefInfo
operator=,operator=(const class TR_UseDefInfo &),0,TR,UseDefInfo
optimizer,optimizer(),1,TR,UseDefInfo
performAnalysis,performAnalysis(class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
prepareUseDefInfo,prepareUseDefInfo(_Bool,_Bool,_Bool,_Bool),1,TR,UseDefInfo
processReachingDefinition,processReachingDefinition(void *,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
resetDefUseInfo,resetDefUseInfo(),1,TR,UseDefInfo
resetUseDef,resetUseDef(int32_t,int32_t),1,TR,UseDefInfo
setSingleDefiningLoad,setSingleDefiningLoad(int32_t,BitVector &,BitVector &),1,TR,UseDefInfo
setUseDef,setUseDef(int32_t,int32_t),1,TR,UseDefInfo
setVolatileSybolsIndexAndRecurse,setVolatileSybolsIndexAndRecurse(TR::BitVector &,int32_t),1,TR,UseDefInfo
shouldIndexVolatileSym,shouldIndexVolatileSym(TR::SymbolReference *,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
skipAnalyzingForCompileTime,skipAnalyzingForCompileTime(TR::Node *,TR::Block *,TR::Compilation *,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
trHeapMemory,trHeapMemory(),1,TR,UseDefInfo
trMemory,trMemory(),1,TR,UseDefInfo
trStackMemory,trStackMemory(),1,TR,UseDefInfo
trace,trace(),1,TR,UseDefInfo
~TR_UseDefInfo,~TR_UseDefInfo(),1,TR,UseDefInfo
mustBeEqual,mustBeEqual(TR::VPConstraint *,OMR::ValuePropagation *),1,TR,VPConstraint
mustBeEqual,mustBeEqual(),0,TR,VPConstraint
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,VPConstraint
TR_BackwardIntersectionDFSetAnalysis,TR_BackwardIntersectionDFSetAnalysis(const class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &),1,TR,BackwardIntersectionDFSetAnalysis
TR_BackwardIntersectionDFSetAnalysis,TR_BackwardIntersectionDFSetAnalysis(class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &&),0,TR,BackwardIntersectionDFSetAnalysis
TR_BackwardIntersectionDFSetAnalysis,TR_BackwardIntersectionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,BackwardIntersectionDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,Container *),1,TR,BackwardDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *),0,TR,GlobalAnticipatability
compose,compose(class TR_BitVector *,class TR_BitVector *),0,TR,BackwardIntersectionDFSetAnalysis
initializeInfo,initializeInfo(class TR_BitVector *),0,TR,BackwardIntersectionDFSetAnalysis
inverseCompose,inverseCompose(class TR_BitVector *,class TR_BitVector *),0,TR,BackwardIntersectionDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_BitVector *),0,TR,BackwardIntersectionDFSetAnalysis
operator=,operator=(class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &&),0,TR,BackwardIntersectionDFSetAnalysis
operator=,operator=(const class TR_BackwardIntersectionDFSetAnalysis<class TR_BitVector *> &),0,TR,BackwardIntersectionDFSetAnalysis
~TR_BackwardIntersectionDFSetAnalysis,~TR_BackwardIntersectionDFSetAnalysis(),1,TR,BackwardIntersectionDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *),0,TR,Liveness
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *),0,TR,LiveOnAllPaths
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,LocalAnalysis
operator new,operator new(size_t,TR::Region &),0,TR,LocalAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *),0,TR,RegisterAnticipatability
TR_BackwardUnionDFSetAnalysis,TR_BackwardUnionDFSetAnalysis(const class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &),1,TR,BackwardUnionDFSetAnalysis
TR_BackwardUnionDFSetAnalysis,TR_BackwardUnionDFSetAnalysis(const class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &),0,TR,BackwardUnionDFSetAnalysis
TR_BackwardUnionDFSetAnalysis,TR_BackwardUnionDFSetAnalysis(class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &&),0,TR,BackwardUnionDFSetAnalysis
TR_BackwardUnionDFSetAnalysis,TR_BackwardUnionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,BackwardUnionDFSetAnalysis
TR_BackwardUnionDFSetAnalysis,TR_BackwardUnionDFSetAnalysis(class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &&),0,TR,BackwardUnionDFSetAnalysis
compose,compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *),0,TR,BackwardUnionDFSetAnalysis
compose,compose(class TR_BitVector *,class TR_BitVector *),0,TR,BackwardUnionDFSetAnalysis
initializeInfo,initializeInfo(class TR_SingleBitContainer *),0,TR,BackwardUnionDFSetAnalysis
initializeInfo,initializeInfo(class TR_BitVector *),0,TR,BackwardUnionDFSetAnalysis
inverseCompose,inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *),0,TR,BackwardUnionDFSetAnalysis
inverseCompose,inverseCompose(class TR_BitVector *,class TR_BitVector *),0,TR,BackwardUnionDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_SingleBitContainer *),0,TR,BackwardUnionDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_BitVector *),0,TR,BackwardUnionDFSetAnalysis
operator=,operator=(class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &&),0,TR,BackwardUnionDFSetAnalysis
operator=,operator=(const class TR_BackwardUnionDFSetAnalysis<class TR_SingleBitContainer *> &),0,TR,BackwardUnionDFSetAnalysis
operator=,operator=(const class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &),0,TR,BackwardUnionDFSetAnalysis
operator=,operator=(class TR_BackwardUnionDFSetAnalysis<class TR_BitVector *> &&),0,TR,BackwardUnionDFSetAnalysis
~TR_BackwardUnionDFSetAnalysis,~TR_BackwardUnionDFSetAnalysis(),1,TR,BackwardUnionDFSetAnalysis
TR_BasicDFSetAnalysis,TR_BasicDFSetAnalysis(class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &&),1,TR,BasicDFSetAnalysis
TR_BasicDFSetAnalysis,TR_BasicDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,BasicDFSetAnalysis
TR_BasicDFSetAnalysis,TR_BasicDFSetAnalysis(const class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &),0,TR,BasicDFSetAnalysis
TR_BasicDFSetAnalysis,TR_BasicDFSetAnalysis(const class TR_BasicDFSetAnalysis<class TR_BitVector *> &),0,TR,BasicDFSetAnalysis
TR_BasicDFSetAnalysis,TR_BasicDFSetAnalysis(class TR_BasicDFSetAnalysis<class TR_BitVector *> &&),0,TR,BasicDFSetAnalysis
allocateBlockInfoContainer,allocateBlockInfoContainer(class TR_SingleBitContainer **,class TR_SingleBitContainer *),1,TR,BasicDFSetAnalysis
allocateBlockInfoContainer,allocateBlockInfoContainer(Container **,Container *),0,TR,BasicDFSetAnalysis
allocateBlockInfoContainer,allocateBlockInfoContainer(class TR_SingleBitContainer **,_Bool,_Bool),0,TR,BasicDFSetAnalysis
allocateBlockInfoContainer,allocateBlockInfoContainer(class TR_BitVector **,_Bool,_Bool),0,TR,BasicDFSetAnalysis
allocateBlockInfoContainer,allocateBlockInfoContainer(class TR_BitVector **,class TR_BitVector *),0,TR,BasicDFSetAnalysis
allocateContainer,allocateContainer(class TR_SingleBitContainer **,_Bool,_Bool),1,TR,BasicDFSetAnalysis
allocateContainer,allocateContainer(class TR_BitVector **,_Bool,_Bool),0,TR,BasicDFSetAnalysis
allocateContainer,allocateContainer(Container **,_Bool,_Bool),0,TR,BasicDFSetAnalysis
allocateTempContainer,allocateTempContainer(class TR_SingleBitContainer **,class TR_SingleBitContainer *),0,TR,BasicDFSetAnalysis
allocateTempContainer,allocateTempContainer(class TR_BitVector **,class TR_BitVector *),0,TR,BasicDFSetAnalysis
clearAnalysisInfo,clearAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *),0,TR,BasicDFSetAnalysis
clearAnalysisInfo,clearAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *),0,TR,BasicDFSetAnalysis
compose,compose(class TR_BitVector *,class TR_BitVector *),1,TR,BasicDFSetAnalysis
compose,compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *),0,TR,BasicDFSetAnalysis
compose,compose(Container *,Container *),0,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *,TR::Block *),1,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,class TR_Structure *),0,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *,class TR_Structure *),0,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *,class TR_Structure *),0,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *,class TR_RegionStructure *),0,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_BitVector *>::ExtraAnalysisInfo *,TR::Block *),0,TR,BasicDFSetAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<class TR_SingleBitContainer *>::ExtraAnalysisInfo *,class TR_RegionStructure *),0,TR,BasicDFSetAnalysis
initializeInfo,initializeInfo(class TR_BitVector *),1,TR,BasicDFSetAnalysis
initializeInfo,initializeInfo(Container *),0,TR,BasicDFSetAnalysis
initializeInfo,initializeInfo(class TR_SingleBitContainer *),0,TR,BasicDFSetAnalysis
inverseCompose,inverseCompose(class TR_BitVector *,class TR_BitVector *),1,TR,BasicDFSetAnalysis
inverseCompose,inverseCompose(Container *,Container *),0,TR,BasicDFSetAnalysis
inverseCompose,inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *),0,TR,BasicDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_SingleBitContainer *),1,TR,BasicDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_BitVector *),0,TR,BasicDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(Container *),0,TR,BasicDFSetAnalysis
operator=,operator=(class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &&),0,TR,BasicDFSetAnalysis
operator=,operator=(const class TR_BasicDFSetAnalysis<class TR_SingleBitContainer *> &),0,TR,BasicDFSetAnalysis
operator=,operator=(const class TR_BasicDFSetAnalysis<class TR_BitVector *> &),0,TR,BasicDFSetAnalysis
operator=,operator=(class TR_BasicDFSetAnalysis<class TR_BitVector *> &&),0,TR,BasicDFSetAnalysis
~TR_BasicDFSetAnalysis,~TR_BasicDFSetAnalysis(),1,TR,BasicDFSetAnalysis
TR_ForwardDFSetAnalysis,TR_ForwardDFSetAnalysis(class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &&),1,TR,ForwardDFSetAnalysis
TR_ForwardDFSetAnalysis,TR_ForwardDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,ForwardDFSetAnalysis
TR_ForwardDFSetAnalysis,TR_ForwardDFSetAnalysis(class TR_ForwardDFSetAnalysis<class TR_BitVector *> &&),0,TR,ForwardDFSetAnalysis
TR_ForwardDFSetAnalysis,TR_ForwardDFSetAnalysis(const class TR_ForwardDFSetAnalysis<class TR_BitVector *> &),0,TR,ForwardDFSetAnalysis
TR_ForwardDFSetAnalysis,TR_ForwardDFSetAnalysis(const class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &),0,TR,ForwardDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_SingleBitContainer *),0,TR,ForwardDFSetAnalysis
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,class TR_BitVector *),0,TR,ForwardDFSetAnalysis
operator=,operator=(class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &&),0,TR,ForwardDFSetAnalysis
operator=,operator=(const class TR_ForwardDFSetAnalysis<class TR_BitVector *> &),0,TR,ForwardDFSetAnalysis
operator=,operator=(const class TR_ForwardDFSetAnalysis<class TR_SingleBitContainer *> &),0,TR,ForwardDFSetAnalysis
operator=,operator=(class TR_ForwardDFSetAnalysis<class TR_BitVector *> &&),0,TR,ForwardDFSetAnalysis
~TR_ForwardDFSetAnalysis,~TR_ForwardDFSetAnalysis(),1,TR,ForwardDFSetAnalysis
TR_CatchBlockRemover,TR_CatchBlockRemover(class TR_CatchBlockRemover &&),1,TR,CatchBlockRemover
TR_CatchBlockRemover,TR_CatchBlockRemover(const class TR_CatchBlockRemover &),0,TR,CatchBlockRemover
TR_CatchBlockRemover,TR_CatchBlockRemover(TR::OptimizationManager *),0,TR,CatchBlockRemover
create,create(TR::OptimizationManager *),1,TR,CatchBlockRemover
operator=,operator=(const class TR_CatchBlockRemover &),0,TR,CatchBlockRemover
operator=,operator=(class TR_CatchBlockRemover &&),0,TR,CatchBlockRemover
~TR_CatchBlockRemover,~TR_CatchBlockRemover(),1,TR,CatchBlockRemover
TR_CFGSimplifier,TR_CFGSimplifier(class TR_CFGSimplifier &&),1,TR,CFGSimplifier
TR_CFGSimplifier,TR_CFGSimplifier(const class TR_CFGSimplifier &),0,TR,CFGSimplifier
TR_CFGSimplifier,TR_CFGSimplifier(TR::OptimizationManager *),0,TR,CFGSimplifier
canReverseBranchMask,canReverseBranchMask(),1,TR,CFGSimplifier
create,create(TR::OptimizationManager *),1,TR,CFGSimplifier
getFallThroughBlock,getFallThroughBlock(TR::Block *),1,TR,CFGSimplifier
getLastRealTreetop,getLastRealTreetop(TR::Block *),1,TR,CFGSimplifier
getNextRealTreetop,getNextRealTreetop(TR::TreeTop *,_Bool),1,TR,CFGSimplifier
operator=,operator=(class TR_CFGSimplifier &&),0,TR,CFGSimplifier
operator=,operator=(const class TR_CFGSimplifier &),0,TR,CFGSimplifier
simplify,simplify(),1,TR,CFGSimplifier
simplifyBooleanStore,simplifyBooleanStore(),1,TR,CFGSimplifier
simplifyCondCodeBooleanStore,simplifyCondCodeBooleanStore(TR::Block *,TR::Node *,TR::Node *,TR::Node *),1,TR,CFGSimplifier
~TR_CFGSimplifier,~TR_CFGSimplifier(),1,TR,CFGSimplifier
operator new[],operator new[](size_t,TR::Region &),1,OMR,CFG
TR_CompactLocals,TR_CompactLocals(const class TR_CompactLocals &),1,TR,CompactLocals
TR_CompactLocals,TR_CompactLocals(TR::OptimizationManager *),0,TR,CompactLocals
TR_CompactLocals,TR_CompactLocals(class TR_CompactLocals &&),0,TR,CompactLocals
assignColorsToSymbols,assignColorsToSymbols(class TR_BitVector *),1,TR,CompactLocals
create,create(TR::OptimizationManager *),1,TR,CompactLocals
createInterferenceBetween,createInterferenceBetween(class TR_BitVector *),1,TR,CompactLocals
createInterferenceBetween,createInterferenceBetween(class TR_BitVector *,class TR_BitVector *),0,TR,CompactLocals
createInterferenceBetweenLocals,createInterferenceBetweenLocals(int32_t),1,TR,CompactLocals
doCompactLocals,doCompactLocals(),1,TR,CompactLocals
eligibleLocal,eligibleLocal(TR::AutomaticSymbol *),1,TR,CompactLocals
operator=,operator=(class TR_CompactLocals &&),0,TR,CompactLocals
operator=,operator=(const class TR_CompactLocals &),0,TR,CompactLocals
processNodeInPreorder,processNodeInPreorder(TR::Node *,vcount_t,class TR_Liveness *,TR::Block *,_Bool),1,TR,CompactLocals
~TR_CompactLocals,~TR_CompactLocals(),1,TR,CompactLocals
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Optimizer
mustBeLessThanOrEqual,mustBeLessThanOrEqual(),1,TR,VPConstraint
mustBeLessThanOrEqual,mustBeLessThanOrEqual(TR::VPConstraint *,OMR::ValuePropagation *),0,TR,VPConstraint
allocateBlockInfoContainer,allocateBlockInfoContainer(Container **,_Bool,_Bool),1,TR,BasicDFSetAnalysis
TR_BackwardUnionBitVectorAnalysis,TR_BackwardUnionBitVectorAnalysis(class TR_BackwardUnionBitVectorAnalysis &&),1,TR,BackwardUnionBitVectorAnalysis
TR_BackwardUnionBitVectorAnalysis,TR_BackwardUnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,BackwardUnionBitVectorAnalysis
TR_BackwardUnionBitVectorAnalysis,TR_BackwardUnionBitVectorAnalysis(const class TR_BackwardUnionBitVectorAnalysis &),0,TR,BackwardUnionBitVectorAnalysis
TR_Liveness,TR_Liveness(const class TR_Liveness &),1,TR,Liveness
TR_Liveness,TR_Liveness(class TR_Liveness &&),0,TR,Liveness
TR_Liveness,TR_Liveness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool,class TR_LiveVariableInformation *,_Bool,_Bool),0,TR,Liveness
TR_UseDefInfo,TR_UseDefInfo(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool,_Bool,_Bool,_Bool,_Bool,_Bool),1,TR,UseDefInfo
TR_UseDefInfo,TR_UseDefInfo(class TR_UseDefInfo &&),0,TR,UseDefInfo
buildUseDefs,buildUseDefs(TR::Node *,void *,TR::BitVector &,TR::Node *,class TR_UseDefInfo::AuxiliaryData &),1,TR,UseDefInfo
buildUseDefs,buildUseDefs(void *,class TR_UseDefInfo::AuxiliaryData &),0,TR,UseDefInfo
TR_CopyPropagation,TR_CopyPropagation(class TR_CopyPropagation &&),1,TR,CopyPropagation
TR_CopyPropagation,TR_CopyPropagation(const class TR_CopyPropagation &),0,TR,CopyPropagation
TR_CopyPropagation,TR_CopyPropagation(TR::OptimizationManager *),0,TR,CopyPropagation
adjustUseDefInfo,adjustUseDefInfo(TR::Node *,TR::Node *,class TR_UseDefInfo *),1,TR,CopyPropagation
areAllDefsInCorrectForm,areAllDefsInCorrectForm(TR::Node *,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *,int32_t,TR::Node *&,int32_t &,TR::Node *&),1,TR,CopyPropagation
commonIndirectLoadsFromAutos,commonIndirectLoadsFromAutos(),1,TR,CopyPropagation
containsLoadOfSymbol,containsLoadOfSymbol(TR::Node *,TR::SymbolReference *,TR::Node **),1,TR,CopyPropagation
containsNode,containsNode(TR::Node *,TR::Node *,_Bool),1,TR,CopyPropagation
create,create(TR::OptimizationManager *),1,TR,CopyPropagation
findAnchorTree,findAnchorTree(TR::Node *,TR::Node *),1,TR,CopyPropagation
findUseTree,findUseTree(TR::Node *),1,TR,CopyPropagation
isBaseAddrAvailable,isBaseAddrAvailable(TR::Node *,TR::Node *,_Bool &),1,TR,CopyPropagation
isCheapRematerializationCandidate,isCheapRematerializationCandidate(TR::Node *,TR::Node *),1,TR,CopyPropagation
isCorrectToPropagate,isCorrectToPropagate(TR::Node *,TR::Node *,TR::list<TR::Node *> &,TR::SparseBitVector &,int32_t,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *),1,TR,CopyPropagation
isCorrectToReplace,isCorrectToReplace(TR::Node *,TR::Node *,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *),1,TR,CopyPropagation
isIndirectLoadFromAuto,isIndirectLoadFromAuto(TR::Node *),1,TR,CopyPropagation
isIndirectLoadFromRegister,isIndirectLoadFromRegister(TR::Node *,TR::Node *&),1,TR,CopyPropagation
isLoadNodeSuitableForPropagation,isLoadNodeSuitableForPropagation(TR::Node *,TR::Node *,TR::Node *),1,TR,CopyPropagation
isLoadVarWithConst,isLoadVarWithConst(TR::Node *),1,TR,CopyPropagation
isNodeAvailableInBlock,isNodeAvailableInBlock(TR::TreeTop *,TR::Node *),1,TR,CopyPropagation
isRedefinedBetweenStoreTreeAnd,isRedefinedBetweenStoreTreeAnd(TR::list<TR::Node *> &,TR::SparseBitVector &,TR::Node *,TR::TreeTop *,int32_t,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *),1,TR,CopyPropagation
isSafeToPropagate,isSafeToPropagate(TR::Node *,TR::Node *),1,TR,CopyPropagation
isUniqueDefinitionOfUse,isUniqueDefinitionOfUse(class TR_BitVector *,class TR_UseDefInfo *,int32_t),1,TR,CopyPropagation
isValidRegLoad,isValidRegLoad(TR::Node *,TR::TreeTop *,int32_t &),1,TR,CopyPropagation
operator=,operator=(class TR_CopyPropagation &&),0,TR,CopyPropagation
operator=,operator=(const class TR_CopyPropagation &),0,TR,CopyPropagation
recursive_isRedefinedBetweenStoreTreeAnd,recursive_isRedefinedBetweenStoreTreeAnd(TR::list<TR::Node *> &,TR::SparseBitVector &,TR::Node *,TR::TreeTop *,int32_t,const class TR_UseDefInfo::BitVector &,class TR_UseDefInfo *),1,TR,CopyPropagation
rematerializeIndirectLoadsFromAutos,rematerializeIndirectLoadsFromAutos(),1,TR,CopyPropagation
replaceCopySymbolReferenceByOriginalIn,replaceCopySymbolReferenceByOriginalIn(TR::SymbolReference *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,_Bool),1,TR,CopyPropagation
replaceCopySymbolReferenceByOriginalRegLoadIn,replaceCopySymbolReferenceByOriginalRegLoadIn(TR::Node *,TR::Node *,TR::SymbolReference *,TR::Node *,TR::Node *,int32_t),1,TR,CopyPropagation
skipTreeTopAndGetNode,skipTreeTopAndGetNode(TR::TreeTop *),1,TR,CopyPropagation
~TR_CopyPropagation,~TR_CopyPropagation(),1,TR,CopyPropagation
TransformUtil,TransformUtil(const class OMR::TransformUtil &),1,OMR,TransformUtil
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,TransformUtil
operator delete,operator delete(void *,size_t),0,OMR,TransformUtil
operator delete[],operator delete[](void *,TR::Region &),1,OMR,TransformUtil
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,TransformUtil
TR_DeadStoreElimination,TR_DeadStoreElimination(class TR_DeadStoreElimination &&),1,TR,DeadStoreElimination
TR_DeadStoreElimination,TR_DeadStoreElimination(const class TR_DeadStoreElimination &),0,TR,DeadStoreElimination
TR_DeadStoreElimination,TR_DeadStoreElimination(TR::OptimizationManager *),0,TR,DeadStoreElimination
TR_IsolatedStoreElimination,TR_IsolatedStoreElimination(class TR_IsolatedStoreElimination &&),1,TR,IsolatedStoreElimination
TR_IsolatedStoreElimination,TR_IsolatedStoreElimination(const class TR_IsolatedStoreElimination &),0,TR,IsolatedStoreElimination
TR_IsolatedStoreElimination,TR_IsolatedStoreElimination(TR::OptimizationManager *),0,TR,IsolatedStoreElimination
analyzeSingleBlockLoop,analyzeSingleBlockLoop(class TR_RegionStructure *,TR::Block *),1,TR,IsolatedStoreElimination
canRemoveStoreNode,canRemoveStoreNode(TR::Node *),1,TR,IsolatedStoreElimination
collectDefParentInfo,collectDefParentInfo(int32_t,TR::Node *,class TR_UseDefInfo *),1,TR,IsolatedStoreElimination
create,create(TR::OptimizationManager *),1,TR,IsolatedStoreElimination
examineNode,examineNode(TR::Node *,vcount_t,_Bool),1,TR,IsolatedStoreElimination
findStructuresAndNodesUsedIn,findStructuresAndNodesUsedIn(class TR_UseDefInfo *,class TR_Structure *,vcount_t,class TR_BitVector *,_Bool *),1,TR,IsolatedStoreElimination
groupIsolatedStores,groupIsolatedStores(int32_t,class TR_BitVector *,class TR_UseDefInfo *),1,TR,IsolatedStoreElimination
markNodesAndLocateSideEffectIn,markNodesAndLocateSideEffectIn(TR::Node *,vcount_t,class TR_BitVector *),1,TR,IsolatedStoreElimination
operator=,operator=(class TR_IsolatedStoreElimination &&),0,TR,IsolatedStoreElimination
operator=,operator=(const class TR_IsolatedStoreElimination &),0,TR,IsolatedStoreElimination
operator=,operator=(class TR_DeadStoreElimination &&),0,TR,DeadStoreElimination
operator=,operator=(const class TR_DeadStoreElimination &),0,TR,DeadStoreElimination
performDeadStructureRemoval,performDeadStructureRemoval(class TR_UseDefInfo *),1,TR,IsolatedStoreElimination
performWithUseDefInfo,performWithUseDefInfo(),1,TR,IsolatedStoreElimination
performWithoutUseDefInfo,performWithoutUseDefInfo(),1,TR,IsolatedStoreElimination
removeRedundantSpills,removeRedundantSpills(),1,TR,IsolatedStoreElimination
~TR_DeadStoreElimination,~TR_DeadStoreElimination(),1,TR,DeadStoreElimination
~TR_IsolatedStoreElimination,~TR_IsolatedStoreElimination(),1,TR,IsolatedStoreElimination
AllBlockIterator,AllBlockIterator(TR::CFG *,TR::Compilation *,const char *),1,TR,AllBlockIterator
BlockChecklist,BlockChecklist(class TR::BlockChecklist &&),1,TR,BlockChecklist
remove,remove(class TR::BlockChecklist &),1,TR,BlockChecklist
remove,remove(TR::Block *),0,TR,BlockChecklist
DeadTreesElimination,DeadTreesElimination(class TR::DeadTreesElimination &&),1,TR,DeadTreesElimination
DeadTreesElimination,DeadTreesElimination(const class TR::DeadTreesElimination &),0,TR,DeadTreesElimination
DeadTreesElimination,DeadTreesElimination(TR::OptimizationManager *),0,TR,DeadTreesElimination
TR_HasRandomGenerator,TR_HasRandomGenerator(const class TR_HasRandomGenerator &),1,TR,HasRandomGenerator
create,create(TR::OptimizationManager *),1,TR,DeadTreesElimination
findLastTreetop,findLastTreetop(TR::Block *,TR::TreeTop *),1,TR,DeadTreesElimination
operator=,operator=(const class TR::DeadTreesElimination &),0,TR,DeadTreesElimination
operator=,operator=(class TR::DeadTreesElimination &&),0,TR,DeadTreesElimination
process,process(TR::TreeTop *,TR::TreeTop *),1,TR,DeadTreesElimination
randomInt,randomInt(int32_t),1,TR,HasRandomGenerator
~DeadTreesElimination,~DeadTreesElimination(),1,TR,DeadTreesElimination
NodeIterator,NodeIterator(const class TR::NodeIterator &),1,TR,NodeIterator
NodeIterator,NodeIterator(class TR::NodeIterator &&),0,TR,NodeIterator
NodeOccurrenceIterator,NodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *),1,TR,NodeOccurrenceIterator
PostorderNodeOccurrenceIterator,PostorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *),1,TR,PostorderNodeOccurrenceIterator
operator=,operator=(const class TR::TreeTopIteratorImpl &),1,TR,TreeTopIteratorImpl
operator=,operator=(class TR::TreeTopIteratorImpl &&),0,TR,TreeTopIteratorImpl
PostorderNodeIterator,PostorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *),1,TR,PostorderNodeIterator
PreorderNodeIterator,PreorderNodeIterator(TR::TreeTop *,TR::Compilation *,const char *),1,TR,PreorderNodeIterator
PreorderNodeOccurrenceIterator,PreorderNodeOccurrenceIterator(TR::TreeTop *,TR::Compilation *,const char *),1,TR,PreorderNodeOccurrenceIterator
TreeTopIterator,TreeTopIterator(class TR::TreeTopIterator &&),1,TR,TreeTopIterator
TreeTopIterator,TreeTopIterator(TR::TreeTop *,TR::Compilation *,const char *),0,TR,TreeTopIterator
TreeTopIterator,TreeTopIterator(const class TR::TreeTopIterator &),0,TR,TreeTopIterator
TR_Delayedness,TR_Delayedness(const class TR_Delayedness &),1,TR,Delayedness
TR_Delayedness,TR_Delayedness(class TR_Delayedness &&),0,TR,Delayedness
TR_Delayedness,TR_Delayedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),0,TR,Delayedness
TR_IntersectionBitVectorAnalysis,TR_IntersectionBitVectorAnalysis(const class TR_IntersectionBitVectorAnalysis &),1,TR,IntersectionBitVectorAnalysis
TR_IntersectionBitVectorAnalysis,TR_IntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,IntersectionBitVectorAnalysis
TR_IntersectionBitVectorAnalysis,TR_IntersectionBitVectorAnalysis(class TR_IntersectionBitVectorAnalysis &&),0,TR,IntersectionBitVectorAnalysis
TR_Earliestness,TR_Earliestness(class TR_Earliestness &&),1,TR,Earliestness
TR_Earliestness,TR_Earliestness(const class TR_Earliestness &),0,TR,Earliestness
TR_Earliestness,TR_Earliestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),0,TR,Earliestness
TR_UnionBitVectorAnalysis,TR_UnionBitVectorAnalysis(class TR_UnionBitVectorAnalysis &&),1,TR,UnionBitVectorAnalysis
TR_UnionBitVectorAnalysis,TR_UnionBitVectorAnalysis(const class TR_UnionBitVectorAnalysis &),0,TR,UnionBitVectorAnalysis
TR_UnionBitVectorAnalysis,TR_UnionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,UnionBitVectorAnalysis
TR_BackwardIntersectionBitVectorAnalysis,TR_BackwardIntersectionBitVectorAnalysis(class TR_BackwardIntersectionBitVectorAnalysis &&),1,TR,BackwardIntersectionBitVectorAnalysis
TR_BackwardIntersectionBitVectorAnalysis,TR_BackwardIntersectionBitVectorAnalysis(const class TR_BackwardIntersectionBitVectorAnalysis &),0,TR,BackwardIntersectionBitVectorAnalysis
TR_BackwardIntersectionBitVectorAnalysis,TR_BackwardIntersectionBitVectorAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,BackwardIntersectionBitVectorAnalysis
TR_GlobalAnticipatability,TR_GlobalAnticipatability(class TR_GlobalAnticipatability &&),1,TR,GlobalAnticipatability
TR_GlobalAnticipatability,TR_GlobalAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),0,TR,GlobalAnticipatability
TR_GlobalAnticipatability,TR_GlobalAnticipatability(const class TR_GlobalAnticipatability &),0,TR,GlobalAnticipatability
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,HashTab
TR_LocalAnalysis,TR_LocalAnalysis(const class TR_LocalAnalysis &),1,TR,LocalAnalysis
TR_LocalAnalysis,TR_LocalAnalysis(class TR_LocalAnalysisInfo &,_Bool),0,TR,LocalAnalysis
TR_LocalAnalysis,TR_LocalAnalysis(class TR_LocalAnalysis &&),0,TR,LocalAnalysis
TR_LocalAnticipatability,TR_LocalAnticipatability(class TR_LocalAnticipatability &&),1,TR,LocalAnticipatability
TR_LocalAnticipatability,TR_LocalAnticipatability(const class TR_LocalAnticipatability &),0,TR,LocalAnticipatability
TR_LocalAnticipatability,TR_LocalAnticipatability(class TR_LocalAnalysisInfo &,class TR_LocalTransparency *,_Bool),0,TR,LocalAnticipatability
killDownwardExposedExprs,killDownwardExposedExprs(TR::Block *,ContainerType *,TR::Node *),1,TR,LocalAnticipatability
killDownwardExposedExprs,killDownwardExposedExprs(TR::Block *,TR::Node *),0,TR,LocalAnticipatability
TR_LocalTransparency,TR_LocalTransparency(const class TR_LocalTransparency &),1,TR,LocalTransparency
TR_LocalTransparency,TR_LocalTransparency(class TR_LocalAnalysisInfo &,_Bool),0,TR,LocalTransparency
TR_LocalTransparency,TR_LocalTransparency(class TR_LocalTransparency &&),0,TR,LocalTransparency
TR_ExpressionsSimplification,TR_ExpressionsSimplification(class TR_ExpressionsSimplification &&),1,TR,ExpressionsSimplification
TR_ExpressionsSimplification,TR_ExpressionsSimplification(const class TR_ExpressionsSimplification &),0,TR,ExpressionsSimplification
TR_ExpressionsSimplification,TR_ExpressionsSimplification(TR::OptimizationManager *),0,TR,ExpressionsSimplification
checkForLoad,checkForLoad(TR::Node *,TR::Node *),1,TR,ExpressionsSimplification
create,create(TR::OptimizationManager *),1,TR,ExpressionsSimplification
findAndSimplifyInvariantLoopExpressions,findAndSimplifyInvariantLoopExpressions(class TR_RegionStructure *),1,TR,ExpressionsSimplification
findLoopInfo,findLoopInfo(class TR_RegionStructure *),1,TR,ExpressionsSimplification
findPredecessorBlock,findPredecessorBlock(TR::CFGNode *),1,TR,ExpressionsSimplification
findUseInRegion,findUseInRegion(class TR_RegionStructure *,uint16_t,uint16_t),1,TR,ExpressionsSimplification
findUseInRegion,findUseInRegion(TR::Node *,uint16_t,uint16_t),0,TR,ExpressionsSimplification
iaddisubSimplifier,iaddisubSimplifier(TR::Node *,class TR_ExpressionsSimplification::LoopInfo *),1,TR,ExpressionsSimplification
invalidateCandidates,invalidateCandidates(),1,TR,ExpressionsSimplification
isSupportedNodeForExpressionSimplification,isSupportedNodeForExpressionSimplification(TR::Node *),1,TR,ExpressionsSimplification
ixorinegSimplifier,ixorinegSimplifier(TR::Node *,class TR_ExpressionsSimplification::LoopInfo *,_Bool *),1,TR,ExpressionsSimplification
operator=,operator=(const class TR_ExpressionsSimplification &),0,TR,ExpressionsSimplification
operator=,operator=(class TR_ExpressionsSimplification &&),0,TR,ExpressionsSimplification
perform,perform(class TR_Structure *),0,TR,ExpressionsSimplification
removeCandidate,removeCandidate(class TR_RegionStructure *),1,TR,ExpressionsSimplification
removeCandidate,removeCandidate(TR::Node *,TR::TreeTop *),0,TR,ExpressionsSimplification
removeUncertainBlocks,removeUncertainBlocks(class TR_RegionStructure *,List<TR::Block> *),1,TR,ExpressionsSimplification
removeUnsupportedCandidates,removeUnsupportedCandidates(),1,TR,ExpressionsSimplification
setStoreMotionCandidates,setStoreMotionCandidates(TR::Node *,TR::TreeTop *),1,TR,ExpressionsSimplification
setSummationReductionCandidates,setSummationReductionCandidates(TR::Node *,TR::TreeTop *),1,TR,ExpressionsSimplification
simplifyInvariantLoopExpressions,simplifyInvariantLoopExpressions(ListIterator<TR::Block> &),1,TR,ExpressionsSimplification
tranformStoreMotionCandidate,tranformStoreMotionCandidate(TR::TreeTop *,_Bool *),1,TR,ExpressionsSimplification
tranformSummationReductionCandidate,tranformSummationReductionCandidate(TR::TreeTop *,class TR_ExpressionsSimplification::LoopInfo *,_Bool *),1,TR,ExpressionsSimplification
transformNode,transformNode(TR::Node *,TR::Block *),1,TR,ExpressionsSimplification
~TR_ExpressionsSimplification,~TR_ExpressionsSimplification(),1,TR,ExpressionsSimplification
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,CFG
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,CFG
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,LocalAnalysis
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,LocalAnalysis
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,LocalAnalysis
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,LocalAnalysis
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,LocalAnalysis
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,LocalAnalysis
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,LocalAnalysis
TR_PostDominators,TR_PostDominators(class TR_PostDominators &&),1,TR,PostDominators
TR_PostDominators,TR_PostDominators(TR::Compilation *),0,TR,PostDominators
TR_PostDominators,TR_PostDominators(const class TR_PostDominators &),0,TR,PostDominators
operator delete[],operator delete[](void *,TR::Region &),1,TR,Dominators
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Dominators
~TR_PostDominators,~TR_PostDominators(),1,TR,PostDominators
TR_FieldPrivatizer,TR_FieldPrivatizer(class TR_FieldPrivatizer &&),1,TR,FieldPrivatizer
TR_FieldPrivatizer,TR_FieldPrivatizer(TR::OptimizationManager *),0,TR,FieldPrivatizer
TR_FieldPrivatizer,TR_FieldPrivatizer(const class TR_FieldPrivatizer &),0,TR,FieldPrivatizer
TR_LoopTransformer,TR_LoopTransformer(const class TR_LoopTransformer &),1,TR,LoopTransformer
TR_LoopTransformer,TR_LoopTransformer(class TR_LoopTransformer &&),0,TR,LoopTransformer
TR_LoopTransformer,TR_LoopTransformer(TR::OptimizationManager *),0,TR,LoopTransformer
addPrivatizedRegisterCandidates,addPrivatizedRegisterCandidates(class TR_Structure *),1,TR,FieldPrivatizer
addStringInitialization,addStringInitialization(TR::Block *),1,TR,FieldPrivatizer
adjustTreesInBlock,adjustTreesInBlock(TR::Block *),1,TR,LoopTransformer
asLoopCanonicalizer,asLoopCanonicalizer(),1,TR,LoopTransformer
asLoopPredictor,asLoopPredictor(),1,TR,LoopTransformer
asLoopReducer,asLoopReducer(),1,TR,LoopTransformer
asLoopVersioner,asLoopVersioner(),1,TR,LoopTransformer
blockIsAlwaysExecutedInLoop,blockIsAlwaysExecutedInLoop(TR::Block *,class TR_RegionStructure *,_Bool *),1,TR,LoopTransformer
bothSubtreesMatch,bothSubtreesMatch(TR::Node *,TR::Node *),1,TR,FieldPrivatizer
canPrivatizeFieldSymRef,canPrivatizeFieldSymRef(TR::Node *),1,TR,FieldPrivatizer
checkIfIncrementInDifferentExtendedBlock,checkIfIncrementInDifferentExtendedBlock(TR::Block *,int32_t),1,TR,LoopTransformer
checkLoopForPredictability,checkLoopForPredictability(class TR_Structure *,TR::Block *,TR::Node **,_Bool),1,TR,LoopTransformer
cleanseTrees,cleanseTrees(TR::Block *),1,TR,LoopTransformer
cleanupStringPeephole,cleanupStringPeephole(),1,TR,FieldPrivatizer
collectSymbolsWrittenAndReadExactlyOnce,collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t),1,TR,LoopTransformer
collectSymbolsWrittenAndReadExactlyOnce,collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t,struct TR_LoopTransformer::updateInfo_tables &),0,TR,LoopTransformer
containsEscapePoints,containsEscapePoints(class TR_Structure *,_Bool &),1,TR,FieldPrivatizer
containsOnlyInductionVariableAndAdditiveConstant,containsOnlyInductionVariableAndAdditiveConstant(TR::Node *,int32_t),1,TR,LoopTransformer
create,create(TR::OptimizationManager *),1,TR,FieldPrivatizer
createNewEmptyBlock,createNewEmptyBlock(),1,TR,LoopTransformer
createNewGotoNode,createNewGotoNode(),1,TR,LoopTransformer
createWhileLoopsList,createWhileLoopsList(TR_ScratchList<class TR_Structure> *),1,TR,LoopTransformer
detectCanonicalizedPredictableLoops,detectCanonicalizedPredictableLoops(class TR_Structure *,class TR_BitVector **,int32_t),1,TR,LoopTransformer
detectEmptyLoop,detectEmptyLoop(class TR_Structure *,int32_t *),1,TR,LoopTransformer
detectFieldsThatCannotBePrivatized,detectFieldsThatCannotBePrivatized(class TR_Structure *,vcount_t),1,TR,FieldPrivatizer
detectFieldsThatCannotBePrivatized,detectFieldsThatCannotBePrivatized(TR::Node *,vcount_t),0,TR,FieldPrivatizer
detectWhileLoops,detectWhileLoops(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_Structure *,_Bool),1,TR,LoopTransformer
detectWhileLoopsInSubnodesInOrder,detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool),1,TR,LoopTransformer
detectWhileLoopsInSubnodesInOrder,detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_Structure *,class TR_StructureSubGraphNode *,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool),0,TR,LoopTransformer
duplicateExact,duplicateExact(TR::Node *,List<TR::Node> *,List<TR::Node> *),1,TR,LoopTransformer
elementPrivatization,elementPrivatization(),1,TR,FieldPrivatizer
examineTreeForInductionVariableUse,examineTreeForInductionVariableUse(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t,TR::SymbolReference **),1,TR,LoopTransformer
findElementCandidates,findElementCandidates(),1,TR,FieldPrivatizer
findMatchingIVInRegion,findMatchingIVInRegion(TR::TreeTop *,class TR_RegionStructure *),1,TR,LoopTransformer
getCorrectNumberOfIterations,getCorrectNumberOfIterations(TR::Node *,TR::Node *),1,TR,LoopTransformer
getInductionSymbolReference,getInductionSymbolReference(TR::Node *),1,TR,LoopTransformer
getOffSetFromAddressNode,getOffSetFromAddressNode(TR::Node *),1,TR,FieldPrivatizer
getPrivatizedFieldAutoSymRef,getPrivatizedFieldAutoSymRef(TR::Node *),1,TR,FieldPrivatizer
getSymbolDefUseStateInBlock,getSymbolDefUseStateInBlock(TR::Block *,TR::RegisterMappedSymbol *),1,TR,LoopTransformer
getSymbolDefUseStateInSubTree,getSymbolDefUseStateInSubTree(TR::Node *,TR::RegisterMappedSymbol *),1,TR,LoopTransformer
initializeSymbolsWrittenAndReadExactlyOnce,initializeSymbolsWrittenAndReadExactlyOnce(int32_t,enum TR_BitVectorGrowable),1,TR,LoopTransformer
isFieldAliasAccessed,isFieldAliasAccessed(TR::SymbolReference *),1,TR,FieldPrivatizer
isNodeInCorrectForm,isNodeInCorrectForm(TR::Node *),1,TR,FieldPrivatizer
isStoreInRequiredForm,isStoreInRequiredForm(int32_t,class TR_Structure *),1,TR,LoopTransformer
isStringPeephole,isStringPeephole(TR::Node *,TR::TreeTop *),1,TR,FieldPrivatizer
isSymbolReferenceWrittenNumberOfTimesInStructure,isSymbolReferenceWrittenNumberOfTimesInStructure(class TR_Structure *,int32_t,int32_t *,int32_t),1,TR,LoopTransformer
makeInvariantBlockFallThroughIfPossible,makeInvariantBlockFallThroughIfPossible(TR::Block *),1,TR,LoopTransformer
operator=,operator=(class TR_LoopTransformer &&),0,TR,LoopTransformer
operator=,operator=(const class TR_LoopTransformer &),0,TR,LoopTransformer
operator=,operator=(class TR_FieldPrivatizer &&),0,TR,FieldPrivatizer
operator=,operator=(const class TR_FieldPrivatizer &),0,TR,FieldPrivatizer
placeInitializersInLoopInvariantBlock,placeInitializersInLoopInvariantBlock(TR::Block *),1,TR,FieldPrivatizer
placeStoresBackInExit,placeStoresBackInExit(TR::Block *,_Bool),1,TR,FieldPrivatizer
placeStoresBackInExits,placeStoresBackInExits(List<TR::Block> *,List<TR::Block> *),1,TR,FieldPrivatizer
placeStringEpilogueInExits,placeStringEpilogueInExits(List<TR::Block> *,List<TR::Block> *),1,TR,FieldPrivatizer
placeStringEpiloguesBackInExit,placeStringEpiloguesBackInExit(TR::Block *,_Bool),1,TR,FieldPrivatizer
printTrees,printTrees(),1,TR,LoopTransformer
privatizeElementCandidates,privatizeElementCandidates(),1,TR,FieldPrivatizer
privatizeFields,privatizeFields(TR::Node *,_Bool,vcount_t),1,TR,FieldPrivatizer
privatizeNonEscapingLoop,privatizeNonEscapingLoop(class TR_Structure *,TR::Block *,vcount_t),1,TR,FieldPrivatizer
replaceAllInductionVariableComputations,replaceAllInductionVariableComputations(TR::Block *,class TR_Structure *,TR::SymbolReference **,TR::SymbolReference *),1,TR,LoopTransformer
setVisitCount,setVisitCount(vcount_t),1,TR,FieldPrivatizer
storesBackMustBePlacedInExitBlock,storesBackMustBePlacedInExitBlock(TR::Block *,TR::Block *,class TR_BitVector *),1,TR,FieldPrivatizer
subtreeIsInvariantInLoop,subtreeIsInvariantInLoop(TR::Node *),1,TR,FieldPrivatizer
updateInfo,updateInfo(TR::Node *,vcount_t,struct TR_LoopTransformer::updateInfo_tables &),1,TR,LoopTransformer
updateLoadUsedInLoopIncrement,updateLoadUsedInLoopIncrement(TR::Node *,int32_t),1,TR,LoopTransformer
updateStoreInfo,updateStoreInfo(int32_t,TR::TreeTop *),1,TR,LoopTransformer
walkTreeForLoadOrStoreNode,walkTreeForLoadOrStoreNode(TR::Node *),1,TR,FieldPrivatizer
~TR_FieldPrivatizer,~TR_FieldPrivatizer(),1,TR,FieldPrivatizer
~TR_LoopTransformer,~TR_LoopTransformer(),1,TR,LoopTransformer
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,InlinerTracer
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,InlinerTracer
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,InlinerTracer
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,InlinerTracer
operator new,operator new(size_t,class TR_PersistentMemory *),1,TR,LocalAnalysis
TR_LoopCanonicalizer,TR_LoopCanonicalizer(class TR_LoopCanonicalizer &&),1,TR,LoopCanonicalizer
TR_LoopCanonicalizer,TR_LoopCanonicalizer(const class TR_LoopCanonicalizer &),0,TR,LoopCanonicalizer
TR_LoopCanonicalizer,TR_LoopCanonicalizer(TR::OptimizationManager *),0,TR,LoopCanonicalizer
TR_RedundantInductionVarElimination,TR_RedundantInductionVarElimination(class TR_RedundantInductionVarElimination &&),1,TR,RedundantInductionVarElimination
TR_RedundantInductionVarElimination,TR_RedundantInductionVarElimination(const class TR_RedundantInductionVarElimination &),0,TR,RedundantInductionVarElimination
TR_RedundantInductionVarElimination,TR_RedundantInductionVarElimination(TR::OptimizationManager *),0,TR,RedundantInductionVarElimination
canonicalizeDoWhileLoop,canonicalizeDoWhileLoop(class TR_RegionStructure *),1,TR,LoopCanonicalizer
canonicalizeNaturalLoop,canonicalizeNaturalLoop(class TR_RegionStructure *),1,TR,LoopCanonicalizer
checkComplexInductionVariableUse,checkComplexInductionVariableUse(class TR_Structure *),1,TR,LoopCanonicalizer
checkComplexInductionVariableUseNode,checkComplexInductionVariableUseNode(TR::Node *,_Bool),1,TR,LoopCanonicalizer
checkIfOrderOfBlocksIsKnown,checkIfOrderOfBlocksIsKnown(class TR_RegionStructure *,TR::Block *,TR::Block *,TR_ScratchList<TR::Block> *,TR_ScratchList<TR::Block> *,uint8_t &),1,TR,LoopCanonicalizer
create,create(TR::OptimizationManager *),1,TR,LoopCanonicalizer
eliminateRedundantInductionVariablesFromLoop,eliminateRedundantInductionVariablesFromLoop(class TR_RegionStructure *),1,TR,LoopCanonicalizer
findIncrements,findIncrements(TR::Node *,vcount_t,TR::SymbolReference *,TR::SymbolReference *,int64_t &,int64_t &,_Bool &),1,TR,LoopCanonicalizer
incrementedInLockStep,incrementedInLockStep(class TR_Structure *,TR::SymbolReference *,TR::SymbolReference *,int64_t,int64_t,TR_ScratchList<TR::Block> *,TR_ScratchList<TR::Block> *),1,TR,LoopCanonicalizer
isLegalToSplitEdges,isLegalToSplitEdges(class TR_RegionStructure *,TR::Block *),1,TR,LoopCanonicalizer
modifyBranchesForSplitEdges,modifyBranchesForSplitEdges(class TR_RegionStructure *,TR::Block *,TR::Block *,TR::Block *,_Bool,int32_t *,_Bool),1,TR,LoopCanonicalizer
operator=,operator=(const class TR_LoopCanonicalizer &),0,TR,LoopCanonicalizer
operator=,operator=(class TR_LoopCanonicalizer &&),0,TR,LoopCanonicalizer
operator=,operator=(class TR_RedundantInductionVarElimination &&),0,TR,RedundantInductionVarElimination
operator=,operator=(const class TR_RedundantInductionVarElimination &),0,TR,RedundantInductionVarElimination
placeInitializationTreeInLoopPreHeader,placeInitializationTreeInLoopPreHeader(TR::Block *,TR::Node *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *),1,TR,LoopCanonicalizer
replaceInductionVariableComputationsInExits,replaceInductionVariableComputationsInExits(class TR_Structure *,TR::Node *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *),1,TR,LoopCanonicalizer
rewritePostToPreIncrementTestInBlock,rewritePostToPreIncrementTestInBlock(TR::Block *),1,TR,LoopCanonicalizer
rewritePostToPreIncrementTestInRegion,rewritePostToPreIncrementTestInRegion(class TR_RegionStructure *),1,TR,LoopCanonicalizer
~TR_LoopCanonicalizer,~TR_LoopCanonicalizer(),1,TR,LoopCanonicalizer
~TR_RedundantInductionVarElimination,~TR_RedundantInductionVarElimination(),1,TR,RedundantInductionVarElimination
TR_LoopInverter,TR_LoopInverter(class TR_LoopInverter &&),1,TR,LoopInverter
TR_LoopInverter,TR_LoopInverter(const class TR_LoopInverter &),0,TR,LoopInverter
TR_LoopInverter,TR_LoopInverter(TR::OptimizationManager *),0,TR,LoopInverter
checkIfSymbolIsReadInKnownTree,checkIfSymbolIsReadInKnownTree(TR::Node *,int32_t,TR::TreeTop *,TR::NodeChecklist &),1,TR,LoopInverter
create,create(TR::OptimizationManager *),1,TR,LoopInverter
isInvertibleLoop,isInvertibleLoop(int32_t,class TR_Structure *),1,TR,LoopInverter
operator=,operator=(class TR_LoopInverter &&),0,TR,LoopInverter
operator=,operator=(const class TR_LoopInverter &),0,TR,LoopInverter
~TR_LoopInverter,~TR_LoopInverter(),1,TR,LoopInverter
TR_InductionVariableAnalysis,TR_InductionVariableAnalysis(const class TR_InductionVariableAnalysis &),1,TR,InductionVariableAnalysis
TR_InductionVariableAnalysis,TR_InductionVariableAnalysis(class TR_InductionVariableAnalysis &&),0,TR,InductionVariableAnalysis
TR_InductionVariableAnalysis,TR_InductionVariableAnalysis(TR::OptimizationManager *),0,TR,InductionVariableAnalysis
analyzeAcyclicRegion,analyzeAcyclicRegion(class TR_RegionStructure *,class TR_RegionStructure *),1,TR,InductionVariableAnalysis
analyzeBlock,analyzeBlock(class TR_BlockStructure *,class TR_RegionStructure *),1,TR,InductionVariableAnalysis
analyzeCyclicRegion,analyzeCyclicRegion(class TR_RegionStructure *,class TR_RegionStructure *),1,TR,InductionVariableAnalysis
analyzeExitEdges,analyzeExitEdges(class TR_RegionStructure *,class TR_BitVector *,TR_Array<class TR_BasicInductionVariable *> &),1,TR,InductionVariableAnalysis
analyzeLoopExpressions,analyzeLoopExpressions(class TR_RegionStructure *,class TR_InductionVariableAnalysis::DeltaInfo **),1,TR,InductionVariableAnalysis
analyzeNaturalLoop,analyzeNaturalLoop(class TR_RegionStructure *),1,TR,InductionVariableAnalysis
appendPredecessors,appendPredecessors(WorkQueue &,TR::Block *),1,TR,InductionVariableAnalysis
branchContainsInductionVariable,branchContainsInductionVariable(class TR_RegionStructure *,TR::Node *,TR_Array<class TR_BasicInductionVariable *> &),1,TR,InductionVariableAnalysis
branchContainsInductionVariable,branchContainsInductionVariable(TR::Node *,TR::SymbolReference *,int32_t *),0,TR,InductionVariableAnalysis
create,create(TR::OptimizationManager *),1,TR,InductionVariableAnalysis
findEntryValueForSymRef,findEntryValueForSymRef(class TR_RegionStructure *,TR::SymbolReference *),1,TR,InductionVariableAnalysis
findEntryValues,findEntryValues(class TR_RegionStructure *,TR_Array<class TR_BasicInductionVariable *> &),1,TR,InductionVariableAnalysis
gatherCandidates,gatherCandidates(class TR_Structure *,class TR_BitVector *,class TR_BitVector *),1,TR,InductionVariableAnalysis
getBlockInfo,getBlockInfo(TR::Block *),1,TR,InductionVariableAnalysis
getEntryValue,getEntryValue(TR::Block *,TR::SymbolReference *,class TR_BitVector *,TR_Array<TR::Node *> &),1,TR,InductionVariableAnalysis
getInductionVariables,getInductionVariables(),1,TR,InductionVariableAnalysis
getProgression,getProgression(TR::Node *,TR::SymbolReference *,TR::SymbolReference **,enum TR_ProgressionKind *,int64_t *),1,TR,InductionVariableAnalysis
initializeBlockInfoArray,initializeBlockInfoArray(class TR_RegionStructure *),1,TR,InductionVariableAnalysis
isGotoBlock,isGotoBlock(TR::Block *),1,TR,InductionVariableAnalysis
isIVUnchangedInLoop,isIVUnchangedInLoop(class TR_RegionStructure *,TR::Block *,TR::Node *),1,TR,InductionVariableAnalysis
isProgressionalStore,isProgressionalStore(TR::Node *,enum TR_ProgressionKind *,int64_t *),1,TR,InductionVariableAnalysis
mergeWithBlock,mergeWithBlock(TR::Block *,class TR_InductionVariableAnalysis::DeltaInfo **,class TR_RegionStructure *),1,TR,InductionVariableAnalysis
mergeWithSet,mergeWithSet(class TR_InductionVariableAnalysis::DeltaInfo **,class TR_InductionVariableAnalysis::DeltaInfo **,class TR_RegionStructure *),1,TR,InductionVariableAnalysis
newBlockInfo,newBlockInfo(class TR_RegionStructure *),1,TR,InductionVariableAnalysis
operator=,operator=(const class TR_InductionVariableAnalysis &),0,TR,InductionVariableAnalysis
operator=,operator=(class TR_InductionVariableAnalysis &&),0,TR,InductionVariableAnalysis
perform,perform(class TR_RegionStructure *),0,TR,InductionVariableAnalysis
printDeltaInfo,printDeltaInfo(class TR_InductionVariableAnalysis::DeltaInfo *),1,TR,InductionVariableAnalysis
setBlockInfo,setBlockInfo(TR::Block *,class TR_InductionVariableAnalysis::DeltaInfo **),1,TR,InductionVariableAnalysis
~TR_InductionVariableAnalysis,~TR_InductionVariableAnalysis(),1,TR,InductionVariableAnalysis
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,TransformUtil
operator new[],operator new[](size_t,TR::Region &),0,OMR,TransformUtil
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,VPConstraint
TR_BasicInductionVariable,TR_BasicInductionVariable(class TR_BasicInductionVariable &&),1,TR,BasicInductionVariable
TR_BasicInductionVariable,TR_BasicInductionVariable(const class TR_BasicInductionVariable &),0,TR,BasicInductionVariable
TR_BasicInductionVariable,TR_BasicInductionVariable(TR::Compilation *,class TR_BasicInductionVariable *),0,TR,BasicInductionVariable
TR_BasicInductionVariable,TR_BasicInductionVariable(TR::Compilation *,class TR_RegionStructure *,TR::SymbolReference *),0,TR,BasicInductionVariable
TR_DerivedInductionVariable,TR_DerivedInductionVariable(TR::Compilation *,class TR_BasicInductionVariable *,class TR_PrimaryInductionVariable *),1,TR,DerivedInductionVariable
comp,comp(),1,TR,BasicInductionVariable
getDeltaOnBackEdge,getDeltaOnBackEdge(),1,TR,BasicInductionVariable
getDeltaOnExitEdge,getDeltaOnExitEdge(),1,TR,BasicInductionVariable
getEntryValue,getEntryValue(),1,TR,BasicInductionVariable
getExitValue,getExitValue(),1,TR,BasicInductionVariable
getIncrement,getIncrement(),1,TR,BasicInductionVariable
getIterationCount,getIterationCount(),1,TR,BasicInductionVariable
getSymRef,getSymRef(),1,TR,BasicInductionVariable
isLongInt,isLongInt(),1,TR,BasicInductionVariable
isOnlyIncrementValid,isOnlyIncrementValid(),1,TR,BasicInductionVariable
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,BasicInductionVariable
jitPersistentFree,jitPersistentFree(void *),1,TR,BasicInductionVariable
operator delete,operator delete(void *,size_t),1,TR,BasicInductionVariable
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,BasicInductionVariable
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,BasicInductionVariable
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,BasicInductionVariable
operator delete,operator delete(void *,TR::Region &),0,TR,BasicInductionVariable
operator delete[],operator delete[](void *,TR::Region &),1,TR,BasicInductionVariable
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,BasicInductionVariable
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,BasicInductionVariable
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,BasicInductionVariable
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,BasicInductionVariable
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,BasicInductionVariable
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,BasicInductionVariable
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,BasicInductionVariable
operator new,operator new(size_t,TR::Region &),0,TR,BasicInductionVariable
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,BasicInductionVariable
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,BasicInductionVariable
operator new[],operator new[](size_t,TR::Region &),1,TR,BasicInductionVariable
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,BasicInductionVariable
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,BasicInductionVariable
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,BasicInductionVariable
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,BasicInductionVariable
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,BasicInductionVariable
operator=,operator=(const class TR_BasicInductionVariable &),1,TR,BasicInductionVariable
operator=,operator=(class TR_BasicInductionVariable &&),0,TR,BasicInductionVariable
operator=,operator=(const class TR_DerivedInductionVariable &),0,TR,DerivedInductionVariable
operator=,operator=(class TR_DerivedInductionVariable &&),0,TR,DerivedInductionVariable
setDeltaOnBackEdge,setDeltaOnBackEdge(int32_t),1,TR,BasicInductionVariable
setDeltaOnExitEdge,setDeltaOnExitEdge(int32_t),1,TR,BasicInductionVariable
setEntryValue,setEntryValue(TR::Node *),1,TR,BasicInductionVariable
setIncrement,setIncrement(int32_t),1,TR,BasicInductionVariable
setOnlyIncrementValid,setOnlyIncrementValid(_Bool),1,TR,BasicInductionVariable
~TR_BasicInductionVariable,~TR_BasicInductionVariable(),1,TR,BasicInductionVariable
~TR_DerivedInductionVariable,~TR_DerivedInductionVariable(),1,TR,DerivedInductionVariable
TR_GeneralLoopUnroller,TR_GeneralLoopUnroller(class TR_GeneralLoopUnroller &&),1,TR,GeneralLoopUnroller
TR_GeneralLoopUnroller,TR_GeneralLoopUnroller(const class TR_GeneralLoopUnroller &),0,TR,GeneralLoopUnroller
TR_GeneralLoopUnroller,TR_GeneralLoopUnroller(TR::OptimizationManager *),0,TR,GeneralLoopUnroller
branchContainsInductionVariable,branchContainsInductionVariable(class TR_RegionStructure *,TR::Node *,_Bool),1,TR,GeneralLoopUnroller
branchContainsInductionVariable,branchContainsInductionVariable(TR::Node *,TR::SymbolReference *),0,TR,GeneralLoopUnroller
canUnrollUnCountedLoop,canUnrollUnCountedLoop(class TR_RegionStructure *,int32_t,int32_t,int32_t),1,TR,GeneralLoopUnroller
collectNonColdInnerLoops,collectNonColdInnerLoops(class TR_RegionStructure *,List<class TR_RegionStructure> &),1,TR,GeneralLoopUnroller
countNodesAndSubscripts,countNodesAndSubscripts(TR::Node *,int32_t &,int32_t &,class LoopWeightProbe &),1,TR,GeneralLoopUnroller
create,create(TR::OptimizationManager *),1,TR,GeneralLoopUnroller
detectWhileLoopsInSubnodesInOrder,detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_Structure *,class TR_StructureSubGraphNode *,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool),1,TR,LoopTransformer
detectWhileLoopsInSubnodesInOrder,detectWhileLoopsInSubnodesInOrder(ListAppender<class TR_Structure> &,List<class TR_Structure> &,ListAppender<class TR_Structure> &,List<class TR_Structure> &,class TR_RegionStructure *,vcount_t,class TR_BitVector *,_Bool),0,TR,LoopTransformer
gatherStatistics,gatherStatistics(class TR_Structure *,int32_t &,int32_t &,int32_t &,int32_t &,class LoopWeightProbe &),1,TR,GeneralLoopUnroller
operator=,operator=(class TR_GeneralLoopUnroller &&),0,TR,GeneralLoopUnroller
operator=,operator=(const class TR_GeneralLoopUnroller &),0,TR,GeneralLoopUnroller
profileNonCountedLoops,profileNonCountedLoops(List<class TR_RegionStructure> &),1,TR,GeneralLoopUnroller
weighNaturalLoop,weighNaturalLoop(class TR_RegionStructure *,class TR_LoopUnroller::UnrollKind &,int32_t &,int32_t &,int32_t &),1,TR,GeneralLoopUnroller
~TR_GeneralLoopUnroller,~TR_GeneralLoopUnroller(),1,TR,GeneralLoopUnroller
TR_IVTypeTransformer,TR_IVTypeTransformer(class TR_IVTypeTransformer &&),1,TR,IVTypeTransformer
TR_IVTypeTransformer,TR_IVTypeTransformer(const class TR_IVTypeTransformer &),0,TR,IVTypeTransformer
TR_IVTypeTransformer,TR_IVTypeTransformer(TR::OptimizationManager *),0,TR,IVTypeTransformer
changeIVTypeFromAddrToInt,changeIVTypeFromAddrToInt(class TR_RegionStructure *),1,TR,IVTypeTransformer
create,create(TR::OptimizationManager *),1,TR,IVTypeTransformer
findComparandSymRef,findComparandSymRef(TR::Node *),1,TR,IVTypeTransformer
getIntegralIfOpCode,getIntegralIfOpCode(TR::ILOpCodes,_Bool),1,TR,IVTypeTransformer
isInAddrIncrementForm,isInAddrIncrementForm(TR::Node *,int32_t &),1,TR,IVTypeTransformer
operator=,operator=(class TR_IVTypeTransformer &&),0,TR,IVTypeTransformer
operator=,operator=(const class TR_IVTypeTransformer &),0,TR,IVTypeTransformer
replaceAloadWithBaseIndexInSubtree,replaceAloadWithBaseIndexInSubtree(TR::Node *),1,TR,IVTypeTransformer
~TR_IVTypeTransformer,~TR_IVTypeTransformer(),1,TR,IVTypeTransformer
TR_LoopCanonicalizer,TR_LoopCanonicalizer(const class TR_LoopCanonicalizer &),1,TR,LoopCanonicalizer
TR_LoopCanonicalizer,TR_LoopCanonicalizer(class TR_LoopCanonicalizer &&),0,TR,LoopCanonicalizer
TR_LoopStrider,TR_LoopStrider(class TR_LoopStrider &&),1,TR,LoopStrider
TR_LoopStrider,TR_LoopStrider(const class TR_LoopStrider &),0,TR,LoopStrider
TR_LoopStrider,TR_LoopStrider(TR::OptimizationManager *),0,TR,LoopStrider
addLoad,addLoad(class TR_StoreTreeInfo *,TR::Node *,int32_t),1,TR,LoopStrider
changeBranchFromIntToLong,changeBranchFromIntToLong(TR::Node *),1,TR,LoopStrider
changeLoopCondition,changeLoopCondition(class TR_BlockStructure *,_Bool,int32_t,TR::Node *),1,TR,LoopStrider
checkExpressionForInductionVariable,checkExpressionForInductionVariable(TR::Node *),1,TR,LoopStrider
checkInvariance,checkInvariance(TR::Node *,int32_t,TR::Node *,int32_t),1,TR,LoopStrider
checkStoreOfIndVar,checkStoreOfIndVar(TR::Node *),1,TR,LoopStrider
convertIV,convertIV(TR::Node *,TR::TreeTop *,int32_t,int32_t,TR::ILOpCodes),1,TR,LoopStrider
create,create(TR::OptimizationManager *),1,TR,LoopStrider
createConstraintsForNewInductionVariable,createConstraintsForNewInductionVariable(class TR_Structure *,TR::SymbolReference *,TR::SymbolReference *),1,TR,LoopStrider
createParmAutoPair,createParmAutoPair(TR::SymbolReference *,TR::SymbolReference *),1,TR,LoopStrider
detectLoopsForIndVarConversion,detectLoopsForIndVarConversion(class TR_Structure *,TR::NodeChecklist &),1,TR,LoopStrider
duplicateAdditiveTermNode,duplicateAdditiveTermNode(int32_t,TR::Node *,TR::DataType),1,TR,LoopStrider
duplicateMulTermNode,duplicateMulTermNode(int32_t,TR::Node *,TR::DataType),1,TR,LoopStrider
eliminateSignExtensions,eliminateSignExtensions(TR::NodeChecklist &),1,TR,LoopStrider
eliminateSignExtensionsInSubtree,eliminateSignExtensionsInSubtree(TR::Node *,TR::NodeChecklist &,TR::NodeChecklist &,SignExtMemo &),1,TR,LoopStrider
examineOpCodesForInductionVariableUse,examineOpCodesForInductionVariableUse(TR::Node *,TR::Node *,int32_t &,int32_t &,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference **,TR::Block *,TR::AutomaticSymbol *,int64_t,_Bool &,_Bool &,_Bool &),1,TR,LoopStrider
extendIVsOnLoopEntry,extendIVsOnLoopEntry(const TR::list<std::pair<int32_t, int32_t> > &,TR::Block *),1,TR,LoopStrider
findDataType,findDataType(TR::Node *,_Bool,_Bool),1,TR,LoopStrider
findNewInductionVariable,findNewInductionVariable(TR::Node *,TR::SymbolReference **,_Bool,int32_t),1,TR,LoopStrider
findOrCreateStoreInfo,findOrCreateStoreInfo(TR::TreeTop *,int32_t),1,TR,LoopStrider
findReplacingNode,findReplacingNode(TR::Node *,_Bool,int32_t),1,TR,LoopStrider
foundLoad,foundLoad(TR::TreeTop *,TR::Node *,int32_t,vcount_t),1,TR,LoopStrider
foundLoad,foundLoad(TR::TreeTop *,int32_t,TR::Compilation *),0,TR,LoopStrider
foundValue,foundValue(TR::Node *,int32_t,vcount_t),1,TR,LoopStrider
genLoad,genLoad(TR::Node *,TR::SymbolReference *,_Bool),1,TR,LoopStrider
genVPIntRange,genVPIntRange(TR::VPConstraint *,int64_t,int64_t),1,TR,LoopStrider
genVPLongRange,genVPLongRange(TR::VPConstraint *,int64_t,int64_t),1,TR,LoopStrider
getAdditiveTermConst,getAdditiveTermConst(int32_t),1,TR,LoopStrider
getAdditiveTermNode,getAdditiveTermNode(int32_t),1,TR,LoopStrider
getInductionVariableNode,getInductionVariableNode(TR::Node *),1,TR,LoopStrider
getMulTermConst,getMulTermConst(int32_t),1,TR,LoopStrider
getMulTermNode,getMulTermNode(int32_t),1,TR,LoopStrider
getNewLoopIncrement,getNewLoopIncrement(TR::Node *,int32_t,int32_t),1,TR,LoopStrider
getNewLoopIncrement,getNewLoopIncrement(class TR_StoreTreeInfo *,int32_t),0,TR,LoopStrider
identifyExpressionLinearInInductionVariable,identifyExpressionLinearInInductionVariable(TR::Node *,vcount_t),1,TR,LoopStrider
identifyExpressionsLinearInInductionVariables,identifyExpressionsLinearInInductionVariables(class TR_Structure *,vcount_t),1,TR,LoopStrider
isAdditiveTermConst,isAdditiveTermConst(int32_t),1,TR,LoopStrider
isAdditiveTermEquivalentTo,isAdditiveTermEquivalentTo(int32_t,TR::Node *),1,TR,LoopStrider
isExprLoopInvariant,isExprLoopInvariant(TR::Node *),1,TR,LoopStrider
isExpressionLinearInInductionVariable,isExpressionLinearInInductionVariable(TR::Node *,int32_t),1,TR,LoopStrider
isExpressionLinearInSomeInductionVariable,isExpressionLinearInSomeInductionVariable(TR::Node *),1,TR,LoopStrider
isMulTermConst,isMulTermConst(int32_t),1,TR,LoopStrider
isMulTermEquivalentTo,isMulTermEquivalentTo(int32_t,TR::Node *),1,TR,LoopStrider
isStoreInRequiredForm,isStoreInRequiredForm(TR::Node *,int32_t,class TR_Structure *),0,TR,LoopStrider
maxInternalPointers,maxInternalPointers(),1,TR,LoopStrider
maxInternalPointersAtPointTooLateToBackOff,maxInternalPointersAtPointTooLateToBackOff(),1,TR,LoopStrider
morphExpressionLinearInInductionVariable,morphExpressionLinearInInductionVariable(TR::Node *,int32_t,TR::Node *,vcount_t),1,TR,LoopStrider
morphExpressionsLinearInInductionVariable,morphExpressionsLinearInInductionVariable(class TR_Structure *,vcount_t),1,TR,LoopStrider
operator=,operator=(class TR_LoopStrider &&),0,TR,LoopStrider
operator=,operator=(const class TR_LoopStrider &),0,TR,LoopStrider
placeInitializationTreeInLoopInvariantBlock,placeInitializationTreeInLoopInvariantBlock(class TR_BlockStructure *,TR::SymbolReference *,TR::SymbolReference *,int32_t,TR::SymbolReferenceTable *),1,TR,LoopStrider
placeNewInductionVariableIncrementTree,placeNewInductionVariableIncrementTree(class TR_BlockStructure *,TR::SymbolReference *,TR::SymbolReference *,int32_t,TR::SymbolReferenceTable *,TR::Node *,TR::Node *,TR::TreeTop *,TR::Node *,_Bool),1,TR,LoopStrider
placeNewInductionVariableIncrementTree,placeNewInductionVariableIncrementTree(class TR_BlockStructure *,TR::SymbolReference *,TR::SymbolReference *,int32_t,TR::SymbolReferenceTable *,TR::Node *,int32_t),0,TR,LoopStrider
placeStore,placeStore(TR::Node *,TR::Block *),1,TR,LoopStrider
populateLinearEquation,populateLinearEquation(TR::Node *,int32_t,int32_t,int32_t,TR::Node *),1,TR,LoopStrider
reassociateAndHoistComputations,reassociateAndHoistComputations(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t),1,TR,LoopStrider
reassociateAndHoistComputations,reassociateAndHoistComputations(TR::Block *,class TR_Structure *),0,TR,LoopStrider
reassociateAndHoistNonPacked,reassociateAndHoistNonPacked(),1,TR,LoopStrider
replaceLoadsInStructure,replaceLoadsInStructure(class TR_Structure *,int32_t,TR::Node *,TR::SymbolReference *,TR::NodeChecklist &,TR::NodeChecklist &),1,TR,LoopStrider
replaceLoadsInSubtree,replaceLoadsInSubtree(TR::Node *,int32_t,TR::Node *,TR::SymbolReference *,TR::NodeChecklist &,TR::NodeChecklist &),1,TR,LoopStrider
setAdditiveTermNode,setAdditiveTermNode(TR::Node *,int32_t),1,TR,LoopStrider
setInternalPointer,setInternalPointer(TR::Symbol *,TR::AutomaticSymbol *),1,TR,LoopStrider
setMulTermNode,setMulTermNode(TR::Node *,int32_t),1,TR,LoopStrider
setUsesLoadUsedInLoopIncrement,setUsesLoadUsedInLoopIncrement(TR::Node *,int32_t),1,TR,LoopStrider
signExtend,signExtend(TR::Node *,TR::NodeChecklist &,SignExtMemo &),1,TR,LoopStrider
signExtendBinOp,signExtendBinOp(TR::ILOpCodes,TR::Node *,TR::NodeChecklist &,SignExtMemo &),1,TR,LoopStrider
transmuteDescendantsIntoTruncations,transmuteDescendantsIntoTruncations(TR::Node *,TR::Node *),1,TR,LoopStrider
truncateIVsOnLoopExit,truncateIVsOnLoopExit(const TR::list<std::pair<int32_t, int32_t> > &,class TR_RegionStructure *),1,TR,LoopStrider
unchangedValueNeededIn,unchangedValueNeededIn(TR::Block *,int32_t,_Bool &),1,TR,LoopStrider
walkTreesAndFixUseDefs,walkTreesAndFixUseDefs(class TR_Structure *,TR::SymbolReference *,TR::NodeChecklist &),1,TR,LoopStrider
widenComparison,widenComparison(TR::Node *,int32_t,TR::Node *,TR::NodeChecklist &),1,TR,LoopStrider
~TR_LoopStrider,~TR_LoopStrider(),1,TR,LoopStrider
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,Dominators
operator delete,operator delete(void *,size_t),0,TR,Dominators
TR_PrimaryInductionVariable,TR_PrimaryInductionVariable(class TR_BasicInductionVariable *,TR::Block *,TR::Node *,TR::ILOpCodes,TR::Compilation *,TR::Optimizer *,_Bool,_Bool),1,TR,PrimaryInductionVariable
getBranchBlock,getBranchBlock(),1,TR,PrimaryInductionVariable
getExitBound,getExitBound(),1,TR,PrimaryInductionVariable
getNumLoopExits,getNumLoopExits(),1,TR,PrimaryInductionVariable
isUnsigned,isUnsigned(),1,TR,PrimaryInductionVariable
operator=,operator=(class TR_PrimaryInductionVariable &&),0,TR,PrimaryInductionVariable
operator=,operator=(const class TR_PrimaryInductionVariable &),0,TR,PrimaryInductionVariable
setNumLoopExits,setNumLoopExits(int32_t),1,TR,PrimaryInductionVariable
setUsesUnchangedValueInLoopTest,setUsesUnchangedValueInLoopTest(_Bool),1,TR,PrimaryInductionVariable
usesUnchangedValueInLoopTest,usesUnchangedValueInLoopTest(),1,TR,PrimaryInductionVariable
~TR_PrimaryInductionVariable,~TR_PrimaryInductionVariable(),1,TR,PrimaryInductionVariable
TR_RegionStructure,TR_RegionStructure(const class TR_RegionStructure &),1,TR,RegionStructure
operator new,operator new(size_t,class TR_PersistentMemory *),1,TR,VPConstraint
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,VPConstraint
TR_LocalAnalysis,TR_LocalAnalysis(class TR_LocalAnalysis &&),1,TR,LocalAnalysis
TR_LocalAnalysis,TR_LocalAnalysis(const class TR_LocalAnalysis &),0,TR,LocalAnalysis
Block,Block(TR::Block &,TR::TreeTop *,TR::TreeTop *),1,OMR,Block
TR_GlobalRegisterAllocator,TR_GlobalRegisterAllocator(class TR_GlobalRegisterAllocator &&),1,TR,GlobalRegisterAllocator
TR_GlobalRegisterAllocator,TR_GlobalRegisterAllocator(const class TR_GlobalRegisterAllocator &),0,TR,GlobalRegisterAllocator
TR_GlobalRegisterAllocator,TR_GlobalRegisterAllocator(TR::OptimizationManager *),0,TR,GlobalRegisterAllocator
addCandidateReloadsToEntry,addCandidateReloadsToEntry(TR::TreeTop *,TR_Array<class TR_GlobalRegister> &,TR::Block *),1,TR,GlobalRegisterAllocator
addGlRegDepToExit,addGlRegDepToExit(TR_Array<TR::Node *> &,TR::Node *,TR_Array<class TR_GlobalRegister> &,TR::Block *),1,TR,GlobalRegisterAllocator
addRegLoadsToEntry,addRegLoadsToEntry(TR::TreeTop *,TR_Array<class TR_GlobalRegister> &,TR::Block *),1,TR,GlobalRegisterAllocator
addStoresForCatchBlockLoads,addStoresForCatchBlockLoads(TR::TreeTop *,TR_Array<class TR_GlobalRegister> &,TR::Block *),1,TR,GlobalRegisterAllocator
allocateForSymRef,allocateForSymRef(TR::SymbolReference *),1,TR,GlobalRegisterAllocator
allocateForType,allocateForType(TR::DataType),1,TR,GlobalRegisterAllocator
appendGotoBlock,appendGotoBlock(TR::Block *,TR::Block *),1,TR,GlobalRegisterAllocator
assignRegisters,assignRegisters(TR::Block *),1,TR,GlobalRegisterAllocator
assignRegisters,assignRegisters(),0,TR,GlobalRegisterAllocator
blockInfo,blockInfo(int32_t),1,TR,GlobalRegisterAllocator
candidateCouldNeedSignExtension,candidateCouldNeedSignExtension(int32_t),1,TR,GlobalRegisterAllocator
create,create(TR::OptimizationManager *),1,TR,GlobalRegisterAllocator
createBlock,createBlock(TR::Block *,TR::Block *),1,TR,GlobalRegisterAllocator
createLoadFromRegister,createLoadFromRegister(),1,TR,GlobalRegisterAllocator
createNewSuccessorBlock,createNewSuccessorBlock(TR::Block *,TR::Block *,TR::TreeTop *,TR::Node *,class TR_RegisterCandidate *),1,TR,GlobalRegisterAllocator
createStoreFromRegister,createStoreFromRegister(),1,TR,GlobalRegisterAllocator
createStoreToRegister,createStoreToRegister(),1,TR,GlobalRegisterAllocator
createStoresForSignExt,createStoresForSignExt(TR::Node *,TR::Node *,TR::Node *,TR::TreeTop *,TR::Node **,TR::Block *,List<TR::Block> *,vcount_t,_Bool),1,TR,GlobalRegisterAllocator
extendBlock,extendBlock(TR::Block *,TR::Block *),1,TR,GlobalRegisterAllocator
findIfThenRegisterCandidates,findIfThenRegisterCandidates(),1,TR,GlobalRegisterAllocator
findLoopAutoRegisterCandidates,findLoopAutoRegisterCandidates(),1,TR,GlobalRegisterAllocator
findLoopsAndAutosNoStructureInfo,findLoopsAndAutosNoStructureInfo(vcount_t,class TR_RegisterCandidate **),1,TR,GlobalRegisterAllocator
findLoopsAndCorrespondingAutos,findLoopsAndCorrespondingAutos(class TR_StructureSubGraphNode *,vcount_t,class TR_RegisterCandidate **),1,TR,GlobalRegisterAllocator
findLoopsAndCreateAutosForSignExt,findLoopsAndCreateAutosForSignExt(class TR_StructureSubGraphNode *,vcount_t),1,TR,GlobalRegisterAllocator
findOrCreatePairedSymbols,findOrCreatePairedSymbols(TR::SymbolReference *,TR::SymbolReference *),1,TR,GlobalRegisterAllocator
findPairedSymbols,findPairedSymbols(TR::SymbolReference *,TR::SymbolReference *),1,TR,GlobalRegisterAllocator
findPrevTreeTop,findPrevTreeTop(TR::TreeTop *&,TR::Node *&,TR::Block *,TR::Block *),1,TR,GlobalRegisterAllocator
findRegInStoreInfo,findRegInStoreInfo(class TR_GlobalRegister *),1,TR,GlobalRegisterAllocator
findSymsUsedInIndirectAccesses,findSymsUsedInIndirectAccesses(TR::Node *,class TR_BitVector *,class TR_BitVector *,_Bool),1,TR,GlobalRegisterAllocator
getAppendBlock,getAppendBlock(TR::Block *),1,TR,GlobalRegisterAllocator
getGlobalRegister,getGlobalRegister(TR::Symbol *,TR_Array<class TR_GlobalRegister> &,TR::Block *),1,TR,GlobalRegisterAllocator
getGlobalRegisterWithoutChangingCurrentCandidate,getGlobalRegisterWithoutChangingCurrentCandidate(TR::Symbol *,TR_Array<class TR_GlobalRegister> &,TR::Block *),1,TR,GlobalRegisterAllocator
getPairedSymbols,getPairedSymbols(),1,TR,GlobalRegisterAllocator
initializeControlFlowInfo,initializeControlFlowInfo(),1,TR,GlobalRegisterAllocator
isDependentStore,isDependentStore(TR::Node *,const class TR_UseDefInfo::BitVector &,TR::SymbolReference *,_Bool *),1,TR,GlobalRegisterAllocator
isNodeAvailable,isNodeAvailable(TR::Node *),1,TR,GlobalRegisterAllocator
isSplittingCopy,isSplittingCopy(TR::Node *),1,TR,GlobalRegisterAllocator
isSymRefAvailable,isSymRefAvailable(TR::SymbolReference *),1,TR,GlobalRegisterAllocator
isSymRefAvailable,isSymRefAvailable(TR::SymbolReference *,List<TR::Block> *),0,TR,GlobalRegisterAllocator
isTypeAvailable,isTypeAvailable(TR::SymbolReference *),1,TR,GlobalRegisterAllocator
markAutosUsedIn,markAutosUsedIn(TR::Node *,TR::Node *,TR::Node *,TR::Node **,TR::Block *,List<TR::Block> *,vcount_t,int32_t,class TR_RegisterCandidate **,class TR_BitVector *,class TR_BitVector *,_Bool),1,TR,GlobalRegisterAllocator
markCandidateForReloadInSuccessors,markCandidateForReloadInSuccessors(int32_t,class TR_GlobalRegister *,class TR_GlobalRegister *,TR::Block *,_Bool),1,TR,GlobalRegisterAllocator
numberOfRegistersLiveOnEntry,numberOfRegistersLiveOnEntry(TR_Array<class TR_GlobalRegister> &,_Bool),1,TR,GlobalRegisterAllocator
offerAllAutosAndRegisterParmAsCandidates,offerAllAutosAndRegisterParmAsCandidates(TR::Block **,int32_t,_Bool),1,TR,GlobalRegisterAllocator
offerAllFPAutosAndParmsAsCandidates,offerAllFPAutosAndParmsAsCandidates(TR::Block **,int32_t),1,TR,GlobalRegisterAllocator
operator=,operator=(const class TR_GlobalRegisterAllocator &),0,TR,GlobalRegisterAllocator
operator=,operator=(class TR_GlobalRegisterAllocator &&),0,TR,GlobalRegisterAllocator
populateSymRefNodes,populateSymRefNodes(TR::Node *,vcount_t),1,TR,GlobalRegisterAllocator
prepareForBlockExit,prepareForBlockExit(TR::TreeTop *&,TR::Node *&,TR::Block *,TR_Array<class TR_GlobalRegister> &,TR::Block *,TR_Array<TR::Node *> &),1,TR,GlobalRegisterAllocator
registerIsLiveAcrossEdge,registerIsLiveAcrossEdge(TR::TreeTop *,TR::Node *,TR::Block *,class TR_GlobalRegister *,TR::Block *&,int32_t),1,TR,GlobalRegisterAllocator
reloadNonRegStarVariables,reloadNonRegStarVariables(TR::TreeTop *,TR::Node *,TR::Block *,_Bool),1,TR,GlobalRegisterAllocator
resolveTypeMismatch,resolveTypeMismatch(TR::Node *,TR::Node *),1,TR,GlobalRegisterAllocator
resolveTypeMismatch,resolveTypeMismatch(TR::DataType,TR::Node *),0,TR,GlobalRegisterAllocator
resolveTypeMismatch,resolveTypeMismatch(TR::DataType,TR::Node *,TR::Node *),0,TR,GlobalRegisterAllocator
restoreOriginalSymbol,restoreOriginalSymbol(TR::Node *,vcount_t),1,TR,GlobalRegisterAllocator
setSignExtensionNotRequired,setSignExtensionNotRequired(_Bool,int32_t),1,TR,GlobalRegisterAllocator
setSignExtensionRequired,setSignExtensionRequired(_Bool,int32_t),1,TR,GlobalRegisterAllocator
signExtendAllDefNodes,signExtendAllDefNodes(TR::Node *,List<TR::Node> *),1,TR,GlobalRegisterAllocator
signExtensionNotRequired,signExtensionNotRequired(),1,TR,GlobalRegisterAllocator
signExtensionRequired,signExtensionRequired(),1,TR,GlobalRegisterAllocator
tagCandidates,tagCandidates(TR::Block *,uint32_t,_Bool),1,TR,GlobalRegisterAllocator
tagCandidates,tagCandidates(TR::Block *,_Bool),0,TR,GlobalRegisterAllocator
transformBlock,transformBlock(TR::TreeTop *),1,TR,GlobalRegisterAllocator
transformBlockExit,transformBlockExit(TR::TreeTop *,TR::Node *,TR::Block *,TR_Array<class TR_GlobalRegister> &,TR::Block *),1,TR,GlobalRegisterAllocator
transformMultiWayBranch,transformMultiWayBranch(TR::TreeTop *,TR::Node *,TR::Block *,TR_Array<class TR_GlobalRegister> &,_Bool),1,TR,GlobalRegisterAllocator
transformNode,transformNode(TR::Node *,TR::Node *,int32_t,TR::TreeTop *,TR::Block *&,TR_Array<class TR_GlobalRegister> &,class TR_NodeMappings *),1,TR,GlobalRegisterAllocator
visitNodeForDataType,visitNodeForDataType(TR::Node *),1,TR,GlobalRegisterAllocator
walkTreesAndCollectSymbolDataTypes,walkTreesAndCollectSymbolDataTypes(),1,TR,GlobalRegisterAllocator
~TR_GlobalRegisterAllocator,~TR_GlobalRegisterAllocator(),1,TR,GlobalRegisterAllocator
TR_LiveRangeSplitter,TR_LiveRangeSplitter(class TR_LiveRangeSplitter &&),1,TR,LiveRangeSplitter
TR_LiveRangeSplitter,TR_LiveRangeSplitter(const class TR_LiveRangeSplitter &),0,TR,LiveRangeSplitter
TR_LiveRangeSplitter,TR_LiveRangeSplitter(TR::OptimizationManager *),0,TR,LiveRangeSplitter
appendStoreToBlock,appendStoreToBlock(TR::SymbolReference *,TR::SymbolReference *,TR::Block *,TR::Node *),1,TR,LiveRangeSplitter
create,create(TR::OptimizationManager *),1,TR,LiveRangeSplitter
fixExitsAfterSplit,fixExitsAfterSplit(TR::SymbolReference *,struct TR_SymRefCandidatePair *,struct TR_SymRefCandidatePair **,TR::Block *,List<TR::Block> *,TR::Node *,class TR_RegisterCandidate **,class TR_StructureSubGraphNode *,class TR_BitVector *,TR::SymbolReference *),1,TR,LiveRangeSplitter
operator=,operator=(const class TR_LiveRangeSplitter &),0,TR,LiveRangeSplitter
operator=,operator=(class TR_LiveRangeSplitter &&),0,TR,LiveRangeSplitter
placeStoresInLoopExits,placeStoresInLoopExits(TR::Node *,class TR_StructureSubGraphNode *,List<TR::Block> *,TR::SymbolReference *,TR::SymbolReference *),1,TR,LiveRangeSplitter
prependStoreToBlock,prependStoreToBlock(TR::SymbolReference *,TR::SymbolReference *,TR::Block *,TR::Node *),1,TR,LiveRangeSplitter
replaceAutosUsedIn,replaceAutosUsedIn(TR::TreeTop *,TR::Node *,TR::Node *,TR::Block *,List<TR::Block> *,List<TR::Block> *,vcount_t,int32_t,class TR_RegisterCandidate **,struct TR_SymRefCandidatePair **,class TR_BitVector *,class TR_BitVector *,class TR_StructureSubGraphNode *,TR::Block *),1,TR,LiveRangeSplitter
splitAndFixPreHeader,splitAndFixPreHeader(TR::SymbolReference *,struct TR_SymRefCandidatePair **,TR::Block *,TR::Node *),1,TR,LiveRangeSplitter
splitLiveRanges,splitLiveRanges(),1,TR,LiveRangeSplitter
splitLiveRanges,splitLiveRanges(class TR_StructureSubGraphNode *),0,TR,LiveRangeSplitter
~TR_LiveRangeSplitter,~TR_LiveRangeSplitter(),1,TR,LiveRangeSplitter
operator=,operator=(const class TR_LocalAnalysis &),1,TR,LocalAnalysis
operator=,operator=(class TR_LocalAnalysis &&),0,TR,LocalAnalysis
operator=,operator=(const class TR_UseDefInfo &),1,TR,UseDefInfo
operator=,operator=(class TR_UseDefInfo &&),0,TR,UseDefInfo
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,Method
SuccessorIterator,SuccessorIterator(class SuccessorIterator &&),1,,
SuccessorIterator,SuccessorIterator(const class SuccessorIterator &),0,,
SuccessorIterator,SuccessorIterator(),0,,
asSwitchSuccessor,asSwitchSuccessor(),1,,
getFirstSuccessor,getFirstSuccessor(),1,,
getNextSuccessor,getNextSuccessor(),1,,
getNextSuccessor_,getNextSuccessor_(),1,,
jitPersistentAlloc,jitPersistentAlloc(size_t),1,,
jitPersistentFree,jitPersistentFree(void *),1,,
multipleJumpSuccessorIterator,multipleJumpSuccessorIterator(TR::Block *),1,,
multipleJumpSuccessorIterator,multipleJumpSuccessorIterator(const class multipleJumpSuccessorIterator &),0,,
multipleJumpSuccessorIterator,multipleJumpSuccessorIterator(class multipleJumpSuccessorIterator &&),0,,
operator delete,operator delete(void *,size_t),1,,
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,,
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,,
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,,
operator delete,operator delete(void *,TR::Region &),0,,
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,,
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,,
operator delete[],operator delete[](void *,TR::Region &),0,,
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,,
operator new,operator new(size_t,TR_ArenaAllocator *),1,,
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,,
operator new,operator new(size_t,class TR_PersistentMemory *),0,,
operator new,operator new(size_t,TR::Region &),0,,
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,,
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,,
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,,
operator new[],operator new[](size_t,TR::Region &),1,,
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,,
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,,
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,,
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,,
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,,
operator=,operator=(class SuccessorIterator &&),1,,
operator=,operator=(const class SuccessorIterator &),0,,
operator=,operator=(class multipleJumpSuccessorIterator &&),0,,
operator=,operator=(const class multipleJumpSuccessorIterator &),0,,
~SuccessorIterator,~SuccessorIterator(),1,,
~multipleJumpSuccessorIterator,~multipleJumpSuccessorIterator(),1,,
getCaseNode,getCaseNode(),1,,
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,,
operator delete,operator delete(void *,size_t),0,,
operator delete[],operator delete[](void *,TR::Region &),1,,
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,,
operator=,operator=(class switchSuccessorIterator &&),0,,
operator=,operator=(const class switchSuccessorIterator &),0,,
switchSuccessorIterator,switchSuccessorIterator(const class switchSuccessorIterator &),1,,
switchSuccessorIterator,switchSuccessorIterator(TR::Node *),0,,
switchSuccessorIterator,switchSuccessorIterator(class switchSuccessorIterator &&),0,,
~switchSuccessorIterator,~switchSuccessorIterator(),1,,
TR_Inliner,TR_Inliner(class TR_Inliner &&),1,TR,Inliner
TR_Inliner,TR_Inliner(const class TR_Inliner &),0,TR,Inliner
OMR_InlinerPolicy,OMR_InlinerPolicy(class OMR_InlinerPolicy &&),1,,
OMR_InlinerPolicy,OMR_InlinerPolicy(TR::Compilation *),0,,
OMR_InlinerPolicy,OMR_InlinerPolicy(const class OMR_InlinerPolicy &),0,,
OptimizationPolicy,OptimizationPolicy(const class TR::OptimizationPolicy &),0,TR,OptimizationPolicy
OMR_InlinerUtil,OMR_InlinerUtil(class OMR_InlinerUtil &&),1,,
OMR_InlinerUtil,OMR_InlinerUtil(const class OMR_InlinerUtil &),0,,
OMR_InlinerUtil,OMR_InlinerUtil(TR::Compilation *),0,,
OptimizationUtil,OptimizationUtil(const class TR::OptimizationUtil &),1,TR,OptimizationUtil
OptimizationUtil,OptimizationUtil(class TR::OptimizationUtil &&),0,TR,OptimizationUtil
operator=,operator=(class TR::OptimizationUtil &&),1,TR,OptimizationUtil
operator=,operator=(const class TR::OptimizationUtil &),0,TR,OptimizationUtil
operator=,operator=(class OMR::ILOpCode &&),1,OMR,ILOpCode
operator=,operator=(const class OMR::ILOpCode &),0,OMR,ILOpCode
operator=,operator=(class TR::ILOpCode &&),0,TR,ILOpCode
operator=,operator=(const class TR::ILOpCode &),0,TR,ILOpCode
IlGeneratorMethodDetails,IlGeneratorMethodDetails(class TR::IlGeneratorMethodDetails &&),0,TR,IlGeneratorMethodDetails
IlGeneratorMethodDetails,IlGeneratorMethodDetails(const class TR::IlGeneratorMethodDetails &),0,TR,IlGeneratorMethodDetails
TR_DirectCallSite,TR_DirectCallSite(class TR_ResolvedMethod *,TR::TreeTop *,TR::Node *,TR::Node *,class TR_Method *,class TR_OpaqueClassBlock *,int32_t,int32_t,class TR_ResolvedMethod *,TR::ResolvedMethodSymbol *,_Bool,_Bool,TR_ByteCodeInfo &,TR::Compilation *,int32_t,_Bool),1,TR,DirectCallSite
TR_DirectCallSite,TR_DirectCallSite(class TR_DirectCallSite &&),0,TR,DirectCallSite
operator=,operator=(const class TR_DirectCallSite &),1,TR,DirectCallSite
operator=,operator=(class TR_DirectCallSite &&),0,TR,DirectCallSite
TR_CallStack,TR_CallStack(const class TR_CallStack &),1,TR,CallStack
TR_CallStack,TR_CallStack(TR::Compilation *,TR::ResolvedMethodSymbol *,class TR_ResolvedMethod *,class TR_CallStack *,int32_t,_Bool),0,TR,CallStack
TR_DumbInliner,TR_DumbInliner(class TR_DumbInliner &&),1,TR,DumbInliner
TR_DumbInliner,TR_DumbInliner(const class TR_DumbInliner &),0,TR,DumbInliner
TR_DumbInliner,TR_DumbInliner(TR::Optimizer *,TR::Optimization *,uint32_t,uint32_t),0,TR,DumbInliner
TR_InlineCall,TR_InlineCall(class TR_InlineCall &&),1,TR,InlineCall
TR_InlineCall,TR_InlineCall(const class TR_InlineCall &),0,TR,InlineCall
TR_InlineCall,TR_InlineCall(TR::Optimizer *,TR::Optimization *),0,TR,InlineCall
TR_InlinerBase,TR_InlinerBase(const class TR_InlinerBase &),1,TR,InlinerBase
TR_InlinerBase,TR_InlinerBase(TR::Optimizer *,TR::Optimization *),0,TR,InlinerBase
TR_InlinerBase,TR_InlinerBase(class TR_InlinerBase &&),0,TR,InlinerBase
operator=,operator=(class TR_IndirectCallSite &&),1,TR,IndirectCallSite
operator=,operator=(const class TR_IndirectCallSite &),0,TR,IndirectCallSite
TR_InlinerTracer,TR_InlinerTracer(const class TR_InlinerTracer &),1,TR,InlinerTracer
TR_InlinerTracer,TR_InlinerTracer(class TR_InlinerTracer &&),0,TR,InlinerTracer
TR_InlinerTracer,TR_InlinerTracer(TR::Compilation *,class TR_FrontEnd *,TR::Optimization *),0,TR,InlinerTracer
TR_LogTracer,TR_LogTracer(const class TR_LogTracer &),1,TR,LogTracer
TR_LogTracer,TR_LogTracer(class TR_LogTracer &&),0,TR,LogTracer
TR_LogTracer,TR_LogTracer(TR::Compilation *,TR::Optimization *),0,TR,LogTracer
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,InlinerTracer
operator delete,operator delete(void *,TR::Region &),0,TR,InlinerTracer
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,InlinerTracer
~TR_LogTracer,~TR_LogTracer(),1,TR,LogTracer
TR_InductionVariableAnalysis,TR_InductionVariableAnalysis(class TR_InductionVariableAnalysis &&),1,TR,InductionVariableAnalysis
TR_InductionVariableAnalysis,TR_InductionVariableAnalysis(const class TR_InductionVariableAnalysis &),0,TR,InductionVariableAnalysis
branchContainsInductionVariable,branchContainsInductionVariable(TR::Node *,TR::SymbolReference *,int32_t *),1,TR,InductionVariableAnalysis
branchContainsInductionVariable,branchContainsInductionVariable(class TR_RegionStructure *,TR::Node *,TR_Array<class TR_BasicInductionVariable *> &),0,TR,InductionVariableAnalysis
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,AliasBuilder
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,OMR,AliasBuilder
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,AliasBuilder
PostorderNodeIterator,PostorderNodeIterator(const class TR::PostorderNodeIterator &),1,TR,PostorderNodeIterator
PostorderNodeIterator,PostorderNodeIterator(class TR::PostorderNodeIterator &&),0,TR,PostorderNodeIterator
~PostorderNodeIterator,~PostorderNodeIterator(),1,TR,PostorderNodeIterator
VPResolvedClass,VPResolvedClass(const class TR::VPResolvedClass &),1,TR,VPResolvedClass
VPResolvedClass,VPResolvedClass(class TR_OpaqueClassBlock *,TR::Compilation *),0,TR,VPResolvedClass
VPIntRange,VPIntRange(class TR::VPIntRange &&),1,TR,VPIntRange
VPIntRange,VPIntRange(const class TR::VPIntRange &),0,TR,VPIntRange
VPIntRange,VPIntRange(int32_t,int32_t),0,TR,VPIntRange
VPLongRange,VPLongRange(class TR::VPLongRange &&),1,TR,VPLongRange
VPLongRange,VPLongRange(const class TR::VPLongRange &),0,TR,VPLongRange
VPLongRange,VPLongRange(int64_t,int64_t),0,TR,VPLongRange
TR_DerivedInductionVariable,TR_DerivedInductionVariable(class TR_DerivedInductionVariable &&),1,TR,DerivedInductionVariable
TR_DerivedInductionVariable,TR_DerivedInductionVariable(TR::Compilation *,class TR_BasicInductionVariable *,class TR_PrimaryInductionVariable *),0,TR,DerivedInductionVariable
TR_DerivedInductionVariable,TR_DerivedInductionVariable(const class TR_DerivedInductionVariable &),0,TR,DerivedInductionVariable
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,BasicInductionVariable
operator new[],operator new[](size_t,TR::Region &),0,TR,BasicInductionVariable
TR_IVTypeTransformer,TR_IVTypeTransformer(const class TR_IVTypeTransformer &),1,TR,IVTypeTransformer
TR_IVTypeTransformer,TR_IVTypeTransformer(class TR_IVTypeTransformer &&),0,TR,IVTypeTransformer
TR_LoopTransformer,TR_LoopTransformer(class TR_LoopTransformer &&),1,TR,LoopTransformer
TR_LoopTransformer,TR_LoopTransformer(const class TR_LoopTransformer &),0,TR,LoopTransformer
TR_InductionVariable,TR_InductionVariable(class TR_InductionVariable &&),1,TR,InductionVariable
TR_InductionVariable,TR_InductionVariable(),0,TR,InductionVariable
TR_InductionVariable,TR_InductionVariable(const class TR_InductionVariable &),0,TR,InductionVariable
TR_LoopStrider,TR_LoopStrider(const class TR_LoopStrider &),1,TR,LoopStrider
TR_LoopStrider,TR_LoopStrider(class TR_LoopStrider &&),0,TR,LoopStrider
foundLoad,foundLoad(TR::TreeTop *,int32_t,TR::Compilation *),1,TR,LoopStrider
foundLoad,foundLoad(TR::TreeTop *,TR::Node *,int32_t,vcount_t),0,TR,LoopStrider
getNewLoopIncrement,getNewLoopIncrement(class TR_StoreTreeInfo *,int32_t),1,TR,LoopStrider
getNewLoopIncrement,getNewLoopIncrement(TR::Node *,int32_t,int32_t),0,TR,LoopStrider
TR_PrimaryInductionVariable,TR_PrimaryInductionVariable(class TR_PrimaryInductionVariable &&),1,TR,PrimaryInductionVariable
TR_PrimaryInductionVariable,TR_PrimaryInductionVariable(const class TR_PrimaryInductionVariable &),0,TR,PrimaryInductionVariable
TR_PrimaryInductionVariable,TR_PrimaryInductionVariable(class TR_BasicInductionVariable *,TR::Block *,TR::Node *,TR::ILOpCodes,TR::Compilation *,TR::Optimizer *,_Bool,_Bool),0,TR,PrimaryInductionVariable
TR_IntersectionDFSetAnalysis,TR_IntersectionDFSetAnalysis(class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &&),1,TR,IntersectionDFSetAnalysis
TR_IntersectionDFSetAnalysis,TR_IntersectionDFSetAnalysis(const class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &),0,TR,IntersectionDFSetAnalysis
TR_IntersectionDFSetAnalysis,TR_IntersectionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,IntersectionDFSetAnalysis
compose,compose(class TR_BitVector *,class TR_BitVector *),0,TR,IntersectionDFSetAnalysis
initializeInfo,initializeInfo(class TR_BitVector *),0,TR,IntersectionDFSetAnalysis
inverseCompose,inverseCompose(class TR_BitVector *,class TR_BitVector *),0,TR,IntersectionDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_BitVector *),0,TR,IntersectionDFSetAnalysis
operator=,operator=(class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &&),0,TR,IntersectionDFSetAnalysis
operator=,operator=(const class TR_IntersectionDFSetAnalysis<class TR_BitVector *> &),0,TR,IntersectionDFSetAnalysis
~TR_IntersectionDFSetAnalysis,~TR_IntersectionDFSetAnalysis(),1,TR,IntersectionDFSetAnalysis
TR_Isolatedness,TR_Isolatedness(class TR_Isolatedness &&),1,TR,Isolatedness
TR_Isolatedness,TR_Isolatedness(const class TR_Isolatedness &),0,TR,Isolatedness
TR_Isolatedness,TR_Isolatedness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),0,TR,Isolatedness
TR_Latestness,TR_Latestness(class TR_Latestness &&),1,TR,Latestness
TR_Latestness,TR_Latestness(TR::Compilation *,TR::Optimizer *,class TR_Structure *,_Bool),0,TR,Latestness
TR_Latestness,TR_Latestness(const class TR_Latestness &),0,TR,Latestness
TR_Latestness,TR_Latestness(const class TR_Latestness &),1,TR,Latestness
TR_Latestness,TR_Latestness(class TR_Latestness &&),0,TR,Latestness
TR_LiveOnAllPaths,TR_LiveOnAllPaths(class TR_LiveOnAllPaths &&),1,TR,LiveOnAllPaths
TR_LiveOnAllPaths,TR_LiveOnAllPaths(const class TR_LiveOnAllPaths &),0,TR,LiveOnAllPaths
TR_LiveOnAllPaths,TR_LiveOnAllPaths(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_LiveVariableInformation *,_Bool,_Bool),0,TR,LiveOnAllPaths
TR_UseDefInfo,TR_UseDefInfo(const class TR_UseDefInfo &),0,TR,UseDefInfo
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,LocalAnalysis
TR_LocalAnticipatability,TR_LocalAnticipatability(class TR_LocalAnticipatability &&),0,TR,LocalAnticipatability
TR_LocalLiveRangeReduction,TR_LocalLiveRangeReduction(class TR_LocalLiveRangeReduction &&),1,TR,LocalLiveRangeReduction
TR_LocalLiveRangeReduction,TR_LocalLiveRangeReduction(const class TR_LocalLiveRangeReduction &),0,TR,LocalLiveRangeReduction
TR_LocalLiveRangeReduction,TR_LocalLiveRangeReduction(TR::OptimizationManager *),0,TR,LocalLiveRangeReduction
addDepPair,addDepPair(class TR_TreeRefInfo *,class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
collectInfo,collectInfo(TR::TreeTop *,TR::TreeTop *),1,TR,LocalLiveRangeReduction
collectRefInfo,collectRefInfo(class TR_TreeRefInfo *,TR::Node *,vcount_t,int32_t *),1,TR,LocalLiveRangeReduction
containsCallOrCheck,containsCallOrCheck(class TR_TreeRefInfo *,TR::Node *),1,TR,LocalLiveRangeReduction
create,create(TR::OptimizationManager *),1,TR,LocalLiveRangeReduction
findLocationToMove,findLocationToMove(class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
getIndexInArray,getIndexInArray(class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
initPotentialDeps,initPotentialDeps(class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
investigateAndMove,investigateAndMove(class TR_TreeRefInfo *,int32_t),1,TR,LocalLiveRangeReduction
isAnyDataConstraint,isAnyDataConstraint(class TR_TreeRefInfo *,class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
isAnySymInDefinedOrUsedBy,isAnySymInDefinedOrUsedBy(class TR_TreeRefInfo *,TR::Node *,class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
isNeedToBeInvestigated,isNeedToBeInvestigated(class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
isWorthMoving,isWorthMoving(class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
matchFirstOrMidToLastRef,matchFirstOrMidToLastRef(class TR_TreeRefInfo *,class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
moveTreeBefore,moveTreeBefore(class TR_TreeRefInfo *,class TR_TreeRefInfo *,int32_t),1,TR,LocalLiveRangeReduction
operator=,operator=(class TR_LocalLiveRangeReduction &&),0,TR,LocalLiveRangeReduction
operator=,operator=(const class TR_LocalLiveRangeReduction &),0,TR,LocalLiveRangeReduction
populatePotentialDeps,populatePotentialDeps(class TR_TreeRefInfo *,TR::Node *),1,TR,LocalLiveRangeReduction
printOnVerifyError,printOnVerifyError(class TR_TreeRefInfo *,class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
printRefInfo,printRefInfo(class TR_TreeRefInfo *),1,TR,LocalLiveRangeReduction
transformExtendedBlock,transformExtendedBlock(TR::TreeTop *,TR::TreeTop *),1,TR,LocalLiveRangeReduction
updateDepList,updateDepList(),1,TR,LocalLiveRangeReduction
updateRefInfo,updateRefInfo(TR::Node *,class TR_TreeRefInfo *,class TR_TreeRefInfo *,_Bool),1,TR,LocalLiveRangeReduction
verifyRefInfo,verifyRefInfo(List<TR::Node> *,List<TR::Node> *),1,TR,LocalLiveRangeReduction
~TR_LocalLiveRangeReduction,~TR_LocalLiveRangeReduction(),1,TR,LocalLiveRangeReduction
TR_LocalReordering,TR_LocalReordering(class TR_LocalReordering &&),1,TR,LocalReordering
TR_LocalReordering,TR_LocalReordering(const class TR_LocalReordering &),0,TR,LocalReordering
TR_LocalReordering,TR_LocalReordering(TR::OptimizationManager *),0,TR,LocalReordering
collectSymbolsUsedAndDefinedInNode,collectSymbolsUsedAndDefinedInNode(TR::Node *,vcount_t),1,TR,LocalReordering
collectUses,collectUses(TR::Block *),1,TR,LocalReordering
containsBarriers,containsBarriers(TR::Block *),1,TR,LocalReordering
create,create(TR::OptimizationManager *),1,TR,LocalReordering
delayDefinitions,delayDefinitions(TR::Block *),1,TR,LocalReordering
insertDefinitionBetween,insertDefinitionBetween(TR::TreeTop *,TR::TreeTop *),1,TR,LocalReordering
insertEarlierIfPossible,insertEarlierIfPossible(TR::TreeTop *,TR::TreeTop *,_Bool),1,TR,LocalReordering
isAnySymInDefinedBy,isAnySymInDefinedBy(TR::Node *,vcount_t),1,TR,LocalReordering
isAnySymInDefinedOrUsedBy,isAnySymInDefinedOrUsedBy(TR::Node *,vcount_t),1,TR,LocalReordering
isSubtreeCommoned,isSubtreeCommoned(TR::Node *),1,TR,LocalReordering
moveStoresEarlierIfRhsAnchored,moveStoresEarlierIfRhsAnchored(TR::Block *,TR::TreeTop *,TR::Node *,TR::Node *,vcount_t),1,TR,LocalReordering
operator=,operator=(class TR_LocalReordering &&),0,TR,LocalReordering
operator=,operator=(const class TR_LocalReordering &),0,TR,LocalReordering
setUseTreeForSymbolReferencesIn,setUseTreeForSymbolReferencesIn(TR::TreeTop *,TR::Node *,vcount_t),1,TR,LocalReordering
transformBlock,transformBlock(TR::Block *),1,TR,LocalReordering
~TR_LocalReordering,~TR_LocalReordering(),1,TR,LocalReordering
isAt,isAt(class TR::TreeTopIteratorImpl &),1,TR,TreeTopIteratorImpl
isAt,isAt(class TR::PreorderNodeIterator &),0,TR,TreeTopIteratorImpl
operator=,operator=(const class TR::OptimizationData &),1,TR,OptimizationData
operator=,operator=(class TR::OptimizationData &&),0,TR,OptimizationData
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,VPConstraint
TR_LoopTransformer,TR_LoopTransformer(TR::OptimizationManager *),1,TR,LoopTransformer
TR_ArrayLoop,TR_ArrayLoop(const class TR_ArrayLoop &),1,TR,ArrayLoop
TR_ArrayLoop,TR_ArrayLoop(class TR_ArrayLoop &&),0,TR,ArrayLoop
TR_ArrayLoop,TR_ArrayLoop(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *),0,TR,ArrayLoop
TR_ArrayLoop,TR_ArrayLoop(TR::Compilation *,class TR_InductionVariable *),0,TR,ArrayLoop
TR_Arraycmp,TR_Arraycmp(class TR_Arraycmp &&),1,TR,Arraycmp
TR_Arraycmp,TR_Arraycmp(const class TR_Arraycmp &),0,TR,Arraycmp
TR_Arraycmp,TR_Arraycmp(TR::Compilation *,class TR_InductionVariable *),0,TR,Arraycmp
checkElementCompare,checkElementCompare(TR::Node *),1,TR,Arraycmp
checkForPostIncrement,checkForPostIncrement(TR::Block *,TR::Node *,TR::Node *,TR::Symbol *),1,TR,ArrayLoop
checkGoto,checkGoto(TR::Block *,TR::Node *,TR::Node *),1,TR,Arraycmp
checkLoopCmp,checkLoopCmp(TR::Node *,TR::Node *,class TR_InductionVariable *),1,TR,ArrayLoop
comp,comp(),1,TR,ArrayLoop
findIndVarLoads,findIndVarLoads(TR::Node *,TR::Node *,_Bool &,List<TR::Node> *,TR::Symbol *,vcount_t),1,TR,ArrayLoop
forwardLoop,forwardLoop(),1,TR,ArrayLoop
getAddInc,getAddInc(),1,TR,ArrayLoop
getFinalNode,getFinalNode(),1,TR,ArrayLoop
getFirstAddress,getFirstAddress(),1,TR,ArrayLoop
getFirstIndVarNode,getFirstIndVarNode(),1,TR,Arraycmp
getFirstLoad,getFirstLoad(),1,TR,Arraycmp
getFirstMultiplyNode,getFirstMultiplyNode(),1,TR,Arraycmp
getSecondAddress,getSecondAddress(),1,TR,ArrayLoop
getSecondIndVarNode,getSecondIndVarNode(),1,TR,Arraycmp
getSecondLoad,getSecondLoad(),1,TR,Arraycmp
getSecondMultiplyNode,getSecondMultiplyNode(),1,TR,Arraycmp
getThirdAddress,getThirdAddress(),1,TR,ArrayLoop
setFirstLoad,setFirstLoad(TR::Node *),1,TR,Arraycmp
setSecondLoad,setSecondLoad(TR::Node *),1,TR,Arraycmp
targetOfGotoBlock,targetOfGotoBlock(),1,TR,Arraycmp
updateIndVarStore,updateIndVarStore(class TR_ParentOfChildNode *,TR::Node *,class TR_LRAddressTree *,int32_t),1,TR,ArrayLoop
~TR_ArrayLoop,~TR_ArrayLoop(),1,TR,ArrayLoop
TR_Arraycopy,TR_Arraycopy(class TR_Arraycopy &&),1,TR,Arraycopy
TR_Arraycopy,TR_Arraycopy(const class TR_Arraycopy &),0,TR,Arraycopy
TR_Arraycopy,TR_Arraycopy(TR::Compilation *,class TR_InductionVariable *),0,TR,Arraycopy
checkArrayStore,checkArrayStore(TR::Node *),1,TR,Arraycopy
getCopySize,getCopySize(),1,TR,Arraycopy
getLoadAddress,getLoadAddress(),1,TR,Arraycopy
getLoadIndVarNode,getLoadIndVarNode(),1,TR,Arraycopy
getLoadMultiplyNode,getLoadMultiplyNode(),1,TR,Arraycopy
getStoreAddress,getStoreAddress(),1,TR,Arraycopy
getStoreIndVarNode,getStoreIndVarNode(),1,TR,Arraycopy
getStoreMultiplyNode,getStoreMultiplyNode(),1,TR,Arraycopy
getStoreNode,getStoreNode(),1,TR,Arraycopy
hasWriteBarrier,hasWriteBarrier(),1,TR,Arraycopy
TR_Arrayset,TR_Arrayset(const class TR_Arrayset &),1,TR,Arrayset
TR_Arrayset,TR_Arrayset(class TR_Arrayset &&),0,TR,Arrayset
TR_Arrayset,TR_Arrayset(TR::Compilation *,class TR_InductionVariable *),0,TR,Arrayset
checkArrayStore,checkArrayStore(TR::Node *),1,TR,Arrayset
getIndVar,getIndVar(),1,TR,Arrayset
getIndVarNode,getIndVarNode(),1,TR,Arrayset
getMultiplyNode,getMultiplyNode(),1,TR,Arrayset
getStoreAddress,getStoreAddress(),1,TR,Arrayset
TR_Arraytranslate,TR_Arraytranslate(class TR_Arraytranslate &&),1,TR,Arraytranslate
TR_Arraytranslate,TR_Arraytranslate(TR::Compilation *,class TR_InductionVariable *,_Bool,_Bool),0,TR,Arraytranslate
TR_Arraytranslate,TR_Arraytranslate(const class TR_Arraytranslate &),0,TR,Arraytranslate
checkBreak,checkBreak(TR::Block *,TR::Node *,TR::Block *),1,TR,Arraytranslate
checkGoto,checkGoto(TR::Block *,TR::Node *,TR::Block *),1,TR,Arraytranslate
checkLoad,checkLoad(TR::Node *),1,TR,Arraytranslate
checkMatIndVarStore,checkMatIndVarStore(TR::Node *,TR::Node *),1,TR,Arraytranslate
checkStore,checkStore(TR::Node *),1,TR,Arraytranslate
compilerGeneratedTable,compilerGeneratedTable(),1,TR,Arraytranslate
getByteInput,getByteInput(),1,TR,Arraytranslate
getByteOutput,getByteOutput(),1,TR,Arraytranslate
getInputNode,getInputNode(),1,TR,Arraytranslate
getLoadAddress,getLoadAddress(),1,TR,Arraytranslate
getMulChild,getMulChild(TR::Node *),1,TR,Arraytranslate
getOutputNode,getOutputNode(),1,TR,Arraytranslate
getResultNode,getResultNode(),1,TR,Arraytranslate
getResultUnconvertedNode,getResultUnconvertedNode(),1,TR,Arraytranslate
getStoreAddress,getStoreAddress(),1,TR,Arraytranslate
getTableNode,getTableNode(),1,TR,Arraytranslate
getTermCharNode,getTermCharNode(),1,TR,Arraytranslate
getTermValue,getTermValue(),1,TR,Arraytranslate
hasBranch,hasBranch(),1,TR,Arraytranslate
hasBreak,hasBreak(),1,TR,Arraytranslate
tableBackedByRawStorage,tableBackedByRawStorage(),1,TR,Arraytranslate
TR_ArraytranslateAndTest,TR_ArraytranslateAndTest(class TR_ArraytranslateAndTest &&),1,TR,ArraytranslateAndTest
TR_ArraytranslateAndTest,TR_ArraytranslateAndTest(TR::Compilation *,class TR_InductionVariable *),0,TR,ArraytranslateAndTest
TR_ArraytranslateAndTest,TR_ArraytranslateAndTest(const class TR_ArraytranslateAndTest &),0,TR,ArraytranslateAndTest
checkFrequency,checkFrequency(TR::CodeGenerator *,TR::Block *,TR::Node *),1,TR,ArraytranslateAndTest
checkLoad,checkLoad(TR::Block *,TR::Node *),1,TR,ArraytranslateAndTest
getIndVarNode,getIndVarNode(),1,TR,ArraytranslateAndTest
getInputNode,getInputNode(),1,TR,ArraytranslateAndTest
getStoreAddress,getStoreAddress(),1,TR,ArraytranslateAndTest
getTermCharNode,getTermCharNode(),1,TR,ArraytranslateAndTest
TR_ByteToCharArraycopy,TR_ByteToCharArraycopy(class TR_ByteToCharArraycopy &&),1,TR,ByteToCharArraycopy
TR_ByteToCharArraycopy,TR_ByteToCharArraycopy(const class TR_ByteToCharArraycopy &),0,TR,ByteToCharArraycopy
TR_ByteToCharArraycopy,TR_ByteToCharArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool),0,TR,ByteToCharArraycopy
checkArrayStore,checkArrayStore(TR::Node *),1,TR,ByteToCharArraycopy
checkByteLoads,checkByteLoads(TR::Node *),1,TR,ByteToCharArraycopy
getHighLoadAddress,getHighLoadAddress(),1,TR,ByteToCharArraycopy
getHighLoadIndVarNode,getHighLoadIndVarNode(),1,TR,ByteToCharArraycopy
getHighLoadMultiplyNode,getHighLoadMultiplyNode(),1,TR,ByteToCharArraycopy
getLowLoadAddress,getLowLoadAddress(),1,TR,ByteToCharArraycopy
getLowLoadIndVarNode,getLowLoadIndVarNode(),1,TR,ByteToCharArraycopy
getLowLoadMultiplyNode,getLowLoadMultiplyNode(),1,TR,ByteToCharArraycopy
getStoreAddress,getStoreAddress(),1,TR,ByteToCharArraycopy
getStoreIndVarNode,getStoreIndVarNode(),1,TR,ByteToCharArraycopy
getStoreMultiplyNode,getStoreMultiplyNode(),1,TR,ByteToCharArraycopy
TR_CharToByteArraycopy,TR_CharToByteArraycopy(class TR_CharToByteArraycopy &&),1,TR,CharToByteArraycopy
TR_CharToByteArraycopy,TR_CharToByteArraycopy(const class TR_CharToByteArraycopy &),0,TR,CharToByteArraycopy
TR_CharToByteArraycopy,TR_CharToByteArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool),0,TR,CharToByteArraycopy
checkArrayStores,checkArrayStores(TR::Node *,TR::Node *),1,TR,CharToByteArraycopy
getHighStoreAddress,getHighStoreAddress(),1,TR,CharToByteArraycopy
getHighStoreIndVarNode,getHighStoreIndVarNode(),1,TR,CharToByteArraycopy
getHighStoreMultiplyNode,getHighStoreMultiplyNode(),1,TR,CharToByteArraycopy
getLoadAddress,getLoadAddress(),1,TR,CharToByteArraycopy
getLoadIndVarNode,getLoadIndVarNode(),1,TR,CharToByteArraycopy
getLoadMultiplyNode,getLoadMultiplyNode(),1,TR,CharToByteArraycopy
getLowStoreAddress,getLowStoreAddress(),1,TR,CharToByteArraycopy
getLowStoreIndVarNode,getLowStoreIndVarNode(),1,TR,CharToByteArraycopy
getLowStoreMultiplyNode,getLowStoreMultiplyNode(),1,TR,CharToByteArraycopy
TR_AddressTree,TR_AddressTree(enum TR_AllocationKind,TR::Compilation *),1,TR,AddressTree
TR_AddressTree,TR_AddressTree(class TR_AddressTree &&),0,TR,AddressTree
TR_AddressTree,TR_AddressTree(const class TR_AddressTree &),0,TR,AddressTree
TR_LRAddressTree,TR_LRAddressTree(const class TR_LRAddressTree &),1,TR,LRAddressTree
TR_LRAddressTree,TR_LRAddressTree(class TR_LRAddressTree &&),0,TR,LRAddressTree
TR_LRAddressTree,TR_LRAddressTree(TR::Compilation *,class TR_InductionVariable *),0,TR,LRAddressTree
checkAiadd,checkAiadd(TR::Node *,int32_t),1,TR,LRAddressTree
checkIndVarStore,checkIndVarStore(TR::Node *),1,TR,LRAddressTree
comp,comp(),1,TR,AddressTree
findComplexAddressGenerationTree,findComplexAddressGenerationTree(TR::Node *,vcount_t,TR::Node *),1,TR,AddressTree
getBaseVarNode,getBaseVarNode(),1,TR,AddressTree
getIncrement,getIncrement(),1,TR,LRAddressTree
getIndVar,getIndVar(),1,TR,LRAddressTree
getIndVarLoad,getIndVarLoad(),1,TR,LRAddressTree
getIndVarNode,getIndVarNode(),1,TR,AddressTree
getIndVarSymRef,getIndVarSymRef(),1,TR,LRAddressTree
getIndexBase,getIndexBase(),1,TR,AddressTree
getMaterializedIndVarSymRef,getMaterializedIndVarSymRef(),1,TR,LRAddressTree
getMultiplier,getMultiplier(),1,TR,AddressTree
getMultiplyNode,getMultiplyNode(),1,TR,AddressTree
getOffset,getOffset(),1,TR,AddressTree
getRootNode,getRootNode(),1,TR,AddressTree
isILLoad,isILLoad(TR::Node *),1,TR,AddressTree
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,AddressTree
jitPersistentFree,jitPersistentFree(void *),1,TR,AddressTree
operator delete,operator delete(void *,size_t),1,TR,AddressTree
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,AddressTree
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,AddressTree
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,AddressTree
operator delete,operator delete(void *,TR::Region &),0,TR,AddressTree
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,AddressTree
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,AddressTree
operator delete[],operator delete[](void *,TR::Region &),0,TR,AddressTree
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,AddressTree
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,AddressTree
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,AddressTree
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,AddressTree
operator new,operator new(size_t,TR::Region &),0,TR,AddressTree
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,AddressTree
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,AddressTree
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,AddressTree
operator new[],operator new[](size_t,TR::Region &),1,TR,AddressTree
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,AddressTree
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,AddressTree
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,AddressTree
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,AddressTree
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,AddressTree
operator=,operator=(class TR_AddressTree &&),1,TR,AddressTree
operator=,operator=(const class TR_AddressTree &),0,TR,AddressTree
operator=,operator=(class TR_LRAddressTree &&),0,TR,LRAddressTree
operator=,operator=(const class TR_LRAddressTree &),0,TR,LRAddressTree
process,process(TR::Node *,_Bool),1,TR,AddressTree
processBaseAndIndex,processBaseAndIndex(TR::Node *),1,TR,AddressTree
processMultiplyNode,processMultiplyNode(TR::Node *),1,TR,AddressTree
setIncrement,setIncrement(int32_t),1,TR,LRAddressTree
setMaterializedIndVarSymRef,setMaterializedIndVarSymRef(TR::SymbolReference *),1,TR,LRAddressTree
trMemory,trMemory(),1,TR,AddressTree
updateAiaddSubTree,updateAiaddSubTree(class TR_ParentOfChildNode *,class TR_ArrayLoop *),1,TR,LRAddressTree
updateMultiply,updateMultiply(class TR_ParentOfChildNode *),1,TR,LRAddressTree
~TR_AddressTree,~TR_AddressTree(),1,TR,AddressTree
~TR_LRAddressTree,~TR_LRAddressTree(),1,TR,LRAddressTree
collectSymbolsWrittenAndReadExactlyOnce,collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t,struct TR_LoopTransformer::updateInfo_tables &),1,TR,LoopTransformer
collectSymbolsWrittenAndReadExactlyOnce,collectSymbolsWrittenAndReadExactlyOnce(class TR_Structure *,vcount_t),0,TR,LoopTransformer
TR_LoopReducer,TR_LoopReducer(class TR_LoopReducer &&),1,TR,LoopReducer
TR_LoopReducer,TR_LoopReducer(const class TR_LoopReducer &),0,TR,LoopReducer
TR_LoopReducer,TR_LoopReducer(TR::OptimizationManager *),0,TR,LoopReducer
addBlock,addBlock(TR::Block *,TR::Block **,int,const int),1,TR,LoopReducer
addRegionBlocks,addRegionBlocks(class TR_RegionStructure *,TR::Block **,int,const int),1,TR,LoopReducer
blockInVersionedLoop,blockInVersionedLoop(List<TR::CFGEdge>,TR::Block *),1,TR,LoopReducer
constrainedIndVar,constrainedIndVar(class TR_InductionVariable *),1,TR,LoopReducer
convertIf,convertIf(TR::ILOpCodes),1,TR,LoopReducer
create,create(TR::OptimizationManager *),1,TR,LoopReducer
generateArraycmp,generateArraycmp(class TR_RegionStructure *,class TR_InductionVariable *,TR::Block *,TR::Block *),1,TR,LoopReducer
generateArraycopy,generateArraycopy(class TR_InductionVariable *,TR::Block *),1,TR,LoopReducer
generateArrayset,generateArrayset(class TR_InductionVariable *,TR::Block *),1,TR,LoopReducer
generateArraytranslate,generateArraytranslate(class TR_RegionStructure *,class TR_InductionVariable *,TR::Block *,TR::Block *,TR::Block *,TR::Block *),1,TR,LoopReducer
generateArraytranslateAndTest,generateArraytranslateAndTest(class TR_RegionStructure *,class TR_InductionVariable *,TR::Block *,TR::Block *),1,TR,LoopReducer
generateByteToCharArraycopy,generateByteToCharArraycopy(class TR_InductionVariable *,class TR_InductionVariable *,TR::Block *),1,TR,LoopReducer
generateCharToByteArraycopy,generateCharToByteArraycopy(class TR_InductionVariable *,class TR_InductionVariable *,TR::Block *),1,TR,LoopReducer
mayNeedGlobalDeadStoreElimination,mayNeedGlobalDeadStoreElimination(TR::Block *,TR::Block *),1,TR,LoopReducer
operator=,operator=(class TR_LoopReducer &&),0,TR,LoopReducer
operator=,operator=(const class TR_LoopReducer &),0,TR,LoopReducer
reduceNaturalLoop,reduceNaturalLoop(class TR_RegionStructure *),1,TR,LoopReducer
removeSelfEdge,removeSelfEdge(TR::CFGEdgeList &,int32_t),1,TR,LoopReducer
replaceInductionVariable,replaceInductionVariable(TR::Node *,TR::Node *,int32_t,int32_t,TR::Node *,vcount_t),1,TR,LoopReducer
~TR_LoopReducer,~TR_LoopReducer(),1,TR,LoopReducer
TR_RangeTranslateTable,TR_RangeTranslateTable(const class TR_RangeTranslateTable &),1,TR,RangeTranslateTable
TR_RangeTranslateTable,TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint32_t,uint32_t,uint16_t),0,TR,RangeTranslateTable
TR_RangeTranslateTable,TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint32_t,uint32_t,uint32_t,uint32_t,uint16_t),0,TR,RangeTranslateTable
TR_RangeTranslateTable,TR_RangeTranslateTable(class TR_RangeTranslateTable &&),0,TR,RangeTranslateTable
TR_RangeTranslateTable,TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t,uint16_t,uint16_t),0,TR,RangeTranslateTable
TR_RangeTranslateTable,TR_RangeTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t,uint16_t,uint16_t,uint16_t,uint16_t),0,TR,RangeTranslateTable
TR_TranslateTable,TR_TranslateTable(class TR_TranslateTable &&),1,TR,TranslateTable
TR_TranslateTable,TR_TranslateTable(const class TR_TranslateTable &),0,TR,TranslateTable
TR_TranslateTable,TR_TranslateTable(TR::Compilation *),0,TR,TranslateTable
comp,comp(),1,TR,TranslateTable
createSymbolRef,createSymbolRef(),1,TR,TranslateTable
createTable,createTable(uint16_t,uint16_t,uint16_t,uint16_t,uint8_t,uint8_t,uint16_t),1,TR,TranslateTable
createTable,createTable(uint32_t,uint32_t,uint32_t,uint32_t,uint8_t,uint8_t,uint16_t),0,TR,TranslateTable
createTable,createTable(uint16_t,uint16_t,uint8_t,uint8_t,uint16_t),0,TR,TranslateTable
createTable,createTable(uint32_t,uint32_t,uint8_t,uint8_t,uint16_t),0,TR,TranslateTable
data,data(),1,TR,TranslateTable
dumpTable,dumpTable(),1,TR,TranslateTable
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,TranslateTable
jitPersistentFree,jitPersistentFree(void *),1,TR,TranslateTable
matchTable,matchTable(uint32_t,uint32_t,uint32_t,uint32_t,uint8_t,uint8_t,uint16_t),1,TR,TranslateTable
matchTable,matchTable(uint8_t,uint8_t,void *),0,TR,TranslateTable
operator delete,operator delete(void *,size_t),1,TR,TranslateTable
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,TranslateTable
operator delete,operator delete(void *,TR::Region &),0,TR,TranslateTable
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,TranslateTable
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,TranslateTable
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,TranslateTable
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,TranslateTable
operator delete[],operator delete[](void *,TR::Region &),0,TR,TranslateTable
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,TranslateTable
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,TranslateTable
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,TranslateTable
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,TranslateTable
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,TranslateTable
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,TranslateTable
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,TranslateTable
operator new,operator new(size_t,TR::Region &),0,TR,TranslateTable
operator new[],operator new[](size_t,TR::Region &),1,TR,TranslateTable
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,TranslateTable
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,TranslateTable
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,TranslateTable
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,TranslateTable
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,TranslateTable
setTable,setTable(struct TR_TranslateTable::TR_TranslateTableData *),1,TR,TranslateTable
table,table(),1,TR,TranslateTable
tableSize,tableSize(uint8_t,uint8_t),1,TR,TranslateTable
updateTable,updateTable(),1,TR,TranslateTable
~TR_TranslateTable,~TR_TranslateTable(),1,TR,TranslateTable
TR_SetTranslateTable,TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t []),1,TR,SetTranslateTable
TR_SetTranslateTable,TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,void *,int),0,TR,SetTranslateTable
TR_SetTranslateTable,TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint8_t []),0,TR,SetTranslateTable
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,OMR,CFG
TR_RedundantInductionVarElimination,TR_RedundantInductionVarElimination(const class TR_RedundantInductionVarElimination &),1,TR,RedundantInductionVarElimination
TR_RedundantInductionVarElimination,TR_RedundantInductionVarElimination(class TR_RedundantInductionVarElimination &&),0,TR,RedundantInductionVarElimination
TR_LoopReplicator,TR_LoopReplicator(class TR_LoopReplicator &&),1,TR,LoopReplicator
TR_LoopReplicator,TR_LoopReplicator(const class TR_LoopReplicator &),0,TR,LoopReplicator
TR_LoopReplicator,TR_LoopReplicator(TR::OptimizationManager *),0,TR,LoopReplicator
addBlocksAndFixEdges,addBlocksAndFixEdges(struct TR_LoopReplicator::LoopInfo *),1,TR,LoopReplicator
bestSuccessor,bestSuccessor(class TR_RegionStructure *,TR::Block *,TR::CFGEdge **),1,TR,LoopReplicator
calculateBlockWeights,calculateBlockWeights(class TR_RegionStructure *),1,TR,LoopReplicator
checkForSuccessor,checkForSuccessor(TR::Block *,TR::Block *),1,TR,LoopReplicator
checkInnerLoopFrequencies,checkInnerLoopFrequencies(class TR_RegionStructure *,struct TR_LoopReplicator::LoopInfo *),1,TR,LoopReplicator
computeWeight,computeWeight(TR::CFGEdge *),1,TR,LoopReplicator
countChildren,countChildren(TR::Node *,vcount_t),1,TR,LoopReplicator
create,create(TR::OptimizationManager *),1,TR,LoopReplicator
createEmptyGoto,createEmptyGoto(TR::Block *,TR::Block *,_Bool),1,TR,LoopReplicator
deriveFrequencyFromPreds,deriveFrequencyFromPreds(class TR_StructureSubGraphNode *,class TR_RegionStructure *),1,TR,LoopReplicator
doTailDuplication,doTailDuplication(struct TR_LoopReplicator::LoopInfo *),1,TR,LoopReplicator
findEndTreeTop,findEndTreeTop(class TR_RegionStructure *),1,TR,LoopReplicator
findLoopInfo,findLoopInfo(int32_t),1,TR,LoopReplicator
findNodeInHierarchy,findNodeInHierarchy(class TR_RegionStructure *,int32_t),1,TR,LoopReplicator
fixUpLoopEntry,fixUpLoopEntry(struct TR_LoopReplicator::LoopInfo *,TR::Block *),1,TR,LoopReplicator
gatherBlocksToBeCloned,gatherBlocksToBeCloned(struct TR_LoopReplicator::LoopInfo *),1,TR,LoopReplicator
gatherRestOfLoop,gatherRestOfLoop(class TR_RegionStructure *,TR::Block *,TR_Queue<TR::Block> &),1,TR,LoopReplicator
gatherRestOfLoop,gatherRestOfLoop(class TR_RegionStructure *,TR_Queue<TR::Block> *),0,TR,LoopReplicator
gatherTargets,gatherTargets(TR_Queue<TR::Block> &,TR_Queue<TR::Block> &,struct TR_LoopReplicator::LoopInfo *),1,TR,LoopReplicator
getBlockFreq,getBlockFreq(TR::Block *),1,TR,LoopReplicator
getScaledFreq,getScaledFreq(TR_ScratchList<TR::Block> &,TR::Block *),1,TR,LoopReplicator
getSeedFreq,getSeedFreq(class TR_RegionStructure *),1,TR,LoopReplicator
heuristics,heuristics(struct TR_LoopReplicator::LoopInfo *),1,TR,LoopReplicator
heuristics,heuristics(struct TR_LoopReplicator::LoopInfo *,_Bool),0,TR,LoopReplicator
isBackEdgeOrLoopExit,isBackEdgeOrLoopExit(TR::CFGEdge *,class TR_RegionStructure *,_Bool),1,TR,LoopReplicator
isSwitchBlock,isSwitchBlock(TR::Block *),1,TR,LoopReplicator
isWellFormedLoop,isWellFormedLoop(class TR_RegionStructure *,class TR_Structure *),1,TR,LoopReplicator
logTrace,logTrace(struct TR_LoopReplicator::LoopInfo *),1,TR,LoopReplicator
modifyLoops,modifyLoops(),1,TR,LoopReplicator
nextCandidate,nextCandidate(TR::Block *,class TR_RegionStructure *,_Bool),1,TR,LoopReplicator
nextSuccessor,nextSuccessor(class TR_RegionStructure *,TR::Block **,TR::CFGEdge **),1,TR,LoopReplicator
operator=,operator=(class TR_LoopReplicator &&),0,TR,LoopReplicator
operator=,operator=(const class TR_LoopReplicator &),0,TR,LoopReplicator
perform,perform(class TR_Structure *),0,TR,LoopReplicator
predecessorsNotYetVisited,predecessorsNotYetVisited(class TR_RegionStructure *,class TR_StructureSubGraphNode *),1,TR,LoopReplicator
processBlock,processBlock(TR::Block *,class TR_RegionStructure *,struct TR_LoopReplicator::LoopInfo *),1,TR,LoopReplicator
replicateLoop,replicateLoop(class TR_RegionStructure *,class TR_StructureSubGraphNode *),1,TR,LoopReplicator
searchList,searchList(TR::Block *,enum listType,struct TR_LoopReplicator::LoopInfo *),1,TR,LoopReplicator
shouldReplicateWithHotInnerLoops,shouldReplicateWithHotInnerLoops(class TR_RegionStructure *,struct TR_LoopReplicator::LoopInfo *,TR_ScratchList<TR::Block> *),1,TR,LoopReplicator
~TR_LoopReplicator,~TR_LoopReplicator(),1,TR,LoopReplicator
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,CodeGenerator
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,CodeGenerator
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,CodeGenerator
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,CodeGenerator
TR_LoopSpecializer,TR_LoopSpecializer(const class TR_LoopSpecializer &),1,TR,LoopSpecializer
TR_LoopSpecializer,TR_LoopSpecializer(class TR_LoopSpecializer &&),0,TR,LoopSpecializer
TR_LoopSpecializer,TR_LoopSpecializer(TR::OptimizationManager *),0,TR,LoopSpecializer
TR_LoopVersioner,TR_LoopVersioner(class TR_LoopVersioner &&),1,TR,LoopVersioner
TR_LoopVersioner,TR_LoopVersioner(const class TR_LoopVersioner &),0,TR,LoopVersioner
TR_LoopVersioner,TR_LoopVersioner(TR::OptimizationManager *,_Bool,_Bool),0,TR,LoopVersioner
boundCheckUsesUnchangedValue,boundCheckUsesUnchangedValue(TR::TreeTop *,TR::Node *,TR::SymbolReference *,class TR_RegionStructure *),1,TR,LoopVersioner
buildAliasRefinementComparisonTrees,buildAliasRefinementComparisonTrees(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,TR_ScratchList<TR::Node> *,TR::Block *),1,TR,LoopVersioner
buildArrayStoreCheckComparisonsTree,buildArrayStoreCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *),1,TR,LoopVersioner
buildBoundCheckComparisonsTree,buildBoundCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *,_Bool),1,TR,LoopVersioner
buildCheckCastComparisonsTree,buildCheckCastComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *),1,TR,LoopVersioner
buildConditionalTree,buildConditionalTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *,SharedSparseBitVector &),1,TR,LoopVersioner
buildDivCheckComparisonsTree,buildDivCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *),1,TR,LoopVersioner
buildIwrtbarComparisonsTree,buildIwrtbarComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *),1,TR,LoopVersioner
buildLoopInvariantTree,buildLoopInvariantTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,TR::Block *,TR::Block *),1,TR,LoopVersioner
buildNullCheckComparisonsTree,buildNullCheckComparisonsTree(List<TR::Node> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *),1,TR,LoopVersioner
buildSpecializationTree,buildSpecializationTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<TR::Node> *,TR::Block *,TR::Block *,TR::SymbolReference **),1,TR,LoopVersioner
buildSpineCheckComparisonsTree,buildSpineCheckComparisonsTree(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,TR::Block *),1,TR,LoopVersioner
canPredictIters,canPredictIters(class TR_RegionStructure *,const TR_ScratchList<TR::Block> &,_Bool &,TR::SymbolReference *&),1,TR,LoopVersioner
checkProfiledGuardSuitability,checkProfiledGuardSuitability(TR_ScratchList<TR::Block> *,TR::Node *,TR::SymbolReference *,TR::Compilation *),1,TR,LoopVersioner
collectAllExpressionsToBeChecked,collectAllExpressionsToBeChecked(List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,TR::Node *,List<TR::Node> *,TR::Block *,vcount_t),1,TR,LoopVersioner
collectArrayAliasCandidates,collectArrayAliasCandidates(TR::Node *,vcount_t),1,TR,LoopVersioner
convertSpecializedLongsToInts,convertSpecializedLongsToInts(TR::Node *,vcount_t,TR::SymbolReference **),1,TR,LoopVersioner
create,create(TR::OptimizationManager *),1,TR,LoopVersioner
createClonedHeader,createClonedHeader(TR::Block *,TR::TreeTop **),1,TR,LoopVersioner
createEmptyGoto,createEmptyGoto(TR::Block *,TR::Block *,TR::TreeTop *),1,TR,LoopVersioner
createSwitchNode,createSwitchNode(TR::Block *,TR::SymbolReference *,int32_t),1,TR,LoopVersioner
detectChecksToBeEliminated,detectChecksToBeEliminated(class TR_RegionStructure *,List<TR::Node> *,List<TR::TreeTop> *,List<int32_t> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<int32_t> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,_Bool &),1,TR,LoopVersioner
detectInvariantArrayStoreChecks,detectInvariantArrayStoreChecks(List<TR::TreeTop> *),1,TR,LoopVersioner
detectInvariantBoundChecks,detectInvariantBoundChecks(List<TR::TreeTop> *),1,TR,LoopVersioner
detectInvariantChecks,detectInvariantChecks(List<TR::Node> *,List<TR::TreeTop> *),1,TR,LoopVersioner
detectInvariantDivChecks,detectInvariantDivChecks(List<TR::TreeTop> *),1,TR,LoopVersioner
detectInvariantIwrtbars,detectInvariantIwrtbars(List<TR::TreeTop> *),1,TR,LoopVersioner
detectInvariantNodes,detectInvariantNodes(List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *),1,TR,LoopVersioner
detectInvariantSpecializedExprs,detectInvariantSpecializedExprs(List<TR::Node> *),1,TR,LoopVersioner
detectInvariantSpineChecks,detectInvariantSpineChecks(List<TR::TreeTop> *),1,TR,LoopVersioner
detectInvariantTrees,detectInvariantTrees(class TR_RegionStructure *,List<TR::TreeTop> *,_Bool,_Bool *,SharedSparseBitVector &),1,TR,LoopVersioner
findAndReplaceContigArrayLen,findAndReplaceContigArrayLen(TR::Node *,TR::Node *,vcount_t),1,TR,LoopVersioner
findCallNodeInBlockForGuard,findCallNodeInBlockForGuard(TR::Node *),1,TR,LoopVersioner
findLoad,findLoad(TR::Node *,TR::SymbolReference *,vcount_t),1,TR,LoopVersioner
findStore,findStore(TR::TreeTop *,TR::TreeTop *,TR::Node *,TR::SymbolReference *,_Bool,_Bool),1,TR,LoopVersioner
fixupVirtualGuardTargets,fixupVirtualGuardTargets(struct VirtualGuardInfo *),1,TR,LoopVersioner
getCurrentBlock,getCurrentBlock(TR::Block *),1,TR,LoopVersioner
hasWrtbarBeenSeen,hasWrtbarBeenSeen(List<TR::TreeTop> *,TR::Node *),1,TR,LoopVersioner
initAdditionalDataStructures,initAdditionalDataStructures(),1,TR,LoopVersioner
isBranchSuitableToDoLoopTransfer,isBranchSuitableToDoLoopTransfer(TR_ScratchList<TR::Block> *,TR::Node *,TR::Compilation *),1,TR,LoopVersioner
isBranchSuitableToVersion,isBranchSuitableToVersion(TR_ScratchList<TR::Block> *,TR::Node *,TR::Compilation *),1,TR,LoopVersioner
isConditionalTreeCandidateForElimination,isConditionalTreeCandidateForElimination(TR::TreeTop *),1,TR,LoopVersioner
isDependentOnAllocation,isDependentOnAllocation(TR::Node *,int32_t),1,TR,LoopVersioner
isDependentOnInductionVariable,isDependentOnInductionVariable(TR::Node *,_Bool,_Bool &,TR::Node *&,TR::Node *&),1,TR,LoopVersioner
isDependentOnInvariant,isDependentOnInvariant(TR::Node *),1,TR,LoopVersioner
isExprInvariant,isExprInvariant(TR::Node *,_Bool),1,TR,LoopVersioner
isExprInvariantRecursive,isExprInvariantRecursive(TR::Node *,_Bool),1,TR,LoopVersioner
isInverseConversions,isInverseConversions(TR::Node *),1,TR,LoopVersioner
isStoreInSpecialForm,isStoreInSpecialForm(int32_t,class TR_Structure *),1,TR,LoopVersioner
isVersionableArrayAccess,isVersionableArrayAccess(TR::Node *),1,TR,LoopVersioner
loopIsWorthVersioning,loopIsWorthVersioning(class TR_RegionStructure *),1,TR,LoopVersioner
operator=,operator=(const class TR_LoopVersioner &),0,TR,LoopVersioner
operator=,operator=(class TR_LoopVersioner &&),0,TR,LoopVersioner
operator=,operator=(class TR_LoopSpecializer &&),0,TR,LoopSpecializer
operator=,operator=(const class TR_LoopSpecializer &),0,TR,LoopSpecializer
performLoopTransfer,performLoopTransfer(),1,TR,LoopVersioner
performWithDominators,performWithDominators(),1,TR,LoopVersioner
performWithoutDominators,performWithoutDominators(),1,TR,LoopVersioner
processArrayAliasCandidates,processArrayAliasCandidates(),1,TR,LoopVersioner
recordCurrentBlock,recordCurrentBlock(TR::Block *),1,TR,LoopVersioner
refineAliases,refineAliases(),1,TR,LoopVersioner
refineArrayAliases,refineArrayAliases(class TR_RegionStructure *),1,TR,LoopVersioner
replaceInductionVariable,replaceInductionVariable(TR::Node *,TR::Node *,int,int,TR::Node *,int),1,TR,LoopVersioner
setOnlySpecializeLoops,setOnlySpecializeLoops(_Bool),1,TR,LoopVersioner
shouldOnlySpecializeLoops,shouldOnlySpecializeLoops(),1,TR,LoopVersioner
updateDefinitionsAndCollectProfiledExprs,updateDefinitionsAndCollectProfiledExprs(TR::Node *,TR::Node *,vcount_t,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,TR::Node *,_Bool,TR::Block *,int32_t),1,TR,LoopVersioner
versionNaturalLoop,versionNaturalLoop(class TR_RegionStructure *,List<TR::Node> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::TreeTop> *,List<TR::Node> *,List<class TR_NodeParentSymRef> *,List<class TR_NodeParentSymRefWeightTuple> *,List<class TR_Structure> *,List<class TR_Structure> *,_Bool,SharedSparseBitVector &),1,TR,LoopVersioner
~TR_LoopSpecializer,~TR_LoopSpecializer(),1,TR,LoopSpecializer
~TR_LoopVersioner,~TR_LoopVersioner(),1,TR,LoopVersioner
LocalCSE,LocalCSE(const class OMR::LocalCSE &),1,OMR,LocalCSE
LocalCSE,LocalCSE(class OMR::LocalCSE &&),0,OMR,LocalCSE
LocalCSE,LocalCSE(TR::OptimizationManager *),0,OMR,LocalCSE
LocalCSE,LocalCSE(class TR::LocalCSE &&),0,TR,LocalCSE
LocalCSE,LocalCSE(const class TR::LocalCSE &),0,TR,LocalCSE
addToHashTable,addToHashTable(TR::Node *,int32_t),1,OMR,LocalCSE
allowNodeTypes,allowNodeTypes(TR::Node *,TR::Node *),1,OMR,LocalCSE
areSyntacticallyEquivalent,areSyntacticallyEquivalent(TR::Node *,TR::Node *,_Bool *),1,OMR,LocalCSE
canAffordToIncreaseRegisterPressure,canAffordToIncreaseRegisterPressure(TR::Node *),1,OMR,LocalCSE
canBeAvailable,canBeAvailable(TR::Node *,TR::Node *,class TR_BitVector &,_Bool),1,OMR,LocalCSE
collectAllReplacedNodes,collectAllReplacedNodes(TR::Node *,TR::Node *),1,OMR,LocalCSE
commonNode,commonNode(TR::Node *,int32_t,TR::Node *,TR::Node *),1,OMR,LocalCSE
create,create(TR::OptimizationManager *),1,OMR,LocalCSE
doCommoningAgainIfPreviouslyCommoned,doCommoningAgainIfPreviouslyCommoned(TR::Node *,TR::Node *,int32_t),1,OMR,LocalCSE
doCommoningIfAvailable,doCommoningIfAvailable(TR::Node *,TR::Node *,int32_t,_Bool &),1,OMR,LocalCSE
doCopyPropagationIfPossible,doCopyPropagationIfPossible(TR::Node *,TR::Node *,int32_t,TR::Node *,TR::SymbolReference *,vcount_t,_Bool &),1,OMR,LocalCSE
doExtraPassForVolatiles,doExtraPassForVolatiles(),1,OMR,LocalCSE
examineNode,examineNode(TR::Node *,class TR_BitVector &,TR::Node *,int32_t,int32_t *,_Bool *,int32_t),1,OMR,LocalCSE
getAvailableExpression,getAvailableExpression(TR::Node *,TR::Node *),1,OMR,LocalCSE
getNode,getNode(TR::Node *),1,OMR,LocalCSE
getNumberOfNodes,getNumberOfNodes(TR::Node *),1,OMR,LocalCSE
hash,hash(TR::Node *,TR::Node *),1,OMR,LocalCSE
isAvailableNullCheck,isAvailableNullCheck(TR::Node *,class TR_BitVector &),1,OMR,LocalCSE
isFirstReferenceToNode,isFirstReferenceToNode(TR::Node *,int32_t,TR::Node *,vcount_t),1,OMR,LocalCSE
isIfAggrToBCDOverride,isIfAggrToBCDOverride(TR::Node *,TR::Node *,TR::Node *),1,OMR,LocalCSE
isTreetopSafeToCommon,isTreetopSafeToCommon(),1,OMR,LocalCSE
killAllAvailableExpressions,killAllAvailableExpressions(),1,OMR,LocalCSE
killAllDataStructures,killAllDataStructures(class TR_BitVector &),1,OMR,LocalCSE
killAllInternalPointersBasedOnThisPinningArray,killAllInternalPointersBasedOnThisPinningArray(TR::SymbolReference *),1,OMR,LocalCSE
killAvailableExpressions,killAvailableExpressions(int32_t),1,OMR,LocalCSE
killAvailableExpressionsAtGCSafePoints,killAvailableExpressionsAtGCSafePoints(TR::Node *,TR::Node *,class TR_BitVector &),1,OMR,LocalCSE
killAvailableExpressionsUsingAliases,killAvailableExpressionsUsingAliases(struct TR_NodeKillAliasSetInterface &),1,OMR,LocalCSE
killAvailableExpressionsUsingAliases,killAvailableExpressionsUsingAliases(class TR_BitVector &),0,OMR,LocalCSE
killAvailableExpressionsUsingBitVector,killAvailableExpressionsUsingBitVector(HashTable *,class TR_BitVector &),1,OMR,LocalCSE
killExpressionsIfVolatileLoad,killExpressionsIfVolatileLoad(TR::Node *,class TR_BitVector &,struct TR_NodeKillAliasSetInterface &),1,OMR,LocalCSE
makeNodeAvailableForCommoning,makeNodeAvailableForCommoning(TR::Node *,TR::Node *,class TR_BitVector &,_Bool *),1,OMR,LocalCSE
onNewTreeTop,onNewTreeTop(TR::TreeTop *),1,OMR,LocalCSE
operator=,operator=(class OMR::LocalCSE &&),0,OMR,LocalCSE
operator=,operator=(const class OMR::LocalCSE &),0,OMR,LocalCSE
operator=,operator=(const class TR::LocalCSE &),0,TR,LocalCSE
operator=,operator=(class TR::LocalCSE &&),0,TR,LocalCSE
prepareToCopyPropagate,prepareToCopyPropagate(TR::Node *,TR::Node *),1,OMR,LocalCSE
recursivelyIncReferenceCount,recursivelyIncReferenceCount(TR::Node *),1,OMR,LocalCSE
removeFromHashTable,removeFromHashTable(HashTable *,int32_t),1,OMR,LocalCSE
replaceCopySymbolReferenceByOriginalIn,replaceCopySymbolReferenceByOriginalIn(TR::SymbolReference *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,int32_t),1,OMR,LocalCSE
setIsInMemoryCopyPropFlag,setIsInMemoryCopyPropFlag(TR::Node *),1,OMR,LocalCSE
shouldCommonNode,shouldCommonNode(TR::Node *,TR::Node *),1,OMR,LocalCSE
shouldCopyPropagateNode,shouldCopyPropagateNode(TR::Node *,TR::Node *,int32_t,TR::Node *),1,OMR,LocalCSE
shouldTransformBlock,shouldTransformBlock(TR::Block *),1,OMR,LocalCSE
transformBlock,transformBlock(TR::TreeTop *,TR::TreeTop *),1,OMR,LocalCSE
~LocalCSE,~LocalCSE(),1,OMR,LocalCSE
removeEdge,removeEdge(TR::CFGEdge *),1,OMR,CFG
LocalDeadStoreElimination,LocalDeadStoreElimination(const class TR::LocalDeadStoreElimination &),1,TR,LocalDeadStoreElimination
LocalDeadStoreElimination,LocalDeadStoreElimination(TR::OptimizationManager *),0,TR,LocalDeadStoreElimination
LocalDeadStoreElimination,LocalDeadStoreElimination(class TR::LocalDeadStoreElimination &&),0,TR,LocalDeadStoreElimination
adjustStoresInfo,adjustStoresInfo(TR::Node *,class TR_BitVector &),1,TR,LocalDeadStoreElimination
areLhsOfStoresSyntacticallyEquivalent,areLhsOfStoresSyntacticallyEquivalent(TR::Node *,TR::Node *),1,TR,LocalDeadStoreElimination
create,create(TR::OptimizationManager *),1,TR,LocalDeadStoreElimination
eliminateDeadObjectInitializations,eliminateDeadObjectInitializations(),1,TR,LocalDeadStoreElimination
examineNewUsesForKill,examineNewUsesForKill(TR::Node *,TR::Node *,List<TR::Node> *,List<TR::Node> *,TR::Node *,int32_t,vcount_t),1,TR,LocalDeadStoreElimination
examineNode,examineNode(TR::Node *,int32_t,TR::Node *,class TR_BitVector &),1,TR,LocalDeadStoreElimination
findLocallyAllocatedObjectUses,findLocallyAllocatedObjectUses(LDSBitVector &,TR::Node *,int32_t,TR::Node *,vcount_t),1,TR,LocalDeadStoreElimination
getAnchorNode,getAnchorNode(TR::Node *,int32_t,TR::Node *,TR::TreeTop *,TR::NodeChecklist &),1,TR,LocalDeadStoreElimination
isEntireNodeRemovable,isEntireNodeRemovable(TR::Node *),1,TR,LocalDeadStoreElimination
isFirstReferenceToNode,isFirstReferenceToNode(TR::Node *,int32_t,TR::Node *),1,TR,LocalDeadStoreElimination
isIdentityStore,isIdentityStore(TR::Node *),1,TR,LocalDeadStoreElimination
isNonRemovableStore,isNonRemovableStore(TR::Node *,_Bool &),1,TR,LocalDeadStoreElimination
killStoreNodes,killStoreNodes(TR::Node *),1,TR,LocalDeadStoreElimination
operator=,operator=(class TR::LocalDeadStoreElimination &&),0,TR,LocalDeadStoreElimination
operator=,operator=(const class TR::LocalDeadStoreElimination &),0,TR,LocalDeadStoreElimination
removeStoreTree,removeStoreTree(TR::TreeTop *),1,TR,LocalDeadStoreElimination
seenIdenticalStore,seenIdenticalStore(TR::Node *),1,TR,LocalDeadStoreElimination
setExternalReferenceCountToTree,setExternalReferenceCountToTree(TR::Node *,rcount_t *),1,TR,LocalDeadStoreElimination
setIsFirstReferenceToNode,setIsFirstReferenceToNode(TR::Node *,int32_t,TR::Node *),1,TR,LocalDeadStoreElimination
setupReferenceCounts,setupReferenceCounts(TR::Node *),1,TR,LocalDeadStoreElimination
transformBlock,transformBlock(TR::TreeTop *,TR::TreeTop *),1,TR,LocalDeadStoreElimination
~LocalDeadStoreElimination,~LocalDeadStoreElimination(),1,TR,LocalDeadStoreElimination
TR_ArraysetStoreElimination,TR_ArraysetStoreElimination(class TR_ArraysetStoreElimination &&),1,TR,ArraysetStoreElimination
TR_ArraysetStoreElimination,TR_ArraysetStoreElimination(const class TR_ArraysetStoreElimination &),0,TR,ArraysetStoreElimination
TR_ArraysetStoreElimination,TR_ArraysetStoreElimination(TR::OptimizationManager *),0,TR,ArraysetStoreElimination
create,create(TR::OptimizationManager *),1,TR,ArraysetStoreElimination
operator=,operator=(class TR_ArraysetStoreElimination &&),0,TR,ArraysetStoreElimination
operator=,operator=(const class TR_ArraysetStoreElimination &),0,TR,ArraysetStoreElimination
optimizeArraysetIfPossible,optimizeArraysetIfPossible(TR::Node *,TR::Node *,TR::TreeTop *,TR::Node *,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,vcount_t,TR::TreeTop *),1,TR,ArraysetStoreElimination
process,process(TR::TreeTop *,TR::TreeTop *),1,TR,ArraysetStoreElimination
reduceArraysetStores,reduceArraysetStores(TR::Block *,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *),1,TR,ArraysetStoreElimination
~TR_ArraysetStoreElimination,~TR_ArraysetStoreElimination(),1,TR,ArraysetStoreElimination
~AllBlockIterator,~AllBlockIterator(),1,TR,AllBlockIterator
operator delete[],operator delete[](void *,TR::Region &),1,OMR,CodeGenerator
KnownObjectTable,KnownObjectTable(TR::Compilation *),1,OMR,KnownObjectTable
~PreorderNodeIterator,~PreorderNodeIterator(),1,TR,PreorderNodeIterator
TR_BlockManipulator,TR_BlockManipulator(class TR_BlockManipulator &&),1,TR,BlockManipulator
TR_BlockManipulator,TR_BlockManipulator(const class TR_BlockManipulator &),0,TR,BlockManipulator
TR_BlockManipulator,TR_BlockManipulator(TR::OptimizationManager *),0,TR,BlockManipulator
TR_CleanseTrees,TR_CleanseTrees(class TR_CleanseTrees &&),1,TR,CleanseTrees
TR_CleanseTrees,TR_CleanseTrees(const class TR_CleanseTrees &),0,TR,CleanseTrees
TR_CleanseTrees,TR_CleanseTrees(TR::OptimizationManager *),0,TR,CleanseTrees
breakFallThrough,breakFallThrough(TR::Block *,TR::Block *,_Bool),1,TR,BlockManipulator
countNumberOfTreesInSameExtendedBlock,countNumberOfTreesInSameExtendedBlock(TR::Block *),1,TR,BlockManipulator
create,create(TR::OptimizationManager *),1,TR,CleanseTrees
estimatedHotness,estimatedHotness(TR::CFGEdge *,TR::Block *),1,TR,BlockManipulator
getBestChoiceForExtension,getBestChoiceForExtension(TR::Block *),1,TR,BlockManipulator
isBestChoiceForFallThrough,isBestChoiceForFallThrough(TR::Block *,TR::Block *),1,TR,BlockManipulator
operator=,operator=(class TR_BlockManipulator &&),0,TR,BlockManipulator
operator=,operator=(const class TR_BlockManipulator &),0,TR,BlockManipulator
operator=,operator=(class TR_CleanseTrees &&),0,TR,CleanseTrees
operator=,operator=(const class TR_CleanseTrees &),0,TR,CleanseTrees
performChecksAndTreesMovement,performChecksAndTreesMovement(TR::Block *,TR::Block *,TR::Block *,TR::TreeTop *,vcount_t,TR::Optimizer *),1,TR,BlockManipulator
process,process(TR::TreeTop *,TR::TreeTop *),1,TR,CleanseTrees
~TR_BlockManipulator,~TR_BlockManipulator(),1,TR,BlockManipulator
~TR_CleanseTrees,~TR_CleanseTrees(),1,TR,CleanseTrees
TR_BlockOrderingOptimization,TR_BlockOrderingOptimization(class TR_BlockOrderingOptimization &&),1,TR,BlockOrderingOptimization
TR_BlockOrderingOptimization,TR_BlockOrderingOptimization(const class TR_BlockOrderingOptimization &),0,TR,BlockOrderingOptimization
TR_BlockOrderingOptimization,TR_BlockOrderingOptimization(TR::OptimizationManager *),0,TR,BlockOrderingOptimization
TR_BlockShuffling,TR_BlockShuffling(class TR_BlockShuffling &&),1,TR,BlockShuffling
TR_BlockShuffling,TR_BlockShuffling(TR::OptimizationManager *),0,TR,BlockShuffling
TR_BlockShuffling,TR_BlockShuffling(const class TR_BlockShuffling &),0,TR,BlockShuffling
allocateBlockArray,allocateBlockArray(),1,TR,BlockShuffling
applyBlockOrder,applyBlockOrder(TR::Block **),1,TR,BlockShuffling
connectTreesAccordingToOrder,connectTreesAccordingToOrder(TR_BlockList &),1,TR,BlockOrderingOptimization
create,create(TR::OptimizationManager *),1,TR,BlockShuffling
dumpBlockOrdering,dumpBlockOrdering(TR::TreeTop *,char *),1,TR,BlockOrderingOptimization
insertGotoFallThroughBlock,insertGotoFallThroughBlock(TR::TreeTop *,TR::Node *,TR::CFGNode *,TR::CFGNode *,class TR_RegionStructure *),1,TR,BlockOrderingOptimization
operator=,operator=(const class TR_BlockOrderingOptimization &),0,TR,BlockOrderingOptimization
operator=,operator=(class TR_BlockOrderingOptimization &&),0,TR,BlockOrderingOptimization
operator=,operator=(class TR_BlockShuffling &&),0,TR,BlockShuffling
operator=,operator=(const class TR_BlockShuffling &),0,TR,BlockShuffling
reverse,reverse(TR::Block **),1,TR,BlockShuffling
riffle,riffle(TR::Block **),1,TR,BlockShuffling
scramble,scramble(TR::Block **),1,TR,BlockShuffling
swap,swap(TR::Block **,int32_t,int32_t),1,TR,BlockShuffling
traceBlocks,traceBlocks(TR::Block **),1,TR,BlockShuffling
~TR_BlockOrderingOptimization,~TR_BlockOrderingOptimization(),1,TR,BlockOrderingOptimization
~TR_BlockShuffling,~TR_BlockShuffling(),1,TR,BlockShuffling
TR_BlockSplitter,TR_BlockSplitter(class TR_BlockSplitter &&),1,TR,BlockSplitter
TR_BlockSplitter,TR_BlockSplitter(TR::OptimizationManager *),0,TR,BlockSplitter
TR_BlockSplitter,TR_BlockSplitter(const class TR_BlockSplitter &),0,TR,BlockSplitter
calculateBlockSplitScore,calculateBlockSplitScore(struct TR_BlockSplitter::Synergy &),1,TR,BlockSplitter
containCycle,containCycle(TR::Block *,TR_LinkHeadAndTail<struct BlockMapper> *),1,TR,BlockSplitter
create,create(TR::OptimizationManager *),1,TR,BlockSplitter
disableSynergy,disableSynergy(),1,TR,BlockSplitter
dumpBlockMapper,dumpBlockMapper(TR_LinkHeadAndTail<struct BlockMapper> *),1,TR,BlockSplitter
dumpSynergies,dumpSynergies(TR_Array<struct TR_BlockSplitter::Synergy> *),1,TR,BlockSplitter
getParentStructure,getParentStructure(TR::Block *),1,TR,BlockSplitter
hasIVUpdate,hasIVUpdate(TR::Block *),1,TR,BlockSplitter
hasLoopAsyncCheck,hasLoopAsyncCheck(TR::Block *),1,TR,BlockSplitter
heapElementQuickSort,heapElementQuickSort(TR_Array<class TR_BlockSplitter::TR_IndexedBinaryHeapElement *> *,int32_t,int32_t),1,TR,BlockSplitter
isExitEdge,isExitEdge(TR::Block *,TR::Block *),1,TR,BlockSplitter
isLoopHeader,isLoopHeader(TR::Block *),1,TR,BlockSplitter
operator=,operator=(class TR_BlockSplitter &&),0,TR,BlockSplitter
operator=,operator=(const class TR_BlockSplitter &),0,TR,BlockSplitter
processNode,processNode(TR::Node *,int32_t,TR_Array<uint32_t> *,TR_Array<struct TR_BlockSplitter::Synergy> *),1,TR,BlockSplitter
pruneAndPopulateBlockMapper,pruneAndPopulateBlockMapper(TR_LinkHeadAndTail<struct BlockMapper> *,int32_t),1,TR,BlockSplitter
quickSortSwap,quickSortSwap(TR_Array<class TR_BlockSplitter::TR_IndexedBinaryHeapElement *> *,int32_t,int32_t),1,TR,BlockSplitter
splitBlock,splitBlock(TR::Block *,TR_LinkHeadAndTail<struct BlockMapper> *),1,TR,BlockSplitter
synergisticDepthCalculator,synergisticDepthCalculator(TR_LinkHeadAndTail<struct BlockMapper> *,TR::Block *),1,TR,BlockSplitter
~TR_BlockSplitter,~TR_BlockSplitter(),1,TR,BlockSplitter
TR_Array<T>,TR_Array<T>(class TR_Memory *,uint32_t,_Bool,enum TR_AllocationKind),1,TR,Array
TR_Array<T>,TR_Array<T>(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),0,TR,Array
TR_Array<T>,TR_Array<T>(class TR_PersistentMemory *,uint32_t,_Bool),0,TR,Array
TR_Array<T>,TR_Array<T>(const TR_Array<T> &),0,TR,Array
TR_Array<T>,TR_Array<T>(),0,TR,Array
TR_BinaryHeap,TR_BinaryHeap(class TR_Memory *,uint32_t),1,TR,BlockSplitter::TR_BinaryHeap
TR_BinaryHeap,TR_BinaryHeap(const class TR_BlockSplitter::TR_BinaryHeap &),0,TR,BlockSplitter::TR_BinaryHeap
TR_BinaryHeap,TR_BinaryHeap(class TR_BlockSplitter::TR_BinaryHeap &&),0,TR,BlockSplitter::TR_BinaryHeap
add,add(T),1,TR,Array
add,add(class TR_BlockSplitter::TR_IndexedBinaryHeapElement *),0,TR,BlockSplitter::TR_BinaryHeap
allocationKind,allocationKind(),1,TR,Array
append,append(const TR_Array<T> &),1,TR,Array
clear,clear(),1,TR,Array
contains,contains(T),1,TR,Array
copy,copy(const TR_Array<T> &),1,TR,Array
dumpList,dumpList(TR::Compilation *),1,TR,BlockSplitter::TR_BinaryHeap
element,element(uint32_t),1,TR,Array
free,free(),1,TR,Array
freeMemory,freeMemory(),1,TR,Array
getMaxSize,getMaxSize(),1,TR,BlockSplitter::TR_BinaryHeap
getMin,getMin(),1,TR,BlockSplitter::TR_BinaryHeap
growTo,growTo(uint32_t),1,TR,Array
init,init(class TR_Memory *,uint32_t,_Bool,enum TR_AllocationKind),1,TR,Array
init,init(class TR_Memory *,class TR_PersistentMemory *,uint32_t,_Bool,enum TR_AllocationKind),0,TR,Array
insert,insert(T,uint32_t),1,TR,Array
internalSize,internalSize(),1,TR,Array
isEmpty,isEmpty(),1,TR,Array
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,Array
jitPersistentFree,jitPersistentFree(void *),1,TR,Array
lastIndex,lastIndex(),1,TR,Array
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Array
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Array
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Array
operator delete,operator delete(void *,size_t),0,TR,Array
operator delete,operator delete(void *,TR::Region &),0,TR,Array
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,TR,Array
operator delete[],operator delete[](void *,TR::Region &),0,TR,Array
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Array
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Array
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Array
operator new,operator new(size_t,TR::Region &),0,TR,Array
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Array
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,Array
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,Array
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,Array
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Array
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Array
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Array
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,Array
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Array
operator new[],operator new[](size_t,TR::Region &),0,TR,Array
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,Array
operator=,operator=(const TR_Array<T> &),1,TR,Array
operator=,operator=(class TR_BlockSplitter::TR_BinaryHeap &&),0,TR,BlockSplitter::TR_BinaryHeap
operator[],operator[](uint32_t),1,TR,Array
remove,remove(uint32_t),1,TR,Array
remove,remove(class TR_BlockSplitter::TR_IndexedBinaryHeapElement *),0,TR,BlockSplitter::TR_BinaryHeap
removeMin,removeMin(),1,TR,BlockSplitter::TR_BinaryHeap
setMaxSize,setMaxSize(uint32_t),1,TR,BlockSplitter::TR_BinaryHeap
setSize,setSize(uint32_t),1,TR,Array
size,size(),1,TR,Array
trMemory,trMemory(),1,TR,Array
makeTempsAvailable,makeTempsAvailable(List<TR::SymbolReference> &,List<TR::SymbolReference> &),1,TR,CallStack
makeTempsAvailable,makeTempsAvailable(List<TR::SymbolReference> &),0,TR,CallStack
TR_CheckcastAndProfiledGuardCoalescer,TR_CheckcastAndProfiledGuardCoalescer(class TR_CheckcastAndProfiledGuardCoalescer &&),1,TR,CheckcastAndProfiledGuardCoalescer
TR_CheckcastAndProfiledGuardCoalescer,TR_CheckcastAndProfiledGuardCoalescer(TR::OptimizationManager *),0,TR,CheckcastAndProfiledGuardCoalescer
TR_CheckcastAndProfiledGuardCoalescer,TR_CheckcastAndProfiledGuardCoalescer(const class TR_CheckcastAndProfiledGuardCoalescer &),0,TR,CheckcastAndProfiledGuardCoalescer
create,create(TR::OptimizationManager *),1,TR,CheckcastAndProfiledGuardCoalescer
doBasicCase,doBasicCase(TR::TreeTop *,TR::TreeTop *),1,TR,CheckcastAndProfiledGuardCoalescer
operator=,operator=(const class TR_CheckcastAndProfiledGuardCoalescer &),0,TR,CheckcastAndProfiledGuardCoalescer
operator=,operator=(class TR_CheckcastAndProfiledGuardCoalescer &&),0,TR,CheckcastAndProfiledGuardCoalescer
storeObjectInATemporary,storeObjectInATemporary(TR::TreeTop *),1,TR,CheckcastAndProfiledGuardCoalescer
~TR_CheckcastAndProfiledGuardCoalescer,~TR_CheckcastAndProfiledGuardCoalescer(),1,TR,CheckcastAndProfiledGuardCoalescer
TR_ColdBlockMarker,TR_ColdBlockMarker(class TR_ColdBlockMarker &&),1,TR,ColdBlockMarker
TR_ColdBlockMarker,TR_ColdBlockMarker(const class TR_ColdBlockMarker &),0,TR,ColdBlockMarker
TR_ColdBlockMarker,TR_ColdBlockMarker(TR::OptimizationManager *),0,TR,ColdBlockMarker
TR_ColdBlockOutlining,TR_ColdBlockOutlining(class TR_ColdBlockOutlining &&),1,TR,ColdBlockOutlining
TR_ColdBlockOutlining,TR_ColdBlockOutlining(const class TR_ColdBlockOutlining &),0,TR,ColdBlockOutlining
TR_ColdBlockOutlining,TR_ColdBlockOutlining(TR::OptimizationManager *),0,TR,ColdBlockOutlining
create,create(TR::OptimizationManager *),1,TR,ColdBlockMarker
hasAnyExistingColdBlocks,hasAnyExistingColdBlocks(),1,TR,ColdBlockMarker
hasNotYetRun,hasNotYetRun(TR::Node *),1,TR,ColdBlockMarker
identifyColdBlocks,identifyColdBlocks(),1,TR,ColdBlockMarker
initialize,initialize(),1,TR,ColdBlockMarker
isBlockCold,isBlockCold(TR::Block *),1,TR,ColdBlockMarker
operator=,operator=(class TR_ColdBlockMarker &&),0,TR,ColdBlockMarker
operator=,operator=(const class TR_ColdBlockMarker &),0,TR,ColdBlockMarker
operator=,operator=(const class TR_ColdBlockOutlining &),0,TR,ColdBlockOutlining
operator=,operator=(class TR_ColdBlockOutlining &&),0,TR,ColdBlockOutlining
reorderColdBlocks,reorderColdBlocks(),1,TR,ColdBlockOutlining
~TR_ColdBlockMarker,~TR_ColdBlockMarker(),1,TR,ColdBlockMarker
~TR_ColdBlockOutlining,~TR_ColdBlockOutlining(),1,TR,ColdBlockOutlining
TR_CompactNullChecks,TR_CompactNullChecks(class TR_CompactNullChecks &&),1,TR,CompactNullChecks
TR_CompactNullChecks,TR_CompactNullChecks(const class TR_CompactNullChecks &),0,TR,CompactNullChecks
TR_CompactNullChecks,TR_CompactNullChecks(TR::OptimizationManager *),0,TR,CompactNullChecks
compactNullChecks,compactNullChecks(TR::Block *,class TR_BitVector *),1,TR,CompactNullChecks
create,create(TR::OptimizationManager *),1,TR,CompactNullChecks
operator=,operator=(class TR_CompactNullChecks &&),0,TR,CompactNullChecks
operator=,operator=(const class TR_CompactNullChecks &),0,TR,CompactNullChecks
process,process(TR::TreeTop *,TR::TreeTop *),1,TR,CompactNullChecks
replaceNullCheckIfPossible,replaceNullCheckIfPossible(TR::Node *,TR::Node *,TR::Node *,TR::Node *,class TR_BitVector *,vcount_t,vcount_t,_Bool &),1,TR,CompactNullChecks
replacePassThroughIfPossible,replacePassThroughIfPossible(TR::Node *,TR::Node *,TR::Node *,TR::Node *,_Bool *,class TR_BitVector *,vcount_t,vcount_t,TR::TreeTop *),1,TR,CompactNullChecks
~TR_CompactNullChecks,~TR_CompactNullChecks(),1,TR,CompactNullChecks
TR_EliminateRedundantGotos,TR_EliminateRedundantGotos(class TR_EliminateRedundantGotos &&),1,TR,EliminateRedundantGotos
TR_EliminateRedundantGotos,TR_EliminateRedundantGotos(const class TR_EliminateRedundantGotos &),0,TR,EliminateRedundantGotos
TR_EliminateRedundantGotos,TR_EliminateRedundantGotos(TR::OptimizationManager *),0,TR,EliminateRedundantGotos
create,create(TR::OptimizationManager *),1,TR,EliminateRedundantGotos
operator=,operator=(class TR_EliminateRedundantGotos &&),0,TR,EliminateRedundantGotos
operator=,operator=(const class TR_EliminateRedundantGotos &),0,TR,EliminateRedundantGotos
placeAsyncCheckBefore,placeAsyncCheckBefore(TR::TreeTop *),1,TR,EliminateRedundantGotos
process,process(TR::TreeTop *,TR::TreeTop *),1,TR,EliminateRedundantGotos
renumberExitEdges,renumberExitEdges(class TR_RegionStructure *,int32_t,int32_t),1,TR,EliminateRedundantGotos
renumberInAncestors,renumberInAncestors(class TR_Structure *,int32_t),1,TR,EliminateRedundantGotos
~TR_EliminateRedundantGotos,~TR_EliminateRedundantGotos(),1,TR,EliminateRedundantGotos
TR_ExtendBasicBlocks,TR_ExtendBasicBlocks(class TR_ExtendBasicBlocks &&),1,TR,ExtendBasicBlocks
TR_ExtendBasicBlocks,TR_ExtendBasicBlocks(const class TR_ExtendBasicBlocks &),0,TR,ExtendBasicBlocks
TR_ExtendBasicBlocks,TR_ExtendBasicBlocks(TR::OptimizationManager *),0,TR,ExtendBasicBlocks
create,create(TR::OptimizationManager *),1,TR,ExtendBasicBlocks
operator=,operator=(const class TR_ExtendBasicBlocks &),0,TR,ExtendBasicBlocks
operator=,operator=(class TR_ExtendBasicBlocks &&),0,TR,ExtendBasicBlocks
orderBlocksWithFrequencyInfo,orderBlocksWithFrequencyInfo(),1,TR,ExtendBasicBlocks
orderBlocksWithoutFrequencyInfo,orderBlocksWithoutFrequencyInfo(),1,TR,ExtendBasicBlocks
~TR_ExtendBasicBlocks,~TR_ExtendBasicBlocks(),1,TR,ExtendBasicBlocks
TR_HoistBlocks,TR_HoistBlocks(class TR_HoistBlocks &&),1,TR,HoistBlocks
TR_HoistBlocks,TR_HoistBlocks(const class TR_HoistBlocks &),0,TR,HoistBlocks
TR_HoistBlocks,TR_HoistBlocks(TR::OptimizationManager *),0,TR,HoistBlocks
create,create(TR::OptimizationManager *),1,TR,HoistBlocks
hasSynergy,hasSynergy(TR::Block *,TR::Node *),1,TR,HoistBlocks
operator=,operator=(class TR_HoistBlocks &&),0,TR,HoistBlocks
operator=,operator=(const class TR_HoistBlocks &),0,TR,HoistBlocks
process,process(TR::TreeTop *,TR::TreeTop *),1,TR,HoistBlocks
~TR_HoistBlocks,~TR_HoistBlocks(),1,TR,HoistBlocks
operator new,operator new(size_t,class TR_PersistentMemory *),1,TR,InlinerTracer
TR_InvariantArgumentPreexistence,TR_InvariantArgumentPreexistence(class TR_InvariantArgumentPreexistence &&),1,TR,InvariantArgumentPreexistence
TR_InvariantArgumentPreexistence,TR_InvariantArgumentPreexistence(const class TR_InvariantArgumentPreexistence &),0,TR,InvariantArgumentPreexistence
TR_InvariantArgumentPreexistence,TR_InvariantArgumentPreexistence(TR::OptimizationManager *),0,TR,InvariantArgumentPreexistence
convertCall,convertCall(TR::Node *,TR::TreeTop *),1,TR,InvariantArgumentPreexistence
create,create(TR::OptimizationManager *),1,TR,InvariantArgumentPreexistence
getSuitableParmInfo,getSuitableParmInfo(TR::Node *),1,TR,InvariantArgumentPreexistence
operator=,operator=(class TR_InvariantArgumentPreexistence &&),0,TR,InvariantArgumentPreexistence
operator=,operator=(const class TR_InvariantArgumentPreexistence &),0,TR,InvariantArgumentPreexistence
processIndirectCall,processIndirectCall(TR::Node *,TR::TreeTop *,vcount_t),1,TR,InvariantArgumentPreexistence
processIndirectLoad,processIndirectLoad(TR::Node *,TR::TreeTop *,vcount_t),1,TR,InvariantArgumentPreexistence
processNode,processNode(TR::Node *,TR::TreeTop *,vcount_t),1,TR,InvariantArgumentPreexistence
~TR_InvariantArgumentPreexistence,~TR_InvariantArgumentPreexistence(),1,TR,InvariantArgumentPreexistence
TR_LongRegAllocation,TR_LongRegAllocation(class TR_LongRegAllocation &&),1,TR,LongRegAllocation
TR_LongRegAllocation,TR_LongRegAllocation(const class TR_LongRegAllocation &),0,TR,LongRegAllocation
TR_LongRegAllocation,TR_LongRegAllocation(TR::OptimizationManager *),0,TR,LongRegAllocation
TR_Rematerialization,TR_Rematerialization(const class TR_Rematerialization &),1,TR,Rematerialization
TR_Rematerialization,TR_Rematerialization(TR::OptimizationManager *,_Bool),0,TR,Rematerialization
TR_Rematerialization,TR_Rematerialization(class TR_Rematerialization &&),0,TR,Rematerialization
addParentToList,addParentToList(TR::Node *,List<TR::Node> *,TR::Node *,List<List<TR::Node> > *),1,TR,Rematerialization
calculateLongRegWeight,calculateLongRegWeight(_Bool,_Bool),1,TR,Rematerialization
create,create(TR::OptimizationManager *),1,TR,Rematerialization
examineLongRegNode,examineLongRegNode(TR::Node *,vcount_t,_Bool),1,TR,Rematerialization
examineNode,examineNode(TR::TreeTop *,TR::Node *,TR::Node *,vcount_t,class TR_RematState *,class TR_RematAdjustments &),1,TR,Rematerialization
findSymsUsedInIndirectAccesses,findSymsUsedInIndirectAccesses(TR::Node *,List<TR::Node> *,List<List<TR::Node> > *),1,TR,Rematerialization
getLoopNestingLevel,getLoopNestingLevel(int32_t),1,TR,Rematerialization
getNumCallLiveLongs,getNumCallLiveLongs(),1,TR,Rematerialization
getNumLongAtNesting,getNumLongAtNesting(int8_t),1,TR,Rematerialization
getNumLongLoopOps,getNumLongLoopOps(),1,TR,Rematerialization
getNumLongOps,getNumLongOps(),1,TR,Rematerialization
getNumLongOutArgs,getNumLongOutArgs(),1,TR,Rematerialization
getNumLongParms,getNumLongParms(),1,TR,LongRegAllocation
getNumLoopOps,getNumLoopOps(),1,TR,Rematerialization
getNumOps,getNumOps(),1,TR,Rematerialization
initLongRegData,initLongRegData(),1,TR,Rematerialization
isRematerializable,isRematerializable(TR::Node *,TR::Node *,_Bool),1,TR,Rematerialization
isRematerializableLoad,isRematerializableLoad(TR::Node *,TR::Node *),1,TR,Rematerialization
longRegDecisionMade,longRegDecisionMade(),1,TR,Rematerialization
makeEarlyLongRegDecision,makeEarlyLongRegDecision(),1,TR,Rematerialization
makeLongRegDecision,makeLongRegDecision(),1,TR,LongRegAllocation
operator=,operator=(class TR_Rematerialization &&),0,TR,Rematerialization
operator=,operator=(const class TR_Rematerialization &),0,TR,Rematerialization
operator=,operator=(const class TR_LongRegAllocation &),0,TR,LongRegAllocation
operator=,operator=(class TR_LongRegAllocation &&),0,TR,LongRegAllocation
printStats,printStats(),1,TR,LongRegAllocation
process,process(TR::TreeTop *,TR::TreeTop *),1,TR,Rematerialization
rematerializeAddresses,rematerializeAddresses(TR::Node *,TR::TreeTop *,vcount_t),1,TR,Rematerialization
rematerializeNode,rematerializeNode(TR::TreeTop *,TR::Node *,TR::Node *,vcount_t,List<TR::Node> *,List<TR::Node> *,List<List<TR::Node> > *,List<TR::Node> *,List<List<TR::Node> > *,List<TR::Node> *,List<TR::Node> *,_Bool),1,TR,Rematerialization
rematerializeSSAddress,rematerializeSSAddress(TR::Node *,int32_t),1,TR,Rematerialization
removeNodeFromList,removeNodeFromList(TR::Node *,List<TR::Node> *,List<List<TR::Node> > *,_Bool,List<TR::Node> *,List<TR::Node> *),1,TR,Rematerialization
removeNodeFromList,removeNodeFromList(TR::Node *,List<TR::Node> *,List<List<TR::Node> > *,_Bool,List<TR::Node> *,List<TR::Node> *,const TR::SparseBitVector &),0,TR,Rematerialization
setLongRegDecision,setLongRegDecision(_Bool),1,TR,Rematerialization
setOnlyRunLongRegHeuristic,setOnlyRunLongRegHeuristic(_Bool),1,TR,Rematerialization
shouldOnlyRunLongRegHeuristic,shouldOnlyRunLongRegHeuristic(),1,TR,Rematerialization
~TR_LongRegAllocation,~TR_LongRegAllocation(),1,TR,LongRegAllocation
~TR_Rematerialization,~TR_Rematerialization(),1,TR,Rematerialization
TR_OrderBlocks,TR_OrderBlocks(class TR_OrderBlocks &&),1,TR,OrderBlocks
TR_OrderBlocks,TR_OrderBlocks(const class TR_OrderBlocks &),0,TR,OrderBlocks
TR_OrderBlocks,TR_OrderBlocks(TR::OptimizationManager *,_Bool),0,TR,OrderBlocks
addRemainingSuccessorsToList,addRemainingSuccessorsToList(TR::CFGNode *,TR::CFGNode *),1,TR,OrderBlocks
addRemainingSuccessorsToListHWProfile,addRemainingSuccessorsToListHWProfile(TR::CFGNode *,TR::CFGNode *),1,TR,OrderBlocks
addToOrderedBlockList,addToOrderedBlockList(TR::CFGNode *,TR_BlockList &,_Bool),1,TR,OrderBlocks
analyseForHazards,analyseForHazards(TR::CFGNode *),1,TR,OrderBlocks
candidateIsBetterSuccessorThanBest,candidateIsBetterSuccessorThanBest(TR::CFGEdge *,TR::CFGEdge *),1,TR,OrderBlocks
cannotFollowBlock,cannotFollowBlock(TR::Block *,TR::Block *),1,TR,OrderBlocks
chooseBestFallThroughSuccessor,chooseBestFallThroughSuccessor(TR::CFG *,TR::CFGNode *,int32_t &),1,TR,OrderBlocks
create,create(TR::OptimizationManager *),1,TR,OrderBlocks
doBlockExtension,doBlockExtension(),1,TR,OrderBlocks
doPeepHoleBlockCorrections,doPeepHoleBlockCorrections(TR::Block *,char *),1,TR,OrderBlocks
doPeepHoleOptimizations,doPeepHoleOptimizations(_Bool,_Bool),1,TR,OrderBlocks
doReordering,doReordering(),1,TR,OrderBlocks
dontExtendBlocks,dontExtendBlocks(),1,TR,OrderBlocks
dontReorderBlocks,dontReorderBlocks(),1,TR,OrderBlocks
endPathAtBlock,endPathAtBlock(TR::CFGNode *,TR::CFGNode *,TR::CFG *),1,TR,OrderBlocks
extendBlocks,extendBlocks(),1,TR,OrderBlocks
findBestPath,findBestPath(TR::CFGNode *),1,TR,OrderBlocks
findSuitablePathInList,findSuitablePathInList(List<TR::CFGNode> &,TR::CFGNode *),1,TR,OrderBlocks
generateNewOrder,generateNewOrder(TR_BlockList &),1,TR,OrderBlocks
hasValidCandidate,hasValidCandidate(List<TR::CFGNode> &,TR::CFGNode *),1,TR,OrderBlocks
initialize,initialize(),1,TR,OrderBlocks
insertBlocksToList,insertBlocksToList(),1,TR,OrderBlocks
invalidateStructure,invalidateStructure(),1,TR,OrderBlocks
isCandidateReallyBetter,isCandidateReallyBetter(TR::CFGEdge *,TR::Compilation *),1,TR,OrderBlocks
lookForPeepHoleOpportunities,lookForPeepHoleOpportunities(char *),1,TR,OrderBlocks
mustFollowBlock,mustFollowBlock(TR::Block *,TR::Block *),1,TR,OrderBlocks
needBetterChoice,needBetterChoice(TR::CFG *,TR::CFGNode *,TR::CFGNode *),1,TR,OrderBlocks
needInvalidateStructure,needInvalidateStructure(),1,TR,OrderBlocks
noPeepHoleOptimizations,noPeepHoleOptimizations(),1,TR,OrderBlocks
operator=,operator=(class TR_OrderBlocks &&),0,TR,OrderBlocks
operator=,operator=(const class TR_OrderBlocks &),0,TR,OrderBlocks
peepHoleBranchAroundSingleGoto,peepHoleBranchAroundSingleGoto(TR::CFG *,TR::Block *,char *),1,TR,OrderBlocks
peepHoleBranchBlock,peepHoleBranchBlock(TR::CFG *,TR::Block *,char *),1,TR,OrderBlocks
peepHoleBranchToFollowing,peepHoleBranchToFollowing(TR::CFG *,TR::Block *,TR::Block *,char *),1,TR,OrderBlocks
peepHoleBranchToLoopHeader,peepHoleBranchToLoopHeader(TR::CFG *,TR::Block *,TR::Block *,TR::Block *,char *),1,TR,OrderBlocks
peepHoleGotoBlock,peepHoleGotoBlock(TR::CFG *,TR::Block *,char *),1,TR,OrderBlocks
peepHoleGotoToEmpty,peepHoleGotoToEmpty(TR::CFG *,TR::Block *,TR::Node *,TR::Block *,char *),1,TR,OrderBlocks
peepHoleGotoToFollowing,peepHoleGotoToFollowing(TR::CFG *,TR::Block *,TR::Block *,char *),1,TR,OrderBlocks
peepHoleGotoToGoto,peepHoleGotoToGoto(TR::CFG *,TR::Block *,TR::Node *,TR::Block *,char *,TR::BitVector &),1,TR,OrderBlocks
removeEmptyBlock,removeEmptyBlock(TR::CFG *,TR::Block *,char *),1,TR,OrderBlocks
removeFromOrderedBlockLists,removeFromOrderedBlockLists(TR::CFGNode *),1,TR,OrderBlocks
removeRedundantBranch,removeRedundantBranch(TR::CFG *,TR::Block *,TR::Node *,TR::Block *),1,TR,OrderBlocks
reorderBlocks,reorderBlocks(),1,TR,OrderBlocks
~TR_OrderBlocks,~TR_OrderBlocks(),1,TR,OrderBlocks
TR_PeepHoleBasicBlocks,TR_PeepHoleBasicBlocks(const class TR_PeepHoleBasicBlocks &),1,TR,PeepHoleBasicBlocks
TR_PeepHoleBasicBlocks,TR_PeepHoleBasicBlocks(TR::OptimizationManager *),0,TR,PeepHoleBasicBlocks
TR_PeepHoleBasicBlocks,TR_PeepHoleBasicBlocks(class TR_PeepHoleBasicBlocks &&),0,TR,PeepHoleBasicBlocks
create,create(TR::OptimizationManager *),1,TR,PeepHoleBasicBlocks
operator=,operator=(class TR_PeepHoleBasicBlocks &&),0,TR,PeepHoleBasicBlocks
operator=,operator=(const class TR_PeepHoleBasicBlocks &),0,TR,PeepHoleBasicBlocks
~TR_PeepHoleBasicBlocks,~TR_PeepHoleBasicBlocks(),1,TR,PeepHoleBasicBlocks
TR_ProfiledNodeVersioning,TR_ProfiledNodeVersioning(const class TR_ProfiledNodeVersioning &),1,TR,ProfiledNodeVersioning
TR_ProfiledNodeVersioning,TR_ProfiledNodeVersioning(class TR_ProfiledNodeVersioning &&),0,TR,ProfiledNodeVersioning
TR_ProfiledNodeVersioning,TR_ProfiledNodeVersioning(TR::OptimizationManager *),0,TR,ProfiledNodeVersioning
create,create(TR::OptimizationManager *),1,TR,ProfiledNodeVersioning
operator=,operator=(class TR_ProfiledNodeVersioning &&),0,TR,ProfiledNodeVersioning
operator=,operator=(const class TR_ProfiledNodeVersioning &),0,TR,ProfiledNodeVersioning
temporarilySetProfilingBcInfoOnNewArrayLengthChild,temporarilySetProfilingBcInfoOnNewArrayLengthChild(TR::Node *,TR::Compilation *),1,TR,ProfiledNodeVersioning
~TR_ProfiledNodeVersioning,~TR_ProfiledNodeVersioning(),1,TR,ProfiledNodeVersioning
TR_SimplifyAnds,TR_SimplifyAnds(class TR_SimplifyAnds &&),1,TR,SimplifyAnds
TR_SimplifyAnds,TR_SimplifyAnds(TR::OptimizationManager *),0,TR,SimplifyAnds
TR_SimplifyAnds,TR_SimplifyAnds(const class TR_SimplifyAnds &),0,TR,SimplifyAnds
create,create(TR::OptimizationManager *),1,TR,SimplifyAnds
operator=,operator=(class TR_SimplifyAnds &&),0,TR,SimplifyAnds
operator=,operator=(const class TR_SimplifyAnds &),0,TR,SimplifyAnds
process,process(TR::TreeTop *,TR::TreeTop *),1,TR,SimplifyAnds
~TR_SimplifyAnds,~TR_SimplifyAnds(),1,TR,SimplifyAnds
TR_TrivialBlockExtension,TR_TrivialBlockExtension(TR::OptimizationManager *),1,TR,TrivialBlockExtension
TR_TrivialBlockExtension,TR_TrivialBlockExtension(class TR_TrivialBlockExtension &&),0,TR,TrivialBlockExtension
TR_TrivialBlockExtension,TR_TrivialBlockExtension(const class TR_TrivialBlockExtension &),0,TR,TrivialBlockExtension
create,create(TR::OptimizationManager *),1,TR,TrivialBlockExtension
operator=,operator=(const class TR_TrivialBlockExtension &),0,TR,TrivialBlockExtension
operator=,operator=(class TR_TrivialBlockExtension &&),0,TR,TrivialBlockExtension
~TR_TrivialBlockExtension,~TR_TrivialBlockExtension(),1,TR,TrivialBlockExtension
TR_TrivialDeadTreeRemoval,TR_TrivialDeadTreeRemoval(class TR_TrivialDeadTreeRemoval &&),1,TR,TrivialDeadTreeRemoval
TR_TrivialDeadTreeRemoval,TR_TrivialDeadTreeRemoval(const class TR_TrivialDeadTreeRemoval &),0,TR,TrivialDeadTreeRemoval
TR_TrivialDeadTreeRemoval,TR_TrivialDeadTreeRemoval(TR::OptimizationManager *),0,TR,TrivialDeadTreeRemoval
create,create(TR::OptimizationManager *),1,TR,TrivialDeadTreeRemoval
examineNode,examineNode(TR::Node *,vcount_t),1,TR,TrivialDeadTreeRemoval
operator=,operator=(class TR_TrivialDeadTreeRemoval &&),0,TR,TrivialDeadTreeRemoval
operator=,operator=(const class TR_TrivialDeadTreeRemoval &),0,TR,TrivialDeadTreeRemoval
postProcessTreetop,postProcessTreetop(TR::TreeTop *,List<TR::TreeTop> &,char *,TR::Compilation *),1,TR,TrivialDeadTreeRemoval
preProcessTreetop,preProcessTreetop(TR::TreeTop *,List<TR::TreeTop> &,char *,TR::Compilation *),1,TR,TrivialDeadTreeRemoval
processCommonedChild,processCommonedChild(TR::Node *,TR::TreeTop *,List<TR::TreeTop> &,char *,TR::Compilation *),1,TR,TrivialDeadTreeRemoval
transformBlock,transformBlock(TR::TreeTop *,TR::TreeTop *),1,TR,TrivialDeadTreeRemoval
~TR_TrivialDeadTreeRemoval,~TR_TrivialDeadTreeRemoval(),1,TR,TrivialDeadTreeRemoval
Simplifier,Simplifier(const class OMR::Simplifier &),1,OMR,Simplifier
Simplifier,Simplifier(class OMR::Simplifier &&),0,OMR,Simplifier
Simplifier,Simplifier(TR::OptimizationManager *),0,OMR,Simplifier
anchorOrderDependentNodesInSubtree,anchorOrderDependentNodesInSubtree(TR::Node *,TR::Node *,TR::TreeTop *),1,OMR,Simplifier
cleanupFlags,cleanupFlags(TR::Node *),1,OMR,Simplifier
conditionalToUnconditional,conditionalToUnconditional(TR::Node *&,TR::Block *,int),1,OMR,Simplifier
containingStructure,containingStructure(),1,OMR,Simplifier
create,create(TR::OptimizationManager *),1,OMR,Simplifier
getCC,getCC(TR::Node *),1,OMR,Simplifier
isBoundDefinitelyGELength,isBoundDefinitelyGELength(TR::Node *,TR::Node *),1,OMR,Simplifier
isLegalToFold,isLegalToFold(TR::Node *,TR::Node *),1,OMR,Simplifier
isLegalToUnaryCancel,isLegalToUnaryCancel(TR::Node *,TR::Node *,TR::ILOpCodes),1,OMR,Simplifier
operator=,operator=(class OMR::Simplifier &&),0,OMR,Simplifier
operator=,operator=(const class OMR::Simplifier &),0,OMR,Simplifier
operator=,operator=(class TR::Simplifier &&),0,TR,Simplifier
operator=,operator=(const class TR::Simplifier &),0,TR,Simplifier
reassociate,reassociate(),1,OMR,Simplifier
setCC,setCC(TR::Node *,TR_ConditionCodeNumber),1,OMR,Simplifier
setNodePrecisionIfNeeded,setNodePrecisionIfNeeded(TR::Node *,TR::Node *,TR::NodeChecklist &),1,OMR,Simplifier
simplify,simplify(TR::Block *),1,OMR,Simplifier
simplify,simplify(TR::TreeTop *,TR::Block *),0,OMR,Simplifier
simplify,simplify(TR::Node *,TR::Block *),0,OMR,Simplifier
simplifyExtendedBlock,simplifyExtendedBlock(TR::TreeTop *),1,OMR,Simplifier
simplifyIndirectLoadPatterns,simplifyIndirectLoadPatterns(TR::Node *),1,OMR,Simplifier
simplifyaCallMethods,simplifyaCallMethods(TR::Node *,TR::Block *),1,OMR,Simplifier
simplifyd2fPatterns,simplifyd2fPatterns(TR::Node *),1,OMR,Simplifier
simplifyi2sPatterns,simplifyi2sPatterns(TR::Node *),1,OMR,Simplifier
simplifyiCallMethods,simplifyiCallMethods(TR::Node *,TR::Block *),1,OMR,Simplifier
simplifyiOrPatterns,simplifyiOrPatterns(TR::Node *),1,OMR,Simplifier
simplifylCallMethods,simplifylCallMethods(TR::Node *,TR::Block *),1,OMR,Simplifier
unaryCancelOutWithChild,unaryCancelOutWithChild(TR::Node *,TR::Node *,TR::TreeTop *,TR::ILOpCodes,_Bool),1,OMR,Simplifier
~Simplifier,~Simplifier(),1,OMR,Simplifier
operator delete,operator delete(void *,TR::Region &),1,OMR,TransformUtil
operator new,operator new(size_t,class TR_PersistentMemory *),1,OMR,TransformUtil
List<T>,List<T>(TR::Region &),1,,
List<T>,List<T>(),0,,
List<T>,List<T>(class TR_Memory *),0,,
ListBase<T>,ListBase<T>(),1,,
TR_OrderedBlockList,TR_OrderedBlockList(class TR_Memory *),1,TR,OrderedBlockList
add,add(List<T> &),1,,
add,add(T *,List<T> &),0,,
add,add(T *),0,,
addAfter,addAfter(T *,ListElement<T> *),1,,
addInTraversalOrder,addInTraversalOrder(TR::Block *,_Bool,TR::CFGEdge *),1,TR,OrderedBlockList
deleteAll,deleteAll(),1,,
find,find(T *),1,,
freeElements,freeElements(List<T> &),1,,
getHeadData,getHeadData(),1,,
getLastElement,getLastElement(),1,,
getListHead,getListHead(),1,,
getRegion,getRegion(),1,,
getSize,getSize(),1,,
init,init(),1,,
isDoubleton,isDoubleton(),1,,
isEmpty,isEmpty(),1,,
isMultipleEntry,isMultipleEntry(),1,,
isSingleton,isSingleton(),1,,
operator delete,operator delete(void *,TR::Region &),1,,
operator new,operator new(size_t,class TR_PersistentMemory *),1,,
operator new,operator new(size_t,TR_ArenaAllocator *),0,,
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,,
operator new[],operator new[](size_t,TR::Region &),0,,
operator==,operator==(const ListBase<T> &),1,,
popHead,popHead(),1,,
remove,remove(T *),1,,
removeBlockFromList,removeBlockFromList(TR::Block *,TR::CFGEdge *),1,TR,OrderedBlockList
removeNext,removeNext(ListElement<T> *),1,,
setListHead,setListHead(ListElement<T> *),1,,
setRegion,setRegion(TR::Region &),1,,
killAvailableExpressionsUsingAliases,killAvailableExpressionsUsingAliases(class TR_BitVector &),1,OMR,LocalCSE
killAvailableExpressionsUsingAliases,killAvailableExpressionsUsingAliases(struct TR_NodeKillAliasSetInterface &),0,OMR,LocalCSE
OptimizationManager,OptimizationManager(class TR::OptimizationManager &&),0,TR,OptimizationManager
OptimizationManager,OptimizationManager(const class TR::OptimizationManager &),0,TR,OptimizationManager
TR_HedgeNode<T>,TR_HedgeNode<T>(int32_t),1,TR,HedgeNode
ValueConstraint,ValueConstraint(int32_t),1,OMR,ValuePropagation::ValueConstraint
getKey,getKey(),1,TR,HedgeNode
getParent,getParent(),1,TR,HedgeNode
getValueNumber,getValueNumber(),1,OMR,ValuePropagation::ValueConstraint
height,height(),1,TR,HedgeNode
initialize,initialize(int32_t),1,TR,HedgeNode
initialize,initialize(int32_t,struct OMR::ValuePropagation::Relationship *,struct OMR::ValuePropagation::StoreRelationship *),0,OMR,ValuePropagation::ValueConstraint
isLeftSibling,isLeftSibling(),1,TR,HedgeNode
isRightSibling,isRightSibling(),1,TR,HedgeNode
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,HedgeNode
jitPersistentFree,jitPersistentFree(void *),1,TR,HedgeNode
left,left(),1,TR,HedgeNode
leftReference,leftReference(),1,TR,HedgeNode
operator delete,operator delete(void *,size_t),1,TR,HedgeNode
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeNode
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,HedgeNode
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeNode
operator delete,operator delete(void *,TR::Region &),0,TR,HedgeNode
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,HedgeNode
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeNode
operator delete[],operator delete[](void *,TR::Region &),0,TR,HedgeNode
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,HedgeNode
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,HedgeNode
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeNode
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,HedgeNode
operator new,operator new(size_t,TR::Region &),0,TR,HedgeNode
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,HedgeNode
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeNode
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,HedgeNode
operator new[],operator new[](size_t,TR::Region &),1,TR,HedgeNode
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,HedgeNode
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,HedgeNode
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeNode
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeNode
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,HedgeNode
print,print(OMR::ValuePropagation *,int32_t),1,OMR,ValuePropagation::ValueConstraint
printTree,printTree(class TR_FrontEnd *,TR::FILE *,int32_t,char *,_Bool,_Bool),1,TR,HedgeNode
right,right(),1,TR,HedgeNode
rightReference,rightReference(),1,TR,HedgeNode
setLeft,setLeft(T *),1,TR,HedgeNode
setLeftSibling,setLeftSibling(_Bool),1,TR,HedgeNode
setParent,setParent(T *),1,TR,HedgeNode
setRight,setRight(T *),1,TR,HedgeNode
setRightSibling,setRightSibling(_Bool),1,TR,HedgeNode
verify,verify(T *),1,TR,HedgeNode
ValueConstraintHandler,ValueConstraintHandler(class OMR::ValuePropagation::ValueConstraintHandler &&),1,OMR,ValuePropagation::ValueConstraintHandler
ValueConstraintHandler,ValueConstraintHandler(const class OMR::ValuePropagation::ValueConstraintHandler &),0,OMR,ValuePropagation::ValueConstraintHandler
allocate,allocate(int32_t),1,TR,HedgeTreeHandler
comp,comp(),1,TR,HedgeTreeHandler
copy,copy(T *),1,TR,HedgeTreeHandler
copy,copy(class OMR::ValuePropagation::ValueConstraint *),0,OMR,ValuePropagation::ValueConstraintHandler
copyAll,copyAll(TR_HedgeTree<T> &),1,TR,HedgeTreeHandler
copySubtree,copySubtree(T *),1,TR,HedgeTreeHandler
empty,empty(TR_HedgeTree<T> &),1,TR,HedgeTreeHandler
emptySubtree,emptySubtree(T *&),1,TR,HedgeTreeHandler
find,find(int32_t,TR_HedgeTree<T> &),1,TR,HedgeTreeHandler
findOrCreate,findOrCreate(int32_t,TR_HedgeTree<T> &),1,TR,HedgeTreeHandler
findOrCreate,findOrCreate(int32_t,T *&,int32_t &),0,TR,HedgeTreeHandler
free,free(T *),1,TR,HedgeTreeHandler
free,free(class OMR::ValuePropagation::ValueConstraint *),0,OMR,ValuePropagation::ValueConstraintHandler
getRoot,getRoot(TR_HedgeTree<T> &),1,TR,HedgeTreeHandler
insert,insert(T *,TR_HedgeTree<T> &),1,TR,HedgeTreeHandler
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,HedgeTreeHandler
jitPersistentFree,jitPersistentFree(void *),1,TR,HedgeTreeHandler
operator delete,operator delete(void *,size_t),1,TR,HedgeTreeHandler
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeTreeHandler
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,HedgeTreeHandler
operator delete,operator delete(void *,TR::Region &),0,TR,HedgeTreeHandler
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeTreeHandler
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,HedgeTreeHandler
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeTreeHandler
operator delete[],operator delete[](void *,TR::Region &),0,TR,HedgeTreeHandler
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,HedgeTreeHandler
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,HedgeTreeHandler
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,HedgeTreeHandler
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,HedgeTreeHandler
operator new,operator new(size_t,TR::Region &),0,TR,HedgeTreeHandler
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,HedgeTreeHandler
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeTreeHandler
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,HedgeTreeHandler
operator new[],operator new[](size_t,TR::Region &),1,TR,HedgeTreeHandler
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,HedgeTreeHandler
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,HedgeTreeHandler
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,HedgeTreeHandler
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeTreeHandler
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeTreeHandler
operator=,operator=(class OMR::ValuePropagation::ValueConstraintHandler &&),1,OMR,ValuePropagation::ValueConstraintHandler
operator=,operator=(const class OMR::ValuePropagation::ValueConstraintHandler &),0,OMR,ValuePropagation::ValueConstraintHandler
remove,remove(int32_t,T *&,int32_t &),1,TR,HedgeTreeHandler
remove,remove(int32_t,TR_HedgeTree<T> &),0,TR,HedgeTreeHandler
setRoot,setRoot(TR_HedgeTree<T> &,T *),1,TR,HedgeTreeHandler
setVP,setVP(OMR::ValuePropagation *),1,OMR,ValuePropagation::ValueConstraintHandler
swapRightmost,swapRightmost(T *&,T *&),1,TR,HedgeTreeHandler
~ValueConstraintHandler,~ValueConstraintHandler(),1,OMR,ValuePropagation::ValueConstraintHandler
ArraycopyTransformation,ArraycopyTransformation(const class TR::ArraycopyTransformation &),1,TR,ArraycopyTransformation
ArraycopyTransformation,ArraycopyTransformation(TR::OptimizationManager *),0,TR,ArraycopyTransformation
ArraycopyTransformation,ArraycopyTransformation(class TR::ArraycopyTransformation &&),0,TR,ArraycopyTransformation
arraycopyHighFrequencySpecificLength,arraycopyHighFrequencySpecificLength(TR::Node *),1,TR,ArraycopyTransformation
create,create(TR::OptimizationManager *),1,TR,ArraycopyTransformation
createArrayNode,createArrayNode(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::Node *,TR::SymbolReference *,TR::SymbolReference *,_Bool),1,TR,ArraycopyTransformation
createArrayNode,createArrayNode(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool),0,TR,ArraycopyTransformation
createMultipleArrayNodes,createMultipleArrayNodes(TR::TreeTop *,TR::Node *),1,TR,ArraycopyTransformation
createPointerCompareNode,createPointerCompareNode(TR::Node *,TR::SymbolReference *,TR::SymbolReference *),1,TR,ArraycopyTransformation
createRangeCompareNode,createRangeCompareNode(TR::Node *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *),1,TR,ArraycopyTransformation
hasChangedTrees,hasChangedTrees(),1,TR,ArraycopyTransformation
operator=,operator=(class TR::ArraycopyTransformation &&),0,TR,ArraycopyTransformation
operator=,operator=(const class TR::ArraycopyTransformation &),0,TR,ArraycopyTransformation
setChangedTrees,setChangedTrees(_Bool),1,TR,ArraycopyTransformation
specializeForLength,specializeForLength(TR::TreeTop *,TR::Node *,uintptrj_t,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *),1,TR,ArraycopyTransformation
tryToSpecializeForLength,tryToSpecializeForLength(TR::TreeTop *,TR::Node *),1,TR,ArraycopyTransformation
~ArraycopyTransformation,~ArraycopyTransformation(),1,TR,ArraycopyTransformation
add,add(class TR::BlockChecklist &),1,TR,BlockChecklist
add,add(TR::Block *),0,TR,BlockChecklist
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,Link
operator delete,operator delete(void *,size_t),0,TR,Link
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,Link
DeadTreesElimination,DeadTreesElimination(TR::OptimizationManager *),1,TR,DeadTreesElimination
GlobalValuePropagation,GlobalValuePropagation(const class TR::GlobalValuePropagation &),1,TR,GlobalValuePropagation
GlobalValuePropagation,GlobalValuePropagation(class TR::GlobalValuePropagation &&),0,TR,GlobalValuePropagation
GlobalValuePropagation,GlobalValuePropagation(TR::OptimizationManager *),0,TR,GlobalValuePropagation
ValuePropagation,ValuePropagation(const class OMR::ValuePropagation &),1,OMR,ValuePropagation
ValuePropagation,ValuePropagation(class OMR::ValuePropagation &&),0,OMR,ValuePropagation
ValuePropagation,ValuePropagation(TR::OptimizationManager *),0,OMR,ValuePropagation
ValuePropagation,ValuePropagation(const class TR::ValuePropagation &),0,TR,ValuePropagation
ValuePropagation,ValuePropagation(class TR::ValuePropagation &&),0,TR,ValuePropagation
addBlockConstraint,addBlockConstraint(TR::Node *,TR::VPConstraint *,TR::Node *,_Bool),1,OMR,ValuePropagation
addBlockOrGlobalConstraint,addBlockOrGlobalConstraint(TR::Node *,TR::VPConstraint *,_Bool,TR::Node *),1,OMR,ValuePropagation
addConstraint,addConstraint(TR::VPConstraint *,int32_t),1,OMR,ValuePropagation
addConstraintToList,addConstraintToList(TR::Node *,int32_t,int32_t,TR::VPConstraint *,ValueConstraints *,_Bool),1,OMR,ValuePropagation
addEdgeConstraint,addEdgeConstraint(TR::Node *,TR::VPConstraint *,struct OMR::ValuePropagation::EdgeConstraints *,TR::Node *),1,OMR,ValuePropagation
addGlobalConstraint,addGlobalConstraint(TR::Node *,TR::VPConstraint *,TR::Node *),1,OMR,ValuePropagation
addGlobalConstraint,addGlobalConstraint(TR::Node *,int32_t,TR::VPConstraint *,int32_t),0,OMR,ValuePropagation
addLoopDef,addLoopDef(TR::Node *),1,OMR,ValuePropagation
addToSortedList,addToSortedList(TR_LinkHead<struct OMR::ValuePropagation::ArrayLengthToVersion> *,struct OMR::ValuePropagation::ArrayLengthToVersion *),1,OMR,ValuePropagation
addUnsafeArrayAccessNode,addUnsafeArrayAccessNode(ncount_t),1,OMR,ValuePropagation
applyGlobalConstraints,applyGlobalConstraints(TR::Node *,int32_t,TR::VPConstraint *,int32_t),1,OMR,ValuePropagation
buildBoundCheckComparisonNodes,buildBoundCheckComparisonNodes(struct OMR::ValuePropagation::BlockVersionInfo *,List<TR::Node> *),1,OMR,ValuePropagation
buildInputConstraints,buildInputConstraints(TR::CFGNode *),1,TR,GlobalValuePropagation
buildSameLeafTest,buildSameLeafTest(TR::Node *,TR::Node *,TR::Node *),1,OMR,ValuePropagation
canRunTransformToArrayCopy,canRunTransformToArrayCopy(),1,OMR,ValuePropagation
canTransformArrayCopyCallForSmall,canTransformArrayCopyCallForSmall(TR::Node *,int32_t &,int32_t &,int32_t &,TR::DataType &),1,OMR,ValuePropagation
chTableValidityChecked,chTableValidityChecked(),1,OMR,ValuePropagation
chTableWasValid,chTableWasValid(),1,OMR,ValuePropagation
checkAllUnsafeReferences,checkAllUnsafeReferences(TR::Node *,vcount_t),1,OMR,ValuePropagation
checkBackEdgeCoverage,checkBackEdgeCoverage(),1,OMR,ValuePropagation
checkForInductionVariableIncrement,checkForInductionVariableIncrement(TR::Node *),1,OMR,ValuePropagation
checkForInductionVariableLoad,checkForInductionVariableLoad(TR::Node *),1,OMR,ValuePropagation
checkLoopTestBlock,checkLoopTestBlock(TR::Symbol *),1,OMR,ValuePropagation
checkTypeRelationship,checkTypeRelationship(TR::VPConstraint *,TR::VPConstraint *,int32_t &,_Bool,_Bool),1,OMR,ValuePropagation
checksWereRemoved,checksWereRemoved(),1,OMR,ValuePropagation
collectBackEdgeConstraints,collectBackEdgeConstraints(),1,OMR,ValuePropagation
collectDefSymRefs,collectDefSymRefs(TR::Node *,TR::Node *),1,OMR,ValuePropagation
collectInductionVariableEntryConstraints,collectInductionVariableEntryConstraints(),1,OMR,ValuePropagation
computeDivRangeWhenDivisorCanBeZero,computeDivRangeWhenDivisorCanBeZero(TR::Node *),1,OMR,ValuePropagation
constrainRecognizedMethod,constrainRecognizedMethod(TR::Node *),1,OMR,ValuePropagation
copyRelationships,copyRelationships(struct OMR::ValuePropagation::Relationship *),1,OMR,ValuePropagation
copyStoreRelationships,copyStoreRelationships(struct OMR::ValuePropagation::StoreRelationship *),1,OMR,ValuePropagation
copyValueConstraints,copyValueConstraints(ValueConstraints &),1,OMR,ValuePropagation
create,create(TR::OptimizationManager *),1,TR,GlobalValuePropagation
createAndInsertStoresForArrayCopySpineCheck,createAndInsertStoresForArrayCopySpineCheck(struct OMR::ValuePropagation::TR_ArrayCopySpineCheck *),1,OMR,ValuePropagation
createArrayCopyCallForSpineCheck,createArrayCopyCallForSpineCheck(struct OMR::ValuePropagation::TR_ArrayCopySpineCheck *),1,OMR,ValuePropagation
createArrayCopyVCallNodeAfterStores,createArrayCopyVCallNodeAfterStores(TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *),1,OMR,ValuePropagation
createArrayStoreCompareNode,createArrayStoreCompareNode(TR::Node *,TR::Node *),1,OMR,ValuePropagation
createConverterCallNodeAfterStores,createConverterCallNodeAfterStores(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *),1,OMR,ValuePropagation
createEdgeConstraints,createEdgeConstraints(TR::CFGEdge *,_Bool),1,OMR,ValuePropagation
createExceptionEdgeConstraints,createExceptionEdgeConstraints(uint32_t,class OMR::ValuePropagation::ValueConstraint *,TR::Node *),1,OMR,ValuePropagation
createGlobalConstraint,createGlobalConstraint(int32_t),1,OMR,ValuePropagation
createNewBlockInfoForVersioning,createNewBlockInfoForVersioning(TR::Block *),1,OMR,ValuePropagation
createNewBucketForArrayIndex,createNewBucketForArrayIndex(struct OMR::ValuePropagation::ArrayLengthToVersion *,TR_LinkHead<struct OMR::ValuePropagation::ArrayLengthToVersion> *,int32_t,TR::Node *,TR::Node *,class TR_OpaqueClassBlock *),1,OMR,ValuePropagation
createPrimitiveArrayNodeWithoutFlags,createPrimitiveArrayNodeWithoutFlags(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool,_Bool),1,OMR,ValuePropagation
createPrimitiveOrReferenceCompareNode,createPrimitiveOrReferenceCompareNode(TR::Node *),1,OMR,ValuePropagation
createReferenceArrayNodeWithoutFlags,createReferenceArrayNodeWithoutFlags(TR::TreeTop *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool),1,OMR,ValuePropagation
createRelationship,createRelationship(int32_t,TR::VPConstraint *),1,OMR,ValuePropagation
createSameLeafTestAfterStores,createSameLeafTestAfterStores(TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *),1,OMR,ValuePropagation
createSpineCheckNode,createSpineCheckNode(TR::Node *,TR::SymbolReference *),1,OMR,ValuePropagation
createStoreConstraints,createStoreConstraints(TR::Node *),1,OMR,ValuePropagation
createStoreRelationship,createStoreRelationship(TR::Symbol *,struct OMR::ValuePropagation::Relationship *),1,OMR,ValuePropagation
createValueConstraint,createValueConstraint(int32_t,struct OMR::ValuePropagation::Relationship *,struct OMR::ValuePropagation::StoreRelationship *),1,OMR,ValuePropagation
determineConstraints,determineConstraints(),1,TR,GlobalValuePropagation
doDelayedTransformations,doDelayedTransformations(),1,OMR,ValuePropagation
enablePreexistence,enablePreexistence(),1,OMR,ValuePropagation
enableSimplifier,enableSimplifier(),1,OMR,ValuePropagation
findConstraint,findConstraint(int32_t,int32_t),1,OMR,ValuePropagation
findConstraintInList,findConstraintInList(TR_LinkHead<struct OMR::ValuePropagation::Relationship> &,int32_t),1,OMR,ValuePropagation
findEdgeConstraint,findEdgeConstraint(int32_t,struct OMR::ValuePropagation::EdgeConstraints *,int32_t),1,OMR,ValuePropagation
findGlobalConstraint,findGlobalConstraint(int32_t),1,OMR,ValuePropagation
findGlobalConstraint,findGlobalConstraint(int32_t,int32_t),0,OMR,ValuePropagation
findLoopDef,findLoopDef(TR::Node *),1,OMR,ValuePropagation
findOutEdge,findOutEdge(TR::CFGEdgeList &,TR::CFGNode *),1,OMR,ValuePropagation
findStoreConstraint,findStoreConstraint(int32_t,TR::Symbol *),1,OMR,ValuePropagation
findStoreEdgeConstraint,findStoreEdgeConstraint(int32_t,TR::Symbol *,struct OMR::ValuePropagation::EdgeConstraints *),1,OMR,ValuePropagation
findStoreRelationship,findStoreRelationship(TR_LinkHead<struct OMR::ValuePropagation::StoreRelationship> &,TR::Symbol *),1,OMR,ValuePropagation
findStoreValueConstraint,findStoreValueConstraint(int32_t,TR::Symbol *,ValueConstraints &),1,OMR,ValuePropagation
findStoresInBlock,findStoresInBlock(TR::Block *,ValueConstraints &),1,OMR,ValuePropagation
findThrowInBlock,findThrowInBlock(TR::Block *,TR::TreeTop *&),1,OMR,ValuePropagation
findValueConstraint,findValueConstraint(int32_t,ValueConstraints &,int32_t),1,OMR,ValuePropagation
findVarOfSimpleForm,findVarOfSimpleForm(TR::Node *),1,OMR,ValuePropagation
findVarOfSimpleFormOld,findVarOfSimpleFormOld(TR::Node *),1,OMR,ValuePropagation
freeRelationship,freeRelationship(struct OMR::ValuePropagation::Relationship *),1,OMR,ValuePropagation
freeRelationships,freeRelationships(TR_LinkHead<struct OMR::ValuePropagation::Relationship> &),1,OMR,ValuePropagation
freeStoreRelationship,freeStoreRelationship(struct OMR::ValuePropagation::StoreRelationship *),1,OMR,ValuePropagation
freeStoreRelationships,freeStoreRelationships(TR_LinkHead<struct OMR::ValuePropagation::StoreRelationship> &),1,OMR,ValuePropagation
freeValueConstraint,freeValueConstraint(class OMR::ValuePropagation::ValueConstraint *),1,OMR,ValuePropagation
freeValueConstraints,freeValueConstraints(ValueConstraints &),1,OMR,ValuePropagation
generalizeStores,generalizeStores(ValueConstraints &,ValueConstraints *),1,OMR,ValuePropagation
generateRTArrayNodeWithoutFlags,generateRTArrayNodeWithoutFlags(struct OMR::ValuePropagation::TR_RealTimeArrayCopy *,TR::TreeTop *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,_Bool),1,OMR,ValuePropagation
getArraylengthNodes,getArraylengthNodes(),1,OMR,ValuePropagation
getBestRun,getBestRun(),1,OMR,ValuePropagation
getConstraint,getConstraint(TR::Node *,_Bool &,TR::Node *),1,OMR,ValuePropagation
getCurrentParent,getCurrentParent(),1,OMR,ValuePropagation
getEdgeConstraints,getEdgeConstraints(TR::CFGEdge *),1,OMR,ValuePropagation
getImproperRegionStores,getImproperRegionStores(class TR_StructureSubGraphNode *,ValueConstraints &),1,TR,GlobalValuePropagation
getParmValues,getParmValues(),1,OMR,ValuePropagation
getPrimitiveArrayType,getPrimitiveArrayType(char),1,OMR,ValuePropagation
getStoreConstraint,getStoreConstraint(TR::Node *,TR::Node *),1,OMR,ValuePropagation
getStringCacheRef,getStringCacheRef(),1,OMR,ValuePropagation
getValueNumber,getValueNumber(TR::Node *),1,OMR,ValuePropagation
hasBeenStored,hasBeenStored(int32_t,TR::Symbol *,ValueConstraints &),1,OMR,ValuePropagation
hashGlobalConstraint,hashGlobalConstraint(int32_t),1,OMR,ValuePropagation
initialize,initialize(),1,OMR,ValuePropagation
intersectionFailed,intersectionFailed(),1,OMR,ValuePropagation
invalidateParmConstraintsIfNeeded,invalidateParmConstraintsIfNeeded(TR::Node *,TR::VPConstraint *),1,OMR,ValuePropagation
invalidateUseDefInfo,invalidateUseDefInfo(),1,OMR,ValuePropagation
invalidateValueNumberInfo,invalidateValueNumberInfo(),1,OMR,ValuePropagation
isCastClassObject,isCastClassObject(TR::VPClassType *),1,OMR,ValuePropagation
isDefInUnreachableBlock,isDefInUnreachableBlock(int32_t),1,OMR,ValuePropagation
isHighWordZero,isHighWordZero(TR::Node *),1,OMR,ValuePropagation
isParmInvariant,isParmInvariant(TR::Symbol *),1,OMR,ValuePropagation
isUnreachablePath,isUnreachablePath(struct OMR::ValuePropagation::EdgeConstraints *),1,OMR,ValuePropagation
isUnreachablePath,isUnreachablePath(ValueConstraints &),0,OMR,ValuePropagation
isUnreachableStore,isUnreachableStore(struct OMR::ValuePropagation::StoreRelationship *),1,OMR,ValuePropagation
lastTimeThrough,lastTimeThrough(),1,OMR,ValuePropagation
launchNode,launchNode(TR::Node *,TR::Node *,int32_t),1,OMR,ValuePropagation
mergeBackEdgeConstraints,mergeBackEdgeConstraints(struct OMR::ValuePropagation::EdgeConstraints *),1,OMR,ValuePropagation
mergeConstraintIntoEdge,mergeConstraintIntoEdge(class OMR::ValuePropagation::ValueConstraint *,struct OMR::ValuePropagation::EdgeConstraints *),1,OMR,ValuePropagation
mergeDefConstraints,mergeDefConstraints(TR::Node *,int32_t,_Bool &,_Bool),1,OMR,ValuePropagation
mergeEdgeConstraints,mergeEdgeConstraints(struct OMR::ValuePropagation::EdgeConstraints *,struct OMR::ValuePropagation::EdgeConstraints *),1,OMR,ValuePropagation
mergeRelationships,mergeRelationships(TR_LinkHead<struct OMR::ValuePropagation::Relationship> &,TR_LinkHead<struct OMR::ValuePropagation::Relationship> &,int32_t,_Bool,struct OMR::ValuePropagation::StoreRelationship *,List<TR::Symbol> *,_Bool),1,OMR,ValuePropagation
mergeStoreRelationships,mergeStoreRelationships(class OMR::ValuePropagation::ValueConstraint *,class OMR::ValuePropagation::ValueConstraint *,_Bool),1,OMR,ValuePropagation
mergeValueConstraints,mergeValueConstraints(class OMR::ValuePropagation::ValueConstraint *,class OMR::ValuePropagation::ValueConstraint *,_Bool),1,OMR,ValuePropagation
mustTakeException,mustTakeException(),1,OMR,ValuePropagation
operator=,operator=(const class OMR::ValuePropagation &),0,OMR,ValuePropagation
operator=,operator=(class OMR::ValuePropagation &&),0,OMR,ValuePropagation
operator=,operator=(const class TR::ValuePropagation &),0,TR,ValuePropagation
operator=,operator=(class TR::ValuePropagation &&),0,TR,ValuePropagation
operator=,operator=(const class TR::GlobalValuePropagation &),0,TR,GlobalValuePropagation
operator=,operator=(class TR::GlobalValuePropagation &&),0,TR,GlobalValuePropagation
prepareForBlockVersion,prepareForBlockVersion(TR_LinkHead<struct OMR::ValuePropagation::ArrayLengthToVersion> *),1,OMR,ValuePropagation
printEdgeConstraints,printEdgeConstraints(struct OMR::ValuePropagation::EdgeConstraints *),1,OMR,ValuePropagation
printGlobalConstraints,printGlobalConstraints(),1,OMR,ValuePropagation
printParentStructure,printParentStructure(class TR_Structure *),1,OMR,ValuePropagation
printStructureInfo,printStructureInfo(class TR_Structure *,_Bool,_Bool),1,OMR,ValuePropagation
printValueConstraints,printValueConstraints(ValueConstraints &),1,OMR,ValuePropagation
processAcyclicRegion,processAcyclicRegion(class TR_StructureSubGraphNode *,_Bool,_Bool),1,TR,GlobalValuePropagation
processBlock,processBlock(class TR_StructureSubGraphNode *,_Bool,_Bool),1,TR,GlobalValuePropagation
processImproperLoop,processImproperLoop(class TR_StructureSubGraphNode *,_Bool,_Bool),1,TR,GlobalValuePropagation
processNaturalLoop,processNaturalLoop(class TR_StructureSubGraphNode *,_Bool,_Bool),1,TR,GlobalValuePropagation
processRegionNode,processRegionNode(class TR_StructureSubGraphNode *,_Bool,_Bool),1,TR,GlobalValuePropagation
processRegionSubgraph,processRegionSubgraph(class TR_StructureSubGraphNode *,_Bool,_Bool,_Bool),1,TR,GlobalValuePropagation
processStructure,processStructure(class TR_StructureSubGraphNode *,_Bool,_Bool),1,TR,GlobalValuePropagation
processTrees,processTrees(TR::TreeTop *,TR::TreeTop *),1,OMR,ValuePropagation
propagateConstraint,propagateConstraint(TR::Node *,int32_t,struct OMR::ValuePropagation::Relationship *,struct OMR::ValuePropagation::Relationship *,ValueConstraints *),1,OMR,ValuePropagation
propagateOutputConstraints,propagateOutputConstraints(class TR_StructureSubGraphNode *,_Bool,_Bool,List<TR::CFGEdge> &,List<TR::CFGEdge> *),1,TR,GlobalValuePropagation
registerPreXClass,registerPreXClass(TR::VPConstraint *),1,OMR,ValuePropagation
removeArrayCopyNode,removeArrayCopyNode(TR::TreeTop *),1,OMR,ValuePropagation
removeBndChecksFromFastVersion,removeBndChecksFromFastVersion(struct OMR::ValuePropagation::BlockVersionInfo *),1,OMR,ValuePropagation
removeChildren,removeChildren(TR::Node *,_Bool),1,OMR,ValuePropagation
removeConstraint,removeConstraint(int32_t,ValueConstraints &,int32_t),1,OMR,ValuePropagation
removeConstraints,removeConstraints(),1,OMR,ValuePropagation
removeConstraints,removeConstraints(int32_t),0,OMR,ValuePropagation
removeConstraints,removeConstraints(int32_t,ValueConstraints *),0,OMR,ValuePropagation
removeConstraints,removeConstraints(int32_t,ValueConstraints *,_Bool),0,OMR,ValuePropagation
removeNode,removeNode(TR::Node *,_Bool),0,OMR,ValuePropagation
removeRestOfBlock,removeRestOfBlock(),1,OMR,ValuePropagation
removeStoreConstraints,removeStoreConstraints(ValueConstraints *,int32_t,int32_t),1,OMR,ValuePropagation
replaceByConstant,replaceByConstant(TR::Node *,TR::VPConstraint *,_Bool),1,OMR,ValuePropagation
setChTableValidityChecked,setChTableValidityChecked(_Bool),1,OMR,ValuePropagation
setChTableWasValid,setChTableWasValid(_Bool),1,OMR,ValuePropagation
setChecksRemoved,setChecksRemoved(),1,OMR,ValuePropagation
setCurrentParent,setCurrentParent(TR::Node *),1,OMR,ValuePropagation
setEnableSimplifier,setEnableSimplifier(),1,OMR,ValuePropagation
setIntersectionFailed,setIntersectionFailed(_Bool),1,OMR,ValuePropagation
setUnreachablePath,setUnreachablePath(ValueConstraints &),1,OMR,ValuePropagation
setUnreachablePath,setUnreachablePath(TR::CFGEdge *),0,OMR,ValuePropagation
setUnreachablePath,setUnreachablePath(),0,OMR,ValuePropagation
setUnreachableStore,setUnreachableStore(struct OMR::ValuePropagation::StoreRelationship *),1,OMR,ValuePropagation
setUpInductionVariables,setUpInductionVariables(class TR_StructureSubGraphNode *),1,OMR,ValuePropagation
transformArrayCopyCall,transformArrayCopyCall(TR::Node *),1,OMR,ValuePropagation
transformArrayCopySpineCheck,transformArrayCopySpineCheck(struct OMR::ValuePropagation::TR_ArrayCopySpineCheck *),1,OMR,ValuePropagation
transformRealTimeArrayCopy,transformRealTimeArrayCopy(struct OMR::ValuePropagation::TR_RealTimeArrayCopy *),1,OMR,ValuePropagation
transformReferenceArrayCopy,transformReferenceArrayCopy(struct OMR::ValuePropagation::TR_TreeTopWrtBarFlag *),1,OMR,ValuePropagation
transformReferenceArrayCopyWithoutCreatingStoreTrees,transformReferenceArrayCopyWithoutCreatingStoreTrees(struct OMR::ValuePropagation::TR_TreeTopWrtBarFlag *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *,TR::SymbolReference *),1,OMR,ValuePropagation
transformStringConcats,transformStringConcats(struct OMR::ValuePropagation::VPStringCached *),1,OMR,ValuePropagation
transformStringCtors,transformStringCtors(struct OMR::ValuePropagation::VPTreeTopPair *),1,OMR,ValuePropagation
transformUnknownTypeArrayCopy,transformUnknownTypeArrayCopy(struct OMR::ValuePropagation::TR_TreeTopWrtBarFlag *),1,OMR,ValuePropagation
transformUnsafeCopyMemoryCall,transformUnsafeCopyMemoryCall(TR::Node *),1,OMR,ValuePropagation
useDefInfoInvalid,useDefInfoInvalid(),1,OMR,ValuePropagation
usePreexistence,usePreexistence(),1,OMR,ValuePropagation
valueNumberInfoInvalid,valueNumberInfoInvalid(),1,OMR,ValuePropagation
versionBlocks,versionBlocks(),1,OMR,ValuePropagation
~GlobalValuePropagation,~GlobalValuePropagation(),1,TR,GlobalValuePropagation
~ValuePropagation,~ValuePropagation(),1,OMR,ValuePropagation
LocalDeadStoreElimination,LocalDeadStoreElimination(TR::OptimizationManager *),1,TR,LocalDeadStoreElimination
LocalValuePropagation,LocalValuePropagation(class TR::LocalValuePropagation &&),1,TR,LocalValuePropagation
LocalValuePropagation,LocalValuePropagation(const class TR::LocalValuePropagation &),0,TR,LocalValuePropagation
LocalValuePropagation,LocalValuePropagation(TR::OptimizationManager *),0,TR,LocalValuePropagation
create,create(TR::OptimizationManager *),1,TR,LocalValuePropagation
operator=,operator=(class TR::LocalValuePropagation &&),0,TR,LocalValuePropagation
operator=,operator=(const class TR::LocalValuePropagation &),0,TR,LocalValuePropagation
processBlock,processBlock(TR::TreeTop *),1,TR,LocalValuePropagation
~LocalValuePropagation,~LocalValuePropagation(),1,TR,LocalValuePropagation
recreateWithoutProperties,recreateWithoutProperties(TR::Node *,TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::SymbolReference *),1,OMR,Node
Optimizer,Optimizer(class TR::Optimizer &&),0,TR,Optimizer
Optimizer,Optimizer(const class TR::Optimizer &),0,TR,Optimizer
RegDepCopyRemoval,RegDepCopyRemoval(class TR::RegDepCopyRemoval &&),1,TR,RegDepCopyRemoval
RegDepCopyRemoval,RegDepCopyRemoval(TR::OptimizationManager *),0,TR,RegDepCopyRemoval
RegDepCopyRemoval,RegDepCopyRemoval(const class TR::RegDepCopyRemoval &),0,TR,RegDepCopyRemoval
clearRegDepInfo,clearRegDepInfo(),1,TR,RegDepCopyRemoval
create,create(TR::OptimizationManager *),1,TR,RegDepCopyRemoval
discardAllNodeChoices,discardAllNodeChoices(),1,TR,RegDepCopyRemoval
discardNodeChoice,discardNodeChoice(TR_GlobalRegisterNumber),1,TR,RegDepCopyRemoval
generateRegcopyDebugCounter,generateRegcopyDebugCounter(const char *),1,TR,RegDepCopyRemoval
getNodeChoice,getNodeChoice(TR_GlobalRegisterNumber),1,TR,RegDepCopyRemoval
getRegDepInfo,getRegDepInfo(TR_GlobalRegisterNumber),1,TR,RegDepCopyRemoval
ignoreRegister,ignoreRegister(TR_GlobalRegisterNumber),1,TR,RegDepCopyRemoval
makeFreshCopy,makeFreshCopy(TR_GlobalRegisterNumber),1,TR,RegDepCopyRemoval
operator=,operator=(class TR::RegDepCopyRemoval &&),0,TR,RegDepCopyRemoval
operator=,operator=(const class TR::RegDepCopyRemoval &),0,TR,RegDepCopyRemoval
processRegDeps,processRegDeps(TR::Node *,TR::TreeTop *),1,TR,RegDepCopyRemoval
rangeCheckRegister,rangeCheckRegister(TR_GlobalRegisterNumber),1,TR,RegDepCopyRemoval
readRegDeps,readRegDeps(),1,TR,RegDepCopyRemoval
registerName,registerName(TR_GlobalRegisterNumber),1,TR,RegDepCopyRemoval
rememberNodeChoice,rememberNodeChoice(TR_GlobalRegisterNumber,TR::Node *),1,TR,RegDepCopyRemoval
reuseCopy,reuseCopy(TR_GlobalRegisterNumber),1,TR,RegDepCopyRemoval
selectNodesToCopy,selectNodesToCopy(TR::NodeChecklist &),1,TR,RegDepCopyRemoval
selectNodesToReuse,selectNodesToReuse(TR::NodeChecklist &),1,TR,RegDepCopyRemoval
updateRegDeps,updateRegDeps(TR::NodeChecklist &),1,TR,RegDepCopyRemoval
updateSingleRegDep,updateSingleRegDep(TR_GlobalRegisterNumber,TR::Node *),1,TR,RegDepCopyRemoval
~RegDepCopyRemoval,~RegDepCopyRemoval(),1,TR,RegDepCopyRemoval
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,VPConstraint
TR_ArrayLoop,TR_ArrayLoop(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *),1,TR,ArrayLoop
TR_Arraycmp,TR_Arraycmp(TR::Compilation *,class TR_InductionVariable *),1,TR,Arraycmp
TR_Arraycopy,TR_Arraycopy(TR::Compilation *,class TR_InductionVariable *),1,TR,Arraycopy
TR_Arrayset,TR_Arrayset(TR::Compilation *,class TR_InductionVariable *),1,TR,Arrayset
TR_Arraytranslate,TR_Arraytranslate(TR::Compilation *,class TR_InductionVariable *,_Bool,_Bool),1,TR,Arraytranslate
TR_ArraytranslateAndTest,TR_ArraytranslateAndTest(TR::Compilation *,class TR_InductionVariable *),1,TR,ArraytranslateAndTest
TR_CleanseTrees,TR_CleanseTrees(const class TR_CleanseTrees &),1,TR,CleanseTrees
TR_CleanseTrees,TR_CleanseTrees(class TR_CleanseTrees &&),0,TR,CleanseTrees
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,Array
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Array
operator new,operator new(size_t,TR::Region &),1,TR,Array
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Array
TR_ByteToCharArraycopy,TR_ByteToCharArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool),1,TR,ByteToCharArraycopy
TR_CharToByteArraycopy,TR_CharToByteArraycopy(TR::Compilation *,class TR_InductionVariable *,class TR_InductionVariable *,_Bool),1,TR,CharToByteArraycopy
createInterferenceBetween,createInterferenceBetween(class TR_BitVector *,class TR_BitVector *),1,TR,CompactLocals
createInterferenceBetween,createInterferenceBetween(class TR_BitVector *),0,TR,CompactLocals
TR_CompactNullChecks,TR_CompactNullChecks(const class TR_CompactNullChecks &),1,TR,CompactNullChecks
TR_CompactNullChecks,TR_CompactNullChecks(class TR_CompactNullChecks &&),0,TR,CompactNullChecks
TR_ExceptionCheckMotion,TR_ExceptionCheckMotion(TR::Compilation *,TR::Optimizer *,class TR_PartialRedundancy *),1,TR,ExceptionCheckMotion
allocateContainer,allocateContainer(int32_t),1,TR,ExceptionCheckMotion
analyzeNodeIfSuccessorsAnalyzed,analyzeNodeIfSuccessorsAnalyzed(TR::CFGNode *,class TR_RegionStructure *,ContainerType *,ContainerType *),1,TR,ExceptionCheckMotion
analyzeNodeToInitializeGenAndKillSets,analyzeNodeToInitializeGenAndKillSets(TR::TreeTop *,vcount_t,class TR_BlockStructure *),1,TR,ExceptionCheckMotion
appendLists,appendLists(List<TR::Node> *,List<TR::Node> *),1,TR,ExceptionCheckMotion
areExceptionSuccessorsIdentical,areExceptionSuccessorsIdentical(TR::CFGNode *,TR::CFGNode *),1,TR,ExceptionCheckMotion
checkIfNodeCanSomehowSurvive,checkIfNodeCanSomehowSurvive(TR::Node *,ContainerType *),1,TR,ExceptionCheckMotion
checkIfNodeCanSurvive,checkIfNodeCanSurvive(TR::Node *,ContainerType *),1,TR,ExceptionCheckMotion
compareLists,compareLists(List<TR::Node> *,List<TR::Node> *),1,TR,ExceptionCheckMotion
composeLists,composeLists(List<TR::Node> *,List<TR::Node> *,ContainerType *),1,TR,ExceptionCheckMotion
copyListFromInto,copyListFromInto(List<TR::Node> *,List<TR::Node> *),1,TR,ExceptionCheckMotion
createAnalysisInfo,createAnalysisInfo(),1,TR,ExceptionCheckMotion
createAndAddListElement,createAndAddListElement(TR::Node *,int32_t),1,TR,ExceptionCheckMotion
getActualOptSetInfo,getActualOptSetInfo(),1,TR,ExceptionCheckMotion
getActualRednSetInfo,getActualRednSetInfo(),1,TR,ExceptionCheckMotion
getAnalysisInfo,getAnalysisInfo(class TR_Structure *),1,TR,ExceptionCheckMotion
getExprsUnaffectedByOrder,getExprsUnaffectedByOrder(),1,TR,ExceptionCheckMotion
getGenSetList,getGenSetList(),1,TR,ExceptionCheckMotion
getOptimisticOptSetInfo,getOptimisticOptSetInfo(),1,TR,ExceptionCheckMotion
getOptimisticRednSetInfo,getOptimisticRednSetInfo(),1,TR,ExceptionCheckMotion
getOrderedOptList,getOrderedOptList(),1,TR,ExceptionCheckMotion
getOrderedOptNumbersList,getOrderedOptNumbersList(),1,TR,ExceptionCheckMotion
getPartialRedundancy,getPartialRedundancy(),1,TR,ExceptionCheckMotion
getTrySecondBestSolution,getTrySecondBestSolution(),1,TR,ExceptionCheckMotion
includeRelevantNodes,includeRelevantNodes(TR::Node *,vcount_t,int32_t),1,TR,ExceptionCheckMotion
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,class TR_Structure *),1,TR,ExceptionCheckMotion
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,TR::Block *),0,TR,ExceptionCheckMotion
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,class TR_RegionStructure *),0,TR,ExceptionCheckMotion
initializeGenAndKillSetInfo,initializeGenAndKillSetInfo(),1,TR,ExceptionCheckMotion
initializeOutList,initializeOutList(List<TR::Node> *),1,TR,ExceptionCheckMotion
initializeOutLists,initializeOutLists(List<TR::Node> **),1,TR,ExceptionCheckMotion
isNodeKilledByChild,isNodeKilledByChild(TR::Node *,TR::Node *,int32_t),1,TR,ExceptionCheckMotion
isNodeValueZero,isNodeValueZero(TR::Node *),1,TR,ExceptionCheckMotion
markNodeAsSurvivor,markNodeAsSurvivor(TR::Node *,ContainerType *),1,TR,ExceptionCheckMotion
operator=,operator=(const class TR_ExceptionCheckMotion &),0,TR,ExceptionCheckMotion
operator=,operator=(class TR_ExceptionCheckMotion &&),0,TR,ExceptionCheckMotion
removeFromList,removeFromList(ListElement<TR::Node> *,List<TR::Node> *,ListElement<TR::Node> *),1,TR,ExceptionCheckMotion
setBlockFenceStatus,setBlockFenceStatus(TR::Block *),1,TR,ExceptionCheckMotion
~TR_ExceptionCheckMotion,~TR_ExceptionCheckMotion(),1,TR,ExceptionCheckMotion
TR_ExpressionsSimplification,TR_ExpressionsSimplification(const class TR_ExpressionsSimplification &),1,TR,ExpressionsSimplification
TR_ExpressionsSimplification,TR_ExpressionsSimplification(class TR_ExpressionsSimplification &&),0,TR,ExpressionsSimplification
detectFieldsThatCannotBePrivatized,detectFieldsThatCannotBePrivatized(TR::Node *,vcount_t),1,TR,FieldPrivatizer
detectFieldsThatCannotBePrivatized,detectFieldsThatCannotBePrivatized(class TR_Structure *,vcount_t),0,TR,FieldPrivatizer
TR_IndirectCallSite,TR_IndirectCallSite(class TR_IndirectCallSite &&),1,TR,IndirectCallSite
TR_IndirectCallSite,TR_IndirectCallSite(const class TR_IndirectCallSite &),0,TR,IndirectCallSite
TR_GeneralSinkStores,TR_GeneralSinkStores(class TR_GeneralSinkStores &&),1,TR,GeneralSinkStores
TR_GeneralSinkStores,TR_GeneralSinkStores(const class TR_GeneralSinkStores &),0,TR,GeneralSinkStores
TR_GeneralSinkStores,TR_GeneralSinkStores(TR::OptimizationManager *),0,TR,GeneralSinkStores
TR_SinkStores,TR_SinkStores(TR::OptimizationManager *),1,TR,SinkStores
TR_SinkStores,TR_SinkStores(const class TR_SinkStores &),0,TR,SinkStores
TR_SinkStores,TR_SinkStores(class TR_SinkStores &&),0,TR,SinkStores
checkLiveMergingPaths,checkLiveMergingPaths(class TR_BlockListEntry *,int32_t),1,TR,SinkStores
coalesceSimilarEdgePlacements,coalesceSimilarEdgePlacements(),1,TR,SinkStores
create,create(TR::OptimizationManager *),1,TR,GeneralSinkStores
doSinking,doSinking(),1,TR,SinkStores
enablePreciseSymbolTracking,enablePreciseSymbolTracking(),1,TR,SinkStores
findEdgeInformation,findEdgeInformation(TR::CFGEdge *,List<class TR_EdgeInformation> &),1,TR,SinkStores
findFirstUseOfLoad,findFirstUseOfLoad(TR::Node *),1,TR,SinkStores
findTempSym,findTempSym(TR::Node *),1,TR,SinkStores
genHandlerIndex,genHandlerIndex(),1,TR,SinkStores
genStoreToTempSyms,genStoreToTempSyms(TR::TreeTop *,TR::Node *,class TR_BitVector *,class TR_BitVector *,TR::Node *,List<class TR_MovableStore> &),1,TR,SinkStores
getSinkableSymbol,getSinkableSymbol(TR::Node *),1,TR,SinkStores
insertAnchoredNodes,insertAnchoredNodes(class TR_MovableStore *,TR::Node *,TR::Node *,TR::Node *,int32_t,class TR_BitVector *,class TR_BitVector *,class TR_BitVector *,TR::Block *,List<class TR_IndirectLoadAnchor> *,vcount_t),1,TR,SinkStores
isCorrectCommonedLoad,isCorrectCommonedLoad(TR::Node *,TR::Node *),1,TR,SinkStores
isExceptionFlagIsSticky,isExceptionFlagIsSticky(),1,TR,SinkStores
isSafeToSinkThruEdgePlacement,isSafeToSinkThruEdgePlacement(int,TR::CFGNode *,TR::CFGNode *,class TR_BitVector *),1,TR,SinkStores
isSymUsedInEdgePlacement,isSymUsedInEdgePlacement(TR::CFGNode *,TR::CFGNode *),1,TR,SinkStores
lookForSinkableStores,lookForSinkableStores(),1,TR,SinkStores
operator=,operator=(class TR_SinkStores &&),0,TR,SinkStores
operator=,operator=(const class TR_SinkStores &),0,TR,SinkStores
operator=,operator=(const class TR_GeneralSinkStores &),0,TR,GeneralSinkStores
operator=,operator=(class TR_GeneralSinkStores &&),0,TR,GeneralSinkStores
performStoreSinking,performStoreSinking(),1,TR,SinkStores
performThisTransformation,performThisTransformation(),1,TR,SinkStores
placeStoresAlongEdges,placeStoresAlongEdges(List<class TR_StoreInformation> &,List<class TR_EdgeInformation> &),1,TR,SinkStores
placeStoresInBlock,placeStoresInBlock(List<class TR_StoreInformation> &,TR::Block *),1,TR,SinkStores
recordPlacementForDefAlongEdge,recordPlacementForDefAlongEdge(class TR_EdgeStorePlacement *),1,TR,SinkStores
recordPlacementForDefInBlock,recordPlacementForDefInBlock(class TR_BlockStorePlacement *),1,TR,SinkStores
replaceLoadsWithTempSym,replaceLoadsWithTempSym(TR::Node *,TR::Node *,class TR_BitVector *),1,TR,SinkStores
searchAndMarkFirstUses,searchAndMarkFirstUses(TR::Node *,TR::TreeTop *,class TR_MovableStore *,TR::Block *,class TR_BitVector *),1,TR,SinkStores
setExceptionFlagIsSticky,setExceptionFlagIsSticky(_Bool),1,TR,SinkStores
setSinkMethodMetaDataStores,setSinkMethodMetaDataStores(_Bool),1,TR,SinkStores
setSinkStoresWithIndirectLoads,setSinkStoresWithIndirectLoads(_Bool),1,TR,SinkStores
setSinkStoresWithStaticLoads,setSinkStoresWithStaticLoads(_Bool),1,TR,SinkStores
setUsesDataFlowAnalysis,setUsesDataFlowAnalysis(_Bool),1,TR,SinkStores
shouldSinkStoreAlongEdge,shouldSinkStoreAlongEdge(int,TR::CFGNode *,TR::CFGNode *,int32_t,_Bool,vcount_t,class TR_BitVector *),1,TR,SinkStores
sinkMethodMetaDataStores,sinkMethodMetaDataStores(),1,TR,SinkStores
sinkStorePlacement,sinkStorePlacement(class TR_MovableStore *,_Bool),1,TR,SinkStores
sinkStoresWithIndirectLoads,sinkStoresWithIndirectLoads(),1,TR,SinkStores
sinkStoresWithStaticLoads,sinkStoresWithStaticLoads(),1,TR,SinkStores
storeCanMoveThroughBlock,storeCanMoveThroughBlock(class TR_BitVector *,class TR_BitVector *,int32_t,class TR_BitVector *,class TR_BitVector *),1,TR,SinkStores
storeIsSinkingCandidate,storeIsSinkingCandidate(TR::Block *,TR::Node *,int32_t,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t &,vcount_t &),1,TR,SinkStores
treeIsSinkableStore,treeIsSinkableStore(TR::Node *,_Bool,uint32_t &,int32_t &,_Bool &,vcount_t),1,TR,SinkStores
usesDataFlowAnalysis,usesDataFlowAnalysis(),1,TR,SinkStores
~TR_GeneralSinkStores,~TR_GeneralSinkStores(),1,TR,GeneralSinkStores
~TR_SinkStores,~TR_SinkStores(),1,TR,SinkStores
resolveTypeMismatch,resolveTypeMismatch(TR::DataType,TR::Node *,TR::Node *),1,TR,GlobalRegisterAllocator
resolveTypeMismatch,resolveTypeMismatch(TR::Node *,TR::Node *),0,TR,GlobalRegisterAllocator
tagCandidates,tagCandidates(TR::Block *,_Bool),1,TR,GlobalRegisterAllocator
tagCandidates,tagCandidates(TR::Block *,uint32_t,_Bool),0,TR,GlobalRegisterAllocator
TR_HashValueNumberInfo,TR_HashValueNumberInfo(class TR_HashValueNumberInfo &),1,TR,HashValueNumberInfo
TR_HashValueNumberInfo,TR_HashValueNumberInfo(TR::Compilation *,TR::Optimizer *,_Bool,_Bool,_Bool),0,TR,HashValueNumberInfo
operator=,operator=(const class TR_ValueNumberInfo &),1,TR,ValueNumberInfo
operator=,operator=(class TR_ValueNumberInfo &&),0,TR,ValueNumberInfo
TR_IndexExprManipulator,TR_IndexExprManipulator(const class TR_IndexExprManipulator &),1,TR,IndexExprManipulator
TR_IndexExprManipulator,TR_IndexExprManipulator(TR::OptimizationManager *),0,TR,IndexExprManipulator
TR_IndexExprManipulator,TR_IndexExprManipulator(class TR_IndexExprManipulator &&),0,TR,IndexExprManipulator
create,create(TR::OptimizationManager *),1,TR,IndexExprManipulator
operator=,operator=(const class TR_IndexExprManipulator &),0,TR,IndexExprManipulator
operator=,operator=(class TR_IndexExprManipulator &&),0,TR,IndexExprManipulator
rewriteIndexExpression,rewriteIndexExpression(class TR_PrimaryInductionVariable *,TR::Node *,TR::Node *,_Bool),1,TR,IndexExprManipulator
rewriteIndexExpression,rewriteIndexExpression(class TR_Structure *),0,TR,IndexExprManipulator
~TR_IndexExprManipulator,~TR_IndexExprManipulator(),1,TR,IndexExprManipulator
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,TR,InlinerTracer
operator delete[],operator delete[](void *,TR::Region &),0,TR,InlinerTracer
operator new[],operator new[](size_t,TR::Region &),1,TR,InlinerTracer
TR_InnerPreexistence,TR_InnerPreexistence(class TR_InnerPreexistence &&),1,TR,InnerPreexistence
TR_InnerPreexistence,TR_InnerPreexistence(const class TR_InnerPreexistence &),0,TR,InnerPreexistence
TR_InnerPreexistence,TR_InnerPreexistence(TR::OptimizationManager *),0,TR,InnerPreexistence
create,create(TR::OptimizationManager *),1,TR,InnerPreexistence
devirtualize,devirtualize(class TR_InnerPreexistence::GuardInfo *),1,TR,InnerPreexistence
initialize,initialize(),1,TR,InnerPreexistence
operator=,operator=(const class TR_InnerPreexistence &),0,TR,InnerPreexistence
operator=,operator=(class TR_InnerPreexistence &&),0,TR,InnerPreexistence
transform,transform(),1,TR,InnerPreexistence
~TR_InnerPreexistence,~TR_InnerPreexistence(),1,TR,InnerPreexistence
TR_LRAddressTree,TR_LRAddressTree(TR::Compilation *,class TR_InductionVariable *),1,TR,LRAddressTree
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,AddressTree
operator delete,operator delete(void *,size_t),0,TR,AddressTree
operator delete[],operator delete[](void *,TR::Region &),1,TR,AddressTree
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,AddressTree
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,AddressTree
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,AddressTree
TR_LiveOnNotAllPaths,TR_LiveOnNotAllPaths(TR::Compilation *,class TR_Liveness *,class TR_LiveOnAllPaths *),1,TR,LiveOnNotAllPaths
TR_LiveOnNotAllPaths,TR_LiveOnNotAllPaths(class TR_LiveOnNotAllPaths &&),0,TR,LiveOnNotAllPaths
allocator,allocator(),1,TR,LiveOnNotAllPaths
comp,comp(),1,TR,LiveOnNotAllPaths
operator=,operator=(class TR_LiveOnNotAllPaths &&),1,TR,LiveOnNotAllPaths
operator=,operator=(const class TR_LiveOnNotAllPaths &),0,TR,LiveOnNotAllPaths
trMemory,trMemory(),1,TR,LiveOnNotAllPaths
trStackMemory,trStackMemory(),1,TR,LiveOnNotAllPaths
~TR_LiveOnNotAllPaths,~TR_LiveOnNotAllPaths(),1,TR,LiveOnNotAllPaths
TR_Rematerialization,TR_Rematerialization(class TR_Rematerialization &&),1,TR,Rematerialization
TR_Rematerialization,TR_Rematerialization(const class TR_Rematerialization &),0,TR,Rematerialization
TR_LoopReplicator,TR_LoopReplicator(const class TR_LoopReplicator &),1,TR,LoopReplicator
TR_LoopReplicator,TR_LoopReplicator(class TR_LoopReplicator &&),0,TR,LoopReplicator
gatherRestOfLoop,gatherRestOfLoop(class TR_RegionStructure *,TR_Queue<TR::Block> *),1,TR,LoopReplicator
gatherRestOfLoop,gatherRestOfLoop(class TR_RegionStructure *,TR::Block *,TR_Queue<TR::Block> &),0,TR,LoopReplicator
TR_OSRDefAnalysis,TR_OSRDefAnalysis(class TR_OSRDefAnalysis &&),1,TR,OSRDefAnalysis
TR_OSRDefAnalysis,TR_OSRDefAnalysis(const class TR_OSRDefAnalysis &),0,TR,OSRDefAnalysis
TR_OSRDefAnalysis,TR_OSRDefAnalysis(TR::OptimizationManager *),0,TR,OSRDefAnalysis
create,create(TR::OptimizationManager *),1,TR,OSRDefAnalysis
operator=,operator=(class TR_OSRDefAnalysis &&),0,TR,OSRDefAnalysis
operator=,operator=(const class TR_OSRDefAnalysis &),0,TR,OSRDefAnalysis
requiresAnalysis,requiresAnalysis(),1,TR,OSRDefAnalysis
~TR_OSRDefAnalysis,~TR_OSRDefAnalysis(),1,TR,OSRDefAnalysis
TR_OSRDefInfo,TR_OSRDefInfo(TR::OptimizationManager *),1,TR,OSRDefInfo
addSharingInfo,addSharingInfo(class TR_UseDefInfo::AuxiliaryData &),1,TR,OSRDefInfo
buildOSRDefs,buildOSRDefs(TR::Node *,void *,class TR_OSRPoint *,class TR_OSRPoint *,TR::Node *,class TR_UseDefInfo::AuxiliaryData &),1,TR,OSRDefInfo
buildOSRDefs,buildOSRDefs(void *,class TR_UseDefInfo::AuxiliaryData &),0,TR,OSRDefInfo
operator=,operator=(const class TR_OSRDefInfo &),0,TR,OSRDefInfo
operator=,operator=(class TR_OSRDefInfo &&),0,TR,OSRDefInfo
performFurtherAnalysis,performFurtherAnalysis(class TR_UseDefInfo::AuxiliaryData &),1,TR,OSRDefInfo
~TR_OSRDefInfo,~TR_OSRDefInfo(),1,TR,OSRDefInfo
TR_OSRExceptionEdgeRemoval,TR_OSRExceptionEdgeRemoval(TR::OptimizationManager *),1,TR,OSRExceptionEdgeRemoval
TR_OSRExceptionEdgeRemoval,TR_OSRExceptionEdgeRemoval(const class TR_OSRExceptionEdgeRemoval &),0,TR,OSRExceptionEdgeRemoval
TR_OSRExceptionEdgeRemoval,TR_OSRExceptionEdgeRemoval(class TR_OSRExceptionEdgeRemoval &&),0,TR,OSRExceptionEdgeRemoval
create,create(TR::OptimizationManager *),1,TR,OSRExceptionEdgeRemoval
operator=,operator=(class TR_OSRExceptionEdgeRemoval &&),0,TR,OSRExceptionEdgeRemoval
operator=,operator=(const class TR_OSRExceptionEdgeRemoval &),0,TR,OSRExceptionEdgeRemoval
~TR_OSRExceptionEdgeRemoval,~TR_OSRExceptionEdgeRemoval(),1,TR,OSRExceptionEdgeRemoval
TR_OSRLiveRangeAnalysis,TR_OSRLiveRangeAnalysis(class TR_OSRLiveRangeAnalysis &&),1,TR,OSRLiveRangeAnalysis
TR_OSRLiveRangeAnalysis,TR_OSRLiveRangeAnalysis(const class TR_OSRLiveRangeAnalysis &),0,TR,OSRLiveRangeAnalysis
TR_OSRLiveRangeAnalysis,TR_OSRLiveRangeAnalysis(TR::OptimizationManager *),0,TR,OSRLiveRangeAnalysis
buildOSRLiveRangeInfo,buildOSRLiveRangeInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *,int32_t *,int32_t,int32_t,class TR_OSRMethodData *),1,TR,OSRLiveRangeAnalysis
buildOSRSlotSharingInfo,buildOSRSlotSharingInfo(TR::Node *,class TR_BitVector *,class TR_OSRPoint *,int32_t *,class TR_BitVector *),1,TR,OSRLiveRangeAnalysis
canAffordAnalysis,canAffordAnalysis(),1,TR,OSRLiveRangeAnalysis
collectPendingPush,collectPendingPush(TR_ByteCodeInfo,TR::TreeTop *,class TR_BitVector *),1,TR,OSRLiveRangeAnalysis
create,create(TR::OptimizationManager *),1,TR,OSRLiveRangeAnalysis
maintainLiveness,maintainLiveness(TR::Node *,TR::Node *,int32_t,vcount_t,class TR_Liveness *,class TR_BitVector *,TR::Block *),1,TR,OSRLiveRangeAnalysis
operator=,operator=(class TR_OSRLiveRangeAnalysis &&),0,TR,OSRLiveRangeAnalysis
operator=,operator=(const class TR_OSRLiveRangeAnalysis &),0,TR,OSRLiveRangeAnalysis
~TR_OSRLiveRangeAnalysis,~TR_OSRLiveRangeAnalysis(),1,TR,OSRLiveRangeAnalysis
TR_PartialRedundancy,TR_PartialRedundancy(class TR_PartialRedundancy &&),1,TR,PartialRedundancy
TR_PartialRedundancy,TR_PartialRedundancy(TR::OptimizationManager *),0,TR,PartialRedundancy
TR_PartialRedundancy,TR_PartialRedundancy(const class TR_PartialRedundancy &),0,TR,PartialRedundancy
allocateContainer,allocateContainer(int32_t),1,TR,PartialRedundancy
calculateGlobalRegisterWeightsBasedOnStructure,calculateGlobalRegisterWeightsBasedOnStructure(class TR_Structure *,int32_t *),1,TR,PartialRedundancy
collectAllNodesToBeAnchored,collectAllNodesToBeAnchored(List<TR::Node> *,TR::Node *,vcount_t),1,TR,PartialRedundancy
create,create(TR::OptimizationManager *),1,TR,PartialRedundancy
duplicateExact,duplicateExact(TR::Node *,List<TR::Node> *,List<TR::Node> *,vcount_t),1,TR,PartialRedundancy
eliminateRedundantComputations,eliminateRedundantComputations(TR::Block *,TR::Node **,ContainerType **,TR::TreeTop *),1,TR,PartialRedundancy
eliminateRedundantSupportedNodes,eliminateRedundantSupportedNodes(TR::Node *,TR::Node *,_Bool,TR::TreeTop *,int32_t,vcount_t,ContainerType *,ContainerType *,TR::Node **),1,TR,PartialRedundancy
getAlreadyPresentOptimalNode,getAlreadyPresentOptimalNode(TR::Node *,int32_t,vcount_t,_Bool &),1,TR,PartialRedundancy
getGlobalRegisterWeights,getGlobalRegisterWeights(),1,TR,PartialRedundancy
getNumNodes,getNumNodes(),1,TR,PartialRedundancy
getNumberOfBits,getNumberOfBits(),1,TR,PartialRedundancy
getOptSetInfo,getOptSetInfo(),1,TR,PartialRedundancy
getOrigOptSetInfo,getOrigOptSetInfo(),1,TR,PartialRedundancy
getRednSetInfo,getRednSetInfo(),1,TR,PartialRedundancy
getSymOptimalNodes,getSymOptimalNodes(),1,TR,PartialRedundancy
getUnavailableSetInfo,getUnavailableSetInfo(),1,TR,PartialRedundancy
ignoreNode,ignoreNode(TR::Node *),1,TR,PartialRedundancy
invalidateOptimalComputation,invalidateOptimalComputation(int32_t),1,TR,PartialRedundancy
isNodeAnImplicitNoOp,isNodeAnImplicitNoOp(TR::Node *),1,TR,PartialRedundancy
isNotPrevTreeStoreIntoFloatTemp,isNotPrevTreeStoreIntoFloatTemp(TR::Symbol *),1,TR,PartialRedundancy
isOpCodeAnImplicitNoOp,isOpCodeAnImplicitNoOp(TR::ILOpCode &),1,TR,PartialRedundancy
isSupportedOpCode,isSupportedOpCode(TR::Node *,TR::Node *),1,TR,PartialRedundancy
operator=,operator=(class TR_PartialRedundancy &&),0,TR,PartialRedundancy
operator=,operator=(const class TR_PartialRedundancy &),0,TR,PartialRedundancy
placeComputationsOptimally,placeComputationsOptimally(TR::Block *,TR::Node ***),1,TR,PartialRedundancy
placeInGlobalRegisters,placeInGlobalRegisters(TR::Block *),1,TR,PartialRedundancy
printTrees,printTrees(),1,TR,PartialRedundancy
processReusedNode,processReusedNode(TR::Node *,TR::ILOpCodes,TR::SymbolReference *,int),1,TR,PartialRedundancy
replaceOptimalSubNodes,replaceOptimalSubNodes(TR::TreeTop *,TR::Node *,TR::Node *,int32_t,TR::Node *,TR::Node *,_Bool,int32_t,vcount_t),1,TR,PartialRedundancy
~TR_PartialRedundancy,~TR_PartialRedundancy(),1,TR,PartialRedundancy
TR_PeepHoleBasicBlocks,TR_PeepHoleBasicBlocks(class TR_PeepHoleBasicBlocks &&),1,TR,PeepHoleBasicBlocks
TR_PeepHoleBasicBlocks,TR_PeepHoleBasicBlocks(const class TR_PeepHoleBasicBlocks &),0,TR,PeepHoleBasicBlocks
TR_PrefetchInsertion,TR_PrefetchInsertion(class TR_PrefetchInsertion &&),1,TR,PrefetchInsertion
TR_PrefetchInsertion,TR_PrefetchInsertion(const class TR_PrefetchInsertion &),0,TR,PrefetchInsertion
TR_PrefetchInsertion,TR_PrefetchInsertion(TR::OptimizationManager *),0,TR,PrefetchInsertion
collectLoops,collectLoops(class TR_Structure *),1,TR,PrefetchInsertion
create,create(TR::OptimizationManager *),1,TR,PrefetchInsertion
createDeltaNode,createDeltaNode(TR::Node *,TR::Node *,int32_t),1,TR,PrefetchInsertion
examineLoop,examineLoop(class TR_RegionStructure *),1,TR,PrefetchInsertion
examineNode,examineNode(TR::TreeTop *,TR::Block *,TR::Node *,intptrj_t,class TR_RegionStructure *),1,TR,PrefetchInsertion
getClosestPIV,getClosestPIV(TR::Block *),1,TR,PrefetchInsertion
insertPrefetchInstructions,insertPrefetchInstructions(),1,TR,PrefetchInsertion
isBIV,isBIV(TR::SymbolReference *,TR::Block *,class TR_BasicInductionVariable *&),1,TR,PrefetchInsertion
operator=,operator=(class TR_PrefetchInsertion &&),0,TR,PrefetchInsertion
operator=,operator=(const class TR_PrefetchInsertion &),0,TR,PrefetchInsertion
~TR_PrefetchInsertion,~TR_PrefetchInsertion(),1,TR,PrefetchInsertion
TR_RedundantAsyncCheckRemoval,TR_RedundantAsyncCheckRemoval(class TR_RedundantAsyncCheckRemoval &&),1,TR,RedundantAsyncCheckRemoval
TR_RedundantAsyncCheckRemoval,TR_RedundantAsyncCheckRemoval(const class TR_RedundantAsyncCheckRemoval &),0,TR,RedundantAsyncCheckRemoval
TR_RedundantAsyncCheckRemoval,TR_RedundantAsyncCheckRemoval(TR::OptimizationManager *),0,TR,RedundantAsyncCheckRemoval
callDoesAnImplicitAsyncCheck,callDoesAnImplicitAsyncCheck(TR::Node *),1,TR,RedundantAsyncCheckRemoval
computeCoverageInfo,computeCoverageInfo(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *),1,TR,RedundantAsyncCheckRemoval
containsImplicitInternalPointer,containsImplicitInternalPointer(TR::Node *),1,TR,RedundantAsyncCheckRemoval
create,create(TR::OptimizationManager *),1,TR,RedundantAsyncCheckRemoval
enqueueSinks,enqueueSinks(class TR_RegionStructure *,TR_Queue<class TR_StructureSubGraphNode> *,_Bool),1,TR,RedundantAsyncCheckRemoval
estimateLoopIterations,estimateLoopIterations(class TR_RegionStructure *),1,TR,RedundantAsyncCheckRemoval
findShallowestCommonCaller,findShallowestCommonCaller(int32_t,int32_t),1,TR,RedundantAsyncCheckRemoval
findSmallestAncestor,findSmallestAncestor(),1,TR,RedundantAsyncCheckRemoval
getNearestAncestors,getNearestAncestors(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *),1,TR,RedundantAsyncCheckRemoval
hasEarlyExit,hasEarlyExit(class TR_RegionStructure *),1,TR,RedundantAsyncCheckRemoval
initialize,initialize(class TR_Structure *),1,TR,RedundantAsyncCheckRemoval
insertAsyncCheckOnSubTree,insertAsyncCheckOnSubTree(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *),1,TR,RedundantAsyncCheckRemoval
isMaxLoopIterationGuardedLoop,isMaxLoopIterationGuardedLoop(class TR_RegionStructure *),1,TR,RedundantAsyncCheckRemoval
markAncestors,markAncestors(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *),1,TR,RedundantAsyncCheckRemoval
markExtendees,markExtendees(TR::Block *,_Bool),1,TR,RedundantAsyncCheckRemoval
operator=,operator=(class TR_RedundantAsyncCheckRemoval &&),0,TR,RedundantAsyncCheckRemoval
operator=,operator=(const class TR_RedundantAsyncCheckRemoval &),0,TR,RedundantAsyncCheckRemoval
originatesFromShortRunningMethod,originatesFromShortRunningMethod(class TR_RegionStructure *),1,TR,RedundantAsyncCheckRemoval
perform,perform(class TR_Structure *,_Bool),0,TR,RedundantAsyncCheckRemoval
performRegionalBackwardAnalysis,performRegionalBackwardAnalysis(class TR_RegionStructure *,_Bool),1,TR,RedundantAsyncCheckRemoval
processAcyclicRegion,processAcyclicRegion(class TR_RegionStructure *),1,TR,RedundantAsyncCheckRemoval
processBlockStructure,processBlockStructure(class TR_BlockStructure *),1,TR,RedundantAsyncCheckRemoval
processImproperRegion,processImproperRegion(class TR_RegionStructure *),1,TR,RedundantAsyncCheckRemoval
processNaturalLoop,processNaturalLoop(class TR_RegionStructure *,_Bool),1,TR,RedundantAsyncCheckRemoval
propagateBackwards,propagateBackwards(class TR_StructureSubGraphNode *,class TR_StructureSubGraphNode *),1,TR,RedundantAsyncCheckRemoval
solidifySoftAsyncChecks,solidifySoftAsyncChecks(class TR_StructureSubGraphNode *),1,TR,RedundantAsyncCheckRemoval
~TR_RedundantAsyncCheckRemoval,~TR_RedundantAsyncCheckRemoval(),1,TR,RedundantAsyncCheckRemoval
TR_RedundantExpressionAdjustment,TR_RedundantExpressionAdjustment(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_ExceptionCheckMotion *),1,TR,RedundantExpressionAdjustment
analyzeNode,analyzeNode(TR::Node *,vcount_t,class TR_BlockStructure *,ContainerType *),0,TR,RedundantExpressionAdjustment
operator=,operator=(class TR_RedundantExpressionAdjustment &&),0,TR,RedundantExpressionAdjustment
operator=,operator=(const class TR_RedundantExpressionAdjustment &),0,TR,RedundantExpressionAdjustment
~TR_RedundantExpressionAdjustment,~TR_RedundantExpressionAdjustment(),1,TR,RedundantExpressionAdjustment
TR_ShrinkWrap,TR_ShrinkWrap(class TR_ShrinkWrap &&),1,TR,ShrinkWrap
TR_ShrinkWrap,TR_ShrinkWrap(const class TR_ShrinkWrap &),0,TR,ShrinkWrap
TR_ShrinkWrap,TR_ShrinkWrap(TR::OptimizationManager *),0,TR,ShrinkWrap
analyzeInstructions,analyzeInstructions(),1,TR,ShrinkWrap
blockEndsInReturn,blockEndsInReturn(int32_t,_Bool &),1,TR,ShrinkWrap
composeSavesRestores,composeSavesRestores(),1,TR,ShrinkWrap
computeSaveRestoreSets,computeSaveRestoreSets(class TR_RegisterAnticipatability &,class TR_RegisterAvailability &),1,TR,ShrinkWrap
create,create(TR::OptimizationManager *),1,TR,ShrinkWrap
doPlacement,doPlacement(class TR_RegisterAnticipatability &,class TR_RegisterAvailability &),1,TR,ShrinkWrap
findEdgeInfo,findEdgeInfo(TR::CFGEdge *),1,TR,ShrinkWrap
findJumpInstructionsInBlock,findJumpInstructionsInBlock(int32_t,TR::list<TR::Instruction *> *),1,TR,ShrinkWrap
findJumpInstructionsInCodeRegion,findJumpInstructionsInCodeRegion(TR::Instruction *,TR::Instruction *,CS2::HashTable<TR::Instruction *, _Bool, TR::Allocator> &),1,TR,ShrinkWrap
findMultiples,findMultiples(class TR_BitVector *,TR::Instruction *,_Bool,_Bool),1,TR,ShrinkWrap
findPreservedRegisterInfo,findPreservedRegisterInfo(int32_t),1,TR,ShrinkWrap
findReturnBlockInfo,findReturnBlockInfo(int32_t),1,TR,ShrinkWrap
findReturnInBlock,findReturnInBlock(int32_t),1,TR,ShrinkWrap
markInstrsInBlock,markInstrsInBlock(int32_t),1,TR,ShrinkWrap
operator=,operator=(class TR_ShrinkWrap &&),0,TR,ShrinkWrap
operator=,operator=(const class TR_ShrinkWrap &),0,TR,ShrinkWrap
processInstructionsInSnippet,processInstructionsInSnippet(TR::Instruction *,int32_t),1,TR,ShrinkWrap
updateMapWithRSD,updateMapWithRSD(TR::Instruction *,int32_t),1,TR,ShrinkWrap
~TR_ShrinkWrap,~TR_ShrinkWrap(),1,TR,ShrinkWrap
TR_StripMiner,TR_StripMiner(const class TR_StripMiner &),1,TR,StripMiner
TR_StripMiner,TR_StripMiner(TR::OptimizationManager *),0,TR,StripMiner
TR_StripMiner,TR_StripMiner(class TR_StripMiner &&),0,TR,StripMiner
checkIfIncrementalIncreasesOfPIV,checkIfIncrementalIncreasesOfPIV(struct TR_StripMiner::LoopInfo *),1,TR,StripMiner
collectLoops,collectLoops(class TR_Structure *),1,TR,StripMiner
create,create(TR::OptimizationManager *),1,TR,StripMiner
createGotoBlock,createGotoBlock(TR::Block *,TR::Block *),1,TR,StripMiner
createLoopTest,createLoopTest(struct TR_StripMiner::LoopInfo *,TR_ClonedLoopType),1,TR,StripMiner
createStartOffsetLoop,createStartOffsetLoop(struct TR_StripMiner::LoopInfo *,TR::Block *),1,TR,StripMiner
duplicateLoop,duplicateLoop(struct TR_StripMiner::LoopInfo *,TR_ClonedLoopType),1,TR,StripMiner
examineLoop,examineLoop(struct TR_StripMiner::LoopInfo *,TR_ClonedLoopType,_Bool),1,TR,StripMiner
examineNode,examineNode(struct TR_StripMiner::LoopInfo *,TR::Node *,TR::Node *,TR::SymbolReference *,vcount_t,TR_ClonedLoopType,_Bool,int32_t),1,TR,StripMiner
findLeavesInList,findLeavesInList(),1,TR,StripMiner
findPivInSimpleForm,findPivInSimpleForm(TR::Node *,TR::SymbolReference *),1,TR,StripMiner
getLoopPreHeader,getLoopPreHeader(class TR_Structure *),1,TR,StripMiner
getLoopTest,getLoopTest(class TR_Structure *,TR::Block *),1,TR,StripMiner
operator=,operator=(class TR_StripMiner &&),0,TR,StripMiner
operator=,operator=(const class TR_StripMiner &),0,TR,StripMiner
redirect,redirect(TR::Block *,TR::Block *,TR::Block *),1,TR,StripMiner
replaceLoopPivs,replaceLoopPivs(struct TR_StripMiner::LoopInfo *,TR::ILOpCodes,TR::Node *,TR::SymbolReference *,TR_ClonedLoopType),1,TR,StripMiner
stripMineLoop,stripMineLoop(struct TR_StripMiner::LoopInfo *,TR::Block *),1,TR,StripMiner
transformLoop,transformLoop(struct TR_StripMiner::LoopInfo *),1,TR,StripMiner
transformLoops,transformLoops(),1,TR,StripMiner
~TR_StripMiner,~TR_StripMiner(),1,TR,StripMiner
TR_TrivialInliner,TR_TrivialInliner(TR::OptimizationManager *),1,TR,TrivialInliner
TR_TrivialInliner,TR_TrivialInliner(class TR_TrivialInliner &&),0,TR,TrivialInliner
TR_TrivialSinkStores,TR_TrivialSinkStores(class TR_TrivialSinkStores &&),1,TR,TrivialSinkStores
TR_TrivialSinkStores,TR_TrivialSinkStores(const class TR_TrivialSinkStores &),0,TR,TrivialSinkStores
TR_TrivialSinkStores,TR_TrivialSinkStores(TR::OptimizationManager *),0,TR,TrivialSinkStores
create,create(TR::OptimizationManager *),1,TR,TrivialSinkStores
duplicateNodeForSideExit,duplicateNodeForSideExit(TR::Node *),1,TR,TrivialSinkStores
duplicateTreeForSideExit,duplicateTreeForSideExit(TR::TreeTop *),1,TR,TrivialSinkStores
genSideExitTree,genSideExitTree(TR::TreeTop *,TR::Block *,_Bool),1,TR,TrivialSinkStores
operator=,operator=(const class TR_TrivialSinkStores &),0,TR,TrivialSinkStores
operator=,operator=(class TR_TrivialSinkStores &&),0,TR,TrivialSinkStores
passesAnchoringTest,passesAnchoringTest(class TR_MovableStore *,_Bool,_Bool),1,TR,TrivialSinkStores
storeCanMoveThroughBlock,storeCanMoveThroughBlock(class TR_BitVector *,class TR_BitVector *,int32_t),0,TR,TrivialSinkStores
~TR_TrivialSinkStores,~TR_TrivialSinkStores(),1,TR,TrivialSinkStores
TR_VirtualGuardHeadMerger,TR_VirtualGuardHeadMerger(class TR_VirtualGuardHeadMerger &&),1,TR,VirtualGuardHeadMerger
TR_VirtualGuardHeadMerger,TR_VirtualGuardHeadMerger(const class TR_VirtualGuardHeadMerger &),0,TR,VirtualGuardHeadMerger
TR_VirtualGuardHeadMerger,TR_VirtualGuardHeadMerger(TR::OptimizationManager *),0,TR,VirtualGuardHeadMerger
create,create(TR::OptimizationManager *),1,TR,VirtualGuardHeadMerger
operator=,operator=(class TR_VirtualGuardHeadMerger &&),0,TR,VirtualGuardHeadMerger
operator=,operator=(const class TR_VirtualGuardHeadMerger &),0,TR,VirtualGuardHeadMerger
tailSplitBlock,tailSplitBlock(TR::Block *,TR::Block *),1,TR,VirtualGuardHeadMerger
~TR_VirtualGuardHeadMerger,~TR_VirtualGuardHeadMerger(),1,TR,VirtualGuardHeadMerger
TR_VirtualGuardTailSplitter,TR_VirtualGuardTailSplitter(class TR_VirtualGuardTailSplitter &&),1,TR,VirtualGuardTailSplitter
TR_VirtualGuardTailSplitter,TR_VirtualGuardTailSplitter(const class TR_VirtualGuardTailSplitter &),0,TR,VirtualGuardTailSplitter
TR_VirtualGuardTailSplitter,TR_VirtualGuardTailSplitter(TR::OptimizationManager *),0,TR,VirtualGuardTailSplitter
canonicalizeTree,canonicalizeTree(TR::Node *,List<struct TR_SymNodePair> &,vcount_t),1,TR,VirtualGuardTailSplitter
create,create(TR::OptimizationManager *),1,TR,VirtualGuardTailSplitter
eliminateColdVirtualGuards,eliminateColdVirtualGuards(TR::TreeTop *),1,TR,VirtualGuardTailSplitter
getFirstCallNode,getFirstCallNode(TR::Block *),1,TR,VirtualGuardTailSplitter
getGuard,getGuard(TR::Node *),1,TR,VirtualGuardTailSplitter
getGuard,getGuard(uint32_t),0,TR,VirtualGuardTailSplitter
getGuard,getGuard(TR::Block *),0,TR,VirtualGuardTailSplitter
getVirtualGuardInfo,getVirtualGuardInfo(TR::Block *),1,TR,VirtualGuardTailSplitter
initializeDataStructures,initializeDataStructures(),1,TR,VirtualGuardTailSplitter
isBlockInInlinedCallTreeOf,isBlockInInlinedCallTreeOf(class TR_VirtualGuardTailSplitter::VGInfo *,TR::Block *),1,TR,VirtualGuardTailSplitter
isKill,isKill(TR::Node *),1,TR,VirtualGuardTailSplitter
isKill,isKill(TR::Block *),0,TR,VirtualGuardTailSplitter
isLegalToClone,isLegalToClone(TR::Node *,vcount_t),1,TR,VirtualGuardTailSplitter
lookAheadAndSplit,lookAheadAndSplit(class TR_VirtualGuardTailSplitter::VGInfo *,List<TR::Block> *),1,TR,VirtualGuardTailSplitter
operator=,operator=(class TR_VirtualGuardTailSplitter &&),0,TR,VirtualGuardTailSplitter
operator=,operator=(const class TR_VirtualGuardTailSplitter &),0,TR,VirtualGuardTailSplitter
putGuard,putGuard(uint32_t,class TR_VirtualGuardTailSplitter::VGInfo *),1,TR,VirtualGuardTailSplitter
recognizeVirtualGuard,recognizeVirtualGuard(TR::Block *,class TR_VirtualGuardTailSplitter::VGInfo *),1,TR,VirtualGuardTailSplitter
rematerializeThis,rematerializeThis(),1,TR,VirtualGuardTailSplitter
remergeGuard,remergeGuard(class TR_BlockCloner &,class TR_VirtualGuardTailSplitter::VGInfo *),1,TR,VirtualGuardTailSplitter
splitGlobal,splitGlobal(),1,TR,VirtualGuardTailSplitter
splitLinear,splitLinear(TR::Block *,TR::Block *),1,TR,VirtualGuardTailSplitter
transformLinear,transformLinear(TR::Block *,TR::Block *),1,TR,VirtualGuardTailSplitter
~TR_VirtualGuardTailSplitter,~TR_VirtualGuardTailSplitter(),1,TR,VirtualGuardTailSplitter
TR_BlockShuffling,TR_BlockShuffling(const class TR_BlockShuffling &),1,TR,BlockShuffling
TR_BlockShuffling,TR_BlockShuffling(class TR_BlockShuffling &&),0,TR,BlockShuffling
operator=,operator=(const class TR_HasRandomGenerator &),1,TR,HasRandomGenerator
operator=,operator=(class TR_HasRandomGenerator &&),0,TR,HasRandomGenerator
operator=,operator=(const class TR::VPConstraint &),1,TR,VPConstraint
operator=,operator=(class TR::VPConstraint &&),0,TR,VPConstraint
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,TR,VPConstraint
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,TR::Block *),1,TR,BasicDFSetAnalysis
operator=,operator=(const class TR_DataFlowAnalysis &),1,TR,DataFlowAnalysis
operator=,operator=(class TR_DataFlowAnalysis &&),0,TR,DataFlowAnalysis
TR_OSRDefInfo,TR_OSRDefInfo(class TR_OSRDefInfo &&),1,TR,OSRDefInfo
TR_OSRDefInfo,TR_OSRDefInfo(TR::OptimizationManager *),0,TR,OSRDefInfo
TR_OSRDefInfo,TR_OSRDefInfo(const class TR_OSRDefInfo &),0,TR,OSRDefInfo
TR_UseDefInfo,TR_UseDefInfo(const class TR_UseDefInfo &),1,TR,UseDefInfo
buildOSRDefs,buildOSRDefs(void *,class TR_UseDefInfo::AuxiliaryData &),1,TR,OSRDefInfo
buildOSRDefs,buildOSRDefs(TR::Node *,void *,class TR_OSRPoint *,class TR_OSRPoint *,TR::Node *,class TR_UseDefInfo::AuxiliaryData &),0,TR,OSRDefInfo
TR_OSRExceptionEdgeRemoval,TR_OSRExceptionEdgeRemoval(const class TR_OSRExceptionEdgeRemoval &),1,TR,OSRExceptionEdgeRemoval
TR_OSRExceptionEdgeRemoval,TR_OSRExceptionEdgeRemoval(TR::OptimizationManager *),0,TR,OSRExceptionEdgeRemoval
TR_OSRLiveRangeAnalysis,TR_OSRLiveRangeAnalysis(const class TR_OSRLiveRangeAnalysis &),1,TR,OSRLiveRangeAnalysis
TR_OSRLiveRangeAnalysis,TR_OSRLiveRangeAnalysis(class TR_OSRLiveRangeAnalysis &&),0,TR,OSRLiveRangeAnalysis
TR_ExceptionCheckMotion,TR_ExceptionCheckMotion(class TR_ExceptionCheckMotion &&),1,TR,ExceptionCheckMotion
TR_ExceptionCheckMotion,TR_ExceptionCheckMotion(TR::Compilation *,TR::Optimizer *,class TR_PartialRedundancy *),0,TR,ExceptionCheckMotion
TR_ExceptionCheckMotion,TR_ExceptionCheckMotion(const class TR_ExceptionCheckMotion &),0,TR,ExceptionCheckMotion
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,TR::Block *),1,TR,ExceptionCheckMotion
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_ExceptionCheckMotion::ExprDominanceInfo *,class TR_Structure *),0,TR,ExceptionCheckMotion
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,Dominators
TR_RedundantExpressionAdjustment,TR_RedundantExpressionAdjustment(const class TR_RedundantExpressionAdjustment &),1,TR,RedundantExpressionAdjustment
TR_RedundantExpressionAdjustment,TR_RedundantExpressionAdjustment(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_ExceptionCheckMotion *),0,TR,RedundantExpressionAdjustment
TR_RedundantExpressionAdjustment,TR_RedundantExpressionAdjustment(class TR_RedundantExpressionAdjustment &&),0,TR,RedundantExpressionAdjustment
TR_ReachingBlocks,TR_ReachingBlocks(class TR_ReachingBlocks &&),1,TR,ReachingBlocks
TR_ReachingBlocks,TR_ReachingBlocks(const class TR_ReachingBlocks &),0,TR,ReachingBlocks
TR_ReachingBlocks,TR_ReachingBlocks(TR::Compilation *,TR::Optimizer *,_Bool),0,TR,ReachingBlocks
TR_BackwardReachability,TR_BackwardReachability(class TR_BackwardReachability &&),1,TR,BackwardReachability
TR_BackwardReachability,TR_BackwardReachability(TR::Compilation *),0,TR,BackwardReachability
TR_BackwardReachability,TR_BackwardReachability(const class TR_BackwardReachability &),0,TR,BackwardReachability
TR_CanReachGivenBlocks,TR_CanReachGivenBlocks(TR::Compilation *,class TR_BitVector *),1,TR,CanReachGivenBlocks
TR_ReachabilityAnalysis,TR_ReachabilityAnalysis(const class TR_ReachabilityAnalysis &),1,TR,ReachabilityAnalysis
TR_ReachabilityAnalysis,TR_ReachabilityAnalysis(TR::Compilation *),0,TR,ReachabilityAnalysis
TR_ReachabilityAnalysis,TR_ReachabilityAnalysis(class TR_ReachabilityAnalysis &&),0,TR,ReachabilityAnalysis
comp,comp(),1,TR,ReachabilityAnalysis
getBlock,getBlock(blocknum_t),1,TR,ReachabilityAnalysis
isOrigin,isOrigin(TR::Block *),1,TR,ReachabilityAnalysis
operator=,operator=(class TR_ReachabilityAnalysis &&),1,TR,ReachabilityAnalysis
operator=,operator=(const class TR_ReachabilityAnalysis &),0,TR,ReachabilityAnalysis
operator=,operator=(class TR_BackwardReachability &&),0,TR,BackwardReachability
operator=,operator=(const class TR_BackwardReachability &),0,TR,BackwardReachability
operator=,operator=(const class TR_CanReachGivenBlocks &),0,TR,CanReachGivenBlocks
operator=,operator=(class TR_CanReachGivenBlocks &&),0,TR,CanReachGivenBlocks
perform,perform(class TR_BitVector *),1,TR,ReachabilityAnalysis
propagateInputs,propagateInputs(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *),1,TR,ReachabilityAnalysis
propagateOneInput,propagateOneInput(blocknum_t,blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *),1,TR,ReachabilityAnalysis
traverse,traverse(blocknum_t,int32_t,blocknum_t *,blocknum_t *,class TR_BitVector *),1,TR,ReachabilityAnalysis
~TR_BackwardReachability,~TR_BackwardReachability(),1,TR,BackwardReachability
~TR_CanReachGivenBlocks,~TR_CanReachGivenBlocks(),1,TR,CanReachGivenBlocks
~TR_ReachabilityAnalysis,~TR_ReachabilityAnalysis(),1,TR,ReachabilityAnalysis
TR_CanBeReachedFromCatchBlock,TR_CanBeReachedFromCatchBlock(TR::Compilation *),1,TR,CanBeReachedFromCatchBlock
TR_ForwardReachability,TR_ForwardReachability(class TR_ForwardReachability &&),1,TR,ForwardReachability
TR_ForwardReachability,TR_ForwardReachability(const class TR_ForwardReachability &),0,TR,ForwardReachability
TR_ForwardReachability,TR_ForwardReachability(TR::Compilation *),0,TR,ForwardReachability
operator=,operator=(const class TR_ForwardReachability &),0,TR,ForwardReachability
operator=,operator=(class TR_ForwardReachability &&),0,TR,ForwardReachability
operator=,operator=(const class TR_CanBeReachedFromCatchBlock &),0,TR,CanBeReachedFromCatchBlock
operator=,operator=(class TR_CanBeReachedFromCatchBlock &&),0,TR,CanBeReachedFromCatchBlock
~TR_CanBeReachedFromCatchBlock,~TR_CanBeReachedFromCatchBlock(),1,TR,CanBeReachedFromCatchBlock
~TR_ForwardReachability,~TR_ForwardReachability(),1,TR,ForwardReachability
TR_CanBeReachedWithoutExceptionEdges,TR_CanBeReachedWithoutExceptionEdges(TR::Compilation *),1,TR,CanBeReachedWithoutExceptionEdges
TR_ForwardReachabilityWithoutExceptionEdges,TR_ForwardReachabilityWithoutExceptionEdges(const class TR_ForwardReachabilityWithoutExceptionEdges &),1,TR,ForwardReachabilityWithoutExceptionEdges
TR_ForwardReachabilityWithoutExceptionEdges,TR_ForwardReachabilityWithoutExceptionEdges(TR::Compilation *),0,TR,ForwardReachabilityWithoutExceptionEdges
TR_ForwardReachabilityWithoutExceptionEdges,TR_ForwardReachabilityWithoutExceptionEdges(class TR_ForwardReachabilityWithoutExceptionEdges &&),0,TR,ForwardReachabilityWithoutExceptionEdges
operator=,operator=(const class TR_ForwardReachabilityWithoutExceptionEdges &),0,TR,ForwardReachabilityWithoutExceptionEdges
operator=,operator=(class TR_ForwardReachabilityWithoutExceptionEdges &&),0,TR,ForwardReachabilityWithoutExceptionEdges
operator=,operator=(const class TR_CanBeReachedWithoutExceptionEdges &),0,TR,CanBeReachedWithoutExceptionEdges
operator=,operator=(class TR_CanBeReachedWithoutExceptionEdges &&),0,TR,CanBeReachedWithoutExceptionEdges
~TR_CanBeReachedWithoutExceptionEdges,~TR_CanBeReachedWithoutExceptionEdges(),1,TR,CanBeReachedWithoutExceptionEdges
~TR_ForwardReachabilityWithoutExceptionEdges,~TR_ForwardReachabilityWithoutExceptionEdges(),1,TR,ForwardReachabilityWithoutExceptionEdges
TR_CanReachNonColdBlocks,TR_CanReachNonColdBlocks(TR::Compilation *),1,TR,CanReachNonColdBlocks
operator=,operator=(const class TR_CanReachNonColdBlocks &),0,TR,CanReachNonColdBlocks
operator=,operator=(class TR_CanReachNonColdBlocks &&),0,TR,CanReachNonColdBlocks
~TR_CanReachNonColdBlocks,~TR_CanReachNonColdBlocks(),1,TR,CanReachNonColdBlocks
TR_ReachingDefinitions,TR_ReachingDefinitions(class TR_ReachingDefinitions &&),1,TR,ReachingDefinitions
TR_ReachingDefinitions,TR_ReachingDefinitions(const class TR_ReachingDefinitions &),0,TR,ReachingDefinitions
TR_ReachingDefinitions,TR_ReachingDefinitions(TR::Compilation *,TR::CFG *,TR::Optimizer *,class TR_UseDefInfo *,class TR_UseDefInfo::AuxiliaryData &,_Bool),0,TR,ReachingDefinitions
TR_AsyncCheckInsertion,TR_AsyncCheckInsertion(const class TR_AsyncCheckInsertion &),1,TR,AsyncCheckInsertion
TR_AsyncCheckInsertion,TR_AsyncCheckInsertion(class TR_AsyncCheckInsertion &&),0,TR,AsyncCheckInsertion
operator delete,operator delete(void *,TR::Region &),1,TR,VPConstraint
TR_RegisterAnticipatability,TR_RegisterAnticipatability(class TR_RegisterAnticipatability &&),1,TR,RegisterAnticipatability
TR_RegisterAnticipatability,TR_RegisterAnticipatability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool),0,TR,RegisterAnticipatability
TR_RegisterAnticipatability,TR_RegisterAnticipatability(const class TR_RegisterAnticipatability &),0,TR,RegisterAnticipatability
TR_RegisterAvailability,TR_RegisterAvailability(class TR_RegisterAvailability &&),1,TR,RegisterAvailability
TR_RegisterAvailability,TR_RegisterAvailability(const class TR_RegisterAvailability &),0,TR,RegisterAvailability
TR_RegisterAvailability,TR_RegisterAvailability(TR::Compilation *,TR::Optimizer *,class TR_Structure *,class TR_BitVector **,_Bool),0,TR,RegisterAvailability
DenseSet,DenseSet(const class TR::GlobalSet::DenseSet &),0,TR,GlobalSet::DenseSet
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,GlobalSet::DenseSet
operator delete,operator delete(void *,size_t),0,TR,GlobalSet::DenseSet
SparseSet,SparseSet(const class TR::GlobalSet::SparseSet &),1,TR,GlobalSet::SparseSet
TR_RegisterCandidate,TR_RegisterCandidate(const class TR_RegisterCandidate &),1,TR,RegisterCandidate
TR_RegisterCandidate,TR_RegisterCandidate(class TR_RegisterCandidate &&),0,TR,RegisterCandidate
TR_ShrinkWrap,TR_ShrinkWrap(const class TR_ShrinkWrap &),1,TR,ShrinkWrap
TR_ShrinkWrap,TR_ShrinkWrap(class TR_ShrinkWrap &&),0,TR,ShrinkWrap
TR_BackwardIntersectionBitVectorAnalysis,TR_BackwardIntersectionBitVectorAnalysis(const class TR_BackwardIntersectionBitVectorAnalysis &),1,TR,BackwardIntersectionBitVectorAnalysis
TR_BackwardIntersectionBitVectorAnalysis,TR_BackwardIntersectionBitVectorAnalysis(class TR_BackwardIntersectionBitVectorAnalysis &&),0,TR,BackwardIntersectionBitVectorAnalysis
TR_DataFlowAnalysis,TR_DataFlowAnalysis(class TR_DataFlowAnalysis &&),1,TR,DataFlowAnalysis
TR_DataFlowAnalysis,TR_DataFlowAnalysis(const class TR_DataFlowAnalysis &),0,TR,DataFlowAnalysis
initializeAnalysisInfo,initializeAnalysisInfo(struct TR_BasicDFSetAnalysis<type-parameter-0-0 *>::ExtraAnalysisInfo *,class TR_RegionStructure *),1,TR,BasicDFSetAnalysis
TR_RegisterAvailability,TR_RegisterAvailability(const class TR_RegisterAvailability &),1,TR,RegisterAvailability
TR_RegisterAvailability,TR_RegisterAvailability(class TR_RegisterAvailability &&),0,TR,RegisterAvailability
Simplifier,Simplifier(class TR::Simplifier &&),0,TR,Simplifier
Simplifier,Simplifier(const class TR::Simplifier &),0,TR,Simplifier
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,Link
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Snippet
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,Snippet
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,TransformUtil
TR_RangeTranslateTable,TR_RangeTranslateTable(class TR_RangeTranslateTable &&),1,TR,RangeTranslateTable
TR_RangeTranslateTable,TR_RangeTranslateTable(const class TR_RangeTranslateTable &),0,TR,RangeTranslateTable
TR_TranslateTable,TR_TranslateTable(TR::Compilation *),1,TR,TranslateTable
TR_TranslateTable,TR_TranslateTable(class TR_TranslateTable &&),0,TR,TranslateTable
matchTable,matchTable(uint8_t,uint8_t,void *),1,TR,TranslateTable
matchTable,matchTable(uint32_t,uint32_t,uint32_t,uint32_t,uint8_t,uint8_t,uint16_t),0,TR,TranslateTable
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,TranslateTable
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,TranslateTable
TR_SetTranslateTable,TR_SetTranslateTable(class TR_SetTranslateTable &&),1,TR,SetTranslateTable
TR_SetTranslateTable,TR_SetTranslateTable(TR::Compilation *,uint8_t,uint8_t,uint16_t []),0,TR,SetTranslateTable
TR_SetTranslateTable,TR_SetTranslateTable(const class TR_SetTranslateTable &),0,TR,SetTranslateTable
TR_UnionDFSetAnalysis,TR_UnionDFSetAnalysis(const class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &),1,TR,UnionDFSetAnalysis
TR_UnionDFSetAnalysis,TR_UnionDFSetAnalysis(class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &&),0,TR,UnionDFSetAnalysis
TR_UnionDFSetAnalysis,TR_UnionDFSetAnalysis(TR::Compilation *,TR::CFG *,TR::Optimizer *,_Bool),0,TR,UnionDFSetAnalysis
TR_UnionDFSetAnalysis,TR_UnionDFSetAnalysis(class TR_UnionDFSetAnalysis<class TR_BitVector *> &&),0,TR,UnionDFSetAnalysis
TR_UnionDFSetAnalysis,TR_UnionDFSetAnalysis(const class TR_UnionDFSetAnalysis<class TR_BitVector *> &),0,TR,UnionDFSetAnalysis
compose,compose(class TR_SingleBitContainer *,class TR_SingleBitContainer *),0,TR,UnionDFSetAnalysis
compose,compose(class TR_BitVector *,class TR_BitVector *),0,TR,UnionDFSetAnalysis
initializeInfo,initializeInfo(class TR_SingleBitContainer *),0,TR,UnionDFSetAnalysis
initializeInfo,initializeInfo(class TR_BitVector *),0,TR,UnionDFSetAnalysis
inverseCompose,inverseCompose(class TR_SingleBitContainer *,class TR_SingleBitContainer *),0,TR,UnionDFSetAnalysis
inverseCompose,inverseCompose(class TR_BitVector *,class TR_BitVector *),0,TR,UnionDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_SingleBitContainer *),0,TR,UnionDFSetAnalysis
inverseInitializeInfo,inverseInitializeInfo(class TR_BitVector *),0,TR,UnionDFSetAnalysis
operator=,operator=(const class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &),0,TR,UnionDFSetAnalysis
operator=,operator=(class TR_UnionDFSetAnalysis<class TR_SingleBitContainer *> &&),0,TR,UnionDFSetAnalysis
operator=,operator=(const class TR_UnionDFSetAnalysis<class TR_BitVector *> &),0,TR,UnionDFSetAnalysis
operator=,operator=(class TR_UnionDFSetAnalysis<class TR_BitVector *> &&),0,TR,UnionDFSetAnalysis
~TR_UnionDFSetAnalysis,~TR_UnionDFSetAnalysis(),1,TR,UnionDFSetAnalysis
allocateValueNumber,allocateValueNumber(TR::Node *,vcount_t),1,TR,ValueNumberInfo
allocateValueNumber,allocateValueNumber(TR::Node *),0,TR,ValueNumberInfo
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,TR,VPConstraint
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Array
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Array
isKill,isKill(TR::Block *),1,TR,VirtualGuardTailSplitter
isKill,isKill(TR::Node *),0,TR,VirtualGuardTailSplitter
TR_VirtualGuardHeadMerger,TR_VirtualGuardHeadMerger(const class TR_VirtualGuardHeadMerger &),1,TR,VirtualGuardHeadMerger
TR_VirtualGuardHeadMerger,TR_VirtualGuardHeadMerger(class TR_VirtualGuardHeadMerger &&),0,TR,VirtualGuardHeadMerger
RegDepCopyRemoval,RegDepCopyRemoval(const class TR::RegDepCopyRemoval &),1,TR,RegDepCopyRemoval
RegDepCopyRemoval,RegDepCopyRemoval(class TR::RegDepCopyRemoval &&),0,TR,RegDepCopyRemoval
List<T>,List<T>(),1,,
List<T>,List<T>(TR::Region &),0,,
TR_OrderedBlockList,TR_OrderedBlockList(class TR_OrderedBlockList &&),1,TR,OrderedBlockList
TR_OrderedBlockList,TR_OrderedBlockList(const class TR_OrderedBlockList &),0,TR,OrderedBlockList
TR_OrderedBlockList,TR_OrderedBlockList(class TR_Memory *),0,TR,OrderedBlockList
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,,
TR_LiveOnNotAllPaths,TR_LiveOnNotAllPaths(const class TR_LiveOnNotAllPaths &),1,TR,LiveOnNotAllPaths
TR_LiveOnNotAllPaths,TR_LiveOnNotAllPaths(TR::Compilation *,class TR_Liveness *,class TR_LiveOnAllPaths *),0,TR,LiveOnNotAllPaths
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,BasicInductionVariable
operator delete[],operator delete[](void *,TR::Region &),0,TR,BasicInductionVariable
reassociateAndHoistComputations,reassociateAndHoistComputations(TR::Block *,class TR_Structure *),1,TR,LoopStrider
reassociateAndHoistComputations,reassociateAndHoistComputations(TR::Block *,TR::Node *,int32_t,TR::Node *,vcount_t),0,TR,LoopStrider
StaticSymbol,StaticSymbol(TR::DataType,uint32_t),1,OMR,StaticSymbol
StaticSymbol,StaticSymbol(class OMR::StaticSymbol &&),0,OMR,StaticSymbol
ValuePropagation,ValuePropagation(class OMR::ValuePropagation &&),1,OMR,ValuePropagation
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,TR,HedgeNode
operator delete,operator delete(void *,size_t),0,TR,HedgeNode
operator delete[],operator delete[](void *,TR::Region &),1,TR,HedgeNode
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,HedgeNode
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,HedgeNode
operator new[],operator new[](size_t,TR::Region &),0,TR,HedgeNode
IlGenRequest,IlGenRequest(const class OMR::IlGenRequest &),1,OMR,IlGenRequest
IlGenRequest,IlGenRequest(class OMR::IlGenRequest &&),0,OMR,IlGenRequest
VPArrayInfo,VPArrayInfo(class TR::VPArrayInfo &&),1,TR,VPArrayInfo
VPArrayInfo,VPArrayInfo(const class TR::VPArrayInfo &),0,TR,VPArrayInfo
VPArrayInfo,VPArrayInfo(int32_t,int32_t,int32_t),0,TR,VPArrayInfo
VPClass,VPClass(class TR::VPClass &&),1,TR,VPClass
VPClass,VPClass(const class TR::VPClass &),0,TR,VPClass
VPClass,VPClass(TR::VPClassType *,TR::VPClassPresence *,TR::VPPreexistentObject *,TR::VPArrayInfo *,TR::VPObjectLocation *),0,TR,VPClass
VPResolvedClass,VPResolvedClass(class TR::VPResolvedClass &&),1,TR,VPResolvedClass
VPEqual,VPEqual(const class TR::VPEqual &),1,TR,VPEqual
VPEqual,VPEqual(class TR::VPEqual &&),0,TR,VPEqual
VPEqual,VPEqual(int32_t),0,TR,VPEqual
VPGreaterThanOrEqual,VPGreaterThanOrEqual(class TR::VPGreaterThanOrEqual &&),1,TR,VPGreaterThanOrEqual
VPGreaterThanOrEqual,VPGreaterThanOrEqual(int32_t),0,TR,VPGreaterThanOrEqual
VPGreaterThanOrEqual,VPGreaterThanOrEqual(const class TR::VPGreaterThanOrEqual &),0,TR,VPGreaterThanOrEqual
VPIntConst,VPIntConst(class TR::VPIntConst &&),1,TR,VPIntConst
VPIntConst,VPIntConst(int32_t),0,TR,VPIntConst
VPIntConst,VPIntConst(const class TR::VPIntConst &),0,TR,VPIntConst
VPLessThanOrEqual,VPLessThanOrEqual(class TR::VPLessThanOrEqual &&),1,TR,VPLessThanOrEqual
VPLessThanOrEqual,VPLessThanOrEqual(const class TR::VPLessThanOrEqual &),0,TR,VPLessThanOrEqual
VPLessThanOrEqual,VPLessThanOrEqual(int32_t),0,TR,VPLessThanOrEqual
VPLongConst,VPLongConst(const class TR::VPLongConst &),1,TR,VPLongConst
VPLongConst,VPLongConst(int64_t),0,TR,VPLongConst
VPLongConst,VPLongConst(class TR::VPLongConst &&),0,TR,VPLongConst
VPMergedConstraints,VPMergedConstraints(class TR::VPMergedConstraints &&),1,TR,VPMergedConstraints
VPMergedConstraints,VPMergedConstraints(ListElement<TR::VPConstraint> *,class TR_Memory *),0,TR,VPMergedConstraints
VPMergedConstraints,VPMergedConstraints(const class TR::VPMergedConstraints &),0,TR,VPMergedConstraints
VPNotEqual,VPNotEqual(class TR::VPNotEqual &&),1,TR,VPNotEqual
VPNotEqual,VPNotEqual(const class TR::VPNotEqual &),0,TR,VPNotEqual
VPNotEqual,VPNotEqual(int32_t),0,TR,VPNotEqual
VPObjectLocation,VPObjectLocation(class TR::VPObjectLocation &&),1,TR,VPObjectLocation
VPObjectLocation,VPObjectLocation(const class TR::VPObjectLocation &),0,TR,VPObjectLocation
VPObjectLocation,VPObjectLocation(enum TR::VPObjectLocation::VPObjectLocationKind),0,TR,VPObjectLocation
VPPreexistentObject,VPPreexistentObject(class TR::VPPreexistentObject &&),1,TR,VPPreexistentObject
VPPreexistentObject,VPPreexistentObject(const class TR::VPPreexistentObject &),0,TR,VPPreexistentObject
VPPreexistentObject,VPPreexistentObject(class TR_OpaqueClassBlock *),0,TR,VPPreexistentObject
VPShortConst,VPShortConst(class TR::VPShortConst &&),1,TR,VPShortConst
VPShortConst,VPShortConst(int16_t),0,TR,VPShortConst
VPShortConst,VPShortConst(const class TR::VPShortConst &),0,TR,VPShortConst
VPShortRange,VPShortRange(class TR::VPShortRange &&),1,TR,VPShortRange
VPShortRange,VPShortRange(const class TR::VPShortRange &),0,TR,VPShortRange
VPShortRange,VPShortRange(int16_t,int16_t),0,TR,VPShortRange
VPSync,VPSync(const class TR::VPSync &),1,TR,VPSync
VPSync,VPSync(class TR::VPSync &&),0,TR,VPSync
VPSync,VPSync(enum TR_YesNoMaybe),0,TR,VPSync
VPUnresolvedClass,VPUnresolvedClass(class TR::VPUnresolvedClass &&),1,TR,VPUnresolvedClass
VPUnresolvedClass,VPUnresolvedClass(const char *,int32_t,class TR_ResolvedMethod *),0,TR,VPUnresolvedClass
VPUnresolvedClass,VPUnresolvedClass(const class TR::VPUnresolvedClass &),0,TR,VPUnresolvedClass
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,HedgeNode
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,HedgeNode
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,HedgeNode
GlobalValuePropagation,GlobalValuePropagation(class TR::GlobalValuePropagation &&),1,TR,GlobalValuePropagation
GlobalValuePropagation,GlobalValuePropagation(const class TR::GlobalValuePropagation &),0,TR,GlobalValuePropagation
ValuePropagation,ValuePropagation(const class OMR::ValuePropagation &),0,OMR,ValuePropagation
addGlobalConstraint,addGlobalConstraint(TR::Node *,int32_t,TR::VPConstraint *,int32_t),1,OMR,ValuePropagation
addGlobalConstraint,addGlobalConstraint(TR::Node *,TR::VPConstraint *,TR::Node *),0,OMR,ValuePropagation
VPIntConst,VPIntConst(const class TR::VPIntConst &),1,TR,VPIntConst
VPIntConst,VPIntConst(class TR::VPIntConst &&),0,TR,VPIntConst
TR_CanReachGivenBlocks,TR_CanReachGivenBlocks(class TR_CanReachGivenBlocks &&),1,TR,CanReachGivenBlocks
TR_CanReachGivenBlocks,TR_CanReachGivenBlocks(const class TR_CanReachGivenBlocks &),0,TR,CanReachGivenBlocks
TR_CanReachGivenBlocks,TR_CanReachGivenBlocks(TR::Compilation *,class TR_BitVector *),0,TR,CanReachGivenBlocks
TR_ReachabilityAnalysis,TR_ReachabilityAnalysis(class TR_ReachabilityAnalysis &&),1,TR,ReachabilityAnalysis
TR_ReachabilityAnalysis,TR_ReachabilityAnalysis(const class TR_ReachabilityAnalysis &),0,TR,ReachabilityAnalysis
operator=,operator=(const class TR_ReachabilityAnalysis &),1,TR,ReachabilityAnalysis
operator=,operator=(class TR_ReachabilityAnalysis &&),0,TR,ReachabilityAnalysis
TR_CanBeReachedWithoutExceptionEdges,TR_CanBeReachedWithoutExceptionEdges(class TR_CanBeReachedWithoutExceptionEdges &&),1,TR,CanBeReachedWithoutExceptionEdges
TR_CanBeReachedWithoutExceptionEdges,TR_CanBeReachedWithoutExceptionEdges(const class TR_CanBeReachedWithoutExceptionEdges &),0,TR,CanBeReachedWithoutExceptionEdges
TR_CanBeReachedWithoutExceptionEdges,TR_CanBeReachedWithoutExceptionEdges(TR::Compilation *),0,TR,CanBeReachedWithoutExceptionEdges
TR_ForwardReachabilityWithoutExceptionEdges,TR_ForwardReachabilityWithoutExceptionEdges(class TR_ForwardReachabilityWithoutExceptionEdges &&),1,TR,ForwardReachabilityWithoutExceptionEdges
TR_ForwardReachabilityWithoutExceptionEdges,TR_ForwardReachabilityWithoutExceptionEdges(const class TR_ForwardReachabilityWithoutExceptionEdges &),0,TR,ForwardReachabilityWithoutExceptionEdges
TR_CanReachNonColdBlocks,TR_CanReachNonColdBlocks(class TR_CanReachNonColdBlocks &&),1,TR,CanReachNonColdBlocks
TR_CanReachNonColdBlocks,TR_CanReachNonColdBlocks(const class TR_CanReachNonColdBlocks &),0,TR,CanReachNonColdBlocks
TR_CanReachNonColdBlocks,TR_CanReachNonColdBlocks(TR::Compilation *),0,TR,CanReachNonColdBlocks
TR_ClassLoadCheck,TR_ClassLoadCheck(class TR_ClassLoadCheck &&),1,TR,ClassLoadCheck
TR_ClassLoadCheck,TR_ClassLoadCheck(const class TR_ClassLoadCheck &),0,TR,ClassLoadCheck
TR_ClassLoadCheck,TR_ClassLoadCheck(char *,int32_t),0,TR,ClassLoadCheck
addInductionVariable,addInductionVariable(class TR_BasicInductionVariable *),1,TR,RegionStructure
addInductionVariable,addInductionVariable(class TR_InductionVariable *),0,TR,RegionStructure
ValueConstraint,ValueConstraint(class OMR::ValuePropagation::ValueConstraint &&),1,OMR,ValuePropagation::ValueConstraint
ValueConstraint,ValueConstraint(const class OMR::ValuePropagation::ValueConstraint &),0,OMR,ValuePropagation::ValueConstraint
ValueConstraint,ValueConstraint(int32_t),0,OMR,ValuePropagation::ValueConstraint
ValueConstraintHandler,ValueConstraintHandler(),1,OMR,ValuePropagation::ValueConstraintHandler
ValueConstraintHandler,ValueConstraintHandler(class OMR::ValuePropagation::ValueConstraintHandler &&),0,OMR,ValuePropagation::ValueConstraintHandler
VPClassPresence,VPClassPresence(class TR::VPClassPresence &&),1,TR,VPClassPresence
VPClassPresence,VPClassPresence(const class TR::VPClassPresence &),0,TR,VPClassPresence
VPClassPresence,VPClassPresence(),0,TR,VPClassPresence
VPNonNullObject,VPNonNullObject(class TR::VPNonNullObject &&),1,TR,VPNonNullObject
VPNonNullObject,VPNonNullObject(),0,TR,VPNonNullObject
VPNonNullObject,VPNonNullObject(const class TR::VPNonNullObject &),0,TR,VPNonNullObject
VPNullObject,VPNullObject(class TR::VPNullObject &&),1,TR,VPNullObject
VPNullObject,VPNullObject(const class TR::VPNullObject &),0,TR,VPNullObject
VPNullObject,VPNullObject(),0,TR,VPNullObject
VPPreexistentObject,VPPreexistentObject(const class TR::VPPreexistentObject &),1,TR,VPPreexistentObject
VPPreexistentObject,VPPreexistentObject(class TR::VPPreexistentObject &&),0,TR,VPPreexistentObject
VPUnreachablePath,VPUnreachablePath(const class TR::VPUnreachablePath &),1,TR,VPUnreachablePath
VPUnreachablePath,VPUnreachablePath(class TR::VPUnreachablePath &&),0,TR,VPUnreachablePath
VPUnreachablePath,VPUnreachablePath(),0,TR,VPUnreachablePath
TR_Stats,TR_Stats(class TR_Stats &&),1,TR,Stats
TR_Stats,TR_Stats(),0,TR,Stats
TR_Stats,TR_Stats(const char *),0,TR,Stats
TR_Stats,TR_Stats(const class TR_Stats &),0,TR,Stats
TR_StatsHisto<N>,TR_StatsHisto<N>(const char *,double,double),1,TR,StatsHisto
getName,getName(),1,TR,Stats
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,Stats
jitPersistentFree,jitPersistentFree(void *),1,TR,Stats
maxVal,maxVal(),1,TR,Stats
mean,mean(),1,TR,Stats
minVal,minVal(),1,TR,Stats
operator delete,operator delete(void *,size_t),1,TR,Stats
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Stats
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Stats
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Stats
operator delete,operator delete(void *,TR::Region &),0,TR,Stats
operator delete[],operator delete[](void *,TR::Region &),1,TR,Stats
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Stats
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Stats
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Stats
operator new,operator new(size_t,class TR_PersistentMemory *),1,TR,Stats
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,Stats
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Stats
operator new,operator new(size_t,TR::Region &),0,TR,Stats
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Stats
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,Stats
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Stats
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,Stats
operator new[],operator new[](size_t,TR::Region &),0,TR,Stats
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,Stats
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Stats
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Stats
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Stats
report,report(char *),1,TR,Stats
report,report(FILE *),0,TR,Stats
reset,reset(),1,TR,Stats
samples,samples(),1,TR,Stats
setName,setName(const char *),1,TR,Stats
stddev,stddev(),1,TR,Stats
sum,sum(),1,TR,Stats
update,update(double),1,TR,Stats
TR_StatsInterval,TR_StatsInterval(const char *),1,TR,StatsInterval
intervals,intervals(),1,TR,StatsInterval
lastTime,lastTime(),1,TR,StatsInterval
lastValue,lastValue(),1,TR,StatsInterval
update,update(double,double),0,TR,StatsInterval
AheadOfTimeCompile,AheadOfTimeCompile(class OMR::AheadOfTimeCompile &&),1,OMR,AheadOfTimeCompile
AheadOfTimeCompile,AheadOfTimeCompile(uint32_t *,TR::Compilation *),0,OMR,AheadOfTimeCompile
AheadOfTimeCompile,AheadOfTimeCompile(const class OMR::AheadOfTimeCompile &),0,OMR,AheadOfTimeCompile
addToSizeOfAOTRelocations,addToSizeOfAOTRelocations(uint32_t),1,OMR,AheadOfTimeCompile
comp,comp(),1,OMR,AheadOfTimeCompile
dumpRelocationData,dumpRelocationData(),1,OMR,AheadOfTimeCompile
getAOTRelocationTargets,getAOTRelocationTargets(),1,OMR,AheadOfTimeCompile
getDebug,getDebug(),1,OMR,AheadOfTimeCompile
getRelocationData,getRelocationData(),1,OMR,AheadOfTimeCompile
getSizeOfAOTRelocationHeader,getSizeOfAOTRelocationHeader(TR_ExternalRelocationTargetKind),1,OMR,AheadOfTimeCompile
getSizeOfAOTRelocations,getSizeOfAOTRelocations(),1,OMR,AheadOfTimeCompile
initialiseAOTRelocationHeader,initialiseAOTRelocationHeader(TR::IteratedExternalRelocation *),1,OMR,AheadOfTimeCompile
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,AheadOfTimeCompile
jitPersistentFree,jitPersistentFree(void *),1,OMR,AheadOfTimeCompile
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,AheadOfTimeCompile
operator delete,operator delete(void *,size_t),0,OMR,AheadOfTimeCompile
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,AheadOfTimeCompile
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,AheadOfTimeCompile
operator delete,operator delete(void *,TR::Region &),0,OMR,AheadOfTimeCompile
operator delete[],operator delete[](void *,TR::Region &),1,OMR,AheadOfTimeCompile
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,AheadOfTimeCompile
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,AheadOfTimeCompile
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,AheadOfTimeCompile
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,AheadOfTimeCompile
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,AheadOfTimeCompile
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,AheadOfTimeCompile
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,AheadOfTimeCompile
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,AheadOfTimeCompile
operator new,operator new(size_t,TR::Region &),0,OMR,AheadOfTimeCompile
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,AheadOfTimeCompile
operator new[],operator new[](size_t,TR::Region &),1,OMR,AheadOfTimeCompile
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,AheadOfTimeCompile
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,AheadOfTimeCompile
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,AheadOfTimeCompile
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,AheadOfTimeCompile
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,AheadOfTimeCompile
operator=,operator=(const class OMR::AheadOfTimeCompile &),1,OMR,AheadOfTimeCompile
operator=,operator=(class OMR::AheadOfTimeCompile &&),0,OMR,AheadOfTimeCompile
operator=,operator=(const class TR::AheadOfTimeCompile &),0,TR,AheadOfTimeCompile
operator=,operator=(class TR::AheadOfTimeCompile &&),0,TR,AheadOfTimeCompile
processRelocations,processRelocations(),1,OMR,AheadOfTimeCompile
self,self(),1,OMR,AheadOfTimeCompile
setAOTRelocationKindToHeaderSizeMap,setAOTRelocationKindToHeaderSizeMap(uint32_t *),1,OMR,AheadOfTimeCompile
setRelocationData,setRelocationData(uint8_t *),1,OMR,AheadOfTimeCompile
setSizeOfAOTRelocations,setSizeOfAOTRelocations(uint32_t),1,OMR,AheadOfTimeCompile
trMemory,trMemory(),1,OMR,AheadOfTimeCompile
traceRelocationOffsets,traceRelocationOffsets(uint8_t *&,int32_t,const uint8_t *,_Bool),1,OMR,AheadOfTimeCompile
~AheadOfTimeCompile,~AheadOfTimeCompile(),1,OMR,AheadOfTimeCompile
BeforeBinaryEncodingExternalRelocation,BeforeBinaryEncodingExternalRelocation(TR::Instruction *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *),1,TR,BeforeBinaryEncodingExternalRelocation
BeforeBinaryEncodingExternalRelocation,BeforeBinaryEncodingExternalRelocation(),0,TR,BeforeBinaryEncodingExternalRelocation
BeforeBinaryEncodingExternalRelocation,BeforeBinaryEncodingExternalRelocation(TR::Instruction *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *),0,TR,BeforeBinaryEncodingExternalRelocation
ExternalRelocation,ExternalRelocation(const class TR::ExternalRelocation &),1,TR,ExternalRelocation
ExternalRelocation,ExternalRelocation(),0,TR,ExternalRelocation
ExternalRelocation,ExternalRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *),0,TR,ExternalRelocation
ExternalRelocation,ExternalRelocation(uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *),0,TR,ExternalRelocation
ExternalRelocation,ExternalRelocation(class TR::ExternalRelocation &&),0,TR,ExternalRelocation
Relocation,Relocation(class TR::Relocation &&),1,TR,Relocation
Relocation,Relocation(const class TR::Relocation &),0,TR,Relocation
Relocation,Relocation(),0,TR,Relocation
Relocation,Relocation(uint8_t *),0,TR,Relocation
addAOTRelocation,addAOTRelocation(TR::CodeGenerator *),1,TR,Relocation
apply,apply(TR::CodeGenerator *),1,TR,Relocation
collectModifier,collectModifier(),1,TR,ExternalRelocation
getDebugInfo,getDebugInfo(),1,TR,Relocation
getGlobalValue,getGlobalValue(uint32_t),1,TR,ExternalRelocation
getName,getName(TR_ExternalRelocationTargetKind),1,TR,ExternalRelocation
getNarrowSize,getNarrowSize(),1,TR,ExternalRelocation
getRelocationRecord,getRelocationRecord(),1,TR,ExternalRelocation
getTargetAddress,getTargetAddress(),1,TR,ExternalRelocation
getTargetAddress2,getTargetAddress2(),1,TR,ExternalRelocation
getTargetKind,getTargetKind(),1,TR,ExternalRelocation
getUpdateInstruction,getUpdateInstruction(),1,TR,BeforeBinaryEncodingExternalRelocation
getUpdateLocation,getUpdateLocation(),1,TR,Relocation
getWideSize,getWideSize(),1,TR,ExternalRelocation
isAOTRelocation,isAOTRelocation(),1,TR,Relocation
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,Relocation
jitPersistentFree,jitPersistentFree(void *),1,TR,Relocation
nameOfGlobal,nameOfGlobal(uint32_t),1,TR,ExternalRelocation
operator delete,operator delete(void *,size_t),1,TR,Relocation
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Relocation
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Relocation
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Relocation
operator delete,operator delete(void *,TR::Region &),0,TR,Relocation
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,TR,Relocation
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Relocation
operator delete[],operator delete[](void *,TR::Region &),0,TR,Relocation
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,TR,Relocation
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,Relocation
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Relocation
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,Relocation
operator new,operator new(size_t,TR::Region &),0,TR,Relocation
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,TR,Relocation
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Relocation
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Relocation
operator new[],operator new[](size_t,TR::Region &),1,TR,Relocation
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,Relocation
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,TR,Relocation
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,Relocation
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Relocation
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,TR,Relocation
operator=,operator=(class TR::Relocation &&),1,TR,Relocation
operator=,operator=(const class TR::Relocation &),0,TR,Relocation
operator=,operator=(class TR::ExternalRelocation &&),0,TR,ExternalRelocation
operator=,operator=(const class TR::ExternalRelocation &),0,TR,ExternalRelocation
operator=,operator=(class TR::BeforeBinaryEncodingExternalRelocation &&),0,TR,BeforeBinaryEncodingExternalRelocation
operator=,operator=(const class TR::BeforeBinaryEncodingExternalRelocation &),0,TR,BeforeBinaryEncodingExternalRelocation
setDebugInfo,setDebugInfo(TR::RelocationDebugInfo *),1,TR,Relocation
setGlobalValue,setGlobalValue(uint32_t,uintptr_t),1,TR,ExternalRelocation
setTargetAddress,setTargetAddress(uint8_t *),1,TR,ExternalRelocation
setTargetKind,setTargetKind(TR_ExternalRelocationTargetKind),1,TR,ExternalRelocation
setUpdateLocation,setUpdateLocation(uint8_t *),1,TR,Relocation
trace,trace(TR::Compilation *),1,TR,Relocation
~BeforeBinaryEncodingExternalRelocation,~BeforeBinaryEncodingExternalRelocation(),1,TR,BeforeBinaryEncodingExternalRelocation
~ExternalRelocation,~ExternalRelocation(),1,TR,ExternalRelocation
~Relocation,~Relocation(),1,TR,Relocation
ExternalOrderedPair32BitRelocation,ExternalOrderedPair32BitRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *),1,TR,ExternalOrderedPair32BitRelocation
getLocation2,getLocation2(),1,TR,ExternalOrderedPair32BitRelocation
operator=,operator=(class TR::ExternalOrderedPair32BitRelocation &&),0,TR,ExternalOrderedPair32BitRelocation
operator=,operator=(const class TR::ExternalOrderedPair32BitRelocation &),0,TR,ExternalOrderedPair32BitRelocation
setLocation2,setLocation2(uint8_t *),1,TR,ExternalOrderedPair32BitRelocation
~ExternalOrderedPair32BitRelocation,~ExternalOrderedPair32BitRelocation(),1,TR,ExternalOrderedPair32BitRelocation
InstructionAbsoluteRelocation,InstructionAbsoluteRelocation(uint8_t *,TR::Instruction *,_Bool),1,TR,InstructionAbsoluteRelocation
getInstruction,getInstruction(),1,TR,InstructionAbsoluteRelocation
operator=,operator=(class TR::InstructionAbsoluteRelocation &&),0,TR,InstructionAbsoluteRelocation
operator=,operator=(const class TR::InstructionAbsoluteRelocation &),0,TR,InstructionAbsoluteRelocation
useEndAddress,useEndAddress(),1,TR,InstructionAbsoluteRelocation
~InstructionAbsoluteRelocation,~InstructionAbsoluteRelocation(),1,TR,InstructionAbsoluteRelocation
IteratedExternalRelocation,IteratedExternalRelocation(),1,TR,IteratedExternalRelocation
IteratedExternalRelocation,IteratedExternalRelocation(uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,flags8_t,TR::CodeGenerator *),0,TR,IteratedExternalRelocation
IteratedExternalRelocation,IteratedExternalRelocation(uint8_t *,TR_ExternalRelocationTargetKind,flags8_t,TR::CodeGenerator *),0,TR,IteratedExternalRelocation
addRelocationEntry,addRelocationEntry(uint32_t),1,TR,IteratedExternalRelocation
addToSizeOfRelocationData,addToSizeOfRelocationData(uint16_t),1,TR,IteratedExternalRelocation
full,full(),1,TR,IteratedExternalRelocation
getModifierValue,getModifierValue(),1,TR,IteratedExternalRelocation
getNumberOfRelocationSites,getNumberOfRelocationSites(),1,TR,IteratedExternalRelocation
getRelocationData,getRelocationData(),1,TR,IteratedExternalRelocation
getRelocationDataCursor,getRelocationDataCursor(),1,TR,IteratedExternalRelocation
getSizeOfRelocationData,getSizeOfRelocationData(),1,TR,IteratedExternalRelocation
getTargetAddress,getTargetAddress(),1,TR,IteratedExternalRelocation
getTargetAddress2,getTargetAddress2(),1,TR,IteratedExternalRelocation
getTargetKind,getTargetKind(),1,TR,IteratedExternalRelocation
initialiseRelocation,initialiseRelocation(TR::CodeGenerator *),1,TR,IteratedExternalRelocation
isOrderedPair,isOrderedPair(),1,TR,IteratedExternalRelocation
needsWideOffsets,needsWideOffsets(),1,TR,IteratedExternalRelocation
setFull,setFull(),1,TR,IteratedExternalRelocation
setModifierValue,setModifierValue(uint8_t),1,TR,IteratedExternalRelocation
setNeedsWideOffsets,setNeedsWideOffsets(),1,TR,IteratedExternalRelocation
setNumberOfRelocationSites,setNumberOfRelocationSites(uint32_t),1,TR,IteratedExternalRelocation
setOrderedPair,setOrderedPair(),1,TR,IteratedExternalRelocation
setRelocationData,setRelocationData(uint8_t *),1,TR,IteratedExternalRelocation
setRelocationDataCursor,setRelocationDataCursor(uint8_t *),1,TR,IteratedExternalRelocation
setSizeOfRelocationData,setSizeOfRelocationData(uint16_t),1,TR,IteratedExternalRelocation
setTargetAddress,setTargetAddress(uint8_t *),1,TR,IteratedExternalRelocation
setTargetKind,setTargetKind(TR_ExternalRelocationTargetKind),1,TR,IteratedExternalRelocation
LabelAbsoluteRelocation,LabelAbsoluteRelocation(),1,TR,LabelAbsoluteRelocation
LabelAbsoluteRelocation,LabelAbsoluteRelocation(uint8_t *,TR::LabelSymbol *),0,TR,LabelAbsoluteRelocation
LabelRelocation,LabelRelocation(class TR::LabelRelocation &&),1,TR,LabelRelocation
LabelRelocation,LabelRelocation(),0,TR,LabelRelocation
LabelRelocation,LabelRelocation(uint8_t *,TR::LabelSymbol *),0,TR,LabelRelocation
LabelRelocation,LabelRelocation(const class TR::LabelRelocation &),0,TR,LabelRelocation
getLabel,getLabel(),1,TR,LabelRelocation
operator=,operator=(const class TR::LabelRelocation &),0,TR,LabelRelocation
operator=,operator=(class TR::LabelRelocation &&),0,TR,LabelRelocation
operator=,operator=(class TR::LabelAbsoluteRelocation &&),0,TR,LabelAbsoluteRelocation
operator=,operator=(const class TR::LabelAbsoluteRelocation &),0,TR,LabelAbsoluteRelocation
setLabel,setLabel(TR::LabelSymbol *),1,TR,LabelRelocation
~LabelAbsoluteRelocation,~LabelAbsoluteRelocation(),1,TR,LabelAbsoluteRelocation
~LabelRelocation,~LabelRelocation(),1,TR,LabelRelocation
LabelRelative12BitRelocation,LabelRelative12BitRelocation(),1,TR,LabelRelative12BitRelocation
LabelRelative12BitRelocation,LabelRelative12BitRelocation(uint8_t *,TR::LabelSymbol *,_Bool),0,TR,LabelRelative12BitRelocation
isCheckDisp,isCheckDisp(),1,TR,LabelRelative12BitRelocation
operator=,operator=(const class TR::LabelRelative12BitRelocation &),0,TR,LabelRelative12BitRelocation
operator=,operator=(class TR::LabelRelative12BitRelocation &&),0,TR,LabelRelative12BitRelocation
~LabelRelative12BitRelocation,~LabelRelative12BitRelocation(),1,TR,LabelRelative12BitRelocation
LabelRelative16BitRelocation,LabelRelative16BitRelocation(uint8_t *,TR::LabelSymbol *,int8_t,_Bool),1,TR,LabelRelative16BitRelocation
LabelRelative16BitRelocation,LabelRelative16BitRelocation(uint8_t *,TR::LabelSymbol *),0,TR,LabelRelative16BitRelocation
LabelRelative16BitRelocation,LabelRelative16BitRelocation(),0,TR,LabelRelative16BitRelocation
getAddressDifferenceDivisor,getAddressDifferenceDivisor(),1,TR,LabelRelative16BitRelocation
isInstructionOffset,isInstructionOffset(),1,TR,LabelRelative16BitRelocation
operator=,operator=(const class TR::LabelRelative16BitRelocation &),0,TR,LabelRelative16BitRelocation
operator=,operator=(class TR::LabelRelative16BitRelocation &&),0,TR,LabelRelative16BitRelocation
setAddressDifferenceDivisor,setAddressDifferenceDivisor(int8_t),1,TR,LabelRelative16BitRelocation
setInstructionOffset,setInstructionOffset(_Bool),1,TR,LabelRelative16BitRelocation
~LabelRelative16BitRelocation,~LabelRelative16BitRelocation(),1,TR,LabelRelative16BitRelocation
LabelRelative24BitRelocation,LabelRelative24BitRelocation(),1,TR,LabelRelative24BitRelocation
LabelRelative24BitRelocation,LabelRelative24BitRelocation(uint8_t *,TR::LabelSymbol *),0,TR,LabelRelative24BitRelocation
operator=,operator=(class TR::LabelRelative24BitRelocation &&),0,TR,LabelRelative24BitRelocation
operator=,operator=(const class TR::LabelRelative24BitRelocation &),0,TR,LabelRelative24BitRelocation
~LabelRelative24BitRelocation,~LabelRelative24BitRelocation(),1,TR,LabelRelative24BitRelocation
LabelRelative32BitRelocation,LabelRelative32BitRelocation(),1,TR,LabelRelative32BitRelocation
LabelRelative32BitRelocation,LabelRelative32BitRelocation(uint8_t *,TR::LabelSymbol *),0,TR,LabelRelative32BitRelocation
operator=,operator=(class TR::LabelRelative32BitRelocation &&),0,TR,LabelRelative32BitRelocation
operator=,operator=(const class TR::LabelRelative32BitRelocation &),0,TR,LabelRelative32BitRelocation
~LabelRelative32BitRelocation,~LabelRelative32BitRelocation(),1,TR,LabelRelative32BitRelocation
LabelRelative8BitRelocation,LabelRelative8BitRelocation(),1,TR,LabelRelative8BitRelocation
LabelRelative8BitRelocation,LabelRelative8BitRelocation(uint8_t *,TR::LabelSymbol *),0,TR,LabelRelative8BitRelocation
operator=,operator=(class TR::LabelRelative8BitRelocation &&),0,TR,LabelRelative8BitRelocation
operator=,operator=(const class TR::LabelRelative8BitRelocation &),0,TR,LabelRelative8BitRelocation
~LabelRelative8BitRelocation,~LabelRelative8BitRelocation(),1,TR,LabelRelative8BitRelocation
LabelTable32BitRelocation,LabelTable32BitRelocation(),1,TR,LabelTable32BitRelocation
LabelTable32BitRelocation,LabelTable32BitRelocation(uint8_t *,TR::LabelSymbol *),0,TR,LabelTable32BitRelocation
operator=,operator=(class TR::LabelTable32BitRelocation &&),0,TR,LabelTable32BitRelocation
operator=,operator=(const class TR::LabelTable32BitRelocation &),0,TR,LabelTable32BitRelocation
~LabelTable32BitRelocation,~LabelTable32BitRelocation(),1,TR,LabelTable32BitRelocation
LoadLabelRelative16BitRelocation,LoadLabelRelative16BitRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t),1,TR,LoadLabelRelative16BitRelocation
LoadLabelRelative16BitRelocation,LoadLabelRelative16BitRelocation(),0,TR,LoadLabelRelative16BitRelocation
getDeltaToStartLabel,getDeltaToStartLabel(),1,TR,LoadLabelRelative16BitRelocation
getEndLabel,getEndLabel(),1,TR,LoadLabelRelative16BitRelocation
getLastInstruction,getLastInstruction(),1,TR,LoadLabelRelative16BitRelocation
getStartLabel,getStartLabel(),1,TR,LoadLabelRelative16BitRelocation
operator=,operator=(const class TR::LoadLabelRelative16BitRelocation &),0,TR,LoadLabelRelative16BitRelocation
operator=,operator=(class TR::LoadLabelRelative16BitRelocation &&),0,TR,LoadLabelRelative16BitRelocation
setDeltaToStartLabel,setDeltaToStartLabel(int32_t),1,TR,LoadLabelRelative16BitRelocation
setEndLabel,setEndLabel(TR::LabelSymbol *),1,TR,LoadLabelRelative16BitRelocation
setLastInstruction,setLastInstruction(TR::Instruction *),1,TR,LoadLabelRelative16BitRelocation
setStartLabel,setStartLabel(TR::LabelSymbol *),1,TR,LoadLabelRelative16BitRelocation
~LoadLabelRelative16BitRelocation,~LoadLabelRelative16BitRelocation(),1,TR,LoadLabelRelative16BitRelocation
LoadLabelRelative32BitRelocation,LoadLabelRelative32BitRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t),1,TR,LoadLabelRelative32BitRelocation
LoadLabelRelative32BitRelocation,LoadLabelRelative32BitRelocation(),0,TR,LoadLabelRelative32BitRelocation
getDeltaToStartLabel,getDeltaToStartLabel(),1,TR,LoadLabelRelative32BitRelocation
getEndLabel,getEndLabel(),1,TR,LoadLabelRelative32BitRelocation
getLastInstruction,getLastInstruction(),1,TR,LoadLabelRelative32BitRelocation
getStartLabel,getStartLabel(),1,TR,LoadLabelRelative32BitRelocation
operator=,operator=(const class TR::LoadLabelRelative32BitRelocation &),0,TR,LoadLabelRelative32BitRelocation
operator=,operator=(class TR::LoadLabelRelative32BitRelocation &&),0,TR,LoadLabelRelative32BitRelocation
setDeltaToStartLabel,setDeltaToStartLabel(int32_t),1,TR,LoadLabelRelative32BitRelocation
setEndLabel,setEndLabel(TR::LabelSymbol *),1,TR,LoadLabelRelative32BitRelocation
setLastInstruction,setLastInstruction(TR::Instruction *),1,TR,LoadLabelRelative32BitRelocation
setStartLabel,setStartLabel(TR::LabelSymbol *),1,TR,LoadLabelRelative32BitRelocation
~LoadLabelRelative32BitRelocation,~LoadLabelRelative32BitRelocation(),1,TR,LoadLabelRelative32BitRelocation
LoadLabelRelative64BitRelocation,LoadLabelRelative64BitRelocation(),1,TR,LoadLabelRelative64BitRelocation
LoadLabelRelative64BitRelocation,LoadLabelRelative64BitRelocation(TR::Instruction *,TR::LabelSymbol *),0,TR,LoadLabelRelative64BitRelocation
getLastInstruction,getLastInstruction(),1,TR,LoadLabelRelative64BitRelocation
operator=,operator=(const class TR::LoadLabelRelative64BitRelocation &),0,TR,LoadLabelRelative64BitRelocation
operator=,operator=(class TR::LoadLabelRelative64BitRelocation &&),0,TR,LoadLabelRelative64BitRelocation
setLastInstruction,setLastInstruction(TR::Instruction *),1,TR,LoadLabelRelative64BitRelocation
~LoadLabelRelative64BitRelocation,~LoadLabelRelative64BitRelocation(),1,TR,LoadLabelRelative64BitRelocation
operator delete,operator delete(void *,TR::Region &),1,OMR,SymbolReference
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Instruction
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Instruction
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Instruction
GCStackAtlas,GCStackAtlas(class TR::GCStackAtlas &&),0,TR,GCStackAtlas
GCStackAtlas,GCStackAtlas(const class TR::GCStackAtlas &),0,TR,GCStackAtlas
~GCStackAtlas,~GCStackAtlas(),1,OMR,GCStackAtlas
StackMemoryRegion,StackMemoryRegion(class TR_Memory &),1,TR,StackMemoryRegion
operator=,operator=(class TR_BitVectorIterator &&),1,TR,BitVectorIterator
operator=,operator=(const class TR_BitVectorIterator &),0,TR,BitVectorIterator
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,GCRegisterMap
alignment,alignment(intptrj_t,intptrj_t,intptrj_t),1,OMR,X86::CodeGenerator
alignment,alignment(void *,intptrj_t,intptrj_t),0,OMR,X86::CodeGenerator
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,GCRegisterMap
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,GCRegisterMap
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,GCStackAtlas
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,GCStackAtlas
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,GCStackAtlas
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,GCStackAtlas
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,GCStackAtlas
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,OMR,SymbolReference
element,element(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),1,OMR,SymbolReferenceTable
element,element(enum TR_RuntimeHelper),0,OMR,SymbolReferenceTable
getSymRef,getSymRef(int32_t),1,OMR,SymbolReferenceTable
getSymRef,getSymRef(enum OMR::SymbolReferenceTable::CommonNonhelperSymbol),0,OMR,SymbolReferenceTable
SnippetGCMap,SnippetGCMap(),1,OMR,SnippetGCMap
SnippetGCMap,SnippetGCMap(class OMR::SnippetGCMap &&),0,OMR,SnippetGCMap
createWithSymRef,createWithSymRef(TR::ILOpCodes,uint16_t,TR::SymbolReference *),1,OMR,Node
iconst,iconst(int32_t),1,OMR,Node
iconst,iconst(TR::Node *,int32_t),0,OMR,Node
RegisterDependencyConditions,RegisterDependencyConditions(class OMR::RegisterDependencyConditions &&),1,OMR,RegisterDependencyConditions
RegisterDependencyConditions,RegisterDependencyConditions(const class OMR::RegisterDependencyConditions &),0,OMR,RegisterDependencyConditions
RegisterDependencyConditions,RegisterDependencyConditions(),0,OMR,RegisterDependencyConditions
RegisterDependencyConditions,RegisterDependencyConditions(class OMR::X86::RegisterDependencyConditions &&),0,OMR,X86::RegisterDependencyConditions
RegisterDependencyConditions,RegisterDependencyConditions(const class OMR::X86::RegisterDependencyConditions &),0,OMR,X86::RegisterDependencyConditions
RegisterDependencyConditions,RegisterDependencyConditions(class TR_X86RegisterDependencyIndex,class TR_X86RegisterDependencyIndex,class TR_Memory *),0,OMR,X86::RegisterDependencyConditions
RegisterDependencyConditions,RegisterDependencyConditions(TR::Node *,TR::CodeGenerator *,class TR_X86RegisterDependencyIndex,List<TR::Register> *),0,OMR,X86::RegisterDependencyConditions
addPostCondition,addPostCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool),1,OMR,X86::RegisterDependencyConditions
addPreCondition,addPreCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool),1,OMR,X86::RegisterDependencyConditions
assignPostConditionRegisters,assignPostConditionRegisters(TR::Instruction *,enum TR_RegisterKinds,TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
assignPreConditionRegisters,assignPreConditionRegisters(TR::Instruction *,enum TR_RegisterKinds,TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
blockPostConditionRealDependencyRegisters,blockPostConditionRealDependencyRegisters(TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
blockPostConditionRegisters,blockPostConditionRegisters(),1,OMR,X86::RegisterDependencyConditions
blockPreConditionRealDependencyRegisters,blockPreConditionRealDependencyRegisters(TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
blockPreConditionRegisters,blockPreConditionRegisters(),1,OMR,X86::RegisterDependencyConditions
clone,clone(TR::CodeGenerator *,class TR_X86RegisterDependencyIndex),1,OMR,X86::RegisterDependencyConditions
createRegisterAssociationDirective,createRegisterAssociationDirective(TR::Instruction *,TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
defsRegister,defsRegister(TR::Register *),1,OMR,X86::RegisterDependencyConditions
findPostCondition,findPostCondition(TR::class RealRegister::RegNum),1,OMR,X86::RegisterDependencyConditions
findPostCondition,findPostCondition(TR::Register *),0,OMR,X86::RegisterDependencyConditions
findPreCondition,findPreCondition(TR::class RealRegister::RegNum),1,OMR,X86::RegisterDependencyConditions
findPreCondition,findPreCondition(TR::Register *),0,OMR,X86::RegisterDependencyConditions
getAddCursorForPost,getAddCursorForPost(),1,OMR,X86::RegisterDependencyConditions
getAddCursorForPre,getAddCursorForPre(),1,OMR,X86::RegisterDependencyConditions
getNumPostConditions,getNumPostConditions(),1,OMR,X86::RegisterDependencyConditions
getNumPreConditions,getNumPreConditions(),1,OMR,X86::RegisterDependencyConditions
getPostConditions,getPostConditions(),1,OMR,X86::RegisterDependencyConditions
getPreConditions,getPreConditions(),1,OMR,X86::RegisterDependencyConditions
getRealRegisterFromVirtual,getRealRegisterFromVirtual(TR::Register *,TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,RegisterDependencyConditions
jitPersistentFree,jitPersistentFree(void *),1,OMR,RegisterDependencyConditions
numReferencedFPRegisters,numReferencedFPRegisters(TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
numReferencedGPRegisters,numReferencedGPRegisters(TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
operator delete,operator delete(void *,TR::Region &),1,OMR,RegisterDependencyConditions
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,RegisterDependencyConditions
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,RegisterDependencyConditions
operator delete,operator delete(void *,size_t),0,OMR,RegisterDependencyConditions
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,RegisterDependencyConditions
operator delete[],operator delete[](void *,TR::Region &),1,OMR,RegisterDependencyConditions
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,RegisterDependencyConditions
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,RegisterDependencyConditions
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,RegisterDependencyConditions
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,RegisterDependencyConditions
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,RegisterDependencyConditions
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,RegisterDependencyConditions
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,RegisterDependencyConditions
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,RegisterDependencyConditions
operator new,operator new(size_t,TR::Region &),0,OMR,RegisterDependencyConditions
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,RegisterDependencyConditions
operator new[],operator new[](size_t,TR::Region &),1,OMR,RegisterDependencyConditions
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,RegisterDependencyConditions
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,RegisterDependencyConditions
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,RegisterDependencyConditions
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,RegisterDependencyConditions
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,RegisterDependencyConditions
printDependencyConditions,printDependencyConditions(class TR_X86RegisterDependencyGroup *,class TR_X86RegisterDependencyIndex,char *,FILE *),1,OMR,X86::RegisterDependencyConditions
printFullRegisterDependencyInfo,printFullRegisterDependencyInfo(FILE *),1,OMR,X86::RegisterDependencyConditions
refsRegister,refsRegister(TR::Register *),1,OMR,X86::RegisterDependencyConditions
setAddCursorForPost,setAddCursorForPost(class TR_X86RegisterDependencyIndex),1,OMR,X86::RegisterDependencyConditions
setAddCursorForPre,setAddCursorForPre(class TR_X86RegisterDependencyIndex),1,OMR,X86::RegisterDependencyConditions
setMayNeedToPopFPRegisters,setMayNeedToPopFPRegisters(_Bool),1,OMR,X86::RegisterDependencyConditions
setNeedToClearFPStack,setNeedToClearFPStack(_Bool),1,OMR,X86::RegisterDependencyConditions
setNumPostConditions,setNumPostConditions(class TR_X86RegisterDependencyIndex,class TR_Memory *),1,OMR,X86::RegisterDependencyConditions
setNumPreConditions,setNumPreConditions(class TR_X86RegisterDependencyIndex,class TR_Memory *),1,OMR,X86::RegisterDependencyConditions
stopAddingConditions,stopAddingConditions(),1,OMR,X86::RegisterDependencyConditions
stopAddingPostConditions,stopAddingPostConditions(),1,OMR,X86::RegisterDependencyConditions
stopAddingPreConditions,stopAddingPreConditions(),1,OMR,X86::RegisterDependencyConditions
unblockPostConditionRealDependencyRegisters,unblockPostConditionRealDependencyRegisters(TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
unblockPostConditionRegisters,unblockPostConditionRegisters(),1,OMR,X86::RegisterDependencyConditions
unblockPreConditionRealDependencyRegisters,unblockPreConditionRealDependencyRegisters(TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
unblockPreConditionRegisters,unblockPreConditionRegisters(),1,OMR,X86::RegisterDependencyConditions
unionDependencies,unionDependencies(class TR_X86RegisterDependencyGroup *,class TR_X86RegisterDependencyIndex,TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool),1,OMR,X86::RegisterDependencyConditions
unionNoRegPostCondition,unionNoRegPostCondition(TR::Register *,TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
unionPostCondition,unionPostCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool),1,OMR,X86::RegisterDependencyConditions
unionPreCondition,unionPreCondition(TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool),1,OMR,X86::RegisterDependencyConditions
unionRealDependencies,unionRealDependencies(class TR_X86RegisterDependencyGroup *,class TR_X86RegisterDependencyIndex,TR::Register *,TR::class RealRegister::RegNum,TR::CodeGenerator *,uint8_t,_Bool),1,OMR,X86::RegisterDependencyConditions
useRegisters,useRegisters(TR::Instruction *,TR::CodeGenerator *),1,OMR,X86::RegisterDependencyConditions
usesRegister,usesRegister(TR::Register *),1,OMR,X86::RegisterDependencyConditions
~RegisterDependencyConditions,~RegisterDependencyConditions(),1,OMR,RegisterDependencyConditions
operator delete,operator delete(void *,size_t),1,OMR,AheadOfTimeCompile
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,AheadOfTimeCompile
BeforeBinaryEncodingExternalRelocation,BeforeBinaryEncodingExternalRelocation(),1,TR,BeforeBinaryEncodingExternalRelocation
BeforeBinaryEncodingExternalRelocation,BeforeBinaryEncodingExternalRelocation(TR::Instruction *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *),0,TR,BeforeBinaryEncodingExternalRelocation
Relocation,Relocation(uint8_t *),1,TR,Relocation
Relocation,Relocation(class TR::Relocation &&),0,TR,Relocation
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,TR,Relocation
operator delete,operator delete(void *,size_t),0,TR,Relocation
operator delete[],operator delete[](void *,TR::Region &),1,TR,Relocation
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,TR,Relocation
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,Relocation
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,Relocation
operator=,operator=(const class TR::Relocation &),1,TR,Relocation
operator=,operator=(class TR::Relocation &&),0,TR,Relocation
ExternalOrderedPair32BitRelocation,ExternalOrderedPair32BitRelocation(class TR::ExternalOrderedPair32BitRelocation &&),1,TR,ExternalOrderedPair32BitRelocation
ExternalOrderedPair32BitRelocation,ExternalOrderedPair32BitRelocation(const class TR::ExternalOrderedPair32BitRelocation &),0,TR,ExternalOrderedPair32BitRelocation
ExternalOrderedPair32BitRelocation,ExternalOrderedPair32BitRelocation(uint8_t *,uint8_t *,uint8_t *,TR_ExternalRelocationTargetKind,TR::CodeGenerator *),0,TR,ExternalOrderedPair32BitRelocation
IteratedExternalRelocation,IteratedExternalRelocation(class TR::IteratedExternalRelocation &&),1,TR,IteratedExternalRelocation
IteratedExternalRelocation,IteratedExternalRelocation(const class TR::IteratedExternalRelocation &),0,TR,IteratedExternalRelocation
IteratedExternalRelocation,IteratedExternalRelocation(),0,TR,IteratedExternalRelocation
operator new,operator new(size_t,TR_ArenaAllocator *),1,TR,ScratchRegisterManager
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,TR,ScratchRegisterManager
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,ScratchRegisterManager
operator new[],operator new[](size_t,TR::Region &),0,TR,ScratchRegisterManager
Snippet,Snippet(class TR::Snippet &&),0,TR,Snippet
Snippet,Snippet(const class TR::Snippet &),0,TR,Snippet
UnresolvedDataSnippet,UnresolvedDataSnippet(class OMR::UnresolvedDataSnippet &&),1,OMR,UnresolvedDataSnippet
UnresolvedDataSnippet,UnresolvedDataSnippet(const class OMR::UnresolvedDataSnippet &),0,OMR,UnresolvedDataSnippet
UnresolvedDataSnippet,UnresolvedDataSnippet(TR::CodeGenerator *,TR::Node *,TR::SymbolReference *,_Bool,_Bool),0,OMR,UnresolvedDataSnippet
UnresolvedDataSnippet,UnresolvedDataSnippet(class TR::UnresolvedDataSnippet &&),0,TR,UnresolvedDataSnippet
UnresolvedDataSnippet,UnresolvedDataSnippet(const class TR::UnresolvedDataSnippet &),0,TR,UnresolvedDataSnippet
create,create(TR::CodeGenerator *,TR::Node *,TR::SymbolReference *,_Bool,_Bool),1,OMR,UnresolvedDataSnippet
getAddressOfDataReference,getAddressOfDataReference(),1,OMR,UnresolvedDataSnippet
getDataReferenceInstruction,getDataReferenceInstruction(),1,OMR,UnresolvedDataSnippet
getDataSymbolReference,getDataSymbolReference(),1,OMR,UnresolvedDataSnippet
isUnresolvedStore,isUnresolvedStore(),1,OMR,UnresolvedDataSnippet
operator=,operator=(const class OMR::UnresolvedDataSnippet &),0,OMR,UnresolvedDataSnippet
operator=,operator=(class OMR::UnresolvedDataSnippet &&),0,OMR,UnresolvedDataSnippet
operator=,operator=(class TR::UnresolvedDataSnippet &&),0,TR,UnresolvedDataSnippet
operator=,operator=(const class TR::UnresolvedDataSnippet &),0,TR,UnresolvedDataSnippet
resetUnresolvedStore,resetUnresolvedStore(),1,OMR,UnresolvedDataSnippet
setAddressOfDataReference,setAddressOfDataReference(uint8_t *),1,OMR,UnresolvedDataSnippet
setDataReferenceInstruction,setDataReferenceInstruction(TR::Instruction *),1,OMR,UnresolvedDataSnippet
setDataSymbolReference,setDataSymbolReference(TR::SymbolReference *),1,OMR,UnresolvedDataSnippet
setUnresolvedStore,setUnresolvedStore(),1,OMR,UnresolvedDataSnippet
~UnresolvedDataSnippet,~UnresolvedDataSnippet(),1,OMR,UnresolvedDataSnippet
RegisterPair,RegisterPair(class TR::RegisterPair &&),0,TR,RegisterPair
RegisterPair,RegisterPair(const class TR::RegisterPair &),0,TR,RegisterPair
Machine,Machine(class TR::Machine &&),0,TR,Machine
Machine,Machine(const class TR::Machine &),0,TR,Machine
Relocation,Relocation(),1,TR,Relocation
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,Relocation
VPConstraint,VPConstraint(int32_t),1,TR,VPConstraint
MemoryReference,MemoryReference(),1,OMR,MemoryReference
MemoryReference,MemoryReference(const class OMR::MemoryReference &),0,OMR,MemoryReference
MemoryReference,MemoryReference(class OMR::MemoryReference &&),0,OMR,MemoryReference
MemoryReference,MemoryReference(class OMR::X86::MemoryReference &&),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(const class OMR::X86::MemoryReference &),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::SymbolReference *,intptrj_t,TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::SymbolReference *,TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::Register *,intptrj_t,TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::Register *,TR::Register *,uint8_t,TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::LabelSymbol *,TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::IA32DataSnippet *,TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(intptrj_t,TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::Register *,TR::Register *,uint8_t,intptrj_t,TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::Register *,TR::SymbolReference *,TR::Register *,uint8_t,TR::CodeGenerator *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::Node *,TR::CodeGenerator *,_Bool),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(TR::MemoryReference &,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *),0,OMR,X86::MemoryReference
MemoryReference,MemoryReference(class OMR::X86::AMD64::MemoryReference &&),0,OMR,X86::AMD64::MemoryReference
MemoryReference,MemoryReference(intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *),0,OMR,X86::AMD64::MemoryReference
MemoryReference,MemoryReference(const class OMR::X86::AMD64::MemoryReference &),0,OMR,X86::AMD64::MemoryReference
MemoryReference,MemoryReference(TR::Node *,TR::CodeGenerator *,_Bool,class TR_ScratchRegisterManager *),0,OMR,X86::AMD64::MemoryReference
MemoryReference,MemoryReference(TR::SymbolReference *,TR::CodeGenerator *,class TR_ScratchRegisterManager *),0,OMR,X86::AMD64::MemoryReference
MemoryReference,MemoryReference(TR::SymbolReference *,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *),0,OMR,X86::AMD64::MemoryReference
MemoryReference,MemoryReference(class TR::MemoryReference &,intptrj_t,TR::CodeGenerator *,class TR_ScratchRegisterManager *),0,TR,MemoryReference
ModRM,ModRM(uint8_t *),1,OMR,X86::MemoryReference
SIB,SIB(uint8_t *),1,OMR,X86::MemoryReference
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint32_t,uint8_t *,TR::Node *,TR::CodeGenerator *),1,OMR,X86::MemoryReference
addMetaDataForCodeAddressDisplacementOnly,addMetaDataForCodeAddressDisplacementOnly(intptrj_t,uint8_t *,TR::CodeGenerator *),1,OMR,X86::AMD64::MemoryReference
addMetaDataForCodeAddressWithLoad,addMetaDataForCodeAddressWithLoad(uint8_t *,TR::Instruction *,TR::CodeGenerator *),1,OMR,X86::AMD64::MemoryReference
asARMMemoryReference,asARMMemoryReference(),1,OMR,MemoryReference
assignRegisters,assignRegisters(TR::Instruction *,TR::CodeGenerator *),1,OMR,X86::MemoryReference
blockRegisters,blockRegisters(),1,OMR,X86::MemoryReference
checkAndDecReferenceCount,checkAndDecReferenceCount(TR::Node *,rcount_t,TR::CodeGenerator *),1,OMR,X86::MemoryReference
consolidateRegisters,consolidateRegisters(TR::Node *,TR::CodeGenerator *),1,OMR,X86::MemoryReference
convertMultiplierToStride,convertMultiplierToStride(int32_t),1,OMR,X86::MemoryReference
decNodeReferenceCounts,decNodeReferenceCounts(TR::CodeGenerator *),1,OMR,X86::MemoryReference
enlarge,enlarge(TR::CodeGenerator *,int32_t,int32_t,_Bool),1,OMR,X86::MemoryReference
estimateBinaryLength,estimateBinaryLength(TR::CodeGenerator *),1,OMR,X86::MemoryReference
evaluate,evaluate(TR::Node *,TR::CodeGenerator *,TR::Node *),1,OMR,X86::MemoryReference
finishInitialization,finishInitialization(TR::CodeGenerator *,class TR_ScratchRegisterManager *),1,OMR,X86::AMD64::MemoryReference
generateBinaryEncoding,generateBinaryEncoding(uint8_t *,TR::Instruction *,TR::CodeGenerator *),1,OMR,X86::MemoryReference
getAddressRegister,getAddressRegister(),1,OMR,X86::MemoryReference
getBaseNode,getBaseNode(),1,OMR,X86::MemoryReference
getBaseRegister,getBaseRegister(),1,OMR,X86::MemoryReference
getBinaryLengthLowerBound,getBinaryLengthLowerBound(TR::CodeGenerator *),1,OMR,X86::MemoryReference
getDataSnippet,getDataSnippet(),1,OMR,X86::MemoryReference
getDisplacement,getDisplacement(),1,OMR,X86::MemoryReference
getFlags,getFlags(),1,OMR,X86::MemoryReference
getIndexNode,getIndexNode(),1,OMR,X86::MemoryReference
getIndexRegister,getIndexRegister(),1,OMR,X86::MemoryReference
getLabel,getLabel(),1,OMR,X86::MemoryReference
getNextRegister,getNextRegister(TR::Register *),1,OMR,X86::MemoryReference
getNumMRReferencedGPRegisters,getNumMRReferencedGPRegisters(),1,OMR,X86::MemoryReference
getReloKind,getReloKind(),1,OMR,X86::MemoryReference
getStride,getStride(),1,OMR,X86::MemoryReference
getStrideForNode,getStrideForNode(TR::Node *,TR::CodeGenerator *),1,OMR,X86::MemoryReference
getStrideMultiplier,getStrideMultiplier(),1,OMR,X86::MemoryReference
getSymbolReference,getSymbolReference(),1,OMR,X86::MemoryReference
getUnresolvedDataSnippet,getUnresolvedDataSnippet(),1,OMR,X86::MemoryReference
hasUnresolvedDataSnippet,hasUnresolvedDataSnippet(),1,OMR,X86::MemoryReference
hasUnresolvedVirtualCallSnippet,hasUnresolvedVirtualCallSnippet(),1,OMR,X86::MemoryReference
ignoreVolatile,ignoreVolatile(),1,OMR,X86::MemoryReference
inUpcastingMode,inUpcastingMode(),1,OMR,X86::MemoryReference
initialize,initialize(TR::SymbolReference *,TR::CodeGenerator *),1,OMR,X86::MemoryReference
isForceSIBByte,isForceSIBByte(),1,OMR,X86::MemoryReference
isForceWideDisplacement,isForceWideDisplacement(),1,OMR,X86::MemoryReference
isValidStrideMultiplier,isValidStrideMultiplier(int32_t),1,OMR,X86::MemoryReference
isValidStrideShift,isValidStrideShift(int32_t),1,OMR,X86::MemoryReference
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,MemoryReference
jitPersistentFree,jitPersistentFree(void *),1,OMR,MemoryReference
needsAddressLoadInstruction,needsAddressLoadInstruction(intptrj_t,TR::CodeGenerator *),1,OMR,X86::AMD64::MemoryReference
needsCodeAbsoluteExternalRelocation,needsCodeAbsoluteExternalRelocation(),1,OMR,X86::MemoryReference
needsSIBByte,needsSIBByte(),1,OMR,X86::MemoryReference
operator delete,operator delete(void *,size_t),1,OMR,MemoryReference
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,MemoryReference
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,MemoryReference
operator delete,operator delete(void *,TR::Region &),0,OMR,MemoryReference
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,MemoryReference
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,MemoryReference
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,MemoryReference
operator delete[],operator delete[](void *,TR::Region &),0,OMR,MemoryReference
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,MemoryReference
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,MemoryReference
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,MemoryReference
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,MemoryReference
operator new,operator new(size_t,TR::Region &),0,OMR,MemoryReference
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,MemoryReference
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,MemoryReference
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,MemoryReference
operator new[],operator new[](size_t,TR::Region &),1,OMR,MemoryReference
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,MemoryReference
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,MemoryReference
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,MemoryReference
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,MemoryReference
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,MemoryReference
operator=,operator=(class OMR::MemoryReference &&),1,OMR,MemoryReference
operator=,operator=(const class OMR::MemoryReference &),0,OMR,MemoryReference
operator=,operator=(class OMR::X86::MemoryReference &&),0,OMR,X86::MemoryReference
operator=,operator=(const class OMR::X86::MemoryReference &),0,OMR,X86::MemoryReference
operator=,operator=(const class OMR::X86::AMD64::MemoryReference &),0,OMR,X86::AMD64::MemoryReference
operator=,operator=(class OMR::X86::AMD64::MemoryReference &&),0,OMR,X86::AMD64::MemoryReference
operator=,operator=(class TR::MemoryReference &&),0,TR,MemoryReference
operator=,operator=(const class TR::MemoryReference &),0,TR,MemoryReference
populateMemoryReference,populateMemoryReference(TR::Node *,TR::CodeGenerator *,TR::Node *),1,OMR,X86::MemoryReference
processAsFPVolatile,processAsFPVolatile(),1,OMR,X86::MemoryReference
processAsLongVolatileHigh,processAsLongVolatileHigh(),1,OMR,X86::MemoryReference
processAsLongVolatileLow,processAsLongVolatileLow(),1,OMR,X86::MemoryReference
refsRegister,refsRegister(TR::Register *),1,OMR,X86::MemoryReference
requiresLockPrefix,requiresLockPrefix(),1,OMR,X86::MemoryReference
rexBits,rexBits(),1,OMR,X86::MemoryReference
self,self(),1,OMR,MemoryReference
setBaseNode,setBaseNode(TR::Node *),1,OMR,X86::MemoryReference
setBaseRegister,setBaseRegister(TR::Register *),1,OMR,X86::MemoryReference
setConstantDataSnippet,setConstantDataSnippet(TR::IA32DataSnippet *),1,OMR,X86::MemoryReference
setFlags,setFlags(uint8_t),1,OMR,X86::MemoryReference
setForceSIBByte,setForceSIBByte(),1,OMR,X86::MemoryReference
setForceWideDisplacement,setForceWideDisplacement(),1,OMR,X86::MemoryReference
setHasUnresolvedDataSnippet,setHasUnresolvedDataSnippet(),1,OMR,X86::MemoryReference
setHasUnresolvedVirtualCallSnippet,setHasUnresolvedVirtualCallSnippet(),1,OMR,X86::MemoryReference
setIgnoreVolatile,setIgnoreVolatile(),1,OMR,X86::MemoryReference
setInUpcastingMode,setInUpcastingMode(_Bool),1,OMR,X86::MemoryReference
setIndexNode,setIndexNode(TR::Node *),1,OMR,X86::MemoryReference
setIndexRegister,setIndexRegister(TR::Register *),1,OMR,X86::MemoryReference
setLabel,setLabel(TR::LabelSymbol *),1,OMR,X86::MemoryReference
setNeedsCodeAbsoluteExternalRelocation,setNeedsCodeAbsoluteExternalRelocation(),1,OMR,X86::MemoryReference
setPreferRIPRelative,setPreferRIPRelative(_Bool),1,OMR,X86::AMD64::MemoryReference
setProcessAsFPVolatile,setProcessAsFPVolatile(),1,OMR,X86::MemoryReference
setProcessAsLongVolatileHigh,setProcessAsLongVolatileHigh(),1,OMR,X86::MemoryReference
setProcessAsLongVolatileLow,setProcessAsLongVolatileLow(),1,OMR,X86::MemoryReference
setReloKind,setReloKind(int32_t),1,OMR,X86::MemoryReference
setRequiresLockPrefix,setRequiresLockPrefix(),1,OMR,X86::MemoryReference
setStride,setStride(uint8_t),1,OMR,X86::MemoryReference
setStrideFieldInSIB,setStrideFieldInSIB(uint8_t *),1,OMR,X86::MemoryReference
setStrideFromMultiplier,setStrideFromMultiplier(uint8_t),1,OMR,X86::MemoryReference
setUnresolvedDataSnippet,setUnresolvedDataSnippet(TR::UnresolvedDataSnippet *),1,OMR,X86::MemoryReference
stopUsingRegisters,stopUsingRegisters(TR::CodeGenerator *),1,OMR,X86::MemoryReference
unblockRegisters,unblockRegisters(),1,OMR,X86::MemoryReference
useRegisters,useRegisters(TR::Instruction *,TR::CodeGenerator *),1,OMR,X86::MemoryReference
~MemoryReference,~MemoryReference(),1,OMR,MemoryReference
IA32ConstantDataSnippet,IA32ConstantDataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t),1,TR,IA32ConstantDataSnippet
IA32DataSnippet,IA32DataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t),1,TR,IA32DataSnippet
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,IA32DataSnippet
getConstantSize,getConstantSize(),1,TR,IA32ConstantDataSnippet
getDataAs2Bytes,getDataAs2Bytes(),1,TR,IA32DataSnippet
getDataAs4Bytes,getDataAs4Bytes(),1,TR,IA32DataSnippet
getDataAs8Bytes,getDataAs8Bytes(),1,TR,IA32DataSnippet
getDataSize,getDataSize(),1,TR,IA32DataSnippet
getValue,getValue(),1,TR,IA32DataSnippet
operator=,operator=(const class TR::IA32DataSnippet &),0,TR,IA32DataSnippet
operator=,operator=(class TR::IA32DataSnippet &&),0,TR,IA32DataSnippet
operator=,operator=(class TR::IA32ConstantDataSnippet &&),0,TR,IA32ConstantDataSnippet
operator=,operator=(const class TR::IA32ConstantDataSnippet &),0,TR,IA32ConstantDataSnippet
setClassAddress,setClassAddress(_Bool),1,TR,IA32DataSnippet
~IA32ConstantDataSnippet,~IA32ConstantDataSnippet(),1,TR,IA32ConstantDataSnippet
~IA32DataSnippet,~IA32DataSnippet(),1,TR,IA32DataSnippet
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Machine
operator new,operator new(size_t,TR::Region &),1,OMR,Machine
create,create(TR::ILOpCodes,uint16_t,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *,TR::Node *),1,OMR,Node
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,OMR,Register
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Register
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Register
RegisterPair,RegisterPair(const class OMR::RegisterPair &),1,OMR,RegisterPair
RegisterPair,RegisterPair(class OMR::RegisterPair &&),0,OMR,RegisterPair
bitwise32,bitwise32(TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),1,TR,X86ComputeCC
setCarryBorrow,setCarryBorrow(TR::Node *,_Bool,TR::CodeGenerator *),1,TR,X86ComputeCC
findPostCondition,findPostCondition(TR::Register *),1,OMR,X86::RegisterDependencyConditions
findPostCondition,findPostCondition(TR::class RealRegister::RegNum),0,OMR,X86::RegisterDependencyConditions
findPreCondition,findPreCondition(TR::Register *),1,OMR,X86::RegisterDependencyConditions
findPreCondition,findPreCondition(TR::class RealRegister::RegNum),0,OMR,X86::RegisterDependencyConditions
operator new,operator new(size_t,class TR_PersistentMemory *),1,OMR,RegisterDependencyConditions
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,RegisterDependencyConditions
AMD64Imm64Instruction,AMD64Imm64Instruction(class TR::AMD64Imm64Instruction &&),1,TR,AMD64Imm64Instruction
AMD64Imm64Instruction,AMD64Imm64Instruction(const class TR::AMD64Imm64Instruction &),0,TR,AMD64Imm64Instruction
AMD64Imm64Instruction,AMD64Imm64Instruction(TR::RegisterDependencyConditions *,uint64_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,AMD64Imm64Instruction
AMD64Imm64Instruction,AMD64Imm64Instruction(uint64_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,AMD64Imm64Instruction
AMD64Imm64Instruction,AMD64Imm64Instruction(uint64_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,AMD64Imm64Instruction
AMD64Imm64Instruction,AMD64Imm64Instruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,AMD64Imm64Instruction
AMD64Imm64Instruction,AMD64Imm64Instruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::CodeGenerator *),0,TR,AMD64Imm64Instruction
AMD64Imm64Instruction,AMD64Imm64Instruction(TR::RegisterDependencyConditions *,uint64_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,AMD64Imm64Instruction
AMD64Imm64Instruction,AMD64Imm64Instruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,AMD64Imm64Instruction
AMD64Imm64Instruction,AMD64Imm64Instruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::CodeGenerator *),0,TR,AMD64Imm64Instruction
AMD64Imm64SymInstruction,AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),1,TR,AMD64Imm64SymInstruction
AMD64Imm64SymInstruction,AMD64Imm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,AMD64Imm64SymInstruction
AMD64Imm64SymInstruction,AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,AMD64Imm64SymInstruction
AMD64Imm64SymInstruction,AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *,uint8_t *),0,TR,AMD64Imm64SymInstruction
AMD64Imm64SymInstruction,AMD64Imm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,AMD64Imm64SymInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,AMD64Imm64Instruction
getSourceImmediate,getSourceImmediate(),1,TR,AMD64Imm64Instruction
getSymbolReference,getSymbolReference(),1,TR,AMD64Imm64SymInstruction
operator=,operator=(const class TR::AMD64Imm64Instruction &),0,TR,AMD64Imm64Instruction
operator=,operator=(class TR::AMD64Imm64Instruction &&),0,TR,AMD64Imm64Instruction
operator=,operator=(class TR::AMD64Imm64SymInstruction &&),0,TR,AMD64Imm64SymInstruction
operator=,operator=(const class TR::AMD64Imm64SymInstruction &),0,TR,AMD64Imm64SymInstruction
setSourceImmediate,setSourceImmediate(uint64_t),1,TR,AMD64Imm64Instruction
setSymbolReference,setSymbolReference(TR::SymbolReference *),1,TR,AMD64Imm64SymInstruction
~AMD64Imm64Instruction,~AMD64Imm64Instruction(),1,TR,AMD64Imm64Instruction
~AMD64Imm64SymInstruction,~AMD64Imm64SymInstruction(),1,TR,AMD64Imm64SymInstruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t),1,TR,AMD64RegImm64Instruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(uint64_t,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t),0,TR,AMD64RegImm64Instruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(uint64_t,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t),0,TR,AMD64RegImm64Instruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t),0,TR,AMD64RegImm64Instruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t),0,TR,AMD64RegImm64Instruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t),0,TR,AMD64RegImm64Instruction
AMD64RegImm64SymInstruction,AMD64RegImm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *),1,TR,AMD64RegImm64SymInstruction
AMD64RegImm64SymInstruction,AMD64RegImm64SymInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,AMD64RegImm64SymInstruction
X86RegInstruction,X86RegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::CodeGenerator *),1,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(const class TR::X86RegInstruction &),0,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(class TR::X86RegInstruction &&),0,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *),0,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(TR::RegisterDependencyConditions *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86RegInstruction
aboutToAssignTargetRegister,aboutToAssignTargetRegister(),1,TR,X86RegInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,AMD64RegImm64Instruction
applyTargetRegisterToModRMByte,applyTargetRegisterToModRMByte(uint8_t *),1,TR,X86RegInstruction
autoSetReloKind,autoSetReloKind(),1,TR,AMD64RegImm64SymInstruction
getIA32RegMemInstruction,getIA32RegMemInstruction(),1,TR,X86RegInstruction
getIA32RegRegInstruction,getIA32RegRegInstruction(),1,TR,X86RegInstruction
getReloKind,getReloKind(),1,TR,AMD64RegImm64Instruction
getSourceImmediate,getSourceImmediate(),1,TR,AMD64RegImm64Instruction
getSymbolReference,getSymbolReference(),1,TR,AMD64RegImm64SymInstruction
operator=,operator=(class TR::X86RegInstruction &&),0,TR,X86RegInstruction
operator=,operator=(const class TR::X86RegInstruction &),0,TR,X86RegInstruction
operator=,operator=(const class TR::AMD64RegImm64Instruction &),0,TR,AMD64RegImm64Instruction
operator=,operator=(class TR::AMD64RegImm64Instruction &&),0,TR,AMD64RegImm64Instruction
operator=,operator=(class TR::AMD64RegImm64SymInstruction &&),0,TR,AMD64RegImm64SymInstruction
operator=,operator=(const class TR::AMD64RegImm64SymInstruction &),0,TR,AMD64RegImm64SymInstruction
setReloKind,setReloKind(int32_t),1,TR,AMD64RegImm64Instruction
setSourceImmediate,setSourceImmediate(uint64_t),1,TR,AMD64RegImm64Instruction
setSymbolReference,setSymbolReference(TR::SymbolReference *),1,TR,AMD64RegImm64SymInstruction
setTargetRegister,setTargetRegister(TR::Register *),1,TR,X86RegInstruction
targetRegisterRexBits,targetRegisterRexBits(),1,TR,X86RegInstruction
~AMD64RegImm64Instruction,~AMD64RegImm64Instruction(),1,TR,AMD64RegImm64Instruction
~AMD64RegImm64SymInstruction,~AMD64RegImm64SymInstruction(),1,TR,AMD64RegImm64SymInstruction
~X86RegInstruction,~X86RegInstruction(),1,TR,X86RegInstruction
X86AlignmentInstruction,X86AlignmentInstruction(TR::Node *,uint8_t,TR::CodeGenerator *),1,TR,X86AlignmentInstruction
X86AlignmentInstruction,X86AlignmentInstruction(TR::Instruction *,uint8_t,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86AlignmentInstruction
X86AlignmentInstruction,X86AlignmentInstruction(TR::Instruction *,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86AlignmentInstruction
X86AlignmentInstruction,X86AlignmentInstruction(TR::Node *,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86AlignmentInstruction
X86AlignmentInstruction,X86AlignmentInstruction(TR::Node *,uint8_t,uint8_t,TR::CodeGenerator *),0,TR,X86AlignmentInstruction
X86AlignmentInstruction,X86AlignmentInstruction(TR::Node *,uint8_t,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86AlignmentInstruction
X86AlignmentInstruction,X86AlignmentInstruction(TR::Instruction *,uint8_t,uint8_t,TR::CodeGenerator *),0,TR,X86AlignmentInstruction
X86AlignmentInstruction,X86AlignmentInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *),0,TR,X86AlignmentInstruction
getBoundary,getBoundary(),1,TR,X86AlignmentInstruction
getMargin,getMargin(),1,TR,X86AlignmentInstruction
operator=,operator=(class TR::X86AlignmentInstruction &&),0,TR,X86AlignmentInstruction
operator=,operator=(const class TR::X86AlignmentInstruction &),0,TR,X86AlignmentInstruction
~X86AlignmentInstruction,~X86AlignmentInstruction(),1,TR,X86AlignmentInstruction
X86BoundaryAvoidanceInstruction,X86BoundaryAvoidanceInstruction(class TR::X86BoundaryAvoidanceInstruction &&),1,TR,X86BoundaryAvoidanceInstruction
X86BoundaryAvoidanceInstruction,X86BoundaryAvoidanceInstruction(int32_t,const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::Instruction *,TR::CodeGenerator *),0,TR,X86BoundaryAvoidanceInstruction
X86BoundaryAvoidanceInstruction,X86BoundaryAvoidanceInstruction(const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::Instruction *,TR::CodeGenerator *),0,TR,X86BoundaryAvoidanceInstruction
X86BoundaryAvoidanceInstruction,X86BoundaryAvoidanceInstruction(const class TR::X86BoundaryAvoidanceInstruction &),0,TR,X86BoundaryAvoidanceInstruction
X86BoundaryAvoidanceInstruction,X86BoundaryAvoidanceInstruction(TR::Instruction *,const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::CodeGenerator *),0,TR,X86BoundaryAvoidanceInstruction
X86PatchableCodeAlignmentInstruction,X86PatchableCodeAlignmentInstruction(const struct TR_AtomicRegion *,TR::Instruction *,TR::CodeGenerator *),1,TR,X86PatchableCodeAlignmentInstruction
X86PatchableCodeAlignmentInstruction,X86PatchableCodeAlignmentInstruction(const struct TR_AtomicRegion *,TR::Instruction *,int32_t,TR::CodeGenerator *),0,TR,X86PatchableCodeAlignmentInstruction
X86PatchableCodeAlignmentInstruction,X86PatchableCodeAlignmentInstruction(TR::Instruction *,const struct TR_AtomicRegion *,TR::CodeGenerator *),0,TR,X86PatchableCodeAlignmentInstruction
betterPadLength,betterPadLength(int32_t,const struct TR_AtomicRegion *,int32_t),1,TR,X86BoundaryAvoidanceInstruction
getAtomicRegions,getAtomicRegions(),1,TR,X86BoundaryAvoidanceInstruction
getBoundarySpacing,getBoundarySpacing(),1,TR,X86BoundaryAvoidanceInstruction
getMaxPadding,getMaxPadding(),1,TR,X86BoundaryAvoidanceInstruction
getPatchableCode,getPatchableCode(),1,TR,X86PatchableCodeAlignmentInstruction
getSizeOfProtectiveNop,getSizeOfProtectiveNop(),1,TR,X86BoundaryAvoidanceInstruction
getTargetCode,getTargetCode(),1,TR,X86BoundaryAvoidanceInstruction
operator=,operator=(const class TR::X86BoundaryAvoidanceInstruction &),0,TR,X86BoundaryAvoidanceInstruction
operator=,operator=(class TR::X86BoundaryAvoidanceInstruction &&),0,TR,X86BoundaryAvoidanceInstruction
operator=,operator=(class TR::X86PatchableCodeAlignmentInstruction &&),0,TR,X86PatchableCodeAlignmentInstruction
operator=,operator=(const class TR::X86PatchableCodeAlignmentInstruction &),0,TR,X86PatchableCodeAlignmentInstruction
~X86BoundaryAvoidanceInstruction,~X86BoundaryAvoidanceInstruction(),1,TR,X86BoundaryAvoidanceInstruction
~X86PatchableCodeAlignmentInstruction,~X86PatchableCodeAlignmentInstruction(),1,TR,X86PatchableCodeAlignmentInstruction
X86CallMemInstruction,X86CallMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),1,TR,X86CallMemInstruction
X86CallMemInstruction,X86CallMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::CodeGenerator *),0,TR,X86CallMemInstruction
X86CallMemInstruction,X86CallMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86CallMemInstruction
X86MemInstruction,X86MemInstruction(class TR::X86MemInstruction &&),1,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(const class TR::X86MemInstruction &),0,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,TR::Register *),0,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::CodeGenerator *,TR::Register *),0,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(TR::RegisterDependencyConditions *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,TR::Register *),0,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,TR::Register *),0,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::CodeGenerator *,TR::Register *),0,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(TR::RegisterDependencyConditions *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,TR::Register *),0,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,TR::Register *),0,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,TR::Register *),0,TR,X86MemInstruction
getAdjustsFramePointerBy,getAdjustsFramePointerBy(),1,TR,X86CallMemInstruction
operator=,operator=(class TR::X86MemInstruction &&),0,TR,X86MemInstruction
operator=,operator=(const class TR::X86MemInstruction &),0,TR,X86MemInstruction
operator=,operator=(class TR::X86CallMemInstruction &&),0,TR,X86CallMemInstruction
operator=,operator=(const class TR::X86CallMemInstruction &),0,TR,X86CallMemInstruction
setAdjustsFramePointerBy,setAdjustsFramePointerBy(int32_t),1,TR,X86CallMemInstruction
setMemoryReference,setMemoryReference(TR::MemoryReference *,TR::CodeGenerator *),1,TR,X86MemInstruction
~X86CallMemInstruction,~X86CallMemInstruction(),1,TR,X86CallMemInstruction
~X86MemInstruction,~X86MemInstruction(),1,TR,X86MemInstruction
X86FPArithmeticRegRegInstruction,X86FPArithmeticRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),1,TR,X86FPArithmeticRegRegInstruction
X86FPArithmeticRegRegInstruction,X86FPArithmeticRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPArithmeticRegRegInstruction
X86FPRegRegInstruction,X86FPRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *),1,TR,X86FPRegRegInstruction
X86FPRegRegInstruction,X86FPRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPRegRegInstruction
X86FPRegRegInstruction,X86FPRegRegInstruction(TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86FPRegRegInstruction
X86FPRegRegInstruction,X86FPRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86FPRegRegInstruction
X86FPRegRegInstruction,X86FPRegRegInstruction(TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86FPRegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(class TR::X86RegRegInstruction &&),1,TR,X86RegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86RegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86RegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86RegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86RegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86RegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86RegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86RegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(const class TR::X86RegRegInstruction &),0,TR,X86RegRegInstruction
X86RegRegInstruction,X86RegRegInstruction(TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86RegRegInstruction
aboutToAssignSourceRegister,aboutToAssignSourceRegister(),1,TR,X86RegRegInstruction
applyDestinationBitToOpCode,applyDestinationBitToOpCode(uint8_t *,TR::Machine *),1,TR,X86FPArithmeticRegRegInstruction
applyDirectionBitToOpCode,applyDirectionBitToOpCode(uint8_t *,TR::Machine *),1,TR,X86FPArithmeticRegRegInstruction
applyRegistersToOpCode,applyRegistersToOpCode(uint8_t *,TR::Machine *),1,TR,X86FPRegRegInstruction
applySourceRegisterToModRMByte,applySourceRegisterToModRMByte(uint8_t *),1,TR,X86RegRegInstruction
applySourceRegisterToOpCode,applySourceRegisterToOpCode(uint8_t *,TR::Machine *),1,TR,X86FPRegRegInstruction
applyTargetRegisterToOpCode,applyTargetRegisterToOpCode(uint8_t *,TR::Machine *),1,TR,X86FPRegRegInstruction
assignTargetSourceRegisters,assignTargetSourceRegisters(),1,TR,X86FPRegRegInstruction
operator=,operator=(class TR::X86RegRegInstruction &&),0,TR,X86RegRegInstruction
operator=,operator=(const class TR::X86RegRegInstruction &),0,TR,X86RegRegInstruction
operator=,operator=(class TR::X86FPRegRegInstruction &&),0,TR,X86FPRegRegInstruction
operator=,operator=(const class TR::X86FPRegRegInstruction &),0,TR,X86FPRegRegInstruction
operator=,operator=(class TR::X86FPArithmeticRegRegInstruction &&),0,TR,X86FPArithmeticRegRegInstruction
operator=,operator=(const class TR::X86FPArithmeticRegRegInstruction &),0,TR,X86FPArithmeticRegRegInstruction
setSourceRegister,setSourceRegister(TR::Register *),1,TR,X86RegRegInstruction
sourceRegisterRexBits,sourceRegisterRexBits(),1,TR,X86RegRegInstruction
~X86FPArithmeticRegRegInstruction,~X86FPArithmeticRegRegInstruction(),1,TR,X86FPArithmeticRegRegInstruction
~X86FPRegRegInstruction,~X86FPRegRegInstruction(),1,TR,X86FPRegRegInstruction
~X86RegRegInstruction,~X86RegRegInstruction(),1,TR,X86RegRegInstruction
X86FPCompareEvalInstruction,X86FPCompareEvalInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *),1,TR,X86FPCompareEvalInstruction
X86FPCompareEvalInstruction,X86FPCompareEvalInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86FPCompareEvalInstruction
operator=,operator=(class TR::X86FPCompareEvalInstruction &&),0,TR,X86FPCompareEvalInstruction
operator=,operator=(const class TR::X86FPCompareEvalInstruction &),0,TR,X86FPCompareEvalInstruction
~X86FPCompareEvalInstruction,~X86FPCompareEvalInstruction(),1,TR,X86FPCompareEvalInstruction
X86FPCompareRegRegInstruction,X86FPCompareRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),1,TR,X86FPCompareRegRegInstruction
X86FPCompareRegRegInstruction,X86FPCompareRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPCompareRegRegInstruction
operator=,operator=(const class TR::X86FPCompareRegRegInstruction &),0,TR,X86FPCompareRegRegInstruction
operator=,operator=(class TR::X86FPCompareRegRegInstruction &&),0,TR,X86FPCompareRegRegInstruction
swapOperands,swapOperands(),1,TR,X86FPCompareRegRegInstruction
~X86FPCompareRegRegInstruction,~X86FPCompareRegRegInstruction(),1,TR,X86FPCompareRegRegInstruction
X86FPMemRegInstruction,X86FPMemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *),1,TR,X86FPMemRegInstruction
X86FPMemRegInstruction,X86FPMemRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPMemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(class TR::X86MemRegInstruction &&),1,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *),0,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *),0,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(const class TR::X86MemRegInstruction &),0,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(TR::Register *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(TR::Register *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86MemRegInstruction
aboutToAssignSourceRegister,aboutToAssignSourceRegister(),1,TR,X86MemRegInstruction
operator=,operator=(class TR::X86MemRegInstruction &&),0,TR,X86MemRegInstruction
operator=,operator=(const class TR::X86MemRegInstruction &),0,TR,X86MemRegInstruction
operator=,operator=(const class TR::X86FPMemRegInstruction &),0,TR,X86FPMemRegInstruction
operator=,operator=(class TR::X86FPMemRegInstruction &&),0,TR,X86FPMemRegInstruction
setSourceRegister,setSourceRegister(TR::Register *),1,TR,X86MemRegInstruction
~X86FPMemRegInstruction,~X86FPMemRegInstruction(),1,TR,X86FPMemRegInstruction
~X86MemRegInstruction,~X86MemRegInstruction(),1,TR,X86MemRegInstruction
X86FPRegInstruction,X86FPRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::CodeGenerator *),1,TR,X86FPRegInstruction
X86FPRegInstruction,X86FPRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPRegInstruction
applyTargetRegisterToOpCode,applyTargetRegisterToOpCode(uint8_t *),1,TR,X86FPRegInstruction
operator=,operator=(const class TR::X86FPRegInstruction &),0,TR,X86FPRegInstruction
operator=,operator=(class TR::X86FPRegInstruction &&),0,TR,X86FPRegInstruction
~X86FPRegInstruction,~X86FPRegInstruction(),1,TR,X86FPRegInstruction
X86FPRegMemInstruction,X86FPRegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *),1,TR,X86FPRegMemInstruction
X86FPRegMemInstruction,X86FPRegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *),0,TR,X86FPRegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(class TR::X86RegMemInstruction &&),1,TR,X86RegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(const class TR::X86RegMemInstruction &),0,TR,X86RegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(TR::MemoryReference *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86RegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86RegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86RegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *),0,TR,X86RegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(TR::MemoryReference *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86RegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *),0,TR,X86RegMemInstruction
operator=,operator=(const class TR::X86RegMemInstruction &),0,TR,X86RegMemInstruction
operator=,operator=(class TR::X86RegMemInstruction &&),0,TR,X86RegMemInstruction
operator=,operator=(class TR::X86FPRegMemInstruction &&),0,TR,X86FPRegMemInstruction
operator=,operator=(const class TR::X86FPRegMemInstruction &),0,TR,X86FPRegMemInstruction
setMemoryReference,setMemoryReference(TR::MemoryReference *,TR::CodeGenerator *),1,TR,X86RegMemInstruction
~X86FPRegMemInstruction,~X86FPRegMemInstruction(),1,TR,X86FPRegMemInstruction
~X86RegMemInstruction,~X86RegMemInstruction(),1,TR,X86RegMemInstruction
X86FPRemainderRegRegInstruction,X86FPRemainderRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),1,TR,X86FPRemainderRegRegInstruction
X86FPRemainderRegRegInstruction,X86FPRemainderRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86FPRemainderRegRegInstruction
X86FPRemainderRegRegInstruction,X86FPRemainderRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPRemainderRegRegInstruction
X86FPST0ST1RegRegInstruction,X86FPST0ST1RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),1,TR,X86FPST0ST1RegRegInstruction
X86FPST0ST1RegRegInstruction,X86FPST0ST1RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86FPST0ST1RegRegInstruction
X86FPST0ST1RegRegInstruction,X86FPST0ST1RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPST0ST1RegRegInstruction
operator=,operator=(class TR::X86FPST0ST1RegRegInstruction &&),0,TR,X86FPST0ST1RegRegInstruction
operator=,operator=(const class TR::X86FPST0ST1RegRegInstruction &),0,TR,X86FPST0ST1RegRegInstruction
operator=,operator=(const class TR::X86FPRemainderRegRegInstruction &),0,TR,X86FPRemainderRegRegInstruction
operator=,operator=(class TR::X86FPRemainderRegRegInstruction &&),0,TR,X86FPRemainderRegRegInstruction
~X86FPRemainderRegRegInstruction,~X86FPRemainderRegRegInstruction(),1,TR,X86FPRemainderRegRegInstruction
~X86FPST0ST1RegRegInstruction,~X86FPST0ST1RegRegInstruction(),1,TR,X86FPST0ST1RegRegInstruction
X86FPST0STiRegRegInstruction,X86FPST0STiRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),1,TR,X86FPST0STiRegRegInstruction
X86FPST0STiRegRegInstruction,X86FPST0STiRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPST0STiRegRegInstruction
operator=,operator=(class TR::X86FPST0STiRegRegInstruction &&),0,TR,X86FPST0STiRegRegInstruction
operator=,operator=(const class TR::X86FPST0STiRegRegInstruction &),0,TR,X86FPST0STiRegRegInstruction
~X86FPST0STiRegRegInstruction,~X86FPST0STiRegRegInstruction(),1,TR,X86FPST0STiRegRegInstruction
X86FPSTiST0RegRegInstruction,X86FPSTiST0RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *,_Bool),1,TR,X86FPSTiST0RegRegInstruction
X86FPSTiST0RegRegInstruction,X86FPSTiST0RegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *,_Bool),0,TR,X86FPSTiST0RegRegInstruction
operator=,operator=(class TR::X86FPSTiST0RegRegInstruction &&),0,TR,X86FPSTiST0RegRegInstruction
operator=,operator=(const class TR::X86FPSTiST0RegRegInstruction &),0,TR,X86FPSTiST0RegRegInstruction
~X86FPSTiST0RegRegInstruction,~X86FPSTiST0RegRegInstruction(),1,TR,X86FPSTiST0RegRegInstruction
X86FenceInstruction,X86FenceInstruction(enum TR_X86OpCodes,TR::Node *,TR::Node *,TR::CodeGenerator *),1,TR,X86FenceInstruction
X86FenceInstruction,X86FenceInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Node *,TR::CodeGenerator *),0,TR,X86FenceInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,X86FenceInstruction
getFenceNode,getFenceNode(),1,TR,X86FenceInstruction
operator=,operator=(class TR::X86FenceInstruction &&),0,TR,X86FenceInstruction
operator=,operator=(const class TR::X86FenceInstruction &),0,TR,X86FenceInstruction
~X86FenceInstruction,~X86FenceInstruction(),1,TR,X86FenceInstruction
X86ImmInstruction,X86ImmInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::CodeGenerator *,int32_t),1,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t),0,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t),0,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::CodeGenerator *,int32_t),0,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t),0,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(TR::RegisterDependencyConditions *,int32_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t),0,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(int32_t,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t),0,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(int32_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t),0,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(TR::RegisterDependencyConditions *,int32_t,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t),0,TR,X86ImmInstruction
X86ImmSnippetInstruction,X86ImmSnippetInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::UnresolvedDataSnippet *,TR::CodeGenerator *),1,TR,X86ImmSnippetInstruction
X86ImmSnippetInstruction,X86ImmSnippetInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::UnresolvedDataSnippet *,TR::CodeGenerator *),0,TR,X86ImmSnippetInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,X86ImmInstruction
getAdjustsFramePointerBy,getAdjustsFramePointerBy(),1,TR,X86ImmInstruction
getReloKind,getReloKind(),1,TR,X86ImmInstruction
getSourceImmediate,getSourceImmediate(),1,TR,X86ImmInstruction
getSourceImmediateAsAddress,getSourceImmediateAsAddress(),1,TR,X86ImmInstruction
getUnresolvedSnippet,getUnresolvedSnippet(),1,TR,X86ImmSnippetInstruction
operator=,operator=(class TR::X86ImmInstruction &&),0,TR,X86ImmInstruction
operator=,operator=(const class TR::X86ImmInstruction &),0,TR,X86ImmInstruction
operator=,operator=(class TR::X86ImmSnippetInstruction &&),0,TR,X86ImmSnippetInstruction
operator=,operator=(const class TR::X86ImmSnippetInstruction &),0,TR,X86ImmSnippetInstruction
setAdjustsFramePointerBy,setAdjustsFramePointerBy(int32_t),1,TR,X86ImmInstruction
setReloKind,setReloKind(int32_t),1,TR,X86ImmInstruction
setSourceImmediate,setSourceImmediate(int32_t),1,TR,X86ImmInstruction
setUnresolvedSnippet,setUnresolvedSnippet(TR::UnresolvedDataSnippet *),1,TR,X86ImmSnippetInstruction
~X86ImmInstruction,~X86ImmInstruction(),1,TR,X86ImmInstruction
~X86ImmSnippetInstruction,~X86ImmSnippetInstruction(),1,TR,X86ImmSnippetInstruction
X86ImmSymInstruction,X86ImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),1,TR,X86ImmSymInstruction
X86ImmSymInstruction,X86ImmSymInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,X86ImmSymInstruction
X86ImmSymInstruction,X86ImmSymInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86ImmSymInstruction
X86ImmSymInstruction,X86ImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,X86ImmSymInstruction
getSymbolReference,getSymbolReference(),1,TR,X86ImmSymInstruction
operator=,operator=(const class TR::X86ImmSymInstruction &),0,TR,X86ImmSymInstruction
operator=,operator=(class TR::X86ImmSymInstruction &&),0,TR,X86ImmSymInstruction
setSymbolReference,setSymbolReference(TR::SymbolReference *),1,TR,X86ImmSymInstruction
~X86ImmSymInstruction,~X86ImmSymInstruction(),1,TR,X86ImmSymInstruction
X86LabelInstruction,X86LabelInstruction(TR::LabelSymbol *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,_Bool),1,TR,X86LabelInstruction
X86LabelInstruction,X86LabelInstruction(TR::LabelSymbol *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,_Bool),0,TR,X86LabelInstruction
X86LabelInstruction,X86LabelInstruction(enum TR_X86OpCodes,TR::Node *,TR::LabelSymbol *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,_Bool),0,TR,X86LabelInstruction
X86LabelInstruction,X86LabelInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::LabelSymbol *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,_Bool),0,TR,X86LabelInstruction
X86LabelInstruction,X86LabelInstruction(enum TR_X86OpCodes,TR::Node *,TR::LabelSymbol *,TR::CodeGenerator *,_Bool),0,TR,X86LabelInstruction
X86LabelInstruction,X86LabelInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::LabelSymbol *,TR::CodeGenerator *,_Bool),0,TR,X86LabelInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,X86LabelInstruction
addPostDepsToOutlinedInstructionsBranch,addPostDepsToOutlinedInstructionsBranch(),1,TR,X86LabelInstruction
assignOutlinedInstructions,assignOutlinedInstructions(enum TR_RegisterKinds,TR::X86LabelInstruction *),1,TR,X86LabelInstruction
getNeedToClearFPStack,getNeedToClearFPStack(),1,TR,X86LabelInstruction
getReloType,getReloType(),1,TR,X86LabelInstruction
operator=,operator=(class TR::X86LabelInstruction &&),0,TR,X86LabelInstruction
operator=,operator=(const class TR::X86LabelInstruction &),0,TR,X86LabelInstruction
prohibitShortening,prohibitShortening(),1,TR,X86LabelInstruction
setLabelSymbol,setLabelSymbol(TR::LabelSymbol *),1,TR,X86LabelInstruction
setNeedToClearFPStack,setNeedToClearFPStack(_Bool),1,TR,X86LabelInstruction
setOutlinedInstructionBranch,setOutlinedInstructionBranch(TR::X86LabelInstruction *),1,TR,X86LabelInstruction
setReloType,setReloType(uint8_t),1,TR,X86LabelInstruction
~X86LabelInstruction,~X86LabelInstruction(),1,TR,X86LabelInstruction
X86MemImmInstruction,X86MemImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,int32_t,TR::CodeGenerator *,int32_t),1,TR,X86MemImmInstruction
X86MemImmInstruction,X86MemImmInstruction(int32_t,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t),0,TR,X86MemImmInstruction
X86MemImmInstruction,X86MemImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,int32_t,TR::CodeGenerator *,int32_t),0,TR,X86MemImmInstruction
X86MemImmInstruction,X86MemImmInstruction(int32_t,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t),0,TR,X86MemImmInstruction
X86MemImmSymInstruction,X86MemImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,int32_t,TR::SymbolReference *,TR::CodeGenerator *),1,TR,X86MemImmSymInstruction
X86MemImmSymInstruction,X86MemImmSymInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,int32_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,X86MemImmSymInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,X86MemImmInstruction
getSourceImmediate,getSourceImmediate(),1,TR,X86MemImmInstruction
getSourceImmediateAsAddress,getSourceImmediateAsAddress(),1,TR,X86MemImmInstruction
getSymbolReference,getSymbolReference(),1,TR,X86MemImmSymInstruction
operator=,operator=(class TR::X86MemImmInstruction &&),0,TR,X86MemImmInstruction
operator=,operator=(const class TR::X86MemImmInstruction &),0,TR,X86MemImmInstruction
operator=,operator=(const class TR::X86MemImmSymInstruction &),0,TR,X86MemImmSymInstruction
operator=,operator=(class TR::X86MemImmSymInstruction &&),0,TR,X86MemImmSymInstruction
setSourceImmediate,setSourceImmediate(int32_t),1,TR,X86MemImmInstruction
setSymbolReference,setSymbolReference(TR::SymbolReference *),1,TR,X86MemImmSymInstruction
~X86MemImmInstruction,~X86MemImmInstruction(),1,TR,X86MemImmInstruction
~X86MemImmSymInstruction,~X86MemImmSymInstruction(),1,TR,X86MemImmSymInstruction
X86MemRegImmInstruction,X86MemRegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,int32_t,TR::CodeGenerator *),1,TR,X86MemRegImmInstruction
X86MemRegImmInstruction,X86MemRegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,int32_t,TR::CodeGenerator *),0,TR,X86MemRegImmInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,X86MemRegImmInstruction
getSourceImmediate,getSourceImmediate(),1,TR,X86MemRegImmInstruction
getSourceImmediateAsAddress,getSourceImmediateAsAddress(),1,TR,X86MemRegImmInstruction
operator=,operator=(const class TR::X86MemRegImmInstruction &),0,TR,X86MemRegImmInstruction
operator=,operator=(class TR::X86MemRegImmInstruction &&),0,TR,X86MemRegImmInstruction
setSourceImmediate,setSourceImmediate(int32_t),1,TR,X86MemRegImmInstruction
~X86MemRegImmInstruction,~X86MemRegImmInstruction(),1,TR,X86MemRegImmInstruction
X86MemRegRegInstruction,X86MemRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::Register *,TR::CodeGenerator *),1,TR,X86MemRegRegInstruction
X86MemRegRegInstruction,X86MemRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86MemRegRegInstruction
X86MemRegRegInstruction,X86MemRegRegInstruction(TR::Register *,TR::Register *,TR::MemoryReference *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86MemRegRegInstruction
X86MemRegRegInstruction,X86MemRegRegInstruction(TR::Register *,TR::Register *,TR::MemoryReference *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86MemRegRegInstruction
X86MemRegRegInstruction,X86MemRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86MemRegRegInstruction
X86MemRegRegInstruction,X86MemRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86MemRegRegInstruction
aboutToAssignSourceRightRegister,aboutToAssignSourceRightRegister(),1,TR,X86MemRegRegInstruction
operator=,operator=(class TR::X86MemRegRegInstruction &&),0,TR,X86MemRegRegInstruction
operator=,operator=(const class TR::X86MemRegRegInstruction &),0,TR,X86MemRegRegInstruction
setSourceRightRegister,setSourceRightRegister(TR::Register *),1,TR,X86MemRegRegInstruction
~X86MemRegRegInstruction,~X86MemRegRegInstruction(),1,TR,X86MemRegRegInstruction
X86MemTableInstruction,X86MemTableInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,ncount_t,TR::CodeGenerator *),1,TR,X86MemTableInstruction
X86MemTableInstruction,X86MemTableInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,ncount_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86MemTableInstruction
addRelocation,addRelocation(TR::LabelRelocation *),1,TR,X86MemTableInstruction
getNumRelocations,getNumRelocations(),1,TR,X86MemTableInstruction
getRelocation,getRelocation(ncount_t),1,TR,X86MemTableInstruction
getRelocationCapacity,getRelocationCapacity(),1,TR,X86MemTableInstruction
operator=,operator=(class TR::X86MemTableInstruction &&),0,TR,X86MemTableInstruction
operator=,operator=(const class TR::X86MemTableInstruction &),0,TR,X86MemTableInstruction
~X86MemTableInstruction,~X86MemTableInstruction(),1,TR,X86MemTableInstruction
X86PaddingInstruction,X86PaddingInstruction(class TR::X86PaddingInstruction &&),1,TR,X86PaddingInstruction
X86PaddingInstruction,X86PaddingInstruction(const class TR::X86PaddingInstruction &),0,TR,X86PaddingInstruction
X86PaddingInstruction,X86PaddingInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *),0,TR,X86PaddingInstruction
X86PaddingInstruction,X86PaddingInstruction(uint8_t,enum TR_PaddingProperties,TR::Node *,TR::CodeGenerator *),0,TR,X86PaddingInstruction
X86PaddingInstruction,X86PaddingInstruction(uint8_t,TR::Node *,TR::CodeGenerator *),0,TR,X86PaddingInstruction
X86PaddingInstruction,X86PaddingInstruction(TR::Instruction *,uint8_t,enum TR_PaddingProperties,TR::CodeGenerator *),0,TR,X86PaddingInstruction
X86PaddingSnippetInstruction,X86PaddingSnippetInstruction(TR::Instruction *,uint8_t,enum TR_PaddingProperties,TR::CodeGenerator *),1,TR,X86PaddingSnippetInstruction
X86PaddingSnippetInstruction,X86PaddingSnippetInstruction(TR::Instruction *,uint8_t,TR::CodeGenerator *),0,TR,X86PaddingSnippetInstruction
X86PaddingSnippetInstruction,X86PaddingSnippetInstruction(uint8_t,enum TR_PaddingProperties,TR::Node *,TR::CodeGenerator *),0,TR,X86PaddingSnippetInstruction
X86PaddingSnippetInstruction,X86PaddingSnippetInstruction(uint8_t,TR::Node *,TR::CodeGenerator *),0,TR,X86PaddingSnippetInstruction
getLength,getLength(),1,TR,X86PaddingInstruction
getProperties,getProperties(),1,TR,X86PaddingInstruction
getUnresolvedSnippet,getUnresolvedSnippet(),1,TR,X86PaddingSnippetInstruction
operator=,operator=(class TR::X86PaddingInstruction &&),0,TR,X86PaddingInstruction
operator=,operator=(const class TR::X86PaddingInstruction &),0,TR,X86PaddingInstruction
operator=,operator=(const class TR::X86PaddingSnippetInstruction &),0,TR,X86PaddingSnippetInstruction
operator=,operator=(class TR::X86PaddingSnippetInstruction &&),0,TR,X86PaddingSnippetInstruction
setUnresolvedSnippet,setUnresolvedSnippet(TR::UnresolvedDataSnippet *),1,TR,X86PaddingSnippetInstruction
~X86PaddingInstruction,~X86PaddingInstruction(),1,TR,X86PaddingInstruction
~X86PaddingSnippetInstruction,~X86PaddingSnippetInstruction(),1,TR,X86PaddingSnippetInstruction
X86RegImmInstruction,X86RegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::CodeGenerator *,int32_t),1,TR,X86RegImmInstruction
X86RegImmInstruction,X86RegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t),0,TR,X86RegImmInstruction
X86RegImmInstruction,X86RegImmInstruction(int32_t,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,int32_t),0,TR,X86RegImmInstruction
X86RegImmInstruction,X86RegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t),0,TR,X86RegImmInstruction
X86RegImmInstruction,X86RegImmInstruction(int32_t,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,int32_t),0,TR,X86RegImmInstruction
X86RegImmInstruction,X86RegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::CodeGenerator *,int32_t),0,TR,X86RegImmInstruction
X86RegImmSymInstruction,X86RegImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *),1,TR,X86RegImmSymInstruction
X86RegImmSymInstruction,X86RegImmSymInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,X86RegImmSymInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,X86RegImmInstruction
autoSetReloKind,autoSetReloKind(),1,TR,X86RegImmSymInstruction
getReloKind,getReloKind(),1,TR,X86RegImmInstruction
getSourceImmediate,getSourceImmediate(),1,TR,X86RegImmInstruction
getSourceImmediateAsAddress,getSourceImmediateAsAddress(),1,TR,X86RegImmInstruction
getSymbolReference,getSymbolReference(),1,TR,X86RegImmSymInstruction
operator=,operator=(const class TR::X86RegImmInstruction &),0,TR,X86RegImmInstruction
operator=,operator=(class TR::X86RegImmInstruction &&),0,TR,X86RegImmInstruction
operator=,operator=(class TR::X86RegImmSymInstruction &&),0,TR,X86RegImmSymInstruction
operator=,operator=(const class TR::X86RegImmSymInstruction &),0,TR,X86RegImmSymInstruction
setReloKind,setReloKind(int32_t),1,TR,X86RegImmInstruction
setSourceImmediate,setSourceImmediate(int32_t),1,TR,X86RegImmInstruction
setSymbolReference,setSymbolReference(TR::SymbolReference *),1,TR,X86RegImmSymInstruction
~X86RegImmInstruction,~X86RegImmInstruction(),1,TR,X86RegImmInstruction
~X86RegImmSymInstruction,~X86RegImmSymInstruction(),1,TR,X86RegImmSymInstruction
X86RegMemImmInstruction,X86RegMemImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,int32_t,TR::CodeGenerator *),1,TR,X86RegMemImmInstruction
X86RegMemImmInstruction,X86RegMemImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,int32_t,TR::CodeGenerator *),0,TR,X86RegMemImmInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,X86RegMemImmInstruction
getSourceImmediate,getSourceImmediate(),1,TR,X86RegMemImmInstruction
getSourceImmediateAsAddress,getSourceImmediateAsAddress(),1,TR,X86RegMemImmInstruction
operator=,operator=(const class TR::X86RegMemImmInstruction &),0,TR,X86RegMemImmInstruction
operator=,operator=(class TR::X86RegMemImmInstruction &&),0,TR,X86RegMemImmInstruction
setSourceImmediate,setSourceImmediate(int32_t),1,TR,X86RegMemImmInstruction
~X86RegMemImmInstruction,~X86RegMemImmInstruction(),1,TR,X86RegMemImmInstruction
X86RegRegImmInstruction,X86RegRegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,int32_t,TR::CodeGenerator *),1,TR,X86RegRegImmInstruction
X86RegRegImmInstruction,X86RegRegImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,int32_t,TR::CodeGenerator *),0,TR,X86RegRegImmInstruction
addMetaDataForCodeAddress,addMetaDataForCodeAddress(uint8_t *),1,TR,X86RegRegImmInstruction
getSourceImmediate,getSourceImmediate(),1,TR,X86RegRegImmInstruction
getSourceImmediateAsAddress,getSourceImmediateAsAddress(),1,TR,X86RegRegImmInstruction
operator=,operator=(const class TR::X86RegRegImmInstruction &),0,TR,X86RegRegImmInstruction
operator=,operator=(class TR::X86RegRegImmInstruction &&),0,TR,X86RegRegImmInstruction
setSourceImmediate,setSourceImmediate(int32_t),1,TR,X86RegRegImmInstruction
~X86RegRegImmInstruction,~X86RegRegImmInstruction(),1,TR,X86RegRegImmInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(TR::Register *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),1,TR,X86RegRegRegInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86RegRegRegInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(TR::Register *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86RegRegRegInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86RegRegRegInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86RegRegRegInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(TR::RegisterDependencyConditions *,TR::Register *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),0,TR,X86RegRegRegInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86RegRegRegInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::Register *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86RegRegRegInstruction
aboutToAssignSourceRightRegister,aboutToAssignSourceRightRegister(),1,TR,X86RegRegRegInstruction
operator=,operator=(const class TR::X86RegRegRegInstruction &),0,TR,X86RegRegRegInstruction
operator=,operator=(class TR::X86RegRegRegInstruction &&),0,TR,X86RegRegRegInstruction
setSourceRightRegister,setSourceRightRegister(TR::Register *),1,TR,X86RegRegRegInstruction
~X86RegRegRegInstruction,~X86RegRegRegInstruction(),1,TR,X86RegRegRegInstruction
X86RestoreVMThreadInstruction,X86RestoreVMThreadInstruction(enum TR_X86OpCodes,TR::Node *,TR::CodeGenerator *),1,TR,X86RestoreVMThreadInstruction
operator=,operator=(class TR::X86RestoreVMThreadInstruction &&),0,TR,X86RestoreVMThreadInstruction
operator=,operator=(const class TR::X86RestoreVMThreadInstruction &),0,TR,X86RestoreVMThreadInstruction
~X86RestoreVMThreadInstruction,~X86RestoreVMThreadInstruction(),1,TR,X86RestoreVMThreadInstruction
X86VFPCallCleanupInstruction,X86VFPCallCleanupInstruction(TR::Instruction *,int32_t,TR::CodeGenerator *),1,TR,X86VFPCallCleanupInstruction
X86VFPCallCleanupInstruction,X86VFPCallCleanupInstruction(int32_t,TR::Node *,TR::CodeGenerator *),0,TR,X86VFPCallCleanupInstruction
getStackPointerAdjustment,getStackPointerAdjustment(),1,TR,X86VFPCallCleanupInstruction
operator=,operator=(const class TR::X86VFPCallCleanupInstruction &),0,TR,X86VFPCallCleanupInstruction
operator=,operator=(class TR::X86VFPCallCleanupInstruction &&),0,TR,X86VFPCallCleanupInstruction
~X86VFPCallCleanupInstruction,~X86VFPCallCleanupInstruction(),1,TR,X86VFPCallCleanupInstruction
X86VFPDedicateInstruction,X86VFPDedicateInstruction(class TR::X86VFPDedicateInstruction &&),1,TR,X86VFPDedicateInstruction
X86VFPDedicateInstruction,X86VFPDedicateInstruction(TR::Instruction *,TR::RealRegister *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86VFPDedicateInstruction
X86VFPDedicateInstruction,X86VFPDedicateInstruction(TR::RealRegister *,TR::Node *,TR::CodeGenerator *),0,TR,X86VFPDedicateInstruction
X86VFPDedicateInstruction,X86VFPDedicateInstruction(TR::Instruction *,TR::RealRegister *,TR::CodeGenerator *),0,TR,X86VFPDedicateInstruction
X86VFPDedicateInstruction,X86VFPDedicateInstruction(TR::RealRegister *,TR::Node *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86VFPDedicateInstruction
getSavedState,getSavedState(),1,TR,X86VFPDedicateInstruction
memref,memref(TR::CodeGenerator *),1,TR,X86VFPDedicateInstruction
operator=,operator=(class TR::X86VFPDedicateInstruction &&),0,TR,X86VFPDedicateInstruction
operator=,operator=(const class TR::X86VFPDedicateInstruction &),0,TR,X86VFPDedicateInstruction
~X86VFPDedicateInstruction,~X86VFPDedicateInstruction(),1,TR,X86VFPDedicateInstruction
X86VFPReleaseInstruction,X86VFPReleaseInstruction(TR::X86VFPDedicateInstruction *,TR::Node *,TR::CodeGenerator *),1,TR,X86VFPReleaseInstruction
X86VFPReleaseInstruction,X86VFPReleaseInstruction(TR::Instruction *,TR::X86VFPDedicateInstruction *,TR::CodeGenerator *),0,TR,X86VFPReleaseInstruction
getDedicateInstruction,getDedicateInstruction(),1,TR,X86VFPReleaseInstruction
operator=,operator=(const class TR::X86VFPReleaseInstruction &),0,TR,X86VFPReleaseInstruction
operator=,operator=(class TR::X86VFPReleaseInstruction &&),0,TR,X86VFPReleaseInstruction
~X86VFPReleaseInstruction,~X86VFPReleaseInstruction(),1,TR,X86VFPReleaseInstruction
X86VFPRestoreInstruction,X86VFPRestoreInstruction(TR::Instruction *,TR::X86VFPSaveInstruction *,TR::CodeGenerator *),1,TR,X86VFPRestoreInstruction
X86VFPRestoreInstruction,X86VFPRestoreInstruction(TR::X86VFPSaveInstruction *,TR::Node *,TR::CodeGenerator *),0,TR,X86VFPRestoreInstruction
getSaveInstruction,getSaveInstruction(),1,TR,X86VFPRestoreInstruction
operator=,operator=(class TR::X86VFPRestoreInstruction &&),0,TR,X86VFPRestoreInstruction
operator=,operator=(const class TR::X86VFPRestoreInstruction &),0,TR,X86VFPRestoreInstruction
~X86VFPRestoreInstruction,~X86VFPRestoreInstruction(),1,TR,X86VFPRestoreInstruction
X86VFPSaveInstruction,X86VFPSaveInstruction(TR::Node *,TR::CodeGenerator *),1,TR,X86VFPSaveInstruction
X86VFPSaveInstruction,X86VFPSaveInstruction(TR::Instruction *,TR::CodeGenerator *),0,TR,X86VFPSaveInstruction
X86VFPSaveInstruction,X86VFPSaveInstruction(class TR::X86VFPSaveInstruction &&),0,TR,X86VFPSaveInstruction
getSavedState,getSavedState(),1,TR,X86VFPSaveInstruction
operator=,operator=(const class TR::X86VFPSaveInstruction &),0,TR,X86VFPSaveInstruction
operator=,operator=(class TR::X86VFPSaveInstruction &&),0,TR,X86VFPSaveInstruction
~X86VFPSaveInstruction,~X86VFPSaveInstruction(),1,TR,X86VFPSaveInstruction
TR_Analyser,TR_Analyser(class TR_Analyser &&),1,TR,Analyser
TR_Analyser,TR_Analyser(const class TR_Analyser &),0,TR,Analyser
TR_Analyser,TR_Analyser(),0,TR,Analyser
TR_X86BinaryCommutativeAnalyser,TR_X86BinaryCommutativeAnalyser(TR::CodeGenerator *),1,TR,X86BinaryCommutativeAnalyser
genericAnalyser,genericAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool),1,TR,X86BinaryCommutativeAnalyser
genericAnalyserImpl,genericAnalyserImpl(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool),1,TR,X86BinaryCommutativeAnalyser
genericAnalyserWithExplicitOperands,genericAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool),1,TR,X86BinaryCommutativeAnalyser
genericLongAnalyser,genericLongAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes),1,TR,X86BinaryCommutativeAnalyser
getCopyReg1,getCopyReg1(),1,TR,X86BinaryCommutativeAnalyser
getCopyReg2,getCopyReg2(),1,TR,X86BinaryCommutativeAnalyser
getCopyRegs,getCopyRegs(),1,TR,X86BinaryCommutativeAnalyser
getEvalChild1,getEvalChild1(),1,TR,X86BinaryCommutativeAnalyser
getEvalChild2,getEvalChild2(),1,TR,X86BinaryCommutativeAnalyser
getInputs,getInputs(),1,TR,Analyser
getMem1,getMem1(),1,TR,Analyser
getMem2,getMem2(),1,TR,Analyser
getOpReg1Mem2,getOpReg1Mem2(),1,TR,X86BinaryCommutativeAnalyser
getOpReg1Reg2,getOpReg1Reg2(),1,TR,X86BinaryCommutativeAnalyser
getOpReg2Mem1,getOpReg2Mem1(),1,TR,X86BinaryCommutativeAnalyser
getOpReg2Reg1,getOpReg2Reg1(),1,TR,X86BinaryCommutativeAnalyser
getReversedOperands,getReversedOperands(),1,TR,X86BinaryCommutativeAnalyser
integerAddAnalyser,integerAddAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *),1,TR,X86BinaryCommutativeAnalyser
integerAddAnalyserImpl,integerAddAnalyserImpl(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *),1,TR,X86BinaryCommutativeAnalyser
integerAddAnalyserWithExplicitOperands,integerAddAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *),1,TR,X86BinaryCommutativeAnalyser
longAddAnalyser,longAddAnalyser(TR::Node *),1,TR,X86BinaryCommutativeAnalyser
longAddAnalyserImpl,longAddAnalyserImpl(TR::Node *,TR::Node *&,TR::Node *&),1,TR,X86BinaryCommutativeAnalyser
longAddAnalyserWithExplicitOperands,longAddAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *),1,TR,X86BinaryCommutativeAnalyser
longDualMultiplyAnalyser,longDualMultiplyAnalyser(TR::Node *),1,TR,X86BinaryCommutativeAnalyser
longMultiplyAnalyser,longMultiplyAnalyser(TR::Node *),1,TR,X86BinaryCommutativeAnalyser
notReversedOperands,notReversedOperands(),1,TR,X86BinaryCommutativeAnalyser
resetClob1,resetClob1(),1,TR,Analyser
resetClob2,resetClob2(),1,TR,Analyser
resetMem1,resetMem1(),1,TR,Analyser
resetMem2,resetMem2(),1,TR,Analyser
resetReg1,resetReg1(),1,TR,Analyser
resetReg2,resetReg2(),1,TR,Analyser
setClob1,setClob1(),1,TR,Analyser
setClob2,setClob2(),1,TR,Analyser
setInputs,setInputs(TR::Node *,TR::Register *,TR::Node *,TR::Register *,_Bool,_Bool,TR::Compilation *,_Bool,_Bool),1,TR,Analyser
setMem1,setMem1(),1,TR,Analyser
setMem2,setMem2(),1,TR,Analyser
setReg1,setReg1(),1,TR,Analyser
setReg2,setReg2(),1,TR,Analyser
setReversedOperands,setReversedOperands(_Bool),1,TR,X86BinaryCommutativeAnalyser
X86DivideCheckSnippet,X86DivideCheckSnippet(const class TR::X86DivideCheckSnippet &),1,TR,X86DivideCheckSnippet
X86DivideCheckSnippet,X86DivideCheckSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::LabelSymbol *,TR::ILOpCode &,TR::DataType,TR::X86RegRegInstruction *,TR::CodeGenerator *),0,TR,X86DivideCheckSnippet
X86DivideCheckSnippet,X86DivideCheckSnippet(class TR::X86DivideCheckSnippet &&),0,TR,X86DivideCheckSnippet
X86RestartSnippet,X86RestartSnippet(const class TR::X86RestartSnippet &),1,TR,X86RestartSnippet
X86RestartSnippet,X86RestartSnippet(class TR::X86RestartSnippet &&),0,TR,X86RestartSnippet
X86RestartSnippet,X86RestartSnippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,_Bool),0,TR,X86RestartSnippet
estimateRestartJumpLength,estimateRestartJumpLength(enum TR_X86OpCodes,int32_t),1,TR,X86RestartSnippet
estimateRestartJumpLength,estimateRestartJumpLength(int32_t,TR::LabelSymbol *),0,TR,X86RestartSnippet
estimateRestartJumpLength,estimateRestartJumpLength(int32_t),0,TR,X86RestartSnippet
estimateRestartJumpLength,estimateRestartJumpLength(enum TR_X86OpCodes,int32_t,TR::LabelSymbol *),0,TR,X86RestartSnippet
genRestartJump,genRestartJump(uint8_t *),1,TR,X86RestartSnippet
genRestartJump,genRestartJump(enum TR_X86OpCodes,uint8_t *,TR::LabelSymbol *),0,TR,X86RestartSnippet
genRestartJump,genRestartJump(uint8_t *,TR::LabelSymbol *),0,TR,X86RestartSnippet
getDivideInstruction,getDivideInstruction(),1,TR,X86DivideCheckSnippet
getDivideLabel,getDivideLabel(),1,TR,X86DivideCheckSnippet
getForceLongRestartJump,getForceLongRestartJump(),1,TR,X86RestartSnippet
getOpCode,getOpCode(),1,TR,X86DivideCheckSnippet
getRestartLabel,getRestartLabel(),1,TR,X86RestartSnippet
getType,getType(),1,TR,X86DivideCheckSnippet
operator=,operator=(class TR::X86RestartSnippet &&),0,TR,X86RestartSnippet
operator=,operator=(const class TR::X86RestartSnippet &),0,TR,X86RestartSnippet
operator=,operator=(const class TR::X86DivideCheckSnippet &),0,TR,X86DivideCheckSnippet
operator=,operator=(class TR::X86DivideCheckSnippet &&),0,TR,X86DivideCheckSnippet
setDivideLabel,setDivideLabel(TR::LabelSymbol *),1,TR,X86DivideCheckSnippet
setForceLongRestartJump,setForceLongRestartJump(),1,TR,X86RestartSnippet
setRestartLabel,setRestartLabel(TR::LabelSymbol *),1,TR,X86RestartSnippet
~X86DivideCheckSnippet,~X86DivideCheckSnippet(),1,TR,X86DivideCheckSnippet
~X86RestartSnippet,~X86RestartSnippet(),1,TR,X86RestartSnippet
TR_Analyser,TR_Analyser(const class TR_Analyser &),1,TR,Analyser
TR_Analyser,TR_Analyser(class TR_Analyser &&),0,TR,Analyser
TR_X86BinaryCommutativeAnalyser,TR_X86BinaryCommutativeAnalyser(class TR_X86BinaryCommutativeAnalyser &&),1,TR,X86BinaryCommutativeAnalyser
TR_X86BinaryCommutativeAnalyser,TR_X86BinaryCommutativeAnalyser(const class TR_X86BinaryCommutativeAnalyser &),0,TR,X86BinaryCommutativeAnalyser
TR_X86BinaryCommutativeAnalyser,TR_X86BinaryCommutativeAnalyser(TR::CodeGenerator *),0,TR,X86BinaryCommutativeAnalyser
~TR_Analyser,~TR_Analyser(),1,TR,Analyser
~TR_X86BinaryCommutativeAnalyser,~TR_X86BinaryCommutativeAnalyser(),1,TR,X86BinaryCommutativeAnalyser
Estimator,Estimator(class TR_X86OpCode::Estimator &&),1,TR,X86OpCode::Estimator
Estimator,Estimator(const class TR_X86OpCode::Estimator &),0,TR,X86OpCode::Estimator
Estimator,Estimator(cursor_t),0,TR,X86OpCode::Estimator
Writer,Writer(class TR_X86OpCode::Writer &&),1,TR,X86OpCode::Writer
Writer,Writer(const class TR_X86OpCode::Writer &),0,TR,X86OpCode::Writer
Writer,Writer(cursor_t),0,TR,X86OpCode::Writer
TR_X86SubtractAnalyser,TR_X86SubtractAnalyser(class TR_X86SubtractAnalyser &&),1,TR,X86SubtractAnalyser
TR_X86SubtractAnalyser,TR_X86SubtractAnalyser(TR::CodeGenerator *),0,TR,X86SubtractAnalyser
TR_X86SubtractAnalyser,TR_X86SubtractAnalyser(const class TR_X86SubtractAnalyser &),0,TR,X86SubtractAnalyser
getCopyReg1,getCopyReg1(),1,TR,X86SubtractAnalyser
getEvalChild1,getEvalChild1(),1,TR,X86SubtractAnalyser
getEvalChild2,getEvalChild2(),1,TR,X86SubtractAnalyser
getSubReg1Mem2,getSubReg1Mem2(),1,TR,X86SubtractAnalyser
getSubReg1Reg2,getSubReg1Reg2(),1,TR,X86SubtractAnalyser
getSubReg3Mem2,getSubReg3Mem2(),1,TR,X86SubtractAnalyser
getSubReg3Reg2,getSubReg3Reg2(),1,TR,X86SubtractAnalyser
integerSubtractAnalyser,integerSubtractAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *),1,TR,X86SubtractAnalyser
integerSubtractAnalyserImpl,integerSubtractAnalyserImpl(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *),1,TR,X86SubtractAnalyser
integerSubtractAnalyserWithExplicitOperands,integerSubtractAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool,TR::Node *),1,TR,X86SubtractAnalyser
longSubtractAnalyser,longSubtractAnalyser(TR::Node *),1,TR,X86SubtractAnalyser
longSubtractAnalyserImpl,longSubtractAnalyserImpl(TR::Node *,TR::Node *&,TR::Node *&),1,TR,X86SubtractAnalyser
longSubtractAnalyserWithExplicitOperands,longSubtractAnalyserWithExplicitOperands(TR::Node *,TR::Node *,TR::Node *),1,TR,X86SubtractAnalyser
~TR_X86SubtractAnalyser,~TR_X86SubtractAnalyser(),1,TR,X86SubtractAnalyser
operator delete,operator delete(void *,size_t),1,OMR,Linkage
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Linkage
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Linkage
operator new,operator new(size_t,TR::Region &),0,OMR,Linkage
operator=,operator=(const class OMR::Linkage &),1,OMR,Linkage
operator=,operator=(class OMR::Linkage &&),0,OMR,Linkage
storeArguments,storeArguments(TR::Node *,uint8_t *,_Bool,int32_t *),1,OMR,X86::Linkage
storeArguments,storeArguments(TR::Instruction *,TR::ResolvedMethodSymbol *),0,OMR,X86::Linkage
X86LabelInstruction,X86LabelInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::LabelSymbol *,TR::RegisterDependencyConditions *,TR::CodeGenerator *,_Bool),1,TR,X86LabelInstruction
X86LabelInstruction,X86LabelInstruction(TR::LabelSymbol *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *,_Bool),0,TR,X86LabelInstruction
TR_X86CompareAnalyser,TR_X86CompareAnalyser(TR::CodeGenerator *),1,TR,X86CompareAnalyser
cg,cg(),1,TR,X86CompareAnalyser
getCmpMem1Reg2,getCmpMem1Reg2(),1,TR,X86CompareAnalyser
getCmpReg1Mem2,getCmpReg1Mem2(),1,TR,X86CompareAnalyser
getCmpReg1Reg2,getCmpReg1Reg2(),1,TR,X86CompareAnalyser
getEvalChild1,getEvalChild1(),1,TR,X86CompareAnalyser
getEvalChild2,getEvalChild2(),1,TR,X86CompareAnalyser
integerCompareAnalyser,integerCompareAnalyser(TR::Node *,TR::Node *,TR::Node *,_Bool,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes),1,TR,X86CompareAnalyser
integerCompareAnalyser,integerCompareAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes),0,TR,X86CompareAnalyser
longCMPAnalyser,longCMPAnalyser(TR::Node *),1,TR,X86CompareAnalyser
longEqualityBooleanAnalyser,longEqualityBooleanAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes),1,TR,X86CompareAnalyser
longEqualityCompareAndBranchAnalyser,longEqualityCompareAndBranchAnalyser(TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,enum TR_X86OpCodes),1,TR,X86CompareAnalyser
longOrderedBooleanAnalyser,longOrderedBooleanAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes),1,TR,X86CompareAnalyser
longOrderedCompareAndBranchAnalyser,longOrderedCompareAndBranchAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes),1,TR,X86CompareAnalyser
IA32ConstantDataSnippet,IA32ConstantDataSnippet(class TR::IA32ConstantDataSnippet &&),1,TR,IA32ConstantDataSnippet
IA32ConstantDataSnippet,IA32ConstantDataSnippet(const class TR::IA32ConstantDataSnippet &),0,TR,IA32ConstantDataSnippet
IA32ConstantDataSnippet,IA32ConstantDataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t),0,TR,IA32ConstantDataSnippet
IA32DataSnippet,IA32DataSnippet(class TR::IA32DataSnippet &&),1,TR,IA32DataSnippet
IA32DataSnippet,IA32DataSnippet(const class TR::IA32DataSnippet &),0,TR,IA32DataSnippet
IA32DataSnippet,IA32DataSnippet(TR::CodeGenerator *,TR::Node *,void *,uint8_t),0,TR,IA32DataSnippet
Linkage,Linkage(),1,OMR,Linkage
Linkage,Linkage(class OMR::Linkage &&),0,OMR,Linkage
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Linkage
RegisterDependencyConditions,RegisterDependencyConditions(),1,OMR,RegisterDependencyConditions
RegisterDependencyConditions,RegisterDependencyConditions(class OMR::RegisterDependencyConditions &&),0,OMR,RegisterDependencyConditions
RegisterDependencyConditions,RegisterDependencyConditions(class TR::RegisterDependencyConditions &&),0,TR,RegisterDependencyConditions
RegisterDependencyConditions,RegisterDependencyConditions(const class TR::RegisterDependencyConditions &),0,TR,RegisterDependencyConditions
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,RegisterDependencyConditions
operator delete,operator delete(void *,TR::Region &),0,OMR,RegisterDependencyConditions
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,RegisterDependencyConditions
operator delete[],operator delete[](void *,TR::Region &),0,OMR,RegisterDependencyConditions
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,RegisterDependencyConditions
X86RegInstruction,X86RegInstruction(class TR::X86RegInstruction &&),1,TR,X86RegInstruction
X86RegInstruction,X86RegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::CodeGenerator *),0,TR,X86RegInstruction
LabelAbsoluteRelocation,LabelAbsoluteRelocation(class TR::LabelAbsoluteRelocation &&),1,TR,LabelAbsoluteRelocation
LabelAbsoluteRelocation,LabelAbsoluteRelocation(const class TR::LabelAbsoluteRelocation &),0,TR,LabelAbsoluteRelocation
LabelAbsoluteRelocation,LabelAbsoluteRelocation(),0,TR,LabelAbsoluteRelocation
LoadLabelRelative16BitRelocation,LoadLabelRelative16BitRelocation(),1,TR,LoadLabelRelative16BitRelocation
LoadLabelRelative16BitRelocation,LoadLabelRelative16BitRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t),0,TR,LoadLabelRelative16BitRelocation
LoadLabelRelative32BitRelocation,LoadLabelRelative32BitRelocation(),1,TR,LoadLabelRelative32BitRelocation
LoadLabelRelative32BitRelocation,LoadLabelRelative32BitRelocation(TR::Instruction *,TR::LabelSymbol *,TR::LabelSymbol *,int32_t),0,TR,LoadLabelRelative32BitRelocation
X86MemInstruction,X86MemInstruction(const class TR::X86MemInstruction &),1,TR,X86MemInstruction
X86MemInstruction,X86MemInstruction(class TR::X86MemInstruction &&),0,TR,X86MemInstruction
X86MemRegInstruction,X86MemRegInstruction(const class TR::X86MemRegInstruction &),1,TR,X86MemRegInstruction
X86MemRegInstruction,X86MemRegInstruction(class TR::X86MemRegInstruction &&),0,TR,X86MemRegInstruction
X86ImmInstruction,X86ImmInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t),1,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::CodeGenerator *,int32_t),0,TR,X86ImmInstruction
X86ImmSymInstruction,X86ImmSymInstruction(enum TR_X86OpCodes,TR::Node *,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),1,TR,X86ImmSymInstruction
X86ImmSymInstruction,X86ImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86ImmSymInstruction
X86LabelInstruction,X86LabelInstruction(TR::LabelSymbol *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *,_Bool),1,TR,X86LabelInstruction
X86MemTableInstruction,X86MemTableInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,ncount_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *),1,TR,X86MemTableInstruction
X86MemTableInstruction,X86MemTableInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,ncount_t,TR::CodeGenerator *),0,TR,X86MemTableInstruction
X86RegImmSymInstruction,X86RegImmSymInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *),1,TR,X86RegImmSymInstruction
X86RegImmSymInstruction,X86RegImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,X86RegImmSymInstruction
X86RegMemImmInstruction,X86RegMemImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::MemoryReference *,int32_t,TR::CodeGenerator *),1,TR,X86RegMemImmInstruction
X86RegMemImmInstruction,X86RegMemImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,int32_t,TR::CodeGenerator *),0,TR,X86RegMemImmInstruction
TR_X86CompareAnalyser,TR_X86CompareAnalyser(class TR_X86CompareAnalyser &&),1,TR,X86CompareAnalyser
TR_X86CompareAnalyser,TR_X86CompareAnalyser(const class TR_X86CompareAnalyser &),0,TR,X86CompareAnalyser
TR_X86CompareAnalyser,TR_X86CompareAnalyser(TR::CodeGenerator *),0,TR,X86CompareAnalyser
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,MemoryReference
operator delete,operator delete(void *,size_t),0,OMR,MemoryReference
operator delete[],operator delete[](void *,TR::Region &),1,OMR,MemoryReference
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,MemoryReference
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,MemoryReference
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,MemoryReference
X86AlignmentInstruction,X86AlignmentInstruction(TR::Node *,uint8_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *),1,TR,X86AlignmentInstruction
X86AlignmentInstruction,X86AlignmentInstruction(TR::Node *,uint8_t,TR::CodeGenerator *),0,TR,X86AlignmentInstruction
X86PatchableCodeAlignmentInstruction,X86PatchableCodeAlignmentInstruction(const struct TR_AtomicRegion *,TR::Instruction *,int32_t,TR::CodeGenerator *),1,TR,X86PatchableCodeAlignmentInstruction
X86PatchableCodeAlignmentInstruction,X86PatchableCodeAlignmentInstruction(const struct TR_AtomicRegion *,TR::Instruction *,TR::CodeGenerator *),0,TR,X86PatchableCodeAlignmentInstruction
X86DivideCheckSnippet,X86DivideCheckSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::LabelSymbol *,TR::ILOpCode &,TR::DataType,TR::X86RegRegInstruction *,TR::CodeGenerator *),1,TR,X86DivideCheckSnippet
X86RestartSnippet,X86RestartSnippet(class TR::X86RestartSnippet &&),1,TR,X86RestartSnippet
X86RestartSnippet,X86RestartSnippet(const class TR::X86RestartSnippet &),0,TR,X86RestartSnippet
genRestartJump,genRestartJump(uint8_t *,TR::LabelSymbol *),1,TR,X86RestartSnippet
genRestartJump,genRestartJump(uint8_t *),0,TR,X86RestartSnippet
MemoryReference,MemoryReference(class OMR::MemoryReference &&),1,OMR,MemoryReference
MemoryReference,MemoryReference(),0,OMR,MemoryReference
RegisterDependencyConditions,RegisterDependencyConditions(const class OMR::RegisterDependencyConditions &),1,OMR,RegisterDependencyConditions
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,RegisterDependencyConditions
MemoryReference,MemoryReference(const class OMR::MemoryReference &),1,OMR,MemoryReference
TR_IA32XMMCompareAnalyser,TR_IA32XMMCompareAnalyser(TR::CodeGenerator *),1,TR,IA32XMMCompareAnalyser
TR_X86FPCompareAnalyser,TR_X86FPCompareAnalyser(class TR_X86FPCompareAnalyser &&),1,TR,X86FPCompareAnalyser
TR_X86FPCompareAnalyser,TR_X86FPCompareAnalyser(const class TR_X86FPCompareAnalyser &),0,TR,X86FPCompareAnalyser
TR_X86FPCompareAnalyser,TR_X86FPCompareAnalyser(TR::CodeGenerator *),0,TR,X86FPCompareAnalyser
fpCompareAnalyser,fpCompareAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes,enum TR_X86OpCodes,_Bool),1,TR,X86FPCompareAnalyser
getCmpReg1Mem2,getCmpReg1Mem2(),1,TR,X86FPCompareAnalyser
getCmpReg1Reg2,getCmpReg1Reg2(),1,TR,X86FPCompareAnalyser
getCmpReg2Mem1,getCmpReg2Mem1(),1,TR,X86FPCompareAnalyser
getCmpReg2Reg1,getCmpReg2Reg1(),1,TR,X86FPCompareAnalyser
getEvalChild1,getEvalChild1(),1,TR,X86FPCompareAnalyser
getEvalChild2,getEvalChild2(),1,TR,X86FPCompareAnalyser
getReversedOperands,getReversedOperands(),1,TR,X86FPCompareAnalyser
notReversedOperands,notReversedOperands(),1,TR,X86FPCompareAnalyser
operator=,operator=(class TR_X86FPCompareAnalyser &&),1,TR,X86FPCompareAnalyser
operator=,operator=(const class TR_X86FPCompareAnalyser &),0,TR,X86FPCompareAnalyser
operator=,operator=(class TR_IA32XMMCompareAnalyser &&),0,TR,IA32XMMCompareAnalyser
operator=,operator=(const class TR_IA32XMMCompareAnalyser &),0,TR,IA32XMMCompareAnalyser
setClob1,setClob1(),1,TR,X86FPCompareAnalyser
setClob2,setClob2(),1,TR,X86FPCompareAnalyser
setInputs,setInputs(TR::Node *,TR::Register *,TR::Node *,TR::Register *,_Bool,_Bool),1,TR,X86FPCompareAnalyser
setMem1,setMem1(),1,TR,X86FPCompareAnalyser
setMem2,setMem2(),1,TR,X86FPCompareAnalyser
setNoOperandSwapping,setNoOperandSwapping(),1,TR,X86FPCompareAnalyser
setReg1,setReg1(),1,TR,X86FPCompareAnalyser
setReg2,setReg2(),1,TR,X86FPCompareAnalyser
setReversedOperands,setReversedOperands(_Bool),1,TR,X86FPCompareAnalyser
xmmCompareAnalyser,xmmCompareAnalyser(TR::Node *,enum TR_X86OpCodes,enum TR_X86OpCodes),1,TR,IA32XMMCompareAnalyser
~TR_IA32XMMCompareAnalyser,~TR_IA32XMMCompareAnalyser(),1,TR,IA32XMMCompareAnalyser
~TR_X86FPCompareAnalyser,~TR_X86FPCompareAnalyser(),1,TR,X86FPCompareAnalyser
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,GCStackAtlas
X86BoundaryAvoidanceInstruction,X86BoundaryAvoidanceInstruction(TR::Instruction *,const struct TR_AtomicRegion *,uint8_t,uint8_t,TR::CodeGenerator *),1,TR,X86BoundaryAvoidanceInstruction
X86BoundaryAvoidanceInstruction,X86BoundaryAvoidanceInstruction(class TR::X86BoundaryAvoidanceInstruction &&),0,TR,X86BoundaryAvoidanceInstruction
X86FPConversionSnippet,X86FPConversionSnippet(const class TR::X86FPConversionSnippet &),1,TR,X86FPConversionSnippet
X86FPConversionSnippet,X86FPConversionSnippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *),0,TR,X86FPConversionSnippet
X86FPConversionSnippet,X86FPConversionSnippet(class TR::X86FPConversionSnippet &&),0,TR,X86FPConversionSnippet
X86FPConvertToIntSnippet,X86FPConvertToIntSnippet(const class TR::X86FPConvertToIntSnippet &),1,TR,X86FPConvertToIntSnippet
X86FPConvertToIntSnippet,X86FPConvertToIntSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,TR::X86RegInstruction *,TR::CodeGenerator *),0,TR,X86FPConvertToIntSnippet
X86FPConvertToIntSnippet,X86FPConvertToIntSnippet(class TR::X86FPConvertToIntSnippet &&),0,TR,X86FPConvertToIntSnippet
emitCallToConversionHelper,emitCallToConversionHelper(uint8_t *),1,TR,X86FPConversionSnippet
genFPConversion,genFPConversion(uint8_t *),1,TR,X86FPConversionSnippet
getConvertInstruction,getConvertInstruction(),1,TR,X86FPConvertToIntSnippet
getHelperSymRef,getHelperSymRef(),1,TR,X86FPConversionSnippet
operator=,operator=(const class TR::X86FPConversionSnippet &),0,TR,X86FPConversionSnippet
operator=,operator=(class TR::X86FPConversionSnippet &&),0,TR,X86FPConversionSnippet
operator=,operator=(class TR::X86FPConvertToIntSnippet &&),0,TR,X86FPConvertToIntSnippet
operator=,operator=(const class TR::X86FPConvertToIntSnippet &),0,TR,X86FPConvertToIntSnippet
setHelperSymRef,setHelperSymRef(TR::SymbolReference *),1,TR,X86FPConversionSnippet
~X86FPConversionSnippet,~X86FPConversionSnippet(),1,TR,X86FPConversionSnippet
~X86FPConvertToIntSnippet,~X86FPConvertToIntSnippet(),1,TR,X86FPConvertToIntSnippet
X86FPConvertToLongSnippet,X86FPConvertToLongSnippet(const class TR::X86FPConvertToLongSnippet &),1,TR,X86FPConvertToLongSnippet
X86FPConvertToLongSnippet,X86FPConvertToLongSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,TR::X86FPST0STiRegRegInstruction *,TR::X86RegMemInstruction *,TR::X86RegMemInstruction *,TR::CodeGenerator *),0,TR,X86FPConvertToLongSnippet
X86FPConvertToLongSnippet,X86FPConvertToLongSnippet(class TR::X86FPConvertToLongSnippet &&),0,TR,X86FPConvertToLongSnippet
analyseLongConversion,analyseLongConversion(),1,TR,X86FPConvertToLongSnippet
getAction,getAction(),1,TR,X86FPConvertToLongSnippet
getDoubleRegister,getDoubleRegister(),1,TR,X86FPConvertToLongSnippet
getHighRegister,getHighRegister(),1,TR,X86FPConvertToLongSnippet
getLowRegister,getLowRegister(),1,TR,X86FPConvertToLongSnippet
operator=,operator=(const class TR::X86FPConvertToLongSnippet &),0,TR,X86FPConvertToLongSnippet
operator=,operator=(class TR::X86FPConvertToLongSnippet &&),0,TR,X86FPConvertToLongSnippet
~X86FPConvertToLongSnippet,~X86FPConvertToLongSnippet(),1,TR,X86FPConvertToLongSnippet
TR_IA32XMMCompareAnalyser,TR_IA32XMMCompareAnalyser(class TR_IA32XMMCompareAnalyser &&),1,TR,IA32XMMCompareAnalyser
TR_IA32XMMCompareAnalyser,TR_IA32XMMCompareAnalyser(const class TR_IA32XMMCompareAnalyser &),0,TR,IA32XMMCompareAnalyser
TR_IA32XMMCompareAnalyser,TR_IA32XMMCompareAnalyser(TR::CodeGenerator *),0,TR,IA32XMMCompareAnalyser
X86CheckAsyncMessagesSnippet,X86CheckAsyncMessagesSnippet(TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,TR::CodeGenerator *),1,TR,X86CheckAsyncMessagesSnippet
X86HelperCallSnippet,X86HelperCallSnippet(const class TR::X86HelperCallSnippet &),1,TR,X86HelperCallSnippet
X86HelperCallSnippet,X86HelperCallSnippet(TR::CodeGenerator *,TR::LabelSymbol *,TR::LabelSymbol *,TR::Node *,int32_t),0,TR,X86HelperCallSnippet
X86HelperCallSnippet,X86HelperCallSnippet(TR::CodeGenerator *,TR::Node *,TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,int32_t),0,TR,X86HelperCallSnippet
X86HelperCallSnippet,X86HelperCallSnippet(class TR::X86HelperCallSnippet &&),0,TR,X86HelperCallSnippet
addMetaDataForLoadAddrArg,addMetaDataForLoadAddrArg(uint8_t *,TR::Node *),1,TR,X86HelperCallSnippet
branchDisplacementToHelper,branchDisplacementToHelper(uint8_t *,TR::SymbolReference *,TR::CodeGenerator *),1,TR,X86HelperCallSnippet
genHelperCall,genHelperCall(uint8_t *),1,TR,X86HelperCallSnippet
getAlignCallDisplacementForPatching,getAlignCallDisplacementForPatching(),1,TR,X86HelperCallSnippet
getCallInstructionBufferAddress,getCallInstructionBufferAddress(),1,TR,X86HelperCallSnippet
getCallNode,getCallNode(),1,TR,X86HelperCallSnippet
getDestination,getDestination(),1,TR,X86HelperCallSnippet
getOffset,getOffset(),1,TR,X86HelperCallSnippet
getStackPointerAdjustment,getStackPointerAdjustment(),1,TR,X86HelperCallSnippet
operator=,operator=(class TR::X86HelperCallSnippet &&),0,TR,X86HelperCallSnippet
operator=,operator=(const class TR::X86HelperCallSnippet &),0,TR,X86HelperCallSnippet
operator=,operator=(const class TR::X86CheckAsyncMessagesSnippet &),0,TR,X86CheckAsyncMessagesSnippet
operator=,operator=(class TR::X86CheckAsyncMessagesSnippet &&),0,TR,X86CheckAsyncMessagesSnippet
setAlignCallDisplacementForPatching,setAlignCallDisplacementForPatching(_Bool),1,TR,X86HelperCallSnippet
setDestination,setDestination(TR::SymbolReference *),1,TR,X86HelperCallSnippet
~X86CheckAsyncMessagesSnippet,~X86CheckAsyncMessagesSnippet(),1,TR,X86CheckAsyncMessagesSnippet
~X86HelperCallSnippet,~X86HelperCallSnippet(),1,TR,X86HelperCallSnippet
MemoryReference,MemoryReference(const class TR::MemoryReference &),0,TR,MemoryReference
MemoryReference,MemoryReference(class TR::MemoryReference &&),0,TR,MemoryReference
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,RegisterDependencyConditions
operator new[],operator new[](size_t,TR::Region &),0,OMR,RegisterDependencyConditions
LabelAbsoluteRelocation,LabelAbsoluteRelocation(const class TR::LabelAbsoluteRelocation &),1,TR,LabelAbsoluteRelocation
LabelAbsoluteRelocation,LabelAbsoluteRelocation(class TR::LabelAbsoluteRelocation &&),0,TR,LabelAbsoluteRelocation
LabelRelative32BitRelocation,LabelRelative32BitRelocation(const class TR::LabelRelative32BitRelocation &),1,TR,LabelRelative32BitRelocation
LabelRelative32BitRelocation,LabelRelative32BitRelocation(),0,TR,LabelRelative32BitRelocation
LabelRelative32BitRelocation,LabelRelative32BitRelocation(class TR::LabelRelative32BitRelocation &&),0,TR,LabelRelative32BitRelocation
X86LabelInstruction,X86LabelInstruction(class TR::X86LabelInstruction &&),1,TR,X86LabelInstruction
X86LabelInstruction,X86LabelInstruction(const class TR::X86LabelInstruction &),0,TR,X86LabelInstruction
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Snippet
TR_X86SubtractAnalyser,TR_X86SubtractAnalyser(TR::CodeGenerator *),1,TR,X86SubtractAnalyser
estimateRestartJumpLength,estimateRestartJumpLength(int32_t,TR::LabelSymbol *),1,TR,X86RestartSnippet
estimateRestartJumpLength,estimateRestartJumpLength(enum TR_X86OpCodes,int32_t),0,TR,X86RestartSnippet
X86PaddingInstruction,X86PaddingInstruction(const class TR::X86PaddingInstruction &),1,TR,X86PaddingInstruction
X86PaddingInstruction,X86PaddingInstruction(class TR::X86PaddingInstruction &&),0,TR,X86PaddingInstruction
UnresolvedDataSnippet,UnresolvedDataSnippet(const class OMR::UnresolvedDataSnippet &),1,OMR,UnresolvedDataSnippet
UnresolvedDataSnippet,UnresolvedDataSnippet(class OMR::UnresolvedDataSnippet &&),0,OMR,UnresolvedDataSnippet
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,Relocation
operator new[],operator new[](size_t,TR::Region &),0,TR,Relocation
LabelRelative32BitRelocation,LabelRelative32BitRelocation(class TR::LabelRelative32BitRelocation &&),1,TR,LabelRelative32BitRelocation
LabelRelative32BitRelocation,LabelRelative32BitRelocation(const class TR::LabelRelative32BitRelocation &),0,TR,LabelRelative32BitRelocation
LabelRelative8BitRelocation,LabelRelative8BitRelocation(const class TR::LabelRelative8BitRelocation &),1,TR,LabelRelative8BitRelocation
LabelRelative8BitRelocation,LabelRelative8BitRelocation(),0,TR,LabelRelative8BitRelocation
LabelRelative8BitRelocation,LabelRelative8BitRelocation(class TR::LabelRelative8BitRelocation &&),0,TR,LabelRelative8BitRelocation
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,Linkage
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,Linkage
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Linkage
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,Linkage
X86FPConvertToIntSnippet,X86FPConvertToIntSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,TR::X86RegInstruction *,TR::CodeGenerator *),1,TR,X86FPConvertToIntSnippet
X86FPConvertToLongSnippet,X86FPConvertToLongSnippet(TR::LabelSymbol *,TR::LabelSymbol *,TR::SymbolReference *,TR::X86FPST0STiRegRegInstruction *,TR::X86RegMemInstruction *,TR::X86RegMemInstruction *,TR::CodeGenerator *),1,TR,X86FPConvertToLongSnippet
Linkage,Linkage(const class OMR::Linkage &),1,OMR,Linkage
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,Linkage
AMD64Imm64SymInstruction,AMD64Imm64SymInstruction(class TR::AMD64Imm64SymInstruction &&),1,TR,AMD64Imm64SymInstruction
AMD64Imm64SymInstruction,AMD64Imm64SymInstruction(const class TR::AMD64Imm64SymInstruction &),0,TR,AMD64Imm64SymInstruction
AMD64Imm64SymInstruction,AMD64Imm64SymInstruction(enum TR_X86OpCodes,TR::Node *,uint64_t,TR::SymbolReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,AMD64Imm64SymInstruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(const class TR::AMD64RegImm64Instruction &),1,TR,AMD64RegImm64Instruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t),0,TR,AMD64RegImm64Instruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(class TR::AMD64RegImm64Instruction &&),0,TR,AMD64RegImm64Instruction
AMD64RegImm64SymInstruction,AMD64RegImm64SymInstruction(const class TR::AMD64RegImm64SymInstruction &),1,TR,AMD64RegImm64SymInstruction
AMD64RegImm64SymInstruction,AMD64RegImm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,AMD64RegImm64SymInstruction
AMD64RegImm64SymInstruction,AMD64RegImm64SymInstruction(class TR::AMD64RegImm64SymInstruction &&),0,TR,AMD64RegImm64SymInstruction
X86AlignmentInstruction,X86AlignmentInstruction(class TR::X86AlignmentInstruction &&),1,TR,X86AlignmentInstruction
X86AlignmentInstruction,X86AlignmentInstruction(const class TR::X86AlignmentInstruction &),0,TR,X86AlignmentInstruction
X86PatchableCodeAlignmentInstruction,X86PatchableCodeAlignmentInstruction(TR::Instruction *,const struct TR_AtomicRegion *,TR::CodeGenerator *),1,TR,X86PatchableCodeAlignmentInstruction
X86PatchableCodeAlignmentInstruction,X86PatchableCodeAlignmentInstruction(const class TR::X86PatchableCodeAlignmentInstruction &),0,TR,X86PatchableCodeAlignmentInstruction
X86PatchableCodeAlignmentInstruction,X86PatchableCodeAlignmentInstruction(class TR::X86PatchableCodeAlignmentInstruction &&),0,TR,X86PatchableCodeAlignmentInstruction
X86CallMemInstruction,X86CallMemInstruction(class TR::X86CallMemInstruction &&),1,TR,X86CallMemInstruction
X86CallMemInstruction,X86CallMemInstruction(const class TR::X86CallMemInstruction &),0,TR,X86CallMemInstruction
X86CallMemInstruction,X86CallMemInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::RegisterDependencyConditions *,TR::CodeGenerator *),0,TR,X86CallMemInstruction
X86FPArithmeticRegRegInstruction,X86FPArithmeticRegRegInstruction(const class TR::X86FPArithmeticRegRegInstruction &),1,TR,X86FPArithmeticRegRegInstruction
X86FPArithmeticRegRegInstruction,X86FPArithmeticRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPArithmeticRegRegInstruction
X86FPArithmeticRegRegInstruction,X86FPArithmeticRegRegInstruction(class TR::X86FPArithmeticRegRegInstruction &&),0,TR,X86FPArithmeticRegRegInstruction
X86FPRegRegInstruction,X86FPRegRegInstruction(class TR::X86FPRegRegInstruction &&),1,TR,X86FPRegRegInstruction
X86FPRegRegInstruction,X86FPRegRegInstruction(const class TR::X86FPRegRegInstruction &),0,TR,X86FPRegRegInstruction
X86FPRegRegInstruction,X86FPRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPRegRegInstruction
X86FPCompareEvalInstruction,X86FPCompareEvalInstruction(const class TR::X86FPCompareEvalInstruction &),1,TR,X86FPCompareEvalInstruction
X86FPCompareEvalInstruction,X86FPCompareEvalInstruction(class TR::X86FPCompareEvalInstruction &&),0,TR,X86FPCompareEvalInstruction
X86FPCompareEvalInstruction,X86FPCompareEvalInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPCompareEvalInstruction
X86FPCompareRegRegInstruction,X86FPCompareRegRegInstruction(class TR::X86FPCompareRegRegInstruction &&),1,TR,X86FPCompareRegRegInstruction
X86FPCompareRegRegInstruction,X86FPCompareRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPCompareRegRegInstruction
X86FPCompareRegRegInstruction,X86FPCompareRegRegInstruction(const class TR::X86FPCompareRegRegInstruction &),0,TR,X86FPCompareRegRegInstruction
X86FPMemRegInstruction,X86FPMemRegInstruction(class TR::X86FPMemRegInstruction &&),1,TR,X86FPMemRegInstruction
X86FPMemRegInstruction,X86FPMemRegInstruction(const class TR::X86FPMemRegInstruction &),0,TR,X86FPMemRegInstruction
X86FPMemRegInstruction,X86FPMemRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPMemRegInstruction
X86FPRegInstruction,X86FPRegInstruction(const class TR::X86FPRegInstruction &),1,TR,X86FPRegInstruction
X86FPRegInstruction,X86FPRegInstruction(class TR::X86FPRegInstruction &&),0,TR,X86FPRegInstruction
X86FPRegInstruction,X86FPRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::CodeGenerator *),0,TR,X86FPRegInstruction
X86FPRegMemInstruction,X86FPRegMemInstruction(class TR::X86FPRegMemInstruction &&),1,TR,X86FPRegMemInstruction
X86FPRegMemInstruction,X86FPRegMemInstruction(const class TR::X86FPRegMemInstruction &),0,TR,X86FPRegMemInstruction
X86FPRegMemInstruction,X86FPRegMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::MemoryReference *,TR::CodeGenerator *),0,TR,X86FPRegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(const class TR::X86RegMemInstruction &),1,TR,X86RegMemInstruction
X86RegMemInstruction,X86RegMemInstruction(class TR::X86RegMemInstruction &&),0,TR,X86RegMemInstruction
X86FPRemainderRegRegInstruction,X86FPRemainderRegRegInstruction(class TR::X86FPRemainderRegRegInstruction &&),1,TR,X86FPRemainderRegRegInstruction
X86FPRemainderRegRegInstruction,X86FPRemainderRegRegInstruction(const class TR::X86FPRemainderRegRegInstruction &),0,TR,X86FPRemainderRegRegInstruction
X86FPRemainderRegRegInstruction,X86FPRemainderRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPRemainderRegRegInstruction
X86FPST0ST1RegRegInstruction,X86FPST0ST1RegRegInstruction(class TR::X86FPST0ST1RegRegInstruction &&),1,TR,X86FPST0ST1RegRegInstruction
X86FPST0ST1RegRegInstruction,X86FPST0ST1RegRegInstruction(const class TR::X86FPST0ST1RegRegInstruction &),0,TR,X86FPST0ST1RegRegInstruction
X86FPST0ST1RegRegInstruction,X86FPST0ST1RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPST0ST1RegRegInstruction
X86FPST0STiRegRegInstruction,X86FPST0STiRegRegInstruction(class TR::X86FPST0STiRegRegInstruction &&),1,TR,X86FPST0STiRegRegInstruction
X86FPST0STiRegRegInstruction,X86FPST0STiRegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86FPST0STiRegRegInstruction
X86FPST0STiRegRegInstruction,X86FPST0STiRegRegInstruction(const class TR::X86FPST0STiRegRegInstruction &),0,TR,X86FPST0STiRegRegInstruction
X86FPSTiST0RegRegInstruction,X86FPSTiST0RegRegInstruction(class TR::X86FPSTiST0RegRegInstruction &&),1,TR,X86FPSTiST0RegRegInstruction
X86FPSTiST0RegRegInstruction,X86FPSTiST0RegRegInstruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,TR::Register *,TR::CodeGenerator *,_Bool),0,TR,X86FPSTiST0RegRegInstruction
X86FPSTiST0RegRegInstruction,X86FPSTiST0RegRegInstruction(const class TR::X86FPSTiST0RegRegInstruction &),0,TR,X86FPSTiST0RegRegInstruction
X86FenceInstruction,X86FenceInstruction(const class TR::X86FenceInstruction &),1,TR,X86FenceInstruction
X86FenceInstruction,X86FenceInstruction(enum TR_X86OpCodes,TR::Node *,TR::Node *,TR::CodeGenerator *),0,TR,X86FenceInstruction
X86FenceInstruction,X86FenceInstruction(class TR::X86FenceInstruction &&),0,TR,X86FenceInstruction
X86ImmInstruction,X86ImmInstruction(class TR::X86ImmInstruction &&),1,TR,X86ImmInstruction
X86ImmInstruction,X86ImmInstruction(const class TR::X86ImmInstruction &),0,TR,X86ImmInstruction
X86ImmSnippetInstruction,X86ImmSnippetInstruction(class TR::X86ImmSnippetInstruction &&),1,TR,X86ImmSnippetInstruction
X86ImmSnippetInstruction,X86ImmSnippetInstruction(const class TR::X86ImmSnippetInstruction &),0,TR,X86ImmSnippetInstruction
X86ImmSnippetInstruction,X86ImmSnippetInstruction(TR::Instruction *,enum TR_X86OpCodes,int32_t,TR::UnresolvedDataSnippet *,TR::CodeGenerator *),0,TR,X86ImmSnippetInstruction
X86ImmSymInstruction,X86ImmSymInstruction(class TR::X86ImmSymInstruction &&),1,TR,X86ImmSymInstruction
X86ImmSymInstruction,X86ImmSymInstruction(const class TR::X86ImmSymInstruction &),0,TR,X86ImmSymInstruction
X86MemImmInstruction,X86MemImmInstruction(const class TR::X86MemImmInstruction &),1,TR,X86MemImmInstruction
X86MemImmInstruction,X86MemImmInstruction(class TR::X86MemImmInstruction &&),0,TR,X86MemImmInstruction
X86MemImmInstruction,X86MemImmInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,int32_t,TR::CodeGenerator *,int32_t),0,TR,X86MemImmInstruction
X86MemImmSymInstruction,X86MemImmSymInstruction(class TR::X86MemImmSymInstruction &&),1,TR,X86MemImmSymInstruction
X86MemImmSymInstruction,X86MemImmSymInstruction(const class TR::X86MemImmSymInstruction &),0,TR,X86MemImmSymInstruction
X86MemImmSymInstruction,X86MemImmSymInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,int32_t,TR::SymbolReference *,TR::CodeGenerator *),0,TR,X86MemImmSymInstruction
X86MemRegImmInstruction,X86MemRegImmInstruction(class TR::X86MemRegImmInstruction &&),1,TR,X86MemRegImmInstruction
X86MemRegImmInstruction,X86MemRegImmInstruction(const class TR::X86MemRegImmInstruction &),0,TR,X86MemRegImmInstruction
X86MemRegImmInstruction,X86MemRegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,int32_t,TR::CodeGenerator *),0,TR,X86MemRegImmInstruction
X86MemRegRegInstruction,X86MemRegRegInstruction(class TR::X86MemRegRegInstruction &&),1,TR,X86MemRegRegInstruction
X86MemRegRegInstruction,X86MemRegRegInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::MemoryReference *,TR::Register *,TR::Register *,TR::CodeGenerator *),0,TR,X86MemRegRegInstruction
X86MemRegRegInstruction,X86MemRegRegInstruction(const class TR::X86MemRegRegInstruction &),0,TR,X86MemRegRegInstruction
X86MemTableInstruction,X86MemTableInstruction(class TR::X86MemTableInstruction &&),1,TR,X86MemTableInstruction
X86MemTableInstruction,X86MemTableInstruction(const class TR::X86MemTableInstruction &),0,TR,X86MemTableInstruction
X86PaddingSnippetInstruction,X86PaddingSnippetInstruction(const class TR::X86PaddingSnippetInstruction &),1,TR,X86PaddingSnippetInstruction
X86PaddingSnippetInstruction,X86PaddingSnippetInstruction(TR::Instruction *,uint8_t,enum TR_PaddingProperties,TR::CodeGenerator *),0,TR,X86PaddingSnippetInstruction
X86PaddingSnippetInstruction,X86PaddingSnippetInstruction(class TR::X86PaddingSnippetInstruction &&),0,TR,X86PaddingSnippetInstruction
X86RegImmInstruction,X86RegImmInstruction(class TR::X86RegImmInstruction &&),1,TR,X86RegImmInstruction
X86RegImmInstruction,X86RegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,int32_t,TR::CodeGenerator *,int32_t),0,TR,X86RegImmInstruction
X86RegImmInstruction,X86RegImmInstruction(const class TR::X86RegImmInstruction &),0,TR,X86RegImmInstruction
X86RegImmSymInstruction,X86RegImmSymInstruction(class TR::X86RegImmSymInstruction &&),1,TR,X86RegImmSymInstruction
X86RegImmSymInstruction,X86RegImmSymInstruction(const class TR::X86RegImmSymInstruction &),0,TR,X86RegImmSymInstruction
X86RegMemImmInstruction,X86RegMemImmInstruction(class TR::X86RegMemImmInstruction &&),1,TR,X86RegMemImmInstruction
X86RegMemImmInstruction,X86RegMemImmInstruction(const class TR::X86RegMemImmInstruction &),0,TR,X86RegMemImmInstruction
X86RegRegImmInstruction,X86RegRegImmInstruction(class TR::X86RegRegImmInstruction &&),1,TR,X86RegRegImmInstruction
X86RegRegImmInstruction,X86RegRegImmInstruction(const class TR::X86RegRegImmInstruction &),0,TR,X86RegRegImmInstruction
X86RegRegImmInstruction,X86RegRegImmInstruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,TR::Register *,int32_t,TR::CodeGenerator *),0,TR,X86RegRegImmInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(class TR::X86RegRegRegInstruction &&),1,TR,X86RegRegRegInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(const class TR::X86RegRegRegInstruction &),0,TR,X86RegRegRegInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(TR::Register *,TR::Register *,TR::Register *,enum TR_X86OpCodes,TR::Instruction *,TR::CodeGenerator *),0,TR,X86RegRegRegInstruction
X86RestoreVMThreadInstruction,X86RestoreVMThreadInstruction(class TR::X86RestoreVMThreadInstruction &&),1,TR,X86RestoreVMThreadInstruction
X86RestoreVMThreadInstruction,X86RestoreVMThreadInstruction(const class TR::X86RestoreVMThreadInstruction &),0,TR,X86RestoreVMThreadInstruction
X86RestoreVMThreadInstruction,X86RestoreVMThreadInstruction(enum TR_X86OpCodes,TR::Node *,TR::CodeGenerator *),0,TR,X86RestoreVMThreadInstruction
X86VFPCallCleanupInstruction,X86VFPCallCleanupInstruction(class TR::X86VFPCallCleanupInstruction &&),1,TR,X86VFPCallCleanupInstruction
X86VFPCallCleanupInstruction,X86VFPCallCleanupInstruction(const class TR::X86VFPCallCleanupInstruction &),0,TR,X86VFPCallCleanupInstruction
X86VFPCallCleanupInstruction,X86VFPCallCleanupInstruction(TR::Instruction *,int32_t,TR::CodeGenerator *),0,TR,X86VFPCallCleanupInstruction
X86VFPDedicateInstruction,X86VFPDedicateInstruction(const class TR::X86VFPDedicateInstruction &),1,TR,X86VFPDedicateInstruction
X86VFPDedicateInstruction,X86VFPDedicateInstruction(class TR::X86VFPDedicateInstruction &&),0,TR,X86VFPDedicateInstruction
X86VFPReleaseInstruction,X86VFPReleaseInstruction(const class TR::X86VFPReleaseInstruction &),0,TR,X86VFPReleaseInstruction
X86VFPReleaseInstruction,X86VFPReleaseInstruction(class TR::X86VFPReleaseInstruction &&),0,TR,X86VFPReleaseInstruction
X86VFPRestoreInstruction,X86VFPRestoreInstruction(class TR::X86VFPRestoreInstruction &&),1,TR,X86VFPRestoreInstruction
X86VFPRestoreInstruction,X86VFPRestoreInstruction(const class TR::X86VFPRestoreInstruction &),0,TR,X86VFPRestoreInstruction
X86VFPRestoreInstruction,X86VFPRestoreInstruction(TR::Instruction *,TR::X86VFPSaveInstruction *,TR::CodeGenerator *),0,TR,X86VFPRestoreInstruction
X86VFPSaveInstruction,X86VFPSaveInstruction(const class TR::X86VFPSaveInstruction &),1,TR,X86VFPSaveInstruction
X86VFPSaveInstruction,X86VFPSaveInstruction(TR::Node *,TR::CodeGenerator *),0,TR,X86VFPSaveInstruction
TR_X86FPStackRegister,TR_X86FPStackRegister(const class TR_X86FPStackRegister &),1,TR,X86FPStackRegister
TR_X86FPStackRegister,TR_X86FPStackRegister(class TR_X86FPStackRegister &&),0,TR,X86FPStackRegister
TR_X86FPStackRegister,TR_X86FPStackRegister(RegState,TR_X86FPStackRegisters,TR::class RealRegister::RegNum,TR::CodeGenerator *),0,TR,X86FPStackRegister
AMD64Imm64SymInstruction,AMD64Imm64SymInstruction(TR::Instruction *,enum TR_X86OpCodes,uint64_t,TR::SymbolReference *,TR::CodeGenerator *),1,TR,AMD64Imm64SymInstruction
AMD64RegImm64Instruction,AMD64RegImm64Instruction(enum TR_X86OpCodes,TR::Node *,TR::Register *,uint64_t,TR::CodeGenerator *,int32_t),1,TR,AMD64RegImm64Instruction
X86BoundaryAvoidanceInstruction,X86BoundaryAvoidanceInstruction(const class TR::X86BoundaryAvoidanceInstruction &),1,TR,X86BoundaryAvoidanceInstruction
X86FPRegInstruction,X86FPRegInstruction(class TR::X86FPRegInstruction &&),1,TR,X86FPRegInstruction
X86FPRegInstruction,X86FPRegInstruction(const class TR::X86FPRegInstruction &),0,TR,X86FPRegInstruction
X86FPRegMemInstruction,X86FPRegMemInstruction(const class TR::X86FPRegMemInstruction &),1,TR,X86FPRegMemInstruction
X86FPRegMemInstruction,X86FPRegMemInstruction(class TR::X86FPRegMemInstruction &&),0,TR,X86FPRegMemInstruction
X86VFPSaveInstruction,X86VFPSaveInstruction(TR::Instruction *,TR::CodeGenerator *),1,TR,X86VFPSaveInstruction
X86SystemLinkage,X86SystemLinkage(TR::CodeGenerator *),1,TR,X86SystemLinkage
buildArgs,buildArgs(TR::Node *,TR::RegisterDependencyConditions *),1,TR,X86SystemLinkage
buildVolatileAndReturnDependencies,buildVolatileAndReturnDependencies(TR::Node *,TR::RegisterDependencyConditions *),1,TR,X86SystemLinkage
computeMemoryArgSize,computeMemoryArgSize(TR::Node *,int32_t,int32_t,int8_t),1,TR,X86SystemLinkage
copyParametersToHomeLocation,copyParametersToHomeLocation(TR::Instruction *),1,TR,X86SystemLinkage
getAlignment,getAlignment(TR::DataType),1,TR,X86SystemLinkage
getParameterStartingPos,getParameterStartingPos(int32_t &,uint32_t),1,TR,X86SystemLinkage
getSingleWordFrameAllocationRegister,getSingleWordFrameAllocationRegister(),1,TR,X86SystemLinkage
layoutParm,layoutParm(TR::Node *,int32_t &,uint16_t &,uint16_t &,TR::parmLayoutResult &),1,TR,X86SystemLinkage
layoutParm,layoutParm(TR::ParameterSymbol *,int32_t &,uint16_t &,uint16_t &,TR::parmLayoutResult &),0,TR,X86SystemLinkage
layoutTypeOnStack,layoutTypeOnStack(TR::DataType,int32_t &,TR::parmLayoutResult &),1,TR,X86SystemLinkage
mapIncomingParms,mapIncomingParms(TR::ResolvedMethodSymbol *,uint32_t &),0,TR,X86SystemLinkage
operator=,operator=(class TR::X86SystemLinkage &&),0,TR,X86SystemLinkage
operator=,operator=(const class TR::X86SystemLinkage &),0,TR,X86SystemLinkage
restorePreservedRegisters,restorePreservedRegisters(TR::Instruction *),1,TR,X86SystemLinkage
savePreservedRegisters,savePreservedRegisters(TR::Instruction *),1,TR,X86SystemLinkage
setUpStackSizeForCallNode,setUpStackSizeForCallNode(TR::Node *),1,TR,X86SystemLinkage
~X86SystemLinkage,~X86SystemLinkage(),1,TR,X86SystemLinkage
operator new,operator new(size_t,class TR_PersistentMemory *),1,OMR,Instruction
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,CodeGenerator
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,SymbolReference
AMD64RegImm64Instruction,AMD64RegImm64Instruction(TR::Instruction *,enum TR_X86OpCodes,TR::Register *,uint64_t,TR::RegisterDependencyConditions *,TR::CodeGenerator *,int32_t),1,TR,AMD64RegImm64Instruction
X86HelperCallSnippet,X86HelperCallSnippet(TR::CodeGenerator *,TR::LabelSymbol *,TR::LabelSymbol *,TR::Node *,int32_t),1,TR,X86HelperCallSnippet
X86HelperCallSnippet,X86HelperCallSnippet(const class TR::X86HelperCallSnippet &),0,TR,X86HelperCallSnippet
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,MemoryReference
operator new[],operator new[](size_t,TR::Region &),0,OMR,MemoryReference
Linkage,Linkage(class TR::Linkage &&),0,TR,Linkage
Linkage,Linkage(const class TR::Linkage &),0,TR,Linkage
X86SystemLinkage,X86SystemLinkage(class TR::X86SystemLinkage &&),1,TR,X86SystemLinkage
X86SystemLinkage,X86SystemLinkage(TR::CodeGenerator *),0,TR,X86SystemLinkage
X86SystemLinkage,X86SystemLinkage(const class TR::X86SystemLinkage &),0,TR,X86SystemLinkage
X86CallMemInstruction,X86CallMemInstruction(enum TR_X86OpCodes,TR::Node *,TR::MemoryReference *,TR::CodeGenerator *),1,TR,X86CallMemInstruction
X86RegRegRegInstruction,X86RegRegRegInstruction(TR::Register *,TR::Register *,TR::Register *,TR::Node *,enum TR_X86OpCodes,TR::CodeGenerator *),1,TR,X86RegRegRegInstruction
AMD64ABILinkage,AMD64ABILinkage(class TR::AMD64ABILinkage &&),1,TR,AMD64ABILinkage
AMD64ABILinkage,AMD64ABILinkage(TR::CodeGenerator *),0,TR,AMD64ABILinkage
AMD64ABILinkage,AMD64ABILinkage(const class TR::AMD64ABILinkage &),0,TR,AMD64ABILinkage
AMD64SystemLinkage,AMD64SystemLinkage(TR::CodeGenerator *),1,TR,AMD64SystemLinkage
AMD64SystemLinkage,AMD64SystemLinkage(class TR::AMD64SystemLinkage &&),0,TR,AMD64SystemLinkage
AMD64SystemLinkage,AMD64SystemLinkage(const class TR::AMD64SystemLinkage &),0,TR,AMD64SystemLinkage
X86SystemLinkage,X86SystemLinkage(class TR::X86SystemLinkage &&),0,TR,X86SystemLinkage
layoutTypeInRegs,layoutTypeInRegs(TR::DataType,uint16_t &,uint16_t &,TR::parmLayoutResult &),1,TR,AMD64SystemLinkage
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,Linkage
operator=,operator=(class TR::AMD64SystemLinkage &&),0,TR,AMD64SystemLinkage
operator=,operator=(const class TR::AMD64SystemLinkage &),0,TR,AMD64SystemLinkage
operator=,operator=(const class TR::AMD64ABILinkage &),0,TR,AMD64ABILinkage
operator=,operator=(class TR::AMD64ABILinkage &&),0,TR,AMD64ABILinkage
~AMD64ABILinkage,~AMD64ABILinkage(),1,TR,AMD64ABILinkage
~AMD64SystemLinkage,~AMD64SystemLinkage(),1,TR,AMD64SystemLinkage
X86RegInstruction,X86RegInstruction(const class TR::X86RegInstruction &),1,TR,X86RegInstruction
AMD64Win64FastCallLinkage,AMD64Win64FastCallLinkage(class TR::AMD64Win64FastCallLinkage &&),1,TR,AMD64Win64FastCallLinkage
AMD64Win64FastCallLinkage,AMD64Win64FastCallLinkage(const class TR::AMD64Win64FastCallLinkage &),0,TR,AMD64Win64FastCallLinkage
AMD64Win64FastCallLinkage,AMD64Win64FastCallLinkage(TR::CodeGenerator *),0,TR,AMD64Win64FastCallLinkage
operator=,operator=(const class TR::AMD64Win64FastCallLinkage &),0,TR,AMD64Win64FastCallLinkage
operator=,operator=(class TR::AMD64Win64FastCallLinkage &&),0,TR,AMD64Win64FastCallLinkage
~AMD64Win64FastCallLinkage,~AMD64Win64FastCallLinkage(),1,TR,AMD64Win64FastCallLinkage
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,AliasBuilder
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,GlobalSet::SparseSet
operator delete,operator delete(void *,size_t),0,TR,GlobalSet::SparseSet
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,GlobalSet::SparseSet
operator new,operator new(size_t,TR_ArenaAllocator *),0,TR,GlobalSet::SparseSet
IA32DataSnippet,IA32DataSnippet(const class TR::IA32DataSnippet &),1,TR,IA32DataSnippet
IA32DataSnippet,IA32DataSnippet(class TR::IA32DataSnippet &&),0,TR,IA32DataSnippet
TR_X86FPStackIterator,TR_X86FPStackIterator(class TR_X86FPStackIterator &&),1,TR,X86FPStackIterator
TR_X86FPStackIterator,TR_X86FPStackIterator(const class TR_X86FPStackIterator &),0,TR,X86FPStackIterator
TR_X86FPStackIterator,TR_X86FPStackIterator(TR::Machine *,enum TR_RegisterKinds),0,TR,X86FPStackIterator
TR_InterferenceGraph,TR_InterferenceGraph(TR::Compilation *),1,TR,InterferenceGraph
hasInterference,hasInterference(void *,void *),1,TR,InterferenceGraph
hasInterference,hasInterference(class TR_IGNode *,class TR_IGNode *),0,TR,InterferenceGraph
TR_X86ScratchRegisterManager,TR_X86ScratchRegisterManager(class TR_X86ScratchRegisterManager &&),1,TR,X86ScratchRegisterManager
TR_X86ScratchRegisterManager,TR_X86ScratchRegisterManager(const class TR_X86ScratchRegisterManager &),0,TR,X86ScratchRegisterManager
TR_X86ScratchRegisterManager,TR_X86ScratchRegisterManager(int32_t,TR::CodeGenerator *),0,TR,X86ScratchRegisterManager
~TR_ScratchRegisterManager,~TR_ScratchRegisterManager(),1,TR,ScratchRegisterManager
Register,Register(enum TR_RegisterKinds,uint16_t),1,OMR,Register
Register,Register(class OMR::Register &&),0,OMR,Register
operator delete,operator delete(void *,size_t),1,OMR,Register
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,RegisterDependencyConditions
Register,Register(enum TR_RegisterKinds),1,OMR,Register
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,Register
operator=,operator=(const class OMR::MemoryReference &),1,OMR,MemoryReference
operator=,operator=(class OMR::MemoryReference &&),0,OMR,MemoryReference
CodeCache,CodeCache(const class OMR::CodeCache &),1,OMR,CodeCache
CodeCache,CodeCache(),0,OMR,CodeCache
CodeCache,CodeCache(class OMR::CodeCache &&),0,OMR,CodeCache
CodeCacheBase,CodeCacheBase(const class OMR::CodeCacheBase &),1,OMR,CodeCacheBase
CodeCacheBase,CodeCacheBase(),0,OMR,CodeCacheBase
CodeCacheBase,CodeCacheBase(class OMR::CodeCacheBase &&),0,OMR,CodeCacheBase
addFlags,addFlags(uint32_t),1,OMR,CodeCache
addFreeBlock,addFreeBlock(void *),1,OMR,CodeCache
addFreeBlock2WithCallSite,addFreeBlock2WithCallSite(uint8_t *,uint8_t *,char *,uint32_t),1,OMR,CodeCache
addResolvedMethod,addResolvedMethod(class TR_OpaqueMethodBlock *),1,OMR,CodeCache
alignColdCodeAlloc,alignColdCodeAlloc(uint32_t),1,OMR,CodeCacheBase
alignWarmCodeAlloc,alignWarmCodeAlloc(uint32_t),1,OMR,CodeCacheBase
allocate,allocate(TR::CodeCacheManager *,size_t,int32_t),1,OMR,CodeCache
allocateCodeMemory,allocateCodeMemory(size_t,size_t,uint8_t **,_Bool,_Bool),1,OMR,CodeCache
allocateHashEntry,allocateHashEntry(),1,OMR,CodeCache
allocateTempTrampoline,allocateTempTrampoline(),1,OMR,CodeCache
allocateTempTrampolineSyncBlock,allocateTempTrampolineSyncBlock(),1,OMR,CodeCache
allocateTrampoline,allocateTrampoline(),1,OMR,CodeCache
almostFull,almostFull(),1,OMR,CodeCache
checkForErrors,checkForErrors(),1,OMR,CodeCache
createTrampoline,createTrampoline(CodeCacheTrampolineCode *,void *,class TR_OpaqueMethodBlock *),1,OMR,CodeCache
destroy,destroy(TR::CodeCacheManager *),1,OMR,CodeCache
dumpCodeCache,dumpCodeCache(),1,OMR,CodeCache
findFreeBlock,findFreeBlock(size_t,_Bool,_Bool),1,OMR,CodeCache
findOrAddResolvedMethod,findOrAddResolvedMethod(class TR_OpaqueMethodBlock *),1,OMR,CodeCache
findResolvedMethod,findResolvedMethod(class TR_OpaqueMethodBlock *),1,OMR,CodeCache
findTrampoline,findTrampoline(class TR_OpaqueMethodBlock *),1,OMR,CodeCache
findTrampoline,findTrampoline(int32_t),0,OMR,CodeCache
flags,flags(),1,OMR,CodeCache
freeHashEntry,freeHashEntry(struct OMR::CodeCacheHashEntry *),1,OMR,CodeCache
getCCPreLoadedCodeAddress,getCCPreLoadedCodeAddress(enum TR_CCPreLoadedCode,TR::CodeGenerator *),1,OMR,CodeCache
getCodeAlloc,getCodeAlloc(),1,OMR,CodeCache
getCodeBase,getCodeBase(),1,OMR,CodeCache
getCodeTop,getCodeTop(),1,OMR,CodeCache
getColdCodeAlloc,getColdCodeAlloc(),1,OMR,CodeCacheBase
getFreeContiguousSpace,getFreeContiguousSpace(),1,OMR,CodeCache
getHelperBase,getHelperBase(),1,OMR,CodeCache
getHelperTop,getHelperTop(),1,OMR,CodeCache
getNextCodeCache,getNextCodeCache(),1,OMR,CodeCache
getReservingCompThreadID,getReservingCompThreadID(),1,OMR,CodeCache
getSizeOfLargestFreeColdBlock,getSizeOfLargestFreeColdBlock(),1,OMR,CodeCache
getSizeOfLargestFreeWarmBlock,getSizeOfLargestFreeWarmBlock(),1,OMR,CodeCache
getWarmCodeAlloc,getWarmCodeAlloc(),1,OMR,CodeCacheBase
initialize,initialize(TR::CodeCacheManager *,TR::CodeCacheMemorySegment *,size_t,class OMR::CodeCacheHashEntrySlab *),1,OMR,CodeCache
isCCPreLoadedCodeInitialized,isCCPreLoadedCodeInitialized(),1,OMR,CodeCache
isReserved,isReserved(),1,OMR,CodeCache
linkTo,linkTo(TR::CodeCache *),1,OMR,CodeCache
next,next(),1,OMR,CodeCache
operator new,operator new(size_t,TR::CodeCache *),1,OMR,CodeCache
patchCallPoint,patchCallPoint(class TR_OpaqueMethodBlock *,void *,void *,void *),1,OMR,CodeCache
printFreeBlocks,printFreeBlocks(),1,OMR,CodeCache
printOccupancyStats,printOccupancyStats(),1,OMR,CodeCache
removeFreeBlock,removeFreeBlock(size_t,struct OMR::CodeCacheFreeCacheBlock *,struct OMR::CodeCacheFreeCacheBlock *),1,OMR,CodeCache
replaceTrampoline,replaceTrampoline(class TR_OpaqueMethodBlock *,void *,void *,void *,_Bool),1,OMR,CodeCache
reserve,reserve(int32_t),1,OMR,CodeCache
reserveNTrampolines,reserveNTrampolines(int64_t),1,OMR,CodeCache
reserveResolvedTrampoline,reserveResolvedTrampoline(class TR_OpaqueMethodBlock *,_Bool),1,OMR,CodeCache
reserveTrampoline,reserveTrampoline(),1,OMR,CodeCache
resizeCodeMemory,resizeCodeMemory(void *,size_t),1,OMR,CodeCache
saveTempTrampoline,saveTempTrampoline(struct OMR::CodeCacheHashEntry *),1,OMR,CodeCache
segment,segment(),1,OMR,CodeCache
self,self(),1,OMR,CodeCache
setAlmostFull,setAlmostFull(enum TR_YesNoMaybe),1,OMR,CodeCache
setCCPreLoadedCodeAddress,setCCPreLoadedCodeAddress(enum TR_CCPreLoadedCode,void *),1,OMR,CodeCache
setColdCodeAlloc,setColdCodeAlloc(uint8_t *),1,OMR,CodeCacheBase
setReservingCompThreadID,setReservingCompThreadID(int32_t),1,OMR,CodeCache
setWarmCodeAlloc,setWarmCodeAlloc(uint8_t *),1,OMR,CodeCacheBase
syncTempTrampolines,syncTempTrampolines(),1,OMR,CodeCache
tempTrampolinesMax,tempTrampolinesMax(),1,OMR,CodeCache
unreserve,unreserve(),1,OMR,CodeCache
unreserveTrampoline,unreserveTrampoline(),1,OMR,CodeCache
updateMaxSizeOfFreeBlocks,updateMaxSizeOfFreeBlocks(struct OMR::CodeCacheFreeCacheBlock *,size_t),1,OMR,CodeCache
writeMethodHeader,writeMethodHeader(void *,size_t,_Bool),1,OMR,CodeCache
~CodeCacheBase,~CodeCacheBase(),1,OMR,CodeCacheBase
CacheCriticalSection,CacheCriticalSection(class OMR::CodeCache::CacheCriticalSection &&),1,OMR,CodeCache::CacheCriticalSection
CacheCriticalSection,CacheCriticalSection(TR::CodeCache *),0,OMR,CodeCache::CacheCriticalSection
CriticalSection,CriticalSection(const class OMR::CriticalSection &),1,OMR,CriticalSection
CriticalSection,CriticalSection(TR::Monitor *),0,OMR,CriticalSection
operator=,operator=(class OMR::CriticalSection),1,OMR,CriticalSection
operator=,operator=(class OMR::CodeCache::CacheCriticalSection &&),0,OMR,CodeCache::CacheCriticalSection
~CacheCriticalSection,~CacheCriticalSection(),1,OMR,CodeCache::CacheCriticalSection
~CriticalSection,~CriticalSection(),1,OMR,CriticalSection
CacheListCriticalSection,CacheListCriticalSection(class OMR::CodeCacheManager::CacheListCriticalSection &&),1,OMR,CodeCacheManager::CacheListCriticalSection
CacheListCriticalSection,CacheListCriticalSection(TR::CodeCacheManager *),0,OMR,CodeCacheManager::CacheListCriticalSection
operator=,operator=(class OMR::CodeCacheManager::CacheListCriticalSection &&),0,OMR,CodeCacheManager::CacheListCriticalSection
~CacheListCriticalSection,~CacheListCriticalSection(),1,OMR,CodeCacheManager::CacheListCriticalSection
RepositoryMonitorCriticalSection,RepositoryMonitorCriticalSection(class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &&),1,OMR,CodeCacheManager::RepositoryMonitorCriticalSection
RepositoryMonitorCriticalSection,RepositoryMonitorCriticalSection(TR::CodeCacheManager *),0,OMR,CodeCacheManager::RepositoryMonitorCriticalSection
operator=,operator=(class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &&),0,OMR,CodeCacheManager::RepositoryMonitorCriticalSection
~RepositoryMonitorCriticalSection,~RepositoryMonitorCriticalSection(),1,OMR,CodeCacheManager::RepositoryMonitorCriticalSection
CodeCacheConfig,CodeCacheConfig(class OMR::CodeCacheConfig &&),1,OMR,CodeCacheConfig
CodeCacheConfig,CodeCacheConfig(const class OMR::CodeCacheConfig &),0,OMR,CodeCacheConfig
CodeCacheConfig,CodeCacheConfig(),0,OMR,CodeCacheConfig
CodeCacheConfig,CodeCacheConfig(class TR::CodeCacheConfig &&),0,TR,CodeCacheConfig
CodeCacheConfig,CodeCacheConfig(const class TR::CodeCacheConfig &),0,TR,CodeCacheConfig
allowedToGrowCache,allowedToGrowCache(),1,OMR,CodeCacheConfig
canChangeNumCodeCaches,canChangeNumCodeCaches(),1,OMR,CodeCacheConfig
ccPreLoadedCodeSize,ccPreLoadedCodeSize(),1,OMR,CodeCacheConfig
codeCacheAlignment,codeCacheAlignment(),1,OMR,CodeCacheConfig
codeCacheFreeBlockRecylingEnabled,codeCacheFreeBlockRecylingEnabled(),1,OMR,CodeCacheConfig
codeCacheHashEntryAllocatorSlabSize,codeCacheHashEntryAllocatorSlabSize(),1,OMR,CodeCacheConfig
codeCacheHelperAlignment,codeCacheHelperAlignment(),1,OMR,CodeCacheConfig
codeCacheHelperAlignmentMask,codeCacheHelperAlignmentMask(),1,OMR,CodeCacheConfig
codeCacheKB,codeCacheKB(),1,OMR,CodeCacheConfig
codeCacheMethodBodyAllocRetries,codeCacheMethodBodyAllocRetries(),1,OMR,CodeCacheConfig
codeCachePadKB,codeCachePadKB(),1,OMR,CodeCacheConfig
codeCacheTempTrampolineSyncArraySize,codeCacheTempTrampolineSyncArraySize(),1,OMR,CodeCacheConfig
codeCacheTotalKB,codeCacheTotalKB(),1,OMR,CodeCacheConfig
codeCacheTrampolineAlignmentBytes,codeCacheTrampolineAlignmentBytes(),1,OMR,CodeCacheConfig
coldEyeCatcher,coldEyeCatcher(),1,OMR,CodeCacheConfig
doSanityChecks,doSanityChecks(),1,OMR,CodeCacheConfig
emitElfObject,emitElfObject(),1,OMR,CodeCacheConfig
largeCodePageFlags,largeCodePageFlags(),1,OMR,CodeCacheConfig
largeCodePageSize,largeCodePageSize(),1,OMR,CodeCacheConfig
lowCodeCacheThreshold,lowCodeCacheThreshold(),1,OMR,CodeCacheConfig
maxNumberOfCodeCaches,maxNumberOfCodeCaches(),1,OMR,CodeCacheConfig
mccCallbacks,mccCallbacks(),1,OMR,CodeCacheConfig
needsMethodTrampolines,needsMethodTrampolines(),1,OMR,CodeCacheConfig
numRuntimeHelpers,numRuntimeHelpers(),1,OMR,CodeCacheConfig
self,self(),1,OMR,CodeCacheConfig
setCodeCacheHelperAlignment,setCodeCacheHelperAlignment(size_t),1,OMR,CodeCacheConfig
trampolineCodeSize,trampolineCodeSize(),1,OMR,CodeCacheConfig
trampolineSpacePercentage,trampolineSpacePercentage(),1,OMR,CodeCacheConfig
verboseCodeCache,verboseCodeCache(),1,OMR,CodeCacheConfig
verbosePerformance,verbosePerformance(),1,OMR,CodeCacheConfig
verboseReclamation,verboseReclamation(),1,OMR,CodeCacheConfig
warmEyeCatcher,warmEyeCatcher(),1,OMR,CodeCacheConfig
~CodeCacheConfig,~CodeCacheConfig(),1,OMR,CodeCacheConfig
CodeCacheManager,CodeCacheManager(const class OMR::CodeCacheManager &),1,OMR,CodeCacheManager
CodeCacheManager,CodeCacheManager(class OMR::CodeCacheManager &&),0,OMR,CodeCacheManager
CodeCacheManager,CodeCacheManager(class TR_FrontEnd *),0,OMR,CodeCacheManager
CodeCacheManager,CodeCacheManager(const class TestCompiler::CodeCacheManager &),0,TestCompiler,CodeCacheManager
CodeCacheManager,CodeCacheManager(class TestCompiler::CodeCacheManager &&),0,TestCompiler,CodeCacheManager
addCodeCache,addCodeCache(TR::CodeCache *),1,OMR,CodeCacheManager
addFreeBlock,addFreeBlock(void *,uint8_t *),1,OMR,CodeCacheManager
allocateCodeCacheObject,allocateCodeCacheObject(TR::CodeCacheMemorySegment *,size_t,class OMR::CodeCacheHashEntrySlab *),1,OMR,CodeCacheManager
allocateCodeCacheRepository,allocateCodeCacheRepository(size_t),1,OMR,CodeCacheManager
allocateCodeCacheSegment,allocateCodeCacheSegment(size_t,size_t &,void *),1,TestCompiler,CodeCacheManager
allocateCodeMemory,allocateCodeMemory(size_t,size_t,TR::CodeCache **,uint8_t **,_Bool,_Bool),1,OMR,CodeCacheManager
allocateCodeMemoryWithRetries,allocateCodeMemoryWithRetries(size_t,size_t,TR::CodeCache **,int32_t,uint8_t **,_Bool,_Bool),1,OMR,CodeCacheManager
allocateRepositoryCodeCache,allocateRepositoryCodeCache(),1,OMR,CodeCacheManager
almostOutOfCodeCache,almostOutOfCodeCache(),1,OMR,CodeCacheManager
cacheListMutex,cacheListMutex(),1,OMR,CodeCacheManager
canAddNewCodeCache,canAddNewCodeCache(),1,OMR,CodeCacheManager
carveCodeCacheSpaceFromRepository,carveCodeCacheSpaceFromRepository(size_t,size_t &),1,OMR,CodeCacheManager
chooseCacheStartAddress,chooseCacheStartAddress(size_t),1,OMR,CodeCacheManager
codeCacheConfig,codeCacheConfig(),1,OMR,CodeCacheManager
decreaseFreeSpaceInCodeCacheRepository,decreaseFreeSpaceInCodeCacheRepository(size_t),1,OMR,CodeCacheManager
destroy,destroy(),1,OMR,CodeCacheManager
dumpCodeCaches,dumpCodeCaches(),1,OMR,CodeCacheManager
fe,fe(),1,OMR,CodeCacheManager
findCodeCacheFromPC,findCodeCacheFromPC(void *),1,OMR,CodeCacheManager
findHelperTrampoline,findHelperTrampoline(void *,int32_t),1,OMR,CodeCacheManager
findMethodTrampoline,findMethodTrampoline(class TR_OpaqueMethodBlock *,void *),1,OMR,CodeCacheManager
freeMemory,freeMemory(void *),1,OMR,CodeCacheManager
freeMemorySegment,freeMemorySegment(TR::CodeCacheMemorySegment *),1,OMR,CodeCacheManager
getCodeCacheRepositoryMonitor,getCodeCacheRepositoryMonitor(),1,OMR,CodeCacheManager
getCurrentNumberOfCodeCaches,getCurrentNumberOfCodeCaches(),1,OMR,CodeCacheManager
getFirstCodeCache,getFirstCodeCache(),1,OMR,CodeCacheManager
getMemory,getMemory(size_t),1,OMR,CodeCacheManager
getNewCacheMemorySegment,getNewCacheMemorySegment(size_t,size_t &),1,OMR,CodeCacheManager
getNewCodeCache,getNewCodeCache(int32_t),1,OMR,CodeCacheManager
getRepositoryCodeCacheAddress,getRepositoryCodeCacheAddress(),1,OMR,CodeCacheManager
increaseFreeSpaceInCodeCacheRepository,increaseFreeSpaceInCodeCacheRepository(size_t),1,OMR,CodeCacheManager
initialize,initialize(_Bool,uint32_t),1,OMR,CodeCacheManager
initializeELFHeader,initializeELFHeader(),1,OMR,CodeCacheManager
initializeELFHeaderForPlatform,initializeELFHeaderForPlatform(struct OMR::ELFCodeCacheHeader *),1,OMR,CodeCacheManager
initializeELFTrailer,initializeELFTrailer(),1,OMR,CodeCacheManager
initialized,initialized(),1,OMR,CodeCacheManager
instance,instance(),1,TestCompiler,CodeCacheManager
jitConfig,jitConfig(),1,TestCompiler,CodeCacheManager
lateInitialization,lateInitialization(),1,OMR,CodeCacheManager
lowCodeCacheSpaceThresholdReached,lowCodeCacheSpaceThresholdReached(),1,OMR,CodeCacheManager
operator new,operator new(size_t,TR::CodeCacheManager *),1,TestCompiler,CodeCacheManager
performSizeAdjustments,performSizeAdjustments(size_t &,size_t &,_Bool,_Bool),1,OMR,CodeCacheManager
printMccStats,printMccStats(),1,OMR,CodeCacheManager
printOccupancyStats,printOccupancyStats(),1,OMR,CodeCacheManager
printRemainingSpaceInCodeCaches,printRemainingSpaceInCodeCaches(),1,OMR,CodeCacheManager
pyfe,pyfe(),1,TestCompiler,CodeCacheManager
registerCompiledMethod,registerCompiledMethod(const char *,uint8_t *,uint32_t),1,OMR,CodeCacheManager
replaceTrampoline,replaceTrampoline(class TR_OpaqueMethodBlock *,void *,void *,void *,void *,_Bool),1,OMR,CodeCacheManager
repositoryCodeCacheCreated,repositoryCodeCacheCreated(),1,OMR,CodeCacheManager
reservationInterfaceCache,reservationInterfaceCache(void *,class TR_OpaqueMethodBlock *),1,OMR,CodeCacheManager
reserveCodeCache,reserveCodeCache(_Bool,size_t,int32_t,int32_t *),1,OMR,CodeCacheManager
self,self(),1,OMR,CodeCacheManager
setCodeCacheFull,setCodeCacheFull(),1,OMR,CodeCacheManager
setHasFailedCodeCacheAllocation,setHasFailedCodeCacheAllocation(),1,OMR,CodeCacheManager
setupMemorySegmentFromRepository,setupMemorySegmentFromRepository(uint8_t *,uint8_t *,size_t &),1,OMR,CodeCacheManager
synchronizeTrampolines,synchronizeTrampolines(),1,OMR,CodeCacheManager
undoCarvingFromRepository,undoCarvingFromRepository(TR::CodeCacheMemorySegment *),1,OMR,CodeCacheManager
unreserveCodeCache,unreserveCodeCache(TR::CodeCache *),1,OMR,CodeCacheManager
usingRepository,usingRepository(),1,OMR,CodeCacheManager
~CodeCacheManager,~CodeCacheManager(),1,OMR,CodeCacheManager
FEBase<Derived>,FEBase<Derived>(),1,TR,FEBase
FECommon,FECommon(const class TR::FECommon &),1,TR,FECommon
FECommon,FECommon(),0,TR,FECommon
FECommon,FECommon(class TR::FECommon &&),0,TR,FECommon
FrontEnd,FrontEnd(const class TestCompiler::FrontEnd &),1,TestCompiler,FrontEnd
FrontEnd,FrontEnd(class TestCompiler::FrontEnd &&),0,TestCompiler,FrontEnd
FrontEnd,FrontEnd(),0,TestCompiler,FrontEnd
FrontEnd,FrontEnd(class TR::FrontEnd &&),0,TR,FrontEnd
TR_FrontEnd,TR_FrontEnd(const class TR_FrontEnd &),1,TR,FrontEnd
TR_FrontEnd,TR_FrontEnd(class TR_FrontEnd &&),0,TR,FrontEnd
calculateSizeOfStackAtlas,calculateSizeOfStackAtlas(_Bool,uint32_t,uint32_t,TR::Compilation *),1,TestCompiler,FrontEnd
codeCacheManager,codeCacheManager(),1,TR,FEBase
createStackAtlas,createStackAtlas(_Bool,uint32_t,uint32_t,uint8_t *,uint32_t,TR::Compilation *),1,TestCompiler,FrontEnd
encodeStackMap,encodeStackMap(class TR_GCStackMap *,uint8_t *,_Bool,uint32_t,TR::Compilation *),1,TestCompiler,FrontEnd
getStartTime,getStartTime(),1,TR,FEBase
instance,instance(),1,TestCompiler,FrontEnd
jitConfig,jitConfig(),1,TR,FEBase
mapsAreIdentical,mapsAreIdentical(class TR_GCStackMap *,class TR_GCStackMap *,TR::GCStackAtlas *,TR::Compilation *),1,TestCompiler,FrontEnd
operator=,operator=(class TR::FECommon &&),0,TR,FECommon
operator=,operator=(const class TR::FECommon &),0,TR,FECommon
operator=,operator=(class TestCompiler::FrontEnd &&),0,TestCompiler,FrontEnd
operator=,operator=(const class TestCompiler::FrontEnd &),0,TestCompiler,FrontEnd
operator=,operator=(const class TR::FrontEnd &),0,TR,FrontEnd
operator=,operator=(class TR::FrontEnd &&),0,TR,FrontEnd
persistentMemory,persistentMemory(),1,TR,FECommon
singleton,singleton(),1,TR,FEBase
switchCodeCache,switchCodeCache(TR::CodeCache *),1,TR,FEBase
~FECommon,~FECommon(),1,TR,FECommon
~FrontEnd,~FrontEnd(),1,TestCompiler,FrontEnd
~TR_PersistentMemory,~TR_PersistentMemory(),1,TR,PersistentMemory
BinaryOpIlInjector,BinaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),1,TestCompiler,BinaryOpIlInjector
IlInjector,IlInjector(const class OMR::IlInjector &),1,OMR,IlInjector
IlInjector,IlInjector(TR::TypeDictionary *),0,OMR,IlInjector
IlInjector,IlInjector(TR::IlInjector *),0,OMR,IlInjector
IlInjector,IlInjector(class TestCompiler::IlInjector &&),0,TestCompiler,IlInjector
IlInjector,IlInjector(TR::ResolvedMethod *,TR::TypeDictionary *,class TestCompiler::TestDriver *),0,TestCompiler,IlInjector
IlInjector,IlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *),0,TestCompiler,IlInjector
IlInjector,IlInjector(const class TestCompiler::IlInjector &),0,TestCompiler,IlInjector
IlInjector,IlInjector(class TR::IlInjector &&),0,TR,IlInjector
IlInjector,IlInjector(const class TR::IlInjector &),0,TR,IlInjector
IlInjector,IlInjector(TR::TypeDictionary *,TestCompiler::TestDriver *),0,TR,IlInjector
IlInjector,IlInjector(TR::ResolvedMethod *,TR::TypeDictionary *,TestCompiler::TestDriver *),0,TR,IlInjector
OpIlInjector,OpIlInjector(const class TestCompiler::OpIlInjector &),1,TestCompiler,OpIlInjector
OpIlInjector,OpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,OpIlInjector
OpIlInjector,OpIlInjector(class TestCompiler::OpIlInjector &&),0,TestCompiler,OpIlInjector
TR_IlGenerator,TR_IlGenerator(const class TR_IlGenerator &),1,TR,IlGenerator
aconst,aconst(uintptrj_t),1,OMR,IlInjector
aconstParm,aconstParm(uint32_t,uintptrj_t),1,TestCompiler,OpIlInjector
allocateBlocks,allocateBlocks(int32_t),1,OMR,IlInjector
arrayLoad,arrayLoad(TR::Node *,TR::Node *,TR::IlType *),1,OMR,IlInjector
asMethodBuilder,asMethodBuilder(),1,OMR,IlInjector
bconst,bconst(int8_t),1,OMR,IlInjector
bconstParm,bconstParm(uint32_t,int8_t),1,TestCompiler,OpIlInjector
block,block(int32_t),1,OMR,IlInjector
blocks,blocks(),1,OMR,IlInjector
branchToBlock,branchToBlock(int32_t),1,OMR,IlInjector
callFunction,callFunction(TR::ResolvedMethod *,TR::IlType *,int32_t,TR::Node *),1,TestCompiler,IlInjector
cfg,cfg(),1,OMR,IlInjector
comp,comp(),1,OMR,IlInjector
createBlocks,createBlocks(int32_t),1,OMR,IlInjector
createWithoutSymRef,createWithoutSymRef(TR::ILOpCodes,uint16_t),1,OMR,IlInjector
currentByteCodeIndex,currentByteCodeIndex(),1,TR,IlGenerator
currentCallSiteIndex,currentCallSiteIndex(),1,TR,IlGenerator
dconst,dconst(double),1,OMR,IlInjector
dconstParm,dconstParm(uint32_t,double),1,TestCompiler,OpIlInjector
details,details(),1,OMR,IlInjector
fconst,fconst(float),1,OMR,IlInjector
fconstParm,fconstParm(uint32_t,float),1,TestCompiler,OpIlInjector
fe,fe(),1,OMR,IlInjector
genIL,genIL(),1,TR,IlGenerator
genTreeTop,genTreeTop(TR::Node *),1,OMR,IlInjector
generateFallThrough,generateFallThrough(),1,OMR,IlInjector
generateToBlock,generateToBlock(int32_t),1,OMR,IlInjector
getCurrentBlock,getCurrentBlock(),1,TR,IlGenerator
gotoBlock,gotoBlock(TR::Block *),1,OMR,IlInjector
i2l,i2l(TR::Node *),1,OMR,IlInjector
iconst,iconst(int32_t),1,OMR,IlInjector
iconstParm,iconstParm(uint32_t,int32_t),1,TestCompiler,OpIlInjector
ifjump,ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,int32_t),1,OMR,IlInjector
ifjump,ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Block *),0,OMR,IlInjector
initOptArgs,initOptArgs(uint32_t),1,TestCompiler,OpIlInjector
initPrimitiveTypes,initPrimitiveTypes(),1,OMR,IlInjector
initialize,initialize(TR::IlGeneratorMethodDetails *,TR::ResolvedMethodSymbol *,TR::FrontEnd *,TR::SymbolReferenceTable *),1,OMR,IlInjector
injectIL,injectIL(),1,OMR,IlInjector
isMethodBuilder,isMethodBuilder(),1,OMR,IlInjector
isOpCodeSupported,isOpCodeSupported(),1,TestCompiler,OpIlInjector
iu2l,iu2l(TR::Node *),1,OMR,IlInjector
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,IlInjector
jitPersistentFree,jitPersistentFree(void *),1,OMR,IlInjector
lconst,lconst(int64_t),1,OMR,IlInjector
lconstParm,lconstParm(uint32_t,int64_t),1,TestCompiler,OpIlInjector
loadTemp,loadTemp(TR::SymbolReference *),1,OMR,IlInjector
methodSymbol,methodSymbol(),1,TR,IlGenerator
multiplyBy,multiplyBy(TR::Node *,int64_t),1,OMR,IlInjector
newBlock,newBlock(),1,OMR,IlInjector
newTemp,newTemp(TR::IlType *),1,OMR,IlInjector
numBlocks,numBlocks(),1,OMR,IlInjector
operator delete,operator delete(void *,TR::Region &),1,OMR,IlInjector
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlInjector
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlInjector
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlInjector
operator delete,operator delete(void *,size_t),0,OMR,IlInjector
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,IlInjector
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlInjector
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlInjector
operator delete[],operator delete[](void *,TR::Region &),0,OMR,IlInjector
operator new,operator new(size_t,TR::Region &),1,OMR,IlInjector
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,IlInjector
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlInjector
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,IlInjector
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlInjector
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlInjector
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,IlInjector
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,IlInjector
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlInjector
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlInjector
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,IlInjector
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,IlInjector
operator new[],operator new[](size_t,TR::Region &),0,OMR,IlInjector
operator=,operator=(const class TR_IlGenerator &),1,TR,IlGenerator
operator=,operator=(const class OMR::IlInjector &),0,OMR,IlInjector
operator=,operator=(class TestCompiler::IlInjector &&),0,TestCompiler,IlInjector
operator=,operator=(const class TestCompiler::IlInjector &),0,TestCompiler,IlInjector
operator=,operator=(const class TR::IlInjector &),0,TR,IlInjector
operator=,operator=(class TR::IlInjector &&),0,TR,IlInjector
operator=,operator=(class TestCompiler::OpIlInjector &&),0,TestCompiler,OpIlInjector
operator=,operator=(const class TestCompiler::OpIlInjector &),0,TestCompiler,OpIlInjector
operator=,operator=(class TestCompiler::BinaryOpIlInjector &&),0,TestCompiler,BinaryOpIlInjector
operator=,operator=(const class TestCompiler::BinaryOpIlInjector &),0,TestCompiler,BinaryOpIlInjector
parameter,parameter(int32_t,TR::IlType *),1,OMR,IlInjector
parm,parm(uint32_t),1,TestCompiler,OpIlInjector
resolvedMethod,resolvedMethod(),1,TestCompiler,IlInjector
returnNoValue,returnNoValue(),1,OMR,IlInjector
returnValue,returnValue(TR::Node *),1,OMR,IlInjector
sconst,sconst(int16_t),1,OMR,IlInjector
sconstParm,sconstParm(uint32_t,int16_t),1,TestCompiler,OpIlInjector
setCallerMethod,setCallerMethod(TR::ResolvedMethodSymbol *),1,TR,IlGenerator
setDataType,setDataType(),1,TestCompiler,OpIlInjector
setMethodAndTest,setMethodAndTest(TR::IlInjector *),1,TestCompiler,IlInjector
setMethodAndTest,setMethodAndTest(TR::ResolvedMethod *,class TestCompiler::TestDriver *),0,TestCompiler,IlInjector
shiftLeftBy,shiftLeftBy(TR::Node *,int32_t),1,OMR,IlInjector
staticAddress,staticAddress(void *),1,OMR,IlInjector
storeToTemp,storeToTemp(TR::SymbolReference *,TR::Node *),1,OMR,IlInjector
symRefTab,symRefTab(),1,OMR,IlInjector
test,test(),1,TestCompiler,IlInjector
typeDictionary,typeDictionary(),1,OMR,IlInjector
validateTargetBlock,validateTargetBlock(),1,OMR,IlInjector
~BinaryOpIlInjector,~BinaryOpIlInjector(),1,TestCompiler,BinaryOpIlInjector
~IlInjector,~IlInjector(),1,OMR,IlInjector
~OpIlInjector,~OpIlInjector(),1,TestCompiler,OpIlInjector
~TR_IlGenerator,~TR_IlGenerator(),1,TR,IlGenerator
JitConfig,JitConfig(class TR::JitConfig &&),1,TR,JitConfig
JitConfig,JitConfig(),0,TR,JitConfig
JitConfig,JitConfig(const class TR::JitConfig &),0,TR,JitConfig
getInterpreterTOC,getInterpreterTOC(),1,TR,JitConfig
getProcessorInfo,getProcessorInfo(),1,TR,JitConfig
getPseudoTOC,getPseudoTOC(),1,TR,JitConfig
instance,instance(),1,TR,JitConfig
isCodeCacheFull,isCodeCacheFull(),1,TR,JitConfig
setInterpreterTOC,setInterpreterTOC(size_t),1,TR,JitConfig
setProcessorInfo,setProcessorInfo(void *),1,TR,JitConfig
setPseudoTOC,setPseudoTOC(void *),1,TR,JitConfig
~JitConfig,~JitConfig(),1,TR,JitConfig
ChildlessUnaryOpIlInjector,ChildlessUnaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),1,TestCompiler,ChildlessUnaryOpIlInjector
UnaryOpIlInjector,UnaryOpIlInjector(class TestCompiler::UnaryOpIlInjector &&),1,TestCompiler,UnaryOpIlInjector
UnaryOpIlInjector,UnaryOpIlInjector(const class TestCompiler::UnaryOpIlInjector &),0,TestCompiler,UnaryOpIlInjector
UnaryOpIlInjector,UnaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,UnaryOpIlInjector
operator=,operator=(class TestCompiler::UnaryOpIlInjector &&),0,TestCompiler,UnaryOpIlInjector
operator=,operator=(const class TestCompiler::UnaryOpIlInjector &),0,TestCompiler,UnaryOpIlInjector
operator=,operator=(class TestCompiler::ChildlessUnaryOpIlInjector &&),0,TestCompiler,ChildlessUnaryOpIlInjector
operator=,operator=(const class TestCompiler::ChildlessUnaryOpIlInjector &),0,TestCompiler,ChildlessUnaryOpIlInjector
~ChildlessUnaryOpIlInjector,~ChildlessUnaryOpIlInjector(),1,TestCompiler,ChildlessUnaryOpIlInjector
~UnaryOpIlInjector,~UnaryOpIlInjector(),1,TestCompiler,UnaryOpIlInjector
CmpBranchOpIlInjector,CmpBranchOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),1,TestCompiler,CmpBranchOpIlInjector
operator=,operator=(class TestCompiler::CmpBranchOpIlInjector &&),0,TestCompiler,CmpBranchOpIlInjector
operator=,operator=(const class TestCompiler::CmpBranchOpIlInjector &),0,TestCompiler,CmpBranchOpIlInjector
~CmpBranchOpIlInjector,~CmpBranchOpIlInjector(),1,TestCompiler,CmpBranchOpIlInjector
CodeCacheBase,CodeCacheBase(class OMR::CodeCacheBase &&),1,OMR,CodeCacheBase
CodeCacheBase,CodeCacheBase(const class OMR::CodeCacheBase &),0,OMR,CodeCacheBase
Add,Add(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
AddWithOverflow,AddWithOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
AddWithUnsignedOverflow,AddWithUnsignedOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
And,And(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
AppendBuilder,AppendBuilder(TR::IlBuilder *),1,OMR,IlBuilder
AtomicAdd,AtomicAdd(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
AtomicAddWithOffset,AtomicAddWithOffset(TR::IlValue *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
Call,Call(const char *,int32_t),1,OMR,IlBuilder
Call,Call(const char *,int32_t,TR::IlValue **),0,OMR,IlBuilder
ComputedCall,ComputedCall(const char *,int32_t,TR::IlValue **),1,OMR,IlBuilder
ComputedCall,ComputedCall(const char *,int32_t),0,OMR,IlBuilder
Const,Const(const void *const),1,OMR,IlBuilder
Const,Const(float),0,OMR,IlBuilder
Const,Const(int16_t),0,OMR,IlBuilder
Const,Const(int8_t),0,OMR,IlBuilder
Const,Const(double),0,OMR,IlBuilder
Const,Const(int64_t),0,OMR,IlBuilder
Const,Const(int32_t),0,OMR,IlBuilder
ConstAddress,ConstAddress(const void *const),1,OMR,IlBuilder
ConstDouble,ConstDouble(double),1,OMR,IlBuilder
ConstFloat,ConstFloat(float),1,OMR,IlBuilder
ConstInt16,ConstInt16(int16_t),1,OMR,IlBuilder
ConstInt32,ConstInt32(int32_t),1,OMR,IlBuilder
ConstInt64,ConstInt64(int64_t),1,OMR,IlBuilder
ConstInt8,ConstInt8(int8_t),1,OMR,IlBuilder
ConstInteger,ConstInteger(TR::IlType *,int64_t),1,OMR,IlBuilder
ConstString,ConstString(const char *const),1,OMR,IlBuilder
ConstzeroValueForValue,ConstzeroValueForValue(TR::IlValue *),1,OMR,IlBuilder
ConvertTo,ConvertTo(TR::IlType *,TR::IlValue *),1,OMR,IlBuilder
Copy,Copy(TR::IlValue *),1,OMR,IlBuilder
CreateLocalArray,CreateLocalArray(int32_t,TR::IlType *),1,OMR,IlBuilder
CreateLocalStruct,CreateLocalStruct(TR::IlType *),1,OMR,IlBuilder
Div,Div(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
DoWhileLoop,DoWhileLoop(const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **),1,OMR,IlBuilder
DoWhileLoopWithBreak,DoWhileLoopWithBreak(const char *,TR::IlBuilder **,TR::IlBuilder **),1,OMR,IlBuilder
DoWhileLoopWithContinue,DoWhileLoopWithContinue(const char *,TR::IlBuilder **,TR::IlBuilder **),1,OMR,IlBuilder
EqualTo,EqualTo(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
ForLoop,ForLoop(_Bool,const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
ForLoopDown,ForLoopDown(const char *,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
ForLoopUp,ForLoopUp(const char *,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
ForLoopWithBreak,ForLoopWithBreak(_Bool,const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
ForLoopWithContinue,ForLoopWithContinue(_Bool,const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
Goto,Goto(TR::IlBuilder **),1,OMR,IlBuilder
Goto,Goto(TR::IlBuilder *),0,OMR,IlBuilder
GreaterOrEqualTo,GreaterOrEqualTo(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
GreaterThan,GreaterThan(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfAnd,IfAnd(TR::IlBuilder **,TR::IlBuilder **,int32_t),1,OMR,IlBuilder
IfCmpEqual,IfCmpEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpEqual,IfCmpEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpEqualZero,IfCmpEqualZero(TR::IlBuilder *,TR::IlValue *),1,OMR,IlBuilder
IfCmpEqualZero,IfCmpEqualZero(TR::IlBuilder **,TR::IlValue *),0,OMR,IlBuilder
IfCmpGreaterOrEqual,IfCmpGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpGreaterOrEqual,IfCmpGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpGreaterThan,IfCmpGreaterThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpGreaterThan,IfCmpGreaterThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpLessOrEqual,IfCmpLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpLessOrEqual,IfCmpLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpLessThan,IfCmpLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpLessThan,IfCmpLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpNotEqual,IfCmpNotEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpNotEqual,IfCmpNotEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpNotEqualZero,IfCmpNotEqualZero(TR::IlBuilder **,TR::IlValue *),1,OMR,IlBuilder
IfCmpNotEqualZero,IfCmpNotEqualZero(TR::IlBuilder *,TR::IlValue *),0,OMR,IlBuilder
IfCmpUnsignedGreaterOrEqual,IfCmpUnsignedGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpUnsignedGreaterOrEqual,IfCmpUnsignedGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpUnsignedGreaterThan,IfCmpUnsignedGreaterThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpUnsignedGreaterThan,IfCmpUnsignedGreaterThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpUnsignedLessOrEqual,IfCmpUnsignedLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpUnsignedLessOrEqual,IfCmpUnsignedLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpUnsignedLessThan,IfCmpUnsignedLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpUnsignedLessThan,IfCmpUnsignedLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfOr,IfOr(TR::IlBuilder **,TR::IlBuilder **,int32_t),1,OMR,IlBuilder
IfThen,IfThen(TR::IlBuilder **,TR::IlValue *),1,OMR,IlBuilder
IfThenElse,IfThenElse(TR::IlBuilder **,TR::IlBuilder **,TR::IlValue *),1,OMR,IlBuilder
IlBuilder,IlBuilder(TR::IlBuilder *),1,OMR,IlBuilder
IlBuilder,IlBuilder(TR::MethodBuilder *,TR::TypeDictionary *),0,OMR,IlBuilder
IlBuilder,IlBuilder(const class OMR::IlBuilder &),0,OMR,IlBuilder
IlBuilder,IlBuilder(class TestCompiler::IlBuilder &&),0,TestCompiler,IlBuilder
IlBuilder,IlBuilder(const class TestCompiler::IlBuilder &),0,TestCompiler,IlBuilder
IlBuilder,IlBuilder(class TestCompiler::TestDriver *,TR::MethodBuilder *,TR::TypeDictionary *),0,TestCompiler,IlBuilder
IlBuilder,IlBuilder(TR::MethodBuilder *,class TR::TypeDictionary *),0,TR,IlBuilder
IlBuilder,IlBuilder(TestCompiler::TestDriver *,TR::MethodBuilder *,TR::TypeDictionary *),0,TR,IlBuilder
IndexAt,IndexAt(TR::IlType *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
LessOrEqualTo,LessOrEqualTo(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
LessThan,LessThan(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
Load,Load(const char *),1,OMR,IlBuilder
LoadAt,LoadAt(TR::IlType *,TR::IlValue *),1,OMR,IlBuilder
LoadIndirect,LoadIndirect(const char *,const char *,TR::IlValue *),1,OMR,IlBuilder
Mul,Mul(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
MulWithOverflow,MulWithOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
NewValue,NewValue(TR::IlType *),1,OMR,IlBuilder
NotEqualTo,NotEqualTo(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
NullAddress,NullAddress(),1,OMR,IlBuilder
Or,Or(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
OrphanBuilder,OrphanBuilder(),1,OMR,IlBuilder
Return,Return(),1,OMR,IlBuilder
Return,Return(TR::IlValue *),0,OMR,IlBuilder
ShiftL,ShiftL(TR::IlValue *,int8_t),1,OMR,IlBuilder
ShiftL,ShiftL(TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
ShiftR,ShiftR(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
ShiftR,ShiftR(TR::IlValue *,int8_t),0,OMR,IlBuilder
Store,Store(const char *,TR::IlValue *),1,OMR,IlBuilder
StoreAt,StoreAt(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
StoreIndirect,StoreIndirect(const char *,const char *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
StoreOver,StoreOver(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
StructFieldInstanceAddress,StructFieldInstanceAddress(const char *,const char *,TR::IlValue *),1,OMR,IlBuilder
Sub,Sub(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
SubWithOverflow,SubWithOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
SubWithUnsignedOverflow,SubWithUnsignedOverflow(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
Switch,Switch(const char *,TR::IlBuilder **,uint32_t),1,OMR,IlBuilder
Switch,Switch(const char *,TR::IlBuilder **,uint32_t,int32_t *,TR::IlBuilder **,_Bool *),0,OMR,IlBuilder
TraceEnabled_log,TraceEnabled_log(),1,OMR,IlBuilder
TraceIL_log,TraceIL_log(const char *),1,OMR,IlBuilder
Transaction,Transaction(TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **),1,OMR,IlBuilder
TransactionAbort,TransactionAbort(),1,OMR,IlBuilder
UnionFieldInstanceAddress,UnionFieldInstanceAddress(const char *,const char *,TR::IlValue *),1,OMR,IlBuilder
UnsignedConvertTo,UnsignedConvertTo(TR::IlType *,TR::IlValue *),1,OMR,IlBuilder
UnsignedGreaterOrEqualTo,UnsignedGreaterOrEqualTo(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
UnsignedGreaterThan,UnsignedGreaterThan(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
UnsignedLessOrEqualTo,UnsignedLessOrEqualTo(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
UnsignedLessThan,UnsignedLessThan(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
UnsignedShiftR,UnsignedShiftR(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
UnsignedShiftR,UnsignedShiftR(TR::IlValue *,int8_t),0,OMR,IlBuilder
VectorLoad,VectorLoad(const char *),1,OMR,IlBuilder
VectorLoadAt,VectorLoadAt(TR::IlType *,TR::IlValue *),1,OMR,IlBuilder
VectorStore,VectorStore(const char *,TR::IlValue *),1,OMR,IlBuilder
VectorStoreAt,VectorStoreAt(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
WhileDoLoop,WhileDoLoop(const char *,TR::IlBuilder **,TR::IlBuilder **,TR::IlBuilder **),1,OMR,IlBuilder
WhileDoLoopWithBreak,WhileDoLoopWithBreak(const char *,TR::IlBuilder **,TR::IlBuilder **),1,OMR,IlBuilder
WhileDoLoopWithContinue,WhileDoLoopWithContinue(const char *,TR::IlBuilder **,TR::IlBuilder **),1,OMR,IlBuilder
Xor,Xor(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
appendBlock,appendBlock(TR::Block *,_Bool),1,OMR,IlBuilder
appendExceptionHandler,appendExceptionHandler(TR::Block *,TR::IlBuilder **,uint32_t),1,OMR,IlBuilder
appendGoto,appendGoto(TR::Block *),1,OMR,IlBuilder
appendNoFallThroughBlock,appendNoFallThroughBlock(TR::Block *),1,OMR,IlBuilder
binaryOpFromNodes,binaryOpFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *),1,OMR,IlBuilder
binaryOpFromOpCode,binaryOpFromOpCode(TR::ILOpCodes,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
binaryOpFromOpMap,binaryOpFromOpMap(OpCodeMapper,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
binaryOpNodeFromNodes,binaryOpNodeFromNodes(TR::ILOpCodes,TR::Node *,TR::Node *),1,OMR,IlBuilder
blockEntry,blockEntry(TR::Block *),1,OMR,IlBuilder
blocksHaveBeenCounted,blocksHaveBeenCounted(),1,OMR,IlBuilder
buildIL,buildIL(),1,OMR,IlBuilder
builderEntry,builderEntry(TR::IlBuilder *),1,OMR,IlBuilder
comesBack,comesBack(),1,OMR,IlBuilder
compareOp,compareOp(enum TR_ComparisonTypes,_Bool,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
connectTrees,connectTrees(uint32_t *),1,OMR,IlBuilder
connectTrees,connectTrees(),0,OMR,IlBuilder
convertTo,convertTo(TR::IlType *,TR::IlValue *,_Bool),1,OMR,IlBuilder
countBlocks,countBlocks(),1,OMR,IlBuilder
createBuilderIfNeeded,createBuilderIfNeeded(TR::IlBuilder *),1,OMR,IlBuilder
defineSymbol,defineSymbol(const char *,TR::SymbolReference *),1,OMR,IlBuilder
defineValue,defineValue(const char *,TR::IlType *),1,OMR,IlBuilder
doVectorConversions,doVectorConversions(TR::Node **,TR::Node **),1,OMR,IlBuilder
emptyBlock,emptyBlock(),1,OMR,IlBuilder
genCall,genCall(TR::SymbolReference *,int32_t,TR::IlValue **,_Bool),1,OMR,IlBuilder
genOperationWithOverflowCHK,genOperationWithOverflowCHK(TR::ILOpCodes,TR::Node *,TR::Node *,TR::IlBuilder **,TR::ILOpCodes),1,OMR,IlBuilder
genOverflowCHKTreeTop,genOverflowCHKTreeTop(TR::Node *,TR::ILOpCodes),1,OMR,IlBuilder
getEntry,getEntry(),1,OMR,IlBuilder
getExit,getExit(),1,OMR,IlBuilder
getFirstTree,getFirstTree(),1,OMR,IlBuilder
getLastTree,getLastTree(),1,OMR,IlBuilder
getName,getName(),1,OMR,IlBuilder
getOpCode,getOpCode(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
ifCmpCondition,ifCmpCondition(enum TR_ComparisonTypes,_Bool,TR::IlValue *,TR::IlValue *,TR::Block *),1,OMR,IlBuilder
ifCmpEqualZero,ifCmpEqualZero(TR::IlValue *,TR::Block *),1,OMR,IlBuilder
ifCmpNotEqualZero,ifCmpNotEqualZero(TR::IlValue *,TR::Block *),1,OMR,IlBuilder
indirectLoadNode,indirectLoadNode(TR::IlType *,TR::Node *,_Bool),1,OMR,IlBuilder
indirectStoreNode,indirectStoreNode(TR::Node *,TR::Node *),1,OMR,IlBuilder
initSequence,initSequence(),1,OMR,IlBuilder
integerizeAddresses,integerizeAddresses(TR::IlValue **,TR::IlValue **),1,OMR,IlBuilder
isBytecodeBuilder,isBytecodeBuilder(),1,OMR,IlBuilder
loadValue,loadValue(TR::IlValue *),1,OMR,IlBuilder
lookupSymbol,lookupSymbol(const char *),1,OMR,IlBuilder
newValue,newValue(TR::DataType,TR::Node *),1,OMR,IlBuilder
newValue,newValue(TR::IlType *,TR::Node *),0,OMR,IlBuilder
operator=,operator=(const class OMR::IlBuilder &),0,OMR,IlBuilder
operator=,operator=(class TestCompiler::IlBuilder &&),0,TestCompiler,IlBuilder
operator=,operator=(const class TestCompiler::IlBuilder &),0,TestCompiler,IlBuilder
operator=,operator=(class TR::IlBuilder &&),0,TR,IlBuilder
operator=,operator=(const class TR::IlBuilder &),0,TR,IlBuilder
print,print(const char *,_Bool),1,OMR,IlBuilder
printBlock,printBlock(TR::Block *),1,OMR,IlBuilder
processCallArgs,processCallArgs(TR::Compilation *,int,va_list),1,OMR,IlBuilder
pullInBuilderTrees,pullInBuilderTrees(TR::IlBuilder *,uint32_t *,TR::TreeTop **,TR::TreeTop **),1,OMR,IlBuilder
setComesBack,setComesBack(),1,OMR,IlBuilder
setDoesNotComeBack,setDoesNotComeBack(),1,OMR,IlBuilder
setHandlerInfo,setHandlerInfo(uint32_t),1,OMR,IlBuilder
setupForBuildIL,setupForBuildIL(),1,OMR,IlBuilder
storeNode,storeNode(TR::SymbolReference *,TR::Node *),1,OMR,IlBuilder
unaryOp,unaryOp(TR::ILOpCodes,TR::IlValue *),1,OMR,IlBuilder
zero,zero(TR::IlType *),1,OMR,IlBuilder
zero,zero(TR::DataType),0,OMR,IlBuilder
zeroForValue,zeroForValue(TR::IlValue *),1,OMR,IlBuilder
zeroNodeForValue,zeroNodeForValue(TR::IlValue *),1,OMR,IlBuilder
~IlBuilder,~IlBuilder(),1,OMR,IlBuilder
IlType,IlType(const char *),1,OMR,IlType
IlType,IlType(),0,OMR,IlType
IlType,IlType(const class OMR::IlType &),0,OMR,IlType
IlType,IlType(class TR::IlType &&),0,TR,IlType
baseType,baseType(),1,OMR,IlType
getName,getName(),1,OMR,IlType
getPrimitiveType,getPrimitiveType(),1,OMR,IlType
getSignatureName,getSignatureName(),1,OMR,IlType
getSize,getSize(),1,OMR,IlType
isArray,isArray(),1,OMR,IlType
isPointer,isPointer(),1,OMR,IlType
isStruct,isStruct(),1,OMR,IlType
isUnion,isUnion(),1,OMR,IlType
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,IlType
jitPersistentFree,jitPersistentFree(void *),1,OMR,IlType
operator delete,operator delete(void *,size_t),1,OMR,IlType
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlType
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlType
operator delete,operator delete(void *,TR::Region &),0,OMR,IlType
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlType
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,IlType
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlType
operator delete[],operator delete[](void *,TR::Region &),0,OMR,IlType
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlType
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,IlType
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,IlType
operator new,operator new(size_t,TR::Region &),0,OMR,IlType
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlType
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,IlType
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlType
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlType
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,IlType
operator new[],operator new[](size_t,TR::Region &),0,OMR,IlType
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,IlType
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlType
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,IlType
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlType
operator=,operator=(const class OMR::IlType &),1,OMR,IlType
operator=,operator=(class TR::IlType &&),0,TR,IlType
operator=,operator=(const class TR::IlType &),0,TR,IlType
~IlType,~IlType(),1,OMR,IlType
IlValue,IlValue(class OMR::IlValue &&),1,OMR,IlValue
IlValue,IlValue(TR::Node *,TR::TreeTop *,TR::Block *,TR::MethodBuilder *),0,OMR,IlValue
IlValue,IlValue(const class OMR::IlValue &),0,OMR,IlValue
getDataType,getDataType(),1,OMR,IlValue
getID,getID(),1,OMR,IlValue
getSymbolReference,getSymbolReference(),1,OMR,IlValue
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,IlValue
jitPersistentFree,jitPersistentFree(void *),1,OMR,IlValue
load,load(TR::Block *),1,OMR,IlValue
operator delete,operator delete(void *,size_t),1,OMR,IlValue
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlValue
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlValue
operator delete,operator delete(void *,TR::Region &),0,OMR,IlValue
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlValue
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,IlValue
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlValue
operator delete[],operator delete[](void *,TR::Region &),0,OMR,IlValue
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlValue
operator new,operator new(size_t,class TR_PersistentMemory *),1,OMR,IlValue
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,IlValue
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlValue
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,IlValue
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlValue
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlValue
operator new,operator new(size_t,TR::Region &),0,OMR,IlValue
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,IlValue
operator new[],operator new[](size_t,TR::Region &),0,OMR,IlValue
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,IlValue
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlValue
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,IlValue
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlValue
storeOver,storeOver(TR::IlValue *,TR::Block *),1,OMR,IlValue
storeToAuto,storeToAuto(),1,OMR,IlValue
CloseStruct,CloseStruct(const char *),1,OMR,TypeDictionary
CloseStruct,CloseStruct(const char *,size_t),0,OMR,TypeDictionary
CloseUnion,CloseUnion(const char *),1,OMR,TypeDictionary
DefineField,DefineField(const char *,const char *,TR::IlType *,size_t),1,OMR,TypeDictionary
DefineField,DefineField(const char *,const char *,TR::IlType *),0,OMR,TypeDictionary
DefineStruct,DefineStruct(const char *),1,OMR,TypeDictionary
DefineUnion,DefineUnion(const char *),1,OMR,TypeDictionary
FieldReference,FieldReference(const char *,const char *),1,OMR,TypeDictionary
GetFieldType,GetFieldType(const char *,const char *),1,OMR,TypeDictionary
LookupStruct,LookupStruct(const char *),1,OMR,TypeDictionary
LookupUnion,LookupUnion(const char *),1,OMR,TypeDictionary
NotifyCompilationDone,NotifyCompilationDone(),1,OMR,TypeDictionary
OffsetOf,OffsetOf(const char *,const char *),1,OMR,TypeDictionary
PointerTo,PointerTo(TR::DataType),1,OMR,TypeDictionary
PointerTo,PointerTo(TR::IlType *),0,OMR,TypeDictionary
PointerTo,PointerTo(const char *),0,OMR,TypeDictionary
PrimitiveType,PrimitiveType(TR::DataType),1,OMR,TypeDictionary
TypeDictionary,TypeDictionary(const class OMR::TypeDictionary &),1,OMR,TypeDictionary
TypeDictionary,TypeDictionary(),0,OMR,TypeDictionary
TypeDictionary,TypeDictionary(class TR::TypeDictionary &&),0,TR,TypeDictionary
UnionField,UnionField(const char *,const char *,TR::IlType *),1,OMR,TypeDictionary
UnionFieldType,UnionFieldType(const char *,const char *),1,OMR,TypeDictionary
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,TypeDictionary
jitPersistentFree,jitPersistentFree(void *),1,OMR,TypeDictionary
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,TypeDictionary
operator delete,operator delete(void *,TR::Region &),0,OMR,TypeDictionary
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,TypeDictionary
operator delete,operator delete(void *,size_t),0,OMR,TypeDictionary
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,TypeDictionary
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,TypeDictionary
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,TypeDictionary
operator delete[],operator delete[](void *,TR::Region &),0,OMR,TypeDictionary
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,TypeDictionary
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,TypeDictionary
operator new,operator new(size_t,TR::Region &),0,OMR,TypeDictionary
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,TypeDictionary
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,TypeDictionary
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,TypeDictionary
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,TypeDictionary
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,TypeDictionary
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,TypeDictionary
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,TypeDictionary
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,TypeDictionary
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,TypeDictionary
operator new[],operator new[](size_t,TR::Region &),0,OMR,TypeDictionary
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,TypeDictionary
operator=,operator=(const class OMR::TypeDictionary &),1,OMR,TypeDictionary
operator=,operator=(class TR::TypeDictionary &&),0,TR,TypeDictionary
trMemory,trMemory(),1,OMR,TypeDictionary
~TypeDictionary,~TypeDictionary(),1,OMR,TypeDictionary
OpIlInjector,OpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),1,TestCompiler,OpIlInjector
StoreOpIlInjector,StoreOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),1,TestCompiler,StoreOpIlInjector
operator=,operator=(const class TestCompiler::StoreOpIlInjector &),0,TestCompiler,StoreOpIlInjector
operator=,operator=(class TestCompiler::StoreOpIlInjector &&),0,TestCompiler,StoreOpIlInjector
~StoreOpIlInjector,~StoreOpIlInjector(),1,TestCompiler,StoreOpIlInjector
TernaryOpIlInjector,TernaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),1,TestCompiler,TernaryOpIlInjector
operator=,operator=(class TestCompiler::TernaryOpIlInjector &&),0,TestCompiler,TernaryOpIlInjector
operator=,operator=(const class TestCompiler::TernaryOpIlInjector &),0,TestCompiler,TernaryOpIlInjector
~TernaryOpIlInjector,~TernaryOpIlInjector(),1,TestCompiler,TernaryOpIlInjector
UnaryOpIlInjector,UnaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),1,TestCompiler,UnaryOpIlInjector
TR_FrontEnd,TR_FrontEnd(const class TR_FrontEnd &),0,TR,FrontEnd
BarIlInjector,BarIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *),1,TestCompiler,BarIlInjector
indexParameter,indexParameter(),1,TestCompiler,BarIlInjector
operator=,operator=(const class TestCompiler::BarIlInjector &),0,TestCompiler,BarIlInjector
operator=,operator=(class TestCompiler::BarIlInjector &&),0,TestCompiler,BarIlInjector
~BarIlInjector,~BarIlInjector(),1,TestCompiler,BarIlInjector
RunTest,RunTest(),1,TestCompiler,TestDriver
bar,bar(int32_t),1,TestCompiler,FooBarTest
barMethod,barMethod(),1,TestCompiler,FooBarTest
compileMethodBuilder,compileMethodBuilder(TR::MethodBuilder *,uint8_t **),1,TestCompiler,TestDriver
compileTestMethods,compileTestMethods(),1,TestCompiler,TestDriver
dataArray,dataArray(),1,TestCompiler,FooBarTest
dataArraySize,dataArraySize(),1,TestCompiler,FooBarTest
foo,foo(int32_t),1,TestCompiler,FooBarTest
invokeTests,invokeTests(),1,TestCompiler,TestDriver
operator=,operator=(class TestCompiler::TestDriver &&),1,TestCompiler,TestDriver
operator=,operator=(const class TestCompiler::TestDriver &),0,TestCompiler,TestDriver
operator=,operator=(class TestCompiler::FooBarTest &&),0,TestCompiler,FooBarTest
operator=,operator=(const class TestCompiler::FooBarTest &),0,TestCompiler,FooBarTest
~FooBarTest,~FooBarTest(),1,TestCompiler,FooBarTest
~TestDriver,~TestDriver(),1,TestCompiler,TestDriver
DeleteSelf_,DeleteSelf_(),1,testing,Test
HasFailure,HasFailure(),1,testing,Test
HasFatalFailure,HasFatalFailure(),1,testing,Test
HasNonfatalFailure,HasNonfatalFailure(),1,testing,Test
HasSameFixtureClass,HasSameFixtureClass(),1,testing,Test
JITILBuilderTest_ControlFlowTest_Test,JITILBuilderTest_ControlFlowTest_Test(),1,,
JITILBuilderTest_ControlFlowTest_Test,JITILBuilderTest_ControlFlowTest_Test(const class JITILBuilderTest_ControlFlowTest_Test &),0,,
RecordProperty,RecordProperty(const std::string &,const std::string &),1,testing,Test
RecordProperty,RecordProperty(const std::string &,int),0,testing,Test
Run,Run(),1,testing,Test
SetUp,SetUp(),1,testing,Test
SetUpTestCase,SetUpTestCase(),1,testing,Test
Setup,Setup(),1,testing,Test
TearDown,TearDown(),1,testing,Test
TearDownTestCase,TearDownTestCase(),1,testing,Test
Test,Test(const class testing::Test &),1,testing,Test
Test,Test(),0,testing,Test
TestBody,TestBody(),1,testing,Test
operator=,operator=(const class testing::Test &),1,testing,Test
operator=,operator=(const class JITILBuilderTest_ControlFlowTest_Test &),0,,
~JITILBuilderTest_ControlFlowTest_Test,~JITILBuilderTest_ControlFlowTest_Test(),1,,
~Test,~Test(),1,testing,Test
JITILBuilderTest_NestedControlFlowLoopTest_Test,JITILBuilderTest_NestedControlFlowLoopTest_Test(),1,,
JITILBuilderTest_NestedControlFlowLoopTest_Test,JITILBuilderTest_NestedControlFlowLoopTest_Test(const class JITILBuilderTest_NestedControlFlowLoopTest_Test &),0,,
operator=,operator=(const class JITILBuilderTest_NestedControlFlowLoopTest_Test &),0,,
~JITILBuilderTest_NestedControlFlowLoopTest_Test,~JITILBuilderTest_NestedControlFlowLoopTest_Test(),1,,
JITTest_BuilderTest_Test,JITTest_BuilderTest_Test(),1,,
JITTest_BuilderTest_Test,JITTest_BuilderTest_Test(const class JITTest_BuilderTest_Test &),0,,
operator=,operator=(const class JITTest_BuilderTest_Test &),0,,
~JITTest_BuilderTest_Test,~JITTest_BuilderTest_Test(),1,,
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,CFGNode
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,TR,CFGNode
operator new[],operator new[](size_t,TR::Region &),1,OMR,IlType
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlType
AbsDiffIfThenElseMethod,AbsDiffIfThenElseMethod(class TestCompiler::AbsDiffIfThenElseMethod &&),1,TestCompiler,AbsDiffIfThenElseMethod
AbsDiffIfThenElseMethod,AbsDiffIfThenElseMethod(const class TestCompiler::AbsDiffIfThenElseMethod &),0,TestCompiler,AbsDiffIfThenElseMethod
AbsDiffIfThenElseMethod,AbsDiffIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,AbsDiffIfThenElseMethod
AllLocalsHaveBeenDefined,AllLocalsHaveBeenDefined(),1,OMR,MethodBuilder
AppendBuilder,AppendBuilder(TR::BytecodeBuilder *),0,OMR,MethodBuilder
AppendBytecodeBuilder,AppendBytecodeBuilder(TR::BytecodeBuilder *),1,OMR,MethodBuilder
Const,Const(double),1,OMR,IlBuilder
Const,Const(const void *const),0,OMR,IlBuilder
DefineArrayParameter,DefineArrayParameter(const char *,TR::IlType *),1,OMR,MethodBuilder
DefineFile,DefineFile(const char *),1,OMR,MethodBuilder
DefineFunction,DefineFunction(const char *const,const char *const,const char *const,void *,TR::IlType *,int32_t,TR::IlType **),1,OMR,MethodBuilder
DefineFunction,DefineFunction(const char *const,const char *const,const char *const,void *,TR::IlType *,int32_t),0,OMR,MethodBuilder
DefineLine,DefineLine(const char *),1,OMR,MethodBuilder
DefineLine,DefineLine(int),0,OMR,MethodBuilder
DefineLocal,DefineLocal(const char *,TR::IlType *),1,OMR,MethodBuilder
DefineMemory,DefineMemory(const char *,TR::IlType *,void *),1,OMR,MethodBuilder
DefineName,DefineName(const char *),1,OMR,MethodBuilder
DefineParameter,DefineParameter(const char *,TR::IlType *),1,OMR,MethodBuilder
DefineReturnType,DefineReturnType(TR::IlType *),1,OMR,MethodBuilder
GetNextBytecodeFromWorklist,GetNextBytecodeFromWorklist(),1,OMR,MethodBuilder
IfCmpEqualZero,IfCmpEqualZero(TR::IlBuilder **,TR::IlValue *),1,OMR,IlBuilder
IfCmpEqualZero,IfCmpEqualZero(TR::IlBuilder *,TR::IlValue *),0,OMR,IlBuilder
IfCmpGreaterOrEqual,IfCmpGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpGreaterOrEqual,IfCmpGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpLessOrEqual,IfCmpLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpLessOrEqual,IfCmpLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpNotEqual,IfCmpNotEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpNotEqual,IfCmpNotEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpNotEqualZero,IfCmpNotEqualZero(TR::IlBuilder *,TR::IlValue *),1,OMR,IlBuilder
IfCmpNotEqualZero,IfCmpNotEqualZero(TR::IlBuilder **,TR::IlValue *),0,OMR,IlBuilder
IfCmpUnsignedGreaterOrEqual,IfCmpUnsignedGreaterOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpUnsignedGreaterOrEqual,IfCmpUnsignedGreaterOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IlBuilder,IlBuilder(const class OMR::IlBuilder &),1,OMR,IlBuilder
IlBuilder,IlBuilder(TR::IlBuilder *),0,OMR,IlBuilder
IlBuilder,IlBuilder(class TR::IlBuilder &&),0,TR,IlBuilder
IlBuilder,IlBuilder(const class TR::IlBuilder &),0,TR,IlBuilder
MethodBuilder,MethodBuilder(const class OMR::MethodBuilder &),1,OMR,MethodBuilder
MethodBuilder,MethodBuilder(TR::TypeDictionary *,OMR::VirtualMachineState *),0,OMR,MethodBuilder
MethodBuilder,MethodBuilder(const class TestCompiler::MethodBuilder &),0,TestCompiler,MethodBuilder
MethodBuilder,MethodBuilder(class TestCompiler::MethodBuilder &&),0,TestCompiler,MethodBuilder
MethodBuilder,MethodBuilder(TR::TypeDictionary *,class TestCompiler::TestDriver *),0,TestCompiler,MethodBuilder
MethodBuilder,MethodBuilder(TR::TypeDictionary *),0,TestCompiler,MethodBuilder
MethodBuilder,MethodBuilder(class TR::MethodBuilder &&),0,TR,MethodBuilder
MethodBuilder,MethodBuilder(TR::TypeDictionary *,TestCompiler::TestDriver *),0,TR,MethodBuilder
MethodBuilder,MethodBuilder(const class TR::MethodBuilder &),0,TR,MethodBuilder
OrphanBytecodeBuilder,OrphanBytecodeBuilder(int32_t,char *),1,OMR,MethodBuilder
RequestFunction,RequestFunction(const char *),1,OMR,MethodBuilder
Return,Return(TR::IlValue *),1,OMR,IlBuilder
Return,Return(),0,OMR,IlBuilder
ShiftR,ShiftR(TR::IlValue *,int8_t),1,OMR,IlBuilder
ShiftR,ShiftR(TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
Switch,Switch(const char *,TR::IlBuilder **,uint32_t,int32_t *,TR::IlBuilder **,_Bool *),1,OMR,IlBuilder
Switch,Switch(const char *,TR::IlBuilder **,uint32_t),0,OMR,IlBuilder
addBytecodeBuilderToWorklist,addBytecodeBuilderToWorklist(TR::BytecodeBuilder *),1,OMR,MethodBuilder
addToAllBytecodeBuildersList,addToAllBytecodeBuildersList(TR::BytecodeBuilder *),1,OMR,MethodBuilder
addToBlockCountingWorklist,addToBlockCountingWorklist(TR::BytecodeBuilder *),1,OMR,MethodBuilder
addToTreeConnectingWorklist,addToTreeConnectingWorklist(TR::BytecodeBuilder *),1,OMR,MethodBuilder
connectTrees,connectTrees(),1,OMR,IlBuilder
connectTrees,connectTrees(uint32_t *),0,OMR,IlBuilder
getDefiningFile,getDefiningFile(),1,OMR,MethodBuilder
getDefiningLine,getDefiningLine(),1,OMR,MethodBuilder
getMethodName,getMethodName(),1,OMR,MethodBuilder
getNextValueID,getNextValueID(),1,OMR,MethodBuilder
getNumParameters,getNumParameters(),1,OMR,MethodBuilder
getParameterTypes,getParameterTypes(),1,OMR,MethodBuilder
getReturnType,getReturnType(),1,OMR,MethodBuilder
getSignature,getSignature(int32_t,TR::IlType **),1,OMR,MethodBuilder
getSignature,getSignature(TR::IlType **),0,OMR,MethodBuilder
getSymbolName,getSymbolName(int32_t),1,OMR,MethodBuilder
initMaps,initMaps(),1,OMR,MethodBuilder
isSymbolAnArray,isSymbolAnArray(const char *),1,OMR,MethodBuilder
lookupFunction,lookupFunction(const char *),1,OMR,MethodBuilder
operator=,operator=(const class OMR::MethodBuilder &),0,OMR,MethodBuilder
operator=,operator=(const class TestCompiler::MethodBuilder &),0,TestCompiler,MethodBuilder
operator=,operator=(class TestCompiler::MethodBuilder &&),0,TestCompiler,MethodBuilder
operator=,operator=(class TR::MethodBuilder &&),0,TR,MethodBuilder
operator=,operator=(const class TR::MethodBuilder &),0,TR,MethodBuilder
operator=,operator=(class TestCompiler::AbsDiffIfThenElseMethod &&),0,TestCompiler,AbsDiffIfThenElseMethod
operator=,operator=(const class TestCompiler::AbsDiffIfThenElseMethod &),0,TestCompiler,AbsDiffIfThenElseMethod
setUseBytecodeBuilders,setUseBytecodeBuilders(),1,OMR,MethodBuilder
setVMState,setVMState(OMR::VirtualMachineState *),1,OMR,MethodBuilder
symbolDefined,symbolDefined(const char *),1,OMR,MethodBuilder
usesBytecodeBuilders,usesBytecodeBuilders(),1,OMR,MethodBuilder
vmState,vmState(),1,OMR,MethodBuilder
zero,zero(TR::DataType),1,OMR,IlBuilder
zero,zero(TR::IlType *),0,OMR,IlBuilder
~AbsDiffIfThenElseMethod,~AbsDiffIfThenElseMethod(),1,TestCompiler,AbsDiffIfThenElseMethod
~MethodBuilder,~MethodBuilder(),1,OMR,MethodBuilder
ResolvedMethod,ResolvedMethod(class TR::ResolvedMethod &&),0,TR,ResolvedMethod
ResolvedMethod,ResolvedMethod(const class TR::ResolvedMethod &),0,TR,ResolvedMethod
PointerTo,PointerTo(TR::IlType *),1,OMR,TypeDictionary
PointerTo,PointerTo(TR::DataType),0,OMR,TypeDictionary
TypeDictionary,TypeDictionary(const class TR::TypeDictionary &),0,TR,TypeDictionary
operator delete,operator delete(void *,TR::Region &),1,OMR,TypeDictionary
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,TypeDictionary
operator new,operator new(size_t,TR::Region &),1,OMR,TypeDictionary
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,TypeDictionary
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,TypeDictionary
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,TypeDictionary
BasicForLoopDownMethod,BasicForLoopDownMethod(class TestCompiler::BasicForLoopDownMethod &&),1,TestCompiler,BasicForLoopDownMethod
BasicForLoopDownMethod,BasicForLoopDownMethod(const class TestCompiler::BasicForLoopDownMethod &),0,TestCompiler,BasicForLoopDownMethod
BasicForLoopDownMethod,BasicForLoopDownMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,BasicForLoopDownMethod
operator=,operator=(const class TestCompiler::BasicForLoopDownMethod &),0,TestCompiler,BasicForLoopDownMethod
operator=,operator=(class TestCompiler::BasicForLoopDownMethod &&),0,TestCompiler,BasicForLoopDownMethod
~BasicForLoopDownMethod,~BasicForLoopDownMethod(),1,TestCompiler,BasicForLoopDownMethod
BasicForLoopUpMethod,BasicForLoopUpMethod(class TestCompiler::BasicForLoopUpMethod &&),1,TestCompiler,BasicForLoopUpMethod
BasicForLoopUpMethod,BasicForLoopUpMethod(const class TestCompiler::BasicForLoopUpMethod &),0,TestCompiler,BasicForLoopUpMethod
BasicForLoopUpMethod,BasicForLoopUpMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,BasicForLoopUpMethod
operator=,operator=(const class TestCompiler::BasicForLoopUpMethod &),0,TestCompiler,BasicForLoopUpMethod
operator=,operator=(class TestCompiler::BasicForLoopUpMethod &&),0,TestCompiler,BasicForLoopUpMethod
~BasicForLoopUpMethod,~BasicForLoopUpMethod(),1,TestCompiler,BasicForLoopUpMethod
BinaryOpIlInjector,BinaryOpIlInjector(const class TestCompiler::BinaryOpIlInjector &),1,TestCompiler,BinaryOpIlInjector
BinaryOpIlInjector,BinaryOpIlInjector(class TestCompiler::BinaryOpIlInjector &&),0,TestCompiler,BinaryOpIlInjector
BinaryOpIlInjector,BinaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,BinaryOpIlInjector
IndirectStoreIlInjector,IndirectStoreIlInjector(const class TestCompiler::IndirectStoreIlInjector &),1,TestCompiler,IndirectStoreIlInjector
IndirectStoreIlInjector,IndirectStoreIlInjector(class TestCompiler::IndirectStoreIlInjector &&),0,TestCompiler,IndirectStoreIlInjector
IndirectStoreIlInjector,IndirectStoreIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,IndirectStoreIlInjector
operator=,operator=(const class TestCompiler::IndirectStoreIlInjector &),0,TestCompiler,IndirectStoreIlInjector
operator=,operator=(class TestCompiler::IndirectStoreIlInjector &&),0,TestCompiler,IndirectStoreIlInjector
~IndirectStoreIlInjector,~IndirectStoreIlInjector(),1,TestCompiler,IndirectStoreIlInjector
BuilderTest,BuilderTest(const class TestCompiler::BuilderTest &),1,TestCompiler,BuilderTest
BuilderTest,BuilderTest(),0,TestCompiler,BuilderTest
BuilderTest,BuilderTest(class TestCompiler::BuilderTest &&),0,TestCompiler,BuilderTest
TestDriver,TestDriver(const class TestCompiler::TestDriver &),1,TestCompiler,TestDriver
TestDriver,TestDriver(),0,TestCompiler,TestDriver
TestDriver,TestDriver(class TestCompiler::TestDriver &&),0,TestCompiler,TestDriver
absDiff,absDiff(int32_t,int32_t),1,TestCompiler,BuilderTest
basicForLoop,basicForLoop(int32_t,int32_t,int32_t,_Bool),1,TestCompiler,BuilderTest
compileControlFlowTestMethods,compileControlFlowTestMethods(),1,TestCompiler,BuilderTest
compileNestedControlFlowLoopTestMethods,compileNestedControlFlowLoopTestMethods(),1,TestCompiler,BuilderTest
doWhileFib,doWhileFib(int32_t),1,TestCompiler,BuilderTest
doWhileIfThenElse,doWhileIfThenElse(int32_t,int32_t,int32_t,int32_t),1,TestCompiler,BuilderTest
doWhileWithBreak,doWhileWithBreak(int32_t),1,TestCompiler,BuilderTest
doWhileWithBreakAndContinue,doWhileWithBreakAndContinue(int32_t),1,TestCompiler,BuilderTest
doWhileWithContinue,doWhileWithContinue(int32_t),1,TestCompiler,BuilderTest
forLoopBreak,forLoopBreak(int32_t),1,TestCompiler,BuilderTest
forLoopBreakAndContinue,forLoopBreakAndContinue(int32_t),1,TestCompiler,BuilderTest
forLoopContinue,forLoopContinue(int32_t),1,TestCompiler,BuilderTest
forLoopIfThenElse,forLoopIfThenElse(int32_t,int32_t,int32_t,int32_t,_Bool),1,TestCompiler,BuilderTest
ifThenElseLoop,ifThenElseLoop(int32_t,int32_t),1,TestCompiler,BuilderTest
invokeControlFlowTests,invokeControlFlowTests(),1,TestCompiler,BuilderTest
invokeNestedControlFlowLoopTests,invokeNestedControlFlowLoopTests(),1,TestCompiler,BuilderTest
iterativeFib,iterativeFib(int32_t),1,TestCompiler,BuilderTest
maxIfThen,maxIfThen(int32_t,int32_t),1,TestCompiler,BuilderTest
operator=,operator=(class TestCompiler::BuilderTest &&),0,TestCompiler,BuilderTest
operator=,operator=(const class TestCompiler::BuilderTest &),0,TestCompiler,BuilderTest
recursiveFib,recursiveFib(int32_t),1,TestCompiler,BuilderTest
shootoutNestedLoop,shootoutNestedLoop(int32_t),1,TestCompiler,BuilderTest
subIfFalseThen,subIfFalseThen(int64_t,int64_t),1,TestCompiler,BuilderTest
traceEnabledLocation,traceEnabledLocation(),1,TestCompiler,BuilderTest
whileDoFib,whileDoFib(int32_t),1,TestCompiler,BuilderTest
whileDoIfThenElse,whileDoIfThenElse(int32_t,int32_t,int32_t,int32_t),1,TestCompiler,BuilderTest
whileDoWithBreak,whileDoWithBreak(int32_t),1,TestCompiler,BuilderTest
whileDoWithBreakAndContinue,whileDoWithBreakAndContinue(int32_t),1,TestCompiler,BuilderTest
whileDoWithContinue,whileDoWithContinue(int32_t),1,TestCompiler,BuilderTest
~BuilderTest,~BuilderTest(),1,TestCompiler,BuilderTest
CallIlInjector,CallIlInjector(const class TestCompiler::CallIlInjector &),1,TestCompiler,CallIlInjector
CallIlInjector,CallIlInjector(class TestCompiler::CallIlInjector &&),0,TestCompiler,CallIlInjector
CallIlInjector,CallIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,CallIlInjector
operator=,operator=(class TestCompiler::CallIlInjector &&),0,TestCompiler,CallIlInjector
operator=,operator=(const class TestCompiler::CallIlInjector &),0,TestCompiler,CallIlInjector
~CallIlInjector,~CallIlInjector(),1,TestCompiler,CallIlInjector
ChildlessUnaryOpIlInjector,ChildlessUnaryOpIlInjector(class TestCompiler::ChildlessUnaryOpIlInjector &&),1,TestCompiler,ChildlessUnaryOpIlInjector
ChildlessUnaryOpIlInjector,ChildlessUnaryOpIlInjector(const class TestCompiler::ChildlessUnaryOpIlInjector &),0,TestCompiler,ChildlessUnaryOpIlInjector
ChildlessUnaryOpIlInjector,ChildlessUnaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,ChildlessUnaryOpIlInjector
CmpBranchOpIlInjector,CmpBranchOpIlInjector(class TestCompiler::CmpBranchOpIlInjector &&),1,TestCompiler,CmpBranchOpIlInjector
CmpBranchOpIlInjector,CmpBranchOpIlInjector(const class TestCompiler::CmpBranchOpIlInjector &),0,TestCompiler,CmpBranchOpIlInjector
CmpBranchOpIlInjector,CmpBranchOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,CmpBranchOpIlInjector
DoWhileFibonnaciMethod,DoWhileFibonnaciMethod(class TestCompiler::DoWhileFibonnaciMethod &&),1,TestCompiler,DoWhileFibonnaciMethod
DoWhileFibonnaciMethod,DoWhileFibonnaciMethod(const class TestCompiler::DoWhileFibonnaciMethod &),0,TestCompiler,DoWhileFibonnaciMethod
DoWhileFibonnaciMethod,DoWhileFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,DoWhileFibonnaciMethod
operator=,operator=(class TestCompiler::DoWhileFibonnaciMethod &&),0,TestCompiler,DoWhileFibonnaciMethod
operator=,operator=(const class TestCompiler::DoWhileFibonnaciMethod &),0,TestCompiler,DoWhileFibonnaciMethod
~DoWhileFibonnaciMethod,~DoWhileFibonnaciMethod(),1,TestCompiler,DoWhileFibonnaciMethod
DoWhileIfThenElseMethod,DoWhileIfThenElseMethod(class TestCompiler::DoWhileIfThenElseMethod &&),1,TestCompiler,DoWhileIfThenElseMethod
DoWhileIfThenElseMethod,DoWhileIfThenElseMethod(const class TestCompiler::DoWhileIfThenElseMethod &),0,TestCompiler,DoWhileIfThenElseMethod
DoWhileIfThenElseMethod,DoWhileIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,DoWhileIfThenElseMethod
operator=,operator=(const class TestCompiler::DoWhileIfThenElseMethod &),0,TestCompiler,DoWhileIfThenElseMethod
operator=,operator=(class TestCompiler::DoWhileIfThenElseMethod &&),0,TestCompiler,DoWhileIfThenElseMethod
~DoWhileIfThenElseMethod,~DoWhileIfThenElseMethod(),1,TestCompiler,DoWhileIfThenElseMethod
DoWhileWithBreakAndContinueMethod,DoWhileWithBreakAndContinueMethod(class TestCompiler::DoWhileWithBreakAndContinueMethod &&),1,TestCompiler,DoWhileWithBreakAndContinueMethod
DoWhileWithBreakAndContinueMethod,DoWhileWithBreakAndContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,DoWhileWithBreakAndContinueMethod
DoWhileWithBreakAndContinueMethod,DoWhileWithBreakAndContinueMethod(const class TestCompiler::DoWhileWithBreakAndContinueMethod &),0,TestCompiler,DoWhileWithBreakAndContinueMethod
operator=,operator=(class TestCompiler::DoWhileWithBreakAndContinueMethod &&),0,TestCompiler,DoWhileWithBreakAndContinueMethod
operator=,operator=(const class TestCompiler::DoWhileWithBreakAndContinueMethod &),0,TestCompiler,DoWhileWithBreakAndContinueMethod
~DoWhileWithBreakAndContinueMethod,~DoWhileWithBreakAndContinueMethod(),1,TestCompiler,DoWhileWithBreakAndContinueMethod
DoWhileWithBreakMethod,DoWhileWithBreakMethod(class TestCompiler::DoWhileWithBreakMethod &&),1,TestCompiler,DoWhileWithBreakMethod
DoWhileWithBreakMethod,DoWhileWithBreakMethod(const class TestCompiler::DoWhileWithBreakMethod &),0,TestCompiler,DoWhileWithBreakMethod
DoWhileWithBreakMethod,DoWhileWithBreakMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,DoWhileWithBreakMethod
operator=,operator=(const class TestCompiler::DoWhileWithBreakMethod &),0,TestCompiler,DoWhileWithBreakMethod
operator=,operator=(class TestCompiler::DoWhileWithBreakMethod &&),0,TestCompiler,DoWhileWithBreakMethod
~DoWhileWithBreakMethod,~DoWhileWithBreakMethod(),1,TestCompiler,DoWhileWithBreakMethod
DoWhileWithContinueMethod,DoWhileWithContinueMethod(class TestCompiler::DoWhileWithContinueMethod &&),1,TestCompiler,DoWhileWithContinueMethod
DoWhileWithContinueMethod,DoWhileWithContinueMethod(const class TestCompiler::DoWhileWithContinueMethod &),0,TestCompiler,DoWhileWithContinueMethod
DoWhileWithContinueMethod,DoWhileWithContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,DoWhileWithContinueMethod
operator=,operator=(const class TestCompiler::DoWhileWithContinueMethod &),0,TestCompiler,DoWhileWithContinueMethod
operator=,operator=(class TestCompiler::DoWhileWithContinueMethod &&),0,TestCompiler,DoWhileWithContinueMethod
~DoWhileWithContinueMethod,~DoWhileWithContinueMethod(),1,TestCompiler,DoWhileWithContinueMethod
ForLoopBreakAndContinueMethod,ForLoopBreakAndContinueMethod(class TestCompiler::ForLoopBreakAndContinueMethod &&),1,TestCompiler,ForLoopBreakAndContinueMethod
ForLoopBreakAndContinueMethod,ForLoopBreakAndContinueMethod(const class TestCompiler::ForLoopBreakAndContinueMethod &),0,TestCompiler,ForLoopBreakAndContinueMethod
ForLoopBreakAndContinueMethod,ForLoopBreakAndContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,ForLoopBreakAndContinueMethod
operator=,operator=(class TestCompiler::ForLoopBreakAndContinueMethod &&),0,TestCompiler,ForLoopBreakAndContinueMethod
operator=,operator=(const class TestCompiler::ForLoopBreakAndContinueMethod &),0,TestCompiler,ForLoopBreakAndContinueMethod
~ForLoopBreakAndContinueMethod,~ForLoopBreakAndContinueMethod(),1,TestCompiler,ForLoopBreakAndContinueMethod
ForLoopBreakMethod,ForLoopBreakMethod(const class TestCompiler::ForLoopBreakMethod &),1,TestCompiler,ForLoopBreakMethod
ForLoopBreakMethod,ForLoopBreakMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,ForLoopBreakMethod
ForLoopBreakMethod,ForLoopBreakMethod(class TestCompiler::ForLoopBreakMethod &&),0,TestCompiler,ForLoopBreakMethod
operator=,operator=(const class TestCompiler::ForLoopBreakMethod &),0,TestCompiler,ForLoopBreakMethod
operator=,operator=(class TestCompiler::ForLoopBreakMethod &&),0,TestCompiler,ForLoopBreakMethod
~ForLoopBreakMethod,~ForLoopBreakMethod(),1,TestCompiler,ForLoopBreakMethod
ForLoopContinueMethod,ForLoopContinueMethod(const class TestCompiler::ForLoopContinueMethod &),1,TestCompiler,ForLoopContinueMethod
ForLoopContinueMethod,ForLoopContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,ForLoopContinueMethod
ForLoopContinueMethod,ForLoopContinueMethod(class TestCompiler::ForLoopContinueMethod &&),0,TestCompiler,ForLoopContinueMethod
operator=,operator=(class TestCompiler::ForLoopContinueMethod &&),0,TestCompiler,ForLoopContinueMethod
operator=,operator=(const class TestCompiler::ForLoopContinueMethod &),0,TestCompiler,ForLoopContinueMethod
~ForLoopContinueMethod,~ForLoopContinueMethod(),1,TestCompiler,ForLoopContinueMethod
ForLoopUPIfThenElseMethod,ForLoopUPIfThenElseMethod(const class TestCompiler::ForLoopUPIfThenElseMethod &),1,TestCompiler,ForLoopUPIfThenElseMethod
ForLoopUPIfThenElseMethod,ForLoopUPIfThenElseMethod(class TestCompiler::ForLoopUPIfThenElseMethod &&),0,TestCompiler,ForLoopUPIfThenElseMethod
ForLoopUPIfThenElseMethod,ForLoopUPIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,ForLoopUPIfThenElseMethod
operator=,operator=(const class TestCompiler::ForLoopUPIfThenElseMethod &),0,TestCompiler,ForLoopUPIfThenElseMethod
operator=,operator=(class TestCompiler::ForLoopUPIfThenElseMethod &&),0,TestCompiler,ForLoopUPIfThenElseMethod
~ForLoopUPIfThenElseMethod,~ForLoopUPIfThenElseMethod(),1,TestCompiler,ForLoopUPIfThenElseMethod
IfThenElseLoopMethod,IfThenElseLoopMethod(const class TestCompiler::IfThenElseLoopMethod &),1,TestCompiler,IfThenElseLoopMethod
IfThenElseLoopMethod,IfThenElseLoopMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,IfThenElseLoopMethod
IfThenElseLoopMethod,IfThenElseLoopMethod(class TestCompiler::IfThenElseLoopMethod &&),0,TestCompiler,IfThenElseLoopMethod
operator=,operator=(class TestCompiler::IfThenElseLoopMethod &&),0,TestCompiler,IfThenElseLoopMethod
operator=,operator=(const class TestCompiler::IfThenElseLoopMethod &),0,TestCompiler,IfThenElseLoopMethod
~IfThenElseLoopMethod,~IfThenElseLoopMethod(),1,TestCompiler,IfThenElseLoopMethod
IndirectLoadIlInjector,IndirectLoadIlInjector(class TestCompiler::IndirectLoadIlInjector &&),1,TestCompiler,IndirectLoadIlInjector
IndirectLoadIlInjector,IndirectLoadIlInjector(const class TestCompiler::IndirectLoadIlInjector &),0,TestCompiler,IndirectLoadIlInjector
IndirectLoadIlInjector,IndirectLoadIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,IndirectLoadIlInjector
operator=,operator=(class TestCompiler::IndirectLoadIlInjector &&),0,TestCompiler,IndirectLoadIlInjector
operator=,operator=(const class TestCompiler::IndirectLoadIlInjector &),0,TestCompiler,IndirectLoadIlInjector
~IndirectLoadIlInjector,~IndirectLoadIlInjector(),1,TestCompiler,IndirectLoadIlInjector
IterativeFibonnaciMethod,IterativeFibonnaciMethod(class TestCompiler::IterativeFibonnaciMethod &&),1,TestCompiler,IterativeFibonnaciMethod
IterativeFibonnaciMethod,IterativeFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,IterativeFibonnaciMethod
IterativeFibonnaciMethod,IterativeFibonnaciMethod(const class TestCompiler::IterativeFibonnaciMethod &),0,TestCompiler,IterativeFibonnaciMethod
operator=,operator=(const class TestCompiler::IterativeFibonnaciMethod &),0,TestCompiler,IterativeFibonnaciMethod
operator=,operator=(class TestCompiler::IterativeFibonnaciMethod &&),0,TestCompiler,IterativeFibonnaciMethod
~IterativeFibonnaciMethod,~IterativeFibonnaciMethod(),1,TestCompiler,IterativeFibonnaciMethod
MaxIfThenMethod,MaxIfThenMethod(class TestCompiler::MaxIfThenMethod &&),1,TestCompiler,MaxIfThenMethod
MaxIfThenMethod,MaxIfThenMethod(const class TestCompiler::MaxIfThenMethod &),0,TestCompiler,MaxIfThenMethod
MaxIfThenMethod,MaxIfThenMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,MaxIfThenMethod
operator=,operator=(const class TestCompiler::MaxIfThenMethod &),0,TestCompiler,MaxIfThenMethod
operator=,operator=(class TestCompiler::MaxIfThenMethod &&),0,TestCompiler,MaxIfThenMethod
~MaxIfThenMethod,~MaxIfThenMethod(),1,TestCompiler,MaxIfThenMethod
UnsupportedOpCodesTests,UnsupportedOpCodesTests(),1,TestCompiler,OpCodesTest
addUnsupportedOpCodeTest,addUnsupportedOpCodeTest(int32_t,TR::ILOpCodes,char *,TR::DataType *,TR::DataType),1,TestCompiler,OpCodesTest
byteswap,byteswap(int16_t),1,TestCompiler,OpCodesTest
byteswap,byteswap(int32_t),0,TestCompiler,OpCodesTest
byteswap,byteswap(uint32_t),0,TestCompiler,OpCodesTest
byteswap,byteswap(uint16_t),0,TestCompiler,OpCodesTest
byteswap,byteswap(int64_t),0,TestCompiler,OpCodesTest
byteswap,byteswap(uint64_t),0,TestCompiler,OpCodesTest
compileAddressTestMethods,compileAddressTestMethods(),1,TestCompiler,OpCodesTest
compileBitwiseMethods,compileBitwiseMethods(),1,TestCompiler,OpCodesTest
compileCompareTestMethods,compileCompareTestMethods(),1,TestCompiler,OpCodesTest
compileDisabledOpCodesTests,compileDisabledOpCodesTests(),1,TestCompiler,OpCodesTest
compileIntegerArithmeticTestMethods,compileIntegerArithmeticTestMethods(),1,TestCompiler,OpCodesTest
compileMemoryOperationTestMethods,compileMemoryOperationTestMethods(),1,TestCompiler,OpCodesTest
compileTernaryTestMethods,compileTernaryTestMethods(),1,TestCompiler,OpCodesTest
compileUnaryTestMethods,compileUnaryTestMethods(),1,TestCompiler,OpCodesTest
invokeAddressTests,invokeAddressTests(),1,TestCompiler,OpCodesTest
invokeBitwiseTests,invokeBitwiseTests(),1,TestCompiler,OpCodesTest
invokeCompareTests,invokeCompareTests(),1,TestCompiler,OpCodesTest
invokeDisabledOpCodesTests,invokeDisabledOpCodesTests(),1,TestCompiler,OpCodesTest
invokeIntegerArithmeticTests,invokeIntegerArithmeticTests(),1,TestCompiler,OpCodesTest
invokeMemoryOperationTests,invokeMemoryOperationTests(),1,TestCompiler,OpCodesTest
invokeNoHelperUnaryTests,invokeNoHelperUnaryTests(),1,TestCompiler,OpCodesTest
invokeTernaryTests,invokeTernaryTests(),1,TestCompiler,OpCodesTest
invokeUnaryTests,invokeUnaryTests(),1,TestCompiler,OpCodesTest
operator=,operator=(const class TestCompiler::OpCodesTest &),0,TestCompiler,OpCodesTest
operator=,operator=(class TestCompiler::OpCodesTest &&),0,TestCompiler,OpCodesTest
resolvedMethod,resolvedMethod(TR::DataType),1,TestCompiler,OpCodesTest
~OpCodesTest,~OpCodesTest(),1,TestCompiler,OpCodesTest
RecursiveFibonnaciMethod,RecursiveFibonnaciMethod(class TestCompiler::RecursiveFibonnaciMethod &&),1,TestCompiler,RecursiveFibonnaciMethod
RecursiveFibonnaciMethod,RecursiveFibonnaciMethod(const class TestCompiler::RecursiveFibonnaciMethod &),0,TestCompiler,RecursiveFibonnaciMethod
RecursiveFibonnaciMethod,RecursiveFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,RecursiveFibonnaciMethod
operator=,operator=(const class TestCompiler::RecursiveFibonnaciMethod &),0,TestCompiler,RecursiveFibonnaciMethod
operator=,operator=(class TestCompiler::RecursiveFibonnaciMethod &&),0,TestCompiler,RecursiveFibonnaciMethod
~RecursiveFibonnaciMethod,~RecursiveFibonnaciMethod(),1,TestCompiler,RecursiveFibonnaciMethod
ShootoutNestedLoopMethod,ShootoutNestedLoopMethod(class TestCompiler::ShootoutNestedLoopMethod &&),1,TestCompiler,ShootoutNestedLoopMethod
ShootoutNestedLoopMethod,ShootoutNestedLoopMethod(const class TestCompiler::ShootoutNestedLoopMethod &),0,TestCompiler,ShootoutNestedLoopMethod
ShootoutNestedLoopMethod,ShootoutNestedLoopMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,ShootoutNestedLoopMethod
operator=,operator=(const class TestCompiler::ShootoutNestedLoopMethod &),0,TestCompiler,ShootoutNestedLoopMethod
operator=,operator=(class TestCompiler::ShootoutNestedLoopMethod &&),0,TestCompiler,ShootoutNestedLoopMethod
~ShootoutNestedLoopMethod,~ShootoutNestedLoopMethod(),1,TestCompiler,ShootoutNestedLoopMethod
StoreOpIlInjector,StoreOpIlInjector(class TestCompiler::StoreOpIlInjector &&),1,TestCompiler,StoreOpIlInjector
StoreOpIlInjector,StoreOpIlInjector(const class TestCompiler::StoreOpIlInjector &),0,TestCompiler,StoreOpIlInjector
StoreOpIlInjector,StoreOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,StoreOpIlInjector
SubIfFalseThenMethod,SubIfFalseThenMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),1,TestCompiler,SubIfFalseThenMethod
SubIfFalseThenMethod,SubIfFalseThenMethod(class TestCompiler::SubIfFalseThenMethod &&),0,TestCompiler,SubIfFalseThenMethod
SubIfFalseThenMethod,SubIfFalseThenMethod(const class TestCompiler::SubIfFalseThenMethod &),0,TestCompiler,SubIfFalseThenMethod
operator=,operator=(const class TestCompiler::SubIfFalseThenMethod &),0,TestCompiler,SubIfFalseThenMethod
operator=,operator=(class TestCompiler::SubIfFalseThenMethod &&),0,TestCompiler,SubIfFalseThenMethod
~SubIfFalseThenMethod,~SubIfFalseThenMethod(),1,TestCompiler,SubIfFalseThenMethod
TernaryOpIlInjector,TernaryOpIlInjector(class TestCompiler::TernaryOpIlInjector &&),1,TestCompiler,TernaryOpIlInjector
TernaryOpIlInjector,TernaryOpIlInjector(const class TestCompiler::TernaryOpIlInjector &),0,TestCompiler,TernaryOpIlInjector
TernaryOpIlInjector,TernaryOpIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *,TR::ILOpCodes),0,TestCompiler,TernaryOpIlInjector
WhileDoFibonnaciMethod,WhileDoFibonnaciMethod(const class TestCompiler::WhileDoFibonnaciMethod &),1,TestCompiler,WhileDoFibonnaciMethod
WhileDoFibonnaciMethod,WhileDoFibonnaciMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,WhileDoFibonnaciMethod
WhileDoFibonnaciMethod,WhileDoFibonnaciMethod(class TestCompiler::WhileDoFibonnaciMethod &&),0,TestCompiler,WhileDoFibonnaciMethod
operator=,operator=(const class TestCompiler::WhileDoFibonnaciMethod &),0,TestCompiler,WhileDoFibonnaciMethod
operator=,operator=(class TestCompiler::WhileDoFibonnaciMethod &&),0,TestCompiler,WhileDoFibonnaciMethod
~WhileDoFibonnaciMethod,~WhileDoFibonnaciMethod(),1,TestCompiler,WhileDoFibonnaciMethod
WhileDoIfThenElseMethod,WhileDoIfThenElseMethod(class TestCompiler::WhileDoIfThenElseMethod &&),1,TestCompiler,WhileDoIfThenElseMethod
WhileDoIfThenElseMethod,WhileDoIfThenElseMethod(const class TestCompiler::WhileDoIfThenElseMethod &),0,TestCompiler,WhileDoIfThenElseMethod
WhileDoIfThenElseMethod,WhileDoIfThenElseMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,WhileDoIfThenElseMethod
operator=,operator=(class TestCompiler::WhileDoIfThenElseMethod &&),0,TestCompiler,WhileDoIfThenElseMethod
operator=,operator=(const class TestCompiler::WhileDoIfThenElseMethod &),0,TestCompiler,WhileDoIfThenElseMethod
~WhileDoIfThenElseMethod,~WhileDoIfThenElseMethod(),1,TestCompiler,WhileDoIfThenElseMethod
WhileDoWithBreakAndContinueMethod,WhileDoWithBreakAndContinueMethod(class TestCompiler::WhileDoWithBreakAndContinueMethod &&),1,TestCompiler,WhileDoWithBreakAndContinueMethod
WhileDoWithBreakAndContinueMethod,WhileDoWithBreakAndContinueMethod(const class TestCompiler::WhileDoWithBreakAndContinueMethod &),0,TestCompiler,WhileDoWithBreakAndContinueMethod
WhileDoWithBreakAndContinueMethod,WhileDoWithBreakAndContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,WhileDoWithBreakAndContinueMethod
operator=,operator=(const class TestCompiler::WhileDoWithBreakAndContinueMethod &),0,TestCompiler,WhileDoWithBreakAndContinueMethod
operator=,operator=(class TestCompiler::WhileDoWithBreakAndContinueMethod &&),0,TestCompiler,WhileDoWithBreakAndContinueMethod
~WhileDoWithBreakAndContinueMethod,~WhileDoWithBreakAndContinueMethod(),1,TestCompiler,WhileDoWithBreakAndContinueMethod
WhileDoWithBreakMethod,WhileDoWithBreakMethod(class TestCompiler::WhileDoWithBreakMethod &&),1,TestCompiler,WhileDoWithBreakMethod
WhileDoWithBreakMethod,WhileDoWithBreakMethod(const class TestCompiler::WhileDoWithBreakMethod &),0,TestCompiler,WhileDoWithBreakMethod
WhileDoWithBreakMethod,WhileDoWithBreakMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,WhileDoWithBreakMethod
operator=,operator=(class TestCompiler::WhileDoWithBreakMethod &&),0,TestCompiler,WhileDoWithBreakMethod
operator=,operator=(const class TestCompiler::WhileDoWithBreakMethod &),0,TestCompiler,WhileDoWithBreakMethod
~WhileDoWithBreakMethod,~WhileDoWithBreakMethod(),1,TestCompiler,WhileDoWithBreakMethod
WhileDoWithContinueMethod,WhileDoWithContinueMethod(const class TestCompiler::WhileDoWithContinueMethod &),1,TestCompiler,WhileDoWithContinueMethod
WhileDoWithContinueMethod,WhileDoWithContinueMethod(TR::TypeDictionary *,class TestCompiler::BuilderTest *),0,TestCompiler,WhileDoWithContinueMethod
WhileDoWithContinueMethod,WhileDoWithContinueMethod(class TestCompiler::WhileDoWithContinueMethod &&),0,TestCompiler,WhileDoWithContinueMethod
operator=,operator=(const class TestCompiler::WhileDoWithContinueMethod &),0,TestCompiler,WhileDoWithContinueMethod
operator=,operator=(class TestCompiler::WhileDoWithContinueMethod &&),0,TestCompiler,WhileDoWithContinueMethod
~WhileDoWithContinueMethod,~WhileDoWithContinueMethod(),1,TestCompiler,WhileDoWithContinueMethod
EmptyTestEventListener,EmptyTestEventListener(class testing::EmptyTestEventListener &&),1,testing,EmptyTestEventListener
OnEnvironmentsSetUpEnd,OnEnvironmentsSetUpEnd(const class testing::UnitTest &),1,testing,TestEventListener
OnEnvironmentsSetUpStart,OnEnvironmentsSetUpStart(const class testing::UnitTest &),1,testing,TestEventListener
OnEnvironmentsTearDownEnd,OnEnvironmentsTearDownEnd(const class testing::UnitTest &),1,testing,TestEventListener
OnEnvironmentsTearDownStart,OnEnvironmentsTearDownStart(const class testing::UnitTest &),1,testing,TestEventListener
OnTestCaseEnd,OnTestCaseEnd(const class testing::TestCase &),1,testing,TestEventListener
OnTestCaseStart,OnTestCaseStart(const class testing::TestCase &),1,testing,TestEventListener
OnTestEnd,OnTestEnd(const class testing::TestInfo &),1,testing,TestEventListener
OnTestIterationEnd,OnTestIterationEnd(const class testing::UnitTest &,int),1,testing,TestEventListener
OnTestIterationStart,OnTestIterationStart(const class testing::UnitTest &,int),1,testing,TestEventListener
OnTestPartResult,OnTestPartResult(const class testing::TestPartResult &),1,testing,TestEventListener
OnTestProgramEnd,OnTestProgramEnd(const class testing::UnitTest &),1,testing,TestEventListener
OnTestProgramStart,OnTestProgramStart(const class testing::UnitTest &),1,testing,TestEventListener
OnTestStart,OnTestStart(const class testing::TestInfo &),1,testing,TestEventListener
TestEventListener,TestEventListener(const class testing::TestEventListener &),1,testing,TestEventListener
operator=,operator=(const class testing::TestEventListener &),1,testing,TestEventListener
operator=,operator=(const class testing::EmptyTestEventListener &),0,testing,EmptyTestEventListener
operator=,operator=(class testing::EmptyTestEventListener &&),0,testing,EmptyTestEventListener
~EmptyTestEventListener,~EmptyTestEventListener(),1,testing,EmptyTestEventListener
~TestEventListener,~TestEventListener(),1,testing,TestEventListener
Create,Create(const char *,const class testing::internal::RE *,const char *,int,class testing::internal::DeathTest **),1,testing,internal::DeathTestFactory
DeathTestFactory,DeathTestFactory(const class testing::internal::DeathTestFactory &),1,testing,internal::DeathTestFactory
DefaultDeathTestFactory,DefaultDeathTestFactory(class testing::internal::DefaultDeathTestFactory &&),1,testing,internal::DefaultDeathTestFactory
operator=,operator=(const class testing::internal::DeathTestFactory &),1,testing,internal::DeathTestFactory
operator=,operator=(const class testing::internal::DefaultDeathTestFactory &),0,testing,internal::DefaultDeathTestFactory
operator=,operator=(class testing::internal::DefaultDeathTestFactory &&),0,testing,internal::DefaultDeathTestFactory
~DeathTestFactory,~DeathTestFactory(),1,testing,internal::DeathTestFactory
~DefaultDeathTestFactory,~DefaultDeathTestFactory(),1,testing,internal::DefaultDeathTestFactory
GoogleTestFailureException,GoogleTestFailureException(const class testing::TestPartResult &),1,testing,internal::GoogleTestFailureException
GoogleTestFailureException,GoogleTestFailureException(class testing::internal::GoogleTestFailureException &&),0,testing,internal::GoogleTestFailureException
operator=,operator=(class testing::internal::GoogleTestFailureException &&),0,testing,internal::GoogleTestFailureException
operator=,operator=(const class testing::internal::GoogleTestFailureException &),0,testing,internal::GoogleTestFailureException
~GoogleTestFailureException,~GoogleTestFailureException(),1,testing,internal::GoogleTestFailureException
HasNewFatalFailureHelper,HasNewFatalFailureHelper(const class testing::internal::HasNewFatalFailureHelper &),1,testing,internal::HasNewFatalFailureHelper
HasNewFatalFailureHelper,HasNewFatalFailureHelper(),0,testing,internal::HasNewFatalFailureHelper
ReportTestPartResult,ReportTestPartResult(const class testing::TestPartResult &),1,testing,TestPartResultReporterInterface
has_new_fatal_failure,has_new_fatal_failure(),1,testing,internal::HasNewFatalFailureHelper
operator=,operator=(const class testing::TestPartResultReporterInterface &),1,testing,TestPartResultReporterInterface
operator=,operator=(const class testing::internal::HasNewFatalFailureHelper &),0,testing,internal::HasNewFatalFailureHelper
~HasNewFatalFailureHelper,~HasNewFatalFailureHelper(),1,testing,internal::HasNewFatalFailureHelper
~TestPartResultReporterInterface,~TestPartResultReporterInterface(),1,testing,TestPartResultReporterInterface
AssertHeld,AssertHeld(),1,testing,internal::MutexBase
Lock,Lock(),1,testing,internal::MutexBase
Mutex,Mutex(const class testing::internal::Mutex &),1,testing,internal::Mutex
Mutex,Mutex(),0,testing,internal::Mutex
MutexBase,MutexBase(class testing::internal::MutexBase &&),1,testing,internal::MutexBase
MutexBase,MutexBase(const class testing::internal::MutexBase &),0,testing,internal::MutexBase
MutexBase,MutexBase(),0,testing,internal::MutexBase
Unlock,Unlock(),1,testing,internal::MutexBase
operator=,operator=(const class testing::internal::Mutex &),1,testing,internal::Mutex
~Mutex,~Mutex(),1,testing,internal::Mutex
~MutexBase,~MutexBase(),1,testing,internal::MutexBase
AddTestCaseInstantiation,AddTestCaseInstantiation(const string &,GeneratorCreationFunc *,const char *,int),1,testing,internal::ParameterizedTestCaseInfo
AddTestPattern,AddTestPattern(const char *,const char *,TestMetaFactoryBase<ParamType> *),1,testing,internal::ParameterizedTestCaseInfo
GetTestCaseName,GetTestCaseName(),1,testing,internal::ParameterizedTestCaseInfoBase
GetTestCaseTypeId,GetTestCaseTypeId(),1,testing,internal::ParameterizedTestCaseInfoBase
ParameterizedTestCaseInfo<TestCase>,ParameterizedTestCaseInfo<TestCase>(const ParameterizedTestCaseInfo<TestCase> &),1,testing,internal::ParameterizedTestCaseInfo
ParameterizedTestCaseInfo<TestCase>,ParameterizedTestCaseInfo<TestCase>(const char *),0,testing,internal::ParameterizedTestCaseInfo
ParameterizedTestCaseInfoBase,ParameterizedTestCaseInfoBase(const class testing::internal::ParameterizedTestCaseInfoBase &),1,testing,internal::ParameterizedTestCaseInfoBase
ParameterizedTestCaseInfoBase,ParameterizedTestCaseInfoBase(),0,testing,internal::ParameterizedTestCaseInfoBase
RegisterTests,RegisterTests(),1,testing,internal::ParameterizedTestCaseInfoBase
operator=,operator=(const class testing::internal::ParameterizedTestCaseInfoBase &),1,testing,internal::ParameterizedTestCaseInfoBase
operator=,operator=(const ParameterizedTestCaseInfo<TestCase> &),0,testing,internal::ParameterizedTestCaseInfo
~ParameterizedTestCaseInfoBase,~ParameterizedTestCaseInfoBase(),1,testing,internal::ParameterizedTestCaseInfoBase
CreateTest,CreateTest(),1,testing,internal::TestFactoryBase
ParameterizedTestFactory<TestClass>,ParameterizedTestFactory<TestClass>(const ParameterizedTestFactory<TestClass> &),1,testing,internal::ParameterizedTestFactory
ParameterizedTestFactory<TestClass>,ParameterizedTestFactory<TestClass>(ParamType),0,testing,internal::ParameterizedTestFactory
TestFactoryBase,TestFactoryBase(),1,testing,internal::TestFactoryBase
TestFactoryBase,TestFactoryBase(const class testing::internal::TestFactoryBase &),0,testing,internal::TestFactoryBase
operator=,operator=(const class testing::internal::TestFactoryBase &),1,testing,internal::TestFactoryBase
operator=,operator=(const ParameterizedTestFactory<TestClass> &),0,testing,internal::ParameterizedTestFactory
~TestFactoryBase,~TestFactoryBase(),1,testing,internal::TestFactoryBase
ValueHolder,ValueHolder(const class testing::internal::ThreadLocal::ValueHolder &),1,testing,internal::ThreadLocal::ValueHolder
ValueHolder,ValueHolder(const T &),0,testing,internal::ThreadLocal::ValueHolder
operator=,operator=(const class testing::internal::ThreadLocalValueHolderBase &),1,testing,internal::ThreadLocalValueHolderBase
operator=,operator=(const class testing::internal::ThreadLocal::ValueHolder &),0,testing,internal::ThreadLocal::ValueHolder
pointer,pointer(),1,testing,internal::ThreadLocal::ValueHolder
~ThreadLocalValueHolderBase,~ThreadLocalValueHolderBase(),1,testing,internal::ThreadLocalValueHolderBase
Join,Join(),1,testing,internal::ThreadWithParam
Run,Run(),1,testing,internal::ThreadWithParamBase
ThreadWithParam<T>,ThreadWithParam<T>(const ThreadWithParam<T> &),1,testing,internal::ThreadWithParam
ThreadWithParam<T>,ThreadWithParam<T>(UserThreadFunc,T,class testing::internal::Notification *),0,testing,internal::ThreadWithParam
operator=,operator=(const class testing::internal::ThreadWithParamBase &),1,testing,internal::ThreadWithParamBase
operator=,operator=(const ThreadWithParam<T> &),0,testing,internal::ThreadWithParam
~ThreadWithParam<T>,~ThreadWithParam<T>(),1,testing,internal::ThreadWithParam
~ThreadWithParamBase,~ThreadWithParamBase(),1,testing,internal::ThreadWithParamBase
BinaryOpIlInjector,BinaryOpIlInjector(class TestCompiler::BinaryOpIlInjector &&),1,TestCompiler,BinaryOpIlInjector
BinaryOpIlInjector,BinaryOpIlInjector(const class TestCompiler::BinaryOpIlInjector &),0,TestCompiler,BinaryOpIlInjector
CodeCacheConfig,CodeCacheConfig(const class OMR::CodeCacheConfig &),1,OMR,CodeCacheConfig
CodeCacheConfig,CodeCacheConfig(class OMR::CodeCacheConfig &&),0,OMR,CodeCacheConfig
IndirectStoreIlInjector,IndirectStoreIlInjector(class TestCompiler::IndirectStoreIlInjector &&),1,TestCompiler,IndirectStoreIlInjector
IndirectStoreIlInjector,IndirectStoreIlInjector(const class TestCompiler::IndirectStoreIlInjector &),0,TestCompiler,IndirectStoreIlInjector
IfCmpUnsignedLessThan,IfCmpUnsignedLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpUnsignedLessThan,IfCmpUnsignedLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IlBuilder,IlBuilder(TR::MethodBuilder *,TR::TypeDictionary *),1,OMR,IlBuilder
IlValue,IlValue(TR::Node *,TR::TreeTop *,TR::Block *,TR::MethodBuilder *),1,OMR,IlValue
IlValue,IlValue(class OMR::IlValue &&),0,OMR,IlValue
operator new,operator new(size_t,TR_ArenaAllocator *),1,OMR,IlValue
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,IlValue
operator new[],operator new[](size_t,TR::Region &),1,OMR,IlValue
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlValue
CallIlInjector,CallIlInjector(class TestCompiler::CallIlInjector &&),1,TestCompiler,CallIlInjector
CallIlInjector,CallIlInjector(const class TestCompiler::CallIlInjector &),0,TestCompiler,CallIlInjector
ChildlessUnaryOpIlInjector,ChildlessUnaryOpIlInjector(const class TestCompiler::ChildlessUnaryOpIlInjector &),1,TestCompiler,ChildlessUnaryOpIlInjector
ChildlessUnaryOpIlInjector,ChildlessUnaryOpIlInjector(class TestCompiler::ChildlessUnaryOpIlInjector &&),0,TestCompiler,ChildlessUnaryOpIlInjector
JITTest_FooBarTest_Test,JITTest_FooBarTest_Test(),1,,
JITTest_FooBarTest_Test,JITTest_FooBarTest_Test(const class JITTest_FooBarTest_Test &),0,,
operator=,operator=(const class JITTest_FooBarTest_Test &),0,,
~JITTest_FooBarTest_Test,~JITTest_FooBarTest_Test(),1,,
addPredecessor,addPredecessor(class TR::CFGEdge *,enum TR_AllocationKind),1,TR,CFGNode
addPredecessor,addPredecessor(class TR::CFGEdge *),0,TR,CFGNode
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,TR,CFGNode
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,TR,CFGNode
BarIlInjector,BarIlInjector(const class TestCompiler::BarIlInjector &),1,TestCompiler,BarIlInjector
BarIlInjector,BarIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *),0,TestCompiler,BarIlInjector
BarIlInjector,BarIlInjector(class TestCompiler::BarIlInjector &&),0,TestCompiler,BarIlInjector
OpIlInjector,OpIlInjector(const class TestCompiler::OpIlInjector &),0,TestCompiler,OpIlInjector
FooBarTest,FooBarTest(class TestCompiler::FooBarTest &&),1,TestCompiler,FooBarTest
FooBarTest,FooBarTest(const class TestCompiler::FooBarTest &),0,TestCompiler,FooBarTest
FooBarTest,FooBarTest(),0,TestCompiler,FooBarTest
FooIlInjector,FooIlInjector(class TestCompiler::FooIlInjector &&),1,TestCompiler,FooIlInjector
FooIlInjector,FooIlInjector(const class TestCompiler::FooIlInjector &),0,TestCompiler,FooIlInjector
FooIlInjector,FooIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *),0,TestCompiler,FooIlInjector
indexParameter,indexParameter(),1,TestCompiler,FooIlInjector
operator=,operator=(class TestCompiler::FooIlInjector &&),0,TestCompiler,FooIlInjector
operator=,operator=(const class TestCompiler::FooIlInjector &),0,TestCompiler,FooIlInjector
~FooIlInjector,~FooIlInjector(),1,TestCompiler,FooIlInjector
FooIlInjector,FooIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *),1,TestCompiler,FooIlInjector
ifjump,ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,TR::Block *),1,OMR,IlInjector
ifjump,ifjump(TR::ILOpCodes,TR::Node *,TR::Node *,int32_t),0,OMR,IlInjector
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,IlInjector
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlInjector
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,IlInjector
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlInjector
setMethodAndTest,setMethodAndTest(TR::ResolvedMethod *,class TestCompiler::TestDriver *),1,TestCompiler,IlInjector
setMethodAndTest,setMethodAndTest(TR::IlInjector *),0,TestCompiler,IlInjector
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,IlValue
operator delete,operator delete(void *,size_t),0,OMR,IlValue
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,IlValue
OpIlInjector,OpIlInjector(class TestCompiler::OpIlInjector &&),1,TestCompiler,OpIlInjector
LimitFileTest,LimitFileTest(const class TestCompiler::LimitFileTest &),1,TestCompiler,LimitFileTest
LimitFileTest,LimitFileTest(),0,TestCompiler,LimitFileTest
LimitFileTest_CheckVLogTest_Test,LimitFileTest_CheckVLogTest_Test(),1,TestCompiler,LimitFileTest_CheckVLogTest_Test
LimitFileTest_CheckVLogTest_Test,LimitFileTest_CheckVLogTest_Test(const class TestCompiler::LimitFileTest_CheckVLogTest_Test &),0,TestCompiler,LimitFileTest_CheckVLogTest_Test
checkVLogForMethod,checkVLogForMethod(const char *,const char *,const char *,int *),1,TestCompiler,LimitFileTest
compileTests,compileTests(),1,TestCompiler,LimitFileTest
createAndCheckVLog,createAndCheckVLog(const char *,const char *,int *),1,TestCompiler,LimitFileTest
createVLog,createVLog(const char *,const char *),1,TestCompiler,LimitFileTest
delayUnlink,delayUnlink(const char *),1,TestCompiler,LimitFileTest
fileExists,fileExists(const char *),1,TestCompiler,LimitFileTest
generateVLog,generateVLog(const char *,const char *),1,TestCompiler,LimitFileTest
operator=,operator=(const class TestCompiler::LimitFileTest &),0,TestCompiler,LimitFileTest
operator=,operator=(const class TestCompiler::LimitFileTest_CheckVLogTest_Test &),0,TestCompiler,LimitFileTest_CheckVLogTest_Test
~LimitFileTest,~LimitFileTest(),1,TestCompiler,LimitFileTest
~LimitFileTest_CheckVLogTest_Test,~LimitFileTest_CheckVLogTest_Test(),1,TestCompiler,LimitFileTest_CheckVLogTest_Test
LimitFileTest_CreateVLogTest_Test,LimitFileTest_CreateVLogTest_Test(const class TestCompiler::LimitFileTest_CreateVLogTest_Test &),1,TestCompiler,LimitFileTest_CreateVLogTest_Test
LimitFileTest_CreateVLogTest_Test,LimitFileTest_CreateVLogTest_Test(),0,TestCompiler,LimitFileTest_CreateVLogTest_Test
operator=,operator=(const class TestCompiler::LimitFileTest_CreateVLogTest_Test &),0,TestCompiler,LimitFileTest_CreateVLogTest_Test
~LimitFileTest_CreateVLogTest_Test,~LimitFileTest_CreateVLogTest_Test(),1,TestCompiler,LimitFileTest_CreateVLogTest_Test
LimitFileTest_UseLimitFileBoundTest_Test,LimitFileTest_UseLimitFileBoundTest_Test(),1,TestCompiler,LimitFileTest_UseLimitFileBoundTest_Test
LimitFileTest_UseLimitFileBoundTest_Test,LimitFileTest_UseLimitFileBoundTest_Test(const class TestCompiler::LimitFileTest_UseLimitFileBoundTest_Test &),0,TestCompiler,LimitFileTest_UseLimitFileBoundTest_Test
operator=,operator=(const class TestCompiler::LimitFileTest_UseLimitFileBoundTest_Test &),0,TestCompiler,LimitFileTest_UseLimitFileBoundTest_Test
~LimitFileTest_UseLimitFileBoundTest_Test,~LimitFileTest_UseLimitFileBoundTest_Test(),1,TestCompiler,LimitFileTest_UseLimitFileBoundTest_Test
LimitFileTest_UseLimitFileRangeTest_Test,LimitFileTest_UseLimitFileRangeTest_Test(),1,TestCompiler,LimitFileTest_UseLimitFileRangeTest_Test
LimitFileTest_UseLimitFileRangeTest_Test,LimitFileTest_UseLimitFileRangeTest_Test(const class TestCompiler::LimitFileTest_UseLimitFileRangeTest_Test &),0,TestCompiler,LimitFileTest_UseLimitFileRangeTest_Test
operator=,operator=(const class TestCompiler::LimitFileTest_UseLimitFileRangeTest_Test &),0,TestCompiler,LimitFileTest_UseLimitFileRangeTest_Test
~LimitFileTest_UseLimitFileRangeTest_Test,~LimitFileTest_UseLimitFileRangeTest_Test(),1,TestCompiler,LimitFileTest_UseLimitFileRangeTest_Test
LimitFileTest_UseLimitFileTest_Test,LimitFileTest_UseLimitFileTest_Test(),1,TestCompiler,LimitFileTest_UseLimitFileTest_Test
LimitFileTest_UseLimitFileTest_Test,LimitFileTest_UseLimitFileTest_Test(const class TestCompiler::LimitFileTest_UseLimitFileTest_Test &),0,TestCompiler,LimitFileTest_UseLimitFileTest_Test
operator=,operator=(const class TestCompiler::LimitFileTest_UseLimitFileTest_Test &),0,TestCompiler,LimitFileTest_UseLimitFileTest_Test
~LimitFileTest_UseLimitFileTest_Test,~LimitFileTest_UseLimitFileTest_Test(),1,TestCompiler,LimitFileTest_UseLimitFileTest_Test
Environment,Environment(const class testing::Environment &),1,testing,Environment
OMRTestEnv,OMRTestEnv(class TestCompiler::OMRTestEnv &&),1,TestCompiler,OMRTestEnv
SetUp,SetUp(),1,testing,Environment
Setup,Setup(),1,testing,Environment
TearDown,TearDown(),1,testing,Environment
initialize,initialize(char *),1,TestCompiler,OMRTestEnv
operator=,operator=(const class testing::Environment &),1,testing,Environment
operator=,operator=(class TestCompiler::OMRTestEnv &&),0,TestCompiler,OMRTestEnv
operator=,operator=(const class TestCompiler::OMRTestEnv &),0,TestCompiler,OMRTestEnv
shutdown,shutdown(),1,TestCompiler,OMRTestEnv
~Environment,~Environment(),1,testing,Environment
~OMRTestEnv,~OMRTestEnv(),1,TestCompiler,OMRTestEnv
OpCodesTest,OpCodesTest(class TestCompiler::OpCodesTest &&),1,TestCompiler,OpCodesTest
OpCodesTest,OpCodesTest(),0,TestCompiler,OpCodesTest
OpCodesTest,OpCodesTest(const class TestCompiler::OpCodesTest &),0,TestCompiler,OpCodesTest
LogFileTest,LogFileTest(const class TestCompiler::LogFileTest &),1,TestCompiler,LogFileTest
LogFileTest,LogFileTest(),0,TestCompiler,LogFileTest
LogFileTest_CreateTFLogTest_Test,LogFileTest_CreateTFLogTest_Test(const class TestCompiler::LogFileTest_CreateTFLogTest_Test &),1,TestCompiler,LogFileTest_CreateTFLogTest_Test
LogFileTest_CreateTFLogTest_Test,LogFileTest_CreateTFLogTest_Test(),0,TestCompiler,LogFileTest_CreateTFLogTest_Test
buildKeywordMap,buildKeywordMap(std::initializer_list<const char *>),1,TestCompiler,LogFileTest
checkLogForKeywords,checkLogForKeywords(std::map<const char *, _Bool>,const char *),1,TestCompiler,LogFileTest
compileTests,compileTests(),1,TestCompiler,LogFileTest
createLog,createLog(std::string,const char *),1,TestCompiler,LogFileTest
fileExists,fileExists(std::string),1,TestCompiler,LogFileTest
fileIsNotEmpty,fileIsNotEmpty(std::string),1,TestCompiler,LogFileTest
forkAndCompile,forkAndCompile(std::string,const char *),1,TestCompiler,LogFileTest
operator=,operator=(const class TestCompiler::LogFileTest &),0,TestCompiler,LogFileTest
operator=,operator=(const class TestCompiler::LogFileTest_CreateTFLogTest_Test &),0,TestCompiler,LogFileTest_CreateTFLogTest_Test
runKeywordTests,runKeywordTests(std::map<const char *, std::map<const char *, _Bool> >),1,TestCompiler,LogFileTest
~LogFileTest,~LogFileTest(),1,TestCompiler,LogFileTest
~LogFileTest_CreateTFLogTest_Test,~LogFileTest_CreateTFLogTest_Test(),1,TestCompiler,LogFileTest_CreateTFLogTest_Test
LogFileTest_EmptyTFLogTest_Test,LogFileTest_EmptyTFLogTest_Test(),1,TestCompiler,LogFileTest_EmptyTFLogTest_Test
LogFileTest_EmptyTFLogTest_Test,LogFileTest_EmptyTFLogTest_Test(const class TestCompiler::LogFileTest_EmptyTFLogTest_Test &),0,TestCompiler,LogFileTest_EmptyTFLogTest_Test
operator=,operator=(const class TestCompiler::LogFileTest_EmptyTFLogTest_Test &),0,TestCompiler,LogFileTest_EmptyTFLogTest_Test
~LogFileTest_EmptyTFLogTest_Test,~LogFileTest_EmptyTFLogTest_Test(),1,TestCompiler,LogFileTest_EmptyTFLogTest_Test
LogFileTest_KeywordsLogTest_Test,LogFileTest_KeywordsLogTest_Test(),1,TestCompiler,LogFileTest_KeywordsLogTest_Test
LogFileTest_KeywordsLogTest_Test,LogFileTest_KeywordsLogTest_Test(const class TestCompiler::LogFileTest_KeywordsLogTest_Test &),0,TestCompiler,LogFileTest_KeywordsLogTest_Test
operator=,operator=(const class TestCompiler::LogFileTest_KeywordsLogTest_Test &),0,TestCompiler,LogFileTest_KeywordsLogTest_Test
~LogFileTest_KeywordsLogTest_Test,~LogFileTest_KeywordsLogTest_Test(),1,TestCompiler,LogFileTest_KeywordsLogTest_Test
OptionSetTest,OptionSetTest(const class TestCompiler::OptionSetTest &),1,TestCompiler,OptionSetTest
OptionSetTest,OptionSetTest(),0,TestCompiler,OptionSetTest
OptionSetTest,OptionSetTest(class TestCompiler::OptionSetTest &&),0,TestCompiler,OptionSetTest
OptionSetTest_UseOptionSets_Test,OptionSetTest_UseOptionSets_Test(),1,TestCompiler,OptionSetTest_UseOptionSets_Test
OptionSetTest_UseOptionSets_Test,OptionSetTest_UseOptionSets_Test(const class TestCompiler::OptionSetTest_UseOptionSets_Test &),0,TestCompiler,OptionSetTest_UseOptionSets_Test
applyOptionSets,applyOptionSets(const char *,const char *,const TestCompiler::MethodSets &),1,TestCompiler,OptionSetTest
getMethodFromLine,getMethodFromLine(const std::string &),1,TestCompiler,OptionSetTest
operator=,operator=(class TestCompiler::OptionSetTest &&),0,TestCompiler,OptionSetTest
operator=,operator=(const class TestCompiler::OptionSetTest &),0,TestCompiler,OptionSetTest
operator=,operator=(const class TestCompiler::OptionSetTest_UseOptionSets_Test &),0,TestCompiler,OptionSetTest_UseOptionSets_Test
~OptionSetTest,~OptionSetTest(),1,TestCompiler,OptionSetTest
~OptionSetTest_UseOptionSets_Test,~OptionSetTest_UseOptionSets_Test(),1,TestCompiler,OptionSetTest_UseOptionSets_Test
OptionSetTest_WithDefault_Test,OptionSetTest_WithDefault_Test(),1,TestCompiler,OptionSetTest_WithDefault_Test
OptionSetTest_WithDefault_Test,OptionSetTest_WithDefault_Test(const class TestCompiler::OptionSetTest_WithDefault_Test &),0,TestCompiler,OptionSetTest_WithDefault_Test
operator=,operator=(const class TestCompiler::OptionSetTest_WithDefault_Test &),0,TestCompiler,OptionSetTest_WithDefault_Test
~OptionSetTest_WithDefault_Test,~OptionSetTest_WithDefault_Test(),1,TestCompiler,OptionSetTest_WithDefault_Test
JITCrossPlatformsOpCodesTest_AddressTest_Test,JITCrossPlatformsOpCodesTest_AddressTest_Test(),1,,
JITCrossPlatformsOpCodesTest_AddressTest_Test,JITCrossPlatformsOpCodesTest_AddressTest_Test(const class JITCrossPlatformsOpCodesTest_AddressTest_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_AddressTest_Test &),0,,
~JITCrossPlatformsOpCodesTest_AddressTest_Test,~JITCrossPlatformsOpCodesTest_AddressTest_Test(),1,,
JITCrossPlatformsOpCodesTest_BitwiseTest_Test,JITCrossPlatformsOpCodesTest_BitwiseTest_Test(),1,,
JITCrossPlatformsOpCodesTest_BitwiseTest_Test,JITCrossPlatformsOpCodesTest_BitwiseTest_Test(const class JITCrossPlatformsOpCodesTest_BitwiseTest_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_BitwiseTest_Test &),0,,
~JITCrossPlatformsOpCodesTest_BitwiseTest_Test,~JITCrossPlatformsOpCodesTest_BitwiseTest_Test(),1,,
JITCrossPlatformsOpCodesTest_CompareTest_Test,JITCrossPlatformsOpCodesTest_CompareTest_Test(),1,,
JITCrossPlatformsOpCodesTest_CompareTest_Test,JITCrossPlatformsOpCodesTest_CompareTest_Test(const class JITCrossPlatformsOpCodesTest_CompareTest_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_CompareTest_Test &),0,,
~JITCrossPlatformsOpCodesTest_CompareTest_Test,~JITCrossPlatformsOpCodesTest_CompareTest_Test(),1,,
JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test,JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test(),1,,
JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test,JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test(const class JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test &),0,,
~JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test,~JITCrossPlatformsOpCodesTest_DISABLED_OpCodesTests_Test(),1,,
JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test,JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test(),1,,
JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test,JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test(const class JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test &),0,,
~JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test,~JITCrossPlatformsOpCodesTest_DISABLED_UnaryTest_Test(),1,,
JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test,JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test(),1,,
JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test,JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test(const class JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test &),0,,
~JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test,~JITCrossPlatformsOpCodesTest_IntegerArithmeticTest_Test(),1,,
JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test,JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test(),1,,
JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test,JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test(const class JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test &),0,,
~JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test,~JITCrossPlatformsOpCodesTest_MemoryOperationTest_Test(),1,,
JITCrossPlatformsOpCodesTest_TernaryTest_Test,JITCrossPlatformsOpCodesTest_TernaryTest_Test(),1,,
JITCrossPlatformsOpCodesTest_TernaryTest_Test,JITCrossPlatformsOpCodesTest_TernaryTest_Test(const class JITCrossPlatformsOpCodesTest_TernaryTest_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_TernaryTest_Test &),0,,
~JITCrossPlatformsOpCodesTest_TernaryTest_Test,~JITCrossPlatformsOpCodesTest_TernaryTest_Test(),1,,
JITCrossPlatformsOpCodesTest_UnaryTest_Test,JITCrossPlatformsOpCodesTest_UnaryTest_Test(),1,,
JITCrossPlatformsOpCodesTest_UnaryTest_Test,JITCrossPlatformsOpCodesTest_UnaryTest_Test(const class JITCrossPlatformsOpCodesTest_UnaryTest_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_UnaryTest_Test &),0,,
~JITCrossPlatformsOpCodesTest_UnaryTest_Test,~JITCrossPlatformsOpCodesTest_UnaryTest_Test(),1,,
JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test,JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test(),1,,
JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test,JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test(const class JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test &),0,,
operator=,operator=(const class JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test &),0,,
~JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test,~JITCrossPlatformsOpCodesTest_UnsupportedOpCodesTest_Test(),1,,
OpCodesTest,OpCodesTest(),1,TestCompiler,OpCodesTest
OpCodesTest,OpCodesTest(class TestCompiler::OpCodesTest &&),0,TestCompiler,OpCodesTest
TestDriver,TestDriver(class TestCompiler::TestDriver &&),1,TestCompiler,TestDriver
TestDriver,TestDriver(const class TestCompiler::TestDriver &),0,TestCompiler,TestDriver
compileBitwiseTestMethods,compileBitwiseTestMethods(),1,TestCompiler,PPCOpCodesTest
compileDisabledBitwiseTestMethods,compileDisabledBitwiseTestMethods(),1,TestCompiler,PPCOpCodesTest
compileDisabledCompareTestMethods,compileDisabledCompareTestMethods(),1,TestCompiler,PPCOpCodesTest
compileDisabledConvertTestMethods,compileDisabledConvertTestMethods(),1,TestCompiler,PPCOpCodesTest
compileDisabledDirectCallTestMethods,compileDisabledDirectCallTestMethods(),1,TestCompiler,PPCOpCodesTest
compileDisabledFloatArithmeticTestMethods,compileDisabledFloatArithmeticTestMethods(),1,TestCompiler,PPCOpCodesTest
compileDisabledIntegerArithmeticTestMethods,compileDisabledIntegerArithmeticTestMethods(),1,TestCompiler,PPCOpCodesTest
compileDisabledMemoryOperationTestMethods,compileDisabledMemoryOperationTestMethods(),1,TestCompiler,PPCOpCodesTest
compileDisabledTernaryTestMethods,compileDisabledTernaryTestMethods(),1,TestCompiler,PPCOpCodesTest
compileDisabledUnaryTestMethods,compileDisabledUnaryTestMethods(),1,TestCompiler,PPCOpCodesTest
invokeDisabledBitwiseTests,invokeDisabledBitwiseTests(),1,TestCompiler,PPCOpCodesTest
invokeDisabledCompareTests,invokeDisabledCompareTests(),1,TestCompiler,PPCOpCodesTest
invokeDisabledConvertTests,invokeDisabledConvertTests(),1,TestCompiler,PPCOpCodesTest
invokeDisabledDirectCallTest,invokeDisabledDirectCallTest(),1,TestCompiler,PPCOpCodesTest
invokeDisabledFloatArithmeticTests,invokeDisabledFloatArithmeticTests(),1,TestCompiler,PPCOpCodesTest
invokeDisabledIntegerArithmeticTests,invokeDisabledIntegerArithmeticTests(),1,TestCompiler,PPCOpCodesTest
invokeDisabledMemoryOperationTests,invokeDisabledMemoryOperationTests(),1,TestCompiler,PPCOpCodesTest
invokeDisabledTernaryTest,invokeDisabledTernaryTest(),1,TestCompiler,PPCOpCodesTest
invokeDisabledUnaryTests,invokeDisabledUnaryTests(),1,TestCompiler,PPCOpCodesTest
operator=,operator=(const class TestCompiler::TestDriver &),1,TestCompiler,TestDriver
operator=,operator=(class TestCompiler::TestDriver &&),0,TestCompiler,TestDriver
operator=,operator=(class TestCompiler::PPCOpCodesTest &&),0,TestCompiler,PPCOpCodesTest
operator=,operator=(const class TestCompiler::PPCOpCodesTest &),0,TestCompiler,PPCOpCodesTest
~PPCOpCodesTest,~PPCOpCodesTest(),1,TestCompiler,PPCOpCodesTest
JITQuxTest_QuxTest2_Test,JITQuxTest_QuxTest2_Test(),1,,
JITQuxTest_QuxTest2_Test,JITQuxTest_QuxTest2_Test(const class JITQuxTest_QuxTest2_Test &),0,,
operator=,operator=(const class JITQuxTest_QuxTest2_Test &),0,,
~JITQuxTest_QuxTest2_Test,~JITQuxTest_QuxTest2_Test(),1,,
Qux2IlInjector,Qux2IlInjector(const class TestCompiler::Qux2IlInjector &),1,TestCompiler,Qux2IlInjector
Qux2IlInjector,Qux2IlInjector(class TestCompiler::Qux2IlInjector &&),0,TestCompiler,Qux2IlInjector
Qux2IlInjector,Qux2IlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *),0,TestCompiler,Qux2IlInjector
intParameter,intParameter(),1,TestCompiler,Qux2IlInjector
operator=,operator=(const class TestCompiler::Qux2IlInjector &),0,TestCompiler,Qux2IlInjector
operator=,operator=(class TestCompiler::Qux2IlInjector &&),0,TestCompiler,Qux2IlInjector
~Qux2IlInjector,~Qux2IlInjector(),1,TestCompiler,Qux2IlInjector
Qux2Test,Qux2Test(),1,TestCompiler,Qux2Test
Qux2Test,Qux2Test(const class TestCompiler::Qux2Test &),0,TestCompiler,Qux2Test
Qux2Test,Qux2Test(class TestCompiler::Qux2Test &&),0,TestCompiler,Qux2Test
operator=,operator=(class TestCompiler::Qux2Test &&),0,TestCompiler,Qux2Test
operator=,operator=(const class TestCompiler::Qux2Test &),0,TestCompiler,Qux2Test
qux2,qux2(int32_t),1,TestCompiler,Qux2Test
~Qux2Test,~Qux2Test(),1,TestCompiler,Qux2Test
Qux2IlInjector,Qux2IlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *),1,TestCompiler,Qux2IlInjector
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,IlType
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,IlType
findOrCreateArrayShadowSymbolRef,findOrCreateArrayShadowSymbolRef(TR::DataType,TR::Node *),1,OMR,SymbolReferenceTable
findOrCreateArrayShadowSymbolRef,findOrCreateArrayShadowSymbolRef(TR::DataType,TR::Node *,int32_t,class TR_FrontEnd *),0,OMR,SymbolReferenceTable
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,SymbolReferenceTable
DefineField,DefineField(const char *,const char *,TR::IlType *),1,OMR,TypeDictionary
DefineField,DefineField(const char *,const char *,TR::IlType *,size_t),0,OMR,TypeDictionary
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,TypeDictionary
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,TypeDictionary
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,TypeDictionary
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,TypeDictionary
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,TypeDictionary
OptTestDriver,OptTestDriver(const class TestCompiler::OptTestDriver &),1,TestCompiler,OptTestDriver
OptTestDriver,OptTestDriver(),0,TestCompiler,OptTestDriver
SetupStrategy,SetupStrategy(),1,TestCompiler,OptTestDriver
SimplifierFoldAndTest,SimplifierFoldAndTest(const class TestCompiler::SimplifierFoldAndTest &),1,TestCompiler,SimplifierFoldAndTest
SimplifierFoldAndTest,SimplifierFoldAndTest(),0,TestCompiler,SimplifierFoldAndTest
SimplifierFoldAndTest,SimplifierFoldAndTest(class TestCompiler::SimplifierFoldAndTest &&),0,TestCompiler,SimplifierFoldAndTest
SimplifierFoldAndTest_SimplifierFoldAndTest_Test,SimplifierFoldAndTest_SimplifierFoldAndTest_Test(),1,TestCompiler,SimplifierFoldAndTest_SimplifierFoldAndTest_Test
SimplifierFoldAndTest_SimplifierFoldAndTest_Test,SimplifierFoldAndTest_SimplifierFoldAndTest_Test(const class TestCompiler::SimplifierFoldAndTest_SimplifierFoldAndTest_Test &),0,TestCompiler,SimplifierFoldAndTest_SimplifierFoldAndTest_Test
TestBody,TestBody(),1,TestCompiler,SimplifierFoldAndTest_SimplifierFoldAndTest_Test
Verify,Verify(),1,TestCompiler,OptTestDriver
VerifyAndInvoke,VerifyAndInvoke(),1,TestCompiler,OptTestDriver
addOptimization,addOptimization(OMR::Optimizations),1,TestCompiler,OptTestDriver
addOptimizations,addOptimizations(const struct OptimizationStrategy *),1,TestCompiler,OptTestDriver
makeOptimizationStrategyArray,makeOptimizationStrategyArray(struct OptimizationStrategy *),1,TestCompiler,OptTestDriver
operator=,operator=(const class TestCompiler::OptTestDriver &),0,TestCompiler,OptTestDriver
operator=,operator=(class TestCompiler::SimplifierFoldAndTest &&),0,TestCompiler,SimplifierFoldAndTest
operator=,operator=(const class TestCompiler::SimplifierFoldAndTest &),0,TestCompiler,SimplifierFoldAndTest
operator=,operator=(const class TestCompiler::SimplifierFoldAndTest_SimplifierFoldAndTest_Test &),0,TestCompiler,SimplifierFoldAndTest_SimplifierFoldAndTest_Test
setIlVerifier,setIlVerifier(TR::IlVerifier *),1,TestCompiler,OptTestDriver
setMethodInfo,setMethodInfo(TestCompiler::MethodInfo *),1,TestCompiler,OptTestDriver
~OptTestDriver,~OptTestDriver(),1,TestCompiler,OptTestDriver
~SimplifierFoldAndTest,~SimplifierFoldAndTest(),1,TestCompiler,SimplifierFoldAndTest
~SimplifierFoldAndTest_SimplifierFoldAndTest_Test,~SimplifierFoldAndTest_SimplifierFoldAndTest_Test(),1,TestCompiler,SimplifierFoldAndTest_SimplifierFoldAndTest_Test
SimplifierFoldAndIlInjector,SimplifierFoldAndIlInjector(class TestCompiler::SimplifierFoldAndIlInjector &&),1,TestCompiler,SimplifierFoldAndIlInjector
SimplifierFoldAndIlInjector,SimplifierFoldAndIlInjector(const class TestCompiler::SimplifierFoldAndIlInjector &),0,TestCompiler,SimplifierFoldAndIlInjector
SimplifierFoldAndIlInjector,SimplifierFoldAndIlInjector(TR::TypeDictionary *,class TestCompiler::TestDriver *),0,TestCompiler,SimplifierFoldAndIlInjector
operator=,operator=(class TestCompiler::SimplifierFoldAndIlInjector &&),0,TestCompiler,SimplifierFoldAndIlInjector
operator=,operator=(const class TestCompiler::SimplifierFoldAndIlInjector &),0,TestCompiler,SimplifierFoldAndIlInjector
~SimplifierFoldAndIlInjector,~SimplifierFoldAndIlInjector(),1,TestCompiler,SimplifierFoldAndIlInjector
IlVerifier,IlVerifier(const class TR::IlVerifier &),1,TR,IlVerifier
IlVerifier,IlVerifier(),0,TR,IlVerifier
IlVerifier,IlVerifier(class TR::IlVerifier &&),0,TR,IlVerifier
SimplifierFoldAndIlVerifier,SimplifierFoldAndIlVerifier(class TestCompiler::SimplifierFoldAndIlVerifier &&),1,TestCompiler,SimplifierFoldAndIlVerifier
SimplifierFoldAndIlVerifier,SimplifierFoldAndIlVerifier(const class TestCompiler::SimplifierFoldAndIlVerifier &),0,TestCompiler,SimplifierFoldAndIlVerifier
SimplifierFoldAndIlVerifier,SimplifierFoldAndIlVerifier(),0,TestCompiler,SimplifierFoldAndIlVerifier
operator=,operator=(const class TR::IlVerifier &),1,TR,IlVerifier
operator=,operator=(class TR::IlVerifier &&),0,TR,IlVerifier
operator=,operator=(const class TestCompiler::SimplifierFoldAndIlVerifier &),0,TestCompiler,SimplifierFoldAndIlVerifier
operator=,operator=(class TestCompiler::SimplifierFoldAndIlVerifier &&),0,TestCompiler,SimplifierFoldAndIlVerifier
verify,verify(TR::ResolvedMethodSymbol *),1,TR,IlVerifier
verifyNode,verifyNode(TR::Node *),1,TestCompiler,SimplifierFoldAndIlVerifier
~IlVerifier,~IlVerifier(),1,TR,IlVerifier
~SimplifierFoldAndIlVerifier,~SimplifierFoldAndIlVerifier(),1,TestCompiler,SimplifierFoldAndIlVerifier
DefineFunction,DefineFunction(char *,char *,char *,int32_t,TR::IlType **,TR::IlType *),1,TestCompiler,MethodInfo
DefineILInjector,DefineILInjector(TR::IlInjector *),1,TestCompiler,MethodInfo
MethodInfo,MethodInfo(class TestCompiler::MethodInfo &&),1,TestCompiler,MethodInfo
MethodInfo,MethodInfo(),0,TestCompiler,MethodInfo
MethodInfo,MethodInfo(const class TestCompiler::MethodInfo &),0,TestCompiler,MethodInfo
ResolvedMethod,ResolvedMethod(),1,TestCompiler,MethodInfo
SimplifierFoldAndInfo,SimplifierFoldAndInfo(const class TestCompiler::SimplifierFoldAndInfo &),1,TestCompiler,SimplifierFoldAndInfo
SimplifierFoldAndInfo,SimplifierFoldAndInfo(class TestCompiler::SimplifierFoldAndInfo &&),0,TestCompiler,SimplifierFoldAndInfo
SimplifierFoldAndInfo,SimplifierFoldAndInfo(class TestCompiler::TestDriver *),0,TestCompiler,SimplifierFoldAndInfo
~MethodInfo,~MethodInfo(),1,TestCompiler,MethodInfo
~SimplifierFoldAndInfo,~SimplifierFoldAndInfo(),1,TestCompiler,SimplifierFoldAndInfo
compileBitwiseTestMethods,compileBitwiseTestMethods(),1,TestCompiler,S390OpCodesTest
compileDirectCallTestMethods,compileDirectCallTestMethods(),1,TestCompiler,S390OpCodesTest
compileDisabledBitwiseTestMethods,compileDisabledBitwiseTestMethods(),1,TestCompiler,S390OpCodesTest
compileDisabledCompareOpCodesTestMethods,compileDisabledCompareOpCodesTestMethods(),1,TestCompiler,S390OpCodesTest
compileDisabledDirectCallTestMethods,compileDisabledDirectCallTestMethods(),1,TestCompiler,S390OpCodesTest
compileDisabledIntegerArithmeticTestMethods,compileDisabledIntegerArithmeticTestMethods(),1,TestCompiler,S390OpCodesTest
compileDisabledMemoryOperationTestMethods,compileDisabledMemoryOperationTestMethods(),1,TestCompiler,S390OpCodesTest
compileDisabledS390ConvertToAddressOpCodesTests,compileDisabledS390ConvertToAddressOpCodesTests(),1,TestCompiler,S390OpCodesTest
compileDisabledTernaryTestMethods,compileDisabledTernaryTestMethods(),1,TestCompiler,S390OpCodesTest
compileDisabledUnaryTestMethods,compileDisabledUnaryTestMethods(),1,TestCompiler,S390OpCodesTest
compileFloatArithmeticTestMethods,compileFloatArithmeticTestMethods(),1,TestCompiler,S390OpCodesTest
invokeDirectCallTests,invokeDirectCallTests(),1,TestCompiler,S390OpCodesTest
invokeDisabledBitwiseTests,invokeDisabledBitwiseTests(),1,TestCompiler,S390OpCodesTest
invokeDisabledCompareOpCodesTests,invokeDisabledCompareOpCodesTests(),1,TestCompiler,S390OpCodesTest
invokeDisabledDirectCallTests,invokeDisabledDirectCallTests(),1,TestCompiler,S390OpCodesTest
invokeDisabledIntegerArithmeticTests,invokeDisabledIntegerArithmeticTests(),1,TestCompiler,S390OpCodesTest
invokeDisabledMemoryOperationTests,invokeDisabledMemoryOperationTests(),1,TestCompiler,S390OpCodesTest
invokeDisabledS390ConvertToAddressOpCodesTests,invokeDisabledS390ConvertToAddressOpCodesTests(),1,TestCompiler,S390OpCodesTest
invokeDisabledTernaryTests,invokeDisabledTernaryTests(),1,TestCompiler,S390OpCodesTest
invokeDisabledUnaryTests,invokeDisabledUnaryTests(),1,TestCompiler,S390OpCodesTest
invokeFloatArithmeticTests,invokeFloatArithmeticTests(),1,TestCompiler,S390OpCodesTest
operator=,operator=(class TestCompiler::S390OpCodesTest &&),0,TestCompiler,S390OpCodesTest
operator=,operator=(const class TestCompiler::S390OpCodesTest &),0,TestCompiler,S390OpCodesTest
~S390OpCodesTest,~S390OpCodesTest(),1,TestCompiler,S390OpCodesTest
AllIlVerifier,AllIlVerifier(class TR::AllIlVerifier &&),1,TR,AllIlVerifier
IlVerifier,IlVerifier(),1,TR,IlVerifier
IlVerifier,IlVerifier(const class TR::IlVerifier &),0,TR,IlVerifier
add,add(TR::IlVerifier *),1,TR,AllIlVerifier
operator=,operator=(class TR::AllIlVerifier &&),0,TR,AllIlVerifier
operator=,operator=(const class TR::AllIlVerifier &),0,TR,AllIlVerifier
~AllIlVerifier,~AllIlVerifier(),1,TR,AllIlVerifier
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,IlInjector
operator delete,operator delete(void *,TR::Region &),0,OMR,IlInjector
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,IlInjector
NoCodegenVerifier,NoCodegenVerifier(const class TR::NoCodegenVerifier &),1,TR,NoCodegenVerifier
NoCodegenVerifier,NoCodegenVerifier(TR::IlVerifier *),0,TR,NoCodegenVerifier
NoCodegenVerifier,NoCodegenVerifier(class TR::NoCodegenVerifier &&),0,TR,NoCodegenVerifier
getReturnCode,getReturnCode(),1,TR,NoCodegenVerifier
hasRun,hasRun(),1,TR,NoCodegenVerifier
operator=,operator=(class TR::NoCodegenVerifier &&),0,TR,NoCodegenVerifier
operator=,operator=(const class TR::NoCodegenVerifier &),0,TR,NoCodegenVerifier
~NoCodegenVerifier,~NoCodegenVerifier(),1,TR,NoCodegenVerifier
MethodBuilder,MethodBuilder(TR::TypeDictionary *,OMR::VirtualMachineState *),1,OMR,MethodBuilder
MethodBuilder,MethodBuilder(const class OMR::MethodBuilder &),0,OMR,MethodBuilder
getSignature,getSignature(TR::IlType **),1,OMR,MethodBuilder
getSignature,getSignature(int32_t,TR::IlType **),0,OMR,MethodBuilder
JITX86OpCodesTest_BitwiseTest_Test,JITX86OpCodesTest_BitwiseTest_Test(),1,,
JITX86OpCodesTest_BitwiseTest_Test,JITX86OpCodesTest_BitwiseTest_Test(const class JITX86OpCodesTest_BitwiseTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_BitwiseTest_Test &),0,,
~JITX86OpCodesTest_BitwiseTest_Test,~JITX86OpCodesTest_BitwiseTest_Test(),1,,
JITX86OpCodesTest_CompareTest_Test,JITX86OpCodesTest_CompareTest_Test(),1,,
JITX86OpCodesTest_CompareTest_Test,JITX86OpCodesTest_CompareTest_Test(const class JITX86OpCodesTest_CompareTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_CompareTest_Test &),0,,
~JITX86OpCodesTest_CompareTest_Test,~JITX86OpCodesTest_CompareTest_Test(),1,,
JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test,JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test(),1,,
JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test,JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test(const class JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test &),0,,
~JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test,~JITX86OpCodesTest_DISABLED_X86ConvertOpCodesTests_Test(),1,,
JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test,JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test(),1,,
JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test,JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test(const class JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test &),0,,
~JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test,~JITX86OpCodesTest_DISABLED_X86IntegerArithmeticTest_Test(),1,,
JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test,JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test(),1,,
JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test,JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test(const class JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test &),0,,
~JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test,~JITX86OpCodesTest_DISABLED_X86MemoryOpCodesTests_Test(),1,,
JITX86OpCodesTest_DISABLED_X86UnaryTest_Test,JITX86OpCodesTest_DISABLED_X86UnaryTest_Test(),1,,
JITX86OpCodesTest_DISABLED_X86UnaryTest_Test,JITX86OpCodesTest_DISABLED_X86UnaryTest_Test(const class JITX86OpCodesTest_DISABLED_X86UnaryTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_DISABLED_X86UnaryTest_Test &),0,,
~JITX86OpCodesTest_DISABLED_X86UnaryTest_Test,~JITX86OpCodesTest_DISABLED_X86UnaryTest_Test(),1,,
JITX86OpCodesTest_DirectCallTest_Test,JITX86OpCodesTest_DirectCallTest_Test(),1,,
JITX86OpCodesTest_DirectCallTest_Test,JITX86OpCodesTest_DirectCallTest_Test(const class JITX86OpCodesTest_DirectCallTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_DirectCallTest_Test &),0,,
~JITX86OpCodesTest_DirectCallTest_Test,~JITX86OpCodesTest_DirectCallTest_Test(),1,,
JITX86OpCodesTest_FloatArithmeticTest_Test,JITX86OpCodesTest_FloatArithmeticTest_Test(),1,,
JITX86OpCodesTest_FloatArithmeticTest_Test,JITX86OpCodesTest_FloatArithmeticTest_Test(const class JITX86OpCodesTest_FloatArithmeticTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_FloatArithmeticTest_Test &),0,,
~JITX86OpCodesTest_FloatArithmeticTest_Test,~JITX86OpCodesTest_FloatArithmeticTest_Test(),1,,
JITX86OpCodesTest_IntegerArithmeticTest_Test,JITX86OpCodesTest_IntegerArithmeticTest_Test(),1,,
JITX86OpCodesTest_IntegerArithmeticTest_Test,JITX86OpCodesTest_IntegerArithmeticTest_Test(const class JITX86OpCodesTest_IntegerArithmeticTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_IntegerArithmeticTest_Test &),0,,
~JITX86OpCodesTest_IntegerArithmeticTest_Test,~JITX86OpCodesTest_IntegerArithmeticTest_Test(),1,,
JITX86OpCodesTest_MemoryOperationTest_Test,JITX86OpCodesTest_MemoryOperationTest_Test(),1,,
JITX86OpCodesTest_MemoryOperationTest_Test,JITX86OpCodesTest_MemoryOperationTest_Test(const class JITX86OpCodesTest_MemoryOperationTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_MemoryOperationTest_Test &),0,,
~JITX86OpCodesTest_MemoryOperationTest_Test,~JITX86OpCodesTest_MemoryOperationTest_Test(),1,,
JITX86OpCodesTest_TernaryTest_Test,JITX86OpCodesTest_TernaryTest_Test(),1,,
JITX86OpCodesTest_TernaryTest_Test,JITX86OpCodesTest_TernaryTest_Test(const class JITX86OpCodesTest_TernaryTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_TernaryTest_Test &),0,,
~JITX86OpCodesTest_TernaryTest_Test,~JITX86OpCodesTest_TernaryTest_Test(),1,,
JITX86OpCodesTest_UnaryTest_Test,JITX86OpCodesTest_UnaryTest_Test(),1,,
JITX86OpCodesTest_UnaryTest_Test,JITX86OpCodesTest_UnaryTest_Test(const class JITX86OpCodesTest_UnaryTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_UnaryTest_Test &),0,,
~JITX86OpCodesTest_UnaryTest_Test,~JITX86OpCodesTest_UnaryTest_Test(),1,,
JITX86OpCodesTest_UnsupportedOpCodesTest_Test,JITX86OpCodesTest_UnsupportedOpCodesTest_Test(),1,,
JITX86OpCodesTest_UnsupportedOpCodesTest_Test,JITX86OpCodesTest_UnsupportedOpCodesTest_Test(const class JITX86OpCodesTest_UnsupportedOpCodesTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_UnsupportedOpCodesTest_Test &),0,,
~JITX86OpCodesTest_UnsupportedOpCodesTest_Test,~JITX86OpCodesTest_UnsupportedOpCodesTest_Test(),1,,
JITX86OpCodesTest_X86AddressTest_Test,JITX86OpCodesTest_X86AddressTest_Test(),1,,
JITX86OpCodesTest_X86AddressTest_Test,JITX86OpCodesTest_X86AddressTest_Test(const class JITX86OpCodesTest_X86AddressTest_Test &),0,,
operator=,operator=(const class JITX86OpCodesTest_X86AddressTest_Test &),0,,
~JITX86OpCodesTest_X86AddressTest_Test,~JITX86OpCodesTest_X86AddressTest_Test(),1,,
X86OpCodesTest,X86OpCodesTest(),1,TestCompiler,X86OpCodesTest
X86OpCodesTest,X86OpCodesTest(class TestCompiler::X86OpCodesTest &&),0,TestCompiler,X86OpCodesTest
X86OpCodesTest,X86OpCodesTest(const class TestCompiler::X86OpCodesTest &),0,TestCompiler,X86OpCodesTest
compileBitwiseTestMethods,compileBitwiseTestMethods(),1,TestCompiler,X86OpCodesTest
compileDirectCallTestMethods,compileDirectCallTestMethods(),1,TestCompiler,X86OpCodesTest
compileDisabledConvertOpCodesTest,compileDisabledConvertOpCodesTest(),1,TestCompiler,X86OpCodesTest
compileDisabledIntegerArithmeticTestMethods,compileDisabledIntegerArithmeticTestMethods(),1,TestCompiler,X86OpCodesTest
compileDisabledMemoryOpCodesTest,compileDisabledMemoryOpCodesTest(),1,TestCompiler,X86OpCodesTest
compileFloatArithmeticTestMethods,compileFloatArithmeticTestMethods(),1,TestCompiler,X86OpCodesTest
invokeDirectCallTests,invokeDirectCallTests(),1,TestCompiler,X86OpCodesTest
invokeDisabledConvertOpCodesTest,invokeDisabledConvertOpCodesTest(),1,TestCompiler,X86OpCodesTest
invokeDisabledIntegerArithmeticTests,invokeDisabledIntegerArithmeticTests(),1,TestCompiler,X86OpCodesTest
invokeDisabledMemoryOpCodesTest,invokeDisabledMemoryOpCodesTest(),1,TestCompiler,X86OpCodesTest
invokeFloatArithmeticTests,invokeFloatArithmeticTests(),1,TestCompiler,X86OpCodesTest
operator=,operator=(const class TestCompiler::X86OpCodesTest &),0,TestCompiler,X86OpCodesTest
operator=,operator=(class TestCompiler::X86OpCodesTest &&),0,TestCompiler,X86OpCodesTest
~X86OpCodesTest,~X86OpCodesTest(),1,TestCompiler,X86OpCodesTest
Environment,Environment(),0,testing,Environment
OMRTestEnv,OMRTestEnv(),1,TestCompiler,OMRTestEnv
OMRTestEnv,OMRTestEnv(class TestCompiler::OMRTestEnv &&),0,TestCompiler,OMRTestEnv
OMRTestEnv,OMRTestEnv(const class TestCompiler::OMRTestEnv &),0,TestCompiler,OMRTestEnv
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,Recompilation
CodeCache,CodeCache(class OMR::CodeCache &&),1,OMR,CodeCache
CodeCache,CodeCache(const class OMR::CodeCache &),0,OMR,CodeCache
JitConfig,JitConfig(),1,TR,JitConfig
JitConfig,JitConfig(class TR::JitConfig &&),0,TR,JitConfig
DataType,DataType(),1,OMR,DataType
CompilationStrategy,CompilationStrategy(class TR::CompilationStrategy &&),1,TR,CompilationStrategy
CompilationStrategy,CompilationStrategy(const class TR::CompilationStrategy &),0,TR,CompilationStrategy
CompilationStrategy,CompilationStrategy(),0,TR,CompilationStrategy
DefaultCompilationStrategy,DefaultCompilationStrategy(class TR::DefaultCompilationStrategy &&),1,TR,DefaultCompilationStrategy
DefaultCompilationStrategy,DefaultCompilationStrategy(const class TR::DefaultCompilationStrategy &),0,TR,DefaultCompilationStrategy
DefaultCompilationStrategy,DefaultCompilationStrategy(),0,TR,DefaultCompilationStrategy
adjustOptimizationPlan,adjustOptimizationPlan(struct TR_MethodToBeCompiled *,int32_t),1,TR,CompilationStrategy
beforeCodeGen,beforeCodeGen(class TR_OptimizationPlan *,TR::Recompilation *),1,TR,CompilationStrategy
enableSwitchToProfiling,enableSwitchToProfiling(),1,TR,CompilationStrategy
jitPersistentAlloc,jitPersistentAlloc(size_t),1,TR,DefaultCompilationStrategy
jitPersistentFree,jitPersistentFree(void *),1,TR,DefaultCompilationStrategy
operator delete,operator delete(void *,size_t),1,TR,DefaultCompilationStrategy
operator new,operator new(size_t,TR::Internal::PersistentNewType),1,TR,DefaultCompilationStrategy
operator new,operator new(size_t,class TR_PersistentMemory *),0,TR,DefaultCompilationStrategy
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,TR,DefaultCompilationStrategy
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,TR,DefaultCompilationStrategy
operator=,operator=(const class TR::CompilationStrategy &),1,TR,CompilationStrategy
operator=,operator=(class TR::CompilationStrategy &&),0,TR,CompilationStrategy
operator=,operator=(class TR::DefaultCompilationStrategy &&),0,TR,DefaultCompilationStrategy
operator=,operator=(const class TR::DefaultCompilationStrategy &),0,TR,DefaultCompilationStrategy
postCompilation,postCompilation(class TR_OptimizationPlan *,TR::Recompilation *),1,TR,CompilationStrategy
processEvent,processEvent(class TR_MethodEvent *,_Bool *),1,TR,CompilationStrategy
shutdown,shutdown(),1,TR,CompilationStrategy
~CompilationStrategy,~CompilationStrategy(),1,TR,CompilationStrategy
~DefaultCompilationStrategy,~DefaultCompilationStrategy(),1,TR,DefaultCompilationStrategy
CodeCacheManager,CodeCacheManager(class OMR::CodeCacheManager &&),1,OMR,CodeCacheManager
CodeCacheManager,CodeCacheManager(const class OMR::CodeCacheManager &),0,OMR,CodeCacheManager
SegmentProvider,SegmentProvider(const class TR::SegmentProvider &),1,TR,SegmentProvider
SegmentProvider,SegmentProvider(size_t),0,TR,SegmentProvider
Compilation,Compilation(class TR::Compilation &),0,TR,Compilation
CompileIlGenRequest,CompileIlGenRequest(class TR::CompileIlGenRequest &&),1,TR,CompileIlGenRequest
CompileIlGenRequest,CompileIlGenRequest(TR::IlGeneratorMethodDetails &),0,TR,CompileIlGenRequest
CompileIlGenRequest,CompileIlGenRequest(const class TR::CompileIlGenRequest &),0,TR,CompileIlGenRequest
DebugSegmentProvider,DebugSegmentProvider(const class TR::DebugSegmentProvider &),1,TR,DebugSegmentProvider
DebugSegmentProvider,DebugSegmentProvider(size_t,TR::RawAllocator),0,TR,DebugSegmentProvider
operator=,operator=(const class TR::DebugSegmentProvider &),0,TR,DebugSegmentProvider
~DebugSegmentProvider,~DebugSegmentProvider(),1,TR,DebugSegmentProvider
FrontEnd,FrontEnd(),1,TestCompiler,FrontEnd
FrontEnd,FrontEnd(const class TestCompiler::FrontEnd &),0,TestCompiler,FrontEnd
TR_Memory,TR_Memory(const class TR_Memory &),1,TR,Memory
AddFallThroughBuilder,AddFallThroughBuilder(TR::BytecodeBuilder *),1,OMR,BytecodeBuilder
AddSuccessorBuilder,AddSuccessorBuilder(TR::BytecodeBuilder **),1,OMR,BytecodeBuilder
AddSuccessorBuilders,AddSuccessorBuilders(uint32_t),1,OMR,BytecodeBuilder
BytecodeBuilder,BytecodeBuilder(class OMR::BytecodeBuilder &&),1,OMR,BytecodeBuilder
BytecodeBuilder,BytecodeBuilder(const class OMR::BytecodeBuilder &),0,OMR,BytecodeBuilder
BytecodeBuilder,BytecodeBuilder(TR::MethodBuilder *,int32_t,char *),0,OMR,BytecodeBuilder
Const,Const(int64_t),1,OMR,IlBuilder
Goto,Goto(TR::IlBuilder *),1,OMR,IlBuilder
Goto,Goto(TR::IlBuilder **),0,OMR,IlBuilder
Goto,Goto(TR::BytecodeBuilder *),0,OMR,BytecodeBuilder
Goto,Goto(TR::BytecodeBuilder **),0,OMR,BytecodeBuilder
IfCmpEqual,IfCmpEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpEqual,IfCmpEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpEqualZero,IfCmpEqualZero(TR::BytecodeBuilder *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpEqualZero,IfCmpEqualZero(TR::BytecodeBuilder **,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpGreaterOrEqual,IfCmpGreaterOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpGreaterOrEqual,IfCmpGreaterOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpGreaterThan,IfCmpGreaterThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpGreaterThan,IfCmpGreaterThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpLessOrEqual,IfCmpLessOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpLessOrEqual,IfCmpLessOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpLessThan,IfCmpLessThan(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpLessThan,IfCmpLessThan(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpLessThan,IfCmpLessThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpLessThan,IfCmpLessThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpNotEqual,IfCmpNotEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpNotEqual,IfCmpNotEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpNotEqualZero,IfCmpNotEqualZero(TR::BytecodeBuilder **,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpNotEqualZero,IfCmpNotEqualZero(TR::BytecodeBuilder *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpUnsignedGreaterOrEqual,IfCmpUnsignedGreaterOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpUnsignedGreaterOrEqual,IfCmpUnsignedGreaterOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpUnsignedGreaterThan,IfCmpUnsignedGreaterThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpUnsignedGreaterThan,IfCmpUnsignedGreaterThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpUnsignedLessOrEqual,IfCmpUnsignedLessOrEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpUnsignedLessOrEqual,IfCmpUnsignedLessOrEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
IfCmpUnsignedLessOrEqual,IfCmpUnsignedLessOrEqual(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpUnsignedLessOrEqual,IfCmpUnsignedLessOrEqual(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpUnsignedLessThan,IfCmpUnsignedLessThan(TR::BytecodeBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
IfCmpUnsignedLessThan,IfCmpUnsignedLessThan(TR::BytecodeBuilder **,TR::IlValue *,TR::IlValue *),0,OMR,BytecodeBuilder
SetCurrentIlGenerator,SetCurrentIlGenerator(),1,OMR,BytecodeBuilder
ShiftL,ShiftL(TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
ShiftL,ShiftL(TR::IlValue *,int8_t),0,OMR,IlBuilder
addAllSuccessorBuildersToWorklist,addAllSuccessorBuildersToWorklist(),1,OMR,BytecodeBuilder
bcIndex,bcIndex(),1,OMR,BytecodeBuilder
initialVMState,initialVMState(),1,OMR,BytecodeBuilder
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,BytecodeBuilder
jitPersistentFree,jitPersistentFree(void *),1,OMR,BytecodeBuilder
name,name(),1,OMR,BytecodeBuilder
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,BytecodeBuilder
operator delete,operator delete(void *,TR::Region &),0,OMR,BytecodeBuilder
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,BytecodeBuilder
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,BytecodeBuilder
operator delete,operator delete(void *,size_t),0,OMR,BytecodeBuilder
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,BytecodeBuilder
operator delete[],operator delete[](void *,TR::Region &),0,OMR,BytecodeBuilder
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,BytecodeBuilder
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,BytecodeBuilder
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,BytecodeBuilder
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,BytecodeBuilder
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,BytecodeBuilder
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,BytecodeBuilder
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,BytecodeBuilder
operator new,operator new(size_t,TR::Region &),0,OMR,BytecodeBuilder
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,BytecodeBuilder
operator new[],operator new[](size_t,class TR_PersistentMemory *),1,OMR,BytecodeBuilder
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,BytecodeBuilder
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,BytecodeBuilder
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,BytecodeBuilder
operator new[],operator new[](size_t,TR::Region &),0,OMR,BytecodeBuilder
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,BytecodeBuilder
operator=,operator=(const class OMR::BytecodeBuilder &),0,OMR,BytecodeBuilder
operator=,operator=(class OMR::BytecodeBuilder &&),0,OMR,BytecodeBuilder
operator=,operator=(const class TR::BytecodeBuilder &),0,TR,BytecodeBuilder
operator=,operator=(class TR::BytecodeBuilder &&),0,TR,BytecodeBuilder
propagateVMState,propagateVMState(OMR::VirtualMachineState *),1,OMR,BytecodeBuilder
setVMState,setVMState(OMR::VirtualMachineState *),1,OMR,BytecodeBuilder
transferVMState,transferVMState(TR::BytecodeBuilder **),1,OMR,BytecodeBuilder
vmState,vmState(),1,OMR,BytecodeBuilder
~BytecodeBuilder,~BytecodeBuilder(),1,OMR,BytecodeBuilder
IlGeneratorMethodDetails,IlGeneratorMethodDetails(),1,OMR,IlGeneratorMethodDetails
IlGeneratorMethodDetails,IlGeneratorMethodDetails(const class OMR::IlGeneratorMethodDetails &),0,OMR,IlGeneratorMethodDetails
operator new,operator new(size_t,TR::IlGeneratorMethodDetails *),1,OMR,IlGeneratorMethodDetails
operator new,operator new(size_t,TR::IlGeneratorMethodDetails &),0,OMR,IlGeneratorMethodDetails
IlType,IlType(const class OMR::IlType &),1,OMR,IlType
IlType,IlType(const char *),0,OMR,IlType
IlValue,IlValue(class TR::IlValue &&),0,TR,IlValue
IlValue,IlValue(const class TR::IlValue &),0,TR,IlValue
~IlValue,~IlValue(),1,OMR,IlValue
DefineLine,DefineLine(int),1,OMR,MethodBuilder
DefineLine,DefineLine(const char *),0,OMR,MethodBuilder
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,MethodBuilder
jitPersistentFree,jitPersistentFree(void *),1,OMR,MethodBuilder
operator delete,operator delete(void *,TR::Region &),1,OMR,MethodBuilder
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,MethodBuilder
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,MethodBuilder
operator delete,operator delete(void *,size_t),0,OMR,MethodBuilder
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,MethodBuilder
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,MethodBuilder
operator delete[],operator delete[](void *,TR::Region &),0,OMR,MethodBuilder
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,MethodBuilder
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,MethodBuilder
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,MethodBuilder
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,MethodBuilder
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,MethodBuilder
operator new,operator new(size_t,TR::Region &),0,OMR,MethodBuilder
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,MethodBuilder
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,MethodBuilder
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,MethodBuilder
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,MethodBuilder
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,MethodBuilder
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,MethodBuilder
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,MethodBuilder
operator new[],operator new[](size_t,TR::Region &),0,OMR,MethodBuilder
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,MethodBuilder
ResolvedMethod,ResolvedMethod(class TestCompiler::ResolvedMethod &&),1,TestCompiler,ResolvedMethod
ResolvedMethod,ResolvedMethod(const class TestCompiler::ResolvedMethod &),0,TestCompiler,ResolvedMethod
CloseStruct,CloseStruct(const char *,size_t),1,OMR,TypeDictionary
CloseStruct,CloseStruct(const char *),0,OMR,TypeDictionary
PointerTo,PointerTo(const char *),1,OMR,TypeDictionary
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,TypeDictionary
TR_MemoryAllocationType,TR_MemoryAllocationType(const class TR_MemoryAllocationType &),1,TR,MemoryAllocationType
TR_MemoryAllocationType,TR_MemoryAllocationType(class TR_MemoryAllocationType &&),0,TR,MemoryAllocationType
Call,Call(const char *,int32_t,TR::IlValue **),1,OMR,IlBuilder
Call,Call(const char *,int32_t),0,OMR,IlBuilder
ComputedCall,ComputedCall(const char *,int32_t),1,OMR,IlBuilder
ComputedCall,ComputedCall(const char *,int32_t,TR::IlValue **),0,OMR,IlBuilder
UnsignedShiftR,UnsignedShiftR(TR::IlValue *,int8_t),1,OMR,IlBuilder
UnsignedShiftR,UnsignedShiftR(TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
newValue,newValue(TR::IlType *,TR::Node *),1,OMR,IlBuilder
newValue,newValue(TR::DataType,TR::Node *),0,OMR,IlBuilder
TR_IlGenerator,TR_IlGenerator(),1,TR,IlGenerator
TR_IlGenerator,TR_IlGenerator(const class TR_IlGenerator &),0,TR,IlGenerator
jitPersistentAlloc,jitPersistentAlloc(size_t),1,OMR,IlBuilder
jitPersistentFree,jitPersistentFree(void *),1,OMR,IlBuilder
operator delete,operator delete(void *,TR::Region &),1,OMR,IlBuilder
operator delete,operator delete(void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlBuilder
operator delete,operator delete(void *,size_t),0,OMR,IlBuilder
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlBuilder
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlBuilder
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,IlBuilder
operator delete[],operator delete[](void *,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlBuilder
operator delete[],operator delete[](void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlBuilder
operator delete[],operator delete[](void *,TR::Region &),0,OMR,IlBuilder
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,IlBuilder
operator new,operator new(size_t,TR::Region &),0,OMR,IlBuilder
operator new,operator new(size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlBuilder
operator new,operator new(size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlBuilder
operator new,operator new(size_t,TR::Internal::PersistentNewType),0,OMR,IlBuilder
operator new,operator new(size_t,TR_ArenaAllocator *),0,OMR,IlBuilder
operator new,operator new(size_t,class TR_PersistentMemory *),0,OMR,IlBuilder
operator new[],operator new[](size_t,class TR_StackMemory,class TR_MemoryBase::ObjectType),1,OMR,IlBuilder
operator new[],operator new[](size_t,class TR_Memory *,enum TR_AllocationKind),0,OMR,IlBuilder
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),0,OMR,IlBuilder
operator new[],operator new[](size_t,class TR_PersistentMemory *),0,OMR,IlBuilder
operator new[],operator new[](size_t,TR::Region &),0,OMR,IlBuilder
operator new[],operator new[](size_t,class TR_HeapMemory,class TR_MemoryBase::ObjectType),0,OMR,IlBuilder
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,TR,CFGNode
operator new[],operator new[](size_t,TR::Internal::PersistentNewType),1,TR,CFGNode
BytecodeBuilder,BytecodeBuilder(class TR::BytecodeBuilder &&),0,TR,BytecodeBuilder
BytecodeBuilder,BytecodeBuilder(const class TR::BytecodeBuilder &),0,TR,BytecodeBuilder
IfCmpEqual,IfCmpEqual(TR::IlBuilder **,TR::IlValue *,TR::IlValue *),1,OMR,IlBuilder
IfCmpEqual,IfCmpEqual(TR::IlBuilder *,TR::IlValue *,TR::IlValue *),0,OMR,IlBuilder
operator delete[],operator delete[](void *,TR::Region &),1,OMR,IlInjector
operator new,operator new(size_t,class TR_Memory *,enum TR_AllocationKind),1,OMR,IlInjector
operator new,operator new(size_t,TR::Region &),0,OMR,IlInjector
CFGEdge,CFGEdge(),1,TR,CFGEdge
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,IlType
operator delete,operator delete(void *,size_t),0,OMR,IlType
operator delete[],operator delete[](void *,TR::Region &),1,OMR,IlType
operator delete[],operator delete[](void *,class TR_StackMemory,class TR_MemoryBase::ObjectType),0,OMR,IlType
IlValue,IlValue(const class OMR::IlValue &),1,OMR,IlValue
operator delete,operator delete(void *,class TR_HeapMemory,class TR_MemoryBase::ObjectType),1,OMR,TypeDictionary
TR_HashTabString,TR_HashTabString(const class TR_HashTabString &),1,TR,HashTabString
TR_HashTabString,TR_HashTabString(class TR_HashTabString &&),0,TR,HashTabString
TR_HashTabString,TR_HashTabString(class TR_Memory *,enum TR_AllocationKind,uint32_t,_Bool),0,TR,HashTabString
IlType,IlType(const class TR::IlType &),0,TR,IlType
PointerType,PointerType(class OMR::PointerType &&),1,OMR,PointerType
PointerType,PointerType(const class OMR::PointerType &),0,OMR,PointerType
PointerType,PointerType(TR::IlType *),0,OMR,PointerType
operator=,operator=(class OMR::PointerType &&),0,OMR,PointerType
operator=,operator=(const class OMR::PointerType &),0,OMR,PointerType
~PointerType,~PointerType(),1,OMR,PointerType
PrimitiveType,PrimitiveType(const class OMR::PrimitiveType &),1,OMR,PrimitiveType
PrimitiveType,PrimitiveType(const char *,TR::DataType),0,OMR,PrimitiveType
operator=,operator=(const class OMR::PrimitiveType &),0,OMR,PrimitiveType
~PrimitiveType,~PrimitiveType(),1,OMR,PrimitiveType
AddField,AddField(const char *,TR::IlType *),1,OMR,StructType
AddField,AddField(const char *,TR::IlType *,size_t),0,OMR,StructType
Close,Close(size_t),1,OMR,StructType
Close,Close(),0,OMR,StructType
StructType,StructType(const class OMR::StructType &),1,OMR,StructType
StructType,StructType(const char *),0,OMR,StructType
clearSymRefs,clearSymRefs(),1,OMR,StructType
findField,findField(const char *),1,OMR,StructType
getFieldOffset,getFieldOffset(const char *),1,OMR,StructType
getFieldSymRef,getFieldSymRef(const char *),1,OMR,StructType
getFieldType,getFieldType(const char *),1,OMR,StructType
operator=,operator=(const class OMR::StructType &),0,OMR,StructType
~StructType,~StructType(),1,OMR,StructType
AddField,AddField(const char *,TR::IlType *),1,OMR,UnionType
Close,Close(),1,OMR,UnionType
UnionType,UnionType(const class OMR::UnionType &),1,OMR,UnionType
UnionType,UnionType(const char *,class TR_Memory *),0,OMR,UnionType
clearSymRefs,clearSymRefs(),1,OMR,UnionType
findField,findField(const char *),1,OMR,UnionType
getFieldSymRef,getFieldSymRef(const char *),1,OMR,UnionType
getFieldType,getFieldType(const char *),1,OMR,UnionType
operator=,operator=(const class OMR::UnionType &),0,OMR,UnionType
~UnionType,~UnionType(),1,OMR,UnionType
~TR_Memory,~TR_Memory(),1,TR,Memory
CacheCriticalSection,CacheCriticalSection(const class OMR::CodeCache::CacheCriticalSection &),1,OMR,CodeCache::CacheCriticalSection
CacheCriticalSection,CacheCriticalSection(class OMR::CodeCache::CacheCriticalSection &&),0,OMR,CodeCache::CacheCriticalSection
CodeCacheMemorySegment,CodeCacheMemorySegment(const class OMR::CodeCacheMemorySegment &),1,OMR,CodeCacheMemorySegment
CodeCacheMemorySegment,CodeCacheMemorySegment(uint8_t *,size_t),0,OMR,CodeCacheMemorySegment
CodeCacheMemorySegment,CodeCacheMemorySegment(uint8_t *,uint8_t *),0,OMR,CodeCacheMemorySegment
CodeCacheMemorySegment,CodeCacheMemorySegment(),0,OMR,CodeCacheMemorySegment
CodeCacheMemorySegment,CodeCacheMemorySegment(class OMR::CodeCacheMemorySegment &&),0,OMR,CodeCacheMemorySegment
adjustAlloc,adjustAlloc(int64_t),1,OMR,CodeCacheMemorySegment
free,free(TR::CodeCacheManager *),1,OMR,CodeCacheMemorySegment
operator new,operator new(size_t,TR::CodeCacheMemorySegment *),1,OMR,CodeCacheMemorySegment
segmentAlloc,segmentAlloc(),1,OMR,CodeCacheMemorySegment
segmentBase,segmentBase(),1,OMR,CodeCacheMemorySegment
segmentTop,segmentTop(),1,OMR,CodeCacheMemorySegment
self,self(),1,OMR,CodeCacheMemorySegment
setSegmentAlloc,setSegmentAlloc(uint8_t *),1,OMR,CodeCacheMemorySegment
setSegmentBase,setSegmentBase(uint8_t *),1,OMR,CodeCacheMemorySegment
setSegmentTop,setSegmentTop(uint8_t *),1,OMR,CodeCacheMemorySegment
TR_FrontEnd,TR_FrontEnd(),1,TR,FrontEnd
CodeCache,CodeCache(class TR::CodeCache &&),0,TR,CodeCache
CodeCache,CodeCache(const class TR::CodeCache &),0,TR,CodeCache
~CodeCache,~CodeCache(),1,OMR,CodeCache
CacheListCriticalSection,CacheListCriticalSection(const class OMR::CodeCacheManager::CacheListCriticalSection &),1,OMR,CodeCacheManager::CacheListCriticalSection
CacheListCriticalSection,CacheListCriticalSection(class OMR::CodeCacheManager::CacheListCriticalSection &&),0,OMR,CodeCacheManager::CacheListCriticalSection
RepositoryMonitorCriticalSection,RepositoryMonitorCriticalSection(const class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &),1,OMR,CodeCacheManager::RepositoryMonitorCriticalSection
RepositoryMonitorCriticalSection,RepositoryMonitorCriticalSection(class OMR::CodeCacheManager::RepositoryMonitorCriticalSection &&),0,OMR,CodeCacheManager::RepositoryMonitorCriticalSection
CodeCacheMemorySegment,CodeCacheMemorySegment(class TR::CodeCacheMemorySegment &&),0,TR,CodeCacheMemorySegment
CodeCacheMemorySegment,CodeCacheMemorySegment(const class TR::CodeCacheMemorySegment &),0,TR,CodeCacheMemorySegment
~CodeCacheMemorySegment,~CodeCacheMemorySegment(),1,OMR,CodeCacheMemorySegment
CodeCacheConfig,CodeCacheConfig(),1,OMR,CodeCacheConfig
CompilerEnv,CompilerEnv(const class TR::CompilerEnv &),0,TR,CompilerEnv
CodeCacheManager,CodeCacheManager(const class TR::CodeCacheManager &),0,TR,CodeCacheManager
CodeCacheManager,CodeCacheManager(class TR::CodeCacheManager &&),0,TR,CodeCacheManager
TR_PersistentMemory,TR_PersistentMemory(const class TR_PersistentMemory &),0,TR,PersistentMemory
operator delete,operator delete(void *,class TR_Memory *,enum TR_AllocationKind),1,OMR,IlInjector
DebugEnv,DebugEnv(class OMR::DebugEnv &&),1,OMR,DebugEnv
DebugEnv,DebugEnv(),0,OMR,DebugEnv
